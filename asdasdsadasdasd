! function(e, n) {
	"object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define("guify", [], n) : "object" == typeof exports ? exports.guify = n() : e.guify = n()
}(this, (function() {
	return function(e) {
		function n(o) {
			if (t[o]) return t[o].exports;
			var i = t[o] = {
				i: o,
				l: !1,
				exports: {}
			};
			return e[o].call(i.exports, i, i.exports, n), i.l = !0, i.exports
		}
		var t = {};
		return n.m = e, n.c = t, n.d = function(e, t, o) {
			n.o(e, t) || Object.defineProperty(e, t, {
				configurable: !1,
				enumerable: !0,
				get: o
			})
		}, n.n = function(e) {
			var t = e && e.__esModule ? function() {
				return e.default
			} : function() {
				return e
			};
			return n.d(t, "a", t), t
		}, n.o = function(e, n) {
			return Object.prototype.hasOwnProperty.call(e, n)
		}, n.p = "", n(n.s = 16)
	}([function(e, n, t) {
		function o(e, n, t) {
			var o = l[n];
			if (void 0 === o && (o = r(n)), o) {
				if (void 0 === t) return e.style[o];
				e.style[o] = c(o, t)
			}
		}

		function i(e, n) {
			for (var t in n) n.hasOwnProperty(t) && o(e, t, n[t])
		}

		function r(e) {
			var n = u(e),
				t = s(n);
			return l[n] = l[e] = l[t] = t, t
		}

		function a() {
			2 === arguments.length ? "string" == typeof arguments[1] ? arguments[0].style.cssText = arguments[1] : i(arguments[0], arguments[1]) : o(arguments[0], arguments[1], arguments[2])
		}
		var s = t(18),
			u = t(19),
			l = {
				float: "cssFloat"
			},
			c = t(22);
		e.exports = a, e.exports.set = a, e.exports.get = function(e, n) {
			return Array.isArray(n) ? n.reduce((function(n, t) {
				return n[t] = o(e, t || ""), n
			}), {}) : o(e, n || "")
		}
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.theme = void 0;
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(9),
			a = (function(e) {
				e && e.__esModule
			}(r), function() {
				function e() {
					o(this, e)
				}
				return i(e, [{
					key: "Set",
					value: function(e) {
						Object.assign(this, s, e)
					}
				}]), e
			}()),
			s = {
				name: "BaseTheme",
				colors: {
					menuBarBackground: "black",
					menuBarText: "black",
					panelBackground: "black",
					componentBackground: "black",
					componentBackgroundHover: "black",
					componentForeground: "black",
					componentActive: "black",
					textPrimary: "black",
					textSecondary: "black",
					textHover: "black",
					textActive: "black"
				},
				sizing: {
					menuBarHeight: "25px",
					componentHeight: "20px",
					componentSpacing: "5px",
					labelWidth: "42%"
				}
			};
		n.theme = new a
	}, function(e, n, t) {
		"use strict";
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var o = t(0),
			i = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(o),
			r = function(e, n, t) {
				var o = e.appendChild(document.createElement("div"));
				return o.classList.add("guify-component-container"), (0, i.default)(o, {
					position: "relative",
					"min-height": t.sizing.componentHeight,
					"margin-bottom": t.sizing.componentSpacing
				}), o
			};
		n.default = r, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = t(31);
		e.exports = o, e.exports.csjs = o, e.exports.getCss = t(45)
	}, function(e, n, t) {
		var o;
		! function(n) {
			"use strict";

			function i() {}

			function r(e, n) {
				for (var t = e.length; t--;)
					if (e[t].listener === n) return t;
				return -1
			}

			function a(e) {
				return function() {
					return this[e].apply(this, arguments)
				}
			}

			function s(e) {
				return "function" == typeof e || e instanceof RegExp || !(!e || "object" != typeof e) && s(e.listener)
			}
			var u = i.prototype,
				l = n.EventEmitter;
			u.getListeners = function(e) {
				var n, t, o = this._getEvents();
				if (e instanceof RegExp) {
					n = {};
					for (t in o) o.hasOwnProperty(t) && e.test(t) && (n[t] = o[t])
				} else n = o[e] || (o[e] = []);
				return n
			}, u.flattenListeners = function(e) {
				var n, t = [];
				for (n = 0; n < e.length; n += 1) t.push(e[n].listener);
				return t
			}, u.getListenersAsObject = function(e) {
				var n, t = this.getListeners(e);
				return t instanceof Array && (n = {}, n[e] = t), n || t
			}, u.addListener = function(e, n) {
				if (!s(n)) throw new TypeError("listener must be a function");
				var t, o = this.getListenersAsObject(e),
					i = "object" == typeof n;
				for (t in o) o.hasOwnProperty(t) && -1 === r(o[t], n) && o[t].push(i ? n : {
					listener: n,
					once: !1
				});
				return this
			}, u.on = a("addListener"), u.addOnceListener = function(e, n) {
				return this.addListener(e, {
					listener: n,
					once: !0
				})
			}, u.once = a("addOnceListener"), u.defineEvent = function(e) {
				return this.getListeners(e), this
			}, u.defineEvents = function(e) {
				for (var n = 0; n < e.length; n += 1) this.defineEvent(e[n]);
				return this
			}, u.removeListener = function(e, n) {
				var t, o, i = this.getListenersAsObject(e);
				for (o in i) i.hasOwnProperty(o) && -1 !== (t = r(i[o], n)) && i[o].splice(t, 1);
				return this
			}, u.off = a("removeListener"), u.addListeners = function(e, n) {
				return this.manipulateListeners(!1, e, n)
			}, u.removeListeners = function(e, n) {
				return this.manipulateListeners(!0, e, n)
			}, u.manipulateListeners = function(e, n, t) {
				var o, i, r = e ? this.removeListener : this.addListener,
					a = e ? this.removeListeners : this.addListeners;
				if ("object" != typeof n || n instanceof RegExp)
					for (o = t.length; o--;) r.call(this, n, t[o]);
				else
					for (o in n) n.hasOwnProperty(o) && (i = n[o]) && ("function" == typeof i ? r.call(this, o, i) : a.call(this, o, i));
				return this
			}, u.removeEvent = function(e) {
				var n, t = typeof e,
					o = this._getEvents();
				if ("string" === t) delete o[e];
				else if (e instanceof RegExp)
					for (n in o) o.hasOwnProperty(n) && e.test(n) && delete o[n];
				else delete this._events;
				return this
			}, u.removeAllListeners = a("removeEvent"), u.emitEvent = function(e, n) {
				var t, o, i, r, a = this.getListenersAsObject(e);
				for (r in a)
					if (a.hasOwnProperty(r))
						for (t = a[r].slice(0), i = 0; i < t.length; i++) o = t[i], !0 === o.once && this.removeListener(e, o.listener), o.listener.apply(this, n || []) === this._getOnceReturnValue() && this.removeListener(e, o.listener);
				return this
			}, u.trigger = a("emitEvent"), u.emit = function(e) {
				var n = Array.prototype.slice.call(arguments, 1);
				return this.emitEvent(e, n)
			}, u.setOnceReturnValue = function(e) {
				return this._onceReturnValue = e, this
			}, u._getOnceReturnValue = function() {
				return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue
			}, u._getEvents = function() {
				return this._events || (this._events = {})
			}, i.noConflict = function() {
				return n.EventEmitter = l, i
			}, void 0 !== (o = function() {
				return i
			}.call(n, t, n, e)) && (e.exports = o)
		}("undefined" != typeof window ? window : this || {})
	}, function(e, n, t) {
		"use strict";
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var o = t(0),
			i = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(o);
		n.default = function(e, n, t) {
			var o = e.appendChild(document.createElement("div"));
			(0, i.default)(o, {
				left: 0,
				width: "calc(" + t.sizing.labelWidth + " - 2%)",
				display: "inline-block",
				"margin-right": "2%",
				verticalAlign: "top"
			});
			var r = o.appendChild(document.createElement("div"));
			return r.innerHTML = n, (0, i.default)(r, {
				color: t.colors.textPrimary,
				display: "inline-block",
				verticalAlign: "sub",
				"min-height": t.sizing.componentHeight,
				"line-height": t.sizing.componentHeight
			}), r
		}, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var o = t(0),
			i = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(o);
		n.default = function(e, n, t, o, r) {
			var a = e.appendChild(document.createElement("input"));
			a.type = "text", a.value = n;
			var s = {
				position: "absolute",
				backgroundColor: t.colors.componentBackground,
				paddingLeft: "1%",
				height: t.sizing.componentHeight,
				width: o,
				display: "inline-block",
				overflow: "hidden",
				border: "none",
				"font-family": "'Hack', monospace",
				"font-size": "11px",
				color: t.colors.textSecondary,
				userSelect: "text",
				cursor: "text",
				lineHeight: t.sizing.componentHeight,
				wordBreak: "break-all",
				"box-sizing": "border-box",
				"-moz-box-sizing": "border-box",
				"-webkit-box-sizing": "border-box"
			};
			return r || (s.right = 0), (0, i.default)(a, s), a
		}, e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e, n, t) {
			var o = e.join(" ");
			return Object.create(a.prototype, {
				classNames: {
					value: Object.freeze(e),
					configurable: !1,
					writable: !1,
					enumerable: !0
				},
				unscoped: {
					value: Object.freeze(n),
					configurable: !1,
					writable: !1,
					enumerable: !0
				},
				className: {
					value: o,
					configurable: !1,
					writable: !1,
					enumerable: !0
				},
				selector: {
					value: e.map((function(e) {
						return t ? e : "." + e
					})).join(", "),
					configurable: !1,
					writable: !1,
					enumerable: !0
				},
				toString: {
					value: function() {
						return o
					},
					configurable: !1,
					writeable: !1,
					enumerable: !1
				}
			})
		}

		function i(e) {
			return e instanceof a
		}

		function r(e) {
			return e.reduce((function(e, n) {
				return i(n) && n.classNames.forEach((function(t, o) {
					e[t] = n.unscoped[o]
				})), e
			}), {})
		}

		function a() {}
		e.exports = {
			makeComposition: o,
			isComposition: i,
			ignoreComposition: r
		}
	}, function(e, n, t) {
		"use strict";
		var o = /(\.)(?!\d)([^\s\.,{\[>+~#:)]*)(?![^{]*})/.source,
			i = /(@\S*keyframes\s*)([^{\s]*)/.source,
			r = /(?!(?:[^*\/]|\*[^\/]|\/[^*])*\*+\/)/.source,
			a = new RegExp(o + r, "g"),
			s = new RegExp(i + r, "g");
		e.exports = {
			classRegex: a,
			keyframesRegex: s,
			ignoreComments: r
		}
	}, function(e, n, t) {
		"use strict";
		e.exports = {
			light: {
				name: "Light",
				colors: {
					menuBarBackground: "rgb(227, 227, 227)",
					menuBarText: "rgb(36, 36, 36)",
					panelBackground: "rgb(227, 227, 227)",
					componentBackground: "rgb(204, 204, 204)",
					componentBackgroundHover: "rgb(190, 190, 190)",
					componentForeground: "rgb(105, 105, 105)",
					componentActive: "rgb(36, 36, 36)",
					textPrimary: "rgb(36, 36, 36)",
					textSecondary: "rgb(87, 87, 87)",
					textHover: "rgb(204, 204, 204)",
					textActive: "rgb(204, 204, 204)"
				}
			},
			dark: {
				name: "Dark",
				colors: {
					menuBarBackground: "rgb(35, 35, 35)",
					menuBarText: "rgb(235, 235, 235)",
					panelBackground: "rgb(35, 35, 35)",
					componentBackground: "rgb(54, 54, 54)",
					componentBackgroundHover: "rgb(76, 76, 76)",
					componentForeground: "rgb(112, 112, 112)",
					componentActive: "rgb(202, 202, 202)",
					textPrimary: "rgb(235, 235, 235)",
					textSecondary: "rgb(181, 181, 181)",
					textHover: "rgb(235, 235, 235)",
					textActive: "rgb(54, 54, 54)"
				}
			},
			yorha: {
				name: "YoRHa",
				colors: {
					menuBarBackground: "#CCC8B1",
					menuBarText: "#454138",
					panelBackground: "#CCC8B1",
					componentBackground: "#BAB5A1",
					componentBackgroundHover: "#877F6E",
					componentForeground: "#454138",
					componentActive: "#978F7E",
					textPrimary: "#454138",
					textSecondary: "#454138",
					textHover: "#CCC8B1",
					textActive: "#CCC8B1"
				},
				font: {
					fontFamily: "helvetica, sans-serif",
					fontSize: "14px",
					fontWeight: "100"
				}
			}
		}
	}, function(e, n, t) {
		! function(t) {
			"use strict";

			function o(e) {
				return "number" == typeof e && !isNaN(e) || !!(e = (e || "").toString().trim()) && !isNaN(e)
			}
			void 0 !== e && e.exports && (n = e.exports = o), n.isNumeric = o
		}()
	}, function(e, n, t) {
		"use strict";
		e.exports = " css "
	}, function(e, n, t) {
		"use strict";
		e.exports = t(44)
	}, function(e, n) {
		function t(e, n) {
			if (n = n || {}, void 0 === e) throw new Error(a);
			var t = !0 === n.prepend ? "prepend" : "append",
				s = void 0 !== n.container ? n.container : document.querySelector("head"),
				u = i.indexOf(s); - 1 === u && (u = i.push(s) - 1, r[u] = {});
			var l;
			return void 0 !== r[u] && void 0 !== r[u][t] ? l = r[u][t] : (l = r[u][t] = o(), "prepend" === t ? s.insertBefore(l, s.childNodes[0]) : s.appendChild(l)), 65279 === e.charCodeAt(0) && (e = e.substr(1, e.length)), l.styleSheet ? l.styleSheet.cssText += e : l.textContent += e, l
		}

		function o() {
			var e = document.createElement("style");
			return e.setAttribute("type", "text/css"), e
		}
		var i = [],
			r = [],
			a = "insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).";
		e.exports = t, e.exports.insertCss = t
	}, function(e, n, t) {
		var o;
		! function(i) {
			function r(e, n) {
				if (e = e || "", n = n || {}, e instanceof r) return e;
				if (!(this instanceof r)) return new r(e, n);
				var t = a(e);
				this._originalInput = e, this._r = t.r, this._g = t.g, this._b = t.b, this._a = t.a, this._roundA = D(100 * this._a) / 100, this._format = n.format || t.format, this._gradientType = n.gradientType, this._r < 1 && (this._r = D(this._r)), this._g < 1 && (this._g = D(this._g)), this._b < 1 && (this._b = D(this._b)), this._ok = t.ok, this._tc_id = I++
			}

			function a(e) {
				var n = {
						r: 0,
						g: 0,
						b: 0
					},
					t = 1,
					o = null,
					i = null,
					r = null,
					a = !1,
					u = !1;
				return "string" == typeof e && (e = V(e)), "object" == typeof e && (B(e.r) && B(e.g) && B(e.b) ? (n = s(e.r, e.g, e.b), a = !0, u = "%" === String(e.r).substr(-1) ? "prgb" : "rgb") : B(e.h) && B(e.s) && B(e.v) ? (o = F(e.s), i = F(e.v), n = f(e.h, o, i), a = !0, u = "hsv") : B(e.h) && B(e.s) && B(e.l) && (o = F(e.s), r = F(e.l), n = l(e.h, o, r), a = !0, u = "hsl"), e.hasOwnProperty("a") && (t = e.a)), t = j(t), {
					ok: a,
					format: e.format || u,
					r: q(255, W(n.r, 0)),
					g: q(255, W(n.g, 0)),
					b: q(255, W(n.b, 0)),
					a: t
				}
			}

			function s(e, n, t) {
				return {
					r: 255 * C(e, 255),
					g: 255 * C(n, 255),
					b: 255 * C(t, 255)
				}
			}

			function u(e, n, t) {
				e = C(e, 255), n = C(n, 255), t = C(t, 255);
				var o, i, r = W(e, n, t),
					a = q(e, n, t),
					s = (r + a) / 2;
				if (r == a) o = i = 0;
				else {
					var u = r - a;
					switch (i = s > .5 ? u / (2 - r - a) : u / (r + a), r) {
						case e:
							o = (n - t) / u + (n < t ? 6 : 0);
							break;
						case n:
							o = (t - e) / u + 2;
							break;
						case t:
							o = (e - n) / u + 4
					}
					o /= 6
				}
				return {
					h: o,
					s: i,
					l: s
				}
			}

			function l(e, n, t) {
				function o(e, n, t) {
					return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? e + 6 * (n - e) * t : t < .5 ? n : t < 2 / 3 ? e + (n - e) * (2 / 3 - t) * 6 : e
				}
				var i, r, a;
				if (e = C(e, 360), n = C(n, 100), t = C(t, 100), 0 === n) i = r = a = t;
				else {
					var s = t < .5 ? t * (1 + n) : t + n - t * n,
						u = 2 * t - s;
					i = o(u, s, e + 1 / 3), r = o(u, s, e), a = o(u, s, e - 1 / 3)
				}
				return {
					r: 255 * i,
					g: 255 * r,
					b: 255 * a
				}
			}

			function c(e, n, t) {
				e = C(e, 255), n = C(n, 255), t = C(t, 255);
				var o, i, r = W(e, n, t),
					a = q(e, n, t),
					s = r,
					u = r - a;
				if (i = 0 === r ? 0 : u / r, r == a) o = 0;
				else {
					switch (r) {
						case e:
							o = (n - t) / u + (n < t ? 6 : 0);
							break;
						case n:
							o = (t - e) / u + 2;
							break;
						case t:
							o = (e - n) / u + 4
					}
					o /= 6
				}
				return {
					h: o,
					s: i,
					v: s
				}
			}

			function f(e, n, t) {
				e = 6 * C(e, 360), n = C(n, 100), t = C(t, 100);
				var o = i.floor(e),
					r = e - o,
					a = t * (1 - n),
					s = t * (1 - r * n),
					u = t * (1 - (1 - r) * n),
					l = o % 6;
				return {
					r: 255 * [t, s, a, a, u, t][l],
					g: 255 * [u, t, t, s, a, a][l],
					b: 255 * [a, a, u, t, t, s][l]
				}
			}

			function p(e, n, t, o) {
				var i = [P(D(e).toString(16)), P(D(n).toString(16)), P(D(t).toString(16))];
				return o && i[0].charAt(0) == i[0].charAt(1) && i[1].charAt(0) == i[1].charAt(1) && i[2].charAt(0) == i[2].charAt(1) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join("")
			}

			function h(e, n, t, o, i) {
				var r = [P(D(e).toString(16)), P(D(n).toString(16)), P(D(t).toString(16)), P(T(o))];
				return i && r[0].charAt(0) == r[0].charAt(1) && r[1].charAt(0) == r[1].charAt(1) && r[2].charAt(0) == r[2].charAt(1) && r[3].charAt(0) == r[3].charAt(1) ? r[0].charAt(0) + r[1].charAt(0) + r[2].charAt(0) + r[3].charAt(0) : r.join("")
			}

			function d(e, n, t, o) {
				return [P(T(o)), P(D(e).toString(16)), P(D(n).toString(16)), P(D(t).toString(16))].join("")
			}

			function g(e, n) {
				n = 0 === n ? 0 : n || 10;
				var t = r(e).toHsl();
				return t.s -= n / 100, t.s = O(t.s), r(t)
			}

			function b(e, n) {
				n = 0 === n ? 0 : n || 10;
				var t = r(e).toHsl();
				return t.s += n / 100, t.s = O(t.s), r(t)
			}

			function m(e) {
				return r(e).desaturate(100)
			}

			function y(e, n) {
				n = 0 === n ? 0 : n || 10;
				var t = r(e).toHsl();
				return t.l += n / 100, t.l = O(t.l), r(t)
			}

			function v(e, n) {
				n = 0 === n ? 0 : n || 10;
				var t = r(e).toRgb();
				return t.r = W(0, q(255, t.r - D(-n / 100 * 255))), t.g = W(0, q(255, t.g - D(-n / 100 * 255))), t.b = W(0, q(255, t.b - D(-n / 100 * 255))), r(t)
			}

			function x(e, n) {
				n = 0 === n ? 0 : n || 10;
				var t = r(e).toHsl();
				return t.l -= n / 100, t.l = O(t.l), r(t)
			}

			function w(e, n) {
				var t = r(e).toHsl(),
					o = (t.h + n) % 360;
				return t.h = o < 0 ? 360 + o : o, r(t)
			}

			function k(e) {
				var n = r(e).toHsl();
				return n.h = (n.h + 180) % 360, r(n)
			}

			function _(e) {
				var n = r(e).toHsl(),
					t = n.h;
				return [r(e), r({
					h: (t + 120) % 360,
					s: n.s,
					l: n.l
				}), r({
					h: (t + 240) % 360,
					s: n.s,
					l: n.l
				})]
			}

			function S(e) {
				var n = r(e).toHsl(),
					t = n.h;
				return [r(e), r({
					h: (t + 90) % 360,
					s: n.s,
					l: n.l
				}), r({
					h: (t + 180) % 360,
					s: n.s,
					l: n.l
				}), r({
					h: (t + 270) % 360,
					s: n.s,
					l: n.l
				})]
			}

			function z(e) {
				var n = r(e).toHsl(),
					t = n.h;
				return [r(e), r({
					h: (t + 72) % 360,
					s: n.s,
					l: n.l
				}), r({
					h: (t + 216) % 360,
					s: n.s,
					l: n.l
				})]
			}

			function E(e, n, t) {
				n = n || 6, t = t || 30;
				var o = r(e).toHsl(),
					i = 360 / t,
					a = [r(e)];
				for (o.h = (o.h - (i * n >> 1) + 720) % 360; --n;) o.h = (o.h + i) % 360, a.push(r(o));
				return a
			}

			function M(e, n) {
				n = n || 6;
				for (var t = r(e).toHsv(), o = t.h, i = t.s, a = t.v, s = [], u = 1 / n; n--;) s.push(r({
					h: o,
					s: i,
					v: a
				})), a = (a + u) % 1;
				return s
			}

			function j(e) {
				return e = parseFloat(e), (isNaN(e) || e < 0 || e > 1) && (e = 1), e
			}

			function C(e, n) {
				A(e) && (e = "100%");
				var t = L(e);
				return e = q(n, W(0, parseFloat(e))), t && (e = parseInt(e * n, 10) / 100), i.abs(e - n) < 1e-6 ? 1 : e % n / parseFloat(n)
			}

			function O(e) {
				return q(1, W(0, e))
			}

			function H(e) {
				return parseInt(e, 16)
			}

			function A(e) {
				return "string" == typeof e && -1 != e.indexOf(".") && 1 === parseFloat(e)
			}

			function L(e) {
				return "string" == typeof e && -1 != e.indexOf("%")
			}

			function P(e) {
				return 1 == e.length ? "0" + e : "" + e
			}

			function F(e) {
				return e <= 1 && (e = 100 * e + "%"), e
			}

			function T(e) {
				return i.round(255 * parseFloat(e)).toString(16)
			}

			function R(e) {
				return H(e) / 255
			}

			function B(e) {
				return !!Z.CSS_UNIT.exec(e)
			}

			function V(e) {
				e = e.replace(N, "").replace($, "").toLowerCase();
				var n = !1;
				if (X[e]) e = X[e], n = !0;
				else if ("transparent" == e) return {
					r: 0,
					g: 0,
					b: 0,
					a: 0,
					format: "name"
				};
				var t;
				return (t = Z.rgb.exec(e)) ? {
					r: t[1],
					g: t[2],
					b: t[3]
				} : (t = Z.rgba.exec(e)) ? {
					r: t[1],
					g: t[2],
					b: t[3],
					a: t[4]
				} : (t = Z.hsl.exec(e)) ? {
					h: t[1],
					s: t[2],
					l: t[3]
				} : (t = Z.hsla.exec(e)) ? {
					h: t[1],
					s: t[2],
					l: t[3],
					a: t[4]
				} : (t = Z.hsv.exec(e)) ? {
					h: t[1],
					s: t[2],
					v: t[3]
				} : (t = Z.hsva.exec(e)) ? {
					h: t[1],
					s: t[2],
					v: t[3],
					a: t[4]
				} : (t = Z.hex8.exec(e)) ? {
					r: H(t[1]),
					g: H(t[2]),
					b: H(t[3]),
					a: R(t[4]),
					format: n ? "name" : "hex8"
				} : (t = Z.hex6.exec(e)) ? {
					r: H(t[1]),
					g: H(t[2]),
					b: H(t[3]),
					format: n ? "name" : "hex"
				} : (t = Z.hex4.exec(e)) ? {
					r: H(t[1] + "" + t[1]),
					g: H(t[2] + "" + t[2]),
					b: H(t[3] + "" + t[3]),
					a: R(t[4] + "" + t[4]),
					format: n ? "name" : "hex8"
				} : !!(t = Z.hex3.exec(e)) && {
					r: H(t[1] + "" + t[1]),
					g: H(t[2] + "" + t[2]),
					b: H(t[3] + "" + t[3]),
					format: n ? "name" : "hex"
				}
			}

			function U(e) {
				var n, t;
				return e = e || {
					level: "AA",
					size: "small"
				}, n = (e.level || "AA").toUpperCase(), t = (e.size || "small").toLowerCase(), "AA" !== n && "AAA" !== n && (n = "AA"), "small" !== t && "large" !== t && (t = "small"), {
					level: n,
					size: t
				}
			}
			var N = /^\s+/,
				$ = /\s+$/,
				I = 0,
				D = i.round,
				q = i.min,
				W = i.max,
				G = i.random;
			r.prototype = {
				isDark: function() {
					return this.getBrightness() < 128
				},
				isLight: function() {
					return !this.isDark()
				},
				isValid: function() {
					return this._ok
				},
				getOriginalInput: function() {
					return this._originalInput
				},
				getFormat: function() {
					return this._format
				},
				getAlpha: function() {
					return this._a
				},
				getBrightness: function() {
					var e = this.toRgb();
					return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3
				},
				getLuminance: function() {
					var e, n, t, o, r, a, s = this.toRgb();
					return e = s.r / 255, n = s.g / 255, t = s.b / 255, o = e <= .03928 ? e / 12.92 : i.pow((e + .055) / 1.055, 2.4), r = n <= .03928 ? n / 12.92 : i.pow((n + .055) / 1.055, 2.4), a = t <= .03928 ? t / 12.92 : i.pow((t + .055) / 1.055, 2.4), .2126 * o + .7152 * r + .0722 * a
				},
				setAlpha: function(e) {
					return this._a = j(e), this._roundA = D(100 * this._a) / 100, this
				},
				toHsv: function() {
					var e = c(this._r, this._g, this._b);
					return {
						h: 360 * e.h,
						s: e.s,
						v: e.v,
						a: this._a
					}
				},
				toHsvString: function() {
					var e = c(this._r, this._g, this._b),
						n = D(360 * e.h),
						t = D(100 * e.s),
						o = D(100 * e.v);
					return 1 == this._a ? "hsv(" + n + ", " + t + "%, " + o + "%)" : "hsva(" + n + ", " + t + "%, " + o + "%, " + this._roundA + ")"
				},
				toHsl: function() {
					var e = u(this._r, this._g, this._b);
					return {
						h: 360 * e.h,
						s: e.s,
						l: e.l,
						a: this._a
					}
				},
				toHslString: function() {
					var e = u(this._r, this._g, this._b),
						n = D(360 * e.h),
						t = D(100 * e.s),
						o = D(100 * e.l);
					return 1 == this._a ? "hsl(" + n + ", " + t + "%, " + o + "%)" : "hsla(" + n + ", " + t + "%, " + o + "%, " + this._roundA + ")"
				},
				toHex: function(e) {
					return p(this._r, this._g, this._b, e)
				},
				toHexString: function(e) {
					return "#" + this.toHex(e)
				},
				toHex8: function(e) {
					return h(this._r, this._g, this._b, this._a, e)
				},
				toHex8String: function(e) {
					return "#" + this.toHex8(e)
				},
				toRgb: function() {
					return {
						r: D(this._r),
						g: D(this._g),
						b: D(this._b),
						a: this._a
					}
				},
				toRgbString: function() {
					return 1 == this._a ? "rgb(" + D(this._r) + ", " + D(this._g) + ", " + D(this._b) + ")" : "rgba(" + D(this._r) + ", " + D(this._g) + ", " + D(this._b) + ", " + this._roundA + ")"
				},
				toPercentageRgb: function() {
					return {
						r: D(100 * C(this._r, 255)) + "%",
						g: D(100 * C(this._g, 255)) + "%",
						b: D(100 * C(this._b, 255)) + "%",
						a: this._a
					}
				},
				toPercentageRgbString: function() {
					return 1 == this._a ? "rgb(" + D(100 * C(this._r, 255)) + "%, " + D(100 * C(this._g, 255)) + "%, " + D(100 * C(this._b, 255)) + "%)" : "rgba(" + D(100 * C(this._r, 255)) + "%, " + D(100 * C(this._g, 255)) + "%, " + D(100 * C(this._b, 255)) + "%, " + this._roundA + ")"
				},
				toName: function() {
					return 0 === this._a ? "transparent" : !(this._a < 1) && (Y[p(this._r, this._g, this._b, !0)] || !1)
				},
				toFilter: function(e) {
					var n = "#" + d(this._r, this._g, this._b, this._a),
						t = n,
						o = this._gradientType ? "GradientType = 1, " : "";
					if (e) {
						var i = r(e);
						t = "#" + d(i._r, i._g, i._b, i._a)
					}
					return "progid:DXImageTransform.Microsoft.gradient(" + o + "startColorstr=" + n + ",endColorstr=" + t + ")"
				},
				toString: function(e) {
					var n = !!e;
					e = e || this._format;
					var t = !1,
						o = this._a < 1 && this._a >= 0;
					return n || !o || "hex" !== e && "hex6" !== e && "hex3" !== e && "hex4" !== e && "hex8" !== e && "name" !== e ? ("rgb" === e && (t = this.toRgbString()), "prgb" === e && (t = this.toPercentageRgbString()), "hex" !== e && "hex6" !== e || (t = this.toHexString()), "hex3" === e && (t = this.toHexString(!0)), "hex4" === e && (t = this.toHex8String(!0)), "hex8" === e && (t = this.toHex8String()), "name" === e && (t = this.toName()), "hsl" === e && (t = this.toHslString()), "hsv" === e && (t = this.toHsvString()), t || this.toHexString()) : "name" === e && 0 === this._a ? this.toName() : this.toRgbString()
				},
				clone: function() {
					return r(this.toString())
				},
				_applyModification: function(e, n) {
					var t = e.apply(null, [this].concat([].slice.call(n)));
					return this._r = t._r, this._g = t._g, this._b = t._b, this.setAlpha(t._a), this
				},
				lighten: function() {
					return this._applyModification(y, arguments)
				},
				brighten: function() {
					return this._applyModification(v, arguments)
				},
				darken: function() {
					return this._applyModification(x, arguments)
				},
				desaturate: function() {
					return this._applyModification(g, arguments)
				},
				saturate: function() {
					return this._applyModification(b, arguments)
				},
				greyscale: function() {
					return this._applyModification(m, arguments)
				},
				spin: function() {
					return this._applyModification(w, arguments)
				},
				_applyCombination: function(e, n) {
					return e.apply(null, [this].concat([].slice.call(n)))
				},
				analogous: function() {
					return this._applyCombination(E, arguments)
				},
				complement: function() {
					return this._applyCombination(k, arguments)
				},
				monochromatic: function() {
					return this._applyCombination(M, arguments)
				},
				splitcomplement: function() {
					return this._applyCombination(z, arguments)
				},
				triad: function() {
					return this._applyCombination(_, arguments)
				},
				tetrad: function() {
					return this._applyCombination(S, arguments)
				}
			}, r.fromRatio = function(e, n) {
				if ("object" == typeof e) {
					var t = {};
					for (var o in e) e.hasOwnProperty(o) && (t[o] = "a" === o ? e[o] : F(e[o]));
					e = t
				}
				return r(e, n)
			}, r.equals = function(e, n) {
				return !(!e || !n) && r(e).toRgbString() == r(n).toRgbString()
			}, r.random = function() {
				return r.fromRatio({
					r: G(),
					g: G(),
					b: G()
				})
			}, r.mix = function(e, n, t) {
				t = 0 === t ? 0 : t || 50;
				var o = r(e).toRgb(),
					i = r(n).toRgb(),
					a = t / 100;
				return r({
					r: (i.r - o.r) * a + o.r,
					g: (i.g - o.g) * a + o.g,
					b: (i.b - o.b) * a + o.b,
					a: (i.a - o.a) * a + o.a
				})
			}, r.readability = function(e, n) {
				var t = r(e),
					o = r(n);
				return (i.max(t.getLuminance(), o.getLuminance()) + .05) / (i.min(t.getLuminance(), o.getLuminance()) + .05)
			}, r.isReadable = function(e, n, t) {
				var o, i, a = r.readability(e, n);
				switch (i = !1, o = U(t), o.level + o.size) {
					case "AAsmall":
					case "AAAlarge":
						i = a >= 4.5;
						break;
					case "AAlarge":
						i = a >= 3;
						break;
					case "AAAsmall":
						i = a >= 7
				}
				return i
			}, r.mostReadable = function(e, n, t) {
				var o, i, a, s, u = null,
					l = 0;
				t = t || {}, i = t.includeFallbackColors, a = t.level, s = t.size;
				for (var c = 0; c < n.length; c++)(o = r.readability(e, n[c])) > l && (l = o, u = r(n[c]));
				return r.isReadable(e, u, {
					level: a,
					size: s
				}) || !i ? u : (t.includeFallbackColors = !1, r.mostReadable(e, ["#fff", "#000"], t))
			};
			var X = r.names = {
					aliceblue: "f0f8ff",
					antiquewhite: "faebd7",
					aqua: "0ff",
					aquamarine: "7fffd4",
					azure: "f0ffff",
					beige: "f5f5dc",
					bisque: "ffe4c4",
					black: "000",
					blanchedalmond: "ffebcd",
					blue: "00f",
					blueviolet: "8a2be2",
					brown: "a52a2a",
					burlywood: "deb887",
					burntsienna: "ea7e5d",
					cadetblue: "5f9ea0",
					chartreuse: "7fff00",
					chocolate: "d2691e",
					coral: "ff7f50",
					cornflowerblue: "6495ed",
					cornsilk: "fff8dc",
					crimson: "dc143c",
					cyan: "0ff",
					darkblue: "00008b",
					darkcyan: "008b8b",
					darkgoldenrod: "b8860b",
					darkgray: "a9a9a9",
					darkgreen: "006400",
					darkgrey: "a9a9a9",
					darkkhaki: "bdb76b",
					darkmagenta: "8b008b",
					darkolivegreen: "556b2f",
					darkorange: "ff8c00",
					darkorchid: "9932cc",
					darkred: "8b0000",
					darksalmon: "e9967a",
					darkseagreen: "8fbc8f",
					darkslateblue: "483d8b",
					darkslategray: "2f4f4f",
					darkslategrey: "2f4f4f",
					darkturquoise: "00ced1",
					darkviolet: "9400d3",
					deeppink: "ff1493",
					deepskyblue: "00bfff",
					dimgray: "696969",
					dimgrey: "696969",
					dodgerblue: "1e90ff",
					firebrick: "b22222",
					floralwhite: "fffaf0",
					forestgreen: "228b22",
					fuchsia: "f0f",
					gainsboro: "dcdcdc",
					ghostwhite: "f8f8ff",
					gold: "ffd700",
					goldenrod: "daa520",
					gray: "808080",
					green: "008000",
					greenyellow: "adff2f",
					grey: "808080",
					honeydew: "f0fff0",
					hotpink: "ff69b4",
					indianred: "cd5c5c",
					indigo: "4b0082",
					ivory: "fffff0",
					khaki: "f0e68c",
					lavender: "e6e6fa",
					lavenderblush: "fff0f5",
					lawngreen: "7cfc00",
					lemonchiffon: "fffacd",
					lightblue: "add8e6",
					lightcoral: "f08080",
					lightcyan: "e0ffff",
					lightgoldenrodyellow: "fafad2",
					lightgray: "d3d3d3",
					lightgreen: "90ee90",
					lightgrey: "d3d3d3",
					lightpink: "ffb6c1",
					lightsalmon: "ffa07a",
					lightseagreen: "20b2aa",
					lightskyblue: "87cefa",
					lightslategray: "789",
					lightslategrey: "789",
					lightsteelblue: "b0c4de",
					lightyellow: "ffffe0",
					lime: "0f0",
					limegreen: "32cd32",
					linen: "faf0e6",
					magenta: "f0f",
					maroon: "800000",
					mediumaquamarine: "66cdaa",
					mediumblue: "0000cd",
					mediumorchid: "ba55d3",
					mediumpurple: "9370db",
					mediumseagreen: "3cb371",
					mediumslateblue: "7b68ee",
					mediumspringgreen: "00fa9a",
					mediumturquoise: "48d1cc",
					mediumvioletred: "c71585",
					midnightblue: "191970",
					mintcream: "f5fffa",
					mistyrose: "ffe4e1",
					moccasin: "ffe4b5",
					navajowhite: "ffdead",
					navy: "000080",
					oldlace: "fdf5e6",
					olive: "808000",
					olivedrab: "6b8e23",
					orange: "ffa500",
					orangered: "ff4500",
					orchid: "da70d6",
					palegoldenrod: "eee8aa",
					palegreen: "98fb98",
					paleturquoise: "afeeee",
					palevioletred: "db7093",
					papayawhip: "ffefd5",
					peachpuff: "ffdab9",
					peru: "cd853f",
					pink: "ffc0cb",
					plum: "dda0dd",
					powderblue: "b0e0e6",
					purple: "800080",
					rebeccapurple: "663399",
					red: "f00",
					rosybrown: "bc8f8f",
					royalblue: "4169e1",
					saddlebrown: "8b4513",
					salmon: "fa8072",
					sandybrown: "f4a460",
					seagreen: "2e8b57",
					seashell: "fff5ee",
					sienna: "a0522d",
					silver: "c0c0c0",
					skyblue: "87ceeb",
					slateblue: "6a5acd",
					slategray: "708090",
					slategrey: "708090",
					snow: "fffafa",
					springgreen: "00ff7f",
					steelblue: "4682b4",
					tan: "d2b48c",
					teal: "008080",
					thistle: "d8bfd8",
					tomato: "ff6347",
					turquoise: "40e0d0",
					violet: "ee82ee",
					wheat: "f5deb3",
					white: "fff",
					whitesmoke: "f5f5f5",
					yellow: "ff0",
					yellowgreen: "9acd32"
				},
				Y = r.hexNames = function(e) {
					var n = {};
					for (var t in e) e.hasOwnProperty(t) && (n[e[t]] = t);
					return n
				}(X),
				Z = function() {
					var e = "(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)",
						n = "[\\s|\\(]+(" + e + ")[,|\\s]+(" + e + ")[,|\\s]+(" + e + ")\\s*\\)?",
						t = "[\\s|\\(]+(" + e + ")[,|\\s]+(" + e + ")[,|\\s]+(" + e + ")[,|\\s]+(" + e + ")\\s*\\)?";
					return {
						CSS_UNIT: new RegExp(e),
						rgb: new RegExp("rgb" + n),
						rgba: new RegExp("rgba" + t),
						hsl: new RegExp("hsl" + n),
						hsla: new RegExp("hsla" + t),
						hsv: new RegExp("hsv" + n),
						hsva: new RegExp("hsva" + t),
						hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
						hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
						hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
						hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
					}
				}();
			void 0 !== e && e.exports ? e.exports = r : void 0 !== (o = function() {
				return r
			}.call(n, t, n, e)) && (e.exports = o)
		}(Math)
	}, function(e, n) {
		/*!
		 * screenfull
		 * v5.0.0 - 2019-09-09
		 * (c) Sindre Sorhus; MIT License
		 */
		! function() {
			"use strict";
			var n = "undefined" != typeof window && void 0 !== window.document ? window.document : {},
				t = void 0 !== e && e.exports,
				o = function() {
					for (var e, t = [
							["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
							["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
							["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
							["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
							["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
						], o = 0, i = t.length, r = {}; o < i; o++)
						if ((e = t[o]) && e[1] in n) {
							for (o = 0; o < e.length; o++) r[t[0][o]] = e[o];
							return r
						} return !1
				}(),
				i = {
					change: o.fullscreenchange,
					error: o.fullscreenerror
				},
				r = {
					request: function(e) {
						return new Promise(function(t, i) {
							var r = function() {
								this.off("change", r), t()
							}.bind(this);
							this.on("change", r), e = e || n.documentElement, Promise.resolve(e[o.requestFullscreen]()).catch(i)
						}.bind(this))
					},
					exit: function() {
						return new Promise(function(e, t) {
							if (!this.isFullscreen) return void e();
							var i = function() {
								this.off("change", i), e()
							}.bind(this);
							this.on("change", i), Promise.resolve(n[o.exitFullscreen]()).catch(t)
						}.bind(this))
					},
					toggle: function(e) {
						return this.isFullscreen ? this.exit() : this.request(e)
					},
					onchange: function(e) {
						this.on("change", e)
					},
					onerror: function(e) {
						this.on("error", e)
					},
					on: function(e, t) {
						var o = i[e];
						o && n.addEventListener(o, t, !1)
					},
					off: function(e, t) {
						var o = i[e];
						o && n.removeEventListener(o, t, !1)
					},
					raw: o
				};
			if (!o) return void(t ? e.exports = {
				isEnabled: !1
			} : window.screenfull = {
				isEnabled: !1
			});
			Object.defineProperties(r, {
				isFullscreen: {
					get: function() {
						return Boolean(n[o.fullscreenElement])
					}
				},
				element: {
					enumerable: !0,
					get: function() {
						return n[o.fullscreenElement]
					}
				},
				isEnabled: {
					enumerable: !0,
					get: function() {
						return Boolean(n[o.fullscreenEnabled])
					}
				}
			}), t ? e.exports = r : window.screenfull = r
		}()
	}, function(e, n, t) {
		"use strict";
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var o = t(17),
			i = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(o);
		n.default = i.default, e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var r = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			a = t(0),
			s = o(a),
			u = t(23),
			l = o(u),
			c = t(9),
			f = o(c),
			p = t(1),
			h = t(24),
			d = t(72),
			g = t(74),
			b = t(77),
			m = t(15),
			y = o(m),
			v = t(79),
			x = function() {
				function e(n) {
					i(this, e), this.opts = n, this.hasRoot = void 0 !== n.root, n.width = n.width || 300, n.root = n.root || document.body, n.align = n.align || "left", n.opacity = n.opacity || 1, n.barMode = n.barMode || "offset", n.panelMode = n.panelMode || "inner", n.pollRateMS = n.pollRateMS || 100, n.open = n.open || !1;
					var t = n.theme;
					void 0 === n.theme && (t = f.default.dark), (0, l.default)(n.theme) && (void 0 === f.default[n.theme] ? (console.error("There is no theme preset with the name '" + n.theme + "'! Defaulting to dark theme."), t = f.default.dark) : t = f.default[n.theme]), p.theme.Set(t), this._ConstructElements(), this._LoadStyles(), this.componentManager = new h.ComponentManager, this.loadedComponents = [], this._UpdateComponents()
				}
				return r(e, [{
					key: "_LoadStyles",
					value: function() {
						var e = function(e) {
							var n = document.createElement("style");
							n.setAttribute("type", "text/css"), n.setAttribute("rel", "stylesheet"), n.setAttribute("href", e), document.getElementsByTagName("head")[0].appendChild(n)
						};
						e("//cdn.jsdelivr.net/font-hack/2.019/css/hack.min.css"), p.theme.font ? (p.theme.font.fontURL && e(p.theme.font.fontURL), p.theme.font.fontFamily && (0, s.default)(this.container, "font-family", p.theme.font.fontFamily), p.theme.font.fontSize && (0, s.default)(this.container, "font-size", p.theme.font.fontSize), p.theme.font.fontWeight && (0, s.default)(this.container, "font-weight", p.theme.font.fontWeight)) : (0, s.default)(this.container, "font-family", "'Hack', monospace")
					}
				}, {
					key: "_ConstructElements",
					value: function() {
						var e = this;
						this.container = document.createElement("div"), this.container.classList.add(v["guify-container"]);
						var n = {};
						"overlay" != this.opts.barMode && "above" != this.opts.barMode && "none" != this.opts.barMode || (n.position = "absolute"), this.hasRoot && "above" == this.opts.barMode && (n.top = "-" + p.theme.sizing.menuBarHeight), (0, s.default)(this.container, n), this.opts.root.insertBefore(this.container, this.opts.root.childNodes[0]), "none" !== this.opts.barMode && (this.bar = new d.MenuBar(this.container, this.opts), this.bar.addListener("ontogglepanel", (function() {
							e.panel.ToggleVisible()
						})), this.bar.addListener("onfullscreenrequested", (function() {
							e.ToggleFullscreen()
						}))), this.panel = new g.Panel(this.container, this.opts), "none" === this.opts.barMode || !0 === this.opts.open ? this.panel.SetVisible(!0) : this.panel.SetVisible(!1), this.toaster = new b.ToastArea(this.container, this.opts)
					}
				}, {
					key: "_UpdateComponents",
					value: function() {
						var e = this;
						this.loadedComponents.forEach((function(e) {
							e.binding && e.binding.object[e.binding.property] != e.oldValue && (e.SetValue(e.binding.object[e.binding.property]), e.oldValue = e.binding.object[e.binding.property])
						})), setTimeout((function() {
							window.requestAnimationFrame((function() {
								e._UpdateComponents()
							}))
						}), this.opts.pollRateMS)
					}
				}, {
					key: "Register",
					value: function(e) {
						var n = this,
							t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
						if (!Array.isArray(e)) {
							var o = Object.assign(e, t);
							return this._Register(o)
						}
						e.forEach((function(e) {
							var o = Object.assign(e, t);
							n._Register(o)
						}))
					}
				}, {
					key: "Remove",
					value: function(e) {
						e.Remove(), this.loadedComponents = this.loadedComponents.filter((function(n) {
							return n !== e
						}))
					}
				}, {
					key: "_Register",
					value: function(e) {
						if (e.object && e.property && void 0 === e.object[e.property]) throw new Error("Object " + e.object + " has no property '" + e.property + "'");
						e.object && e.property && (e.initial = e.object[e.property]);
						var n = this.panel.panel;
						if (e.folder) {
							var t = this.loadedComponents.find((function(n) {
								return "folder" === n.opts.type && n.opts.label === e.folder
							}));
							if (!t) throw new Error("No folder exists with the name " + e.folder);
							n = t.folderContainer
						}
						var o = this.componentManager.Create(n, e);
						return e.object && e.property && (o.binding = {
							object: e.object,
							property: e.property
						}), o.on && (o.on("initialized", (function(n) {
							e.onInitialize && e.onInitialize(n)
						})), o.on("input", (function(n) {
							e.object && e.property && (e.object[e.property] = n), e.onChange && e.onChange(n)
						}))), this.loadedComponents.push(o), o
					}
				}, {
					key: "Toast",
					value: function(e) {
						var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
							t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
						this.toaster.CreateToast(e, n, t)
					}
				}, {
					key: "ToggleFullscreen",
					value: function() {
						y.default.isFullscreen ? y.default.exit() : (console.log("Request fullscreen"), y.default.request(this.opts.root))
					}
				}]), e
			}();
		n.default = x, e.exports = n.default
	}, function(e, n) {
		var t = null,
			o = ["Webkit", "Moz", "O", "ms"];
		e.exports = function(e) {
			t || (t = document.createElement("div"));
			var n = t.style;
			if (e in n) return e;
			for (var i = e.charAt(0).toUpperCase() + e.slice(1), r = o.length; r >= 0; r--) {
				var a = o[r] + i;
				if (a in n) return a
			}
			return !1
		}
	}, function(e, n, t) {
		function o(e) {
			return i(e).replace(/\s(\w)/g, (function(e, n) {
				return n.toUpperCase()
			}))
		}
		var i = t(20);
		e.exports = o
	}, function(e, n, t) {
		function o(e) {
			return i(e).replace(/[\W_]+(.|$)/g, (function(e, n) {
				return n ? " " + n : ""
			})).trim()
		}
		var i = t(21);
		e.exports = o
	}, function(e, n) {
		function t(e) {
			return r.test(e) ? e.toLowerCase() : a.test(e) ? (o(e) || e).toLowerCase() : s.test(e) ? i(e).toLowerCase() : e.toLowerCase()
		}

		function o(e) {
			return e.replace(u, (function(e, n) {
				return n ? " " + n : ""
			}))
		}

		function i(e) {
			return e.replace(l, (function(e, n, t) {
				return n + " " + t.toLowerCase().split("").join(" ")
			}))
		}
		e.exports = t;
		var r = /\s/,
			a = /(_|-|\.|:)/,
			s = /([a-z][A-Z]|[A-Z][a-z])/,
			u = /[\W_]+(.|$)/g,
			l = /(.)([A-Z]+)/g
	}, function(e, n) {
		var t = {
			animationIterationCount: !0,
			boxFlex: !0,
			boxFlexGroup: !0,
			boxOrdinalGroup: !0,
			columnCount: !0,
			flex: !0,
			flexGrow: !0,
			flexPositive: !0,
			flexShrink: !0,
			flexNegative: !0,
			flexOrder: !0,
			gridRow: !0,
			gridColumn: !0,
			fontWeight: !0,
			lineClamp: !0,
			lineHeight: !0,
			opacity: !0,
			order: !0,
			orphans: !0,
			tabSize: !0,
			widows: !0,
			zIndex: !0,
			zoom: !0,
			fillOpacity: !0,
			stopOpacity: !0,
			strokeDashoffset: !0,
			strokeOpacity: !0,
			strokeWidth: !0
		};
		e.exports = function(e, n) {
			return "number" != typeof n || t[e] ? n : n + "px"
		}
	}, function(e, n, t) {
		"use strict";
		var o = String.prototype.valueOf,
			i = function(e) {
				try {
					return o.call(e), !0
				} catch (e) {
					return !1
				}
			},
			r = Object.prototype.toString,
			a = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag;
		e.exports = function(e) {
			return "string" == typeof e || "object" == typeof e && (a ? i(e) : "[object String]" === r.call(e))
		}
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.ComponentManager = void 0;
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(25),
			a = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(r),
			s = t(1);
		n.ComponentManager = function() {
			function e() {
				o(this, e), this.uuid = (0, a.default)(), this.components = {
					title: t(28),
					range: t(29),
					button: t(46),
					checkbox: t(48),
					select: t(50),
					text: t(52),
					color: t(53),
					folder: t(65),
					file: t(67),
					display: t(69),
					interval: t(70)
				}
			}
			return i(e, [{
				key: "Create",
				value: function(e, n) {
					if (void 0 === this.components[n.type]) throw new Error("No component type named '" + n.type + "' exists.");
					var t = new this.components[n.type](e, n, s.theme, this.uuid);
					return Object.assign(t, {
						Remove: function() {
							this.container.parentNode.removeChild(this.container)
						}
					}), t
				}
			}]), e
		}()
	}, function(e, n, t) {
		function o(e, n, t) {
			var o = n && t || 0;
			"string" == typeof e && (n = "binary" === e ? new Array(16) : null, e = null), e = e || {};
			var a = e.random || (e.rng || i)();
			if (a[6] = 15 & a[6] | 64, a[8] = 63 & a[8] | 128, n)
				for (var s = 0; s < 16; ++s) n[o + s] = a[s];
			return n || r(a)
		}
		var i = t(26),
			r = t(27);
		e.exports = o
	}, function(e, n) {
		var t = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
		if (t) {
			var o = new Uint8Array(16);
			e.exports = function() {
				return t(o), o
			}
		} else {
			var i = new Array(16);
			e.exports = function() {
				for (var e, n = 0; n < 16; n++) 0 == (3 & n) && (e = 4294967296 * Math.random()), i[n] = e >>> ((3 & n) << 3) & 255;
				return i
			}
		}
	}, function(e, n) {
		function t(e, n) {
			var t = n || 0,
				i = o;
			return [i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], "-", i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]], i[e[t++]]].join("")
		}
		for (var o = [], i = 0; i < 256; ++i) o[i] = (i + 256).toString(16).substr(1);
		e.exports = t
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var i = t(0),
			r = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(i),
			a = function e(n, i, a) {
				o(this, e), this.opts = i, this.container = t(2)(n, i.label, a), (0, r.default)(this.container, {});
				var s = this.container.appendChild(document.createElement("div"));
				(0, r.default)(s, {
					"box-sizing": "border-box",
					width: "100%",
					display: "inline-block",
					height: a.sizing.componentHeight,
					verticalAlign: "top"
				});
				var u = s.appendChild(document.createElement("div"));
				u.innerHTML = "&#9632; " + i.label + " &#9632;", (0, r.default)(u, {
					display: "inline-block",
					verticalAlign: "sub",
					height: a.sizing.componentHeight,
					"line-height": a.sizing.componentHeight,
					"padding-left": "5px",
					"padding-right": "5px",
					"background-color": a.colors.textPrimary,
					color: a.colors.panelBackground
				})
			};
		n.default = a, e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(4),
			l = o(u),
			c = t(0),
			f = o(c),
			p = t(10),
			h = o(p),
			d = t(30),
			g = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					if (u.opts = o, u.container = t(2)(e, o.label, a), t(5)(u.container, o.label, a), o.step && o.steps) throw new Error("Cannot specify both step and steps. Got step = " + o.step + ", steps = ", o.steps);
					if (u.input = u.container.appendChild(document.createElement("input")), u.input.type = "range", u.input.className = d["guify-range"], o.label && u.input.setAttribute("aria-label", o.label + " input"), "log" === o.scale) {
						if (o.max = (0, h.default)(o.max) ? o.max : 100, o.min = (0, h.default)(o.min) ? o.min : .1, o.min * o.max <= 0) throw new Error("Log range min/max must have the same sign and not equal zero. Got min = " + o.min + ", max = " + o.max);
						if (u.logmin = o.min, u.logmax = o.max, u.logsign = o.min > 0 ? 1 : -1, u.logmin = Math.abs(u.logmin), u.logmax = Math.abs(u.logmax), o.min = 0, o.max = 100, (0, h.default)(o.step)) throw new Error("Log may only use steps (integer number of steps), not a step value. Got step =" + o.step);
						if (o.step = 1, o.initial = u.InverseScaleValue((0, h.default)(o.initial) ? o.initial : scaleValue(.5 * (o.min + o.max))), o.initial * u.InverseScaleValue(o.max) <= 0) throw new Error("Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = " + o.initial)
					} else o.max = (0, h.default)(o.max) ? o.max : 100, o.min = (0, h.default)(o.min) ? o.min : 0, o.step = (0, h.default)(o.step) ? o.step : .01, o.initial = (0, h.default)(o.initial) ? o.initial : .5 * (o.min + o.max);
					(0, h.default)(o.steps) && (o.step = (0, h.default)(o.steps) ? (o.max - o.min) / o.steps : o.step);
					var l = Math.round((o.initial - o.min) / o.step);
					return o.initial = o.min + o.step * l, u.input.min = o.min, u.input.max = o.max, u.input.step = o.step, u.input.value = o.initial, (0, f.default)(u.input, {
						width: "calc(100% - " + a.sizing.labelWidth + " - 16% - 0.5em)"
					}), u.valueComponent = t(6)(u.container, u.ScaleValue(o.initial), a, "16%"), o.label && u.valueComponent.setAttribute("aria-label", o.label + " value"), setTimeout((function() {
						u.emit("initialized", parseFloat(u.input.value))
					})), u.userIsModifying = !1, u.input.addEventListener("focus", (function() {
						u.focused = !0
					})), u.input.addEventListener("blur", (function() {
						u.focused = !1
					})), u.input.addEventListener("mouseup", (function() {
						u.input.blur()
					})), u.input.oninput = function(e) {
						var n = u.ScaleValue(parseFloat(e.target.value));
						u.valueComponent.value = u.FormatNumber(n), u.lastValue = n, u.emit("input", n)
					}, u.valueComponent.onchange = function() {
						var e = u.valueComponent.value;
						if (Number(parseFloat(e)) == e) {
							var n = parseFloat(e);
							n = Math.min(Math.max(n, o.min), o.max), n = Math.ceil((n - o.min) / o.step) * o.step + o.min, u.valueComponent.value = n, u.emit("input", n)
						} else u.valueComponent.value = u.lastValue
					}, u
				}
				return a(n, e), s(n, [{
					key: "ScaleValue",
					value: function(e) {
						return "log" === this.opts.scale ? this.logsign * Math.exp(Math.log(this.logmin) + (Math.log(this.logmax) - Math.log(this.logmin)) * e / 100) : e
					}
				}, {
					key: "InverseScaleValue",
					value: function(e) {
						return "log" === this.opts.scale ? 100 * (Math.log(e * this.logsign) - Math.log(this.logmin)) / (Math.log(this.logmax) - Math.log(this.logmin)) : e
					}
				}, {
					key: "SetValue",
					value: function(e) {
						!0 !== this.focused && (this.valueComponent.value = this.FormatNumber(e), this.input.value = this.InverseScaleValue(e), this.lastValue = this.input.value)
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.input.value
					}
				}, {
					key: "FormatNumber",
					value: function(e) {
						return e.toFixed(3).replace(/\.?0*$/, "")
					}
				}]), n
			}(l.default);
		n.default = g, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\ninput[type=range].guify-range {\n    -webkit-appearance: none;\n    width: 100%;\n    height: ", ";\n    margin: 0px 0;\n    padding: 0;\n    display: inline-block;\n}\n\n/* Remove outlines since we'll be adding our own */\ninput[type=range].guify-range:focus {\n    outline: none;\n}\ninput[type=range].guify-range::-moz-focus-outer {\n    border: 0;\n}\n\n/* Webkit */\ninput[type=range].guify-range::-webkit-slider-runnable-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: ", ";\n}\ninput[type=range].guify-range::-webkit-slider-thumb {\n    height: ", ";\n    width: 10px;\n    background: ", ";\n    cursor: ew-resize;\n    -webkit-appearance: none;\n    margin-top: 0px;\n}\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\n    background: ", ";\n    outline: none;\n}\n\n/* Gecko */\ninput[type=range].guify-range::-moz-range-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-moz-range-track {\n    background: ", ";\n}\ninput[type=range].guify-range::-moz-range-thumb {\n    height: ", ";\n    width: 10px;\n    background: ", ";\n    cursor: ew-resize;\n    border: none;\n    border-radius: 0;\n}\n\n/* IE */\ninput[type=range].guify-range::-ms-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n}\ninput[type=range].guify-range::-ms-fill-lower {\n    background: ", ";\n}\ninput[type=range].guify-range::-ms-fill-upper {\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-lower {\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-upper {\n    background: ", ";\n}\ninput[type=range].guify-range::-ms-thumb {\n    width: 10px;\n    border-radius: 0px;\n    background: ", ";\n    cursor: ew-resize;\n    height: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-lower {\n    background: ", ";\n    outline: none;\n}\ninput[type=range].guify-range:focus::-ms-fill-upper {\n    background: ", ";\n    outline: none;\n}\n\n"], ["\n\ninput[type=range].guify-range {\n    -webkit-appearance: none;\n    width: 100%;\n    height: ", ";\n    margin: 0px 0;\n    padding: 0;\n    display: inline-block;\n}\n\n/* Remove outlines since we'll be adding our own */\ninput[type=range].guify-range:focus {\n    outline: none;\n}\ninput[type=range].guify-range::-moz-focus-outer {\n    border: 0;\n}\n\n/* Webkit */\ninput[type=range].guify-range::-webkit-slider-runnable-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: ", ";\n}\ninput[type=range].guify-range::-webkit-slider-thumb {\n    height: ", ";\n    width: 10px;\n    background: ", ";\n    cursor: ew-resize;\n    -webkit-appearance: none;\n    margin-top: 0px;\n}\ninput[type=range].guify-range:focus::-webkit-slider-runnable-track {\n    background: ", ";\n    outline: none;\n}\n\n/* Gecko */\ninput[type=range].guify-range::-moz-range-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-moz-range-track {\n    background: ", ";\n}\ninput[type=range].guify-range::-moz-range-thumb {\n    height: ", ";\n    width: 10px;\n    background: ", ";\n    cursor: ew-resize;\n    border: none;\n    border-radius: 0;\n}\n\n/* IE */\ninput[type=range].guify-range::-ms-track {\n    width: 100%;\n    height: ", ";\n    cursor: ew-resize;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n}\ninput[type=range].guify-range::-ms-fill-lower {\n    background: ", ";\n}\ninput[type=range].guify-range::-ms-fill-upper {\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-lower {\n    background: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-upper {\n    background: ", ";\n}\ninput[type=range].guify-range::-ms-thumb {\n    width: 10px;\n    border-radius: 0px;\n    background: ", ";\n    cursor: ew-resize;\n    height: ", ";\n}\ninput[type=range].guify-range:focus::-ms-fill-lower {\n    background: ", ";\n    outline: none;\n}\ninput[type=range].guify-range:focus::-ms-fill-upper {\n    background: ", ";\n    outline: none;\n}\n\n"]),
			i = t(1),
			r = t(3),
			a = i.theme.colors.componentBackground,
			s = i.theme.colors.componentForeground,
			u = i.theme.colors.componentActive;
		e.exports = r(o, i.theme.sizing.componentHeight, i.theme.sizing.componentHeight, a, i.theme.sizing.componentHeight, s, u, i.theme.sizing.componentHeight, a, u, i.theme.sizing.componentHeight, s, i.theme.sizing.componentHeight, a, a, u, u, s, i.theme.sizing.componentHeight, u, u)
	}, function(e, n, t) {
		"use strict";
		(function(n) {
			function o() {
				var e = Array.prototype.slice.call(arguments),
					t = i.apply(null, e);
				return n.document && r(i.getCss(t)), t
			}
			var i = t(33),
				r = t(13);
			e.exports = o
		}).call(n, t(32))
	}, function(e, n) {
		var t;
		t = function() {
			return this
		}();
		try {
			t = t || Function("return this")() || (0, eval)("this")
		} catch (e) {
			"object" == typeof window && (t = window)
		}
		e.exports = t
	}, function(e, n, t) {
		"use strict";
		var o = t(34);
		e.exports = o(), e.exports.csjs = o, e.exports.noScope = o({
			noscope: !0
		}), e.exports.getCss = t(12)
	}, function(e, n, t) {
		"use strict";
		e.exports = t(35)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return u(e) ? e.selector : e
		}

		function i(e, n) {
			return e.map((function(e, t) {
				return t !== n.length ? e + n[t] : e
			})).join("")
		}

		function r(e, n) {
			return Object.keys(e).reduce((function(t, o) {
				return n[o] || (t[o] = e[o]), t
			}), {})
		}
		var a = t(36),
			s = t(7),
			u = s.isComposition,
			l = s.ignoreComposition,
			c = t(37),
			f = t(38),
			p = t(11),
			h = t(43);
		e.exports = function(e) {
			e = void 0 === e ? {} : e;
			var n = void 0 !== e.noscope && e.noscope;
			return function(e, t) {
				for (var t = Array(arguments.length - 1), s = 1; s < arguments.length; s++) t[s - 1] = arguments[s];
				var u = i(e, t.map(o)),
					d = l(t),
					g = n ? h(u) : f(u, d),
					b = a(g.css),
					m = r(g.classes, d),
					y = r(g.keyframes, d),
					v = b.compositions,
					x = c(m, y, v);
				return Object.defineProperty(x, p, {
					enumerable: !1,
					configurable: !1,
					writeable: !1,
					value: b.css
				})
			}
		}
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e.split(",").map(i)
		}

		function i(e) {
			var n = e.trim();
			return "." === n[0] ? n.substr(1) : n
		}
		var r = (t(7).makeComposition, /\.([^\s]+)(\s+)(extends\s+)(\.[^{]+)/g);
		e.exports = function(e) {
			function n(e, n) {
				var t = i(n[1]),
					r = n[3],
					a = n[4],
					s = n.index + n[1].length + n[2].length,
					u = r.length + a.length;
				return e.css = e.css.slice(0, s) + " " + e.css.slice(s + u + 1), o(a).forEach((function(n) {
					e.compositions[t] || (e.compositions[t] = {}), e.compositions[n] || (e.compositions[n] = {}), e.compositions[t][n] = e.compositions[n]
				})), e
			}
			for (var t, a = []; t = r.exec(e);) a.unshift(t);
			return a.reduce(n, {
				css: e,
				compositions: {}
			})
		}
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			function n(e) {
				return Object.keys(e).forEach((function(i) {
					t[i] || (t[i] = !0, o.push(i), n(e[i]))
				}))
			}
			var t = {},
				o = [];
			return n(e), o
		}
		var i = t(7).makeComposition;
		e.exports = function(e, n, t) {
			var r = Object.keys(n).reduce((function(e, t) {
				var o = n[t];
				return e[o] = i([t], [o], !0), e
			}), {});
			return Object.keys(e).reduce((function(n, r) {
				var a = e[r],
					s = t[r],
					u = s ? o(s) : [],
					l = [r].concat(u),
					c = l.map((function(n) {
						return e[n] ? e[n] : n
					}));
				return n[a] = i(l, c), n
			}), r)
		}
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			function t(e, t) {
				function i(i, r, a) {
					var s = n[a] ? a : o(a);
					return e[t][s] = a, r + s
				}
				var r = a[t];
				return {
					css: e.css.replace(r, i),
					keyframes: e.keyframes,
					classes: e.classes
				}
			}
			var o = i(e),
				a = {
					classes: s,
					keyframes: u
				},
				l = Object.keys(a).reduce(t, {
					css: e,
					keyframes: {},
					classes: {}
				});
			return r(l)
		}
		var i = t(39),
			r = t(42),
			a = t(8),
			s = a.classRegex,
			u = a.keyframesRegex;
		e.exports = o
	}, function(e, n, t) {
		"use strict";
		var o = t(40),
			i = t(41);
		e.exports = function(e) {
			var n = o(i(e));
			return function(e) {
				return e + "_" + n
			}
		}
	}, function(e, n, t) {
		"use strict";
		e.exports = function(e) {
			if (0 === e) return "0";
			for (var n = ""; e > 0;) n = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" [e % 62] + n, e = Math.floor(e / 62);
			return n
		}
	}, function(e, n, t) {
		"use strict";
		e.exports = function(e) {
			for (var n = 5381, t = e.length; t;) n = 33 * n ^ e.charCodeAt(--t);
			return n >>> 0
		}
	}, function(e, n, t) {
		function o(e) {
			var n = Object.keys(e.keyframes).reduce((function(n, t) {
					return n[e.keyframes[t]] = t, n
				}), {}),
				t = Object.keys(n);
			if (t.length) {
				var o = "((?:animation|animation-name)\\s*:[^};]*)(" + t.join("|") + ")([;\\s])" + i,
					r = new RegExp(o, "g");
				return {
					css: e.css.replace(r, (function(e, t, o, i) {
						return t + n[o] + i
					})),
					keyframes: e.keyframes,
					classes: e.classes
				}
			}
			return e
		}
		var i = t(8).ignoreComments;
		e.exports = o
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return {
				css: e,
				keyframes: i(e, s),
				classes: i(e, a)
			}
		}

		function i(e, n) {
			for (var t, o = {}; null !== (t = n.exec(e));) {
				var i = t[2];
				o[i] = i
			}
			return o
		}
		var r = t(8),
			a = r.classRegex,
			s = r.keyframesRegex;
		e.exports = o
	}, function(e, n, t) {
		"use strict";
		var o = t(11);
		e.exports = function(e) {
			return e[o]
		}
	}, function(e, n, t) {
		"use strict";
		e.exports = t(12)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = t(4),
			u = o(s),
			l = t(0),
			c = (o(l), t(47)),
			f = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					u.opts = o, u.container = t(2)(e, o.label, a), t(5)(u.container, "", a);
					var l = u.container.appendChild(document.createElement("button"));
					return l.className = c["guify-button"], l.textContent = o.label, l.addEventListener("click", o.action), l.addEventListener("mouseup", (function() {
						l.blur()
					})), u
				}
				return a(n, e), n
			}(u.default);
		n.default = f, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-button {\n    box-sizing: border-box !important;\n    color: ", ";\n    background-color: ", ";\n\n    position: absolute;\n    text-align: center;\n    height: ", ";\n    line-height: ", ";\n    padding-top: 0px;\n    padding-bottom: 0px;\n    width: calc(100% - ", ");\n    border: none;\n    cursor: pointer;\n    right: 0;\n    font-family: inherit;\n}\n\n\n.guify-button:focus {\n    outline:none;\n}\n.guify-button::-moz-focus-inner {\n    border:0;\n}\n\n.guify-button:hover,\n.guify-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-button:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n"], ["\n\n.guify-button {\n    box-sizing: border-box !important;\n    color: ", ";\n    background-color: ", ";\n\n    position: absolute;\n    text-align: center;\n    height: ", ";\n    line-height: ", ";\n    padding-top: 0px;\n    padding-bottom: 0px;\n    width: calc(100% - ", ");\n    border: none;\n    cursor: pointer;\n    right: 0;\n    font-family: inherit;\n}\n\n\n.guify-button:focus {\n    outline:none;\n}\n.guify-button::-moz-focus-inner {\n    border:0;\n}\n\n.guify-button:hover,\n.guify-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-button:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.textSecondary, i.theme.colors.componentBackground, i.theme.sizing.componentHeight, i.theme.sizing.componentHeight, i.theme.sizing.labelWidth, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.colors.textActive, i.theme.colors.componentActive)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(4),
			l = o(u),
			c = t(0),
			f = (o(c), t(49)),
			p = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					return u.opts = o, u.container = t(2)(e, o.label, a), t(5)(u.container, o.label, a), u.input = u.container.appendChild(document.createElement("input")), u.input.id = "checkbox-" + o.label + s, u.input.type = "checkbox", u.input.checked = o.initial, u.input.className = f["guify-checkbox"], o.label && u.input.setAttribute("aria-label", o.label), u.container.appendChild(document.createElement("label")).htmlFor = u.input.id, setTimeout((function() {
						u.emit("initialized", u.input.checked)
					})), u.input.onchange = function(e) {
						u.emit("input", e.target.checked)
					}, u
				}
				return a(n, e), s(n, [{
					key: "SetValue",
					value: function(e) {
						this.input.checked = e
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.input.checked
					}
				}]), n
			}(l.default);
		n.default = p, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(['\n\ninput[type=checkbox].guify-checkbox {\n    opacity: 0;\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    margin: 0;\n    border-radius: 0;\n    cursor: pointer;\n}\n\ninput[type=checkbox].guify-checkbox + label {\n    margin: 0;\n}\n\ninput[type=checkbox].guify-checkbox + label:before {\n    content: "";\n    display: inline-block;\n    width: ', ";\n    height: ", ";\n    padding: 0;\n    margin: 0;\n    vertical-align: middle;\n    background-color: ", ";\n    border-radius: 0px;\n    cursor: pointer;\n    box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box;\n\n}\n\n/* Hover style */\ninput[type=checkbox].guify-checkbox:hover + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid 4px ", ";\n}\n\n/* Checked style */\ninput[type=checkbox]:checked.guify-checkbox + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid ", " ", ";\n}\n\n/* Focused and checked */\ninput[type=checkbox]:checked.guify-checkbox:focus + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid ", " ", ";\n}\n\n/* Focus and unchecked */\ninput[type=checkbox].guify-checkbox:focus + label:before {\n    background-color: ", ";\n}\n\n"], ['\n\ninput[type=checkbox].guify-checkbox {\n    opacity: 0;\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    margin: 0;\n    border-radius: 0;\n    cursor: pointer;\n}\n\ninput[type=checkbox].guify-checkbox + label {\n    margin: 0;\n}\n\ninput[type=checkbox].guify-checkbox + label:before {\n    content: "";\n    display: inline-block;\n    width: ', ";\n    height: ", ";\n    padding: 0;\n    margin: 0;\n    vertical-align: middle;\n    background-color: ", ";\n    border-radius: 0px;\n    cursor: pointer;\n    box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box;\n\n}\n\n/* Hover style */\ninput[type=checkbox].guify-checkbox:hover + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid 4px ", ";\n}\n\n/* Checked style */\ninput[type=checkbox]:checked.guify-checkbox + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid ", " ", ";\n}\n\n/* Focused and checked */\ninput[type=checkbox]:checked.guify-checkbox:focus + label:before {\n    width: calc(", " - (", " * 2));\n    height: calc(", " - (", " * 2));\n    background-color: ", ";\n    border: solid ", " ", ";\n}\n\n/* Focus and unchecked */\ninput[type=checkbox].guify-checkbox:focus + label:before {\n    background-color: ", ";\n}\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.sizing.componentHeight, i.theme.sizing.componentHeight, i.theme.colors.componentBackground, i.theme.sizing.componentHeight, "4px", i.theme.sizing.componentHeight, "4px", i.theme.colors.componentBackgroundHover, i.theme.colors.componentBackground, i.theme.sizing.componentHeight, "4px", i.theme.sizing.componentHeight, "4px", i.theme.colors.componentForeground, "4px", i.theme.colors.componentBackground, i.theme.sizing.componentHeight, "4px", i.theme.sizing.componentHeight, "4px", i.theme.colors.componentForeground, "4px", i.theme.colors.componentBackgroundHover, i.theme.colors.componentBackgroundHover)
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function i(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function r(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var a = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			s = t(4),
			u = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(s),
			l = t(51),
			c = function(e) {
				function n(e, r, a, s) {
					o(this, n);
					var u = i(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					u.opts = r;
					var c, f, p, h, d, g, b;
					if (u.container = t(2)(e, r.label, a), t(5)(u.container, r.label, a), u.input = document.createElement("select"), u.input.className = l["guify-select-dropdown"], r.label && u.input.setAttribute("aria-label", r.label), f = document.createElement("span"), f.classList.add(l["guify-select-triangle"], l["guify-select-triangle--down"]), p = document.createElement("span"), p.classList.add(l["guify-select-triangle"], l["guify-select-triangle--up"]), u.container.appendChild(f), u.container.appendChild(p), Array.isArray(r.options))
						for (c = 0; c < r.options.length; c++) d = r.options[c], g = document.createElement("option"), g.value = g.textContent = d, r.initial === d && (g.selected = "selected"), u.input.appendChild(g);
					else
						for (b = Object.keys(r.options), c = 0; c < b.length; c++) h = b[c], g = document.createElement("option"), g.value = h, r.initial === h && (g.selected = "selected"), g.textContent = r.options[h], u.input.appendChild(g);
					u.container.appendChild(u.input), u.input.onchange = function(e) {
						u.emit("input", e.target.value)
					};
					var m = function() {
							f.classList.add(l["guify-select-triangle--down-highlight"]), p.classList.add(l["guify-select-triangle--up-highlight"])
						},
						y = function() {
							f.classList.remove(l["guify-select-triangle--down-highlight"]), p.classList.remove(l["guify-select-triangle--up-highlight"])
						},
						v = !1;
					return u.input.addEventListener("mouseover", m), u.input.addEventListener("focus", (function() {
						v = !0, m()
					})), u.input.addEventListener("blur", (function() {
						v = !1, y()
					})), u.input.addEventListener("mouseleave", (function() {
						v || y()
					})), u
				}
				return r(n, e), a(n, [{
					key: "SetValue",
					value: function(e) {
						this.input.value = e
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.input.value
					}
				}]), n
			}(u.default);
		n.default = c, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-select-dropdown {\n    display: inline-block;\n    position: absolute;\n    width: calc(100% - ", ");\n    padding-left: 1.5%;\n    height: ", ";\n    border: none;\n    border-radius: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -o-appearance:none;\n    appearance: none;\n    font-family: inherit;\n    background-color: ", ";\n    color: ", ";\n    box-sizing: border-box !important;\n    -moz-box-sizing: border-box !important;\n    -webkit-box-sizing: border-box !important;\n}\n\n/* Disable default outline since we're providing our own */\n.guify-select-dropdown:focus {\n    outline: none;\n}\n.guify-select-dropdown::-moz-focus-inner {\n    border: 0;\n}\n\n\n.guify-select-dropdown:focus,\n.guify-select-dropdown:hover {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-select-dropdown::-ms-expand {\n    display:none;\n}\n.guify-select-triangle {\n    content: ' ';\n    border-right: 3px solid transparent;\n    border-left: 3px solid transparent;\n    line-height: ", ";\n    position: absolute;\n    right: 2.5%;\n    z-index: 1;\n    pointer-events: none;\n}\n\n.guify-select-triangle--up {\n    bottom: 55%;\n    border-bottom: 5px solid ", ";\n    border-top: 0px transparent;\n}\n\n.guify-select-triangle--down {\n    top: 55%;\n    border-top: 5px solid ", ";\n    border-bottom: 0px transparent;\n}\n\n.guify-select-triangle--up-highlight {\n    border-bottom-color: ", ";\n}\n\n.guify-select-triangle--down-highlight {\n    border-top-color: ", ";\n}\n\n"], ["\n\n.guify-select-dropdown {\n    display: inline-block;\n    position: absolute;\n    width: calc(100% - ", ");\n    padding-left: 1.5%;\n    height: ", ";\n    border: none;\n    border-radius: 0;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -o-appearance:none;\n    appearance: none;\n    font-family: inherit;\n    background-color: ", ";\n    color: ", ";\n    box-sizing: border-box !important;\n    -moz-box-sizing: border-box !important;\n    -webkit-box-sizing: border-box !important;\n}\n\n/* Disable default outline since we're providing our own */\n.guify-select-dropdown:focus {\n    outline: none;\n}\n.guify-select-dropdown::-moz-focus-inner {\n    border: 0;\n}\n\n\n.guify-select-dropdown:focus,\n.guify-select-dropdown:hover {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-select-dropdown::-ms-expand {\n    display:none;\n}\n.guify-select-triangle {\n    content: ' ';\n    border-right: 3px solid transparent;\n    border-left: 3px solid transparent;\n    line-height: ", ";\n    position: absolute;\n    right: 2.5%;\n    z-index: 1;\n    pointer-events: none;\n}\n\n.guify-select-triangle--up {\n    bottom: 55%;\n    border-bottom: 5px solid ", ";\n    border-top: 0px transparent;\n}\n\n.guify-select-triangle--down {\n    top: 55%;\n    border-top: 5px solid ", ";\n    border-bottom: 0px transparent;\n}\n\n.guify-select-triangle--up-highlight {\n    border-bottom-color: ", ";\n}\n\n.guify-select-triangle--down-highlight {\n    border-top-color: ", ";\n}\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.sizing.labelWidth, i.theme.sizing.componentHeight, i.theme.colors.componentBackground, i.theme.colors.textSecondary, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.sizing.componentHeight, i.theme.colors.textSecondary, i.theme.colors.textSecondary, i.theme.colors.textHover, i.theme.colors.textHover)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(4),
			l = o(u),
			c = t(0),
			f = o(c),
			p = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					return u.opts = o, u.container = t(2)(e, o.label, a), t(5)(u.container, o.label, a), u.input = u.container.appendChild(document.createElement("input")), u.input.type = "text", u.input.className = "guify-text", o.initial && (u.input.value = o.initial), o.label && u.input.setAttribute("aria-label", o.label), (0, f.default)(u.input, {
						position: "absolute",
						paddingLeft: "6px",
						height: a.sizing.componentHeight,
						width: "calc(100% - " + a.sizing.labelWidth + ")",
						border: "none",
						background: a.colors.componentBackground,
						color: a.colors.textSecondary,
						fontFamily: "inherit",
						"box-sizing": "border-box",
						"-moz-box-sizing": "border-box",
						"-webkit-box-sizing": "border-box",
						resize: "vertical"
					}), setTimeout((function() {
						u.emit("initialized", u.input.value)
					})), u.input.oninput = function(e) {
						u.emit("input", e.target.value)
					}, u.input.addEventListener("focus", (function() {
						(0, f.default)(u.input, {
							outline: "none"
						}), u.focused = !0
					})), u.input.addEventListener("blur", (function() {
						u.focused = !1
					})), u
				}
				return a(n, e), s(n, [{
					key: "SetValue",
					value: function(e) {
						!0 !== this.focused && (this.input.value = e)
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.input.value
					}
				}]), n
			}(l.default);
		n.default = p, e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(4),
			l = o(u),
			c = t(54),
			f = o(c),
			p = t(0),
			h = o(p),
			d = t(14),
			g = o(d),
			b = t(13),
			m = o(b),
			y = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					u.opts = o, u.theme = a, o.format = o.format || "rgb", o.initial = o.initial || "#123456", u.container = t(2)(e, o.label, a), t(5)(u.container, o.label, a);
					var l = u.container.appendChild(document.createElement("span"));
					l.className = "guify-color-" + s;
					var c = t(6)(u.container, "", a, "calc(100% - " + a.sizing.labelWidth + " - 12% - 0.5em)");
					c.setAttribute("readonly", "true"), l.onmouseover = function() {
						u.picker.$el.style.display = ""
					};
					var p = o.initial;
					switch (o.format) {
						case "rgb":
						case "hex":
							p = (0, g.default)(p).toHexString();
							break;
						case "array":
							p = g.default.fromRatio({
								r: p[0],
								g: p[1],
								b: p[2]
							}).toHexString()
					}
					return u.picker = new f.default({
						el: l,
						color: p,
						background: a.colors.componentBackground,
						width: 125,
						height: 100
					}), (0, h.default)(u.picker.$el, {
						marginTop: a.sizing.componentHeight,
						display: "none",
						position: "absolute"
					}), (0, h.default)(l, {
						position: "relative",
						display: "inline-block",
						width: "12.5%",
						height: a.sizing.componentHeight,
						backgroundColor: u.picker.getHexString()
					}), u.InjectStyles(), l.onmouseout = function(e) {
						u.picker.$el.style.display = "none"
					}, setTimeout((function() {
						u.emit("initialized", p)
					})), u.picker.onChange((function(e) {
						c.value = u.Format(e), (0, h.default)(l, {
							backgroundColor: e
						}), u.emit("input", u.Format(e))
					})), u
				}
				return a(n, e), s(n, [{
					key: "Format",
					value: function(e) {
						switch (this.opts.format) {
							case "rgb":
								return (0, g.default)(e).toRgbString();
							case "hex":
								return (0, g.default)(e).toHexString();
							case "array":
								var n = (0, g.default)(e).toRgb();
								return [n.r / 255, n.g / 255, n.b / 255].map((function(e) {
									return e.toFixed(2)
								}));
							default:
								return e
						}
					}
				}, {
					key: "SetValue",
					value: function(e) {
						this.picker.setColor(e)
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.Format(this.picker.getColor())
					}
				}, {
					key: "InjectStyles",
					value: function() {
						(0, m.default)("\n\n        .Scp {\n            width: 125px;\n            height: 100px;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n                -ms-user-select: none;\n                    user-select: none;\n            position: relative;\n            z-index: 1000;\n            cursor: pointer;\n        }\n        .Scp-saturation {\n            position: relative;\n            width: calc(100% - 25px);\n            height: 100%;\n            background: linear-gradient(to right, #fff 0%, #f00 100%);\n            float: left;\n            margin-right: 5px;\n        }\n        .Scp-brightness {\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(to top, #000 0%, rgba(255,255,255,0) 100%);\n        }\n        .Scp-sbSelector {\n            border: 1px solid;\n            position: absolute;\n            width: 14px;\n            height: 14px;\n            background: #fff;\n            border-radius: 10px;\n            top: -7px;\n            left: -7px;\n            box-sizing: border-box;\n            z-index: 10;\n        }\n        .Scp-hue {\n            width: 20px;\n            height: 100%;\n            position: relative;\n            float: left;\n            background: linear-gradient(to bottom, #f00 0%, #f0f 17%, #00f 34%, #0ff 50%, #0f0 67%, #ff0 84%, #f00 100%);\n        }\n        .Scp-hSelector {\n            position: absolute;\n            background: #fff;\n            border-bottom: 1px solid #000;\n            right: -3px;\n            width: 10px;\n            height: 2px;\n        }\n\n        ")
					}
				}]), n
			}(l.default);
		n.default = y, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		! function() {
			function n(e) {
				return e = e || {}, this.color = null, this.width = 0, this.widthUnits = "px", this.height = 0, this.heightUnits = "px", this.hue = 0, this.position = {
					x: 0,
					y: 0
				}, this.huePosition = 0, this.saturationWidth = 0, this.hueHeight = 0, this.maxHue = 0, this.inputIsNumber = !1, this._onSaturationMouseDown = this._onSaturationMouseDown.bind(this), this._onSaturationMouseMove = this._onSaturationMouseMove.bind(this), this._onSaturationMouseUp = this._onSaturationMouseUp.bind(this), this._onHueMouseDown = this._onHueMouseDown.bind(this), this._onHueMouseMove = this._onHueMouseMove.bind(this), this._onHueMouseUp = this._onHueMouseUp.bind(this), this.$el = document.createElement("div"), this.$el.className = "Scp", this.$el.innerHTML = ['<div class="Scp-saturation">', '<div class="Scp-brightness"></div>', '<div class="Scp-sbSelector"></div>', "</div>", '<div class="Scp-hue">', '<div class="Scp-hSelector"></div>', "</div>"].join(""), this.$saturation = this.$el.querySelector(".Scp-saturation"), this.$hue = this.$el.querySelector(".Scp-hue"), this.$sbSelector = this.$el.querySelector(".Scp-sbSelector"), this.$hSelector = this.$el.querySelector(".Scp-hSelector"), this.$saturation.addEventListener("mousedown", this._onSaturationMouseDown), this.$saturation.addEventListener("touchstart", this._onSaturationMouseDown), this.$hue.addEventListener("mousedown", this._onHueMouseDown), this.$hue.addEventListener("touchstart", this._onHueMouseDown), e.el && this.appendTo(e.el), e.background && this.setBackgroundColor(e.background), e.widthUnits && (this.widthUnits = e.widthUnits), e.heightUnits && (this.heightUnits = e.heightUnits), this.setSize(e.width || 175, e.height || 150), this.setColor(e.color), this
			}

			function o(e, n, t) {
				return Math.min(Math.max(e, n), t)
			}

			function i(e) {
				return e = 0 === e.type.indexOf("touch") ? e.touches[0] : e, {
					x: e.clientX,
					y: e.clientY
				}
			}

			function r(e) {
				return e = "#" + ("00000" + (0 | e).toString(16)).substr(-6)
			}
			var a = t(55),
				s = t(56),
				u = t(14),
				l = t(59);
			a(n.prototype), n.prototype.appendTo = function(e) {
				return e.appendChild(this.$el), this
			}, n.prototype.remove = function() {
				this._onSaturationMouseUp(), this._onHueMouseUp(), this.$saturation.removeEventListener("mousedown", this._onSaturationMouseDown), this.$saturation.removeEventListener("touchstart", this._onSaturationMouseDown), this.$hue.removeEventListener("mousedown", this._onHueMouseDown), this.$hue.removeEventListener("touchstart", this._onHueMouseDown), this.off(), this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)
			}, n.prototype.setColor = function(e) {
				s(e) ? (this.inputIsNumber = !0, e = r(e)) : this.inputIsNumber = !1, this.color = u(e);
				var n = this.color.toHsv();
				return isNaN(n.h) || (this.hue = n.h), this._moveSelectorTo(this.saturationWidth * n.s, (1 - n.v) * this.hueHeight), this._moveHueTo((1 - this.hue / 360) * this.hueHeight), this._updateHue(), this
			}, n.prototype.setSize = function(e, n) {
				return this.width = e, this.height = n, this.$el.style.width = this.width + this.widthUnits, this.$el.style.height = this.height + this.heightUnits, this.saturationWidth = this.width - 25, this.$saturation.style.width = this.saturationWidth + "px", this.hueHeight = this.height, this.maxHue = this.hueHeight - 2, this
			}, n.prototype.setBackgroundColor = function(e) {
				return s(e) && (e = r(e)), this.$el.style.padding = "5px", this.$el.style.background = u(e).toHexString(), this
			}, n.prototype.setNoBackground = function() {
				this.$el.style.padding = "0px", this.$el.style.background = "none"
			}, n.prototype.onChange = function(e) {
				return this.on("update", e), this.emit("update", this.getHexString()), this
			}, n.prototype.getColor = function() {
				return this.inputIsNumber ? this.getHexNumber() : this.color.toString()
			}, n.prototype.getHexString = function() {
				return this.color.toHexString().toUpperCase()
			}, n.prototype.getHexNumber = function() {
				return parseInt(this.color.toHex(), 16)
			}, n.prototype.getRGB = function() {
				return this.color.toRgb()
			}, n.prototype.getHSV = function() {
				return this.color.toHsv()
			}, n.prototype.isDark = function() {
				return this.color.isDark()
			}, n.prototype.isLight = function() {
				return this.color.isLight()
			}, n.prototype._moveSelectorTo = function(e, n) {
				this.position.x = o(e, 0, this.saturationWidth), this.position.y = o(n, 0, this.hueHeight), l(this.$sbSelector, {
					x: this.position.x,
					y: this.position.y
				})
			}, n.prototype._updateColorFromPosition = function() {
				this.color = u({
					h: this.hue,
					s: this.position.x / this.saturationWidth,
					v: 1 - this.position.y / this.hueHeight
				}), this._updateColor()
			}, n.prototype._moveHueTo = function(e) {
				this.huePosition = o(e, 0, this.maxHue), l(this.$hSelector, {
					y: this.huePosition
				})
			}, n.prototype._updateHueFromPosition = function() {
				var e = this.color.toHsv();
				this.hue = 360 * (1 - this.huePosition / this.maxHue), this.color = u({
					h: this.hue,
					s: e.s,
					v: e.v
				}), this._updateHue()
			}, n.prototype._updateHue = function() {
				var e = u({
					h: this.hue,
					s: 1,
					v: 1
				});
				this.$saturation.style.background = "linear-gradient(to right, #fff, " + e.toHexString() + ")", this._updateColor()
			}, n.prototype._updateColor = function() {
				this.$sbSelector.style.background = this.color.toHexString(), this.$sbSelector.style.borderColor = this.color.isDark() ? "#fff" : "#000", this.emit("update", this.color.toHexString())
			}, n.prototype._onSaturationMouseDown = function(e) {
				var n = this.$saturation.getBoundingClientRect(),
					t = i(e).x,
					o = i(e).y;
				this._moveSelectorTo(t - n.left, o - n.top), this._updateColorFromPosition(), window.addEventListener("mouseup", this._onSaturationMouseUp), window.addEventListener("touchend", this._onSaturationMouseUp), window.addEventListener("mousemove", this._onSaturationMouseMove), window.addEventListener("touchmove", this._onSaturationMouseMove), e.preventDefault()
			}, n.prototype._onSaturationMouseMove = function(e) {
				var n = this.$saturation.getBoundingClientRect(),
					t = i(e).x,
					o = i(e).y;
				this._moveSelectorTo(t - n.left, o - n.top), this._updateColorFromPosition()
			}, n.prototype._onSaturationMouseUp = function() {
				window.removeEventListener("mouseup", this._onSaturationMouseUp), window.removeEventListener("touchend", this._onSaturationMouseUp), window.removeEventListener("mousemove", this._onSaturationMouseMove), window.removeEventListener("touchmove", this._onSaturationMouseMove)
			}, n.prototype._onHueMouseDown = function(e) {
				var n = this.$hue.getBoundingClientRect(),
					t = i(e).y;
				this._moveHueTo(t - n.top), this._updateHueFromPosition(), window.addEventListener("mouseup", this._onHueMouseUp), window.addEventListener("touchend", this._onHueMouseUp), window.addEventListener("mousemove", this._onHueMouseMove), window.addEventListener("touchmove", this._onHueMouseMove), e.preventDefault()
			}, n.prototype._onHueMouseMove = function(e) {
				var n = this.$hue.getBoundingClientRect(),
					t = i(e).y;
				this._moveHueTo(t - n.top), this._updateHueFromPosition()
			}, n.prototype._onHueMouseUp = function() {
				window.removeEventListener("mouseup", this._onHueMouseUp), window.removeEventListener("touchend", this._onHueMouseUp), window.removeEventListener("mousemove", this._onHueMouseMove), window.removeEventListener("touchmove", this._onHueMouseMove)
			}, void 0 !== e && e.exports && (e.exports = n)
		}()
	}, function(e, n, t) {
		function o(e) {
			if (e) return i(e)
		}

		function i(e) {
			for (var n in o.prototype) e[n] = o.prototype[n];
			return e
		}
		e.exports = o, o.prototype.on = o.prototype.addEventListener = function(e, n) {
			return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(n), this
		}, o.prototype.once = function(e, n) {
			function t() {
				this.off(e, t), n.apply(this, arguments)
			}
			return t.fn = n, this.on(e, t), this
		}, o.prototype.off = o.prototype.removeListener = o.prototype.removeAllListeners = o.prototype.removeEventListener = function(e, n) {
			if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
			var t = this._callbacks["$" + e];
			if (!t) return this;
			if (1 == arguments.length) return delete this._callbacks["$" + e], this;
			for (var o, i = 0; i < t.length; i++)
				if ((o = t[i]) === n || o.fn === n) {
					t.splice(i, 1);
					break
				} return this
		}, o.prototype.emit = function(e) {
			this._callbacks = this._callbacks || {};
			var n = [].slice.call(arguments, 1),
				t = this._callbacks["$" + e];
			if (t) {
				t = t.slice(0);
				for (var o = 0, i = t.length; o < i; ++o) t[o].apply(this, n)
			}
			return this
		}, o.prototype.listeners = function(e) {
			return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || []
		}, o.prototype.hasListeners = function(e) {
			return !!this.listeners(e).length
		}
	}, function(e, n, t) {
		"use strict";
		/*!
		 * is-number <https://github.com/jonschlinkert/is-number>
		 *
		 * Copyright (c) 2014-2015, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
		var o = t(57);
		e.exports = function(e) {
			var n = o(e);
			if ("string" === n) {
				if (!e.trim()) return !1
			} else if ("number" !== n) return !1;
			return e - e + 1 >= 0
		}
	}, function(e, n, t) {
		var o = t(58),
			i = Object.prototype.toString;
		e.exports = function(e) {
			if (void 0 === e) return "undefined";
			if (null === e) return "null";
			if (!0 === e || !1 === e || e instanceof Boolean) return "boolean";
			if ("string" == typeof e || e instanceof String) return "string";
			if ("number" == typeof e || e instanceof Number) return "number";
			if ("function" == typeof e || e instanceof Function) return "function";
			if (void 0 !== Array.isArray && Array.isArray(e)) return "array";
			if (e instanceof RegExp) return "regexp";
			if (e instanceof Date) return "date";
			var n = i.call(e);
			return "[object RegExp]" === n ? "regexp" : "[object Date]" === n ? "date" : "[object Arguments]" === n ? "arguments" : "[object Error]" === n ? "error" : o(e) ? "buffer" : "[object Set]" === n ? "set" : "[object WeakSet]" === n ? "weakset" : "[object Map]" === n ? "map" : "[object WeakMap]" === n ? "weakmap" : "[object Symbol]" === n ? "symbol" : "[object Int8Array]" === n ? "int8array" : "[object Uint8Array]" === n ? "uint8array" : "[object Uint8ClampedArray]" === n ? "uint8clampedarray" : "[object Int16Array]" === n ? "int16array" : "[object Uint16Array]" === n ? "uint16array" : "[object Int32Array]" === n ? "int32array" : "[object Uint32Array]" === n ? "uint32array" : "[object Float32Array]" === n ? "float32array" : "[object Float64Array]" === n ? "float64array" : "object"
		}
	}, function(e, n) {
		function t(e) {
			return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
		}

		function o(e) {
			return "function" == typeof e.readFloatLE && "function" == typeof e.slice && t(e.slice(0, 0))
		}
		/*!
		 * Determine if an object is a Buffer
		 *
		 * @author   Feross Aboukhadijeh <https://feross.org>
		 * @license  MIT
		 */
		e.exports = function(e) {
			return null != e && (t(e) || o(e) || !!e._isBuffer)
		}
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			var t, o, i, r = [];
			s(n);
			for (t in n) h.call(n, t) && (o = n[t], h.call(f.transform, t) ? (i = f.transform[t], c(o) && (o = o.join(i.separator)), r.push(t + "(" + p(o, i.defaultUnit, i.separator) + ")")) : h.call(f, t) ? (i = f[t], c(o) && (o = o.join(i.separator)), e.style[l(t)] = p(o, i.defaultUnit, i.separator)) : console.warn("dom-transform: this property (`" + t + "`) is not supported."));
			e.style[d] = r.join(" ")
		}

		function i(e, n) {
			var t = e.style;
			if ("string" == typeof n) return h.call(f.transform, n) ? t[d] : t[l(n)];
			n || (n = u());
			var o = {};
			return n.forEach((function(e) {
				o[e] = t[l(e)]
			})), o
		}

		function r(e, n) {
			var t = e.style;
			if ("string" == typeof n) return void(t[l(n)] = null);
			n || (n = u()), n.forEach((function(e) {
				t[l(e)] = null
			}))
		}

		function a() {
			return d.length > 0
		}

		function s(e) {
			var n;
			for (n in e) h.call(g, n) && (e[g[n]] = e[n], delete e[n])
		}

		function u() {
			return Object.keys(f).map((function(e) {
				return e
			}))
		}
		var l = t(60),
			c = t(61),
			f = t(62),
			p = t(63),
			h = Object.prototype.hasOwnProperty,
			d = l("transform"),
			g = {
				x: "translateX",
				y: "translateY",
				z: "translateZ",
				origin: "transformOrigin"
			};
		n = e.exports = o, n.get = i, n.reset = r, n.isSupported = a
	}, function(e, n) {
		function t(e) {
			if (e = e.replace(/-([a-z])/g, (function(e, n) {
					return n.toUpperCase()
				})), void 0 !== r[e]) return e;
			for (var n = e.charAt(0).toUpperCase() + e.slice(1), t = a.length; t--;) {
				var o = a[t] + n;
				if (void 0 !== r[o]) return o
			}
			return e
		}

		function o(e) {
			return e in u ? u[e] : u[e] = t(e)
		}

		function i(e) {
			return e = t(e), s.test(e) && (e = "-" + e.replace(s, "-$1"), s.lastIndex = 0), e.toLowerCase()
		}
		var r = "undefined" != typeof document ? document.createElement("p").style : {},
			a = ["O", "ms", "Moz", "Webkit"],
			s = /([A-Z])/g,
			u = {};
		e.exports = o, e.exports.dash = i
	}, function(e, n) {
		var t = Array.isArray,
			o = Object.prototype.toString;
		e.exports = t || function(e) {
			return !!e && "[object Array]" == o.call(e)
		}
	}, function(e, n, t) {
		"use strict";
		e.exports = {
			transform: {
				translate: {
					defaultUnit: "px"
				},
				translate3d: {
					defaultUnit: "px"
				},
				translateX: {
					defaultUnit: "px"
				},
				translateY: {
					defaultUnit: "px"
				},
				translateZ: {
					defaultUnit: "px"
				},
				scale: {
					defaultUnit: ""
				},
				scale3d: {
					defaultUnit: ""
				},
				scaleX: {
					defaultUnit: ""
				},
				scaleY: {
					defaultUnit: ""
				},
				scaleZ: {
					defaultUnit: ""
				},
				rotate: {
					defaultUnit: "deg"
				},
				rotate3d: {
					defaultUnit: ""
				},
				rotateX: {
					defaultUnit: "deg"
				},
				rotateY: {
					defaultUnit: "deg"
				},
				rotateZ: {
					defaultUnit: "deg"
				},
				skew: {
					defaultUnit: "deg"
				},
				skewX: {
					defaultUnit: "deg"
				},
				skewY: {
					defaultUnit: "deg"
				},
				perspective: {
					defaultUnit: "px"
				},
				matrix: {
					defaultUnit: ""
				},
				matrix3d: {
					defaultUnit: ""
				}
			},
			transformOrigin: {
				defaultUnit: "px",
				separator: " "
			}
		}
	}, function(e, n, t) {
		"use strict";
		var o = t(64),
			i = /^-?\d+(\.\d+)?$/;
		e.exports = function(e, n, t) {
			if (t = t || ",", "number" == typeof e) return "" + e + n;
			var r = new RegExp(t, "g");
			return e.split(r.test(e) ? t : " ").map((function(e) {
				return e = o(e), i.test(e) && (e += n), e
			})).join(t)
		}
	}, function(e, n) {
		function t(e) {
			return e.replace(/^\s*|\s*$/g, "")
		}
		n = e.exports = t, n.left = function(e) {
			return e.replace(/^\s*/, "")
		}, n.right = function(e) {
			return e.replace(/\s*$/, "")
		}
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(0),
			a = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(r),
			s = t(66),
			u = function() {
				function e(n, i, r, u) {
					var l = this;
					o(this, e), this.opts = i, this.container = t(2)(n, i.label, r), this.container.classList.add(s["guify-folder"]), this.container.setAttribute("role", "button"), this.container.setAttribute("tabIndex", "0"), this.arrow = this.container.appendChild(document.createElement("div")), this.arrow.innerHTML = "&#9662;", (0, a.default)(this.arrow, {
						width: "1.5em"
					}), this.label = this.container.appendChild(document.createElement("div")), this.label.innerHTML = i.label, this.container.onclick = function() {
						l.Toggle()
					}, this.container.addEventListener("mouseup", (function() {
						l.container.blur()
					})), this.container.addEventListener("keydown", (function(e) {
						13 !== e.which && 32 !== e.which || l.Toggle()
					})), this.folderContainer = n.appendChild(document.createElement("div")), this.folderContainer.classList.add(s["guify-folder-contents"]), this.open = this.opts.open || !1, this.SetOpen(this.open)
				}
				return i(e, [{
					key: "Toggle",
					value: function() {
						this.open = !this.open, this.SetOpen(this.open)
					}
				}, {
					key: "SetOpen",
					value: function(e) {
						this.open = e, e ? (this.folderContainer.classList.remove(s["guify-folder-closed"]), this.arrow.innerHTML = "&#9662;") : (this.folderContainer.classList.add(s["guify-folder-closed"]), this.arrow.innerHTML = "&#9656;")
					}
				}]), e
			}();
		n.default = u, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-folder {\n    cursor: pointer;\n    padding-left: 0.5em;\n    color: ", ";\n}\n\n.guify-folder div {\n    display: inline-block;\n    vertical-align: sub;\n    line-height: calc(", " + 5px);\n}\n\n.guify-folder:hover,\n.guify-folder:focus {\n    color: ", ";\n    background-color: ", ";\n    outline: none;\n}\n\n\n.guify-folder-contents {\n    display: block;\n    box-sizing: border-box;\n    padding-left: 14px;\n    margin-bottom: 5px;\n    border-left: 2px solid ", ";\n}\n\n.guify-folder-contents.guify-folder-closed {\n    height: 0;\n    display: none;\n}\n\n\n"], ["\n\n.guify-folder {\n    cursor: pointer;\n    padding-left: 0.5em;\n    color: ", ";\n}\n\n.guify-folder div {\n    display: inline-block;\n    vertical-align: sub;\n    line-height: calc(", " + 5px);\n}\n\n.guify-folder:hover,\n.guify-folder:focus {\n    color: ", ";\n    background-color: ", ";\n    outline: none;\n}\n\n\n.guify-folder-contents {\n    display: block;\n    box-sizing: border-box;\n    padding-left: 14px;\n    margin-bottom: 5px;\n    border-left: 2px solid ", ";\n}\n\n.guify-folder-contents.guify-folder-closed {\n    height: 0;\n    display: none;\n}\n\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.textPrimary, i.theme.sizing.componentHeight, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.colors.componentBackground)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(4),
			l = o(u),
			c = t(0),
			f = o(c),
			p = t(68),
			h = function(e) {
				function n(e, o, a, s) {
					i(this, n);
					var u = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					u.opts = o, u.opts.fileReadFunc = u.opts.fileReadFunc || "readAsDataURL", u.file = null, u.fileName = null, u.container = t(2)(e, o.label, a), u.container.classList.add(p["guify-file-container"]), u.container.setAttribute("role", "button"), u.container.setAttribute("tabIndex", "0"), (0, f.default)(u.container, {
						width: "100%",
						"box-sizing": "border-box",
						"-moz-box-sizing": "border-box",
						"-webkit-box-sizing": "border-box",
						height: "unset",
						padding: "8px"
					});
					var l = u.container.appendChild(document.createElement("div"));
					l.innerHTML = o.label, (0, f.default)(l, "padding-bottom", "5px");
					var c = u.container.appendChild(document.createElement("input"));
					c.setAttribute("type", "file"), c.setAttribute("multiple", !1), c.style.display = "none", o.label && c.setAttribute("aria-label", o.label), u.fileLabel = u.container.appendChild(document.createElement("div")), u.fileLabel.innerHTML = "Choose a file...";
					var h = function(e) {
						var n;
						e.dataTransfer ? n = e.dataTransfer.files : e.target && (n = e.target.files);
						var t = (n[0], new FileReader);
						t.onload = function() {
							u.file = t.result, u.fileLabel.innerHTML = n[0].name, u.emit("input", u.file)
						}, t[u.opts.fileReadFunc](n[0])
					};
					return c.addEventListener("change", h), u.container.addEventListener("dragover", (function(e) {
						e.preventDefault(), e.stopPropagation(), u.container.classList.add(p["guify-dragover"])
					})), u.container.addEventListener("dragleave", (function(e) {
						e.preventDefault(), e.stopPropagation(), u.container.classList.remove(p["guify-dragover"])
					})), u.container.addEventListener("drop", (function(e) {
						e.preventDefault(), e.stopPropagation(), u.container.classList.remove(p["guify-dragover"]), h(e)
					})), u.container.onclick = function() {
						c.click()
					}, u.container.addEventListener("keydown", (function(e) {
						13 !== e.which && 32 !== e.which || c.click()
					})), u.container.addEventListener("mouseup", (function() {
						u.container.blur()
					})), u
				}
				return a(n, e), s(n, [{
					key: "SetValue",
					value: function(e) {}
				}, {
					key: "GetValue",
					value: function() {
						return this.file
					}
				}]), n
			}(l.default);
		n.default = h, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-file-container {\n    display: inline-block;\n    outline: none;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-file-container:hover,\n.guify-file-container:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-file-container:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n.guify-dragover {\n    background-color: ", ";\n    box-shadow: inset 0 0 0 3px ", ";\n}\n\n\n"], ["\n\n.guify-file-container {\n    display: inline-block;\n    outline: none;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-file-container:hover,\n.guify-file-container:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-file-container:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n.guify-dragover {\n    background-color: ", ";\n    box-shadow: inset 0 0 0 3px ", ";\n}\n\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.textPrimary, i.theme.colors.componentBackground, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.colors.textActive, i.theme.colors.componentActive, i.theme.colors.componentBackground, i.theme.colors.componentForeground)
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(0),
			a = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(r),
			s = function() {
				function e(n, i, r, s) {
					o(this, e), this.opts = i, this.container = t(2)(n, i.label, r), t(5)(this.container, i.label, r), this.text = this.container.appendChild(document.createElement("div")), (0, a.default)(this.text, {
						display: "inline-block",
						height: "unset",
						width: "calc(100% - " + r.sizing.labelWidth + ")",
						border: "none",
						color: r.colors.textSecondary,
						fontFamily: "inherit",
						"box-sizing": "border-box",
						"-moz-box-sizing": "border-box",
						"-webkit-box-sizing": "border-box",
						verticalAlign: "sub",
						"line-height": r.sizing.componentHeight,
						"user-select": "text"
					}), i.label && this.text.setAttribute("aria-label", i.label)
				}
				return i(e, [{
					key: "SetValue",
					value: function(e) {
						this.text.innerHTML = e.toString()
					}
				}, {
					key: "GetValue",
					value: function() {
						return this.text.innerHTML.toString()
					}
				}]), e
			}();
		n.default = s, e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}

		function s(e, n, t) {
			return Math.min(Math.max(e, n), t)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		});
		var u = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			l = t(4),
			c = o(l),
			f = t(0),
			p = o(f),
			h = t(10),
			d = o(h),
			g = t(71),
			b = function(e) {
				function n(e, o, a, u) {
					i(this, n);
					var l = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					if (l.opts = o, l.container = t(2)(e, o.label, a), t(5)(l.container, o.label, a), o.step && o.steps) throw new Error("Cannot specify both step and steps. Got step = " + o.step + ", steps = ", o.steps);
					if (l.input = l.container.appendChild(document.createElement("span")), l.input.className = g["guify-interval"], l.handle = document.createElement("span"), l.handle.className = g["guify-interval-handle"], l.input.appendChild(l.handle), Array.isArray(o.initial) || (o.initial = []), "log" === o.scale) {
						if (o.max = (0, d.default)(o.max) ? o.max : 100, o.min = (0, d.default)(o.min) ? o.min : .1, o.min * o.max <= 0) throw new Error("Log range min/max must have the same sign and not equal zero. Got min = " + o.min + ", max = " + o.max);
						if (l.logmin = o.min, l.logmax = o.max, l.logsign = o.min > 0 ? 1 : -1, l.logmin = Math.abs(l.logmin), l.logmax = Math.abs(l.logmax), o.min = 0, o.max = 100, (0, d.default)(o.step)) throw new Error("Log may only use steps (integer number of steps), not a step value. Got step =" + o.step);
						if (o.step = 1, o.initial = [l.InverseScaleValue((0, d.default)(o.initial) ? o.initial[0] : scaleValue(o.min + .25 * (o.max - o.min))), l.InverseScaleValue((0, d.default)(o.initial) ? o.initial[1] : scaleValue(o.min + .75 * (o.max - o.min)))], l.ScaleValue(o.initial[0]) * l.ScaleValue(o.max) <= 0 || scaleValue(o.initial[1]) * l.ScaleValue(o.max) <= 0) throw new Error("Log range initial value must have the same sign as min/max and must not equal zero. Got initial value = [" + l.ScaleValue(o.initial[0]) + ", " + l.ScaleValue(o.initial[1]) + "]")
					} else o.max = (0, d.default)(o.max) ? o.max : 100, o.min = (0, d.default)(o.min) ? o.min : 0, o.step = (0, d.default)(o.step) ? o.step : .01, o.initial = [(0, d.default)(o.initial[0]) ? o.initial[0] : .25 * (o.min + o.max), (0, d.default)(o.initial[1]) ? o.initial[1] : .75 * (o.min + o.max)];
					(0, d.default)(o.steps) && (o.step = (0, d.default)(o.steps) ? (o.max - o.min) / o.steps : o.step), o.initial[0] = o.min + o.step * Math.round((o.initial[0] - o.min) / o.step), o.initial[1] = o.min + o.step * Math.round((o.initial[1] - o.min) / o.step), l.value = o.initial, (0, p.default)(l.handle, {
						left: (l.value[0] - o.min) / (o.max - o.min) * 100 + "%",
						right: 100 - (l.value[1] - o.min) / (o.max - o.min) * 100 + "%"
					}), l.lValue = t(6)(l.container, l.ScaleValue(o.initial[0]), a, "11%", !0), l.rValue = t(6)(l.container, l.ScaleValue(o.initial[1]), a, "11%"), o.label && l.lValue.setAttribute("aria-label", o.label + " lower value"), o.label && l.lValue.setAttribute("aria-label", o.label + " upper value"), l.activeIndex = -1, setTimeout((function() {
						var e = l.ScaleValue(l.value[0]),
							n = l.ScaleValue(l.value[1]);
						l.lValue.innerHTML = e, l.rValue.innerHTML = n, l.emit("initialized", [e, n])
					})), l.input.addEventListener("focus", (function() {
						l.focused = !0
					})), l.input.addEventListener("blur", (function() {
						l.focused = !1
					}));
					var c = function(e) {
							return e.pageX - l.input.getBoundingClientRect().left
						},
						f = function(e) {
							var n = s(c(e) / l.input.offsetWidth, 0, 1);
							l.setActiveValue(n)
						},
						h = function e(n) {
							var t = s(c(n) / l.input.offsetWidth, 0, 1);
							l.setActiveValue(t), document.removeEventListener("mousemove", f), document.removeEventListener("mouseup", e), l.activeIndex = -1
						};
					return l.input.addEventListener("mousedown", (function(e) {
						var n = s(c(e) / l.input.offsetWidth, 0, 1),
							t = (l.value[0] - o.min) / (o.max - o.min),
							i = (l.value[1] - o.min) / (o.max - o.min);
						t -= 1e-15 * Math.abs(o.max - o.min), i += 1e-15 * Math.abs(o.max - o.min);
						var r = Math.abs(t - n),
							a = Math.abs(i - n);
						l.activeIndex = r < a ? 0 : 1, console.log(l.activeIndex), document.addEventListener("mousemove", f), document.addEventListener("mouseup", h)
					})), l.input.addEventListener("mouseup", (function() {
						l.input.blur()
					})), l.input.oninput = function() {
						var e = l.ScaleValue(l.value[0]),
							n = l.ScaleValue(l.value[1]);
						l.lValue.value = e, l.rValue.value = n, l.emit("input", [e, n])
					}, l.lValue.onchange = function() {
						var e = l.lValue.value,
							n = parseFloat(l.rValue.value);
						if (Number(parseFloat(e)) == e) {
							var t = parseFloat(e);
							t = Math.min(Math.max(t, o.min), o.max), t = Math.ceil((t - o.min) / o.step) * o.step + o.min, t = Math.min(t, n), l.lValue.value = t, l.emit("input", [t, n]), l.RefreshHandle([t, n])
						} else l.lValue.value = l.lastValue[0]
					}, l.rValue.onchange = function() {
						var e = l.rValue.value,
							n = parseFloat(l.lValue.value);
						if (Number(parseFloat(e)) == e) {
							var t = parseFloat(e);
							t = Math.min(Math.max(t, o.min), o.max), t = Math.ceil((t - o.min) / o.step) * o.step + o.min, t = Math.max(t, n), l.rValue.value = t, l.emit("input", [n, t]), l.RefreshHandle([n, t])
						} else l.rValue.value = l.lastValue[1]
					}, l
				}
				return a(n, e), u(n, [{
					key: "ScaleValue",
					value: function(e) {
						return "log" === this.opts.scale ? this.logsign * Math.exp(Math.log(this.logmin) + (Math.log(this.logmax) - Math.log(this.logmin)) * e / 100) : e
					}
				}, {
					key: "InverseScaleValue",
					value: function(e) {
						return "log" === this.opts.scale ? 100 * (Math.log(e * this.logsign) - Math.log(this.logmin)) / (Math.log(this.logmax) - Math.log(this.logmin)) : e
					}
				}, {
					key: "setActiveValue",
					value: function(e) {
						if (-1 !== this.activeIndex) {
							var n = this.opts,
								t = (this.value[0] - n.min) / (n.max - n.min),
								o = (this.value[1] - n.min) / (n.max - n.min);
							e = 0 === this.activeIndex ? Math.min(o, e) : Math.max(t, e);
							var i = n.min + Math.round((n.max - n.min) * e / n.step) * n.step;
							this.value[this.activeIndex] = i, (0, p.default)(this.handle, {
								left: (this.value[0] - n.min) / (n.max - n.min) * 100 + "%",
								right: 100 - (this.value[1] - n.min) / (n.max - n.min) * 100 + "%"
							}), this.input.oninput()
						}
					}
				}, {
					key: "SetValue",
					value: function(e) {
						!0 !== this.focused && (this.lValue.value = this.FormatNumber(e[0]), this.rValue.value = this.FormatNumber(e[1]), this.lastValue = [this.lValue.value, this.rValue.value])
					}
				}, {
					key: "FormatNumber",
					value: function(e) {
						return e.toFixed(3).replace(/\.?0*$/, "")
					}
				}, {
					key: "GetValue",
					value: function() {
						return [this.lValue.value, this.rValue.value]
					}
				}, {
					key: "RefreshHandle",
					value: function(e) {
						var n = (parseFloat(e[0]) - this.opts.min) / (this.opts.max - this.opts.min) * 100,
							t = 100 - (parseFloat(e[1]) - this.opts.min) / (this.opts.max - this.opts.min) * 100;
						(0, p.default)(this.handle, {
							left: n + "%",
							right: t + "%"
						})
					}
				}]), n
			}(c.default);
		n.default = b, e.exports = n.default
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n.guify-interval {\n    -webkit-appearance: none;\n    position: absolute;\n    height: 20px;\n    margin: 0px 0;\n    width: 33%;\n    left: 54.5%;\n    background-color: ", ";\n    cursor: ew-resize;\n\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.guify-interval-handle {\n    background-color: ", ";\n    position: absolute;\n    height: ", ";\n    min-width: 1px;\n}\n.guify-interval-handle:focus {\n    background: ", ";\n}\n"], ["\n.guify-interval {\n    -webkit-appearance: none;\n    position: absolute;\n    height: 20px;\n    margin: 0px 0;\n    width: 33%;\n    left: 54.5%;\n    background-color: ", ";\n    cursor: ew-resize;\n\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n.guify-interval-handle {\n    background-color: ", ";\n    position: absolute;\n    height: ", ";\n    min-width: 1px;\n}\n.guify-interval-handle:focus {\n    background: ", ";\n}\n"]),
			i = t(1),
			r = t(3),
			a = i.theme.colors.componentBackground,
			s = i.theme.colors.componentForeground,
			u = i.theme.colors.componentActive;
		e.exports = r(o, a, s, i.theme.sizing.componentHeight, u)
	}, function(e, n, t) {
		"use strict";

		function o(e) {
			return e && e.__esModule ? e : {
				default: e
			}
		}

		function i(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}

		function r(e, n) {
			if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
			return !n || "object" != typeof n && "function" != typeof n ? e : n
		}

		function a(e, n) {
			if ("function" != typeof n && null !== n) throw new TypeError("Super expression must either be null or a function, not " + typeof n);
			e.prototype = Object.create(n && n.prototype, {
				constructor: {
					value: e,
					enumerable: !1,
					writable: !0,
					configurable: !0
				}
			}), n && (Object.setPrototypeOf ? Object.setPrototypeOf(e, n) : e.__proto__ = n)
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.MenuBar = void 0;
		var s = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			u = t(0),
			l = o(u),
			c = t(4),
			f = o(c),
			p = (t(1), t(15)),
			h = o(p);
		n.MenuBar = function(e) {
			function n(e, o) {
				i(this, n);
				var a = r(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this)),
					s = t(73);
				if (a.element = document.createElement("div"), a.element.className = s["guify-bar"], e.appendChild(a.element), o.title) {
					var u = a.element.appendChild(document.createElement("div"));
					u.className = s["guify-bar-title"], u.innerHTML = o.title
				}
				var c = a.element.appendChild(document.createElement("button"));
				if (c.className = s["guify-bar-button"], c.innerHTML = "Controls", (0, l.default)(c, {
						left: "left" == o.align ? "0" : "unset",
						right: "left" == o.align ? "unset" : "0"
					}), c.onclick = function() {
						a.emit("ontogglepanel")
					}, h.default.isEnabled) {
					var f = a.element.appendChild(document.createElement("button"));
					f.className = s["guify-bar-button"], f.innerHTML = "「　」", f.setAttribute("aria-label", "Toggle Fullscreen"), (0, l.default)(f, {
						left: "left" == o.align ? "unset" : "0",
						right: "left" == o.align ? "0" : "unset"
					}), f.onclick = function() {
						a.emit("onfullscreenrequested")
					}
				}
				return a
			}
			return a(n, e), s(n, [{
				key: "SetVisible",
				value: function(e) {
					this.element.style.display = e ? "block" : "none"
				}
			}]), n
		}(f.default)
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-bar {\n    background-color: ", ";\n    height: ", ";\n    width: 100%;\n    opacity: 1.0;\n    position: relative;\n    cursor: default;\n}\n\n.guify-bar-title {\n    color: ", ";\n    text-align: center;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    line-height: ", ";\n    color: ", ";\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.guify-bar-button {\n    text-align: center;\n    border: none;\n    cursor: pointer;\n    font-family: inherit;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    color: ", ";\n    background-color: ", ";\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    margin: 0;\n\n}\n\n/* Hide default accessibility outlines since we're providing our own visual feedback */\n.guify-bar-button:focus {\n    outline:none;\n}\n.guify-bar-button::-moz-focus-inner {\n    border:0;\n}\n\n.guify-bar-button:hover,\n.guify-bar-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-bar-button:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n\n"], ["\n\n.guify-bar {\n    background-color: ", ";\n    height: ", ";\n    width: 100%;\n    opacity: 1.0;\n    position: relative;\n    cursor: default;\n}\n\n.guify-bar-title {\n    color: ", ";\n    text-align: center;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    line-height: ", ";\n    color: ", ";\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.guify-bar-button {\n    text-align: center;\n    border: none;\n    cursor: pointer;\n    font-family: inherit;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    color: ", ";\n    background-color: ", ";\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    margin: 0;\n\n}\n\n/* Hide default accessibility outlines since we're providing our own visual feedback */\n.guify-bar-button:focus {\n    outline:none;\n}\n.guify-bar-button::-moz-focus-inner {\n    border:0;\n}\n\n.guify-bar-button:hover,\n.guify-bar-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-bar-button:active {\n    color: ", " !important;\n    background-color: ", " !important;\n}\n\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.menuBarBackground, i.theme.sizing.menuBarHeight, i.theme.colors.text1, i.theme.sizing.menuBarHeight, i.theme.colors.menuBarText, i.theme.colors.textPrimary, i.theme.colors.componentBackground, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.colors.textActive, i.theme.colors.componentActive)
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.Panel = void 0;
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(0),
			a = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(r),
			s = t(1);
		n.Panel = function() {
			function e(n, i) {
				o(this, e), this.opts = i, this.styles = t(75), this.container = n.appendChild(document.createElement("div")), this.container.className = this.styles["guify-panel-container"], (0, a.default)(this.container, {
					width: i.width,
					opacity: i.opacity || 1,
					left: "left" == i.align ? "0" : "unset",
					right: "left" == i.align ? "unset" : "0"
				}), "outer" == i.panelMode && (0, a.default)(this.container, {
					left: "left" == i.align ? "unset" : "100%",
					right: "left" == i.align ? "100%" : "unset"
				}), "none" === i.barMode && this._MakeToggleButton(), this.panel = this.container.appendChild(document.createElement("div")), this.panel.className = this.styles["guify-panel"], "none" === i.barMode && i.title && t(76)(this.panel, i.title, s.theme)
			}
			return i(e, [{
				key: "SetVisible",
				value: function(e) {
					e ? (this.panel.classList.remove(this.styles["guify-panel-hidden"]), this.menuButton && this.menuButton.setAttribute("alt", "Close GUI")) : (this.panel.classList.add(this.styles["guify-panel-hidden"]), this.menuButton && this.menuButton.setAttribute("alt", "Open GUI"))
				}
			}, {
				key: "ToggleVisible",
				value: function() {
					this.panel.classList.contains(this.styles["guify-panel-hidden"]) ? this.SetVisible(!0) : this.SetVisible(!1)
				}
			}, {
				key: "_MakeToggleButton",
				value: function() {
					var e = this;
					this.menuButton = this.container.appendChild(document.createElement("button")), this.menuButton.className = this.styles["guify-panel-toggle-button"], (0, a.default)(this.menuButton, {
						left: "left" == this.opts.align ? "0px" : "unset",
						right: "left" == this.opts.align ? "unset" : "0px"
					}), this.menuButton.onclick = function() {
						e.ToggleVisible()
					}, this.menuButton.addEventListener("mouseup", (function() {
						e.menuButton.blur()
					})), this.menuButton.innerHTML = '\n        <svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg">\n            <rect x="10%" y="10%" width="80%" height="80%"/>\n        </svg>\n        '
				}
			}]), e
		}()
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-panel-container {\n    position: absolute;\n    background: ", ";\n}\n\n.guify-panel {\n    padding: 14px;\n    /* Last component will have a margin, so reduce padding to account for this */\n    padding-bottom: calc(14px - ", ");\n\n    /* all: initial;  */\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: default;\n    text-align: left;\n    box-sizing: border-box;\n}\n\n.guify-panel.guify-panel-hidden {\n    height: 0px;\n    display: none;\n}\n\n.guify-panel * {\n    box-sizing: initial;\n    -webkit-box-sizing: initial;\n    -moz-box-sizing: initial;\n}\n\n.guify-panel input {\n    font-family: 'Hack';\n    font-size: 11px;\n    display: inline;\n}\n\n.guify-panel a {\n    color: inherit;\n    text-decoration: none;\n}\n\n.guify-panel-toggle-button {\n    position: absolute;\n    top: 0;\n    margin: 0;\n    padding: 0;\n    width: 15px;\n    height: 15px;\n    line-height: 15px;\n    text-align: center;\n    border: none;\n    cursor: pointer;\n    font-family: inherit;\n    color: ", ";\n    background-color: ", ";\n\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n}\n\n/* Open/Close button styling */\n.guify-panel-toggle-button svg {\n    fill-opacity: 0;\n    stroke-width: 3;\n    stroke: ", ";\n}\n\n/* Remove browser default outlines since we're providing our own */\n.guify-panel-toggle-button:focus {\n    outline:none;\n}\n.guify-panel-toggle-button::-moz-focus-inner {\n    border: 0;\n}\n\n.guify-panel-toggle-button:hover,\n.guify-panel-toggle-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-panel-toggle-button:active {\n    color: ", ";\n    background-color: ", ";\n}\n\n"], ["\n\n.guify-panel-container {\n    position: absolute;\n    background: ", ";\n}\n\n.guify-panel {\n    padding: 14px;\n    /* Last component will have a margin, so reduce padding to account for this */\n    padding-bottom: calc(14px - ", ");\n\n    /* all: initial;  */\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: default;\n    text-align: left;\n    box-sizing: border-box;\n}\n\n.guify-panel.guify-panel-hidden {\n    height: 0px;\n    display: none;\n}\n\n.guify-panel * {\n    box-sizing: initial;\n    -webkit-box-sizing: initial;\n    -moz-box-sizing: initial;\n}\n\n.guify-panel input {\n    font-family: 'Hack';\n    font-size: 11px;\n    display: inline;\n}\n\n.guify-panel a {\n    color: inherit;\n    text-decoration: none;\n}\n\n.guify-panel-toggle-button {\n    position: absolute;\n    top: 0;\n    margin: 0;\n    padding: 0;\n    width: 15px;\n    height: 15px;\n    line-height: 15px;\n    text-align: center;\n    border: none;\n    cursor: pointer;\n    font-family: inherit;\n    color: ", ";\n    background-color: ", ";\n\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n}\n\n/* Open/Close button styling */\n.guify-panel-toggle-button svg {\n    fill-opacity: 0;\n    stroke-width: 3;\n    stroke: ", ";\n}\n\n/* Remove browser default outlines since we're providing our own */\n.guify-panel-toggle-button:focus {\n    outline:none;\n}\n.guify-panel-toggle-button::-moz-focus-inner {\n    border: 0;\n}\n\n.guify-panel-toggle-button:hover,\n.guify-panel-toggle-button:focus {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-panel-toggle-button:active {\n    color: ", ";\n    background-color: ", ";\n}\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.panelBackground, i.theme.sizing.componentSpacing, i.theme.colors.textPrimary, i.theme.colors.componentBackground, i.theme.colors.componentForeground, i.theme.colors.textHover, i.theme.colors.componentForeground, i.theme.colors.textActive, i.theme.colors.componentActive)
	}, function(e, n, t) {
		"use strict";
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.default = function(e, n, t) {
			var o = e.appendChild(document.createElement("div"));
			return o.innerHTML = n, (0, i.default)(o, {
				width: "100%",
				textAlign: "center",
				color: t.colors.textSecondary,
				height: "20px",
				marginBottom: "4px"
			}), o
		};
		var o = t(0),
			i = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(o);
		e.exports = n.default
	}, function(e, n, t) {
		"use strict";

		function o(e, n) {
			if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
		}
		Object.defineProperty(n, "__esModule", {
			value: !0
		}), n.ToastArea = void 0;
		var i = function() {
				function e(e, n) {
					for (var t = 0; t < n.length; t++) {
						var o = n[t];
						o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
					}
				}
				return function(n, t, o) {
					return t && e(n.prototype, t), o && e(n, o), n
				}
			}(),
			r = t(0),
			a = function(e) {
				return e && e.__esModule ? e : {
					default: e
				}
			}(r);
		t(1), n.ToastArea = function() {
			function e(n, i) {
				o(this, e), this.opts = i, this.styles = t(78), this.element = n.appendChild(document.createElement("div")), this.element.classList.add(this.styles["guify-toast-area"]), (0, a.default)(this.element, {
					position: "absolute",
					width: "100%"
				})
			}
			return i(e, [{
				key: "CreateToast",
				value: function(e) {
					var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
						t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
					console.log("[Toast] " + e);
					var o = this.element.appendChild(document.createElement("div"));
					o.classList.add(this.styles["guify-toast-notification"]), o.setAttribute("aria-live", "polite"), o.innerHTML = e, (0, a.default)(o, {});
					var i = o.appendChild(document.createElement("button"));
					i.innerHTML = "&#10006;", i.classList.add(this.styles["guify-toast-close-button"]);
					var r = void 0,
						s = function() {
							o.blur(), (0, a.default)(o, {
								opacity: "0"
							}), clearTimeout(r), r = setTimeout((function() {
								o && o.parentNode.removeChild(o)
							}), t)
						};
					r = setTimeout(s, n), i.onclick = s
				}
			}]), e
		}()
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-toast-notification {\n    box-sizing: border-box;\n    color: theme.colors.text1;\n    position: relative;\n    width: 100%;\n    /* height: 20px; */\n    padding: 8px;\n    padding-left: 20px;\n    padding-right: 20px;\n    text-align: center;\n    font-family: 'Hack', monospace;\n    font-size: 11px;\n}\n\n.guify-toast-area .guify-toast-notification:nth-child(odd) {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-toast-area .guify-toast-notification:nth-child(even) {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-toast-close-button {\n    color: ", ";\n    background: transparent;\n    position: absolute;\n    textAlign: center;\n    margin-top: auto;\n    margin-bottom: auto;\n    border: none;\n    cursor: pointer;\n    top: 0;\n    bottom: 0;\n    right: 8px;\n}\n\n"], ["\n\n.guify-toast-notification {\n    box-sizing: border-box;\n    color: theme.colors.text1;\n    position: relative;\n    width: 100%;\n    /* height: 20px; */\n    padding: 8px;\n    padding-left: 20px;\n    padding-right: 20px;\n    text-align: center;\n    font-family: 'Hack', monospace;\n    font-size: 11px;\n}\n\n.guify-toast-area .guify-toast-notification:nth-child(odd) {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-toast-area .guify-toast-notification:nth-child(even) {\n    color: ", ";\n    background-color: ", ";\n}\n\n.guify-toast-close-button {\n    color: ", ";\n    background: transparent;\n    position: absolute;\n    textAlign: center;\n    margin-top: auto;\n    margin-bottom: auto;\n    border: none;\n    cursor: pointer;\n    top: 0;\n    bottom: 0;\n    right: 8px;\n}\n\n"]),
			i = t(1),
			r = t(3);
		e.exports = r(o, i.theme.colors.textPrimary, i.theme.colors.panelBackground, i.theme.colors.textPrimary, i.theme.colors.menuBarBackground, i.theme.colors.textPrimary)
	}, function(e, n, t) {
		"use strict";
		var o = function(e, n) {
				return Object.freeze(Object.defineProperties(e, {
					raw: {
						value: Object.freeze(n)
					}
				}))
			}(["\n\n.guify-container {\n    position: relative;\n    left: 0;\n    width: 100%;\n    font-size: 11px;\n    z-index: 9999;\n}\n\n"], ["\n\n.guify-container {\n    position: relative;\n    left: 0;\n    width: 100%;\n    font-size: 11px;\n    z-index: 9999;\n}\n\n"]),
			i = (t(1), t(3));
		e.exports = i(o)
	}])
}));
(function() {
	! function() {
		var e, c, a, s, r, n, t, o, f, i, u, l;
		let b = (...e) => new Uint8Array(...e),
			h = (...e) => new Uint16Array(...e);

		function k() {
			return this
		}

		function w(e) {
			let c = "";
			for (let a = 0; a < e.length; a += 3) {
				let s = parseInt(e.substr(a, 3), 10);
				c += String.fromCharCode(s)
			}
			return c
		}

		function d() {
			return k()[w(arguments[0])]
		}

		function v() {
			this.t = h(16), this.o = h(288)
		}

		function A(e, c) {
			this.i = e, this.u = 0, this.l = 0, this.h = 0, this.k = c, this.v = 0, this.A = new v, this.R = new v
		}

		function y(e, c, a, s) {
			var r, n;
			for (r = 0; a > r; ++r) e[r] = 0;
			for (r = 0; 30 - a > r; ++r) e[r + a] = r / a | 0;
			for (n = s, r = 0; 30 > r; ++r) c[r] = n, n += 1 << e[r]
		}

		function g(e, c, a, s) {
			var r, n;
			for (r = 0; 16 > r; ++r) e.t[r] = 0;
			for (r = 0; s > r; ++r) e.t[c[a + r]]++;
			for (e.t[0] = 0, n = 0, r = 0; 16 > r; ++r) l[r] = n, n += e.t[r];
			for (r = 0; s > r; ++r) c[a + r] && (e.o[l[c[a + r]]++] = r)
		}

		function R(e) {
			e.h-- || (e.l = e.i[e.u++], e.h = 7);
			var c = 1 & e.l;
			return e.l >>>= 1, c
		}

		function L(e, c, a) {
			if (!c) return a;
			for (; 24 > e.h;) e.l |= e.i[e.u++] << e.h, e.h += 8;
			var s = e.l & 65535 >>> 16 - c;
			return e.l >>>= c, e.h -= c, s + a
		}

		function p(e, c) {
			for (var a, s, r, n; 24 > e.h;) e.l |= e.i[e.u++] << e.h, e.h += 8;
			a = 0, s = 0, r = 0, n = e.l;
			do {
				s = 2 * s + (1 & n), n >>>= 1, ++r, a += c.t[r], s -= c.t[r]
			} while (s >= 0);
			return e.l = n, e.h -= r, c.o[a + s]
		}

		function T(e, c, a) {
			var s, r, n, t, o, l, b = L(e, 5, 257),
				h = L(e, 5, 1),
				k = L(e, 4, 4);
			for (s = 0; 19 > s; ++s) u[s] = 0;
			for (s = 0; k > s; ++s) t = L(e, 3, 0), u[f[s]] = t;
			for (g(i, u, 0, 19), r = 0; b + h > r;) switch (o = p(e, i)) {
				case 16:
					for (l = u[r - 1], n = L(e, 2, 3); n; --n) u[r++] = l;
					break;
				case 17:
					for (n = L(e, 3, 3); n; --n) u[r++] = 0;
					break;
				case 18:
					for (n = L(e, 7, 11); n; --n) u[r++] = 0;
					break;
				default:
					u[r++] = o
			}
			g(c, u, 0, b), g(a, u, b, h)
		}

		function V(c, a, s) {
			for (var f, i, u, l, b;;) {
				if (256 === (f = p(c, a))) return e;
				if (256 > f) c.k[c.v++] = f;
				else
					for (i = L(c, r[f -= 257], n[f]), u = p(c, s), b = l = c.v - L(c, t[u], o[u]); l + i > b; ++b) c.k[c.v++] = c.k[b]
			}
		}

		function W(a) {
			for (var s, r; a.h > 8;) a.u--, a.h -= 8;
			if ((s = 256 * (s = a.i[a.u + 1]) + a.i[a.u]) !== (65535 & ~(256 * a.i[a.u + 3] + a.i[a.u + 2]))) return c;
			for (a.u += 4, r = s; r; --r) a.k[a.v++] = a.i[a.u++];
			return a.h = 0, e
		}

		function x(r, n) {
			var t, o, f = new A(r, n);
			do {
				switch (t = R(f), L(f, 2, 0)) {
					case 0:
						o = W(f);
						break;
					case 1:
						o = V(f, a, s);
						break;
					case 2:
						T(f, f.A, f.R), o = V(f, f.A, f.R);
						break;
					default:
						o = c
				}
				if (o !== e) throw Error("Data error")
			} while (!t);
			return f.v < f.k.length ? "function" == typeof f.k.slice ? f.k.slice(0, f.v) : f.k.subarray(0, f.v) : f.k
		}

		function B(e, c = 0) {
			var a, s, r, n, t, o, f = e.replace(/[^A-Za-z0-9+/]/g, ""),
				i = f.length,
				u = c ? Math.ceil((3 * i + 1 >> 2) / c) * c : 3 * i + 1 >> 2,
				l = b(u);
			for (r = 0, n = 0, t = 0; i > t; t++)
				if (s = 3 & t, r |= ((o = f.charCodeAt(t)) > 64 && 91 > o ? o - 65 : o > 96 && 123 > o ? o - 71 : o > 47 && 58 > o ? o + 4 : 43 === o ? 62 : 47 === o ? 63 : 0) << 6 * (3 - s), 3 === s || i - t == 1) {
					for (a = 0; 3 > a && u > n; a++, n++) l[n] = r >>> (16 >>> a & 24) & 255;
					r = 0
				} return l
		}
		e = 0, c = -3, a = new v, s = new v, r = b(30), n = h(30), t = b(30), o = h(30), f = b([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), i = new v, u = b(320), l = h(16), ((e, c) => {
				var a;
				for (a = 0; 7 > a; ++a) e.t[a] = 0;
				for (e.t[7] = 24, e.t[8] = 152, e.t[9] = 112, a = 0; 24 > a; ++a) e.o[a] = 256 + a;
				for (a = 0; 144 > a; ++a) e.o[24 + a] = a;
				for (a = 0; 8 > a; ++a) e.o[168 + a] = 280 + a;
				for (a = 0; 112 > a; ++a) e.o[176 + a] = 144 + a;
				for (a = 0; 5 > a; ++a) c.t[a] = 0;
				for (c.t[5] = 32, a = 0; 32 > a; ++a) c.o[a] = a
			})(a, s), y(r, n, 4, 3), y(t, o, 2, 1), r[28] = 0, n[28] = 258,
			function(e, c = {}) {
				let a = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : c;
				let s = a;
				let r = "undefined" != typeof require ? require : null,
					n = B("AXsCAABNkMFu00AQhnd21klbJqcoSL1FXLgkWTtOHYcbFyROgKJGojd7s26MUhvZbiNegCuXHrn3ghBQeAMKqE+R94ADY5cCWu3u7Df//Du7tHda2n5ZFampyElsZVb0BlZV9bJ8oPVxWlaj47RancYsK0yeVTarRiY/0Y85LLJoPU/XNjPW6sTzAm/pWjszsW+8JHGnxgtnJprEE+MZTxfRRnvjg0kYTP1w7Fo/jkzsxn408wN3av1gmgT+2DdRNE10+sd+9KLMM1LVyvLaxDu3KWpt0myZb2h3e7Q9ev28HvV+3j5vk2Oi+ilOtLZFRfc+03v6Qv0rurhZPtIl9S/oK72jb3V4xVv/O32o8zW+pGsmte6afhC1nxb5SVpaahe2zNdnlpyHRRG9WgixABALyRN5Koli4aBC0QPRBYCelFoOmwBbCG9BCI0Bn2UD5Kf/wU4L8dc/gAfivoBBU6wCwSQU8OiWSqbOoWQIch+2XMbnATJWzqFC9UxKxalQwr78yVnuptVTbQ8ndxEUhhLZqStht4d7GocgZQuVK1mooMPijucstTPn2zXMQSmthoCIT6RqGugi3OlJCgRi8xTlLLhWq4BFdecDVJLdO7XbANRfkznc/Ahb/QY="),
					t = !!n[0],
					o = t ? n[1] | n[2] << 8 | n[3] << 16 | n[4] << 24 : n.length,
					f = t ? b(o) : b(n.buffer, 5, n.length - 5);
				t && x(b(n.buffer, 5, n.length - 5), f);
				let i = 0,
					u = {},
					l = [];
				let h = [],
					k = [],
					v = [];
				let A = 0,
					y = null,
					g = null,
					R = [],
					L = null;
				c._$EXPORTS = {}, r && (c.require = r);
				let p = 0,
					T = new Float64Array(1);

				function V() {
					let e = 0,
						c = 0,
						a = 0;
					for (; a = f[i++], e |= (127 & a) << c, 128 & a;) c += 7;
					return e
				}

				function W() {
					return f[i++] | f[i++] << 8 | f[i++] << 16 | f[i++] << 24
				}

				function C() {
					let e = V();
					let c = "";
					for (let a = 0; e > a; a++) c += d("083116114105110103")[w("102114111109067104097114067111100101")](V());
					return c
				}

				function Q(e, c) {
					let a = u;
					return function r() {
						let n = A,
							t = {};
						A = e;
						let o = u;
						u = t, u[e] = {};
						let f = v[e],
							b = f.length;
						for (let e = 0; b > e; e++) {
							let c = f[e];
							let s = a[c];
							t[c] = s
						}
						let h = l,
							k = i,
							w = y,
							d = g,
							p = s,
							T = R;
						let V = null,
							W = null;
						l = [], R = [], i = c, y = r, g = arguments, s = this;
						try {
							V = O()
						} catch (e) {
							if (R.length) {
								let c = R.pop();
								i = c, L = e, V = O()
							} else W = e
						}
						if (R = T, i = k, l = h, y = w, u = o, A = n, g = d, s = p, W) throw W;
						return V
					}
				}

				function O() {
					for (;;) {
						let e = f[i++];
						switch (e) {
							case 79: {
								let e = V(),
									c = V();
								Object.defineProperty(u[c], e, {
									get: () => y,
									set() {}
								});
								break
							}
							case 53:
								u[A][V()] = g;
								break;
							case 49:
								l[f[i++]] = V();
								break;
							case 39: {
								let e = V(),
									c = V();
								u[A][c] = g[e];
								break
							}
							case 56:
								l[f[i++]] = l[f[i++]];
								break;
							case 6:
								l[f[i++]] = Q(V(), W());
								break;
							case 21:
								l[f[i++]] = h[V()];
								break;
							case 81:
								l[f[i++]] = l[f[i++]] == l[f[i++]];
								break;
							case 47:
								k.push(l[f[i++]]);
								break;
							case 45: {
								let e = V(),
									c = Array(e);
								for (let a = 0; e > a; a++) c[e - a - 1] = k.pop();
								let s = f[i++],
									r = f[i++];
								l[s] = l[r].apply(a, c);
								break
							}
							case 83: {
								let e = V(),
									c = Array(e);
								for (let a = 0; e > a; a++) c[e - a - 1] = k.pop();
								let a = f[i++],
									s = f[i++];
								l[s] = Reflect.construct(l[a], c);
								break
							}
							case 22:
								l[f[i++]] = l[f[i++]][l[f[i++]]] = l[f[i++]];
								break;
							case 85:
								l[f[i++]] = l[f[i++]][l[f[i++]]];
								break;
							case 54: {
								let e = V(),
									c = Array(e);
								for (let a = 0; e > a; a++) c[e - a - 1] = k.pop();
								let a = f[i++],
									s = f[i++],
									r = f[i++],
									n = l[s],
									t = l[r];
								l[a] = n[t].apply(n, c);
								break
							}
							case 19: {
								let e = f[i++],
									s = !!f[i++],
									r = V(),
									n = h[r];
								if (n in c) {
									l[e] = c[n];
									break
								}
								if (s && !(n in a)) throw new ReferenceError(n + " is not defined");
								l[e] = a[n];
								break
							}
							case 44:
								l[f[i++]] = u[V()][V()];
								break;
							case 25: {
								let e = f[i++],
									c = W();
								l[e] || (i = c);
								break
							}
							case 3:
							case 70:
								return l[p];
							default:
								throw "u" + e
						}
					}
				}
				b(T.buffer), (() => {
					for (i = 0;;) {
						let e = f[i++];
						if (12 === e) h.push(C());
						else {
							if (86 !== e) return void i--; {
								let e = V(),
									c = V(),
									a = [];
								for (let e = 0; c > e; e++) a.push(V());
								v[e] = a
							}
						}
					}
				})(), Q(0, i).call(this)
			}(0, {})
	}();
	let currentlyPlaying = false;
	let guiTheme = localStorage.getItem("abdo_gui_theme") ?? "Light";
	let guiColor = localStorage.getItem("abdo_gui_color") ?? "rgb(0,0,0)";
	const Settings = {
		PlayerOnTop: {
			enabled: true,
			draw: false
		},
		BoxOnTop: {
			enabled: true,
			draw: false
		},
		Timers: {
			enabled: true,
			draw: false
		},
		ShowHP: {
			enabled: true,
			draw: false
		},
		Roofs: {
			enabled: true,
			draw: false
		},
		WeatherInfo: {
			enabled: true,
			draw: false
		},
		ExtractorInfo: {
			enabled: true,
			draw: false
		},
		BoxInfo: {
			enabled: true,
			draw: false
		},
		TotemInfo: {
			enabled: true,
			draw: false
		},
		BuildsInfo: {
			enabled: true,
			draw: false
		},
		DaysCounter: {
			enabled: true,
			draw: false
		},
		ChestInfo: {
			enabled: true,
			draw: false
		},
		ColoredSpikes: {
			enabled: true,
			draw: false
		},
		SandwormTracers: {
			enabled: true,
			draw: false
		},
		KrakenTracers: {
			enabled: true,
			draw: false
		},
		ListEnabledHacks: {
			enabled: true,
			draw: false
		},
		NoFog: {
			enabled: true,
			draw: false
		},
		Xray: {
			enabled: false,
			draw: true,
			key: "Semicolon",
			keyMode: "press"
		},
		AutoRespawn: {
			enabled: false,
			draw: false
		},
		AntiKick: {
			enabled: true,
			draw: false
		},
		AutoFire: {
			enabled: false,
			draw: true,
			key: "KeyC",
			keyMode: "hold"
		},
		AutoFeed: {
			enabled: true,
			draw: true
		},
		SwordInChest: {
			enabled: false,
			draw: true,
			key: "KeyX",
			keyMode: "hold"
		},
		DropSword: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "hold"
		},
		AutoBook: {
			enabled: true,
			draw: true
		},
		AutoIce: {
			enabled: true,
			draw: true
		},
		AutoSeed: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "press",
			seed: "Berry"
		},
		AutoBuild: {
			enabled: false,
			draw: true,
			key: "KeyT",
			keyMode: "press",
			build: "Bridges"
		},
		AutoSpike: {
			enabled: false,
			draw: true,
			key: "Space",
			keyMode: "hold",
			mode: true,
			priority: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"]
		},
		AutoCrown: {
			enabled: false,
			draw: false
		},
		AutoCraft: {
			enabled: false,
			draw: true,
			key: "KeyK",
			keyMode: "press",
			last: null
		},
		AutoRecycle: {
			enabled: false,
			draw: true,
			key: "KeyK",
			keyMode: "press",
			last: null
		},
		AutoExtractorTake: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "press"
		},
		AutoExtractorPut: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "press"
		},
		AutoBreadTake: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "press"
		},
		AutoBreadPut: {
			enabled: false,
			draw: true,
			key: "NONE",
			keyMode: "press"
		},
		AutoSteal: {
			enabled: false,
			draw: true,
			key: "KeyQ",
			keyMode: "hold"
		},
		AutoTotem: {
			enabled: false,
			draw: true,
			key: "KeyH",
			keyMode: "press"
		},
		AimBot: {
			enabled: false,
			draw: true,
			key: "KeyF",
			keyMode: "press",
			angle: null
		},
		Spectator: {
			enabled: false,
			draw: true,
			key: "KeyP",
			keyMode: "press",
			speed: .5
		}
	};
	const Timers = {
		HealTimer: 10,
		GaugeTimer: 5
	};
	const SandstormImage = new Image;
	SandstormImage.src = "https://raw.githubusercontent.com/XmreLoux/images/main/sandstorm.png";
	const BlizzardImage = new Image;
	BlizzardImage.src = "https://raw.githubusercontent.com/XmreLoux/images/main/blizzard.png";
	let autoCrownReady = true;
	var ⵠⲆᐃⲆΔᐃᐃ = 231;
	let ⲆΔⵠⵠΔⲆΔ = 7;
	var ⵠᐃᐃΔⲆΔⵠⵠΔ = 164;
	if (ⲆΔⵠⵠΔⲆΔ > ⵠᐃᐃΔⲆΔⵠⵠΔ) ⵠⲆᐃⲆΔᐃᐃ = 55;
	var ᐃⲆⲆⵠⲆⲆᐃⵠᐃ = 178;
	var ⲆΔⵠᐃⵠΔⲆ = 207;
	var ᐃⲆᐃⵠᐃⲆᐃ = 165;
	let ᐃⲆⵠᐃⲆⲆᐃ = 45;
	if (ᐃⲆᐃⵠᐃⲆᐃ > ᐃⲆⵠᐃⲆⲆᐃ) ⲆΔⵠᐃⵠΔⲆ = 50;
	let ⲆᐃⵠᐃⵠⲆⵠⲆⵠ = 252;
	var ᐃⲆᐃΔⲆⲆⲆ = 104;
	if (ᐃⲆᐃΔⲆⲆⲆ >= 11) ᐃⲆᐃΔⲆⲆⲆ = 111;
	let ΔⲆΔᐃⲆⲆΔⲆᐃ = 15;
	var ⵠⲆⵠⲆᐃΔⲆᐃΔ = 183;
	ⵠⲆⵠⲆᐃΔⲆᐃΔ.ⵠⵠⵠᐃᐃⲆⲆ = 0;
	const ⲆⲆᐃⵠᐃⵠⲆⵠᐃ = 200;
	var ⲆⲆΔΔΔΔᐃᐃⵠ = 25 * 221;
	const ⲆⵠⵠΔᐃⲆΔ = Math.floor(ⲆⲆᐃⵠᐃⵠⲆⵠᐃ[ⲆⲆᐃⵠᐃⵠⲆⵠᐃ.ⲆⲆᐃⵠᐃⵠⲆⵠᐃ]);
	if (ⲆᐃⵠᐃⵠⲆⵠⲆⵠ == ΔⲆΔᐃⲆⲆΔⲆᐃ) ᐃⲆⲆⵠⲆⲆᐃⵠᐃ = 44;
	var ΔⵠⵠⲆᐃᐃᐃΔⲆ, ᐃⲆΔⲆᐃᐃⲆΔΔ;
	var ⵠⵠⲆⵠᐃⲆⵠⲆⵠ;
	const ⲆⲆⲆⲆᐃᐃᐃ = window;
	var ΔⲆⵠᐃⵠΔᐃ = 36;
	if (ΔⲆⵠᐃⵠΔᐃ === 11) ΔⲆⵠᐃⵠΔᐃ = 224;
	var ΔⲆⵠᐃⲆᐃⲆᐃΔ, ⲆⵠΔⲆⲆⵠᐃ, ⵠⵠⵠⲆᐃΔΔ, ⵠΔⲆⲆⲆ;
	let ᐃᐃⲆⵠΔⵠᐃΔⵠ = 254;
	const ⵠⵠᐃⲆΔⲆⲆ = function(ΔⵠᐃᐃⲆΔᐃ) {
		let ⲆΔᐃⵠᐃⲆᐃ = "";
		for (let ⵠⲆⵠΔᐃⲆᐃⲆΔ = 0; ⵠⲆⵠΔᐃⲆᐃⲆΔ < ΔⵠᐃᐃⲆΔᐃ["length"]; ⵠⲆⵠΔᐃⲆᐃⲆΔ++) ⲆΔᐃⵠᐃⲆᐃ += ⲆⲆⲆⲆᐃᐃᐃ["String"]["fromCharCode"](ΔⵠᐃᐃⲆΔᐃ[ⵠⲆⵠΔᐃⲆᐃⲆΔ] ^ ᐃᐃⲆⵠΔⵠᐃΔⵠ++ % 255);
		return ⲆΔᐃⵠᐃⲆᐃ
	};
	var ⵠΔᐃⲆⵠᐃⵠ = 167;
	if (ⵠΔᐃⲆⵠᐃⵠ === 10) ⵠΔᐃⲆⵠᐃⵠ = 165;
	var ⵠⵠᐃⵠᐃⲆⲆ = 4 - 52;
	const ⵠᐃᐃᐃΔⵠΔⲆⵠ = 198;
	const ᐃⲆⲆΔΔⵠⵠⲆⵠ = Math.floor(ⵠᐃᐃᐃΔⵠΔⲆⵠ[ⵠᐃᐃᐃΔⵠΔⲆⵠ.ⵠᐃᐃᐃΔⵠΔⲆⵠ]);
	var ΔⵠᐃⵠⲆⵠΔ = 205;
	let ᐃⵠⲆⲆⵠⲆⵠ = 176;
	const ΔⵠⲆΔⲆᐃᐃ = 135;
	if (ᐃⵠⲆⲆⵠⲆⵠ > ΔⵠⲆΔⲆᐃᐃ) ΔⵠᐃⵠⲆⵠΔ = 244;
	var ᐃⵠⵠⵠⲆᐃⲆΔⲆ = 242;
	if (ᐃⵠⵠⵠⲆᐃⲆΔⲆ === 4) ᐃⵠⵠⵠⲆᐃⲆΔⲆ = 254;
	ⲆⵠΔᐃᐃᐃΔ = [
		[167, 87, 79, 116, 96, 115, 56, 59],
		[101, 95, 95, 126, 105, 63, 71, 59],
		[109, 71, 40, 121, 114, 67, 79, 35],
		[117, 79, 117, 111],
		[65, 75, 40, 117],
		[123, 104, 107, 82, 65, 117, 24, 27],
		[70, 111, 69, 68, 74, 109, 16, 19],
		[119, 1, 8, 69, 82, 99, 1, 11],
		[84, 85, 111, 78, 89, 15, 103, 82, 110, 114, 57, 42, 32, 119, 8, 123],
		[36, 123, 11, 57, 42, 27, 3, 34],
		[22, 98, 41, 34, 9, 3, 96, 102, 0, 25, 100, 103],
		[3, 109, 100, 52, 61, 82, 25, 17, 57, 51, 43, 86],
		[6, 48, 39, 37, 50, 57, 89, 83],
		[14, 39, 68, 7, 41, 44, 63, 35, 45, 32, 17, 74],
		[24, 78, 51, 22, 29, 199, 212, 191],
		[224, 234, 226, 187],
		[228, 229, 223, 240, 239, 203, 180, 247, 213, 193, 172, 175],
		[201, 166, 195, 166, 194, 245, 207, 224, 248, 219, 164, 235, 252, 146, 247, 235, 249, 243, 227, 205, 253, 240, 224, 151],
		[243, 157, 148, 219, 245, 232, 210, 143],
		[234, 134, 140, 195, 237, 237, 128, 139, 223, 251, 235, 199, 237, 242, 135, 178, 161, 163, 248, 251],
		[166, 159, 152, 247],
		[169, 139, 244, 184, 172, 149, 135, 167, 137, 149, 232, 235],
		[181, 234, 237, 231],
		[184, 238, 139, 178, 133, 161, 220, 223],
		[186, 214, 220, 147, 189, 189, 133, 159, 137, 129, 187, 151, 190, 167, 196, 156, 145, 179, 160, 203],
		[174, 203, 179, 150, 162, 164, 175, 146, 85, 70, 68, 118, 102, 104, 80, 126],
		[81, 59, 51, 126, 86, 88, 55, 62, 116, 86, 68, 106, 69, 66, 35, 121, 122, 94, 79, 38],
		[69, 74, 80, 47, 65, 121, 120, 79],
		[69, 98, 112, 87, 114, 27, 66, 27],
		[117, 90, 19, 18],
		[105, 3, 116, 70, 109, 7, 96, 68, 105, 110, 15, 75, 94, 106, 120, 15, 33, 22, 123, 54, 22, 43, 12, 47, 42, 30, 31, 118],
		[22, 35, 4, 57, 50, 0, 111, 110],
		[54, 18, 111, 100],
		[2, 30, 99, 49, 56, 10, 111, 51, 2, 15, 51, 94],
		[7, 8, 32, 18, 50, 46, 83, 31],
		[15, 42, 40, 26, 18, 28, 30, 6, 46, 69, 71, 1, 34, 62, 44, 8],
		[31, 79, 56, 11, 227, 198, 250, 239, 209, 232, 192, 183, 210, 216, 183, 182],
		[213, 213, 220, 249, 201, 246, 175, 174],
		[240, 248, 208, 228, 252, 206, 207, 166],
		[197, 175, 167, 244, 250, 240, 159, 158],
		[253, 151, 222, 203, 241, 241, 224, 248, 246, 250, 224, 159],
		[212, 233, 252, 223, 215, 222, 240, 217, 226, 238, 143, 139],
		[223, 143, 232, 204, 154, 150, 140, 243],
		[166, 130, 255, 175, 146, 142, 156, 160],
		[149, 160, 136, 165, 177, 227, 182, 170, 182, 230, 128, 162, 130, 156, 148, 173, 190, 154, 231, 166],
		[183, 164, 211, 174, 183, 173, 180, 215, 139, 175, 160, 135, 143, 181, 184, 131, 147, 194, 163, 206],
		[151, 189, 188, 155, 154, 190, 195, 147, 166, 188, 195, 61],
		[98, 111, 85, 126, 102, 65, 62, 125, 106, 56, 94, 49],
		[111, 73, 99, 101, 75, 71, 93, 124, 118, 87, 42, 37],
		[64, 40, 77, 108, 127, 95, 34, 29],
		[120, 16, 91, 84, 127, 113, 18, 24, 126, 123, 22, 17],
		[76, 121, 26, 93, 83, 69, 14, 9],
		[87, 113, 14, 82, 88, 8, 109, 87],
		[94, 83, 105, 42, 35, 112, 118, 49, 31, 17, 9, 120],
		[40, 13, 39, 57, 41, 15, 114, 109],
		[50, 96, 5, 100, 6, 1, 98, 104, 3, 2, 17, 110, 4, 9, 40, 93],
		[5, 53, 86, 23, 7, 84, 41, 26],
		[13, 45, 61, 88, 9, 43, 37, 24, 18, 64, 37, 7, 20, 33, 66, 20],
		[32, 34, 49, 22, 43, 57, 71, 189],
		[219, 197, 239, 254, 230, 193, 255, 224, 236, 219, 182, 177],
		[216, 227, 217, 254, 195, 202, 251, 227],
		[246, 164, 193, 168, 207, 247, 221, 239, 249, 201, 201, 226, 197, 228, 241, 212, 199, 241, 242, 149],
		[202, 152, 229, 213, 247, 249, 249, 197],
		[213, 128, 245, 205, 215, 209, 138, 133],
		[232, 226, 241, 197, 228, 230, 211, 131, 165, 149, 153, 169, 159, 158, 142, 245],
		[170, 167, 157, 182, 169, 153, 254, 188],
		[178, 149, 149, 161],
		[183, 228, 226, 172, 189, 130, 137, 176],
		[188, 137, 234, 154, 133, 165, 165, 145, 129, 161, 139, 128, 141, 173, 190, 209],
		[143, 185, 169, 135, 146, 181, 159, 129, 175, 129, 202, 197],
		[154, 151, 173, 150, 153, 191, 61, 60],
		[88, 68, 82, 127, 98, 64, 100, 124, 83, 83, 94, 125, 108, 61, 36, 44],
		[72, 75, 94, 108, 116, 36, 81, 36],
		[123, 41, 74, 40, 79, 45, 25, 74, 120, 114, 25, 24],
		[115, 20, 122, 80, 75, 124, 25, 67],
		[77, 104, 118, 0, 81, 1, 98, 94],
		[84, 5, 13, 79, 89, 124, 106, 72],
		[100, 82, 44, 50, 32, 5, 14, 41, 31, 116, 25, 116],
		[19, 19, 30, 125, 23, 24, 30, 35],
		[7, 22, 109, 31, 2, 59, 10, 13],
		[62, 28, 101, 51, 4, 109, 24, 13, 51, 81, 28, 13, 5, 84, 37, 84],
		[51, 89, 85, 27, 15, 93, 28, 29],
		[16, 52, 34, 0, 44, 68, 42, 22],
		[35, 72, 54, 17, 39, 39, 210, 237, 215, 176, 214, 233, 229, 234, 222, 255, 223, 204, 202, 248, 236, 226, 198, 232],
		[241, 219, 222, 227, 242, 208, 161, 169, 255, 195, 222, 241],
		[253, 173, 216, 209, 251, 145, 241, 152],
		[255, 255, 250, 193, 200, 193, 229, 144],
		[205, 194, 230, 197, 208, 128, 238, 217, 228, 239, 226, 213, 216, 213, 238, 240, 223, 231, 142, 241, 152, 148, 241, 169, 165, 160, 245, 244],
		[168, 248, 142, 161, 172, 168, 237, 236],
		[179, 225, 130, 224, 181, 159, 146, 181, 185, 232, 145, 224],
		[189, 178, 182, 155, 129, 164, 221, 144, 133, 213, 190, 188, 143, 179, 174, 129],
		[140, 168, 156, 132, 168, 164, 178, 140, 163, 154, 190, 141, 153, 189, 174, 139, 168, 109, 71, 113, 103, 83, 83, 68, 99, 78, 91, 122, 105, 91, 88, 51],
		[108, 35, 67, 122, 112, 122, 68, 43],
		[78, 79, 75, 113, 73, 68, 71, 114, 125, 78, 115, 111, 66, 124, 107, 22, 125, 127, 28, 70, 72, 75, 16, 19],
		[75, 3, 123, 66, 87, 115, 96, 11],
		[86, 96, 119, 120, 88, 82, 119, 86, 90, 17, 124, 127],
		[25, 5, 120, 123],
		[36, 123, 27, 38, 40, 13, 112, 115],
		[45, 23, 104, 36, 48, 18, 27, 102, 14, 0, 19, 106],
		[8, 9, 15, 19, 13, 49, 92, 95],
		[1, 35, 35, 19, 61, 91, 63, 2, 49, 94, 56, 83],
		[54, 66, 25, 30, 42, 70, 6, 75],
		[20, 63, 63, 74, 26, 61, 64, 67],
		[28, 237, 215, 234, 217, 204, 233, 210, 227, 207, 207, 186, 209, 221, 176, 179],
		[214, 162, 168, 225, 241, 167, 220, 171],
		[206, 192, 219, 237, 249, 212, 246, 163],
		[254, 248, 243, 206, 193, 245, 152, 155],
		[196, 197, 144, 217, 201, 235, 148, 195, 245, 219, 235, 218, 234, 135, 231, 192, 212, 223, 132, 135],
		[225, 209, 132, 203, 219, 136, 140, 255],
		[153, 246, 131, 182, 165, 175, 244, 247],
		[168, 255, 159, 184, 172, 145, 236, 239],
		[177, 147, 185, 163, 141, 141, 169, 172, 186, 139, 233, 227],
		[134, 142, 183, 210, 135, 163, 220, 147],
		[191, 217, 208, 147, 143, 164, 191, 158, 183, 194, 187, 154, 144, 198, 160, 203],
		[174, 203, 175, 131, 152, 145, 171, 139, 100, 71, 80, 115, 102, 82, 83, 58],
		[93, 65, 64, 125, 110, 90, 98, 117, 74, 64, 47, 46],
		[77, 39, 80, 100, 122, 88, 39, 38],
		[127, 47, 88, 107, 67, 102, 90, 79],
		[71, 23, 74, 17, 114, 120, 23, 22],
		[78, 122, 104, 88],
		[106, 92, 11, 70, 80, 116, 11, 10],
		[91, 11, 86, 85, 94, 90, 3, 2],
		[25, 115, 42, 43, 39, 46, 0, 119],
		[27, 30, 123, 35, 22, 127, 27, 114],
		[50, 99, 103, 56, 55, 56, 16, 57, 59, 106, 8, 51, 63, 51, 15, 98],
		[3, 41, 40, 21, 0, 34, 95, 13, 10, 91, 29, 86],
		[14, 95, 91, 22, 42, 38, 52, 24, 17, 45, 56, 71, 33, 33, 40, 23, 37, 79, 22, 23, 226, 236, 230, 239],
		[221, 210, 254, 240, 233, 206, 207, 182],
		[214, 197, 196, 231, 244, 161, 254, 231, 205, 194, 242, 251],
		[193, 171, 226, 235, 198, 202, 171, 175, 243, 230, 244, 211, 254, 151, 206, 151],
		[241, 154, 224, 199, 245, 245, 252, 195, 226, 131, 244, 195, 214, 210, 139, 138],
		[218, 238, 252, 139, 229, 143, 217, 130],
		[154, 243, 186, 181, 157, 168, 128, 180, 153, 158, 178, 188, 173, 138, 139, 242],
		[137, 134, 152, 169],
		[141, 231, 239, 162, 186, 180, 140, 177, 184, 154, 136, 180],
		[130, 166, 180, 209, 190, 178, 145, 218],
		[138, 190, 172, 223, 186, 170, 215, 222, 169, 195, 154, 162, 150, 199, 154, 130, 156, 177, 183, 198],
		[159, 207, 168, 48],
		[82, 85, 54, 52, 72, 124, 77, 74, 106, 100, 65, 100, 104, 95, 50, 45],
		[114, 127, 42, 37, 119, 123, 70, 37],
		[125, 82, 81, 116, 127, 112, 81, 80, 69, 101, 79, 82, 71, 65, 26, 21],
		[115, 109, 71, 86, 73, 105, 105, 69, 104, 0, 101, 122, 87, 4, 101, 84, 91, 123, 6, 1],
		[94, 13, 109, 117, 35, 5, 22, 121],
		[39, 117, 5, 120, 40, 29, 114, 57, 46, 57, 114, 109],
		[50, 97, 1, 45, 55, 100, 35, 52, 15, 29, 13, 104, 57, 31, 98, 93],
		[56, 15, 53, 10, 4, 49, 82, 57, 48, 50, 57, 3],
		[52, 3, 3, 5, 43, 51, 78, 73],
		[17, 49, 78, 15],
		[32, 45, 78, 18, 31, 57, 42, 189],
		[215, 176, 213, 237, 212, 222, 201, 242, 211, 221, 186, 229, 239, 198, 228, 173],
		[243, 213, 170, 252, 207, 215, 170, 165],
		[248, 205, 174, 230, 199, 198, 213, 144, 240, 207, 245, 201, 199, 149, 237, 196],
		[255, 253, 199, 217, 201, 234, 226, 201, 224, 234, 249, 205, 236, 238, 220, 133],
		[220, 254, 254, 129],
		[222, 211, 233, 183, 163, 133, 133, 174, 159, 151, 250, 245],
		[147, 173, 246, 241],
		[175, 252, 250, 188, 179, 191, 130, 233],
		[183, 129, 238, 179, 131, 139, 230, 225],
		[135, 179, 179, 149, 187, 163, 222, 217],
		[134, 212, 161, 218, 179, 187, 214, 209],
		[136, 191, 210, 205],
		[147, 159, 181, 198, 148, 161, 147, 144, 157, 189, 194, 133],
		[159, 205, 66, 105, 91, 49, 104, 53, 99, 86, 53, 52],
		[107, 92, 61, 101, 84, 61, 70, 66, 72, 68, 33, 126, 76, 79, 82, 105, 120, 118, 127, 32],
		[127, 72, 17, 73, 120, 17, 114, 113, 68, 112, 17, 95, 78, 108, 68, 93, 76, 66, 84, 119, 80, 94, 114, 92, 84, 112, 110, 82],
		[88, 124, 5, 75, 93, 126, 125, 124],
		[27, 112, 14, 41, 31, 31, 26, 37, 27, 37, 26, 32, 20, 34, 6, 40, 7, 97, 109, 100, 53, 58, 22, 53],
		[62, 19, 22, 53, 60, 49, 46, 18, 59, 59, 54, 9],
		[60, 63, 38, 3, 51, 51, 46, 1],
		[55, 93, 73, 4, 17, 65, 77, 6, 44, 38, 69, 68],
		[24, 73, 73, 10, 28, 56, 198, 180],
		[219, 228, 185, 184],
		[227, 211, 205, 180],
		[211, 230, 181, 230, 235, 222, 173, 172],
		[241, 160, 198, 236, 244, 165, 236, 245],
		[251, 204, 169, 246, 196, 199, 200, 241, 248, 196, 153, 152],
		[195, 230, 149, 148],
		[201, 204, 145, 144],
		[205, 157, 137, 128, 209, 222, 250, 217],
		[236, 218, 212, 202, 216, 250, 129, 128],
		[228, 141, 150, 241, 147, 174, 253, 244, 164, 170, 154, 185, 168, 166, 168, 137, 172, 136, 188, 189, 176, 189, 134, 134, 140, 128, 150, 233],
		[128, 233, 138, 237, 140, 136, 152, 141, 128, 180, 178, 144, 130, 162, 162, 220, 185, 188, 189, 208],
		[140, 168, 156, 139, 150, 180, 162, 128, 172, 175, 177, 196],
		[160, 163, 148, 145, 167, 119, 60, 63],
		[89, 85, 56, 59],
		[100, 59, 91, 98, 111, 75, 88, 51],
		[108, 34, 71, 34, 70, 121, 67, 110, 115, 79, 79, 96, 127, 89, 117, 114, 70, 119, 115, 78, 64, 67, 24, 27],
		[69, 127, 111, 30, 121, 107, 65, 84, 75, 119, 119, 71, 106, 6, 96, 11],
		[109, 10, 65, 76, 98, 81, 123, 77, 110, 114, 120, 54, 32, 3, 124, 60, 38, 16, 27, 38, 31, 127, 15, 34, 44, 61, 23, 98, 50, 3, 108, 35],
		[6, 53, 53, 52, 8, 11, 104, 110, 17, 10, 51, 32, 0, 10, 47, 14, 2, 57, 84, 87],
		[15, 36, 1, 25, 53, 33, 76, 79],
		[16, 25, 35, 14, 19, 47, 47, 0, 31, 57, 59, 11, 30, 215, 176, 234, 231, 195, 233, 240, 229, 227, 211, 243, 210, 219, 188, 226],
		[235, 216, 219, 250, 202, 166, 192, 171],
		[206, 170, 160, 224],
		[194, 174, 164, 235, 253, 205, 247, 200, 199, 229, 152, 155],
		[244, 255, 156, 154, 230, 248, 247, 236, 204, 222, 251, 218, 214, 229, 136, 139],
		[213, 213, 128, 137],
		[226, 143, 247, 210, 230, 152, 147, 174, 146, 170, 147, 171, 157, 165, 159, 179],
		[145, 139, 161, 180, 150, 226, 232, 167, 177, 185, 131, 188, 179, 153, 228, 231],
		[185, 139, 139, 164, 188, 210, 167, 140, 185, 181, 216, 219],
		[132, 175, 175, 147, 136, 222, 187, 164, 141, 158, 160, 207],
		[144, 199, 191, 156],
		[174, 203, 179, 150, 162, 164, 175, 146],
		[99, 70, 59, 48],
		[93, 93, 76, 109],
		[108, 59, 76, 123, 104, 76, 51, 50],
		[116, 124, 43, 96, 112, 66, 39, 123],
		[124, 94, 35, 86, 126, 46, 122, 115, 67, 74, 108, 75, 71, 23, 115, 26],
		[73, 97, 96, 71, 118, 74, 19, 18],
		[105, 3, 74, 69, 87, 7, 96, 102, 97, 97, 104, 84],
		[102, 80, 7, 85, 36, 25, 15, 126],
		[30, 2, 0, 119, 17, 24, 119, 118],
		[21, 126, 24, 54, 51, 99, 107, 42],
		[48, 18, 111, 103, 1, 14, 45, 102],
		[63, 48, 103, 111, 57, 57, 48, 15],
		[7, 34, 32, 86, 11, 91, 63, 86],
		[15, 95, 6, 31, 42, 31, 35, 78],
		[21, 45, 36, 27, 26, 33, 55, 70],
		[37, 79, 6, 19, 217, 217, 200, 201, 230, 235, 212, 235, 235, 231, 208, 227, 238, 204, 179, 178],
		[197, 212, 249, 174],
		[206, 167, 192, 167, 206, 222, 246, 239, 198, 204, 163, 162],
		[196, 230, 244, 217, 192, 228, 155, 154],
		[202, 154, 224, 219, 246, 250, 155, 159, 233, 233, 224, 195, 214, 135, 130, 138],
		[220, 212, 214, 215, 216, 202, 131, 130],
		[162, 134, 174, 182, 158, 147, 162, 183, 146, 129, 152, 164],
		[174, 138, 136, 166, 138, 134, 165, 238],
		[183, 231, 128, 162, 130, 152, 231, 230],
		[133, 133, 136, 239, 130, 210, 160, 144, 189, 189, 141, 218],
		[190, 190, 134, 158, 136, 169, 134, 173, 147, 159, 184, 155, 145, 164, 203, 202],
		[155, 148, 150, 149, 157, 181, 175, 61],
		[91, 69, 85, 110, 103, 52, 85, 100, 95, 92, 65, 70, 92, 60, 54, 100, 114, 85, 42, 97, 79, 65, 34, 40],
		[64, 116, 77, 117, 68, 115, 103, 76, 66, 85, 30, 25],
		[124, 20, 97, 93, 124, 109, 83, 68, 72, 120, 125, 5, 82, 117, 102, 9],
		[86, 5, 117, 75, 88, 98, 106, 1],
		[111, 83, 71, 54, 24, 26, 18, 118, 11, 3, 1, 49, 42, 39, 13, 121],
		[46, 6, 5, 60, 11, 63, 63, 96],
		[12, 14, 21, 47, 3, 13, 110, 55, 12, 108, 55, 16, 3, 37, 50, 89],
		[60, 62, 41, 24, 11, 13, 86, 81],
		[55, 41, 86, 4, 40, 37, 31, 1],
		[22, 27, 33, 16, 35, 59, 70, 65],
		[28, 41, 74, 250, 229, 197, 197, 241, 220, 180, 210, 181],
		[237, 205, 231, 248, 215, 219, 217, 229, 203, 211, 174, 169],
		[207, 193, 162, 240, 192, 247, 227, 240, 199, 223, 162, 157],
		[242, 245, 150, 148, 234, 227, 225, 209, 202, 199, 237, 153],
		[206, 233, 233, 201, 235, 229, 134, 132, 225, 219, 142, 211, 227, 235, 134, 129],
		[228, 140, 199, 168, 160, 149, 242, 168, 159, 135, 250, 245],
		[171, 248, 254, 166, 175, 252, 250, 224, 139, 138, 187, 228, 183, 129, 129, 173, 189, 139, 230, 225],
		[191, 236, 234, 148, 187, 186, 173, 158, 188, 177, 131, 132],
		[136, 189, 222, 153, 183, 182, 165, 185, 171, 165, 159, 154, 148, 190, 166, 197],
		[163, 151, 151, 143, 159, 184, 78, 49, 103, 84, 124, 105],
		[100, 106, 78, 125, 80, 90, 49, 48],
		[108, 61, 37, 123, 75, 68, 33, 98, 116, 80, 94, 44, 126, 92, 116, 100, 124, 44, 118, 79, 67, 98, 25, 24],
		[66, 21, 110, 89, 78, 108, 64, 88, 116, 88, 13, 12],
		[104, 107, 110, 89, 84, 89, 105, 4],
		[96, 124, 5, 14, 92, 88, 125, 124],
		[33, 113, 18, 117, 19, 0, 113, 51, 43, 19, 30, 61, 44, 125, 100, 108],
		[8, 97, 2, 101, 2, 0, 52, 42, 56, 28, 48, 39, 4, 8, 46, 23, 0, 14, 54, 31],
		[60, 10, 46, 2, 48, 58, 81, 80],
		[55, 1, 38, 28, 40, 30, 34, 12],
		[21, 48, 0, 17, 30, 60, 38, 11, 29, 18, 176, 188],
		[231, 199, 205, 184],
		[228, 181, 189, 228, 211, 220, 222, 225],
		[212, 200, 198, 251, 240, 161, 198, 249, 199, 207, 206, 242, 251, 204, 165, 216, 199, 199, 242, 201],
		[198, 251, 229, 152],
		[242, 240, 238, 153, 203, 234, 145, 144],
		[204, 157, 133, 216, 232, 228, 238, 195, 213, 218, 238, 136, 216, 214, 196, 203, 231, 232, 145, 252],
		[161, 132, 188, 173, 159, 245, 158, 166, 168, 249, 180, 166, 148, 151, 153, 236],
		[139, 132, 154, 229, 183, 128, 225, 172],
		[139, 131, 150, 164, 135, 135, 139, 220],
		[129, 209, 178, 213, 176, 160, 132, 157, 176, 188, 213, 220, 138, 174, 205, 204],
		[144, 193, 193, 153, 149, 153, 178, 143, 153, 156, 193, 192],
		[167, 109, 87, 52, 98, 83, 83, 127, 86, 59, 95, 115, 111, 97, 91, 91, 109, 103, 44, 47],
		[113, 83, 121, 99, 77, 78, 75, 108],
		[66, 46, 91, 107, 70, 18, 119, 81, 118, 22, 107, 73, 125, 127, 123, 27, 73, 107, 123, 69, 121, 93, 119, 65, 87, 99, 99, 76],
		[83, 127, 0, 110, 95, 116, 119, 78, 93, 45, 34, 127],
		[32, 41, 19, 53, 29, 31, 15, 48, 17, 29, 112, 115],
		[29, 61, 41, 36, 10, 12, 4, 44, 26, 51, 31, 35, 56, 49, 27, 107],
		[6, 56, 35, 21, 53, 9, 51, 31, 4, 90, 5, 28, 9, 11, 80, 83],
		[12, 66, 29, 7],
		[17, 70, 64, 15, 45, 32, 55, 10, 30, 17, 40, 67],
		[37, 215, 180, 232, 225, 182, 215, 234, 209, 222, 195, 192, 218, 190, 180, 250, 236, 215, 168, 231, 201, 195, 160, 166],
		[198, 192, 207, 241, 250, 203, 164, 218, 253, 146, 148, 146, 249, 252, 205, 150],
		[254, 198, 255, 154, 207, 235, 148, 219, 204, 199, 140, 143],
		[215, 243, 140, 224, 225, 253, 247, 238, 223, 244, 247, 206, 221, 173, 162, 255],
		[153, 147, 240, 173, 157, 159, 152, 247],
		[169, 254, 248, 180, 171, 151, 232, 165],
		[138, 230, 189, 190, 180, 179, 151, 172, 129, 155, 136, 227],
		[187, 167, 141, 150, 185, 179, 220, 215, 131, 169, 212, 215],
		[178, 129, 187, 222, 182, 161, 204, 207],
		[169, 172, 157, 129, 150, 160, 179, 150, 152, 139, 192, 195],
		[90, 108, 110, 112, 96, 66, 80, 126],
		[82, 78, 92, 98, 104, 90, 109, 50],
		[116, 70, 39, 120, 78, 66, 76, 103, 122, 116, 76, 112],
		[70, 69, 118, 104, 66, 18, 104, 19, 71, 82, 27, 26],
		[75, 110, 108, 82, 79, 31, 123, 18],
		[83, 2, 100, 90, 109, 109, 124, 78, 97, 97, 81, 6],
		[95, 15, 86, 79, 26, 47, 16, 15, 30, 29, 45, 122],
		[17, 30, 50, 39, 47, 35, 31, 114],
		[49, 99, 4, 102, 55, 34, 107, 106],
		[59, 52, 12, 47, 62, 110, 4, 51, 49, 83, 10, 19, 6, 34, 55, 90],
		[58, 7, 60, 30, 53, 94, 60, 31, 18, 67, 70, 78],
		[45, 71, 14, 65, 53, 3, 51, 70],
		[30, 79, 75, 19, 226, 236, 208, 239, 222, 196, 187, 186],
		[208, 184, 179, 186, 238, 227, 204, 255, 242, 246, 175, 174],
		[240, 205, 216, 251, 251, 242, 226, 243, 254, 240, 250, 174, 249, 246, 198, 207],
		[253, 151, 159, 210, 204, 225, 224, 221, 206, 236, 147, 146],
		[225, 220, 222, 221, 226, 226, 218, 194, 220, 253, 227, 139, 237, 229, 244, 198, 153, 153, 169, 254],
		[167, 246, 148, 175, 172, 129, 156, 177],
		[175, 254, 156, 182, 177, 134, 231, 189, 181, 130, 140, 226],
		[187, 234, 136, 162, 190, 239, 170, 179, 181, 210, 176, 214, 134, 162, 179, 218],
		[177, 190, 184, 128, 189, 223, 150, 135, 147, 194, 191, 206],
		[174, 189, 160, 142, 161, 161, 168, 139, 158, 207, 202, 61],
		[98, 69, 58, 126, 100, 94, 85, 120, 107, 56, 63, 49],
		[104, 90, 70, 45],
		[75, 127, 127, 103, 119, 80, 69, 116, 124, 82, 74, 33],
		[126, 86, 73, 90, 64, 99, 30, 25],
		[71, 20, 18, 95, 112, 114, 125, 86, 119, 127, 18, 13],
		[82, 1, 101, 93, 86, 5, 101, 65, 88, 109, 14, 82],
		[103, 121, 105, 114, 32, 21, 13, 40, 16, 1, 43, 124, 19, 29, 51, 31, 20, 22, 29, 32, 51, 37, 110, 105],
		[54, 101, 1, 34, 58, 29, 13, 41, 7, 31, 98, 93],
		[56, 53, 27, 23],
		[6, 11, 33, 88, 51, 59, 86, 81],
		[59, 92, 57, 25, 36, 64, 74, 30, 20, 68, 33, 72],
		[26, 72, 45, 15, 39, 41, 49, 176, 219, 213, 209, 206, 231, 235, 213, 228, 236, 203, 182, 177],
		[239, 217, 227, 160, 203, 202, 217, 217, 244, 193, 166, 232, 253, 219, 166, 161],
		[196, 173, 213, 204, 248, 250, 241, 200, 247, 241, 223, 196, 203, 253, 253, 217, 201, 239, 146, 141],
		[232, 128, 203, 216, 236, 238, 253, 237, 216, 237, 138, 208, 223, 141, 233, 240],
		[147, 151, 242, 149, 147, 128, 172, 245],
		[147, 146, 163, 160, 148, 254, 129, 166, 179, 133, 226, 188, 183, 187, 134, 229],
		[187, 157, 226, 182, 132, 134, 141, 144, 131, 208, 215, 217],
		[134, 139, 177, 133, 187, 173, 135, 150, 137, 169, 169, 133, 168, 192, 166, 201],
		[145, 196, 159, 136, 160, 200, 156, 193],
		[167, 204, 86, 49, 83, 49, 61, 112, 98, 64, 94, 61, 110, 74, 49, 48],
		[95, 87, 70, 122, 115, 68, 44, 40],
		[119, 122, 33, 105, 120, 124, 33, 32],
		[124, 88, 25, 79],
		[65, 78, 114, 81, 68, 20, 114, 69],
		[75, 25, 122, 24],
		[116, 29, 102, 1],
		[86, 116, 88, 65, 108, 102, 5, 4],
		[91, 108, 9, 72, 100, 103, 10, 25, 35, 20, 22, 117, 39, 6, 117, 116],
		[40, 121, 121, 62, 44, 125, 22, 58],
		[54, 20, 109, 16, 15, 15, 10, 49, 12, 13, 22, 16],
		[58, 24, 54, 85, 6, 38, 34, 22, 7, 48, 12, 28],
		[9, 44, 20, 5, 11, 62, 77, 76],
		[16, 52, 77, 27, 59, 35, 57, 68],
		[46, 73, 54, 12, 36, 40, 206, 177],
		[225, 238, 210, 255, 220, 223, 217, 180],
		[222, 229, 218, 249, 215, 226, 198, 232],
		[200, 254, 236, 227, 244, 164, 209, 164],
		[254, 169, 240, 246, 250, 216, 199, 156],
		[251, 244, 246, 206],
		[197, 149, 254, 153, 254, 252, 192, 222, 204, 232, 220, 203, 232, 228, 250, 195, 212, 218, 234, 195],
		[217, 252, 250, 196, 221, 141, 150, 134, 160, 132, 253, 173, 162, 134, 245, 244],
		[144, 249, 154, 253, 152, 136, 188, 165, 136, 139, 164, 163, 180, 186, 142, 137, 128, 182, 134, 167, 132, 135, 177, 220],
		[129, 141, 143, 216],
		[132, 160, 132, 147, 142, 170, 209, 208],
		[140, 183, 166, 193, 168, 164, 165, 200],
		[175, 166, 197, 196],
		[155, 172, 201, 136, 164, 88, 75, 75, 85, 65, 52, 75],
		[102, 95, 60, 125, 111, 84, 92, 51],
		[109, 71, 40, 32, 73, 66, 71, 96],
		[78, 42, 113, 114, 120, 119, 83, 104, 69, 103, 119, 96, 71, 101, 24, 27],
		[69, 127, 127, 66, 72, 31, 123, 87, 117, 102, 99, 94, 86, 124, 100, 11],
		[84, 11, 127, 67, 95, 125, 0, 3],
		[92, 8, 11, 46, 39, 41, 19, 51, 35, 13, 27, 38, 17, 33, 11, 127, 45, 24, 0, 111],
		[48, 19, 57, 35, 13, 47, 100, 103],
		[1, 110, 11, 110, 13, 55, 25, 14, 1, 51, 51, 19, 3, 32, 39, 41, 14, 58, 63, 6, 53, 64, 68, 26, 17, 35, 32, 75],
		[33, 47, 21, 15, 31, 56, 56, 76, 46, 216, 203, 251, 218, 220, 238, 187],
		[229, 186, 188, 225, 232, 225, 180, 249],
		[237, 215, 168, 248, 242, 227, 168, 171],
		[205, 246, 211, 236, 249, 201, 211, 241, 198, 248, 235, 230, 193, 150, 247, 202],
		[197, 239, 255, 199, 207, 237, 144, 147],
		[204, 247, 201, 218, 214, 227, 255, 222, 238, 138, 205, 233, 226, 228, 239, 210],
		[229, 174, 139, 174, 153, 156, 181, 170],
		[158, 250, 177, 188, 168, 254, 152, 243],
		[172, 226, 232, 171, 183, 149, 232, 235],
		[180, 181, 143, 160, 184, 155, 228, 171, 188, 210, 183, 183, 185, 188, 141, 214],
		[131, 159, 212, 215],
		[137, 187, 171, 218],
		[188, 156, 191, 162, 167, 147, 200, 203],
		[148, 202, 175, 202, 175, 207, 183, 142, 90, 86, 55, 51, 93, 93, 84, 119, 106, 59, 62, 54],
		[94, 74, 72, 63, 74, 64, 47, 46]
	];
	const ᐃⲆⲆᐃΔΔΔ = 2 - 121;
	for (let ⵠⲆⵠΔᐃⲆᐃⲆΔ = 0; ⵠⲆⵠΔᐃⲆᐃⲆΔ < ⲆⵠΔᐃᐃᐃΔ["length"]; ⵠⲆⵠΔᐃⲆᐃⲆΔ++) ⲆⵠΔᐃᐃᐃΔ[ⵠⲆⵠΔᐃⲆᐃⲆΔ] = ⲆⲆⲆⲆᐃᐃᐃ["atob"](ⵠⵠᐃⲆΔⲆⲆ(ⲆⵠΔᐃᐃᐃΔ[ⵠⲆⵠΔᐃⲆᐃⲆΔ]));
	var ΔⵠⵠᐃⲆ = 110;
	if (ΔⵠⵠᐃⲆ === 10) ΔⵠⵠᐃⲆ = 46;
	let ⵠⲆᐃⵠᐃⲆⲆ = 247 + 59 << 1;
	var ᐃⵠᐃⲆⲆΔⲆ = 220;
	var ᐃⵠⵠⵠᐃⵠᐃ = 99;
	var ⵠⵠᐃⵠⵠΔⲆⵠⲆ = 147;
	const ⲆⵠⵠⲆΔΔⵠ = 36;
	let ⲆⲆΔⵠⵠⲆⲆ = 247;
	if (ⲆⵠⵠⲆΔΔⵠ >= ⲆⲆΔⵠⵠⲆⲆ) ⵠⵠᐃⵠⵠΔⲆⵠⲆ = 92;
	var ⲆΔᐃΔΔΔΔ, ⵠᐃⲆΔⲆᐃᐃⵠΔ;
	let ᐃⲆⲆᐃⲆⵠⲆ = {};
	var ⵠᐃΔᐃΔⵠⲆΔⲆ, ⲆⵠⵠΔⲆᐃᐃ, ⵠΔΔⵠⵠᐃΔΔⵠ;
	ᐃⲆⲆᐃⲆⵠⲆ.ⲆᐃⲆⵠⵠᐃⲆΔΔ = 8;
	var ᐃⵠⵠⲆΔΔⲆᐃᐃ = 130 + 135 << 11;
	if (ᐃⵠⵠⵠᐃⵠᐃ > 11) ᐃⵠⵠⵠᐃⵠᐃ = 12;
	var ⵠⲆΔⲆⵠⲆΔⵠΔ = 83;
	if (ⵠⲆΔⲆⵠⲆΔⵠΔ == 0) ⵠⲆΔⲆⵠⲆΔⵠΔ = 185;
	let ⲆⵠⲆᐃⲆΔᐃᐃⵠ = 180;
	let ⵠⵠⵠⲆΔᐃⵠ = 46 + 225;
	const ΔΔⵠⵠⲆΔΔᐃⲆ = 116;
	var ⲆΔᐃᐃⲆΔⲆ = 116 - 71;
	const ⲆᐃⵠΔΔⵠⵠ = 230;
	let ᐃᐃΔⵠΔⲆⵠ = ⲆᐃⵠΔΔⵠⵠ;
	const ᐃΔⵠᐃⵠⲆⵠ = Math.floor(ΔΔⵠⵠⲆΔΔᐃⲆ[ΔΔⵠⵠⲆΔΔᐃⲆ.ΔΔⵠⵠⲆΔΔᐃⲆ]);
	var ΔⲆⲆᐃᐃⲆᐃ = {};
	ΔⲆⲆᐃᐃⲆᐃ.ΔⲆΔᐃⲆ = 13;
	let ⲆΔⵠⲆᐃⵠΔ = 115;
	var ⲆⵠⲆᐃΔᐃⵠ = 203;
	let ᐃⵠⵠⲆᐃ = 56 + 128 << 11;
	const ᐃᐃᐃⲆⲆΔᐃ = 244;
	const ⵠⲆⵠΔⲆᐃΔ = Math.floor(ᐃᐃᐃⲆⲆΔᐃ[ᐃᐃᐃⲆⲆΔᐃ.ᐃᐃᐃⲆⲆΔᐃ]);
	var ⵠⵠΔⲆⲆΔⲆⲆᐃ = ⲆⵠⲆᐃΔᐃⵠ;
	const ΔⵠΔᐃΔⲆⲆᐃᐃ = 80;
	const ⵠⵠⲆΔⲆᐃΔ = Math.floor(ΔⵠΔᐃΔⲆⲆᐃᐃ[ΔⵠΔᐃΔⲆⲆᐃᐃ.ΔⵠΔᐃΔⲆⲆᐃᐃ]);
	var ⲆΔⵠⲆᐃⲆⲆΔΔ = 49;
	var ᐃΔᐃᐃⵠⲆΔΔⵠ = 90;
	if (ᐃΔᐃᐃⵠⲆΔΔⵠ == 12) ᐃΔᐃᐃⵠⲆΔΔⵠ = 200;
	var ⲆΔΔⲆΔΔⵠ = 77;
	if (ⲆΔΔⲆΔΔⵠ === 1) ⲆΔΔⲆΔΔⵠ = 1;
	if (ⲆΔⵠⲆᐃⲆⲆΔΔ == 8) ⲆΔⵠⲆᐃⲆⲆΔΔ = 69;
	let ΔⲆᐃᐃⵠⲆⵠ = 63;
	var ⵠᐃΔΔⲆⵠⲆ, ⲆΔΔΔⲆᐃᐃᐃΔ;
	ΔⲆᐃᐃⵠⲆⵠ.ⵠΔⲆⲆⵠⲆⵠ = 8;
	var ⵠⵠⲆⲆⲆΔⵠ = {};
	ⵠⵠⲆⲆⲆΔⵠ.ⵠⵠⲆⵠᐃ = 6;
	var ⵠᐃⵠⲆᐃΔⵠ = 138;
	const ⵠᐃᐃⲆΔⲆᐃ = 190;
	const ΔᐃΔⲆⵠⲆᐃⵠΔ = {};
	ΔᐃΔⲆⵠⲆᐃⵠΔ.ΔᐃΔⵠΔΔⵠ = 6;
	const ᐃⲆΔᐃΔⵠⵠ = 170 - 84;
	const ᐃⵠⵠᐃᐃΔⲆ = Math.floor(ⵠᐃᐃⲆΔⲆᐃ[ⵠᐃᐃⲆΔⲆᐃ.ⵠᐃᐃⲆΔⲆᐃ]);
	var ⲆⵠΔΔΔⵠΔⲆⲆ = 161 + 79 << 6;
	var ⵠΔᐃⵠᐃΔⲆΔⵠ = 233;
	const ⵠᐃⲆⲆⵠⵠΔⲆⵠ = 0 - 115;
	if (ⵠΔᐃⵠᐃΔⲆΔⵠ == 14) ⵠΔᐃⵠᐃΔⲆΔⵠ = 193;
	let ⲆΔᐃⲆⲆΔⵠ = 223 * 2;
	const ΔⲆᐃᐃΔᐃⲆⵠⲆ = 213;
	var ⵠⵠⲆᐃΔⲆᐃ = 54;
	if (ⵠⵠⲆᐃΔⲆᐃ === 14) ⵠⵠⲆᐃΔⲆᐃ = 232;
	ΔⲆᐃᐃΔᐃⲆⵠⲆ.ⲆΔᐃΔⲆᐃⲆ = 5;
	if (ⲆⵠⲆᐃⲆΔᐃᐃⵠ === ⲆΔⵠⲆᐃⵠΔ) ᐃⵠᐃⲆⲆΔⲆ = 118;
	const ⵠⲆⲆᐃⲆ = 15;
	const ⵠⲆΔⵠ = -2871 + 1024 + 273 + 1165 + 52 + 353 + 22 + 2;
	const ΔΔⵠⲆⵠ = undefined;
	const ⵠ = ["#77371f", "#c1b06b", "#596560", "Cactus", "Taco4Life", "#674C2A", "rgba(255, 255, 255, 0)", "#a7983c", " Constraints", "#252B28", "gm", "#ee593d", "CrysTal", "timeremainingquest", "gapi", "#564021", "#EBF2F0", "claim_rewards", "Damage: 20", " Share on Twitter", "de", "&userid=", "Haltbarkeit: 2000", "111_111_011", "#124949", "#eda80d", "fo", "Crab claws can also be eaten", "#523e26", "#53A4D5", "#e6636a", "Anyone want to play?", "kit", "#29aaa1", "#092b29", "winter_7", "starve_mapping", "#136167", " Claim rewards", "Obrażenia do budowli: 1", "Building Damage: 1", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16", "#555555", "'Baloo Paaji', sans-serif", "#1a4545", "Durabilité: 700", "#328587", "000_111_010", "#1F343F", "iblk", "Durabilité: 1000", "starve_quests", "#f9efeb", "servselect", "Days survived", "#0b2326", "You will be cured faster", "canvas", "#3d2a6e", "Durability: 700", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16", "#2E85A0", "#665329", "#654320", "Grab herum um Dreck, Eis und Sand zu bekommen", "#e4efe8", "000_111_110", "000_110_110", "#FFF", "#B26F31", "#4d2d14", "gw", "Продолжительность: 8 дней", "time_finished_", "#1e2021", "#322413", "#7C5A29", "Haltbarkeit: 1000", "Durability: 1000", " Open 5 treasure chests", "#187484", "Wytrzymałość: 2000", "011_111_110", "#b29e4d", "Oh, yeah? Is there crab in the crab sticks?", "#c4bc51", "#1f5453", "Durabilidad: 1000", "dano: 2", "#031619", "azerty_ing", "#4c3b19", "#C1C0C0", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "#347f93", "You are the king of crabs!", "Birth: 4min", "Schaden: 2", "#1d051e", "event", "Hält dich warm außerhalb von Wasser und Winter", "Sushui", "Starve.io", "Crab Helmet", "px Baloo Paaji", "Ciepło w i poza zimą", "Прочность: 1000", "You are less cold, less thirsty, and less hungry", "010_111_010", "send", "#3A2A0D", "#b3e0e3", "#ff0000", "011_111_111", "#382e19", "#A5A244", "#89d1d4", "#ddcf8a", "#388AC7", "Durability: 2000", "Survive without losing life", "GET", "#342C7C", "#63c9d6", "#c26de0", "Damage: 30", "#092813", "#5cccc4", "#73dde5", "#107746", "#1f4948", "Прочность: 2000", "treasure_chest_4", "Урон по строениям: 1", " Share on Facebook", "Daño para estructuras: 1", "#46c2c9", "Communist", "volume", "010_011_010", "2d", "lock_team", "#ffffff", "#1f773d", "Time Remaining", "Damage: 2", "111_111_010", "You feel a great power emanating from this orb", "fade", "durabilidade: 2000", "undefined", "#000", "dont_hit_5", "plm", " QUIT", "active", " Reward", "playing", "#083b3a", "#af59cd", "#574122", "typequest", "LAVA", "#A37943", "#077b49", "#0a2d18", "game_body", "serverAddressInput", "#123b3f", "#e2cf27", "011_011_011", "Warm outside water and in winter", "Bueno para destruir estructuras", "También puedes conseguir minerales", "getAuthResponse", "000_011_000", "#47341d", "111_111_000", "When you are flying,", "This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack.", "#2b280a", "Wytrzymałość: 700", " Collect 100 bread in deep winter", "</div>", "Starve.io ", "#214C4B", "CLAIM REWARD!", "auto", "MADBalgouthi", "#35b1b5", "source-over", "#115E60", "You can also gather minerals", "#c04933", "#0e3838", "Damage: 14", "#f4efc6", "110_111_010", "#554139", "starve_safe", "000_011_010", "#c7a726", "#44301b", "#c4a23a", "Building method: Grid. Press G to change", "shop_starterkit", "Защита от игроков: 4, Защита от животных: 16", "#123d38", "000_010_000", "#614627", "#73583e", "spectator", "#1a7961", "011_111_011", "#8a938e", "Du kannst auch Mineralien bekommen", "Durabilité: 2000", "#3dc4c0", "home_craft", "Dig the ground to gather dirt, ice, and sand", "la", "audio/ambience.mp3", "On-Hit Damage: 3", " After 1 day, survive in winter", "#0B6A84", "#5E3E1A", "application/x-www-form-urlencoded", "#e7dc8f", "#111316", "#764eb5", "middle", "amethyst_2", "#816511", "#1b170c", "000_110_000", "111_111_111", "#fef4f4", "#dfd1cb", "Game", "re", "#083326", "#200333", "high_ing", "_trad_number", "round", "Durée de vie: 8 jours", "#0e3022", " Be peaceful", "#C6AF81", "comida: 100", "defesa de jogadores: 4, defesa de animais: 16", "#7d6144", "#000000", "010_110_110", "Damage: 5", "Damage: 24", "WINTER", "recipe_craft", "#5E3C10", "starve_cancel", "Widget", "#D8DC74", "FOREST", "Jedzenie: 100", "#043c37", "#123335", "#bbbbbb", "Durabilidad: 2000", "#b7252c", "#493e26", "durabilidade: 700", "quit_chronoquest", "#54a4ba", "Building Damage: 4", "#fff", "Lebenszeit: 8 Tage", "010_111_110", "Défense: 4, Défense contre animaux: 16", "Damage: 1", "#041c21", "#030d14", "#7f6d52", "#3f332a", "#86d4e0", "#432516", "000_111_011", " you can only hit people who are flying too", "#C98435", "#0F3A24", "score", "#EFE4B4", "#171a19", "Uuunnnggg", "wtb", "Allow you to calm crabs, and heal them", "#46554D", "#BB0000", "#cd98e5", "#113f3c", "cursor", "#21112D", "Bed", "#082b22", "Uuunnnggg...", "Creuse la terre, le sable et la neige", "#262114", "010_111_011", "Essen: 100", "load", "#B56D18", "000_110_010", "Players Defense: 4, Animals Defense: 16", "points", "survive20min_3", "#634828", "010_110_000", "You can not attack when you use it", "Easter Egg", "cancel_sure_delete", "#454545", "011_111_010", "Pixelbitie", "#efd435", "#24878f", "#9b2b25", "Lifetime: 8 days", "#ac222a", "loaderror", "010_011_000", "#c27add", "Totem", "Emerald Machine", "Crab Spear", "#d588f1", "#83827e", "#281C08", "#43b5af", "stop", "Réchauffe en dehors de l'eau et dans l'hiver", "#bfb360", "#9baaa3", "#182935", "#EDCE4F", "FB", "play", "#2a2938", " Collect 1 dragon heart", "nu", "string", "mouseup", "Защищает от холода вне воды.", "Food: 10", "dw", "#58452b", "_blank", "Damage: 4", "#2A8B9B", "110_111_110", "team_box", "#d2c77b", "__default", "#939393", "110_111_000", "starve_info_box", "mousedown", "rewardquest", "nickname_block", "#0a2f2b", "#2b6664", " : ", "cs", "#33b4e4", "útil para destruir construções", "#8c29aa", "#07393d", "#68622D", "#C0BF55", "#15514f", "#3da34d", "110_110_000", "low_ing", "Cava para conseguir tierra, arena y hielo", "object", "#183f3f", "#032428", "#e45936", "#d45ce5", "#392C16", "#C09D6F", "Crab Claw", "#4c3a15", "Haltbarkeit: 700", "#e9dad9", "#e0f2f6", "#57442a", "pos", "#120202", "upfiz", "isl", "Czas życia: 8 dni", "#6a7570", "#2b5c48", "none", "011_011_010", "inv_shop", "#1a4935", "#e8e8e8", "#163A3A", "#b864d6", "#0a2728", "#3e3c25", "#133a2b", "#032b23", "#242330", "Food: 20", "Durability: 400", "Chapka", "#75827D", "#174a51", "010_010_010", "They can't hit you and you can't hit them", "#211108", "#87d2e6", "XPayStationWidget", "110_111_111", "name", "qwerty_ing", "#a9e4ed", "Используется для разрушения зданий", "Damage: 3", "010_111_000", "starve_quality", "Schaden an Gebäuden: 1", "110_110_110", "Nützlich um Gebäude zu zerstören", "#74ede6", ".md-languages label button", "#462966", "bread_6", "pizza wa", "mousemove", "Winter", "id", "Peut aussi récupérer des minéraux", "#313041", "constraintquest", "loaded", "#072824", "time", "#b2d4d1", "#c67933", "#2b9390", "#141414", "Chrono Quests", "px", "#8255b5", "#163a3a", "000_111_111", "#252525", "Score", "011_011_000", "#95d5d8", "#747471", "#096d41", "#073030", "#59c9c0", "Useful to destroy buildings", "#a33e2b", "Pomocny w niszczeniu budowli", "sw", "#660000", "#1d1d22", "#877d36", "#939995", "Crab sticks", "claim_reward_", "111_111_110", "#4eb687", "#0d2e33", "function", "#4C3B19", "000_010_010", "#042b30", "_on", "Crabs follow you", "Content-Type", "#0a0b0c", "durabilidade: 1000", "#2b7c57", "inline-block", "#0c0c0d", "110_111_011", "#09373F", "#0d1b1c", "dano em construções: 1", "account_nickname_input", "#280e09", "#adbcb5", "Durabilidad: 700", "Wytrzymałość: 1000", "010_011_011", "number", "Players Defense: 4", "#b15ecf", "#232828", "você também pode pegar minerais", "#184747", "#25c5d6", "#be8d50", "#0F464C", "#281A49", "#d7990c", "#1f343f", "#43aa82", "Прочность: 700", "init", "#5f6061", "110_110_010", "starve_aliasing", "Możesz także zdobyć minerały", "cave o chão para pegar terra, areia e gelo", "eject_member", "aloner", "#afac98", "#A9D6D3", "#263947", "#EAEAEA", "fod", "000_111_000", "input_ratio", "#9E8456", "#34255d", "#58645F", " Gather 1 amethyst", "Так же вы можете получить ресурсы", "#3fc9c9", "opacity", "#5cc5ce", "Sandwich", "#7d5234", "#29997c", "010_010_000", "#785f4c", "click", "#1678a2", "Animals Defense: 13", "Relax in this confortable bed", "You can buy items on the shop in the next game with your points", "Урон: 2", " BACK TO THE GAME", "#a08f47", "#c3be9a", "DESERT", "_number", "#86d0d1", "#8359d3", "Utile pour détruire les bâtiments", "#FFFFFF", "#67766F", "auth2", "img/avatar-player14.png", "Building method: Free. Press G to change", "000_011_011", "destination-out", "#A89F67", "nickname_input", "#394841", "forest", "#83ddd4", "Копайте землю, чтобы получить грязь, лед и песок", "011_111_000", "Dégâts: 2", "#485e66", "spatial", "#3ba578", "killdragon_1", "timeremain_", "Kill", "running", "#B6222A", "buy_kit", "Comida: 100", "010_111_111", "Te calienta en invierno y fuera del agua", "#b29c32", "Daño: 2", "010_110_010", "#4d4a2e", "eogito", "#0b3432", "#0a4049"];
	const ᐃΔⵠΔΔ = 9;
	const ΔΔⲆᐃⲆⵠⵠ = -8;
	const ⲆⲆⲆᐃⲆ = false;
	const Δⵠᐃᐃᐃⵠᐃ = 1920;
	const ⵠΔⲆᐃⲆᐃⵠ = -2089 + 1797 + 60 + 133 + 33 + 14 + 16 + 10 + 11 + 19 + 4 + 3;
	const ᐃᐃᐃΔᐃ = 255;
	const ⵠⲆᐃⲆᐃ = true;
	const ⵠΔΔΔ = ⵠⲆΔⵠ;
	const ΔⵠᐃⵠΔΔΔ = -2249 + 251 + 2643 + 9 + 289 + 18 + 104 + 5 + 7 + 2 + 1;
	const ᐃΔᐃΔ = 8 - 2 - 2;
	const ΔⵠⲆⵠⵠ = -738 + 559 + 132 + 56 + 10;
	const ᐃⵠᐃᐃΔ = 12;
	const ⲆⵠΔᐃⵠ = ᐃΔⵠΔΔ;
	const ⵠⵠᐃᐃ = ⵠⲆΔⵠ;
	const ᐃⲆⵠᐃⲆ = -926 + 807 + 138 + 21 + 55 + 3 + 2;
	const ⲆⵠⲆⵠⵠⵠⲆ = 614 - 53 - 116 - 84 - 95 - 6 - 3 - 1;
	const ⵠᐃⵠⲆⵠ = 23 - 3 - 3;
	const ⲆᐃⲆᐃΔ = ⲆⲆⲆᐃⲆ;
	const ⵠⲆⲆΔ = 283 - 137 - 130 - 1 - 7 - 3 - 2;
	const ᐃᐃᐃⵠⲆⲆΔ = 56 - 35 - 3;
	const ΔⲆᐃⵠᐃ = 1575 - 1160 - 173 - 29 - 175 - 14 - 15 - 1;
	const ᐃᐃⲆᐃᐃ = -81 + 36 + 4 + 48 + 1 + 1 + 1;
	const ⲆⵠⲆⲆ = ᐃΔᐃΔ;
	const ⲆᐃᐃᐃΔΔΔ = -4;
	const ΔⲆΔΔⵠⲆⵠ = 0;
	const ᐃᐃⵠⵠ = 6 - 1;
	const ⵠᐃᐃⵠⲆ = ᐃᐃᐃΔᐃ;
	const ΔΔⲆⲆⲆ = ⵠⲆᐃⲆᐃ;
	const ⵠⵠⵠᐃⵠⲆⵠ = 1;
	const ᐃᐃᐃΔΔ = ΔⵠⲆⵠⵠ;
	const ᐃⲆΔⵠΔⵠΔⲆΔ = 1 << 0;
	const ⵠΔⵠⲆⵠ = ᐃΔⵠΔΔ;
	const ΔⲆⵠᐃⵠ = ⲆᐃⲆᐃΔ;
	const ⵠⲆⵠⵠΔ = 2630 - 2597 - 16 - 1;
	const ΔⵠⲆⲆᐃΔⲆⲆⲆ = "";

	function ⲆᐃⲆⵠᐃⲆⲆⲆΔ(ᐃⲆⵠⵠᐃΔᐃⲆⲆ) {
		if (ᐃⲆⵠⵠᐃΔᐃⲆⲆ > 0) return ᐃⲆⵠⵠᐃΔᐃⲆⲆ * ᐃⲆⵠⵠᐃΔᐃⲆⲆ;
		else return ᐃⲆⵠⵠᐃΔᐃⲆⲆ
	}

	function ⵠᐃⵠΔᐃᐃΔⵠᐃ(ΔⵠⵠⲆⲆΔΔ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ΔⵠⵠⲆⲆΔΔ)
	}

	function ᐃᐃⵠᐃⵠⲆⲆᐃⵠ(ᐃΔᐃᐃᐃΔⲆᐃⲆ) {
		return ᐃΔᐃᐃᐃΔⲆᐃⲆ.map(ⵠᐃⵠΔᐃᐃΔⵠᐃ).join(ΔⵠⲆⲆᐃΔⲆⲆⲆ)
	}

	function ⵠΔᐃᐃΔⵠᐃ(ⲆⲆⵠⲆᐃⵠⲆⲆⲆ) {
		const ΔⲆⵠΔΔⲆΔⵠⵠ = ⲆᐃⲆⵠᐃⲆⲆⲆΔ[ⲆⵠΔᐃᐃᐃΔ[274]]();
		const ᐃΔⵠᐃⵠᐃⵠ = ΔⲆⵠΔΔⲆΔⵠⵠ.indexOf(ⲆⲆⵠⲆᐃⵠⲆⲆⲆ);
		return ᐃΔⵠᐃⵠᐃⵠ !== -1 ? 1 : 0
	}
	const ᐃⵠⵠᐃⲆⲆΔ = ⵠΔᐃᐃΔⵠᐃ(ᐃᐃⵠᐃⵠⲆⲆᐃⵠ([11398, 5123, 11398, 11616, 5123, 11398, 11398, 11398, 916]));
	if (ᐃⵠⵠᐃⲆⲆΔ === 0) {
		const ᐃⵠⵠᐃⲆⲆΔ = Math.random;
		const ⲆᐃⲆⵠᐃⲆⲆⲆΔ = [];
		const ᐃΔⵠᐃⵠᐃⵠ = function() {
			for (let ᐃⲆⵠⵠᐃΔᐃⲆⲆ = 0; ᐃⲆⵠⵠᐃΔᐃⲆⲆ < 6034; ᐃⲆⵠⵠᐃΔᐃⲆⲆ++) ⲆᐃⲆⵠᐃⲆⲆⲆΔ.push(ᐃⲆⵠⵠᐃΔᐃⲆⲆ);
			return ᐃⵠⵠᐃⲆⲆΔ()
		};
		Math.random = ᐃΔⵠᐃⵠᐃⵠ
	}
	const ΔⲆΔᐃΔ = 13;
	const ⵠᐃⲆⵠ = 6;
	const ΔⲆⲆⲆⲆ = 17 - 2 - 1;
	const ΔΔᐃⵠⵠ = ΔⲆⵠᐃⵠ;
	const ⵠⲆΔΔ = 4 - 1 - 1;
	const ΔΔⲆⲆⲆⲆᐃ = ⲆⵠⲆⵠⵠⵠⲆ;
	const ΔⲆᐃΔⵠ = ⵠᐃⵠⲆⵠ;
	const ᐃΔⵠΔᐃ = ᐃⲆⵠᐃⲆ;
	const ⵠᐃⲆΔ = ⵠⲆΔⵠ;
	const ⲆⲆⵠᐃⲆ = ⵠⲆⵠⵠΔ;
	const ⵠΔᐃⲆΔΔⵠ = 1 * 2;
	const ⲆⲆᐃⲆⵠⵠᐃ = 1 << ⵠⲆΔΔ;
	const ΔⲆᐃ = -3383 + 2918 + 82 + 57 + 296 + 7 + 9 + 3 + 9 + 3;
	const ΔΔⵠⵠΔΔⲆ = ⵠᐃⲆⵠ;
	const Ⲇⵠᐃᐃᐃ = 7;
	const ⵠᐃᐃⵠᐃⵠⲆ = 1 << ᐃⵠᐃᐃΔ;
	const ᐃᐃᐃᐃⵠⵠᐃ = ΔⲆᐃ * 2048;
	const ⵠᐃⵠᐃⲆᐃΔ = ᐃᐃᐃⵠⲆⲆΔ;
	const ⵠΔᐃⲆ = ⵠⲆⲆΔ;
	const ΔΔΔⵠⲆⲆⲆ = 1 << ΔⲆⲆⲆⲆ;
	const ⲆⵠⵠΔⲆⵠⲆ = ⲆⵠⲆⵠⵠⵠⲆ;
	const ⵠΔⵠᐃ = ⵠⲆΔΔ;
	const ⲆᐃⲆᐃΔΔⵠ = 0;
	const ⲆⲆⵠΔⲆΔⵠ = ᐃᐃᐃΔᐃ;
	const ᐃΔᐃⲆΔⵠΔ = 4;
	const ⲆΔᐃΔΔⲆⵠ = 12;
	const ᐃΔᐃⵠⵠΔⵠ = ⲆⲆⵠᐃⲆ;
	const ⵠΔⵠⵠⲆᐃⵠ = ΔⲆᐃⵠᐃ;
	const ᐃⵠⲆⵠⲆⲆⵠ = 12;
	let ⵠⵠΔⵠⵠΔⲆ = undefined;
	const ᐃⲆⵠⵠᐃⵠⲆ = ΔⵠᐃⵠΔΔΔ;
	const ΔΔᐃ = 0;
	const ⲆⵠΔΔΔ = ⵠᐃᐃⵠⲆ;
	const ⲆⲆⲆⲆⲆⵠΔ = {};
	const ⲆᐃᐃⲆⲆΔⵠ = {};
	ⲆⲆⲆⲆⲆⵠΔ["get"] = function(ⵠΔΔΔᐃⵠⲆ, ΔΔΔⵠⵠ) {
		if (ΔΔΔⵠⵠ !== "ⲆⲆⲆⲆⲆⵠΔ") {
			const ⲆⲆⲆⲆⲆⵠΔ = function() {
				for (let ⵠΔΔΔᐃⵠⲆ = 0; ⵠΔΔΔᐃⵠⲆ < 5; ⵠΔΔΔᐃⵠⲆ++) ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("click", (function() {
					ⲆⲆⲆⲆⲆⵠΔ()
				}))
			};
			ⲆⲆⲆⲆⲆⵠΔ()
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ⵠⵠΔΔΔⵠΔ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ⲆᐃᐃⲆⲆΔⵠ, ⲆⲆⲆⲆⲆⵠΔ);
	const ᐃΔΔΔⲆⵠΔ = ⵠⵠΔΔΔⵠΔ.ⲆⲆⲆⲆⲆⵠΔ;
	const ᐃⲆᐃΔΔ = ΔΔⵠⲆⵠ;
	const ᐃᐃΔⵠ = ⵠΔⵠᐃ;
	const ΔΔⲆᐃⲆ = ⵠᐃⵠⲆⵠ;
	const ⵠⲆᐃᐃⲆ = ᐃᐃᐃΔΔ;
	let ΔⵠΔⲆⲆΔΔ = undefined;
	let ΔⲆᐃⵠΔⵠᐃ = ᐃⲆᐃΔΔ;
	const ⵠᐃⲆⲆᐃΔⲆ = ⵠΔⲆᐃⲆᐃⵠ;
	let ⲆᐃⲆΔᐃ = undefined;
	let ⲆⵠΔΔⵠⵠⵠ = ᐃⲆᐃΔΔ;
	const ᐃΔᐃⲆΔ = ⵠᐃᐃⵠⲆ;
	const ⲆⵠᐃᐃⲆ = ⵠᐃⵠᐃⲆᐃΔ;
	let ΔⲆⵠⲆⵠΔⲆ = undefined;
	const ᐃᐃⵠᐃΔ = ᐃᐃⲆᐃᐃ;
	let ⵠⲆᐃᐃΔⲆᐃ = undefined;
	const ΔᐃⵠΔⵠ = ⲆⵠΔᐃⵠ;
	let ᐃⵠⵠⲆⲆᐃᐃ = ᐃⲆᐃΔΔ;
	const ⵠⵠⲆⵠⲆᐃⵠᐃΔ = String.fromCharCode;
	const ⵠΔⵠⲆΔᐃⵠⲆΔ = 101;
	const ᐃⲆΔΔᐃⵠⵠΔΔ = 118;
	const ᐃᐃⲆΔΔᐃⲆ = "ⲆⵠⵠΔᐃⲆⵠ";
	const ΔΔΔⵠⵠᐃⲆ = 97;
	const ⵠᐃⲆⵠⲆΔⵠΔⲆ = 108;
	const ⵠΔⵠΔΔⵠᐃ = ⵠⵠⲆⵠⲆᐃⵠᐃΔ(ⵠΔⵠⲆΔᐃⵠⲆΔ);
	const ⲆᐃᐃᐃⵠⲆⵠ = ⵠⵠⲆⵠⲆᐃⵠᐃΔ(ᐃⲆΔΔᐃⵠⵠΔΔ);

	function ⲆⵠⵠΔᐃⲆⵠ() {
		ⲆⵠᐃⲆⵠⵠⲆΔᐃ = ⲆⵠⵠΔᐃⲆⵠ;
		return ⲆⵠⵠΔᐃⲆⵠ
	}
	const ᐃⲆᐃⵠᐃⲆΔ = ⵠⵠⲆⵠⲆᐃⵠᐃΔ(ΔΔΔⵠⵠᐃⲆ);
	const ΔⵠᐃᐃⵠΔⲆ = ⵠⵠⲆⵠⲆᐃⵠᐃΔ(ⵠᐃⲆⵠⲆΔⵠΔⲆ);
	const ΔⲆᐃᐃΔᐃⲆ = ⵠΔⵠΔΔⵠᐃ + ⲆᐃᐃᐃⵠⲆⵠ + ᐃⲆᐃⵠᐃⲆΔ + ΔⵠᐃᐃⵠΔⲆ;
	const ΔᐃᐃᐃΔᐃΔ = ⲆⲆⲆⲆᐃᐃᐃ[ΔⲆᐃᐃΔᐃⲆ];
	const ᐃⵠⵠⵠⲆⵠⵠ = ΔᐃᐃᐃΔᐃΔ(ⲆⵠⵠΔᐃⲆⵠ + "try{" + ᐃᐃⲆΔΔᐃⲆ + "();0;}catch(ᐃⲆᐃⵠᐃⲆΔ){1;}");
	if (ᐃⵠⵠⵠⲆⵠⵠ) {
		const ⵠⵠⲆⵠⲆᐃⵠᐃΔ = function() {
			for (let ⵠΔⵠⲆΔᐃⵠⲆΔ = 0; ⵠΔⵠⲆΔᐃⵠⲆΔ < 5; ⵠΔⵠⲆΔᐃⵠⲆΔ++) ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("click", (function() {
				ⵠⵠⲆⵠⲆᐃⵠᐃΔ()
			}))
		};
		ⵠⵠⲆⵠⲆᐃⵠᐃΔ()
	}
	const ᐃⵠᐃⲆⲆⵠⲆ = ᐃᐃᐃⵠⲆⲆΔ;
	const ΔⵠⵠΔⲆ = ΔΔᐃⵠⵠ;
	const ᐃⵠΔⵠⵠ = ⵠᐃⲆⵠ;
	let ΔⵠᐃⲆᐃ = [];
	let ⵠⵠⵠᐃⵠⲆⲆ = "_";
	const ⵠᐃᐃΔⲆ = ΔⲆᐃⵠᐃ;
	let ⲆᐃᐃⲆᐃΔΔ = ᐃⲆᐃΔΔ;
	let ᐃⵠⵠΔⲆΔⵠ = ᐃⲆᐃΔΔ;
	let ⲆᐃⲆᐃⲆᐃᐃ = undefined;
	const ⵠΔⲆⵠ = ⵠΔΔΔ;
	let ⵠΔᐃⵠᐃᐃΔ = undefined;
	let ⵠⵠΔᐃⲆ = ΔΔⵠⲆⵠ;
	let ⵠᐃⵠⵠᐃᐃⵠ = undefined;
	let ΔⲆᐃᐃⵠᐃᐃ = undefined;
	let ΔⲆΔⲆᐃᐃⵠ = ΔΔⵠⲆⵠ;
	const ΔᐃⲆΔⲆ = ⵠⲆᐃⲆᐃ;
	const ᐃⲆⵠΔᐃ = Ⲇⵠᐃᐃᐃ;
	let ᐃᐃᐃⵠᐃⲆΔ = undefined;
	const ⵠⲆᐃΔΔⲆᐃ = Δⵠᐃᐃᐃⵠᐃ;
	const ⵠᐃᐃⲆ = ⲆⵠⲆⲆ;
	let ⲆⲆⲆⲆᐃⲆⲆ = undefined;
	const Ⲇᐃᐃⵠᐃ = ⲆⲆⵠᐃⲆ;
	let ᐃᐃᐃⵠⵠⵠᐃ = undefined;
	const ᐃⲆⵠᐃᐃ = ⵠⲆⲆᐃⲆ;
	let ᐃᐃⲆᐃᐃⵠⲆ = undefined;
	let ⵠⵠⵠⲆⲆⵠⵠ = ᐃⲆᐃΔΔ;
	let ⵠⲆⵠⵠᐃᐃΔ = undefined;
	let ⲆⲆⲆⲆⲆⵠⵠ = ᐃⲆᐃΔΔ;
	let ⲆⵠᐃΔΔΔΔ = ΔΔⵠⲆⵠ;
	let ᐃᐃΔᐃᐃⲆᐃ = ΔΔⵠⲆⵠ;
	const ⵠᐃΔᐃΔ = ᐃⲆᐃΔΔ;
	let ΔΔᐃᐃⵠΔⵠ = ΔΔⵠⲆⵠ;
	const ⵠΔⵠⲆ = ⵠⲆⲆΔ;
	let ⵠᐃΔΔⲆΔⲆ = ⵠᐃΔᐃΔ;
	let ⵠΔᐃΔⲆⲆⲆ = ⵠᐃΔᐃΔ;
	const ΔᐃΔᐃⲆ = ΔΔⵠⲆⵠ;
	const ᐃⵠΔⲆⲆ = ᐃⲆⵠᐃⲆ;
	let ⲆⵠΔΔΔⵠⵠ = undefined;
	let ᐃΔᐃⲆⵠⲆᐃ = ΔΔⵠⲆⵠ;
	let ΔΔⲆⵠⵠⲆⵠ = undefined;
	const ⵠⵠⵠⵠΔ = ᐃⵠᐃⲆⲆⵠⲆ;
	const ⲆᐃᐃΔ = ᐃᐃⵠⵠ;
	const ΔᐃᐃΔᐃ = ⵠΔⲆᐃⲆᐃⵠ;
	let ⵠⵠⲆΔΔΔΔ = ⵠᐃΔᐃΔ;
	const ⵠΔᐃΔⲆ = ᐃᐃⵠᐃΔ;
	const Ⲇᐃᐃᐃⵠᐃⵠ = ΔⵠᐃⵠΔΔΔ;
	let ⵠΔΔᐃΔⵠᐃ = ⵠᐃΔᐃΔ;
	const ⵠⲆⵠⲆΔ = ᐃⵠᐃᐃΔ;
	const ⲆⵠᐃΔⲆ = ᐃⲆᐃΔΔ;
	const ΔΔᐃᐃΔΔⵠ = ⲆⲆⵠΔⲆΔⵠ;
	let ⲆΔⲆΔΔᐃᐃ = undefined;
	const ⵠᐃⲆΔΔ = ⵠⲆⵠⲆΔ;
	let ΔΔⲆⲆᐃᐃⲆ = undefined;
	let ⵠⵠᐃᐃⲆⲆᐃ = undefined;
	const ⵠⲆⲆΔⵠΔᐃΔⲆ = 5879080;
	const ΔᐃⲆⲆⵠᐃᐃ = ⵠⲆⲆΔⵠΔᐃΔⲆ["ⲆⲆⲆⲆⲆⲆⵠ"];
	const ᐃⲆⵠᐃΔΔⵠ = `const ⲆⵠⵠⵠⲆ = (typeof ᐃΔΔΔⵠⵠⲆΔᐃ === "${ΔᐃⲆⲆⵠᐃᐃ}") ? 1 : 0; return ⲆⵠⵠⵠⲆ;`;

	function ᐃΔΔΔⵠⵠⲆΔᐃ() {
		ΔᐃⲆⲆⵠᐃᐃ;
		ⵠⲆⲆΔⵠΔᐃΔⲆ();
		return ᐃⲆⵠᐃΔΔⵠ
	}
	const ⲆⵠⵠⵠⲆ = 14885630;
	const ᐃⲆⲆⲆⲆΔΔ = new Function(ᐃΔΔΔⵠⵠⲆΔᐃ + ᐃⲆⵠᐃΔΔⵠ);
	const ΔⲆⵠᐃᐃⵠΔⵠᐃ = 4347725;
	if (ᐃⲆⲆⲆⲆΔΔ(ⲆⵠⵠⵠⲆ, ΔⲆⵠᐃᐃⵠΔⵠᐃ) === 1) {
		const ⵠⲆⲆΔⵠΔᐃΔⲆ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
				ⵠⲆⲆΔⵠΔᐃΔⲆ()
			}))
		};
		ⵠⲆⲆΔⵠΔᐃΔⲆ()
	}
	const ⵠⵠᐃⲆⵠⲆⲆⵠⲆ = ⲆⵠⲆⵠⵠⵠⲆ;
	const ⵠⲆⵠⵠᐃ = ᐃⵠΔⵠⵠ;
	let ⵠᐃᐃⵠᐃΔΔ = ⵠᐃΔᐃΔ;
	let ᐃᐃᐃⵠᐃΔⲆ = undefined;
	const ⲆⲆᐃⵠΔ = ⵠΔᐃΔⲆ;
	let ⵠᐃᐃΔⵠⲆⲆ = ᐃⲆᐃΔΔ;
	let ⲆᐃᐃΔΔΔⲆ = ⵠᐃΔᐃΔ;
	let ⲆᐃΔⵠᐃᐃᐃ = undefined;
	const ΔⲆᐃᐃΔ = ᐃΔⵠΔΔ;
	const ⵠⲆⲆⲆⵠ = ⵠⲆᐃᐃⲆ;
	const ᐃⵠ = ΔⲆᐃ;
	const ΔⵠⲆⲆⲆⲆⵠ = Δⵠᐃᐃᐃⵠᐃ;
	const ⲆΔᐃΔⲆ = ᐃᐃᐃΔΔ;
	const ΔΔⲆΔΔ = ΔⲆΔᐃΔ;
	let ⵠⵠⵠⵠΔⲆᐃ = undefined;
	let ⲆⲆⵠⵠΔⵠᐃ = ΔᐃΔᐃⲆ;
	const ⲆⲆⵠⵠⲆ = ᐃⵠΔⲆⲆ;
	const ⵠΔΔΔΔΔᐃ = ΔⲆⲆⲆⲆ;
	const ⲆⲆᐃⵠⲆ = ΔΔⲆⲆⲆ;
	let ⲆⲆΔⵠᐃΔᐃ = undefined;
	const ΔⲆΔⵠΔⵠⲆ = 3120231;
	const ᐃⲆᐃΔⵠⵠⲆⵠⲆ = ΔⲆΔⵠΔⵠⲆ["ⵠⲆΔᐃⵠᐃⲆⵠΔ"];
	const ᐃⵠⵠⲆΔΔⵠ = `const ⲆⵠⵠΔⵠΔᐃⲆᐃ = (typeof ⵠᐃⵠⲆⵠⵠΔΔⲆ === "${ᐃⲆᐃΔⵠⵠⲆⵠⲆ}") ? 1 : 0; return ⲆⵠⵠΔⵠΔᐃⲆᐃ;`;

	function ⵠᐃⵠⲆⵠⵠΔΔⲆ() {
		ᐃⲆᐃΔⵠⵠⲆⵠⲆ;
		ΔⲆΔⵠΔⵠⲆ();
		return ᐃⵠⵠⲆΔΔⵠ
	}
	const ⲆⵠⵠΔⵠΔᐃⲆᐃ = 6775103;
	const ΔⵠⲆⵠᐃᐃᐃ = new Function(ⵠᐃⵠⲆⵠⵠΔΔⲆ + ᐃⵠⵠⲆΔΔⵠ);
	const ᐃⲆⲆⵠᐃⲆΔⵠⵠ = 680990;
	if (ΔⵠⲆⵠᐃᐃᐃ(ⲆⵠⵠΔⵠΔᐃⲆᐃ, ᐃⲆⲆⵠᐃⲆΔⵠⵠ) === 1) {
		const ΔⲆΔⵠΔⵠⲆ = Math.floor;
		let ᐃⵠⵠⲆΔΔⵠ = 0;
		const ᐃⲆᐃΔⵠⵠⲆⵠⲆ = function(ᐃⲆᐃΔⵠⵠⲆⵠⲆ) {
			for (let ⵠⲆΔᐃⵠᐃⲆⵠΔ = 0; ⵠⲆΔᐃⵠᐃⲆⵠΔ < 8023; ⵠⲆΔᐃⵠᐃⲆⵠΔ++) ᐃⵠⵠⲆΔΔⵠ += ⵠⲆΔᐃⵠᐃⲆⵠΔ;
			return ΔⲆΔⵠΔⵠⲆ(ᐃⲆᐃΔⵠⵠⲆⵠⲆ)
		};
		Math.floor = ᐃⲆᐃΔⵠⵠⲆⵠⲆ
	}
	let ΔΔᐃⲆⵠᐃᐃ = undefined;
	let ⲆⵠᐃᐃⲆⵠⵠ = ⲆⵠᐃΔⲆ;
	let ΔⵠⵠᐃⲆΔΔ = ᐃⲆᐃΔΔ;
	const ⵠⲆⵠΔⵠ = ΔⵠⵠΔⲆ;
	let ⲆᐃΔᐃᐃᐃⲆ = ⵠᐃΔᐃΔ;
	const ᐃᐃⲆⵠⲆ = ΔΔⵠⲆⵠ;
	let ᐃᐃΔⲆᐃⲆΔ = ⵠᐃΔᐃΔ;
	const ΔᐃΔᐃⲆΔⵠ = ᐃΔⵠΔΔ;
	const ᐃΔⲆⲆᐃⵠⵠ = ΔΔⲆᐃⲆ;
	const ΔⲆᐃᐃᐃ = ⵠᐃᐃΔⲆ;
	const ⵠΔⵠⵠⲆ = ᐃⵠΔⵠⵠ;
	let ᐃⲆⵠⵠⵠⲆⲆ = ᐃᐃⲆⵠⲆ;
	let ΔᐃⲆᐃⲆⲆᐃ = undefined;
	const ΔᐃΔⵠⲆ = ⵠⵠⵠⵠΔ;
	let ᐃⵠᐃΔΔᐃⵠ = ΔΔᐃ;
	(!ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[149]] || !ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[149]].instantiate) && ⵠⲆⲆⲆΔΔᐃⲆᐃ();
	const ⵠΔⲆΔ = ⵠΔⵠᐃ;
	const ᐃᐃⲆⵠΔΔΔ = {
		Date: Date
	};
	const ⲆⵠⲆⵠⲆ = ᐃΔⲆⲆᐃⵠⵠ;
	const ⵠᐃⵠⲆ = ⵠⲆΔⵠ;
	const ᐃΔⲆΔ = ᐃΔᐃΔ;
	const ⲆᐃᐃᐃⲆ = ᐃᐃⲆᐃᐃ;
	const Δᐃⵠⵠ = ᐃᐃⵠⵠ;
	const Δⵠᐃⵠⵠ = ΔⲆⲆⲆⲆ;
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[149]].instantiate(Uint8Array.from(ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[37]]("AGFzbQEAAAABWA5gAX8Bf2ACf38AYAN/f38AYAF/AGAEf39/fwBgAABgBX9/f39/AGACf38Bf2AGf39/f39/AGAHf39/f39/fwBgBX9/f39/AX9gAAF8YAABf2ADf39/AX8CDAEERGF0ZQNub3cACwNDQgEBAAAABQEBAwIDAwABAQECBQwHBwcBAAACAAcCCgAACwAAAAADBQMDBQUNBggCBgQGCgIECQYECQQCBgkICAQEAgUEAQEBAQZADH8BQQALfwFBAAt/AUEAC38BQQALfwFBAAt/AUEAC38BQQALfwFBAAt/AUEAC38BQQALfwBB4AgLfwFBvIkBCwfuASUCXzQAGANfMTYAGQJfNQAbA18yMAAfAl82ACADXzI1ACEDXzI4ACICXzkAIwJfOAAkBV9fbmV3ABYFX19waW4AJQdfX3VucGluACYJX19jb2xsZWN0ACcLX19ydHRpX2Jhc2UDCgZtZW1vcnkCAANfMTMALQNfMTcALgJfMwAvA18xNAAwA18yNwAxA18yNgAyA18yMgAzA18xNQA0Al83ADUCXzEANgNfMjEANwNfMjMAOANfMTkAOQNfMTEAOgNfMTgAOwJfMgA8A18yOQA9A18xMgA+A18yNAA/Al8wAEADXzEwAEEDXzMwAEIIASoKyDBCCQAgACABNgIECwkAIAAgATYCCAsQACAAIAAQASAAIAAQAiAACwoAIAAoAgRBfHELCgAgACgCBEEDcQsxAQJ/IwQiARAEIQADQCAAIAFHBEAgABAFQQNHBEAACyAAQRRqECkgABAEIQAMAQsLCxEAIAAgASAAKAIEQXxxchABCxEAIAAgACgCBEEDcSABchABCzsBAX8gABAEIgFFBEBBACAAQbyJAUkgACgCCBtFBEAACw8LIAAoAggiAEUEQAALIAEgABACIAAgARAICyYBAX8gASgCCCEDIAAgASACchABIAAgAxACIAMgABAIIAEgABACC1gBAX8jBSAARgRAIAAoAggiAUUEQAALIAEkBQsgABAJIAAjBiMHRUECIAAoAgwiAEEBTQR/QQEFQeAIKAIAIABJBEAACyAAQQN0QeQIaigCAEEgcQsbEAoLIwAgAEUEQA8LIABBFGsiABAFIwdGBEAgABALIwNBAWokAwsLDQAgACgCAEF8cUEEagsJACAAIAE2AgAL7QEBBH8gASgCACICQQFxRQRAAAsgAkF8cSICQQxJBEAACyACQYACSQR/IAJBBHYFQR8gAkH8////AyACQfz///8DSRsiAmdrIgRBB2shAyACIARBBGt2QRBzCyICQRBJIANBF0lxRQRAAAsgASgCCCEFIAEoAgQiBARAIAQgBRACCyAFBEAgBSAEEAELIAIgA0EEdGpBAnQgAGooAmAgAUYEQCACIANBBHRqQQJ0IABqIAU2AmAgBUUEQCADQQJ0IABqIgEoAgRBfiACd3EhAiABIAI2AgQgAkUEQCAAIAAoAgBBfiADd3EQDgsLCwv3AgEFfyABRQRAAAsgASgCACIDQQFxRQRAAAsgAUEEaiABKAIAQXxxaiIEKAIAIgJBAXEEQAJ/IAAgBBAPIAEgA0EEaiACQXxxaiIDEA4gAUEEaiABKAIAQXxxaiIEKAIACyECCyADQQJxBEAgAUEEaygCACIBKAIAIgZBAXFFBEAACyAAIAEQDyABIAZBBGogA0F8cWoiAxAOCyAEIAJBAnIQDiADQXxxIgJBDEkEQAALIAIgAUEEamogBEcEQAALIARBBGsgATYCACACQYACSQR/IAJBBHYFQR8gAkH8////AyACQfz///8DSRsiAmdrIgNBB2shBSACIANBBGt2QRBzCyICQRBJIAVBF0lxRQRAAAsgAiAFQQR0akECdCAAaigCYCEDIAFBABABIAEgAxACIAMEQCADIAEQAQsgAiAFQQR0akECdCAAaiABNgJgIAAgACgCAEEBIAV0chAOIAVBAnQgAGoiACAAKAIEQQEgAnRyNgIEC6gBAQJ/IAEgAksEQAALIAFBE2pBcHFBBGshASAAKAKgDCIEBEAgASAEQQRqSQRAAAsgBCABQRBrRgRAAn8gBCgCACEDIAFBEGsLIQELBSABIABBpAxqSQRAAAsLIAJBcHEgAWsiAkEUSQRADwsgASADQQJxIAJBCGsiAkEBcnIQDiABQQAQASABQQAQAiACIAFBBGpqIgJBAhAOIAAgAjYCoAwgACABEBALlQEBAn8/ACIAQQBMBH9BASAAa0AAQQBIBUEACwRAAAtBwIkBQQAQDkHglQFBADYCAANAIAFBF0kEQCABQQJ0QcCJAWpBADYCBEEAIQADQCAAQRBJBEAgACABQQR0akECdEHAiQFqQQA2AmAgAEEBaiEADAELCyABQQFqIQEMAQsLQcCJAUHklQE/AEEQdBARQcCJASQJC4gDAQJ/AkACQAJAAkAjAg4DAAECAwtBASQCQQAkAxAGIwYkBSMDDwsjB0UhASMFEAQhAANAIwYgAEcEQCAAJAUgABAFIAFHBEAgACABEAdBACQDIABBFGoQKSMDDwsgABAEIQAMAQsLQQAkAxAGIwUQBCMGRgRAIwshAANAIABBvIkBSQRAIAAoAgAQDCAAQQRqIQAMAQsLIwUQBCEAA0AjBiAARwRAIAAQBSABRwRAIAAgARAHIABBFGoQKQsgABAEIQAMAQsLIwghACMGJAggACQGIAEkByAAEAQkBUECJAILIwMPCyMFIgAjBkcEQCAAEAQkBSAAEAUjB0VHBEAACyAAQbyJAUkEQCAAQQAQASAAQQAQAgUjACAAEA1rJAAgAEEEaiIAQbyJAU8EQCMJRQRAEBILIABBBGshASAAQQ9xQQEgABsEf0EBBSABKAIAQQFxCwRAAAsjCSEAIAEgASgCAEEBchAOIAAgARAQCwtBCg8LIwYjBhABIwYjBhACQQAkAgtBAAu8AQECfyABQYACSQR/IAFBBHYFQR9BAUEbIAFna3QgAWpBAWsgASABQf7///8BSRsiAWdrIgNBB2shAiABIANBBGt2QRBzCyIBQRBJIAJBF0lxRQRAAAsgAkECdCAAaigCBEF/IAF0cSIBBH8gAWggAkEEdGpBAnQgAGooAmAFIAAoAgBBfyACQQFqdHEiAQR/IAFoIgFBAnQgAGooAgQiAkUEQAALIAJoIAFBBHRqQQJ0IABqKAJgBUEACwsLqQIBA38gAUH8////A0sEQAALIABBDCABQRNqQXBxQQRrIAFBDE0bIgMQFCIBRQRAPwAiAUEEIAAoAqAMIAFBEHRBBGtHdEEBQRsgA2drdEEBayADaiADIANB/v///wFJG2pB//8DakGAgHxxQRB2IgIgASACShtAAEEASARAIAJAAEEASARAAAsLIAAgAUEQdD8AQRB0EBEgACADEBQiAUUEQAALCyABKAIAQXxxIANJBEAACyAAIAEQDyABKAIAIQQgA0EEakEPcQRAAAsgBEF8cSADayICQRBPBEAgASAEQQJxIANyEA4gAyABQQRqaiIDIAJBBGtBAXIQDiAAIAMQEAUgASAEQX5xEA4gAUEEaiABKAIAQXxxaiIAIAAoAgBBfXEQDgsgAQu9AQECfyAAQez///8DTwRAAAsjACMBTwRAAkBBgBAhAgNAIAIQE2shAiMCRQRAIwCtQsgBfkLkAICnQYAIaiQBDAILIAJBAEoNAAsjACMAIwFrQYAISUEKdGokAQsLIwlFBEAQEgsjCSAAQRBqEBUiAiABNgIMIAIgADYCECACIwgjBxAKIwAgAhANaiQAIAJBFGoiAyEBIAAhAgNAIAIEQCABIgBBAWohASAAQQA6AAAgAkEBayECDAELCyADC0sAIAAgATYCACABBEAgAEUEQAALIAFBFGsiARAFIwdGBEAgAEEUaxAFIgAjB0VGBEAgARALBSMCQQFGIABBA0ZxBEAgARALCwsLCws5AQF/IwtBBGskCxArIwtBADYCACMLQQxBAxAWIgE2AgAjCyABIABBABAsIgA2AgAjC0EEaiQLIAALOQEBfyMLQQRrJAsQKyMLQQA2AgAjC0EMQQQQFiIBNgIAIwsgASAAQQMQLCIANgIAIwtBBGokCyAACyEAIAAoAghBAnYgAU0EQAALIAAoAgQgAUECdGogAjYCAAs5AQF/IwtBBGskCxArIwtBADYCACMLQQxBBhAWIgE2AgAjCyABIABBAxAsIgA2AgAjC0EEaiQLIAALGQAgACgCCCABTQRAAAsgASAAKAIEaiwAAAsbACAAKAIIIAFNBEAACyABIAAoAgRqIAI6AAALiAIAIAMgBGoiA0H00gJxQX9zIgRB9NICcSADIARxciEEQQEhAwNAIAAoAgggA0oEQCAAIAMgACADEBwgAEEAEBxzEB0gA0EBaiEDDAELC0EYIARBGHV0QRAgBHRqQQggBEEQdXRqQcrwA2pBuf8DbyEEQQAhAwNAIAAoAgggA0oEQCADQQNvBEAgA0EDb0EBRgRAIAAgAyAAIAMQHCABQaEBc3MQHQUgA0EDb0ECRgRAIAAgAyAAIAMQHCABIAJzQcgBc3MQHQsLBSAAIAMgACADEBwgAkHUAHNzEB0LIANBAWohAwwBCwtBECAEQRB1dEEIIARBCHV0akEYIAR0akHDCWpB+/4Dbws5AQF/IwtBBGskCxArIwtBADYCACMLQQxBCBAWIgE2AgAjCyABIABBARAsIgA2AgAjC0EEaiQLIAALOQEBfyMLQQRrJAsQKyMLQQA2AgAjC0EMQQcQFiIBNgIAIwsgASAAQQAQLCIANgIAIwtBBGokCyAACwYAEACwuQs5AQF/IwtBBGskCxArIwtBADYCACMLQQxBCRAWIgE2AgAjCyABIABBARAsIgA2AgAjC0EEaiQLIAALOQEBfyMLQQRrJAsQKyMLQQA2AgAjC0EMQQoQFiIBNgIAIwsgASAAQQIQLCIANgIAIwtBBGokCyAACzkBAX8jC0EEayQLECsjC0EANgIAIwtBDEEFEBYiATYCACMLIAEgAEECECwiADYCACMLQQRqJAsgAAsnAQF/IAAEQCAAQRRrIgEQBUEDRgRAAAsgARAJIAEjBEEDEAoLIAALMgAgAEUEQA8LIABBFGsiABAFQQNHBEAACyMCQQFGBEAgABALBSAAEAkgACMIIwcQCgsLOQAjAkEASgRAA0AjAgRAEBMaDAELCwsQExoDQCMCBEAQExoMAQsLIwCtQsgBfkLkAICnQYAIaiQBCxAAIAAoAgAiAARAIAAQDAsLMwACQAJAAkACQAJAIABBCGsoAgAOCwABAgQEBAQEBAQEAwsPCw8LIAAQKA8LAAsgABAoCyYAPwBBEHRBvIkBa0EBdiQBQYAIEAMkBEGgCBADJAZBwAgQAyQICwwAIwtBvAlIBEAACwt0ACMLQQhrJAsQKyMLQgA3AwAgAEUEQCMLQQxBAhAWIgA2AgALIABBABAXIABBABABIABBABACQfz///8DIAJ2IAFJBEAACyMLIAEgAnQiAUEAEBYiAjYCBCAAIAIQFyAAIAIQASAAIAEQAiMLQQhqJAsgAAtsACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBk+YBciABQZPmAXFBf3NxEBogAEEBIAJBuu4CcxAaIABBAiADQbk/bEHWgRtqQbiaCG8QGiAAQQMgBEHnyQByIARB58kAcUF/c3EQGiMLQQRqJAsLkwEAIwtBBGskCxArIwsgADYCACAAQQBBCCABdEEQIAFBEHV0akEYIAFBCHV0ahAaIABBASACIAJBwIMDcUF/cyIBcSABQcCDA3FyEBogAEECIANB79EDciADQe/RA3FBf3NxEBogAEEDIARB5hVxQX9zIgFB5hVxIAEgBHFyEBogAEEEIAVBnsMAcxAaIwtBBGokCwtOACMLQQRrJAsQKyMLIAA2AgAgAEEAQRAgAUEYdXRBCCABdGpBGCABQQh1dGoQGiAAQQEgAkH5AGpBp4MBbEH/////B28QGiMLQQRqJAsLdQAjC0EEayQLECsjCyAANgIAIABBACABQdudAWpBhf4DbxAaIABBAUEYIAJBGHV0QQggAkEQdXRqQRAgAkEIdXRqEBogAEECIANB6e8DcxAaIABBA0EYIAR0QQggBEEQdXRqQRAgBEEIdXRqEBojC0EEaiQLC2kAIwtBBGskCxArIwsgADYCACAAQQBBCCABQRh1dEEQIAFBCHV0akEYIAFBEHV0ahAaIABBASACQaMBakGP+QJsQf////8HbxAaIABBAiADQeMAakGP+QJsQf////8HbxAaIwtBBGokCwt7ACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBy/UDciABQcv1A3FBf3NxEBogAEEBIAIgAkHpxwBxQX9zIgFxIAFB6ccAcXIQGiAAQQIgA0G2AWpBj/kCbEH/////B28QGiAAQQMgBEHLAGxBhw5qQYGABG8QGiMLQQRqJAsLKQAjC0EEayQLECsjCyAANgIAIAAgASACIAMgBBAeIQAjC0EEaiQLIAALVgAjC0EEayQLECsjCyAANgIAIABBAEEIIAFBGHV0QRAgAUEIdXRqQRggAUEQdXRqEBogAEEBQRAgAkEQdXRBCCACdGpBGCACQRh1dGoQGiMLQQRqJAsLawAjC0EEayQLECsjCyAANgIAIABBAEEYIAFBEHV0QQggAXRqQRAgAUEYdXRqEBogAEEBIAJBp4UCciACQaeFAnFBf3NxEBogAEECIAMgA0GfgAFxQX9zIgBxIABBn4ABcXIQGiMLQQRqJAsLqgEAIwtBBGskCxArIwsgADYCACAAQQBBCCABdEEYIAFBCHV0akEQIAFBGHV0ahAaIABBASACQfv2AXMQGiAAQQIgA0HPpwFyIANBz6cBcUF/c3EQGiAAQQMgBCAEQc7LAnFBf3MiAXEgAUHOywJxchAaIABBBCAFQcsAbEHVJmpBgYAEbxAaIABBBUEQIAZBCHV0QRggBnRqQQggBkEQdXRqEBojC0EEaiQLC3gAIwtBBGskCxArIwsgADYCACAAQQAgAUH77wBzEBogAEEBIAJBioECcUF/cyIBQYqBAnEgASACcXIQGiAAQQIgAyADQdL7AHFBf3MiAXEgAUHS+wBxchAaIABBAyAEQb2tAXIgBEG9rQFxQX9zcRAaIwtBBGokCwtmAQF/IwtBBGskCxArIwsgADYCACAAQQAgAUGOngNxQX9zIgRBjp4DcSABIARxchAaIABBASACQe4BakGP+QJsQf////8HbxAaIABBAiADQcsAbEHs4QBqQYGABG8QGiMLQQRqJAsLmAEAIwtBBGskCxArIwsgADYCACAAQQAgAUHwwwBzEBogAEEBIAJBioYCcUF/cyIBQYqGAnEgASACcXIQGiAAQQIgA0HlAWpBj/kCbEH/////B28QGiAAQQMgBEGd/gNyIARBnf4DcUF/c3EQGiAAQQQgBUHdtgNyIAVB3bYDcUF/c3EQGiAAQQUgBkHM2gJzEBojC0EEaiQLC3MAIwtBBGskCxArIwsgADYCACAAQQBBCCABdEEYIAFBEHV0akEQIAFBGHV0ahAaIABBAUEIIAJBCHV0QRggAkEYdXRqQRAgAkEQdXRqEBogAEECQQggA0EIdXRBGCADQRB1dGpBECADdGoQGiMLQQRqJAsLUQAjC0EEayQLECsjCyAANgIAIABBACABIAFBkzBxQX9zIgFxIAFBkzBxchAaIABBASACQeGpAXFBf3MiAEHhqQFxIAAgAnFyEBojC0EEaiQLC2AAIwtBBGskCxArIwsgADYCACAAQQAgAUG5P2xBw5LFAGpBuJoIbxAaIABBASACQdubAnMQGiAAQQIgA0HJEHIgA0HJEHFBf3NxEBogAEEDIARB+Y8DcxAaIwtBBGokCwuoAQEBfyMLQQRrJAsQKyMLIAA2AgAgAEEAIAFB98EBcUF/cyIHQffBAXEgASAHcXIQGiAAQQEgAkEhakGP+QJsQf////8HbxAaIABBAiADQfjFAXFBf3MiAUH4xQFxIAEgA3FyEBogAEEDIARBNGpBj/kCbEH/////B28QGiAAQQQgBUG64gJyIAVBuuICcUF/c3EQGiAAQQUgBkGehAJzEBojC0EEaiQLC40BACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBw/ABcxAaIABBAUEQIAJBEHV0QQggAkEIdXRqQRggAnRqEBogAEECIANBp64BakGP/wNvEBogAEEDIARB0wBqQY/5AmxB/////wdvEBogAEEEQRggBUEYdXRBECAFQQh1dGpBCCAFQRB1dGoQGiMLQQRqJAsLmQEAIwtBBGskCxArIwsgADYCACAAQQAgASABQYCdA3FBf3MiAXEgAUGAnQNxchAaIABBASACQaCkAnIgAkGgpAJxQX9zcRAaIABBAiADQb0BakGP+QJsQf////8HbxAaIABBAyAEQfWvA3FBf3MiAUH1rwNxIAEgBHFyEBogAEEEIAVB0DZyIAVB0DZxQX9zcRAaIwtBBGokCwtmACMLQQRrJAsQKyMLIAA2AgAgAEEAIAFBrgFqQaeDAWxB/////wdvEBogAEEBIAIgAkGY9AFxQX9zIgFxIAFBmPQBcXIQGiAAQQIgA0HvAWpBj/kCbEH/////B28QGiMLQQRqJAsLawAjC0EEayQLECsjCyAANgIAIABBAEEQIAFBCHV0QQggAXRqQRggAUEQdXRqEBogAEEBQRAgAkEYdXRBCCACQQh1dGpBGCACdGoQGiAAQQIgA0HR/QNyIANB0f0DcUF/c3EQGiMLQQRqJAsLTAAjC0EEayQLECsjCyAANgIAIABBACABQbk/bEHxyBRqQbiaCG8QGiAAQQFBECACQQh1dEEYIAJBGHV0akEIIAJ0ahAaIwtBBGokCwsLVwIAQeAICw0LAAAAIAAAAAAAAAAgAEH8CAs9QQAAAAIAAAABCgAAAgAAAAEJAAACAAAAAQIAAAIAAABBCAAAAgAAAIEIAAACAAAAgQAAAAIAAAABAQAAAg=="), (function(ⵠΔⵠⲆⵠⲆᐃ) {
		return ⵠΔⵠⲆⵠⲆᐃ.charCodeAt(0)
	})), ᐃᐃⲆⵠΔΔΔ).then((function(ⲆᐃᐃΔΔⲆΔ) {
		ⵠⵠΔⵠⵠΔⲆ = ⲆᐃᐃΔΔⲆΔ[ⲆⵠΔᐃᐃᐃΔ[240]];
		ΔⵠΔⲆⲆΔΔ = ⵠⵠΔⵠⵠΔⲆ[ⲆⵠΔᐃᐃᐃΔ[293]];
		ΔⲆᐃⵠΔⵠᐃ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[1]];
		ⲆᐃⲆΔᐃ = ΔⲆᐃⵠΔⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[258]];
		ⲆⵠΔΔⵠⵠⵠ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[7]];
		ΔⲆⵠⲆⵠΔⲆ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[303]];
		ⵠⲆᐃᐃΔⲆᐃ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[18]];
		ᐃⵠⵠⲆⲆᐃᐃ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[11]];
		ⵠⵠⵠᐃⵠⲆⲆ = "_";
		for (let ᐃⲆ = 0; 31 > ᐃⲆ; ᐃⲆ++) ΔⵠᐃⲆᐃ[ᐃⲆ] = ΔⵠΔⲆⲆΔΔ[ⵠⵠⵠᐃⵠⲆⲆ + ᐃⲆ];
		ⲆᐃᐃⲆᐃΔΔ = ΔⵠΔⲆⲆΔΔ[ⲆⵠΔᐃᐃᐃΔ[113]];
		ᐃⵠⵠΔⲆΔⵠ = new Float32Array(ⲆᐃⲆΔᐃ);
		ⲆᐃⲆᐃⲆᐃᐃ = new Float64Array(ⲆᐃⲆΔᐃ);
		ⵠΔᐃⵠᐃᐃΔ = new BigUint64Array(ⲆᐃⲆΔᐃ);
		ⵠⵠΔᐃⲆ = new Uint32Array(ⲆᐃⲆΔᐃ);
		ⵠᐃⵠⵠᐃᐃⵠ = new Uint16Array(ⲆᐃⲆΔᐃ);
		ΔⲆᐃᐃⵠᐃᐃ = new Uint8Array(ⲆᐃⲆΔᐃ);
		ΔⲆΔⲆᐃᐃⵠ = new BigInt64Array(ⲆᐃⲆΔᐃ);
		ᐃᐃᐃⵠᐃⲆΔ = new Int32Array(ⲆᐃⲆΔᐃ);
		ⲆⲆⲆⲆᐃⲆⲆ = new Int16Array(ⲆᐃⲆΔᐃ);
		ᐃᐃᐃⵠⵠⵠᐃ = new Int8Array(ⲆᐃⲆΔᐃ);
		ⲆᐃΔⵠᐃᐃᐃ = ΔⵠᐃⲆᐃ[ⵠⲆⲆᐃⲆ];
		ᐃᐃᐃⵠᐃΔⲆ = ΔⵠᐃⲆᐃ[ⵠⲆⵠⵠᐃ];
		ΔⵠⵠᐃⲆΔΔ = ΔⵠᐃⲆᐃ[28];
		ᐃᐃΔⲆᐃⲆΔ = ΔⵠᐃⲆᐃ[29];
		ⵠⵠⵠⵠΔⲆᐃ = ΔⵠᐃⲆᐃ[ⵠⲆⵠⲆΔ];
		ⵠⲆⵠⵠᐃᐃΔ = ΔⵠᐃⲆᐃ[4];
		ⵠᐃΔΔⲆΔⲆ = ΔⵠᐃⲆᐃ[ᐃᐃⵠⵠ];
		ⲆⲆⵠⵠΔⵠᐃ = ΔⵠᐃⲆᐃ[25];
		ⲆⲆⲆⲆⲆⵠⵠ = ΔⵠᐃⲆᐃ[ⵠⲆΔΔ];
		ΔΔᐃᐃⵠΔⵠ = ΔⵠᐃⲆᐃ[ΔⲆᐃΔⵠ];
		ΔΔⲆⲆᐃᐃⲆ = ΔⵠᐃⲆᐃ[22];
		ΔΔⲆⵠⵠⲆⵠ = ΔⵠᐃⲆᐃ[26];
		ⵠΔᐃΔⲆⲆⲆ = ΔⵠᐃⲆᐃ[14];
		ᐃᐃΔᐃᐃⲆᐃ = ΔⵠᐃⲆᐃ[ᐃᐃᐃΔΔ];
		ⲆⵠᐃᐃⲆⵠⵠ = ΔⵠᐃⲆᐃ[ΔⲆΔᐃΔ];
		ⵠΔΔᐃΔⵠᐃ = ΔⵠᐃⲆᐃ[10];
		ⲆⵠᐃΔΔΔΔ = ΔⵠᐃⲆᐃ[23];
		ⲆΔⲆΔΔᐃᐃ = ΔⵠᐃⲆᐃ[7];
		ⲆᐃᐃΔΔΔⲆ = ΔⵠᐃⲆᐃ[11];
		ⲆᐃΔᐃᐃᐃⲆ = ΔⵠᐃⲆᐃ[1];
		ⲆⲆΔⵠᐃΔᐃ = ΔⵠᐃⲆᐃ[30];
		ⵠᐃᐃⵠᐃΔΔ = ΔⵠᐃⲆᐃ[21];
		ᐃⲆⵠⵠⵠⲆⲆ = ΔⵠᐃⲆᐃ[27];
		ΔΔᐃⲆⵠᐃᐃ = ΔⵠᐃⲆᐃ[20];
		ᐃΔᐃⲆⵠⲆᐃ = ΔⵠᐃⲆᐃ[24];
		ⵠⵠⲆΔΔΔΔ = ΔⵠᐃⲆᐃ[0];
		ⲆⵠΔΔΔⵠⵠ = ΔⵠᐃⲆᐃ[ⵠΔⵠⲆ];
		ⵠᐃᐃΔⵠⲆⲆ = ΔⵠᐃⲆᐃ[8];
		ⵠⵠᐃᐃⲆⲆᐃ = ΔⵠᐃⲆᐃ[9];
		ⵠⵠⵠⲆⲆⵠⵠ = ΔⵠᐃⲆᐃ[Ⲇᐃᐃⵠᐃ];
		ᐃᐃⲆᐃᐃⵠⲆ = ΔⵠᐃⲆᐃ[ⲆⵠᐃᐃⲆ];
		ᐃⵠᐃΔΔᐃⵠ = 1;
		if (ΔᐃⲆᐃⲆⲆᐃ) ΔᐃⲆᐃⲆⲆᐃ()
	}));

	function ⲆΔⲆⲆⲆΔⵠΔⲆ(ⵠΔΔΔΔⲆⵠ) {
		return ⵠΔΔΔΔⲆⵠ[ⲆᐃᐃⲆᐃΔΔ >>> ⵠⲆΔΔ]
	}
	const ⵠᐃⵠⲆᐃ = Ⲇⵠᐃᐃᐃ;

	function ΔⲆΔᐃᐃᐃΔ(ΔⲆᐃΔ) {
		return ⵠⵠΔᐃⲆ[(ⲆᐃᐃⲆᐃΔΔ + ᐃΔᐃΔ >>> 2) + (ΔⲆᐃΔ << ᐃⵠ)]
	}
	const ΔΔⲆᐃⵠⵠⲆ = ΔⲆΔᐃᐃᐃΔ;

	function ⲆΔⵠΔΔⲆᐃᐃⵠ(ⲆⲆⵠᐃⲆⵠᐃ) {
		const ⲆᐃΔΔⵠ = ⲆⲆⵠᐃⲆⵠᐃ.length;
		const ⲆᐃⵠⵠΔ = ⵠⵠⲆᐃΔⲆⲆ(ⲆᐃΔΔⵠ << ᐃⵠ, ⵠⵠⵠᐃⵠⲆⵠ);
		const ΔⵠΔᐃⲆⲆΔ = new Uint16Array(ⲆᐃⲆΔᐃ);
		for (var ᐃⲆ = ΔΔᐃ, ⵠΔᐃ = ⲆᐃⵠⵠΔ >>> 1; ⲆᐃΔΔⵠ > ᐃⲆ; ++ᐃⲆ) ΔⵠΔᐃⲆⲆΔ[ⵠΔᐃ + ᐃⲆ] = ⲆⲆⵠᐃⲆⵠᐃ.charCodeAt(ᐃⲆ);
		return ⲆᐃⵠⵠΔ
	}

	function ⵠΔⲆⲆⵠᐃⲆ(ᐃⵠⲆᐃΔ) {
		return 31 - Math.clz32(ᐃⵠⲆᐃΔ >>> ΔΔⵠⵠΔΔⲆ & 31)
	}
	const ΔΔΔⵠⲆΔᐃ = ⲆⵠΔΔΔ;

	function ΔⵠΔⲆΔΔΔᐃⲆ(ΔⲆᐃΔ, ΔᐃΔⵠⵠᐃᐃ) {
		ΔᐃΔⵠⵠᐃᐃ = ΔᐃΔⵠⵠᐃᐃ || 0;
		const ᐃΔⲆⵠΔⲆΔ = ΔᐃΔⵠⵠᐃᐃ;
		const ᐃⵠⲆᐃΔ = ΔΔⲆᐃⵠⵠⲆ(ΔⲆᐃΔ);
		const ⲆⵠΔΔΔⲆΔ = ⵠΔⲆⲆⵠᐃⲆ(ᐃⵠⲆᐃΔ);
		const ⲆⲆΔⵠⵠⵠᐃ = ⵠ[501] !== typeof ᐃΔⲆⵠΔⲆΔ;
		const ⲆᐃΔΔⵠ = ⲆⲆΔⵠⵠⵠᐃ ? ᐃΔⲆⵠΔⲆΔ.length : ᐃΔⲆⵠΔⲆΔ;
		const ⵠⵠᐃΔΔ = ⵠⲆᐃᐃΔⲆᐃ(ⲆᐃΔΔⵠ << ⲆⵠΔΔΔⲆΔ, ᐃⵠⲆᐃΔ & ⲆⲆᐃⲆⵠⵠᐃ ? ΔⲆᐃΔ : ΔⲆΔΔⵠⲆⵠ);
		let ⵠᐃΔⵠΔⵠⵠ;
		if (ᐃⵠⲆᐃΔ & ⲆⲆᐃⲆⵠⵠᐃ) {
			ⵠᐃΔⵠΔⵠⵠ = ⵠⵠᐃΔΔ
		} else {
			ⲆⵠΔΔⵠⵠⵠ(ⵠⵠᐃΔΔ);
			const ΔⵠΔⲆΔ = ⵠⲆᐃᐃΔⲆᐃ(ᐃⵠⲆᐃΔ & ⵠΔᐃⲆΔΔⵠ ? ᐃΔᐃⵠⵠΔⵠ : ⲆΔᐃΔΔⲆⵠ, ΔⲆᐃΔ);
			ΔⲆⵠⲆⵠΔⲆ(ⵠⵠᐃΔΔ);
			ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ⲆᐃⲆᐃΔΔⵠ >>> ⵠΔⵠᐃ] = ⵠⵠᐃΔΔ;
			ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ᐃΔᐃⲆΔⵠΔ >>> 2] = ⵠⵠᐃΔΔ;
			ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ⵠΔⵠⵠⲆᐃⵠ >>> 2] = ⲆᐃΔΔⵠ << ⲆⵠΔΔΔⲆΔ;
			ᐃⵠⲆᐃΔ & ⵠΔᐃⲆΔΔⵠ && (ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ᐃⵠⲆⵠⲆⲆⵠ >>> 2] = ⲆᐃΔΔⵠ);
			ⵠᐃΔⵠΔⵠⵠ = ΔⵠΔⲆΔ
		}
		if (ⲆⲆΔⵠⵠⵠᐃ) {
			const ΔΔⲆⲆΔΔΔ = ᐃΔⲆⵠⲆΔⲆ(ⲆⵠΔΔΔⲆΔ, ᐃⵠⲆᐃΔ & ᐃᐃᐃᐃⵠⵠᐃ, ᐃⵠⲆᐃΔ & ⵠᐃᐃⵠᐃⵠⲆ);
			const ⲆᐃΔᐃⵠ = ⵠⵠᐃΔΔ >>> ⲆⵠΔΔΔⲆΔ;
			if (ᐃⵠⲆᐃΔ & ΔΔΔⵠⲆⲆⲆ) {
				for (let ᐃⲆ = ΔΔᐃ; ᐃⲆ < ⲆᐃΔΔⵠ; ++ᐃⲆ) {
					ΔΔⲆⲆΔΔΔ[ⲆᐃΔᐃⵠ + ᐃⲆ] = ᐃΔⲆⵠΔⲆΔ[ᐃⲆ]
				}
			} else {
				ΔΔⲆⲆΔΔΔ.set(ᐃΔⲆⵠΔⲆΔ, ⲆᐃΔᐃⵠ)
			}
		}
		return ⵠᐃΔⵠΔⵠⵠ
	}

	function ΔΔⲆⵠᐃᐃΔᐃᐃ(ΔⵠΔⲆΔ) {
		const ᐃΔⲆⵠΔⲆΔ = ⵠⵠΔΔⲆΔΔ(ΔⵠΔⲆΔ);
		const ΔᐃᐃⵠⲆ = ᐃΔⲆⵠΔⲆΔ.length;
		const ⵠᐃⵠⵠⵠⵠᐃ = new Array(ΔᐃᐃⵠⲆ);
		for (let ᐃⲆ = ΔΔᐃ; ᐃⲆ < ΔᐃᐃⵠⲆ; ᐃⲆ++) ⵠᐃⵠⵠⵠⵠᐃ[ᐃⲆ] = ᐃΔⲆⵠΔⲆΔ[ᐃⲆ];
		return ⵠᐃⵠⵠⵠⵠᐃ
	}

	function ΔᐃΔⵠᐃΔⲆⲆΔ(ⲆᐃⵠⵠΔ) {
		let ⵠⵠⵠᐃⲆΔⲆ = "";
		ⲆᐃⵠⵠΔ /= 2;
		const ΔᐃᐃⵠⲆ = ⵠⵠΔᐃⲆ[ⲆᐃⵠⵠΔ / ᐃᐃΔⵠ - ᐃⵠ] / ⵠΔⲆΔ;
		for (let ᐃⲆ = ΔΔᐃ; ΔᐃᐃⵠⲆ > ᐃⲆ; ᐃⲆ++) ⵠⵠⵠᐃⲆΔⲆ += String.fromCharCode(ⵠᐃⵠⵠᐃᐃⵠ[ⲆᐃⵠⵠΔ++]);
		return ⵠⵠⵠᐃⲆΔⲆ
	}

	function ᐃΔⲆⵠⲆΔⲆ(ᐃᐃⵠᐃΔΔᐃ, ⵠᐃΔᐃΔΔΔ, ΔᐃⲆⲆⵠⲆⵠ) {
		if (ΔᐃⲆⲆⵠⲆⵠ) {
			switch (ᐃᐃⵠᐃΔΔᐃ) {
				case 2:
					return ᐃⵠⵠΔⲆΔⵠ;
				case ⵠΔᐃⲆ:
					return ⲆᐃⲆᐃⲆᐃᐃ
			}
		} else {
			switch (ᐃᐃⵠᐃΔΔᐃ) {
				case ΔΔᐃ:
					return ⵠᐃΔᐃΔΔΔ ? ᐃᐃᐃⵠⵠⵠᐃ : ΔⲆᐃᐃⵠᐃᐃ;
				case 1:
					return ⵠᐃΔᐃΔΔΔ ? ⲆⲆⲆⲆᐃⲆⲆ : ⵠᐃⵠⵠᐃᐃⵠ;
				case 2:
					return ⵠᐃΔᐃΔΔΔ ? ᐃᐃᐃⵠᐃⲆΔ : ⵠⵠΔᐃⲆ;
				case ⵠΔⵠⲆ:
					return ⵠᐃΔᐃΔΔΔ ? ΔⲆΔⲆᐃᐃⵠ : ⵠΔᐃⵠᐃᐃΔ
			}
		}
	}

	function isAlly(t) {
		if (t && t.pid) {
			return t.pid == ⲆΔⲆ.id || ⲆΔⲆ.ΔⵠΔⵠΔ.includes(t.pid)
		}
	}

	function player(t) {
		if (t && t.pid) {
			return ⲆΔΔ.ᐃⵠⵠΔ[t.pid].ᐃΔⲆᐃⵠ
		}
	}

	function ⵠⵠΔΔⲆΔΔ(ΔⵠΔⲆΔ) {
		const ΔⲆᐃΔ = ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ΔΔⲆᐃⲆⵠⵠ >>> ⵠΔⲆΔ];
		const ᐃⵠⲆᐃΔ = ΔΔⲆᐃⵠⵠⲆ(ΔⲆᐃΔ);
		const ⲆⵠΔΔΔⲆΔ = ⵠΔⲆⲆⵠᐃⲆ(ᐃⵠⲆᐃΔ);
		let ⵠⵠᐃΔΔ = ᐃⵠⲆᐃΔ & ⲆⲆᐃⲆⵠⵠᐃ ? ΔⵠΔⲆΔ : ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ᐃΔᐃⲆΔⵠΔ >>> ⵠΔⵠᐃ];
		const ⲆᐃΔΔⵠ = ᐃⵠⲆᐃΔ & ⵠΔᐃⲆΔΔⵠ ? ⵠⵠΔᐃⲆ[ΔⵠΔⲆΔ + ᐃⵠⲆⵠⲆⲆⵠ >>> ⵠⲆΔΔ] : ⵠⵠΔᐃⲆ[ⵠⵠᐃΔΔ + ⲆᐃᐃᐃΔΔΔ >>> ⵠΔⲆΔ] >>> ⲆⵠΔΔΔⲆΔ;
		return ᐃΔⲆⵠⲆΔⲆ(ⲆⵠΔΔΔⲆΔ, ᐃⵠⲆᐃΔ & ᐃᐃᐃᐃⵠⵠᐃ, ᐃⵠⲆᐃΔ & ⵠᐃᐃⵠᐃⵠⲆ).subarray(ⵠⵠᐃΔΔ >>>= ⲆⵠΔΔΔⲆΔ, ⵠⵠᐃΔΔ + ⲆᐃΔΔⵠ)
	}

	function ᐃΔΔⲆᐃΔⲆᐃⲆ(ⵠⵠᐃΔΔ) {
		const ⵠⵠΔᐃᐃᐃⲆ = new Uint8Array(ⵠⵠᐃΔΔ);
		const ⲆᐃⵠⵠΔ = ⵠⲆᐃᐃΔⲆᐃ(ⵠⵠΔᐃᐃᐃⲆ.length, ΔⲆΔΔⵠⲆⵠ);
		ΔⲆᐃᐃⵠᐃᐃ.set(ⵠⵠΔᐃᐃᐃⲆ, ⲆᐃⵠⵠΔ);
		return ⲆᐃⵠⵠΔ
	}
	const Δⵠⵠ = ΔΔᐃ;
	const ⵠΔᐃⲆᐃ = ᐃⲆⵠΔᐃ;
	const ⲆΔᐃⵠⲆ = ⲆⲆⲆᐃⲆ;

	function ᐃᐃΔᐃⵠΔⵠⲆΔ(ⲆᐃⵠⵠΔ) {
		const ⲆᐃΔΔⵠ = ⵠⵠΔᐃⲆ[ⲆᐃⵠⵠΔ + ⲆᐃᐃᐃΔΔΔ >>> 2];
		return ⲆᐃⲆΔᐃ.slice(ⲆᐃⵠⵠΔ, ⲆᐃⵠⵠΔ + ⲆᐃΔΔⵠ)
	}
	const ⲆⵠᐃⲆᐃΔΔ = ΔⵠᐃⵠΔΔΔ;
	const ⵠΔᐃᐃⲆ = ᐃΔⵠΔᐃ;

	function ⲆᐃⲆⵠⵠⲆⵠ(ΔΔΔΔⲆⵠᐃ, ⲆⵠⵠᐃⲆⲆⲆ, ⲆⲆᐃᐃΔᐃⲆ, ᐃᐃᐃⵠᐃⵠⵠ, ⵠⵠᐃᐃⵠᐃⵠ, ΔⲆⵠΔⵠⵠΔ) {
		const ⲆᐃⲆᐃΔΔⲆ = ΔΔΔΔⲆⵠᐃ ^ 11760;
		const ΔΔᐃΔΔᐃΔ = ~(39517 & ⲆⵠⵠᐃⲆⲆⲆ) & 39517 | ~(39517 & ⲆⵠⵠᐃⲆⲆⲆ) & ⲆⵠⵠᐃⲆⲆⲆ;
		const ΔⲆᐃⵠⵠⲆⵠ = (8 << (ⲆⲆᐃᐃΔᐃⲆ >> 0 & 255)) + (24 << (ⲆⲆᐃᐃΔᐃⲆ >> 8 & 255)) + (0 << (ⲆⲆᐃᐃΔᐃⲆ >> 24 & 255)) + (16 << (ⲆⲆᐃᐃΔᐃⲆ >> 16 & 255));
		const ⵠⲆᐃΔΔΔⲆ = ~(ᐃᐃᐃⵠᐃⵠⵠ & 42669) & ᐃᐃᐃⵠᐃⵠⵠ | ~(ᐃᐃᐃⵠᐃⵠⵠ & 42669) & 42669;
		const ⵠⲆΔᐃⵠⲆᐃ = ~(28914 & ⵠⵠᐃᐃⵠᐃⵠ) & (ⵠⵠᐃᐃⵠᐃⵠ | 28914);
		const ᐃᐃΔΔᐃⲆᐃ = (2531011 + 214013 * (28307 + ΔⲆⵠΔⵠⵠΔ)) % 4294967296;
		const ᐃᐃⵠⲆᐃᐃᐃ = ᐃⵠⵠᐃᐃᐃΔ(ⲆᐃⲆᐃΔΔⲆ, ΔΔᐃΔΔᐃΔ, ΔⲆᐃⵠⵠⲆⵠ, ⵠⲆᐃΔΔΔⲆ, ⵠⲆΔᐃⵠⲆᐃ);
		const ⵠᐃᐃⵠⵠⲆⲆⲆᐃ = ᐃᐃᐃⲆⵠΔⲆ(ᐃᐃΔΔᐃⲆᐃ, ⲆᐃⲆᐃΔΔⲆ, ΔΔᐃΔΔᐃΔ, ΔⲆᐃⵠⵠⲆⵠ, ⵠⲆᐃΔΔΔⲆ, ⵠⲆΔᐃⵠⲆᐃ);
		const ⲆⲆⲆΔⵠⵠᐃ = ~(48699 & ᐃᐃⵠⲆᐃᐃᐃ) & 48699 | ~(48699 & ᐃᐃⵠⲆᐃᐃᐃ) & ᐃᐃⵠⲆᐃᐃᐃ;
		return ⲆⲆⲆΔⵠⵠᐃ
	}
	const ⲆⵠΔᐃΔⵠΔᐃΔ = ΔΔⲆⲆⲆⲆᐃ;
	const ⲆⵠⵠΔ = ⵠΔᐃⲆ;
	const ᐃΔⵠⲆΔ = ᐃⲆⵠᐃᐃ;
	const ΔΔᐃΔΔᐃᐃ = ⵠΔⲆᐃⲆᐃⵠ;

	function ⲆⲆⲆⲆⵠΔᐃ(ⵠᐃΔᐃᐃᐃⲆ, ⲆΔᐃⵠⲆⲆΔ, ΔΔΔⲆⵠⵠⵠ) {
		ⲆΔⲆΔΔᐃᐃ(ᐃΔΔΔⲆ, ⵠᐃΔᐃᐃᐃⲆ, ⲆΔᐃⵠⲆⲆΔ, ΔΔΔⲆⵠⵠⵠ);
		const ⲆⵠΔⵠΔᐃΔ = ⵠⲆᐃⵠⵠΔⲆ(ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[ΔⲆᐃ], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[ΔΔᐃ], ⲆᐃΔⲆ[ΔⲆᐃ]);
		const ΔⲆᐃⲆⵠⵠⵠᐃⲆ = ⲆΔᐃᐃⲆΔΔ(ⲆᐃΔⲆ[ⵠΔⵠᐃ], ⲆᐃΔⲆ[0]);
		const ⲆᐃΔⲆⲆΔΔ = ~(ⲆⵠΔⵠΔᐃΔ & 11352) & ⲆⵠΔⵠΔᐃΔ | ~(ⲆⵠΔⵠΔᐃΔ & 11352) & 11352;
		return ⲆᐃΔⲆⲆΔΔ
	}

	function ΔᐃⲆⵠⲆⲆⲆ(ⵠᐃΔΔⲆⵠΔ, ΔⲆⵠⵠⲆⵠⵠ, ΔᐃⵠⲆᐃⵠⵠ, ⵠⵠⵠⵠᐃⲆⵠ) {
		ⵠᐃᐃⵠᐃΔΔ(ᐃΔΔΔⲆ, ⵠᐃΔΔⲆⵠΔ, ΔⲆⵠⵠⲆⵠⵠ, ΔᐃⵠⲆᐃⵠⵠ, ⵠⵠⵠⵠᐃⲆⵠ);
		const ⲆΔΔᐃΔⵠⵠ = ⵠᐃⲆΔⵠᐃΔ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[3], ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[1]);
		const ⲆᐃΔᐃⵠᐃⲆ = ⲆᐃΔⵠᐃΔⲆ(ⲆᐃΔⲆ[ⵠⲆΔΔ], ⲆᐃΔⲆ[3], ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[ᐃⵠ]);
		const ᐃΔⲆⲆΔⲆΔ = (48271 * (80 + (ⲆΔΔᐃΔⵠⵠ ^ ⲆᐃΔᐃⵠᐃⲆ)) + ΔΔᐃ) % 2147483647;
		return ᐃΔⲆⲆΔⲆΔ
	}

	function ⲆΔⲆᐃⵠⵠⵠ(ⲆⵠⵠΔⵠⲆⵠ, ⵠᐃΔᐃᐃᐃⵠ, ΔᐃⲆⵠΔⲆⵠ) {
		ⲆⵠᐃΔΔΔΔ(ᐃΔΔΔⲆ, ⲆⵠⵠΔⵠⲆⵠ, ⵠᐃΔᐃᐃᐃⵠ, ΔᐃⲆⵠΔⲆⵠ);
		const ΔΔⵠⲆΔⵠᐃ = ⵠᐃⲆΔⵠᐃΔ(ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ΔⲆᐃ], ⲆᐃΔⲆ[ⵠΔⵠᐃ]);
		const ΔᐃΔⵠⲆⵠᐃ = ΔᐃⲆⵠⲆⲆⲆ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ᐃⵠ], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[ΔΔᐃ]);
		const ⲆⵠΔⲆⵠΔΔ = (16 << ((ΔΔⵠⲆΔⵠᐃ ^ ΔᐃΔⵠⲆⵠᐃ) >> 8 & 255)) + (24 << ((ΔΔⵠⲆΔⵠᐃ ^ ΔᐃΔⵠⲆⵠᐃ) >> 16 & 255)) + (8 << ((ΔΔⵠⲆΔⵠᐃ ^ ΔᐃΔⵠⲆⵠᐃ) >> 0 & ᐃᐃᐃΔᐃ)) + (0 << ((ΔΔⵠⲆΔⵠᐃ ^ ΔᐃΔⵠⲆⵠᐃ) >> 24 & 255));
		return ⲆⵠΔⲆⵠΔΔ
	}
	const ᐃⵠⲆᐃⵠ = ⲆᐃᐃᐃⲆ;
	const ΔᐃᐃΔᐃⵠᐃ = () => new Promise(((ⲆⵠᐃᐃⲆⲆᐃ, ⲆᐃᐃΔⲆⲆⵠ) => {
		ⲆⲆⲆⲆᐃᐃᐃ["grecaptcha"]["ready"]((function() {
			ⲆⲆⲆⲆᐃᐃᐃ["grecaptcha"]["execute"]("6LdvBaEjAAAAAIKTgdecsZBehRxhVZOIDzG9MvXg", {
				action: "validate_recaptcha"
			}).then((function(ⵠΔᐃⵠⲆ) {
				ⲆⵠᐃᐃⲆⲆᐃ(ⵠΔᐃⵠⲆ)
			})).catch((ᐃⲆⵠᐃⲆΔⲆ => {
				if (ⵠΔΔⲆᐃ) {
					ⲆⵠᐃᐃⲆⲆᐃ(ΔΔᐃ);
					return
				}
				console.log(ⲆⵠᐃΔⲆ);
				ⲆᐃᐃΔⲆⲆⵠ(ᐃⲆⵠᐃⲆΔⲆ)
			}))
		}))
	}));
	const ⵠΔⵠᐃⵠ = Ⲇᐃᐃⵠᐃ;

	function ⲆⲆᐃᐃⲆⲆᐃ(ΔΔΔⵠⲆΔⵠ, ⲆⵠᐃⲆᐃΔⲆ) {
		const ⲆⲆⲆⵠⲆⲆΔ = (1016 | ΔΔΔⵠⲆΔⵠ) & ~(1016 & ΔΔΔⵠⲆΔⵠ);
		const ⵠᐃⵠᐃᐃᐃᐃ = ((ⲆⵠᐃⲆᐃΔⲆ + 5457) * 2147483629 + 2147483587) % 2147483647;
		const ⵠᐃⲆᐃΔΔⲆ = ΔᐃΔΔⵠⵠⵠ(ⲆⲆⲆⵠⲆⲆΔ, ⵠᐃⵠᐃᐃᐃᐃ, ⲆⲆⲆⵠⲆⲆΔ, ⵠᐃⵠᐃᐃᐃᐃ, ⲆⲆⲆⵠⲆⲆΔ);
		const ⲆΔⵠⵠⲆⵠⵠ = ⵠⲆⵠΔⲆⲆⵠ(ⵠᐃⵠᐃᐃᐃᐃ, ⲆⲆⲆⵠⲆⲆΔ, ⵠᐃⵠᐃᐃᐃᐃ, ⲆⲆⲆⵠⲆⲆΔ, ⵠᐃⵠᐃᐃᐃᐃ, ⲆⲆⲆⵠⲆⲆΔ);
		const ⵠⵠⵠΔΔⵠΔ = (16 << ((ⵠᐃⲆᐃΔΔⲆ ^ ⲆΔⵠⵠⲆⵠⵠ) >> 8 & ᐃᐃᐃΔᐃ)) + (ΔΔᐃ << ((ⵠᐃⲆᐃΔΔⲆ ^ ⲆΔⵠⵠⲆⵠⵠ) >> 24 & 255)) + (24 << ((ⵠᐃⲆᐃΔΔⲆ ^ ⲆΔⵠⵠⲆⵠⵠ) >> 0 & 255)) + (8 << ((ⵠᐃⲆᐃΔΔⲆ ^ ⲆΔⵠⵠⲆⵠⵠ) >> 16 & 255));
		return ⵠⵠⵠΔΔⵠΔ
	}
	const ⲆⲆΔᐃᐃ = ΔΔⲆΔΔ;
	const ΔΔⲆΔΔᐃΔ = {
		"ΔᐃΔⵠΔⵠΔ": "development",
		"ⵠⲆᐃΔΔⵠᐃ": "production"
	};
	const ΔΔᐃΔⵠᐃⵠ = ΔΔᐃᐃΔΔⵠ;
	const ᐃᐃⵠⵠΔⲆⲆ = 6388567;
	const ⵠΔⵠᐃⲆᐃⵠ = ᐃᐃⵠⵠΔⲆⲆ["ⲆᐃΔΔⲆΔᐃ"];
	const ΔΔᐃⲆ = `const ᐃᐃⵠⲆ = (typeof ⵠⵠΔΔ === "${ⵠΔⵠᐃⲆᐃⵠ}") ? 1 : 0; return ᐃᐃⵠⲆ;`;

	function ⵠⵠΔΔ() {
		ⵠΔⵠᐃⲆᐃⵠ;
		ᐃᐃⵠⵠΔⲆⲆ();
		return ΔΔᐃⲆ
	}
	const ᐃᐃⵠⲆ = 6773493;
	const ⵠΔⲆᐃᐃⵠΔ = new Function(ⵠⵠΔΔ + ΔΔᐃⲆ);
	const ⲆⲆᐃⵠΔⲆⲆ = 2311534;
	if (ⵠΔⲆᐃᐃⵠΔ(ᐃᐃⵠⲆ, ⲆⲆᐃⵠΔⲆⲆ) === 1) {
		const ᐃᐃⵠⵠΔⲆⲆ = ⲆⲆⲆⲆᐃᐃᐃ.setInterval;
		const ⵠΔⵠᐃⲆᐃⵠ = ᐃᐃⵠⵠΔⲆⲆ;
		const ⲆᐃΔΔⲆΔᐃ = function() {
			ᐃᐃⵠⵠΔⲆⲆ(ⲆᐃΔΔⲆΔᐃ, 7308);
			ⵠΔⵠᐃⲆᐃⵠ(ⲆᐃΔΔⲆΔᐃ, 5451)
		};
		ⲆᐃΔΔⲆΔᐃ()
	}
	const ⲆΔⲆⲆⲆΔᐃ = ᐃⵠᐃᐃΔ;
	const ⵠⲆⵠⲆⵠⲆⲆ = ΔΔⲆΔΔᐃΔ.ⵠⲆᐃΔΔⵠᐃ;

	function ᐃⵠᐃΔⲆ(ⵠⲆΔⵠⵠ) {
		this.Δᐃⵠᐃ = 2147483648;
		this.a = 1103515245;
		this.c = 12345;
		this.state = ⵠⲆΔⵠⵠ ? ⵠⲆΔⵠⵠ : Math.floor(Math.random() * (this.Δᐃⵠᐃ - ᐃⵠ))
	}
	ᐃⵠᐃΔⲆ.prototype.random = function() {
		this.state = (this.state * this.a + this.c) % this.Δᐃⵠᐃ;
		return this.state / this.Δᐃⵠᐃ
	};
	ᐃⵠᐃΔⲆ.prototype.ⵠᐃᐃΔⵠᐃᐃ = function(ⵠⲆΔⵠⵠ) {
		this.state = ⵠⲆΔⵠⵠ
	};
	const ⵠΔΔᐃⵠ = ΔᐃΔᐃⲆ;
	const ⲆⲆᐃᐃᐃ = ΔⲆᐃⵠᐃ;
	ⲆΔⵠΔᐃⲆΔ = 1e4;
	const ⲆᐃΔⵠ = ⵠᐃⵠⲆ;
	const ΔⲆΔⵠ = ⵠΔᐃⲆ;
	ⵠⵠΔⲆⵠⲆᐃ = [];
	const ⵠᐃⵠⲆΔⲆⲆ = ΔΔⲆΔΔ;
	var ⲆᐃᐃᐃᐃΔⵠ = new ᐃⵠᐃΔⲆ;
	ⲆᐃᐃᐃᐃΔⵠ.ⵠᐃᐃΔⵠᐃᐃ((new Date).getTime());
	const ᐃᐃⲆΔⲆ = ΔΔᐃΔΔᐃᐃ;
	const ᐃᐃᐃᐃᐃΔⵠ = ΔⵠⲆⲆⲆⲆⵠ;
	const ᐃⲆᐃⵠᐃ = ᐃⵠΔⵠⵠ;
	const ᐃⲆᐃⲆΔ = ⲆⵠⲆⵠⲆ;
	const ΔⵠⵠⵠⵠⵠΔ = ᐃⵠᐃⲆⲆⵠⲆ;
	const ⲆΔᐃⲆⵠ = ᐃⲆⵠᐃⲆ;
	const ΔΔⲆⵠⵠ = ᐃⲆⵠΔᐃ;
	const ᐃⵠΔⲆ = ⵠΔⲆΔ;
	const ᐃᐃᐃⲆⲆ = Ⲇᐃᐃⵠᐃ;
	for (var ΔᐃⲆᐃ = ΔΔᐃ; ⲆΔⵠΔᐃⲆΔ > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) ⵠⵠΔⲆⵠⲆᐃ.push(ⲆᐃᐃᐃᐃΔⵠ.random());

	function ᐃΔΔⲆⲆᐃⵠ(ⲆⵠⲆⲆⲆ, ᐃᐃⵠΔᐃⲆᐃ, ⵠΔΔᐃⵠᐃΔ, ΔΔⵠΔΔᐃΔ) {
		const ᐃΔⵠᐃⲆⵠᐃ = ~(59259 & ⲆⵠⲆⲆⲆ) & ⲆⵠⲆⲆⲆ | ~(ⲆⵠⲆⲆⲆ & 59259) & 59259;
		const ᐃᐃᐃΔᐃⲆⵠ = ~(ᐃᐃⵠΔᐃⲆᐃ & 56097) & ᐃᐃⵠΔᐃⲆᐃ | ~(ᐃᐃⵠΔᐃⲆᐃ & 56097) & 56097;
		const ᐃᐃⲆΔⵠᐃⲆ = ((43315 + ⵠΔΔᐃⵠᐃΔ) * 1664525 + 1013904223) % 4294967296;
		const ⲆⵠΔⵠⲆᐃᐃ = (8 << (ΔΔⵠΔΔᐃΔ >> 24 & ⵠᐃᐃⵠⲆ)) + (32 << (ΔΔⵠΔΔᐃΔ >> 32 & 255)) + (24 << (ΔΔⵠΔΔᐃΔ >> 8 & 255)) + (16 << (ΔΔⵠΔΔᐃΔ >> 16 & 255));
		const ⲆᐃⲆⵠΔᐃⵠ = ᐃⲆᐃⵠΔΔΔ(ᐃΔⵠᐃⲆⵠᐃ, ᐃᐃᐃΔᐃⲆⵠ, ᐃᐃⲆΔⵠᐃⲆ, ⲆⵠΔⵠⲆᐃᐃ, ᐃΔⵠᐃⲆⵠᐃ, ᐃᐃᐃΔᐃⲆⵠ);
		const ⲆᐃᐃⵠᐃᐃⲆ = ⲆΔΔᐃᐃⲆⲆ(ᐃᐃⲆΔⵠᐃⲆ, ⲆⵠΔⵠⲆᐃᐃ, ᐃΔⵠᐃⲆⵠᐃ, ᐃᐃᐃΔᐃⲆⵠ, ᐃᐃⲆΔⵠᐃⲆ);
		const ΔⲆⵠⵠⲆⵠⵠⵠΔ = ᐃⲆⵠᐃⲆΔⵠ(ⲆⵠΔⵠⲆᐃᐃ, ᐃΔⵠᐃⲆⵠᐃ, ᐃᐃᐃΔᐃⲆⵠ, ᐃᐃⲆΔⵠᐃⲆ, ⲆⵠΔⵠⲆᐃᐃ, ᐃΔⵠᐃⲆⵠᐃ);
		const ΔⵠΔⵠΔΔⵠ = (1013904223 + 1664525 * ((ⲆᐃⲆⵠΔᐃⵠ ^ ⲆᐃᐃⵠᐃᐃⲆ) + 26191)) % 4294967296;
		const ΔᐃⲆⵠΔⲆΔ = (ΔⵠΔⵠΔΔⵠ | 38630) & ~(38630 & ΔⵠΔⵠΔΔⵠ);
		return ΔᐃⲆⵠΔⲆΔ
	}
	const ⲆⵠⲆ = ΔΔᐃ;
	const ΔᐃᐃΔⲆⵠΔ = ⲆⵠⲆⵠⵠⵠⲆ;
	const ΔΔΔⲆⲆΔᐃ = ΔΔⲆᐃⲆ;
	const ⵠⵠΔΔⵠ = ᐃΔⵠΔᐃ;

	function ΔⲆⲆⲆⲆⵠΔ(ⵠᐃΔᐃᐃᐃΔ, ⵠⵠΔᐃⵠⲆⲆ, ΔᐃⵠⲆᐃⲆᐃ, ⵠᐃⵠΔᐃΔΔ, ⵠᐃⲆⵠⲆΔⲆ) {
		const ⵠⲆⵠⵠⲆᐃᐃ = (12345 + 1103515245 * (23101 + ⵠᐃΔᐃᐃᐃΔ)) % 2147483648;
		const ΔΔΔᐃⲆᐃᐃ = 58614 ^ ⵠⵠΔᐃⵠⲆⲆ;
		const ᐃᐃⵠⵠⵠΔⲆ = ((ΔᐃⵠⲆᐃⲆᐃ + 45267) * 214013 + 2531011) % 4294967296;
		const ᐃⲆΔᐃᐃᐃΔ = ⵠᐃⵠΔᐃΔΔ ^ 40810;
		const ⵠᐃⵠᐃᐃΔⵠ = (24 << (ⵠᐃⲆⵠⲆΔⲆ >> 24 & 255)) + (8 << (ⵠᐃⲆⵠⲆΔⲆ >> 32 & 255)) + (32 << (ⵠᐃⲆⵠⲆΔⲆ >> 8 & ΔΔΔⵠⲆΔᐃ)) + (16 << (ⵠᐃⲆⵠⲆΔⲆ >> 16 & 255));
		const ᐃⵠᐃΔⲆΔΔ = ⵠⲆΔⵠⵠⵠⵠ(ⵠⲆⵠⵠⲆᐃᐃ, ΔΔΔᐃⲆᐃᐃ);
		const ⵠⵠᐃⲆΔⵠⲆ = ᐃΔΔⲆⲆᐃⵠ(ᐃᐃⵠⵠⵠΔⲆ, ᐃⲆΔᐃᐃᐃΔ, ⵠᐃⵠᐃᐃΔⵠ, ⵠⲆⵠⵠⲆᐃᐃ);
		const ⵠᐃΔⵠⵠⵠᐃⵠⵠ = ᐃⵠⵠⲆⲆᐃΔ(ΔΔΔᐃⲆᐃᐃ, ᐃᐃⵠⵠⵠΔⲆ, ᐃⲆΔᐃᐃᐃΔ, ⵠᐃⵠᐃᐃΔⵠ);
		const ΔⵠᐃΔⵠΔΔ = (24 << ((ᐃⵠᐃΔⲆΔΔ ^ ⵠⵠᐃⲆΔⵠⲆ) >> 24 & 255)) + (32 << ((ᐃⵠᐃΔⲆΔΔ ^ ⵠⵠᐃⲆΔⵠⲆ) >> 16 & 255)) + (8 << ((ᐃⵠᐃΔⲆΔΔ ^ ⵠⵠᐃⲆΔⵠⲆ) >> 32 & 255)) + (16 << ((ᐃⵠᐃΔⲆΔΔ ^ ⵠⵠᐃⲆΔⵠⲆ) >> 8 & 255));
		const ΔᐃⵠΔᐃⵠⵠ = ~(13644 & ΔⵠᐃΔⵠΔΔ) & ΔⵠᐃΔⵠΔΔ | ~(ΔⵠᐃΔⵠΔΔ & 13644) & 13644;
		return ΔᐃⵠΔᐃⵠⵠ
	}

	function ΔΔΔᐃΔΔᐃ(ᐃᐃᐃⲆⲆᐃᐃ, ⲆᐃΔᐃⵠΔⲆ, ΔΔᐃⲆΔᐃΔ, ⵠΔⵠᐃᐃⲆᐃ, ΔᐃⵠᐃⲆᐃⵠ, ⲆΔⵠᐃᐃⲆΔ) {
		const ᐃᐃΔΔᐃᐃⵠ = ((39488 + ᐃᐃᐃⲆⲆᐃᐃ) * 214013 + 2531011) % 4294967296;
		const ᐃΔΔⲆΔᐃⲆ = ~(49976 & ⲆᐃΔᐃⵠΔⲆ) & ⲆᐃΔᐃⵠΔⲆ | ~(ⲆᐃΔᐃⵠΔⲆ & 49976) & 49976;
		const ΔⵠⲆⲆⲆΔⲆ = ~(ΔΔᐃⲆΔᐃΔ & 35856) & ΔΔᐃⲆΔᐃΔ | ~(ΔΔᐃⲆΔᐃΔ & 35856) & 35856;
		const ⲆΔᐃΔⵠᐃᐃ = 52219 ^ ⵠΔⵠᐃᐃⲆᐃ;
		const ᐃᐃΔᐃⲆⲆⲆ = (ΔᐃⵠᐃⲆᐃⵠ + 3575) % 65503;
		const ⲆΔᐃⲆⵠΔⵠ = ~(6932 & ⲆΔⵠᐃᐃⲆΔ) & ⲆΔⵠᐃᐃⲆΔ | ~(ⲆΔⵠᐃᐃⲆΔ & 6932) & 6932;
		const ΔᐃᐃᐃⵠΔⲆ = ᐃⵠⵠᐃΔΔⲆ(ᐃᐃΔΔᐃᐃⵠ, ᐃΔΔⲆΔᐃⲆ, ΔⵠⲆⲆⲆΔⲆ, ⲆΔᐃΔⵠᐃᐃ, ᐃᐃΔᐃⲆⲆⲆ);
		const ⵠⲆⲆΔⵠᐃⲆ = ΔⲆⲆⲆᐃⵠᐃ(ⲆΔᐃⲆⵠΔⵠ, ᐃᐃΔΔᐃᐃⵠ, ᐃΔΔⲆΔᐃⲆ, ΔⵠⲆⲆⲆΔⲆ, ⲆΔᐃΔⵠᐃᐃ, ᐃᐃΔᐃⲆⲆⲆ);
		const ⵠΔΔΔᐃⲆΔᐃⵠ = ΔⵠⲆⲆᐃⲆᐃ(ⲆΔᐃⲆⵠΔⵠ, ᐃᐃΔΔᐃᐃⵠ, ᐃΔΔⲆΔᐃⲆ, ΔⵠⲆⲆⲆΔⲆ, ⲆΔᐃΔⵠᐃᐃ, ᐃᐃΔᐃⲆⲆⲆ);
		const ⲆΔΔΔⲆⲆΔ = (1013904223 + 1664525 * ((ΔᐃᐃᐃⵠΔⲆ ^ ⵠⲆⲆΔⵠᐃⲆ) + 60709)) % 4294967296;
		const ⵠΔⲆᐃΔⲆⵠ = ~(ⲆΔΔΔⲆⲆΔ & 42138) & ⲆΔΔΔⲆⲆΔ | ~(ⲆΔΔΔⲆⲆΔ & 42138) & 42138;
		return ⵠΔⲆᐃΔⲆⵠ
	}

	function ⵠⵠⵠΔⵠΔⲆ(ΔΔⵠᐃΔᐃⵠ, ⵠⵠⵠᐃΔⲆⵠ) {
		const ΔⲆⲆΔⵠΔⲆ = ~(41406 & ΔΔⵠᐃΔᐃⵠ) & ΔΔⵠᐃΔᐃⵠ | ~(ΔΔⵠᐃΔᐃⵠ & 41406) & 41406;
		const ᐃΔⵠΔⲆⵠⲆ = ((ⵠⵠⵠᐃΔⲆⵠ + 17922) * 1103515245 + 12345) % 2147483648;
		const ⵠᐃΔΔⲆⲆΔ = ⲆⲆⵠΔᐃᐃᐃ(ΔⲆⲆΔⵠΔⲆ, ᐃΔⵠΔⲆⵠⲆ, ΔⲆⲆΔⵠΔⲆ);
		const ⲆⲆΔΔⲆΔΔΔⵠ = ⲆⵠᐃᐃⲆᐃᐃ(ᐃΔⵠΔⲆⵠⲆ, ΔⲆⲆΔⵠΔⲆ, ᐃΔⵠΔⲆⵠⲆ, ΔⲆⲆΔⵠΔⲆ);
		const ⲆΔΔΔᐃⲆⵠ = ΔΔᐃΔⲆΔⵠ(ᐃΔⵠΔⲆⵠⲆ, ΔⲆⲆΔⵠΔⲆ, ᐃΔⵠΔⲆⵠⲆ, ΔⲆⲆΔⵠΔⲆ, ᐃΔⵠΔⲆⵠⲆ);
		const ᐃᐃΔⵠᐃΔⵠ = ⵠᐃΔΔⲆⲆΔ ^ 18573;
		const ⲆⲆᐃΔΔⲆᐃ = ((42346 + (ᐃᐃΔⵠᐃΔⵠ ^ ⲆΔΔΔᐃⲆⵠ)) * 2147483629 + 2147483587) % 2147483647;
		return ⲆⲆᐃΔΔⲆᐃ
	}

	function ⵠⲆⲆⲆⲆⵠⲆ(ᐃΔⵠⵠⲆⲆⵠ, ᐃᐃᐃᐃΔⵠⲆ, ⵠⲆᐃᐃΔᐃⵠ, ⵠᐃΔⵠⵠⲆᐃ, ΔⲆᐃᐃⵠⲆᐃ) {
		const ΔⲆΔΔⲆⵠᐃ = (2147483629 * (ᐃΔⵠⵠⲆⲆⵠ + 14772) + 2147483587) % 2147483647;
		const ΔᐃⵠⵠΔⵠⲆ = 63080 ^ ᐃᐃᐃᐃΔⵠⲆ;
		const ᐃⲆⲆⵠᐃΔΔ = ((ⵠⲆᐃᐃΔᐃⵠ + 60304) * 22695477 + 1) % 4294967296;
		const ᐃᐃᐃⵠⵠΔᐃ = ~(5467 & ⵠᐃΔⵠⵠⲆᐃ) & 5467 | ~(5467 & ⵠᐃΔⵠⵠⲆᐃ) & ⵠᐃΔⵠⵠⲆᐃ;
		const ΔΔΔⵠⲆⲆⵠ = (ΔⲆᐃᐃⵠⲆᐃ | 40165) & ~(40165 & ΔⲆᐃᐃⵠⲆᐃ);
		const ᐃⵠᐃⲆΔΔΔ = ᐃⲆΔᐃᐃΔⲆ(ΔⲆΔΔⲆⵠᐃ, ΔᐃⵠⵠΔⵠⲆ, ᐃⲆⲆⵠᐃΔΔ, ᐃᐃᐃⵠⵠΔᐃ);
		const ᐃᐃⵠᐃΔΔΔ = ⲆΔΔᐃᐃⲆⲆ(ΔΔΔⵠⲆⲆⵠ, ΔⲆΔΔⲆⵠᐃ, ΔᐃⵠⵠΔⵠⲆ, ᐃⲆⲆⵠᐃΔΔ, ᐃᐃᐃⵠⵠΔᐃ);
		const ⲆⵠᐃⲆΔᐃᐃ = ⵠⲆⲆⲆΔⵠⵠ(ΔΔΔⵠⲆⲆⵠ, ΔⲆΔΔⲆⵠᐃ, ΔᐃⵠⵠΔⵠⲆ, ᐃⲆⲆⵠᐃΔΔ, ᐃᐃᐃⵠⵠΔᐃ, ΔΔΔⵠⲆⲆⵠ);
		const ᐃᐃⲆⵠⲆΔⵠ = (16 << ((ᐃⵠᐃⲆΔΔΔ ^ ᐃᐃⵠᐃΔΔΔ) >> 24 & 255)) + (8 << ((ᐃⵠᐃⲆΔΔΔ ^ ᐃᐃⵠᐃΔΔΔ) >> 16 & 255)) + (24 << ((ᐃⵠᐃⲆΔΔΔ ^ ᐃᐃⵠᐃΔΔΔ) >> 32 & 255)) + (32 << ((ᐃⵠᐃⲆΔΔΔ ^ ᐃᐃⵠᐃΔΔΔ) >> 8 & 255));
		const ᐃᐃᐃΔΔⵠᐃ = ((28765 + (ᐃᐃⲆⵠⲆΔⵠ ^ ⲆⵠᐃⲆΔᐃᐃ)) * 1664525 + 1013904223) % 4294967296;
		return ᐃᐃᐃΔΔⵠᐃ
	}
	const ⲆⵠΔⵠΔ = ΔᐃⲆΔⲆ;
	const ΔᐃΔΔΔⲆⵠ = ⲆⵠᐃⲆᐃΔΔ;

	function ᐃⵠⲆⲆⵠ(ⲆⲆⲆΔΔⲆΔ, ⵠⲆⲆⲆⵠΔⲆ, ΔⲆⲆⵠⲆΔᐃ, ⲆⵠΔΔⵠⲆΔ) {
		const ᐃⵠⵠᐃⵠΔⲆ = 11762 ^ ⲆⲆⲆΔΔⲆΔ;
		const ᐃⲆⵠⵠⲆⲆⵠ = ~(ⵠⲆⲆⲆⵠΔⲆ & 19425) & 19425 | ~(19425 & ⵠⲆⲆⲆⵠΔⲆ) & ⵠⲆⲆⲆⵠΔⲆ;
		const ᐃΔΔᐃᐃᐃⲆ = (32 << (ΔⲆⲆⵠⲆΔᐃ >> 16 & 255)) + (ΔⲆᐃᐃᐃ << (ΔⲆⲆⵠⲆΔᐃ >> 32 & 255)) + (24 << (ΔⲆⲆⵠⲆΔᐃ >> 24 & 255)) + (16 << (ΔⲆⲆⵠⲆΔᐃ >> ΔⲆᐃᐃᐃ & 255));
		const ΔΔⲆⲆᐃⲆⵠ = ~(259 & ⲆⵠΔΔⵠⲆΔ) & 259 | ~(259 & ⲆⵠΔΔⵠⲆΔ) & ⲆⵠΔΔⵠⲆΔ;
		const ⵠⲆⵠⲆᐃᐃⲆ = (32 << ((ᐃⵠⵠᐃⵠΔⲆ ^ ᐃⲆⵠⵠⲆⲆⵠ) >> 32 & 255)) + (8 << ((ᐃⵠⵠᐃⵠΔⲆ ^ ᐃⲆⵠⵠⲆⲆⵠ) >> ΔⲆᐃⵠᐃ & 255)) + (24 << ((ᐃⵠⵠᐃⵠΔⲆ ^ ᐃⲆⵠⵠⲆⲆⵠ) >> 24 & 255)) + (16 << ((ᐃⵠⵠᐃⵠΔⲆ ^ ᐃⲆⵠⵠⲆⲆⵠ) >> 16 & 255));
		const ⲆΔⲆᐃᐃᐃⵠ = ((17757 + (ⵠⲆⵠⲆᐃᐃⲆ ^ ᐃΔΔᐃᐃᐃⲆ)) * 1664525 + 1013904223) % 4294967296;
		const ⵠⵠΔⲆⵠⲆΔ = ((55182 + (ⲆΔⲆᐃᐃᐃⵠ ^ ΔΔⲆⲆᐃⲆⵠ)) * 1664525 + 1013904223) % 4294967296;
		return ⵠⵠΔⲆⵠⲆΔ
	}

	function ΔΔᐃΔⲆΔⵠ(ⵠᐃⵠᐃΔᐃΔ, ⲆΔⲆᐃⲆⵠⲆ, ΔⵠⵠⵠⲆᐃΔ, ΔΔⵠⲆⲆᐃΔ, ᐃΔΔⲆᐃⵠᐃ) {
		const ⵠΔΔⵠᐃⵠᐃ = (32 << (ⵠᐃⵠᐃΔᐃΔ >> 24 & 255)) + (ᐃᐃᐃⲆⲆ << (ⵠᐃⵠᐃΔᐃΔ >> 8 & 255)) + (24 << (ⵠᐃⵠᐃΔᐃΔ >> 16 & 255)) + (8 << (ⵠᐃⵠᐃΔᐃΔ >> 32 & 255));
		const ⲆΔᐃΔⵠᐃⵠ = (ⲆΔⲆᐃⲆⵠⲆ + 39144) % 65406;
		const ⲆᐃⲆᐃᐃᐃⲆ = ΔⵠⵠⵠⲆᐃΔ ^ 34575;
		const ᐃΔΔⵠᐃⵠⵠ = ~(37841 & ΔΔⵠⲆⲆᐃΔ) & ΔΔⵠⲆⲆᐃΔ | ~(ΔΔⵠⲆⲆᐃΔ & 37841) & 37841;
		const ᐃΔⲆΔⲆΔΔ = (25975 | ᐃΔΔⲆᐃⵠᐃ) & ~(25975 & ᐃΔΔⲆᐃⵠᐃ);
		const ⵠⲆΔΔⲆⵠᐃ = ᐃⵠⲆⲆⵠ(ⵠΔΔⵠᐃⵠᐃ, ⲆΔᐃΔⵠᐃⵠ, ⲆᐃⲆᐃᐃᐃⲆ, ᐃΔΔⵠᐃⵠⵠ);
		const ⵠⲆΔⵠⲆᐃⵠᐃⲆ = ⵠΔΔⲆⲆᐃⵠ(ᐃΔⲆΔⲆΔΔ, ⵠΔΔⵠᐃⵠᐃ, ⲆΔᐃΔⵠᐃⵠ, ⲆᐃⲆᐃᐃᐃⲆ, ᐃΔΔⵠᐃⵠⵠ);
		const ᐃᐃⵠⵠⲆΔΔΔⵠ = ΔⵠⲆⲆᐃⲆᐃ(ᐃΔⲆΔⲆΔΔ, ⵠΔΔⵠᐃⵠᐃ, ⲆΔᐃΔⵠᐃⵠ, ⲆᐃⲆᐃᐃᐃⲆ, ᐃΔΔⵠᐃⵠⵠ, ᐃΔⲆΔⲆΔΔ);
		const ΔⵠᐃⲆⵠⵠΔ = (19326 | ⵠⲆΔΔⲆⵠᐃ) & ~(19326 & ⵠⲆΔΔⲆⵠᐃ);
		const ΔⲆΔᐃᐃᐃᐃ = 36297 ^ ΔⵠᐃⲆⵠⵠΔ;
		return ΔⲆΔᐃᐃᐃᐃ
	}
	const ΔᐃⵠᐃⲆ = ΔⵠⲆⵠⵠ;

	function ⵠⲆᐃᐃΔᐃᐃ(ᐃⲆᐃⲆΔⵠᐃ, ⲆⲆⲆᐃⲆⲆⲆ, ⲆΔⵠⵠⵠⵠΔ, ⵠⵠⵠΔΔⲆⵠ, ΔⵠⲆⵠᐃΔΔ) {
		const ΔᐃᐃᐃⵠⵠⲆ = (24 << (ᐃⲆᐃⲆΔⵠᐃ >> 24 & 255)) + (32 << (ᐃⲆᐃⲆΔⵠᐃ >> ⵠΔⵠᐃⵠ & 255)) + (16 << (ᐃⲆᐃⲆΔⵠᐃ >> 8 & 255)) + (8 << (ᐃⲆᐃⲆΔⵠᐃ >> 32 & 255));
		const ⲆΔᐃΔᐃⲆᐃ = (12345 + (ⲆⲆⲆᐃⲆⲆⲆ + 3024) * 1103515245) % 2147483648;
		const ⲆⲆⲆΔⲆⵠΔ = (8 << (ⲆΔⵠⵠⵠⵠΔ >> 8 & 255)) + (32 << (ⲆΔⵠⵠⵠⵠΔ >> 32 & ᐃᐃᐃΔᐃ)) + (24 << (ⲆΔⵠⵠⵠⵠΔ >> 16 & 255)) + (16 << (ⲆΔⵠⵠⵠⵠΔ >> 24 & 255));
		const ⲆⲆⵠⵠⲆᐃⲆ = (1 + (ⵠⵠⵠΔΔⲆⵠ + 41324) * 22695477) % 4294967296;
		const ⵠᐃⲆⵠᐃⲆΔ = (19607 | ΔⵠⲆⵠᐃΔΔ) & ~(ΔⵠⲆⵠᐃΔΔ & 19607);
		const ΔᐃΔⲆΔᐃᐃ = ΔᐃⵠⵠⲆΔᐃ(ΔᐃᐃᐃⵠⵠⲆ, ⲆΔᐃΔᐃⲆᐃ);
		const ⲆⵠᐃᐃᐃΔⲆⵠⵠ = ⵠΔΔⲆⲆᐃⵠ(ⲆⲆⲆΔⲆⵠΔ, ⲆⲆⵠⵠⲆᐃⲆ, ⵠᐃⲆⵠᐃⲆΔ, ΔᐃᐃᐃⵠⵠⲆ, ⲆΔᐃΔᐃⲆᐃ);
		const ΔᐃᐃΔⵠⵠⵠⲆᐃ = ΔⲆⲆᐃⵠΔⲆ(ⲆⲆⲆΔⲆⵠΔ, ⲆⲆⵠⵠⲆᐃⲆ, ⵠᐃⲆⵠᐃⲆΔ, ΔᐃᐃᐃⵠⵠⲆ, ⲆΔᐃΔᐃⲆᐃ, ⲆⲆⲆΔⲆⵠΔ);
		const ⵠⲆΔᐃᐃΔΔ = ~(49323 & ΔᐃΔⲆΔᐃᐃ) & 49323 | ~(49323 & ΔᐃΔⲆΔᐃᐃ) & ΔᐃΔⲆΔᐃᐃ;
		const ᐃⵠΔᐃⲆᐃΔ = ~(ⵠⲆΔᐃᐃΔΔ & 46567) & (46567 | ⵠⲆΔᐃᐃΔΔ);
		return ᐃⵠΔᐃⲆᐃΔ
	}

	function ⲆΔΔⲆᐃⵠⲆ(ΔⵠᐃᐃΔΔΔ, ΔⵠⵠᐃΔΔᐃ, ΔᐃΔΔΔᐃᐃ, ⵠᐃⲆⲆⵠΔⵠ, ⵠᐃⵠⵠΔΔⵠ, ⵠΔᐃᐃⵠᐃⵠ) {
		const ⲆⲆᐃΔᐃᐃⵠ = (1013904223 + (ΔⵠᐃᐃΔΔΔ + 28824) * 1664525) % 4294967296;
		const ⵠⲆᐃᐃⵠⲆⲆ = (1013904223 + 1664525 * (13210 + ΔⵠⵠᐃΔΔᐃ)) % 4294967296;
		const ᐃⲆⲆⵠⵠⲆⲆ = ~(32165 & ΔᐃΔΔΔᐃᐃ) & 32165 | ~(32165 & ΔᐃΔΔΔᐃᐃ) & ΔᐃΔΔΔᐃᐃ;
		const ⵠⲆⲆΔⵠᐃⵠ = (24 << (ⵠᐃⲆⲆⵠΔⵠ >> 24 & 255)) + (ⵠⲆⵠⵠΔ << (ⵠᐃⲆⲆⵠΔⵠ >> 8 & 255)) + (ⵠᐃᐃΔⲆ << (ⵠᐃⲆⲆⵠΔⵠ >> 16 & ΔΔΔⵠⲆΔᐃ)) + (32 << (ⵠᐃⲆⲆⵠΔⵠ >> 32 & 255));
		const ⲆΔᐃΔᐃᐃⲆ = (ΔⲆᐃ + (39199 + ⵠᐃⵠⵠΔΔⵠ) * 22695477) % 4294967296;
		const ᐃⵠⵠᐃⵠΔᐃ = 33037 ^ ⵠΔᐃᐃⵠᐃⵠ;
		const ⵠⲆᐃⲆᐃⲆΔ = ᐃᐃΔᐃⵠΔᐃ(ⲆⲆᐃΔᐃᐃⵠ, ⵠⲆᐃᐃⵠⲆⲆ, ᐃⲆⲆⵠⵠⲆⲆ);
		const ⲆΔⵠᐃΔⲆⵠᐃⲆ = ⵠΔΔⲆᐃΔΔ(ⵠⲆⲆΔⵠᐃⵠ, ⲆΔᐃΔᐃᐃⲆ, ᐃⵠⵠᐃⵠΔᐃ, ⲆⲆᐃΔᐃᐃⵠ);
		const ⵠⵠⲆⵠᐃΔᐃ = ᐃΔΔΔⵠⲆⲆ(ⵠⲆᐃᐃⵠⲆⲆ, ᐃⲆⲆⵠⵠⲆⲆ, ⵠⲆⲆΔⵠᐃⵠ, ⲆΔᐃΔᐃᐃⲆ);
		const ⲆᐃΔΔⲆᐃᐃ = ⵠⲆᐃⲆᐃⲆΔ ^ 2959;
		const ⵠᐃΔΔⵠⵠᐃ = (1103515245 * (34159 + (ⲆᐃΔΔⲆᐃᐃ ^ ⵠⵠⲆⵠᐃΔᐃ)) + 12345) % 2147483648;
		return ⵠᐃΔΔⵠⵠᐃ
	}

	function ᐃⲆᐃⵠΔΔΔ(ⲆΔⵠᐃⵠⲆᐃ, ᐃΔⵠΔⲆ, ⵠᐃⵠⵠΔⲆⵠ, ⵠⲆⲆᐃⲆⲆⵠ, ⲆΔᐃⵠⵠᐃⲆ, ΔⲆⵠⵠⲆⵠᐃ) {
		const ᐃΔΔΔⲆΔᐃ = 10715 ^ ⲆΔⵠᐃⵠⲆᐃ;
		const ᐃΔⲆⵠᐃⲆⲆ = (24 << (ᐃΔⵠΔⲆ >> 16 & 255)) + (16 << (ᐃΔⵠΔⲆ >> 32 & 255)) + (32 << (ᐃΔⵠΔⲆ >> 8 & ᐃΔᐃⲆΔ)) + (8 << (ᐃΔⵠΔⲆ >> 24 & 255));
		const ΔⵠⵠⲆⲆᐃⲆ = (8 << (ⵠᐃⵠⵠΔⲆⵠ >> 16 & 255)) + (32 << (ⵠᐃⵠⵠΔⲆⵠ >> 24 & 255)) + (16 << (ⵠᐃⵠⵠΔⲆⵠ >> 8 & 255)) + (24 << (ⵠᐃⵠⵠΔⲆⵠ >> 32 & 255));
		const ⵠⲆᐃΔᐃⵠΔ = ⵠⲆⲆᐃⲆⲆⵠ ^ 40782;
		const ΔⲆΔΔⲆΔᐃ = ⲆΔᐃⵠⵠᐃⲆ ^ 41301;
		const ⵠᐃΔⵠⲆⲆΔ = ~(ΔⲆⵠⵠⲆⵠᐃ & 12091) & (12091 | ΔⲆⵠⵠⲆⵠᐃ);
		const ᐃⲆΔᐃᐃΔᐃ = ᐃⲆⵠᐃⲆΔⵠ(ᐃΔΔΔⲆΔᐃ, ᐃΔⲆⵠᐃⲆⲆ, ΔⵠⵠⲆⲆᐃⲆ, ⵠⲆᐃΔᐃⵠΔ, ΔⲆΔΔⲆΔᐃ, ⵠᐃΔⵠⲆⲆΔ);
		const ⲆΔΔΔⲆΔⲆᐃᐃ = ᐃⲆⵠᐃⲆΔⵠ(ᐃΔΔΔⲆΔᐃ, ᐃΔⲆⵠᐃⲆⲆ, ΔⵠⵠⲆⲆᐃⲆ, ⵠⲆᐃΔᐃⵠΔ, ΔⲆΔΔⲆΔᐃ, ⵠᐃΔⵠⲆⲆΔ);
		const ᐃⵠⵠΔΔΔⲆⵠᐃ = ⵠΔⲆΔᐃᐃⲆ(ᐃΔΔΔⲆΔᐃ, ᐃΔⲆⵠᐃⲆⲆ, ΔⵠⵠⲆⲆᐃⲆ, ⵠⲆᐃΔᐃⵠΔ, ΔⲆΔΔⲆΔᐃ);
		const ΔΔⲆⲆΔⵠᐃ = (ᐃⲆΔᐃᐃΔᐃ | 3006) & ~(ᐃⲆΔᐃᐃΔᐃ & 3006);
		const ⲆΔᐃⲆⲆΔⲆ = ~(24460 & ΔΔⲆⲆΔⵠᐃ) & (ΔΔⲆⲆΔⵠᐃ | 24460);
		return ⲆΔᐃⲆⲆΔⲆ
	}

	function ᐃⲆΔᐃᐃΔⲆ(ᐃⲆⲆΔⵠᐃⲆ, ⲆⲆᐃᐃᐃⵠᐃ, ⲆᐃΔΔᐃⵠΔ, ⵠⵠⲆⵠΔᐃᐃ) {
		const ⲆᐃⲆⵠⵠᐃΔ = (57611 | ᐃⲆⲆΔⵠᐃⲆ) & ~(ᐃⲆⲆΔⵠᐃⲆ & 57611);
		const ⵠΔⵠⲆⵠᐃΔ = ((ⲆⲆᐃᐃᐃⵠᐃ + 56889) * 1664525 + 1013904223) % 4294967296;
		const ΔΔΔⲆΔⲆᐃ = ⲆᐃΔΔᐃⵠΔ ^ 62842;
		const ΔΔΔᐃΔΔⲆ = ~(ⵠⵠⲆⵠΔᐃᐃ & 1179) & ⵠⵠⲆⵠΔᐃᐃ | ~(ⵠⵠⲆⵠΔᐃᐃ & 1179) & 1179;
		const ΔΔᐃⵠᐃⲆⵠ = ᐃⵠⲆⲆⵠ(ⲆᐃⲆⵠⵠᐃΔ, ⵠΔⵠⲆⵠᐃΔ, ΔΔΔⲆΔⲆᐃ, ΔΔΔᐃΔΔⲆ);
		const ⲆᐃⵠⵠⲆᐃⵠ = ⵠΔΔⲆᐃΔΔ(ⲆᐃⲆⵠⵠᐃΔ, ⵠΔⵠⲆⵠᐃΔ, ΔΔΔⲆΔⲆᐃ, ΔΔΔᐃΔΔⲆ);
		const ⲆᐃⲆΔⲆⵠⵠⲆΔ = ᐃΔΔⲆⲆᐃⵠ(ⲆᐃⲆⵠⵠᐃΔ, ⵠΔⵠⲆⵠᐃΔ, ΔΔΔⲆΔⲆᐃ, ΔΔΔᐃΔΔⲆ);
		const ⲆΔᐃΔⲆⲆⵠ = (24 << ((ΔΔᐃⵠᐃⲆⵠ ^ ⲆᐃⵠⵠⲆᐃⵠ) >> 24 & 255)) + (8 << ((ΔΔᐃⵠᐃⲆⵠ ^ ⲆᐃⵠⵠⲆᐃⵠ) >> 16 & ⲆⵠΔΔΔ)) + (Ⲇᐃᐃⵠᐃ << ((ΔΔᐃⵠᐃⲆⵠ ^ ⲆᐃⵠⵠⲆᐃⵠ) >> 32 & 255)) + (32 << ((ΔΔᐃⵠᐃⲆⵠ ^ ⲆᐃⵠⵠⲆᐃⵠ) >> 8 & 255));
		const ΔⲆᐃⵠⲆΔΔ = ~(63304 & ⲆΔᐃΔⲆⲆⵠ) & (ⲆΔᐃΔⲆⲆⵠ | 63304);
		return ΔⲆᐃⵠⲆΔΔ
	}
	const ⵠΔⲆᐃⲆ = ΔΔᐃⵠⵠ;
	const ⲆⲆΔᐃⵠᐃΔ = ΔⵠⲆⲆⲆⲆⵠ;
	const ⲆⲆⵠⲆⵠ = ΔᐃΔᐃⲆΔⵠ;

	function ᐃΔΔΔⵠⲆⲆ(ΔΔⲆⵠⵠΔⵠ, ΔᐃⵠⲆⲆᐃᐃ, ⵠⲆⲆⵠⵠⵠⲆ, ΔΔⲆΔⵠⲆᐃ) {
		const ᐃⲆᐃⵠΔΔⵠ = ~(33107 & ΔΔⲆⵠⵠΔⵠ) & (33107 | ΔΔⲆⵠⵠΔⵠ);
		const ᐃᐃⲆΔⵠⵠⵠ = (24 << (ΔᐃⵠⲆⲆᐃᐃ >> 32 & 255)) + (32 << (ΔᐃⵠⲆⲆᐃᐃ >> 8 & ΔΔᐃΔⵠᐃⵠ)) + (8 << (ΔᐃⵠⲆⲆᐃᐃ >> 16 & 255)) + (16 << (ΔᐃⵠⲆⲆᐃᐃ >> 24 & 255));
		const ΔⲆᐃⵠⲆⲆⵠ = ~(ⵠⲆⲆⵠⵠⵠⲆ & 32053) & (32053 | ⵠⲆⲆⵠⵠⵠⲆ);
		const ⲆⲆΔⲆⲆΔⵠ = 12240 ^ ΔΔⲆΔⵠⲆᐃ;
		const ⲆᐃᐃΔⵠⵠᐃ = Δᐃᐃᐃᐃⵠⵠ(ᐃⲆᐃⵠΔΔⵠ, ᐃᐃⲆΔⵠⵠⵠ, ΔⲆᐃⵠⲆⲆⵠ, ⲆⲆΔⲆⲆΔⵠ);
		const ΔⵠΔᐃⲆⲆⲆΔᐃ = ⵠΔΔⲆᐃΔΔ(ᐃⲆᐃⵠΔΔⵠ, ᐃᐃⲆΔⵠⵠⵠ, ΔⲆᐃⵠⲆⲆⵠ, ⲆⲆΔⲆⲆΔⵠ);
		const ⵠⵠⲆΔⲆⲆΔ = ᐃⵠⵠᐃΔΔⲆ(ᐃⲆᐃⵠΔΔⵠ, ᐃᐃⲆΔⵠⵠⵠ, ΔⲆᐃⵠⲆⲆⵠ, ⲆⲆΔⲆⲆΔⵠ, ᐃⲆᐃⵠΔΔⵠ);
		const ᐃΔⲆᐃⵠᐃΔ = ~(64131 & ⲆᐃᐃΔⵠⵠᐃ) & 64131 | ~(64131 & ⲆᐃᐃΔⵠⵠᐃ) & ⲆᐃᐃΔⵠⵠᐃ;
		const ΔⲆᐃⵠᐃᐃⲆ = (2531011 + 214013 * (44352 + (ᐃΔⲆᐃⵠᐃΔ ^ ⵠⵠⲆΔⲆⲆΔ))) % 4294967296;
		return ΔⲆᐃⵠᐃᐃⲆ
	}
	const ⵠΔⵠΔⵠ = ᐃⲆᐃΔΔ;

	function ΔᐃΔⲆⲆⲆⲆ(ⲆᐃΔⵠⵠΔᐃ, ⲆⵠᐃΔᐃᐃⵠ) {
		const ⲆΔᐃᐃΔΔⲆ = ((ⲆᐃΔⵠⵠΔᐃ + 49468) * 1103515245 + 12345) % 2147483648;
		const ⵠⵠⲆᐃⵠᐃⵠ = ((ⲆⵠᐃΔᐃᐃⵠ + 30513) * 214013 + 2531011) % 4294967296;
		const ⲆᐃⵠⵠⲆΔⵠ = ⵠⵠⲆᐃᐃⵠᐃ(ⲆΔᐃᐃΔΔⲆ, ⵠⵠⲆᐃⵠᐃⵠ, ⲆΔᐃᐃΔΔⲆ);
		const ⵠᐃΔᐃᐃⲆᐃⵠΔ = ⵠΔⲆΔᐃᐃⲆ(ⵠⵠⲆᐃⵠᐃⵠ, ⲆΔᐃᐃΔΔⲆ, ⵠⵠⲆᐃⵠᐃⵠ, ⲆΔᐃᐃΔΔⲆ, ⵠⵠⲆᐃⵠᐃⵠ);
		const ⵠΔΔⵠⲆᐃΔⲆΔ = ᐃⵠⲆⲆⵠ(ⲆΔᐃᐃΔΔⲆ, ⵠⵠⲆᐃⵠᐃⵠ, ⲆΔᐃᐃΔΔⲆ, ⵠⵠⲆᐃⵠᐃⵠ);
		const ⲆⲆᐃᐃⲆΔⵠ = (17943 | ⲆᐃⵠⵠⲆΔⵠ) & ~(ⲆᐃⵠⵠⲆΔⵠ & 17943);
		const ΔΔᐃⵠᐃⵠⵠ = 21791 ^ ⲆⲆᐃᐃⲆΔⵠ;
		return ΔΔᐃⵠᐃⵠⵠ
	}

	function ᐃⵠⵠⲆⲆᐃΔ(ⵠᐃᐃᐃⲆⲆⲆ, ΔᐃⲆⵠᐃᐃᐃ, ⵠⲆᐃⲆᐃΔΔ, ᐃᐃΔᐃⲆᐃΔ) {
		const ⲆⵠᐃⵠᐃΔᐃ = (ⵠᐃᐃᐃⲆⲆⲆ + 34282) % 65336;
		const ΔΔⵠᐃⲆⲆΔ = ~(ΔᐃⲆⵠᐃᐃᐃ & 45181) & 45181 | ~(45181 & ΔᐃⲆⵠᐃᐃᐃ) & ΔᐃⲆⵠᐃᐃᐃ;
		const ΔⵠᐃⵠᐃᐃⲆ = (16 << (ⵠⲆᐃⲆᐃΔΔ >> 8 & ᐃᐃᐃΔᐃ)) + (32 << (ⵠⲆᐃⲆᐃΔΔ >> 24 & 255)) + (8 << (ⵠⲆᐃⲆᐃΔΔ >> 32 & 255)) + (24 << (ⵠⲆᐃⲆᐃΔΔ >> 16 & 255));
		const ᐃⲆⵠΔΔⵠΔ = ~(ᐃᐃΔᐃⲆᐃΔ & 25475) & 25475 | ~(25475 & ᐃᐃΔᐃⲆᐃΔ) & ᐃᐃΔᐃⲆᐃΔ;
		const ⲆⵠⵠⲆⲆΔΔ = ⵠⵠⵠΔⵠΔⲆ(ⲆⵠᐃⵠᐃΔᐃ, ΔΔⵠᐃⲆⲆΔ);
		const ⵠⲆᐃⵠᐃᐃᐃ = ⵠΔΔⲆⲆᐃⵠ(ΔⵠᐃⵠᐃᐃⲆ, ᐃⲆⵠΔΔⵠΔ, ⲆⵠᐃⵠᐃΔᐃ, ΔΔⵠᐃⲆⲆΔ, ΔⵠᐃⵠᐃᐃⲆ);
		const ᐃⵠⵠⲆᐃΔΔΔⲆ = ⵠⲆΔⵠⵠⵠⵠ(ᐃⲆⵠΔΔⵠΔ, ⲆⵠᐃⵠᐃΔᐃ);
		const ᐃⲆⲆⲆΔⵠΔ = (58498 + (ⲆⵠⵠⲆⲆΔΔ ^ ⵠⲆᐃⵠᐃᐃᐃ)) % 65531;
		const ⲆⲆᐃΔⲆᐃᐃ = ~(ᐃⲆⲆⲆΔⵠΔ & 37009) & 37009 | ~(37009 & ᐃⲆⲆⲆΔⵠΔ) & ᐃⲆⲆⲆΔⵠΔ;
		return ⲆⲆᐃΔⲆᐃᐃ
	}

	function ᐃⲆⵠᐃⲆΔⵠ(ᐃᐃⵠⲆΔΔᐃ, ⵠⵠⲆⵠᐃⵠⲆ, ⲆΔΔⵠΔᐃⲆ, ΔⲆᐃⵠⲆⲆΔ, ⲆⲆᐃᐃⵠⲆⵠ, ⵠΔⲆΔⵠᐃⵠ) {
		const ⲆᐃⲆⲆⲆⵠⵠ = ~(ᐃᐃⵠⲆΔΔᐃ & 36133) & (ᐃᐃⵠⲆΔΔᐃ | 36133);
		const ᐃⵠΔⲆΔⵠⵠ = (13670 | ⵠⵠⲆⵠᐃⵠⲆ) & ~(ⵠⵠⲆⵠᐃⵠⲆ & 13670);
		const ΔⲆⵠᐃΔⵠⲆ = (31390 | ⲆΔΔⵠΔᐃⲆ) & ~(ⲆΔΔⵠΔᐃⲆ & 31390);
		const ⵠⲆᐃΔⵠⲆⲆ = ΔⲆᐃⵠⲆⲆΔ ^ 64081;
		const ⵠᐃⵠΔⵠⵠΔ = 7550 ^ ⲆⲆᐃᐃⵠⲆⵠ;
		const ⵠⵠΔΔΔΔΔ = (2147483587 + 2147483629 * (ⵠΔⲆΔⵠᐃⵠ + 63950)) % 2147483647;
		const ΔⵠⲆΔᐃⲆⲆ = ⲆᐃⵠⲆⲆⲆᐃ(ⲆᐃⲆⲆⲆⵠⵠ, ᐃⵠΔⲆΔⵠⵠ, ΔⲆⵠᐃΔⵠⲆ, ⵠⲆᐃΔⵠⲆⲆ, ⵠᐃⵠΔⵠⵠΔ);
		const ΔⲆⵠⵠⲆΔᐃ = ⵠΔΔⲆᐃΔΔ(ⵠⵠΔΔΔΔΔ, ⲆᐃⲆⲆⲆⵠⵠ, ᐃⵠΔⲆΔⵠⵠ, ΔⲆⵠᐃΔⵠⲆ);
		const ᐃⲆΔⵠⲆΔᐃ = ⵠΔⲆΔᐃᐃⲆ(ⵠⲆᐃΔⵠⲆⲆ, ⵠᐃⵠΔⵠⵠΔ, ⵠⵠΔΔΔΔΔ, ⲆᐃⲆⲆⲆⵠⵠ, ᐃⵠΔⲆΔⵠⵠ);
		const ΔⲆᐃᐃᐃΔⵠ = (2147483629 * (62552 + (ΔⵠⲆΔᐃⲆⲆ ^ ΔⲆⵠⵠⲆΔᐃ)) + 2147483587) % 2147483647;
		const ⲆⵠⲆᐃᐃΔⵠ = (12345 + 1103515245 * (36760 + (ΔⲆᐃᐃᐃΔⵠ ^ ᐃⲆΔⵠⲆΔᐃ))) % 2147483648;
		return ⲆⵠⲆᐃᐃΔⵠ
	}

	function ⲆⵠᐃᐃⲆᐃᐃ(ΔⵠⵠᐃⲆⲆΔ, ᐃΔΔΔⲆᐃⵠ, Ⲇᐃᐃⵠⵠⵠⵠ, ⵠⲆⵠⲆⲆⲆΔ) {
		const ⲆⲆⵠⲆⲆΔᐃ = (ΔⵠⵠᐃⲆⲆΔ | 15432) & ~(ΔⵠⵠᐃⲆⲆΔ & 15432);
		const ⵠⵠⵠᐃⲆⵠⵠ = 12315 ^ ᐃΔΔΔⲆᐃⵠ;
		const ᐃᐃᐃᐃⵠΔᐃ = Ⲇᐃᐃⵠⵠⵠⵠ ^ 38714;
		const ⲆᐃΔᐃᐃΔᐃ = 58084 ^ ⵠⲆⵠⲆⲆⲆΔ;
		const ⵠᐃΔⵠⵠᐃᐃ = ΔΔΔᐃΔΔᐃ(ⲆⲆⵠⲆⲆΔᐃ, ⵠⵠⵠᐃⲆⵠⵠ, ᐃᐃᐃᐃⵠΔᐃ, ⲆᐃΔᐃᐃΔᐃ, ⲆⲆⵠⲆⲆΔᐃ, ⵠⵠⵠᐃⲆⵠⵠ);
		const ᐃⵠᐃΔᐃⵠⲆⵠⵠ = ⵠΔΔⲆᐃΔΔ(ᐃᐃᐃᐃⵠΔᐃ, ⲆᐃΔᐃᐃΔᐃ, ⲆⲆⵠⲆⲆΔᐃ, ⵠⵠⵠᐃⲆⵠⵠ);
		const ΔⵠⵠⵠᐃⲆⲆ = ΔⵠⲆⲆᐃⲆᐃ(ᐃᐃᐃᐃⵠΔᐃ, ⲆᐃΔᐃᐃΔᐃ, ⲆⲆⵠⲆⲆΔᐃ, ⵠⵠⵠᐃⲆⵠⵠ, ᐃᐃᐃᐃⵠΔᐃ, ⲆᐃΔᐃᐃΔᐃ);
		const ᐃᐃᐃⲆΔΔΔ = ~(41134 & ⵠᐃΔⵠⵠᐃᐃ) & ⵠᐃΔⵠⵠᐃᐃ | ~(ⵠᐃΔⵠⵠᐃᐃ & 41134) & 41134;
		const ᐃⲆⵠΔⵠᐃⵠ = (214013 * (34681 + (ᐃᐃᐃⲆΔΔΔ ^ ΔⵠⵠⵠᐃⲆⲆ)) + 2531011) % 4294967296;
		return ᐃⲆⵠΔⵠᐃⵠ
	}

	function ⵠⵠⲆᐃᐃⵠᐃ(ⲆΔΔⵠⲆᐃⲆ, ᐃᐃⵠⲆⵠⵠΔ, ΔᐃⲆᐃⵠᐃᐃ) {
		const ⵠΔⵠⵠΔⵠΔ = ((5294 + ⲆΔΔⵠⲆᐃⲆ) * 1664525 + 1013904223) % 4294967296;
		const ᐃⲆⵠΔⲆΔⵠ = (ᐃᐃⵠⲆⵠⵠΔ | 55665) & ~(55665 & ᐃᐃⵠⲆⵠⵠΔ);
		const ⵠⵠⲆⲆᐃᐃᐃ = (ΔᐃⲆᐃⵠᐃᐃ + 54633) % 65404;
		const ⵠⵠᐃⵠᐃᐃᐃ = ⵠⲆⲆⲆⲆⵠⲆ(ⵠΔⵠⵠΔⵠΔ, ᐃⲆⵠΔⲆΔⵠ, ⵠⵠⲆⲆᐃᐃᐃ, ⵠΔⵠⵠΔⵠΔ, ᐃⲆⵠΔⲆΔⵠ);
		const ᐃᐃⲆⲆΔⲆⲆⲆΔ = ΔᐃⵠᐃᐃⲆᐃ(ⵠⵠⲆⲆᐃᐃᐃ, ⵠΔⵠⵠΔⵠΔ, ᐃⲆⵠΔⲆΔⵠ, ⵠⵠⲆⲆᐃᐃᐃ, ⵠΔⵠⵠΔⵠΔ, ᐃⲆⵠΔⲆΔⵠ);
		const ⵠᐃⵠᐃΔᐃΔᐃΔ = ⵠΔΔⲆᐃΔΔ(ⵠⵠⲆⲆᐃᐃᐃ, ⵠΔⵠⵠΔⵠΔ, ᐃⲆⵠΔⲆΔⵠ, ⵠⵠⲆⲆᐃᐃᐃ);
		const ᐃΔᐃⵠⵠⵠⵠ = ~(43875 & ⵠⵠᐃⵠᐃᐃᐃ) & (43875 | ⵠⵠᐃⵠᐃᐃᐃ);
		const ⲆΔΔΔᐃΔᐃ = ᐃΔᐃⵠⵠⵠⵠ ^ 15116;
		return ⲆΔΔΔᐃΔᐃ
	}
	const ⲆⲆⵠΔ = ⵠΔⵠᐃ;

	function ΔⵠⲆⲆᐃⲆᐃ(ⵠⲆⲆᐃᐃΔⲆ, ᐃΔⲆᐃᐃᐃⲆ, ΔᐃⵠᐃⲆΔΔ, ᐃᐃᐃⵠⵠⲆᐃ, ᐃΔⵠᐃᐃⲆⲆ, ⵠᐃⵠΔⵠⵠⲆ) {
		const ᐃⲆᐃΔⲆΔΔ = ⵠⲆⲆᐃᐃΔⲆ ^ 23409;
		const ⲆⵠⵠⵠⲆⲆΔ = ᐃΔⲆᐃᐃᐃⲆ ^ 26380;
		const ΔᐃΔⲆᐃⲆⵠ = ΔᐃⵠᐃⲆΔΔ ^ 53590;
		const ⵠⵠᐃΔⲆⲆⲆ = 36633 ^ ᐃᐃᐃⵠⵠⲆᐃ;
		const ΔⵠⲆⲆΔᐃΔ = ((ᐃΔⵠᐃᐃⲆⲆ + 33017) * 1103515245 + 12345) % 2147483648;
		const ᐃΔᐃⲆⵠᐃⵠ = 42490 ^ ⵠᐃⵠΔⵠⵠⲆ;
		const ᐃⵠⲆΔᐃᐃⵠ = ᐃⵠⲆⲆⵠ(ᐃⲆᐃΔⲆΔΔ, ⲆⵠⵠⵠⲆⲆΔ, ΔᐃΔⲆᐃⲆⵠ, ⵠⵠᐃΔⲆⲆⲆ);
		const ⲆⲆⲆⵠⲆᐃΔ = ᐃⵠⲆⲆⵠ(ΔⵠⲆⲆΔᐃΔ, ᐃΔᐃⲆⵠᐃⵠ, ᐃⲆᐃΔⲆΔΔ, ⲆⵠⵠⵠⲆⲆΔ);
		const ᐃΔᐃⵠᐃΔⲆ = ((19056 + (ᐃⵠⲆΔᐃᐃⵠ ^ ⲆⲆⲆⵠⲆᐃΔ)) * 22695477 + 1) % 4294967296;
		return ᐃΔᐃⵠᐃΔⲆ
	}
	const ⲆΔⵠᐃⲆ = ᐃⵠⲆᐃⵠ;
	const ⲆⲆΔΔ = ᐃΔᐃΔ;
	const ᐃⵠⲆΔⲆ = ᐃⲆⵠΔᐃ;

	function ⵠᐃⵠⲆᐃᐃᐃ(ⵠⵠΔᐃⵠⲆΔ, ᐃⲆᐃⲆⲆⵠΔ) {
		const ⲆⲆⲆΔΔΔⵠ = (2531011 + 214013 * (ⵠⵠΔᐃⵠⲆΔ + 62874)) % 4294967296;
		const Ⲇⵠⵠᐃᐃⵠᐃ = (24 << (ᐃⲆᐃⲆⲆⵠΔ >> 24 & 255)) + (16 << (ᐃⲆᐃⲆⲆⵠΔ >> 32 & 255)) + (8 << (ᐃⲆᐃⲆⲆⵠΔ >> 8 & 255)) + (32 << (ᐃⲆᐃⲆⲆⵠΔ >> ⵠΔⵠᐃⵠ & 255));
		const ᐃⵠⵠⲆⲆᐃⲆ = ΔⵠⲆⲆᐃⲆᐃ(ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ, ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ, ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ);
		const ΔⲆᐃΔΔⵠᐃ = ΔⵠⲆⲆᐃⲆᐃ(ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ, ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ, ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ);
		const ⵠᐃⲆⵠⲆᐃᐃΔⵠ = ᐃⵠⲆⲆⵠ(ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ, ⲆⲆⲆΔΔΔⵠ, Ⲇⵠⵠᐃᐃⵠᐃ);
		const ᐃΔⵠⲆⲆⲆᐃ = (16 << ((ᐃⵠⵠⲆⲆᐃⲆ ^ ΔⲆᐃΔΔⵠᐃ) >> 32 & 255)) + (8 << ((ᐃⵠⵠⲆⲆᐃⲆ ^ ΔⲆᐃΔΔⵠᐃ) >> 24 & 255)) + (24 << ((ᐃⵠⵠⲆⲆᐃⲆ ^ ΔⲆᐃΔΔⵠᐃ) >> 16 & 255)) + (32 << ((ᐃⵠⵠⲆⲆᐃⲆ ^ ΔⲆᐃΔΔⵠᐃ) >> 8 & 255));
		const ΔⵠᐃⲆⵠⲆⵠ = ~(ᐃΔⵠⲆⲆⲆᐃ & 55949) & 55949 | ~(55949 & ᐃΔⵠⲆⲆⲆᐃ) & ᐃΔⵠⲆⲆⲆᐃ;
		return ΔⵠᐃⲆⵠⲆⵠ
	}

	function ΔᐃⵠᐃᐃⲆᐃ(ⵠⵠⲆⲆΔⵠⵠ, ⲆⵠⲆⵠⵠⲆⵠ, ⵠⲆΔⵠᐃⵠⲆ, ⵠⵠⵠⲆΔΔⵠ, ᐃΔⵠΔⵠΔⵠ, ΔⵠΔⲆⲆΔⵠ) {
		const ⵠⲆΔⵠΔⵠⵠ = (2531011 + 214013 * (ⵠⵠⲆⲆΔⵠⵠ + 16955)) % 4294967296;
		const ΔⵠΔⵠᐃᐃⲆ = (1103515245 * (9436 + ⲆⵠⲆⵠⵠⲆⵠ) + 12345) % 2147483648;
		const ᐃᐃⲆᐃΔΔⵠ = (14774 | ⵠⲆΔⵠᐃⵠⲆ) & ~(14774 & ⵠⲆΔⵠᐃⵠⲆ);
		const ΔⵠΔΔᐃⲆᐃ = (48802 | ⵠⵠⵠⲆΔΔⵠ) & ~(ⵠⵠⵠⲆΔΔⵠ & 48802);
		const ⵠᐃⲆⲆⵠⵠᐃ = ~(ᐃΔⵠΔⵠΔⵠ & 24998) & (ᐃΔⵠΔⵠΔⵠ | 24998);
		const ⵠΔᐃᐃΔᐃⲆ = (ⲆⲆᐃᐃᐃ << (ΔⵠΔⲆⲆΔⵠ >> 8 & 255)) + (16 << (ΔⵠΔⲆⲆΔⵠ >> 16 & 255)) + (32 << (ΔⵠΔⲆⲆΔⵠ >> 32 & 255)) + (24 << (ΔⵠΔⲆⲆΔⵠ >> 24 & 255));
		const ΔⵠⵠⵠⲆΔⵠ = ᐃΔΔΔⵠⲆⲆ(ⵠⲆΔⵠΔⵠⵠ, ΔⵠΔⵠᐃᐃⲆ, ᐃᐃⲆᐃΔΔⵠ, ΔⵠΔΔᐃⲆᐃ);
		const ⵠⲆᐃᐃⵠΔΔ = ⵠΔΔⲆⲆᐃⵠ(ⵠᐃⲆⲆⵠⵠᐃ, ⵠΔᐃᐃΔᐃⲆ, ⵠⲆΔⵠΔⵠⵠ, ΔⵠΔⵠᐃᐃⲆ, ᐃᐃⲆᐃΔΔⵠ);
		const ΔᐃᐃⲆⵠⵠᐃ = ᐃΔΔΔⵠⲆⲆ(ΔⵠΔΔᐃⲆᐃ, ⵠᐃⲆⲆⵠⵠᐃ, ⵠΔᐃᐃΔᐃⲆ, ⵠⲆΔⵠΔⵠⵠ);
		const ᐃⵠΔᐃⵠⵠⲆ = (24 << ((ΔⵠⵠⵠⲆΔⵠ ^ ⵠⲆᐃᐃⵠΔΔ) >> 24 & 255)) + (8 << ((ΔⵠⵠⵠⲆΔⵠ ^ ⵠⲆᐃᐃⵠΔΔ) >> 32 & 255)) + (16 << ((ΔⵠⵠⵠⲆΔⵠ ^ ⵠⲆᐃᐃⵠΔΔ) >> 8 & 255)) + (32 << ((ΔⵠⵠⵠⲆΔⵠ ^ ⵠⲆᐃᐃⵠΔΔ) >> 16 & 255));
		const ᐃΔΔΔΔᐃⵠ = (((ᐃⵠΔᐃⵠⵠⲆ ^ ΔᐃᐃⲆⵠⵠᐃ) + 35404) * 214013 + 2531011) % 4294967296;
		return ᐃΔΔΔΔᐃⵠ
	}

	function ΔⲆⲆⲆᐃⵠᐃ(ⲆⵠΔΔᐃᐃⲆ, ᐃᐃΔᐃⲆᐃⲆ, ⵠᐃⵠᐃᐃᐃⲆ, ⵠΔⲆⵠⵠΔᐃ, ᐃⲆΔⲆΔΔⵠ, ⲆᐃⵠⲆᐃⵠᐃ) {
		const ᐃⲆΔΔΔᐃⵠ = 30142 ^ ⲆⵠΔΔᐃᐃⲆ;
		const ⲆΔΔⲆᐃⵠⵠ = (ᐃᐃΔᐃⲆᐃⲆ + 63025) % 65493;
		const ΔⲆⵠΔⲆᐃⵠ = ⵠᐃⵠᐃᐃᐃⲆ ^ 30777;
		const ᐃⵠΔⵠⲆⵠⲆ = ((45939 + ⵠΔⲆⵠⵠΔᐃ) * 22695477 + 1) % 4294967296;
		const ⲆΔΔΔᐃᐃΔ = (8 << (ᐃⲆΔⲆΔΔⵠ >> 16 & ΔΔᐃᐃΔΔⵠ)) + (32 << (ᐃⲆΔⲆΔΔⵠ >> 24 & 255)) + (24 << (ᐃⲆΔⲆΔΔⵠ >> 32 & 255)) + (16 << (ᐃⲆΔⲆΔΔⵠ >> ⲆⲆᐃᐃᐃ & ᐃᐃᐃΔᐃ));
		const ⵠⵠᐃⵠⲆᐃⵠ = (ⲆᐃⵠⲆᐃⵠᐃ | 45652) & ~(ⲆᐃⵠⲆᐃⵠᐃ & 45652);
		const ⲆΔⲆΔᐃⲆⵠ = ᐃⵠⵠᐃΔΔⲆ(ᐃⲆΔΔΔᐃⵠ, ⲆΔΔⲆᐃⵠⵠ, ΔⲆⵠΔⲆᐃⵠ, ᐃⵠΔⵠⲆⵠⲆ, ⲆΔΔΔᐃᐃΔ);
		const ⲆᐃⵠᐃⲆⵠⲆⲆΔ = ⵠⲆⲆⲆⲆⵠⲆ(ⵠⵠᐃⵠⲆᐃⵠ, ᐃⲆΔΔΔᐃⵠ, ⲆΔΔⲆᐃⵠⵠ, ΔⲆⵠΔⲆᐃⵠ, ᐃⵠΔⵠⲆⵠⲆ);
		const ᐃⵠΔⵠᐃⵠⲆᐃΔ = ΔⲆⲆᐃⵠΔⲆ(ⲆΔΔΔᐃᐃΔ, ⵠⵠᐃⵠⲆᐃⵠ, ᐃⲆΔΔΔᐃⵠ, ⲆΔΔⲆᐃⵠⵠ, ΔⲆⵠΔⲆᐃⵠ, ᐃⵠΔⵠⲆⵠⲆ);
		const ⲆⲆⲆⵠΔᐃⵠ = 46918 ^ ⲆΔⲆΔᐃⲆⵠ;
		const ⵠΔⵠⲆⲆΔⲆ = ⲆⲆⲆⵠΔᐃⵠ ^ 24022;
		return ⵠΔⵠⲆⲆΔⲆ
	}

	function ΔⲆⲆᐃⵠΔⲆ(ΔΔΔⵠⲆᐃⵠ, ᐃΔⲆᐃⵠΔᐃ, ΔⲆⵠΔⵠᐃⲆ, ΔⲆⵠⲆΔᐃⵠ, ΔᐃᐃΔᐃᐃⵠ, ⵠⵠⵠⲆᐃΔⵠ) {
		const ΔⵠᐃⲆⵠΔᐃ = (24 << (ΔΔΔⵠⲆᐃⵠ >> 24 & 255)) + (32 << (ΔΔΔⵠⲆᐃⵠ >> 16 & 255)) + (16 << (ΔΔΔⵠⲆᐃⵠ >> 8 & 255)) + (ⲆⲆᐃᐃᐃ << (ΔΔΔⵠⲆᐃⵠ >> 32 & 255));
		const ⲆΔᐃⵠⲆⲆᐃ = (41551 | ᐃΔⲆᐃⵠΔᐃ) & ~(ᐃΔⲆᐃⵠΔᐃ & 41551);
		const ⲆΔᐃⵠⵠΔΔ = (24 << (ΔⲆⵠΔⵠᐃⲆ >> 24 & ᐃᐃᐃΔᐃ)) + (16 << (ΔⲆⵠΔⵠᐃⲆ >> 32 & 255)) + (ⲆⲆᐃᐃᐃ << (ΔⲆⵠΔⵠᐃⲆ >> ⲆⲆⵠᐃⲆ & 255)) + (32 << (ΔⲆⵠΔⵠᐃⲆ >> 8 & 255));
		const ᐃᐃⵠⲆⲆΔᐃ = ~(32641 & ΔⲆⵠⲆΔᐃⵠ) & (32641 | ΔⲆⵠⲆΔᐃⵠ);
		const ᐃΔᐃⲆⵠΔΔ = ((ΔᐃᐃΔᐃᐃⵠ + 35582) * 214013 + 2531011) % 4294967296;
		const ΔᐃⵠΔⵠΔⵠ = ~(1090 & ⵠⵠⵠⲆᐃΔⵠ) & (ⵠⵠⵠⲆᐃΔⵠ | 1090);
		const ⲆⲆΔᐃⵠⵠⲆ = ⵠⲆⲆⲆΔⵠⵠ(ΔⵠᐃⲆⵠΔᐃ, ⲆΔᐃⵠⲆⲆᐃ, ⲆΔᐃⵠⵠΔΔ, ᐃᐃⵠⲆⲆΔᐃ, ᐃΔᐃⲆⵠΔΔ, ΔᐃⵠΔⵠΔⵠ);
		const ΔⵠᐃⵠⲆⲆⵠⵠᐃ = ΔΔᐃΔⲆΔⵠ(ΔⵠᐃⲆⵠΔᐃ, ⲆΔᐃⵠⲆⲆᐃ, ⲆΔᐃⵠⵠΔΔ, ᐃᐃⵠⲆⲆΔᐃ, ᐃΔᐃⲆⵠΔΔ);
		const ⵠⵠΔⵠᐃⵠⵠⲆᐃ = ᐃⵠⲆⲆⵠ(ΔᐃⵠΔⵠΔⵠ, ΔⵠᐃⲆⵠΔᐃ, ⲆΔᐃⵠⲆⲆᐃ, ⲆΔᐃⵠⵠΔΔ);
		const Δⵠⵠᐃⵠⵠⵠ = ~(ⲆⲆΔᐃⵠⵠⲆ & 8077) & 8077 | ~(8077 & ⲆⲆΔᐃⵠⵠⲆ) & ⲆⲆΔᐃⵠⵠⲆ;
		const ᐃⵠⲆⲆⵠⲆⲆ = ~(3708 & Δⵠⵠᐃⵠⵠⵠ) & (Δⵠⵠᐃⵠⵠⵠ | 3708);
		return ᐃⵠⲆⲆⵠⲆⲆ
	}

	function ΔⲆⵠⲆᐃⲆⲆ(ⵠⲆᐃⵠⲆⲆⲆ, ⲆΔⵠΔⲆΔΔ, ⵠΔⵠⲆᐃⲆᐃ, ΔΔⵠΔⵠᐃᐃ, ⵠⵠᐃⲆⵠⲆⲆ) {
		const ⲆΔᐃⵠⲆᐃΔ = ((9716 + ⵠⲆᐃⵠⲆⲆⲆ) * 1664525 + 1013904223) % 4294967296;
		const ΔᐃⵠᐃⵠⵠⲆ = ~(ⲆΔⵠΔⲆΔΔ & 7703) & ⲆΔⵠΔⲆΔΔ | ~(ⲆΔⵠΔⲆΔΔ & 7703) & 7703;
		const ⲆⲆΔⲆΔⵠΔ = (ⵠΔⵠⲆᐃⲆᐃ | 31275) & ~(31275 & ⵠΔⵠⲆᐃⲆᐃ);
		const ΔⲆⲆᐃⵠⲆⵠ = ~(25693 & ΔΔⵠΔⵠᐃᐃ) & 25693 | ~(25693 & ΔΔⵠΔⵠᐃᐃ) & ΔΔⵠΔⵠᐃᐃ;
		const ⲆⲆⵠⲆΔⲆΔ = (8 << (ⵠⵠᐃⲆⵠⲆⲆ >> ΔⲆᐃᐃᐃ & 255)) + (32 << (ⵠⵠᐃⲆⵠⲆⲆ >> 24 & 255)) + (24 << (ⵠⵠᐃⲆⵠⲆⲆ >> 16 & 255)) + (16 << (ⵠⵠᐃⲆⵠⲆⲆ >> 32 & 255));
		const ΔⵠⲆᐃⵠᐃΔ = ΔⵠⲆⲆᐃⲆᐃ(ⲆΔᐃⵠⲆᐃΔ, ΔᐃⵠᐃⵠⵠⲆ, ⲆⲆΔⲆΔⵠΔ, ΔⲆⲆᐃⵠⲆⵠ, ⲆⲆⵠⲆΔⲆΔ, ⲆΔᐃⵠⲆᐃΔ);
		const ᐃⵠⵠΔᐃΔⲆ = ᐃⵠⲆⲆⵠ(ΔᐃⵠᐃⵠⵠⲆ, ⲆⲆΔⲆΔⵠΔ, ΔⲆⲆᐃⵠⲆⵠ, ⲆⲆⵠⲆΔⲆΔ);
		const ⲆᐃᐃⲆⵠⲆⵠᐃⲆ = ⲆⲆⵠΔᐃᐃᐃ(ⲆΔᐃⵠⲆᐃΔ, ΔᐃⵠᐃⵠⵠⲆ, ⲆⲆΔⲆΔⵠΔ);
		const ⵠⵠⲆΔⲆⵠⲆ = (24 << ((ΔⵠⲆᐃⵠᐃΔ ^ ᐃⵠⵠΔᐃΔⲆ) >> 16 & 255)) + (8 << ((ΔⵠⲆᐃⵠᐃΔ ^ ᐃⵠⵠΔᐃΔⲆ) >> 8 & 255)) + (32 << ((ΔⵠⲆᐃⵠᐃΔ ^ ᐃⵠⵠΔᐃΔⲆ) >> 24 & 255)) + (16 << ((ΔⵠⲆᐃⵠᐃΔ ^ ᐃⵠⵠΔᐃΔⲆ) >> 32 & 255));
		const ΔΔΔΔⲆΔⲆ = ⵠⵠⲆΔⲆⵠⲆ ^ 31710;
		return ΔΔΔΔⲆΔⲆ
	}

	function ⲆΔⲆΔᐃⵠⵠ(ⵠΔᐃⵠⲆ) {
		return ⲆΔΔⲆᐃⵠⲆ(ⵠΔᐃⵠⲆ, 8260, 46947, 8004, 37330, 5330)
	}
	const ᐃᐃⲆⵠⵠⲆᐃ = Δⵠᐃⵠⵠ;
	const ΔⵠΔⵠⵠ = ᐃΔⵠΔᐃ;

	function ⵠⲆⵠΔⲆᐃⲆ(ⵠᐃΔΔⲆⵠΔ, ΔⲆⵠⵠⲆⵠⵠ, ΔᐃⵠⲆᐃⵠⵠ, ⵠⵠⵠⵠᐃⲆⵠ, ⵠⲆΔᐃⲆⲆⵠ) {
		const ⵠⵠⵠᐃⲆΔⵠ = 64570 ^ ⵠᐃΔΔⲆⵠΔ;
		const ⵠᐃⵠⵠΔⲆΔ = (2531011 + 214013 * (ΔⲆⵠⵠⲆⵠⵠ + 41768)) % 4294967296;
		const ᐃⵠⵠⵠⲆΔⲆ = (1013904223 + (ΔᐃⵠⲆᐃⵠⵠ + 43923) * 1664525) % 4294967296;
		const ⵠΔⵠⵠΔⲆΔ = (16 << (ⵠⵠⵠⵠᐃⲆⵠ >> 32 & 255)) + (ΔⲆᐃᐃᐃ << (ⵠⵠⵠⵠᐃⲆⵠ >> 24 & 255)) + (32 << (ⵠⵠⵠⵠᐃⲆⵠ >> 16 & 255)) + (24 << (ⵠⵠⵠⵠᐃⲆⵠ >> 8 & 255));
		const ΔⵠⲆᐃⵠⵠⲆ = (ⵠⲆΔᐃⲆⲆⵠ | 21896) & ~(ⵠⲆΔᐃⲆⲆⵠ & 21896);
		const ᐃΔᐃᐃΔⲆⵠ = ΔᐃΔⲆⲆⲆⲆ(ⵠⵠⵠᐃⲆΔⵠ, ⵠᐃⵠⵠΔⲆΔ);
		const ᐃΔΔⵠᐃⵠⵠⲆⵠ = ⲆⵠᐃᐃⲆᐃᐃ(ᐃⵠⵠⵠⲆΔⲆ, ⵠΔⵠⵠΔⲆΔ, ΔⵠⲆᐃⵠⵠⲆ, ⵠⵠⵠᐃⲆΔⵠ);
		const ⵠⵠΔΔᐃⵠⵠ = ⵠⲆᐃᐃΔᐃᐃ(ⵠᐃⵠⵠΔⲆΔ, ᐃⵠⵠⵠⲆΔⲆ, ⵠΔⵠⵠΔⲆΔ, ΔⵠⲆᐃⵠⵠⲆ, ⵠⵠⵠᐃⲆΔⵠ);
		const ᐃᐃⵠⵠⲆΔⵠ = ~(52206 & ᐃΔᐃᐃΔⲆⵠ) & (ᐃΔᐃᐃΔⲆⵠ | 52206);
		const ΔᐃⵠΔᐃⲆᐃ = (12345 + (7491 + (ᐃᐃⵠⵠⲆΔⵠ ^ ⵠⵠΔΔᐃⵠⵠ)) * 1103515245) % 2147483648;
		return ΔᐃⵠΔᐃⲆᐃ
	}

	function ⵠΔⲆΔᐃᐃⲆ(ΔΔΔΔⲆⵠᐃ, ⲆⵠⵠᐃⲆⲆⲆ, ⲆⲆᐃᐃΔᐃⲆ, ᐃᐃᐃⵠᐃⵠⵠ, ⵠⵠᐃᐃⵠᐃⵠ) {
		const ⵠⲆᐃΔᐃⲆⲆ = (2147483587 + 2147483629 * (ΔΔΔΔⲆⵠᐃ + 64762)) % 2147483647;
		const ⲆΔⵠⲆⲆⵠⲆ = (214013 * (18197 + ⲆⵠⵠᐃⲆⲆⲆ) + 2531011) % 4294967296;
		const ᐃΔᐃΔⵠᐃᐃ = (2531011 + (22845 + ⲆⲆᐃᐃΔᐃⲆ) * 214013) % 4294967296;
		const ⵠᐃⵠᐃⵠⵠⲆ = (32 << (ᐃᐃᐃⵠᐃⵠⵠ >> 16 & ΔΔᐃΔⵠᐃⵠ)) + (16 << (ᐃᐃᐃⵠᐃⵠⵠ >> 8 & 255)) + (8 << (ᐃᐃᐃⵠᐃⵠⵠ >> 32 & 255)) + (24 << (ᐃᐃᐃⵠᐃⵠⵠ >> 24 & ⵠᐃᐃⵠⲆ));
		const ⲆⲆⵠⵠΔᐃⲆ = ~(ⵠⵠᐃᐃⵠᐃⵠ & 11999) & ⵠⵠᐃᐃⵠᐃⵠ | ~(ⵠⵠᐃᐃⵠᐃⵠ & 11999) & 11999;
		const ⲆⲆⲆΔⲆⲆⵠ = ΔⵠⲆⲆᐃⲆᐃ(ⵠⲆᐃΔᐃⲆⲆ, ⲆΔⵠⲆⲆⵠⲆ, ᐃΔᐃΔⵠᐃᐃ, ⵠᐃⵠᐃⵠⵠⲆ, ⲆⲆⵠⵠΔᐃⲆ, ⵠⲆᐃΔᐃⲆⲆ);
		const ᐃⲆΔⲆⲆⵠⲆ = ΔⲆⲆᐃⵠΔⲆ(ⲆΔⵠⲆⲆⵠⲆ, ᐃΔᐃΔⵠᐃᐃ, ⵠᐃⵠᐃⵠⵠⲆ, ⲆⲆⵠⵠΔᐃⲆ, ⵠⲆᐃΔᐃⲆⲆ, ⲆΔⵠⲆⲆⵠⲆ);
		const ΔΔⵠⲆⲆⵠΔⲆΔ = ᐃⵠⲆⲆⵠ(ᐃΔᐃΔⵠᐃᐃ, ⵠᐃⵠᐃⵠⵠⲆ, ⲆⲆⵠⵠΔᐃⲆ, ⵠⲆᐃΔᐃⲆⲆ);
		const ⵠᐃⲆⵠⵠⵠΔ = (8 << ((ⲆⲆⲆΔⲆⲆⵠ ^ ᐃⲆΔⲆⲆⵠⲆ) >> 24 & 255)) + (16 << ((ⲆⲆⲆΔⲆⲆⵠ ^ ᐃⲆΔⲆⲆⵠⲆ) >> 16 & 255)) + (24 << ((ⲆⲆⲆΔⲆⲆⵠ ^ ᐃⲆΔⲆⲆⵠⲆ) >> ΔⲆᐃⵠᐃ & 255)) + (32 << ((ⲆⲆⲆΔⲆⲆⵠ ^ ᐃⲆΔⲆⲆⵠⲆ) >> 32 & 255));
		const ⲆⵠⵠᐃΔⵠⲆ = ⵠᐃⲆⵠⵠⵠΔ ^ 35444;
		return ⲆⵠⵠᐃΔⵠⲆ
	}
	const ⵠⲆⲆ = ΔⲆᐃ;
	const ⲆΔⵠᐃ = Δᐃⵠⵠ;

	function Δᐃᐃᐃᐃⵠⵠ(ⵠΔⲆΔΔᐃᐃ, ⵠⲆⵠΔᐃᐃⲆ, ⲆⲆⵠᐃᐃΔΔ, ᐃᐃΔⵠΔⵠⲆ) {
		const ⲆⲆⲆΔⲆΔΔ = (32 << (ⵠΔⲆΔΔᐃᐃ >> 32 & 255)) + (16 << (ⵠΔⲆΔΔᐃᐃ >> 16 & 255)) + (24 << (ⵠΔⲆΔΔᐃᐃ >> 24 & 255)) + (8 << (ⵠΔⲆΔΔᐃᐃ >> 8 & 255));
		const ΔᐃΔⲆⵠⵠⵠ = (1 + 22695477 * (50595 + ⵠⲆⵠΔᐃᐃⲆ)) % 4294967296;
		const ΔⲆⲆΔⲆΔⲆ = ~(40066 & ⲆⲆⵠᐃᐃΔΔ) & ⲆⲆⵠᐃᐃΔΔ | ~(ⲆⲆⵠᐃᐃΔΔ & 40066) & 40066;
		const ⲆΔᐃΔᐃⲆΔ = 18768 ^ ᐃᐃΔⵠΔⵠⲆ;
		const ⲆΔⲆᐃⵠΔⲆ = ᐃⵠⵠᐃΔΔⲆ(ⲆⲆⲆΔⲆΔΔ, ΔᐃΔⲆⵠⵠⵠ, ΔⲆⲆΔⲆΔⲆ, ⲆΔᐃΔᐃⲆΔ, ⲆⲆⲆΔⲆΔΔ);
		const ᐃΔΔᐃⲆⲆⵠ = ΔⲆⲆⲆⲆⵠΔ(ΔᐃΔⲆⵠⵠⵠ, ΔⲆⲆΔⲆΔⲆ, ⲆΔᐃΔᐃⲆΔ, ⲆⲆⲆΔⲆΔΔ, ΔᐃΔⲆⵠⵠⵠ);
		const ΔⵠᐃⵠⲆΔⲆ = ⵠᐃⵠⲆᐃᐃᐃ(ΔⲆⲆΔⲆΔⲆ, ⲆΔᐃΔᐃⲆΔ);
		const ⵠⵠⲆᐃᐃᐃᐃ = (2531011 + 214013 * ((ⲆΔⲆᐃⵠΔⲆ ^ ᐃΔΔᐃⲆⲆⵠ) + 35287)) % 4294967296;
		const ⵠΔⵠⲆΔⲆΔ = (1664525 * ((ⵠⵠⲆᐃᐃᐃᐃ ^ ΔⵠᐃⵠⲆΔⲆ) + 16767) + 1013904223) % 4294967296;
		return ⵠΔⵠⲆΔⲆΔ
	}

	function ⵠΔΔⲆᐃΔΔ(ΔⵠΔΔᐃΔⲆ, ⲆⵠΔⲆⲆΔⲆ, ⲆⵠⲆᐃΔⵠΔ, ⲆⲆΔΔᐃⲆⵠ) {
		const ΔᐃⵠⵠΔᐃᐃ = (2147483587 + 2147483629 * (37418 + ΔⵠΔΔᐃΔⲆ)) % 2147483647;
		const ⵠΔⵠⲆⲆᐃⵠ = ⲆⵠΔⲆⲆΔⲆ ^ 57623;
		const ⵠⲆΔⵠᐃⲆⲆ = ~(ⲆⵠⲆᐃΔⵠΔ & 40280) & ⲆⵠⲆᐃΔⵠΔ | ~(ⲆⵠⲆᐃΔⵠΔ & 40280) & 40280;
		const ᐃΔⵠᐃΔᐃᐃ = ~(ⲆⲆΔΔᐃⲆⵠ & 24601) & ⲆⲆΔΔᐃⲆⵠ | ~(ⲆⲆΔΔᐃⲆⵠ & 24601) & 24601;
		const ΔⵠᐃⲆΔᐃⵠ = ΔᐃⵠⵠⲆΔᐃ(ΔᐃⵠⵠΔᐃᐃ, ⵠΔⵠⲆⲆᐃⵠ);
		const ΔⲆΔⵠΔᐃᐃⵠⵠ = ΔᐃⵠⵠⲆΔᐃ(ⵠⲆΔⵠᐃⲆⲆ, ᐃΔⵠᐃΔᐃᐃ);
		const ᐃⲆⵠⵠⲆᐃⵠᐃΔ = ⲆΔΔᐃᐃⲆⲆ(ΔᐃⵠⵠΔᐃᐃ, ⵠΔⵠⲆⲆᐃⵠ, ⵠⲆΔⵠᐃⲆⲆ, ᐃΔⵠᐃΔᐃᐃ, ΔᐃⵠⵠΔᐃᐃ);
		const ᐃⵠⵠⲆⲆⲆΔ = ~(43902 & ΔⵠᐃⲆΔᐃⵠ) & 43902 | ~(43902 & ΔⵠᐃⲆΔᐃⵠ) & ΔⵠᐃⲆΔᐃⵠ;
		const ΔⵠⲆⲆⲆⲆΔ = (8862 | ᐃⵠⵠⲆⲆⲆΔ) & ~(8862 & ᐃⵠⵠⲆⲆⲆΔ);
		return ΔⵠⲆⲆⲆⲆΔ
	}
	const ᐃⲆΔΔᐃ = ΔᐃⵠΔⵠ;

	function ᐃᐃΔᐃⵠΔᐃ(ⲆⵠⲆᐃᐃⵠⲆ, ᐃΔᐃⵠⲆΔⲆ, ᐃᐃⲆⵠᐃΔᐃ) {
		const ΔⲆⲆΔᐃᐃΔ = (12345 + 1103515245 * (39051 + ⲆⵠⲆᐃᐃⵠⲆ)) % 2147483648;
		const ᐃΔⲆᐃⲆⲆΔ = (44117 | ᐃΔᐃⵠⲆΔⲆ) & ~(ᐃΔᐃⵠⲆΔⲆ & 44117);
		const ⲆⲆΔⵠΔΔⲆ = (24 << (ᐃᐃⲆⵠᐃΔᐃ >> 24 & 255)) + (8 << (ᐃᐃⲆⵠᐃΔᐃ >> 16 & 255)) + (16 << (ᐃᐃⲆⵠᐃΔᐃ >> 32 & 255)) + (32 << (ᐃᐃⲆⵠᐃΔᐃ >> 8 & 255));
		const ⲆΔᐃᐃΔⲆⵠ = ΔⲆⵠⲆᐃⲆⲆ(ΔⲆⲆΔᐃᐃΔ, ᐃΔⲆᐃⲆⲆΔ, ⲆⲆΔⵠΔΔⲆ, ΔⲆⲆΔᐃᐃΔ, ᐃΔⲆᐃⲆⲆΔ);
		const ⲆⵠΔⲆⲆⵠΔ = ⵠⲆⲆⲆΔⵠⵠ(ⲆⲆΔⵠΔΔⲆ, ΔⲆⲆΔᐃᐃΔ, ᐃΔⲆᐃⲆⲆΔ, ⲆⲆΔⵠΔΔⲆ, ΔⲆⲆΔᐃᐃΔ, ᐃΔⲆᐃⲆⲆΔ);
		const ⲆⵠⲆΔⵠΔΔ = ᐃΔⲆᐃᐃΔᐃ(ⲆⲆΔⵠΔΔⲆ, ΔⲆⲆΔᐃᐃΔ);
		const ⲆᐃᐃᐃΔⵠᐃ = (16 << ((ⲆΔᐃᐃΔⲆⵠ ^ ⲆⵠΔⲆⲆⵠΔ) >> 32 & ΔΔᐃΔⵠᐃⵠ)) + (24 << ((ⲆΔᐃᐃΔⲆⵠ ^ ⲆⵠΔⲆⲆⵠΔ) >> 24 & ᐃΔᐃⲆΔ)) + (32 << ((ⲆΔᐃᐃΔⲆⵠ ^ ⲆⵠΔⲆⲆⵠΔ) >> ⲆⲆᐃᐃᐃ & 255)) + (8 << ((ⲆΔᐃᐃΔⲆⵠ ^ ⲆⵠΔⲆⲆⵠΔ) >> 16 & 255));
		const ⲆⲆΔᐃᐃⵠⲆ = (8 << ((ⲆᐃᐃᐃΔⵠᐃ ^ ⲆⵠⲆΔⵠΔΔ) >> 32 & 255)) + (ⲆⲆⵠᐃⲆ << ((ⲆᐃᐃᐃΔⵠᐃ ^ ⲆⵠⲆΔⵠΔΔ) >> 8 & 255)) + (32 << ((ⲆᐃᐃᐃΔⵠᐃ ^ ⲆⵠⲆΔⵠΔΔ) >> 16 & 255)) + (24 << ((ⲆᐃᐃᐃΔⵠᐃ ^ ⲆⵠⲆΔⵠΔΔ) >> 24 & 255));
		return ⲆⲆΔᐃᐃⵠⲆ
	}
	const ΔⲆⲆᐃ = ᐃⵠΔⲆ;
	const ⵠᐃⲆᐃⵠ = ⲆΔⲆⲆⲆΔᐃ;

	function ᐃⵠⵠᐃΔΔⲆ(ⵠᐃΔᐃᐃᐃⲆ, ⲆΔᐃⵠⲆⲆΔ, ΔΔΔⲆⵠⵠⵠ, ⲆᐃⵠΔΔⲆⵠ, ⵠⵠΔⵠᐃⵠᐃ) {
		const ΔΔΔΔⵠⵠΔ = ⵠᐃΔᐃᐃᐃⲆ ^ 62008;
		const ΔⵠᐃⵠΔⵠΔ = (24 << (ⲆΔᐃⵠⲆⲆΔ >> 32 & 255)) + (8 << (ⲆΔᐃⵠⲆⲆΔ >> 16 & 255)) + (32 << (ⲆΔᐃⵠⲆⲆΔ >> ΔⲆᐃⵠᐃ & ᐃΔᐃⲆΔ)) + (16 << (ⲆΔᐃⵠⲆⲆΔ >> 24 & 255));
		const ᐃⲆᐃⵠⲆⵠΔ = ((ΔΔΔⲆⵠⵠⵠ + 46531) * 22695477 + ΔⲆᐃ) % 4294967296;
		const ⵠⲆᐃΔⲆΔⲆ = ~(ⲆᐃⵠΔΔⲆⵠ & 1884) & 1884 | ~(1884 & ⲆᐃⵠΔΔⲆⵠ) & ⲆᐃⵠΔΔⲆⵠ;
		const ΔⲆⲆᐃⲆⲆᐃ = ~(ⵠⵠΔⵠᐃⵠᐃ & 55588) & 55588 | ~(55588 & ⵠⵠΔⵠᐃⵠᐃ) & ⵠⵠΔⵠᐃⵠᐃ;
		const ΔΔⲆΔⵠⲆΔ = ⵠⲆⲆⲆⲆⵠⲆ(ΔΔΔΔⵠⵠΔ, ΔⵠᐃⵠΔⵠΔ, ᐃⲆᐃⵠⲆⵠΔ, ⵠⲆᐃΔⲆΔⲆ, ΔⲆⲆᐃⲆⲆᐃ);
		const ᐃⲆⵠᐃᐃⲆⵠⵠΔ = ⵠⲆⲆⲆΔⵠⵠ(ΔΔΔΔⵠⵠΔ, ΔⵠᐃⵠΔⵠΔ, ᐃⲆᐃⵠⲆⵠΔ, ⵠⲆᐃΔⲆΔⲆ, ΔⲆⲆᐃⲆⲆᐃ, ΔΔΔΔⵠⵠΔ);
		const ΔᐃⲆᐃᐃᐃⵠ = ⲆΔΔᐃᐃⲆⲆ(ΔⵠᐃⵠΔⵠΔ, ᐃⲆᐃⵠⲆⵠΔ, ⵠⲆᐃΔⲆΔⲆ, ΔⲆⲆᐃⲆⲆᐃ, ΔΔΔΔⵠⵠΔ);
		const ΔᐃᐃΔⵠΔⲆ = ΔΔⲆΔⵠⲆΔ ^ 57467;
		const ΔⲆⵠᐃΔⲆΔ = (1664525 * ((ΔᐃᐃΔⵠΔⲆ ^ ΔᐃⲆᐃᐃᐃⵠ) + 3037) + 1013904223) % 4294967296;
		return ΔⲆⵠᐃΔⲆΔ
	}
	const ⵠΔⲆⲆᐃ = ⵠΔⵠⲆⵠ;
	const ᐃᐃΔⲆⵠ = ᐃⲆⵠᐃᐃ;
	const ⲆⵠⲆᐃᐃ = ⵠᐃⲆᐃⵠ;

	function ΔᐃⵠⵠⲆΔᐃ(ⲆΔⵠΔΔᐃⵠ, ⲆⲆⵠᐃᐃᐃΔ) {
		const ⵠΔᐃⲆΔⵠⵠ = (1664525 * (ⲆΔⵠΔΔᐃⵠ + 44664) + 1013904223) % 4294967296;
		const ⲆⲆΔΔᐃᐃⲆ = ⲆⲆⵠᐃᐃᐃΔ ^ 53080;
		const ΔΔⲆΔⲆⵠⲆ = ⲆᐃⵠⲆⲆⲆᐃ(ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ, ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ, ⵠΔᐃⲆΔⵠⵠ);
		const ΔᐃΔᐃᐃᐃⵠ = ⵠΔΔⲆⲆᐃⵠ(ⲆⲆΔΔᐃᐃⲆ, ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ, ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ);
		const ΔΔⲆⵠᐃΔⲆ = ᐃⵠⲆⲆⵠ(ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ, ⵠΔᐃⲆΔⵠⵠ, ⲆⲆΔΔᐃᐃⲆ);
		const ΔⵠⲆⵠΔⵠⵠ = ((ΔΔⲆΔⲆⵠⲆ ^ ΔᐃΔᐃᐃᐃⵠ) + 17769) % 65357;
		const ΔΔΔⵠΔⵠΔ = (1 + ((ΔⵠⲆⵠΔⵠⵠ ^ ΔΔⲆⵠᐃΔⲆ) + 57525) * 22695477) % 4294967296;
		return ΔΔΔⵠΔⵠΔ
	}
	const ΔΔᐃⲆᐃ = ⵠᐃⲆΔΔ;
	const ΔΔΔⲆⲆ = ΔΔⵠⲆⵠ;

	function ⵠΔΔⲆⲆᐃⵠ(ⵠⵠᐃᐃᐃΔᐃ, ⵠΔΔΔᐃΔⲆ, ⵠⵠΔⲆᐃⵠΔ, ᐃᐃⲆⲆᐃⵠᐃ, ⵠⵠΔⵠⵠᐃᐃ) {
		const ᐃΔⲆⲆⵠⵠⵠ = ~(42203 & ⵠⵠᐃᐃᐃΔᐃ) & ⵠⵠᐃᐃᐃΔᐃ | ~(ⵠⵠᐃᐃᐃΔᐃ & 42203) & 42203;
		const Ⲇⵠⵠᐃᐃⵠⵠ = 50118 ^ ⵠΔΔΔᐃΔⲆ;
		const ⵠⲆᐃⲆⵠΔᐃ = ⵠⵠΔⲆᐃⵠΔ ^ 41620;
		const ΔᐃᐃⵠᐃⲆⲆ = ((ᐃᐃⲆⲆᐃⵠᐃ + 34240) * 2147483629 + 2147483587) % 2147483647;
		const ⵠⲆᐃⲆᐃⵠΔ = (32 << (ⵠⵠΔⵠⵠᐃᐃ >> 16 & 255)) + (16 << (ⵠⵠΔⵠⵠᐃᐃ >> 8 & 255)) + (8 << (ⵠⵠΔⵠⵠᐃᐃ >> 32 & 255)) + (24 << (ⵠⵠΔⵠⵠᐃᐃ >> 24 & 255));
		const ⵠᐃΔⵠⲆᐃⲆ = ⵠⲆⲆⲆΔⵠⵠ(ᐃΔⲆⲆⵠⵠⵠ, Ⲇⵠⵠᐃᐃⵠⵠ, ⵠⲆᐃⲆⵠΔᐃ, ΔᐃᐃⵠᐃⲆⲆ, ⵠⲆᐃⲆᐃⵠΔ, ᐃΔⲆⲆⵠⵠⵠ);
		const ΔᐃᐃⲆΔΔⵠⵠⵠ = ⵠⲆⲆⲆΔⵠⵠ(Ⲇⵠⵠᐃᐃⵠⵠ, ⵠⲆᐃⲆⵠΔᐃ, ΔᐃᐃⵠᐃⲆⲆ, ⵠⲆᐃⲆᐃⵠΔ, ᐃΔⲆⲆⵠⵠⵠ, Ⲇⵠⵠᐃᐃⵠⵠ);
		const ⲆⵠⲆⵠⲆᐃⵠ = ᐃⵠⲆⲆⵠ(ⵠⲆᐃⲆⵠΔᐃ, ΔᐃᐃⵠᐃⲆⲆ, ⵠⲆᐃⲆᐃⵠΔ, ᐃΔⲆⲆⵠⵠⵠ);
		const ᐃᐃⵠΔᐃᐃΔ = (43477 | ⵠᐃΔⵠⲆᐃⲆ) & ~(ⵠᐃΔⵠⲆᐃⲆ & 43477);
		const Ⲇⵠⵠⵠⵠⵠᐃ = (2531011 + ((ᐃᐃⵠΔᐃᐃΔ ^ ⲆⵠⲆⵠⲆᐃⵠ) + 53616) * 214013) % 4294967296;
		return Ⲇⵠⵠⵠⵠⵠᐃ
	}
	const ⵠⵠᐃᐃΔΔΔ = Ⲇᐃᐃᐃⵠᐃⵠ;
	const ΔΔΔⵠᐃⵠⵠ = ⵠᐃᐃⵠⲆ;

	function ⲆᐃⵠⲆⲆⲆᐃ(ᐃᐃⵠΔΔᐃⲆ, ᐃΔΔⲆΔⲆⵠ, ⲆΔᐃΔΔⵠⲆ, ⲆᐃⵠⲆΔⵠⵠ, ⵠᐃⲆΔⵠⲆᐃ) {
		const ᐃΔΔᐃΔⵠⵠ = (ⲆⲆⵠᐃⲆ << (ᐃᐃⵠΔΔᐃⲆ >> 32 & 255)) + (24 << (ᐃᐃⵠΔΔᐃⲆ >> 24 & 255)) + (8 << (ᐃᐃⵠΔΔᐃⲆ >> 8 & 255)) + (32 << (ᐃᐃⵠΔΔᐃⲆ >> 16 & 255));
		const ᐃΔΔⲆⲆⲆΔ = ᐃΔΔⲆΔⲆⵠ ^ 55978;
		const ⲆⲆⵠᐃⲆⲆᐃ = (1664525 * (ⲆΔᐃΔΔⵠⲆ + 2934) + 1013904223) % 4294967296;
		const ⲆΔΔᐃᐃⵠⵠ = ~(ⲆᐃⵠⲆΔⵠⵠ & 30642) & (ⲆᐃⵠⲆΔⵠⵠ | 30642);
		const ᐃᐃⵠᐃᐃⲆⵠ = (8 << (ⵠᐃⲆΔⵠⲆᐃ >> 8 & 255)) + (24 << (ⵠᐃⲆΔⵠⲆᐃ >> 32 & 255)) + (16 << (ⵠᐃⲆΔⵠⲆᐃ >> 24 & 255)) + (32 << (ⵠᐃⲆΔⵠⲆᐃ >> 16 & 255));
		const ⵠⵠⲆᐃᐃᐃΔ = ⵠΔΔⲆⲆᐃⵠ(ᐃΔΔᐃΔⵠⵠ, ᐃΔΔⲆⲆⲆΔ, ⲆⲆⵠᐃⲆⲆᐃ, ⲆΔΔᐃᐃⵠⵠ, ᐃᐃⵠᐃᐃⲆⵠ);
		const ΔΔⵠⵠΔΔⵠ = ⵠΔⲆΔᐃᐃⲆ(ᐃΔΔᐃΔⵠⵠ, ᐃΔΔⲆⲆⲆΔ, ⲆⲆⵠᐃⲆⲆᐃ, ⲆΔΔᐃᐃⵠⵠ, ᐃᐃⵠᐃᐃⲆⵠ);
		const ⵠⲆⲆⲆⵠⵠΔⵠⵠ = ᐃⵠⲆⲆⵠ(ᐃΔΔᐃΔⵠⵠ, ᐃΔΔⲆⲆⲆΔ, ⲆⲆⵠᐃⲆⲆᐃ, ⲆΔΔᐃᐃⵠⵠ);
		const ⵠⲆΔΔᐃⲆⵠ = (16 << ((ⵠⵠⲆᐃᐃᐃΔ ^ ΔΔⵠⵠΔΔⵠ) >> 32 & 255)) + (24 << ((ⵠⵠⲆᐃᐃᐃΔ ^ ΔΔⵠⵠΔΔⵠ) >> ⵠᐃᐃΔⲆ & ᐃΔᐃⲆΔ)) + (8 << ((ⵠⵠⲆᐃᐃᐃΔ ^ ΔΔⵠⵠΔΔⵠ) >> 24 & 255)) + (32 << ((ⵠⵠⲆᐃᐃᐃΔ ^ ΔΔⵠⵠΔΔⵠ) >> 16 & 255));
		const ⵠⲆᐃᐃᐃⲆΔ = ~(23686 & ⵠⲆΔΔᐃⲆⵠ) & (23686 | ⵠⲆΔΔᐃⲆⵠ);
		return ⵠⲆᐃᐃᐃⲆΔ
	}
	const ΔΔⵠⲆΔ = ΔᐃΔⵠⲆ;

	function ⲆΔΔᐃᐃⲆⲆ(ᐃⵠᐃⵠⵠΔⵠ, ΔⵠΔⲆΔⵠⵠ, ᐃᐃᐃⲆⲆΔⵠ, ΔᐃΔⲆΔΔΔ, ⲆⵠΔᐃⲆⲆΔ) {
		const ⵠΔᐃΔⲆΔⲆ = ((ᐃⵠᐃⵠⵠΔⵠ + 49173) * 1103515245 + 12345) % 2147483648;
		const ᐃⲆⲆᐃⲆⲆᐃ = (ΔⵠΔⲆΔⵠⵠ + 52922) % 65337;
		const ⲆΔⵠᐃⲆⲆᐃ = ᐃᐃᐃⲆⲆΔⵠ ^ 25250;
		const ΔⵠᐃΔΔΔᐃ = ~(ΔᐃΔⲆΔΔΔ & 10903) & 10903 | ~(10903 & ΔᐃΔⲆΔΔΔ) & ΔᐃΔⲆΔΔΔ;
		const ⵠΔΔⵠⵠΔⲆ = ~(ⲆⵠΔᐃⲆⲆΔ & 33814) & 33814 | ~(33814 & ⲆⵠΔᐃⲆⲆΔ) & ⲆⵠΔᐃⲆⲆΔ;
		const ⵠⵠⲆΔΔⵠΔ = ΔΔᐃΔⲆΔⵠ(ⵠΔᐃΔⲆΔⲆ, ᐃⲆⲆᐃⲆⲆᐃ, ⲆΔⵠᐃⲆⲆᐃ, ΔⵠᐃΔΔΔᐃ, ⵠΔΔⵠⵠΔⲆ);
		const ΔⲆᐃⲆΔᐃⵠ = ⵠⲆΔⵠⵠⵠⵠ(ⵠΔᐃΔⲆΔⲆ, ᐃⲆⲆᐃⲆⲆᐃ);
		const ⵠΔⵠⵠⵠΔᐃⲆⵠ = ΔΔᐃΔⲆΔⵠ(ⲆΔⵠᐃⲆⲆᐃ, ΔⵠᐃΔΔΔᐃ, ⵠΔΔⵠⵠΔⲆ, ⵠΔᐃΔⲆΔⲆ, ᐃⲆⲆᐃⲆⲆᐃ);
		const ΔⲆⵠᐃᐃΔⲆ = (1 + ((ⵠⵠⲆΔΔⵠΔ ^ ΔⲆᐃⲆΔᐃⵠ) + 19675) * 22695477) % 4294967296;
		const ᐃⲆΔᐃΔΔⵠ = ~(7922 & ΔⲆⵠᐃᐃΔⲆ) & ΔⲆⵠᐃᐃΔⲆ | ~(ΔⲆⵠᐃᐃΔⲆ & 7922) & 7922;
		return ᐃⲆΔᐃΔΔⵠ
	}

	function ⵠⲆΔⵠⵠⵠⵠ(ᐃΔⵠⲆΔΔΔ, ⲆΔⵠΔᐃΔⲆ) {
		const ᐃⵠᐃᐃⵠᐃⵠ = 24508 ^ ᐃΔⵠⲆΔΔΔ;
		const ΔᐃᐃᐃⵠΔΔ = (16 << (ⲆΔⵠΔᐃΔⲆ >> 16 & ΔΔᐃΔⵠᐃⵠ)) + (24 << (ⲆΔⵠΔᐃΔⲆ >> 8 & 255)) + (32 << (ⲆΔⵠΔᐃΔⲆ >> 32 & 255)) + (8 << (ⲆΔⵠΔᐃΔⲆ >> 24 & 255));
		const ⲆΔΔᐃᐃⲆᐃ = ⵠⲆᐃᐃΔᐃᐃ(ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ);
		const ⲆⵠᐃⵠⲆⲆⵠ = ⲆᐃⵠⲆⲆⲆᐃ(ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ);
		const ΔⵠⵠΔΔᐃⵠⵠᐃ = ΔⲆⵠⲆᐃⲆⲆ(ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ, ΔᐃᐃᐃⵠΔΔ, ᐃⵠᐃᐃⵠᐃⵠ);
		const ΔⵠΔⲆΔⲆⵠ = (2147483629 * ((ⲆΔΔᐃᐃⲆᐃ ^ ⲆⵠᐃⵠⲆⲆⵠ) + 11269) + 2147483587) % 2147483647;
		const ᐃⵠⲆⲆᐃΔᐃ = ~(ΔⵠΔⲆΔⲆⵠ & 40927) & 40927 | ~(40927 & ΔⵠΔⲆΔⲆⵠ) & ΔⵠΔⲆΔⲆⵠ;
		return ᐃⵠⲆⲆᐃΔᐃ
	}
	const Δᐃᐃᐃ = ⲆⵠⵠΔ;
	const ⲆⲆⵠᐃⵠⵠⲆ = ΔΔⲆΔΔ;

	function ⲆⲆⵠΔᐃᐃᐃ(ⲆᐃᐃᐃΔⵠⵠ, ᐃⲆΔΔⲆⵠΔ, ᐃΔⲆⵠΔᐃⲆ) {
		const ⵠᐃΔⵠⵠⵠΔ = 23323 ^ ⲆᐃᐃᐃΔⵠⵠ;
		const ᐃⲆᐃⲆΔⲆᐃ = (2531011 + (61713 + ᐃⲆΔΔⲆⵠΔ) * 214013) % 4294967296;
		const ΔⵠᐃΔⲆⲆᐃ = (ᐃΔⲆⵠΔᐃⲆ | 24198) & ~(ᐃΔⲆⵠΔᐃⲆ & 24198);
		const ⲆᐃΔⲆᐃᐃΔ = ⵠⲆᐃᐃΔᐃᐃ(ⵠᐃΔⵠⵠⵠΔ, ᐃⲆᐃⲆΔⲆᐃ, ΔⵠᐃΔⲆⲆᐃ, ⵠᐃΔⵠⵠⵠΔ, ᐃⲆᐃⲆΔⲆᐃ);
		const ᐃⲆᐃᐃᐃΔⲆ = ⵠⲆᐃᐃΔᐃᐃ(ΔⵠᐃΔⲆⲆᐃ, ⵠᐃΔⵠⵠⵠΔ, ᐃⲆᐃⲆΔⲆᐃ, ΔⵠᐃΔⲆⲆᐃ, ⵠᐃΔⵠⵠⵠΔ);
		const ⲆⵠⲆΔⲆΔⵠΔΔ = ⵠⲆᐃᐃΔᐃᐃ(ᐃⲆᐃⲆΔⲆᐃ, ΔⵠᐃΔⲆⲆᐃ, ⵠᐃΔⵠⵠⵠΔ, ᐃⲆᐃⲆΔⲆᐃ, ΔⵠᐃΔⲆⲆᐃ);
		const ᐃΔΔᐃΔΔΔ = (16 << ((ⲆᐃΔⲆᐃᐃΔ ^ ᐃⲆᐃᐃᐃΔⲆ) >> 32 & 255)) + (8 << ((ⲆᐃΔⲆᐃᐃΔ ^ ᐃⲆᐃᐃᐃΔⲆ) >> 8 & 255)) + (24 << ((ⲆᐃΔⲆᐃᐃΔ ^ ᐃⲆᐃᐃᐃΔⲆ) >> 24 & 255)) + (32 << ((ⲆᐃΔⲆᐃᐃΔ ^ ᐃⲆᐃᐃᐃΔⲆ) >> ᐃᐃᐃⲆⲆ & 255));
		const ᐃΔⵠⵠⵠⵠⵠ = ᐃΔΔᐃΔΔΔ ^ 31181;
		return ᐃΔⵠⵠⵠⵠⵠ
	}
	const ⲆΔΔΔᐃ = ΔⲆᐃᐃᐃ;
	const ⲆΔΔⵠΔⲆⵠ = ΔΔⵠⲆΔ;

	function ⵠⲆⲆⲆΔⵠⵠ(ΔΔⲆΔⲆᐃΔ, ⲆᐃᐃΔⵠᐃᐃ, ⵠΔⲆΔⲆᐃⲆ, ⵠⲆⵠᐃⲆⵠⵠ, ᐃᐃⲆᐃΔᐃⲆ, ᐃⲆⵠΔᐃⲆⲆ) {
		const Ⲇⵠⵠᐃᐃᐃⵠ = (ΔΔⲆΔⲆᐃΔ + 52483) % 65496;
		const ⲆⲆᐃⵠⵠΔᐃ = (16 << (ⲆᐃᐃΔⵠᐃᐃ >> 16 & 255)) + (24 << (ⲆᐃᐃΔⵠᐃᐃ >> 8 & ⲆⵠΔΔΔ)) + (32 << (ⲆᐃᐃΔⵠᐃᐃ >> 24 & 255)) + (8 << (ⲆᐃᐃΔⵠᐃᐃ >> 32 & ⵠᐃᐃⵠⲆ));
		const ⵠΔⲆⵠᐃⵠΔ = ⵠΔⲆΔⲆᐃⲆ ^ 8102;
		const ⵠᐃⵠᐃᐃⵠΔ = (24 << (ⵠⲆⵠᐃⲆⵠⵠ >> ᐃᐃᐃⲆⲆ & 255)) + (32 << (ⵠⲆⵠᐃⲆⵠⵠ >> 32 & ΔΔΔⵠᐃⵠⵠ)) + (8 << (ⵠⲆⵠᐃⲆⵠⵠ >> 24 & 255)) + (16 << (ⵠⲆⵠᐃⲆⵠⵠ >> 8 & ᐃΔᐃⲆΔ));
		const ΔᐃⲆⲆΔⵠⲆ = ~(ᐃᐃⲆᐃΔᐃⲆ & 29687) & 29687 | ~(29687 & ᐃᐃⲆᐃΔᐃⲆ) & ᐃᐃⲆᐃΔᐃⲆ;
		const ⵠᐃⵠⵠⲆᐃⵠ = (ⵠⲆⲆ + (62237 + ᐃⲆⵠΔᐃⲆⲆ) * 22695477) % 4294967296;
		const ⲆⲆΔᐃΔⵠⵠ = ⵠᐃⵠⲆᐃᐃᐃ(Ⲇⵠⵠᐃᐃᐃⵠ, ⲆⲆᐃⵠⵠΔᐃ);
		const ΔⲆⵠᐃⲆΔΔ = ⵠᐃⵠⲆᐃᐃᐃ(ⵠΔⲆⵠᐃⵠΔ, ⵠᐃⵠᐃᐃⵠΔ);
		const ᐃⲆᐃᐃⵠⲆᐃⵠⵠ = ⵠᐃⵠⲆᐃᐃᐃ(ΔᐃⲆⲆΔⵠⲆ, ⵠᐃⵠⵠⲆᐃⵠ);
		const ⲆΔⲆΔⲆᐃⵠ = (45290 + (ⲆⲆΔᐃΔⵠⵠ ^ ΔⲆⵠᐃⲆΔΔ)) % 65334;
		const ᐃⵠⵠΔⲆΔΔ = 55575 ^ ⲆΔⲆΔⲆᐃⵠ;
		return ᐃⵠⵠΔⲆΔΔ
	}
	const ᐃΔΔΔ = ᐃΔⲆΔ;

	function ΔⵠᐃΔⵠᐃⲆ(ᐃᐃᐃⲆⲆᐃᐃ, ⲆᐃΔᐃⵠΔⲆ) {
		ⲆᐃΔⵠᐃᐃᐃ(ᐃΔΔΔⲆ, ᐃᐃᐃⲆⲆᐃᐃ, ⲆᐃΔᐃⵠΔⲆ);
		const ΔⲆΔⲆⵠΔᐃ = ⲆⲆⲆⵠᐃΔΔ(ⲆᐃΔⲆ[ΔΔᐃ], ⲆᐃΔⲆ[ⵠⲆⲆ], ⲆᐃΔⲆ[ΔΔᐃ]);
		const ᐃΔⲆⵠΔⵠⲆ = ΔᐃᐃΔⲆⲆΔ(ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[0]);
		const ⲆⲆⲆᐃΔⵠΔ = ((134 + (ΔⲆΔⲆⵠΔᐃ ^ ᐃΔⲆⵠΔⵠⲆ)) * 16807 + 0) % 2147483647;
		return ⲆⲆⲆᐃΔⵠΔ
	}

	function ΔᐃΔΔⵠⵠⵠ(ᐃⵠᐃⵠΔⵠΔ, ΔⵠᐃⵠΔⲆᐃ, ⵠⲆΔΔⵠⲆⲆ, ⲆᐃⲆΔⲆⲆᐃ, ⲆᐃⲆΔᐃⲆⲆ) {
		const ⲆΔᐃᐃⲆⵠΔ = (Ⲇᐃᐃⵠᐃ << (ᐃⵠᐃⵠΔⵠΔ >> ΔⲆᐃⵠᐃ & ⲆⵠΔΔΔ)) + (0 << (ᐃⵠᐃⵠΔⵠΔ >> ΔΔᐃ & 255)) + (8 << (ᐃⵠᐃⵠΔⵠΔ >> 24 & 255)) + (24 << (ᐃⵠᐃⵠΔⵠΔ >> 16 & 255));
		const ΔΔΔᐃᐃⲆⵠ = ~(62483 & ΔⵠᐃⵠΔⲆᐃ) & ΔⵠᐃⵠΔⲆᐃ | ~(ΔⵠᐃⵠΔⲆᐃ & 62483) & 62483;
		const ⲆᐃⵠⲆⲆⵠᐃ = ~(ⵠⲆΔΔⵠⲆⲆ & 63210) & ⵠⲆΔΔⵠⲆⲆ | ~(ⵠⲆΔΔⵠⲆⲆ & 63210) & 63210;
		const ⲆᐃⲆⲆⲆᐃᐃ = ~(ⲆᐃⲆΔⲆⲆᐃ & 10151) & (ⲆᐃⲆΔⲆⲆᐃ | 10151);
		const ΔᐃᐃΔᐃⲆⵠ = (2531011 + (ⲆᐃⲆΔᐃⲆⲆ + 54163) * 214013) % 4294967296;
		const ⲆᐃⲆⵠⵠⵠⲆ = ⲆⲆⲆᐃⵠⲆΔ(ⲆΔᐃᐃⲆⵠΔ, ΔΔΔᐃᐃⲆⵠ, ⲆᐃⵠⲆⲆⵠᐃ, ⲆᐃⲆⲆⲆᐃᐃ);
		const ᐃⲆᐃΔⵠⵠⲆ = ⲆⲆⲆᐃⵠⲆΔ(ΔᐃᐃΔᐃⲆⵠ, ⲆΔᐃᐃⲆⵠΔ, ΔΔΔᐃᐃⲆⵠ, ⲆᐃⵠⲆⲆⵠᐃ);
		const ⵠᐃⵠⲆΔΔⲆ = ((ⲆᐃⲆⵠⵠⵠⲆ ^ ᐃⲆᐃΔⵠⵠⲆ) + 6951) % 65331;
		return ⵠᐃⵠⲆΔΔⲆ
	}

	function ⵠᐃⲆⲆⲆΔΔ(ⲆᐃᐃᐃΔⵠⵠ, ᐃⲆΔΔⲆⵠΔ, ᐃΔⲆⵠΔᐃⲆ, ⵠΔⲆⵠΔᐃᐃ, ᐃᐃᐃⵠⵠᐃⲆ) {
		const ᐃⵠΔⲆⲆⲆⲆ = ~(31083 & ⲆᐃᐃᐃΔⵠⵠ) & (31083 | ⲆᐃᐃᐃΔⵠⵠ);
		const ⵠΔΔΔᐃⲆⲆ = ᐃⲆΔΔⲆⵠΔ ^ 14842;
		const ⲆⵠᐃⵠΔᐃΔ = ~(32390 & ᐃΔⲆⵠΔᐃⲆ) & 32390 | ~(32390 & ᐃΔⲆⵠΔᐃⲆ) & ᐃΔⲆⵠΔᐃⲆ;
		const ᐃⵠⲆᐃⲆΔⵠ = ~(ⵠΔⲆⵠΔᐃᐃ & 28242) & (ⵠΔⲆⵠΔᐃᐃ | 28242);
		const ᐃᐃΔᐃⲆⵠⵠ = 33529 ^ ᐃᐃᐃⵠⵠᐃⲆ;
		const ΔΔⵠᐃⵠⵠⵠ = ⲆⲆᐃⲆⵠⵠⵠ(ᐃⵠΔⲆⲆⲆⲆ, ⵠΔΔΔᐃⲆⲆ, ⲆⵠᐃⵠΔᐃΔ, ᐃⵠⲆᐃⲆΔⵠ, ᐃᐃΔᐃⲆⵠⵠ);
		const ⲆⵠⲆⵠⵠᐃⲆⵠΔ = ΔᐃΔΔⵠⵠⵠ(ᐃⵠΔⲆⲆⲆⲆ, ⵠΔΔΔᐃⲆⲆ, ⲆⵠᐃⵠΔᐃΔ, ᐃⵠⲆᐃⲆΔⵠ, ᐃᐃΔᐃⲆⵠⵠ);
		const ⲆΔⵠᐃⵠⵠᐃ = ~(ΔΔⵠᐃⵠⵠⵠ & 61143) & 61143 | ~(61143 & ΔΔⵠᐃⵠⵠⵠ) & ΔΔⵠᐃⵠⵠⵠ;
		return ⲆΔⵠᐃⵠⵠᐃ
	}

	function ⵠⵠⵠΔⲆⲆΔ(ⵠⵠⲆⲆΔⵠⵠ, ⲆⵠⲆⵠⵠⲆⵠ) {
		const ⵠᐃΔΔⵠᐃᐃ = ⵠⵠⲆⲆΔⵠⵠ ^ 39623;
		const ᐃⵠΔⲆᐃⲆᐃ = (0 << (ⲆⵠⲆⵠⵠⲆⵠ >> 0 & 255)) + (8 << (ⲆⵠⲆⵠⵠⲆⵠ >> 24 & 255)) + (24 << (ⲆⵠⲆⵠⵠⲆⵠ >> 8 & 255)) + (16 << (ⲆⵠⲆⵠⵠⲆⵠ >> 16 & 255));
		const ⵠΔⲆᐃᐃⲆⲆ = ⵠΔⵠⲆⵠⵠⵠ(ⵠᐃΔΔⵠᐃᐃ, ᐃⵠΔⲆᐃⲆᐃ, ⵠᐃΔΔⵠᐃᐃ, ᐃⵠΔⲆᐃⲆᐃ, ⵠᐃΔΔⵠᐃᐃ);
		const ᐃΔⲆᐃⵠⲆᐃⵠⲆ = ΔΔΔⲆⵠΔΔ(ᐃⵠΔⲆᐃⲆᐃ, ⵠᐃΔΔⵠᐃᐃ, ᐃⵠΔⲆᐃⲆᐃ, ⵠᐃΔΔⵠᐃᐃ, ᐃⵠΔⲆᐃⲆᐃ);
		const ᐃⵠᐃΔΔⵠᐃ = ~(45936 & ⵠΔⲆᐃᐃⲆⲆ) & (45936 | ⵠΔⲆᐃᐃⲆⲆ);
		return ᐃⵠᐃΔΔⵠᐃ
	}

	function ΔⵠᐃⵠⵠΔᐃ(ΔΔⲆⵠⵠΔⵠ, ΔᐃⵠⲆⲆᐃᐃ, ⵠⲆⲆⵠⵠⵠⲆ, ΔΔⲆΔⵠⲆᐃ, ᐃⲆⲆΔᐃⲆⲆ) {
		ΔΔᐃᐃⵠΔⵠ(ᐃΔΔΔⲆ, ΔΔⲆⵠⵠΔⵠ, ΔᐃⵠⲆⲆᐃᐃ, ⵠⲆⲆⵠⵠⵠⲆ, ΔΔⲆΔⵠⲆᐃ, ᐃⲆⲆΔᐃⲆⲆ);
		const ᐃᐃΔΔⵠᐃⵠ = ⲆᐃⲆᐃΔⲆᐃ(ⲆᐃΔⲆ[ⲆⵠⲆ], ⲆᐃΔⲆ[ᐃⵠ], ⲆᐃΔⲆ[2]);
		const ⲆΔⲆⲆᐃᐃⲆ = ⲆᐃⲆᐃΔⲆᐃ(ⲆᐃΔⲆ[3], ⲆᐃΔⲆ[4], ⲆᐃΔⲆ[0]);
		const ⲆⵠⵠⲆⵠⲆⵠ = ((52 + (ᐃᐃΔΔⵠᐃⵠ ^ ⲆΔⲆⲆᐃᐃⲆ)) * 75 + 74) % 65537;
		return ⲆⵠⵠⲆⵠⲆⵠ
	}

	function ᐃΔⲆᐃᐃΔᐃ(ⲆⵠⵠΔⵠⲆⵠ, ⵠᐃΔᐃᐃᐃⵠ) {
		const ᐃⲆⲆⲆΔΔⲆ = (16 << (ⲆⵠⵠΔⵠⲆⵠ >> 8 & ⲆⵠΔΔΔ)) + (32 << (ⲆⵠⵠΔⵠⲆⵠ >> ᐃᐃᐃⲆⲆ & 255)) + (8 << (ⲆⵠⵠΔⵠⲆⵠ >> 32 & ΔΔᐃᐃΔΔⵠ)) + (24 << (ⲆⵠⵠΔⵠⲆⵠ >> 24 & 255));
		const ⵠⲆΔⲆΔᐃⲆ = (32 << (ⵠᐃΔᐃᐃᐃⵠ >> 32 & ᐃΔᐃⲆΔ)) + (24 << (ⵠᐃΔᐃᐃᐃⵠ >> 24 & 255)) + (8 << (ⵠᐃΔᐃᐃᐃⵠ >> 8 & 255)) + (16 << (ⵠᐃΔᐃᐃᐃⵠ >> 16 & 255));
		const ⲆᐃᐃⲆᐃⲆⵠ = ΔⲆⲆᐃⵠΔⲆ(ᐃⲆⲆⲆΔΔⲆ, ⵠⲆΔⲆΔᐃⲆ, ᐃⲆⲆⲆΔΔⲆ, ⵠⲆΔⲆΔᐃⲆ, ᐃⲆⲆⲆΔΔⲆ, ⵠⲆΔⲆΔᐃⲆ);
		const ᐃⵠⵠΔΔΔᐃᐃᐃ = ⵠⲆⵠΔⲆᐃⲆ(ᐃⲆⲆⲆΔΔⲆ, ⵠⲆΔⲆΔᐃⲆ, ᐃⲆⲆⲆΔΔⲆ, ⵠⲆΔⲆΔᐃⲆ, ᐃⲆⲆⲆΔΔⲆ);
		const ᐃᐃΔⲆⲆᐃⵠⲆⵠ = ΔᐃⵠⵠⲆΔᐃ(ⵠⲆΔⲆΔᐃⲆ, ᐃⲆⲆⲆΔΔⲆ);
		const ⵠⵠⲆⵠⲆⲆⲆ = (ⲆᐃᐃⲆᐃⲆⵠ | 58283) & ~(58283 & ⲆᐃᐃⲆᐃⲆⵠ);
		const ⲆⵠΔᐃⵠᐃΔ = 8337 ^ ⵠⵠⲆⵠⲆⲆⲆ;
		return ⲆⵠΔᐃⵠᐃΔ
	}
	Ⲇᐃⵠ = {
		"ΔᐃᐃΔᐃⵠᐃ": ΔᐃᐃΔᐃⵠᐃ,
		"ᐃⲆᐃΔⵠⲆⵠΔᐃ": function(ᐃⲆⵠⵠᐃᐃⵠ) {
			var ᐃΔⵠΔᐃᐃᐃ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]](ᐃⲆⵠⵠᐃᐃⵠ, ⵠ[354]);
			ᐃΔⵠΔᐃᐃᐃ.focus()
		},
		"ᐃΔᐃⲆΔⲆᐃ": function(ᐃⲆⵠⵠᐃᐃⵠ) {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]](ᐃⲆⵠⵠᐃᐃⵠ, ⵠ[354], "location=yes,height=570,width=520,scrollbars=yes,status=yes")
		},
		"ΔᐃᐃΔΔⲆᐃ": function(ⵠⵠⵠ, ⲆΔⵠΔ) {
			for (var ᐃⲆ in ⵠⵠⵠ) {
				if (ⵠⵠⵠ[ᐃⲆ] != ⲆΔⵠΔ[ᐃⲆ]) return false
			}
			return true
		},
		"ⵠΔⵠΔΔⵠⵠⵠⲆ": function(ⵠⵠⵠ, ⲆΔⵠΔ) {
			if (ⵠⵠⵠ.length != ⲆΔⵠΔ.length) return ⲆⲆⲆᐃⲆ;
			for (var ᐃⲆ = 0; ᐃⲆ < ⵠⵠⵠ.length; ᐃⲆ++) {
				if (typeof ⵠⵠⵠ == ⵠ[382]) {
					if (!this.ΔᐃᐃΔΔⲆᐃ(ⵠⵠⵠ[ᐃⲆ], ⲆΔⵠΔ[ᐃⲆ])) return false
				} else if (ⵠⵠⵠ[ᐃⲆ] != ⲆΔⵠΔ[ᐃⲆ]) return ΔΔᐃⵠⵠ
			}
			return ΔᐃⲆΔⲆ
		},
		"ΔᐃᐃⲆΔⵠᐃ": function(ⵠⲆᐃⵠΔ, ᐃΔᐃⵠⲆᐃᐃ) {
			ᐃΔᐃⵠⲆᐃᐃ.x = ⵠⲆᐃⵠΔ.x;
			ᐃΔᐃⵠⲆᐃᐃ.y = ⵠⲆᐃⵠΔ.y
		},
		"ⵠᐃⵠΔᐃᐃⵠ": function(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ) {
			return {
				x: ⵠⲆⲆΔⵠ.x - ⲆΔⲆⵠⵠ.x,
				y: ⵠⲆⲆΔⵠ.y - ⲆΔⲆⵠⵠ.y
			}
		},
		"ⵠΔⲆΔⵠΔΔΔⲆ": function(ⵠⵠΔ, ΔⲆᐃⵠΔⲆⲆ) {
			ⵠⵠΔ.x *= ΔⲆᐃⵠΔⲆⲆ, ⵠⵠΔ.y *= ΔⲆᐃⵠΔⲆⲆ
		},
		"ⲆᐃⲆⲆΔΔⲆ": function(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ) {
			return ⵠⲆⲆΔⵠ.x * ⲆΔⲆⵠⵠ.x + ⵠⲆⲆΔⵠ.y * ⲆΔⲆⵠⵠ.y
		},
		"ΔΔΔⲆᐃᐃᐃ": function(ⵠⵠΔ) {
			return Math.sqrt(ⵠⵠΔ.x * ⵠⵠΔ.x + ⵠⵠΔ.y * ⵠⵠΔ.y)
		},
		sign: function(ⵠⵠⵠ) {
			if (ⵠⵠⵠ < ⲆⵠⲆ) return -1;
			else return 1
		},
		"ΔᐃᐃᐃⲆⵠⲆ": function(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ) {
			return ⵠⲆⲆΔⵠ.x * ⲆΔⲆⵠⵠ.y - ⵠⲆⲆΔⵠ.y * ⲆΔⲆⵠⵠ.x
		},
		"Ⲇᐃⵠⵠᐃⵠᐃ": function(ⲆΔⲆΔⲆⲆⲆ, ⲆⲆᐃΔⲆⲆΔ, ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ) {
			var ᐃⲆⲆⵠⲆⵠⲆ = ⵠⵠⲆⲆⵠ - ⲆⲆᐃΔⲆⲆΔ;
			var ΔⵠᐃΔᐃⲆⵠ = ᐃᐃⵠⵠΔ - ⲆΔⲆΔⲆⲆⲆ;
			return Math.atan2(ᐃⲆⲆⵠⲆⵠⲆ, ΔⵠᐃΔᐃⲆⵠ)
		},
		"ᐃⲆΔⲆᐃⵠⲆ": function(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ) {
			return Math.asin(this.ⲆᐃⲆⲆΔΔⲆ(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ) / (this.ΔΔΔⲆᐃᐃᐃ(ⵠⲆⲆΔⵠ) * this.ΔΔΔⲆᐃᐃᐃ(ⲆΔⲆⵠⵠ))) * this.sign(this.ΔᐃᐃᐃⲆⵠⲆ(ⵠⲆⲆΔⵠ, ⲆΔⲆⵠⵠ))
		},
		"ⵠⲆⵠᐃⵠⵠⲆ": function(ᐃⲆΔⲆⵠⲆⲆ) {
			ⲆⲆⵠᐃΔⲆⲆ = location[ⲆⵠΔᐃᐃᐃΔ[208]];
			ᐃⲆΔⲆⵠⲆⲆ = ᐃⲆΔⲆⵠⲆⲆ.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
			var ᐃΔᐃᐃⲆⵠⲆ = "[\\?&]" + ᐃⲆΔⲆⵠⲆⲆ + "=([^&#]*)";
			var ΔᐃΔⲆΔⲆΔ = new RegExp(ᐃΔᐃᐃⲆⵠⲆ);
			var ⲆⲆΔΔⵠⵠⲆ = ΔᐃΔⲆΔⲆΔ[ⲆⵠΔᐃᐃᐃΔ[183]](ⲆⲆⵠᐃΔⲆⲆ);
			return ⲆⲆΔΔⵠⵠⲆ === null ? null : ⲆⲆΔΔⵠⵠⲆ[ⵠⲆⲆ]
		},
		"ⲆⲆᐃⲆᐃΔΔ": function(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ) {
			var ⵠⲆᐃⵠⵠᐃⵠ = Math.PI * 2;
			ΔΔⲆΔⲆ = (ΔΔⲆΔⲆ % ⵠⲆᐃⵠⵠᐃⵠ + ⵠⲆᐃⵠⵠᐃⵠ) % ⵠⲆᐃⵠⵠᐃⵠ;
			if (Math.abs(ⵠⵠᐃⲆΔ - ΔΔⲆΔⲆ) > Math.PI) {
				if (ⵠⵠᐃⲆΔ > ΔΔⲆΔⲆ) return ΔΔⲆΔⲆ + ⵠⲆᐃⵠⵠᐃⵠ;
				else return ΔΔⲆΔⲆ - ⵠⲆᐃⵠⵠᐃⵠ
			}
			return ΔΔⲆΔⲆ
		},
		"ΔⵠⵠᐃᐃⲆⲆ": function(ⲆⵠᐃᐃᐃⵠΔ, ⲆⲆⵠΔⵠΔΔ) {
			return this.ᐃⲆΔⲆᐃⵠⲆ({
				x: ⵠⲆⲆ,
				y: ΔΔᐃ
			}, this.ⵠᐃⵠΔᐃᐃⵠ(ⲆⵠᐃᐃᐃⵠΔ, ⲆⲆⵠΔⵠΔΔ))
		},
		"ⵠⵠΔᐃ": function(ⵠⵠⵠ, ⲆΔⵠΔ) {
			return Math.sqrt((ⲆΔⵠΔ.x - ⵠⵠⵠ.x) * (ⲆΔⵠΔ.x - ⵠⵠⵠ.x) + (ⲆΔⵠΔ.y - ⵠⵠⵠ.y) * (ⲆΔⵠΔ.y - ⵠⵠⵠ.y))
		},
		"ⲆⲆⲆᐃᐃᐃⵠ": function(ⲆΔⲆᐃ, ⵠⵠⵠ) {
			return {
				x: Math.sin(ⵠⵠⵠ) * ⲆΔⲆᐃ,
				y: Math.cos(ⵠⵠⵠ) * ⲆΔⲆᐃ
			}
		},
		"ⵠⲆⲆⵠⵠΔⵠ": function(ⵠⲆᐃⵠΔ, ᐃΔᐃⵠⲆᐃᐃ) {
			ⵠⲆᐃⵠΔ.x += ᐃΔᐃⵠⲆᐃᐃ.x;
			ⵠⲆᐃⵠΔ.y += ᐃΔᐃⵠⲆᐃᐃ.y
		},
		"ᐃᐃᐃⵠⲆΔΔ": function(ⵠⲆᐃⵠΔ, ᐃΔᐃⵠⲆᐃᐃ) {
			ⵠⲆᐃⵠΔ.x -= ᐃΔᐃⵠⲆᐃᐃ.x;
			ⵠⲆᐃⵠΔ.y -= ᐃΔᐃⵠⲆᐃᐃ.y
		},
		"ᐃⲆᐃᐃⵠΔΔᐃᐃ": function(ⵠⵠΔ, ᐃᐃΔ, ᐃⲆᐃ) {
			ⵠⵠΔ.x += ᐃᐃΔ;
			ⵠⵠΔ.y += ᐃⲆᐃ
		},
		"ⵠⵠⵠΔΔⲆᐃⲆⲆ": function(ⵠⵠΔ, ᐃᐃΔ, ᐃⲆᐃ) {
			return {
				x: ⵠⵠΔ.x + ᐃᐃΔ,
				y: ⵠⵠΔ.y + ᐃⲆᐃ
			}
		},
		"ᐃᐃⵠⲆⵠ": function(ⵠⲆⵠ, ⲆΔⲆᐃ, ⵠⵠⵠ) {
			ⵠⲆⵠ.x += Math.sin(ⵠⵠⵠ) * ⲆΔⲆᐃ;
			ⵠⲆⵠ.y += Math.cos(ⵠⵠⵠ) * ⲆΔⲆᐃ
		},
		"ⵠΔⵠΔᐃΔⲆ": function(ⵠⵠⵠ, ⲆΔⵠΔ) {
			return Math.floor((ⵠⵠⵠ - ⲆΔⵠΔ) / ΔⲆⲆᐃ)
		},
		"ΔⲆᐃⵠⲆⵠΔ": function(ⵠⵠⵠ, ⲆΔⵠΔ) {
			return {
				x: (ⵠⵠⵠ.x + ⲆΔⵠΔ.x) / 2,
				y: (ⵠⵠⵠ.y + ⲆΔⵠΔ.y) / 2
			}
		},
		"ΔᐃⲆⵠⵠⲆΔ": function() {
			return Math.random() > .5 ? 1 : -ΔⲆᐃ
		},
		"ΔᐃⵠΔᐃⲆⵠⲆΔ": function(ᐃᐃΔ, ᐃⲆᐃ, ⲆΔⲆᐃ) {
			var ᐃΔΔⵠᐃ = this.ΔᐃⲆⵠⵠⲆΔ();
			var ⵠᐃⵠΔⲆ = this.ΔᐃⲆⵠⵠⲆΔ();
			var ⵠⵠⵠ = Math.random() * Math.PI / ⵠΔⲆΔ;
			return {
				x: Math.floor(ᐃᐃΔ + Math.sin(ⵠⵠⵠ) * ᐃΔΔⵠᐃ * ⲆΔⲆᐃ),
				y: Math.floor(ᐃⲆᐃ + Math.cos(ⵠⵠⵠ) * ⵠᐃⵠΔⲆ * ⲆΔⲆᐃ)
			}
		},
		"ⲆΔⵠᐃⲆΔⲆⵠⲆ": function(ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ) {
			this.x = ᐃᐃΔ;
			this.y = ᐃⲆᐃ;
			this.w = ᐃᐃⲆ;
			this.ΔᐃⲆ = ΔᐃⲆ
		},
		"ⲆⲆⲆⵠᐃΔⵠⵠⵠ": function(ⲆⲆⲆᐃ) {
			ⵠⵠⵠ = [];
			ⵠⵠⵠ.push.apply(ⵠⵠⵠ, ⲆⲆⲆᐃ);
			var ᐃᐃⲆᐃⵠᐃⲆ = [];
			while (ⵠⵠⵠ.length > ⲆⵠⲆ) {
				var Δᐃᐃ = Math.floor(Math.random() * ⵠⵠⵠ.length);
				ᐃᐃⲆᐃⵠᐃⲆ.push(ⵠⵠⵠ[Δᐃᐃ]);
				ⵠⵠⵠ.splice(Δᐃᐃ, 1)
			}
			return ᐃᐃⲆᐃⵠᐃⲆ
		},
		"ᐃΔⵠΔⵠᐃΔ": function(ᐃⵠⲆ) {
			if (ᐃⵠⲆ >= 2e4) ᐃⵠⲆ = (ᐃⵠⲆ - 2e4) * 1e3;
			else if (ᐃⵠⲆ >= 1e4) ᐃⵠⲆ = (ᐃⵠⲆ - 1e4) * 100;
			return ᐃⵠⲆ
		},
		"ⵠΔⵠᐃⲆΔⲆ": function(ᐃⵠⲆ) {
			if (typeof ᐃⵠⲆ !== ⵠ[501]) return "0";
			else if (ᐃⵠⲆ >= 1e4) {
				var ⲆΔΔⵠᐃ = Math.floor(Math.log10(ᐃⵠⲆ)) - ᐃⵠΔⲆ;
				var ⲆⵠΔΔⲆⲆⲆ = Math.max(Δⵠⵠ, 3 - ⲆΔΔⵠᐃ);
				var ᐃⵠⵠⲆ = Math.floor(ᐃⵠⲆ / 1e3)[ⲆⵠΔᐃᐃᐃΔ[274]]();
				if (ⲆⵠΔΔⲆⲆⲆ) {
					ᐃⵠⵠⲆ += "." + (ᐃⵠⲆ % 1e3 / 1e3)[ⲆⵠΔᐃᐃᐃΔ[274]]().substring(2).substring(Δⵠⵠ, ⲆⵠΔΔⲆⲆⲆ);
					for (var ᐃⲆ = ᐃⵠⵠⲆ.length - ⵠⲆⲆ, ⵠΔⵠⲆᐃΔᐃ = ⲆⵠⲆ; ᐃⲆ > ⲆⵠⲆ; ᐃⲆ--) {
						if (ᐃⵠⵠⲆ[ᐃⲆ] != "0") break;
						else ⵠΔⵠⲆᐃΔᐃ++
					}
					ᐃⵠⵠⲆ = ᐃⵠⵠⲆ.substring(ⲆⵠⲆ, ᐃⵠⵠⲆ.length - ⵠΔⵠⲆᐃΔᐃ);
					if (ᐃⵠⵠⲆ[ᐃⵠⵠⲆ.length - 1] == ".") ᐃⵠⵠⲆ = ᐃⵠⵠⲆ.substring(ⲆⵠⲆ, ᐃⵠⵠⲆ.length - 1)
				}
				ᐃⵠⵠⲆ += "k";
				return ᐃⵠⵠⲆ
			} else return ᐃⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]]()
		},
		"ⲆⵠⲆΔⵠᐃΔ": function(ᐃⲆⵠ) {
			return ᐃⲆⵠ * (2 - ᐃⲆⵠ)
		},
		"ΔΔⵠⵠΔᐃⲆ": function(ᐃⲆⵠ) {
			return --ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ + 1
		},
		"ⲆᐃⲆⵠᐃ": function(ᐃⲆⵠ) {
			return ᐃⲆⵠ < .5 ? ᐃᐃΔⵠ * ᐃⲆⵠ * ᐃⲆⵠ : -1 + (4 - 2 * ᐃⲆⵠ) * ᐃⲆⵠ
		},
		"ⲆⲆⵠⲆⲆᐃⲆ": function(ᐃⲆⵠ) {
			return ᐃⲆⵠ < .5 ? 4 * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ : (ᐃⲆⵠ - 1) * (ᐃᐃΔⵠ * ᐃⲆⵠ - 2) * (2 * ᐃⲆⵠ - 2) + ⵠⲆⲆ
		},
		"ΔⵠⵠᐃⲆᐃⲆⲆΔ": function(ᐃⲆⵠ) {
			return ᐃⲆⵠ < .5 ? 8 * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ : ΔⲆᐃ - 8 * --ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ
		},
		"ⲆⵠⲆΔᐃᐃΔ": function(ᐃⲆⵠ) {
			return 1 - --ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ
		},
		"ᐃᐃΔᐃⵠⵠⲆ": function(ᐃⲆⵠ) {
			return 1 + --ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ * ᐃⲆⵠ
		},
		"ᐃΔΔⲆ": function(ⵠⲆⵠ, ⵠⵠΔ, ⲆⲆΔⵠ, ΔⵠΔᐃ, ⲆᐃⲆΔⵠⲆᐃ, ⵠⲆⵠⲆΔᐃⲆ) {
			this.ⵠⲆⵠ = ⵠⲆⵠ;
			this.ⵠⵠΔ = ⵠⵠΔ;
			this.max = ⲆⲆΔⵠ;
			this.min = ΔⵠΔᐃ;
			this.ⲆᐃⲆΔⵠⲆᐃ = ⲆᐃⲆΔⵠⲆᐃ;
			this.ⵠⲆⵠⲆΔᐃⲆ = ⵠⲆⵠⲆΔᐃⲆ;
			this.ⲆⵠΔΔⵠⵠⲆ = 0;
			this.ⵠᐃⵠ = function() {
				if (this.ⵠⲆⵠ) {
					var ⵠⵠΔ = this.ⵠⵠΔ + ᐃᐃΔⲆ * this.ⲆᐃⲆΔⵠⲆᐃ;
					if (ⵠⵠΔ > this.max) {
						this.ⵠⵠΔ = this.max;
						this.ⵠⲆⵠ = false;
						return true
					} else this.ⵠⵠΔ = ⵠⵠΔ
				} else {
					var ⵠⵠΔ = this.ⵠⵠΔ - ᐃᐃΔⲆ * this.ⵠⲆⵠⲆΔᐃⲆ;
					if (ⵠⵠΔ < this.min) {
						this.ⵠⵠΔ = this.min;
						this.ⵠⲆⵠ = ΔᐃⲆΔⲆ
					} else this.ⵠⵠΔ = ⵠⵠΔ
				}
			};
			return false
		},
		"ⵠᐃⵠⵠⲆ": function(ᐃⲆⲆⵠⵠ, ΔᐃⲆᐃⲆ, ⵠΔⲆⵠⲆ, ᐃΔΔⵠᐃ, ᐃᐃΔ, ᐃᐃΔᐃᐃ) {
			this.ᐃⲆⲆⵠⵠ = ᐃⲆⲆⵠⵠ;
			this.ΔᐃⲆᐃⲆ = ΔᐃⲆᐃⲆ, this.ⵠΔⲆⵠⲆ = ⵠΔⲆⵠⲆ, this.ᐃΔΔⵠᐃ = ᐃΔΔⵠᐃ, this.x = ᐃᐃΔ, this.ᐃᐃΔᐃᐃ = ᐃᐃΔᐃᐃ, this.ΔᐃⲆⵠΔᐃΔ = function() {
				this.x = this.ΔⵠⲆⲆᐃΔΔᐃΔ;
				this.ΔᐃⲆᐃⲆ = 0
			}, this.ⲆⵠᐃⲆⲆΔΔ = function(ᐃᐃΔ) {
				if (ᐃᐃΔ !== this.ᐃᐃΔᐃᐃ) {
					this.ᐃᐃΔᐃᐃ = ᐃᐃΔ;
					this.ᐃΔΔⵠᐃ = this.x;
					this.ΔᐃⲆᐃⲆ = 0
				}
				if (this.ᐃᐃΔᐃᐃ !== this.x) {
					this.ΔᐃⲆᐃⲆ += ᐃᐃΔⲆ;
					if (this.ΔᐃⲆᐃⲆ > this.ⵠΔⲆⵠⲆ) this.x = this.ᐃᐃΔᐃᐃ;
					else {
						var ΔΔⵠ = this.ᐃⲆⲆⵠⵠ(this.ΔᐃⲆᐃⲆ / this.ⵠΔⲆⵠⲆ);
						this.x = this.ᐃΔΔⵠᐃ + (this.ᐃᐃΔᐃᐃ - this.ᐃΔΔⵠᐃ) * ΔΔⵠ
					}
				}
			}
		},
		"ⲆⵠΔᐃⲆⵠΔ": function(ᐃⲆⲆⵠⵠ, ΔᐃⲆᐃⲆ, ⵠΔⲆⵠⲆ, ᐃΔΔⵠᐃ, ⵠᐃⵠΔⲆ, ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃΔᐃᐃ, ᐃⵠⵠⲆᐃⵠⲆ) {
			this.ᐃⲆⲆⵠⵠ = ᐃⲆⲆⵠⵠ;
			this.ΔᐃⲆᐃⲆ = ΔᐃⲆᐃⲆ, this.ⵠΔⲆⵠⲆ = ⵠΔⲆⵠⲆ, this.ᐃΔΔⵠᐃ = ᐃΔΔⵠᐃ, this.ⵠᐃⵠΔⲆ = ⵠᐃⵠΔⲆ, this.x = ᐃᐃΔ, this.y = ᐃⲆᐃ, this.ᐃᐃΔᐃᐃ = ᐃᐃΔᐃᐃ, this.ᐃⵠⵠⲆᐃⵠⲆ = ᐃⵠⵠⲆᐃⵠⲆ, this.ⲆⵠᐃⲆⲆΔΔ = function(ΔⲆⵠᐃ) {
				if (ΔⲆⵠᐃ.x != this.ᐃᐃΔᐃᐃ || ΔⲆⵠᐃ.y != this.ᐃⵠⵠⲆᐃⵠⲆ) {
					this.ᐃᐃΔᐃᐃ = ΔⲆⵠᐃ.x;
					this.ᐃⵠⵠⲆᐃⵠⲆ = ΔⲆⵠᐃ.y;
					this.ᐃΔΔⵠᐃ = this.x;
					this.ⵠᐃⵠΔⲆ = this.y;
					this.ΔᐃⲆᐃⲆ = ⲆⵠⲆ
				}
				if (this.ᐃᐃΔᐃᐃ != this.x || this.ᐃⵠⵠⲆᐃⵠⲆ != this.y) {
					this.ΔᐃⲆᐃⲆ += ᐃᐃΔⲆ;
					if (this.ΔᐃⲆᐃⲆ > this.ⵠΔⲆⵠⲆ) {
						this.x = this.ᐃᐃΔᐃᐃ;
						this.y = this.ᐃⵠⵠⲆᐃⵠⲆ
					} else {
						var ΔΔⵠ = this.ᐃⲆⲆⵠⵠ(this.ΔᐃⲆᐃⲆ / this.ⵠΔⲆⵠⲆ);
						this.x = this.ᐃΔΔⵠᐃ + (this.ᐃᐃΔᐃᐃ - this.ᐃΔΔⵠᐃ) * ΔΔⵠ;
						this.y = this.ⵠᐃⵠΔⲆ + (this.ᐃⵠⵠⲆᐃⵠⲆ - this.ⵠᐃⵠΔⲆ) * ΔΔⵠ
					}
				}
			}
		},
		"ⵠᐃⵠᐃⵠⲆⲆ": function(ΔᐃᐃⵠⲆ) {
			var ⵠΔᐃⵠⲆ = "";
			for (var ᐃⲆ = ΔΔᐃ; ᐃⲆ < ΔᐃᐃⵠⲆ; ᐃⲆ++) {
				ⵠΔᐃⵠⲆ += String.fromCharCode(48 + Math.floor(Math.random() * 74))
			}
			return ⵠΔᐃⵠⲆ
		},
		"ΔᐃⲆⲆΔⲆᐃ": function(name, ᐃⲆⵠⵠᐃᐃⵠ) {
			if (!ᐃⲆⵠⵠᐃᐃⵠ) ᐃⲆⵠⵠᐃᐃⵠ = location[ⲆⵠΔᐃᐃᐃΔ[208]];
			name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
			var ᐃΔᐃᐃⲆⵠⲆ = "[\\?&]" + name + "=([^&#]*)";
			var ⲆᐃⵠΔⵠⵠⲆ = new RegExp(ᐃΔᐃᐃⲆⵠⲆ);
			var ⲆⲆΔΔⵠⵠⲆ = ⲆᐃⵠΔⵠⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[183]](ᐃⲆⵠⵠᐃᐃⵠ);
			return ⲆⲆΔΔⵠⵠⲆ == null ? null : ⲆⲆΔΔⵠⵠⲆ[ᐃⵠ]
		},
		"ⵠᐃᐃΔⵠ": function(ⲆΔⲆᐃⵠᐃᐃ) {
			let ΔᐃⲆΔᐃᐃⲆ = "";
			const ΔᐃᐃⵠⲆ = ⲆΔⲆᐃⵠᐃᐃ.length;
			for (let ᐃⲆ = ΔΔᐃ; ᐃⲆ < ΔᐃᐃⵠⲆ; ᐃⲆ++) ΔᐃⲆΔᐃᐃⲆ += String.fromCharCode(ⲆΔⲆᐃⵠᐃᐃ[ᐃⲆ]);
			return ΔᐃⲆΔᐃᐃⲆ
		},
		"ᐃⲆⵠᐃᐃⵠⲆ": function(ⵠΔᐃ, ⲆᐃⲆⲆⵠ) {
			if (ⵠΔᐃ.x >= ⲆᐃⲆⲆⵠ.x && ⵠΔᐃ.x <= ⲆᐃⲆⲆⵠ.x + ⲆᐃⲆⲆⵠ.w && ⵠΔᐃ.y >= ⲆᐃⲆⲆⵠ.y && ⵠΔᐃ.y <= ⲆᐃⲆⲆⵠ.y + ⲆᐃⲆⲆⵠ.ΔᐃⲆ) return ⵠⲆᐃⲆᐃ;
			return ⵠⲆⵠΔⵠ
		},
		"ⲆⵠⵠⵠΔⵠΔ": function(ⲆΔⲆᐃΔⵠΔ, ⲆΔΔⵠⲆⲆⵠ, ⲆΔⵠΔΔᐃᐃ, ⲆΔⵠⲆⵠⵠΔ, ⵠⵠΔᐃΔⲆΔ, ᐃΔᐃⲆΔᐃΔ, ΔⵠⵠᐃⲆⵠⵠ, ⵠΔⲆⲆᐃⲆⲆ) {
			if (Math.max(ⲆΔⲆᐃΔⵠΔ, ⵠⵠΔᐃΔⲆΔ) < Math.min(ⲆΔΔⵠⲆⲆⵠ, ᐃΔᐃⲆΔᐃΔ) && Math.max(ⲆΔⵠΔΔᐃᐃ, ΔⵠⵠᐃⲆⵠⵠ) < Math.min(ⲆΔⵠⲆⵠⵠΔ, ⵠΔⲆⲆᐃⲆⲆ)) return 1;
			return 0
		},
		"ᐃᐃⵠᐃΔⵠᐃ": function(p1, p2, ᐃᐃⲆ) {
			return (1 - ᐃᐃⲆ) * p1 + ᐃᐃⲆ * p2
		},
		"ⲆΔⵠΔⵠΔⵠ": function(ΔⲆᐃⵠⵠⵠⵠ) {
			return ΔⲆᐃⵠⵠⵠⵠ.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
		}
	};
	const ᐃⵠⲆᐃΔⲆᐃ = ᐃᐃᐃᐃᐃΔⵠ;
	Math.sign = Math.sign || function(ᐃⵠⲆ) {
		if (ΔΔᐃ === ᐃⵠⲆ) return Δⵠⵠ;
		else if (ΔΔᐃ < ᐃⵠⲆ) return 1;
		else return -ᐃⵠ
	};
	Math.log10 = Math.log10 || function(ᐃᐃΔ) {
		return Math.log(ᐃᐃΔ) / Math.ⵠᐃΔᐃᐃⵠΔΔⲆ
	};

	function ⲆΔᐃᐃⲆΔΔ(ᐃΔⵠⵠⲆⲆⵠ, ᐃᐃᐃᐃΔⵠⲆ) {
		ᐃᐃⲆᐃᐃⵠⲆ(ᐃΔΔΔⲆ, ᐃΔⵠⵠⲆⲆⵠ, ᐃᐃᐃᐃΔⵠⲆ);
		const ⵠΔᐃⲆᐃⵠᐃ = ⵠⵠⲆΔⲆᐃⵠ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1]);
		const ᐃⵠᐃᐃⲆⲆᐃ = ΔᐃᐃΔⲆⲆΔ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1]);
		const ᐃΔⲆΔⲆⵠΔ = (24 << ((ⵠΔᐃⲆᐃⵠᐃ ^ ᐃⵠᐃᐃⲆⲆᐃ) >> 16 & ⲆⲆⵠΔⲆΔⵠ)) + (16 << ((ⵠΔᐃⲆᐃⵠᐃ ^ ᐃⵠᐃᐃⲆⲆᐃ) >> 8 & 255)) + (0 << ((ⵠΔᐃⲆᐃⵠᐃ ^ ᐃⵠᐃᐃⲆⲆᐃ) >> 24 & ⲆⵠΔΔΔ)) + (8 << ((ⵠΔᐃⲆᐃⵠᐃ ^ ᐃⵠᐃᐃⲆⲆᐃ) >> 0 & 255));
		return ᐃΔⲆΔⲆⵠΔ
	}
	const ⲆᐃⲆΔⵠᐃⵠ = ΔᐃᐃΔⲆⵠΔ;
	const ⲆΔΔⲆΔ = ΔᐃⵠᐃⲆ;

	function ⲆⵠᐃⵠΔΔⵠ(ⵠⲆⲆᐃᐃΔⲆ, ᐃΔⲆᐃᐃᐃⲆ, ΔᐃⵠᐃⲆΔΔ, ᐃᐃᐃⵠⵠⲆᐃ, ᐃΔⵠᐃᐃⲆⲆ) {
		const ᐃᐃΔᐃⲆⲆⵠ = ~(42364 & ⵠⲆⲆᐃᐃΔⲆ) & (ⵠⲆⲆᐃᐃΔⲆ | 42364);
		const ⲆⲆⵠⲆⵠΔⲆ = (2531011 + (ᐃΔⲆᐃᐃᐃⲆ + 26448) * 214013) % 4294967296;
		const ⵠᐃⵠᐃⲆΔⵠ = (ΔᐃⵠᐃⲆΔΔ | 35196) & ~(ΔᐃⵠᐃⲆΔΔ & 35196);
		const ⲆⵠᐃⲆⲆⲆⵠ = (ᐃᐃᐃⵠⵠⲆᐃ | 60294) & ~(60294 & ᐃᐃᐃⵠⵠⲆᐃ);
		const ⲆΔᐃⵠⲆᐃⲆ = ~(ᐃΔⵠᐃᐃⲆⲆ & 44366) & (44366 | ᐃΔⵠᐃᐃⲆⲆ);
		const ⲆⵠΔᐃⲆΔᐃ = ⵠⲆΔⵠΔⲆⵠ(ᐃᐃΔᐃⲆⲆⵠ, ⲆⲆⵠⲆⵠΔⲆ, ⵠᐃⵠᐃⲆΔⵠ, ⲆⵠᐃⲆⲆⲆⵠ, ⲆΔᐃⵠⲆᐃⲆ);
		const ⵠΔⲆⵠⲆⲆᐃⲆⵠ = ⵠⲆⵠΔⲆⲆⵠ(ᐃᐃΔᐃⲆⲆⵠ, ⲆⲆⵠⲆⵠΔⲆ, ⵠᐃⵠᐃⲆΔⵠ, ⲆⵠᐃⲆⲆⲆⵠ, ⲆΔᐃⵠⲆᐃⲆ, ᐃᐃΔᐃⲆⲆⵠ);
		const ΔΔⲆⵠⲆⵠⵠ = ⲆⵠΔᐃⲆΔᐃ ^ 11721;
		return ΔΔⲆⵠⲆⵠⵠ
	}
	const ᐃᐃᐃⲆ = ⲆᐃΔⵠ;
	(function(ᐃΔΔⲆⲆᐃⲆ) {
		var ⲆⲆᐃᐃΔΔⲆ = ΔⵠⵠΔⲆ;
		if (typeof ᐃΔⲆⵠⵠⲆⲆ === ⵠ[479] && ᐃΔⲆⵠⵠⲆⲆ.ⵠⵠΔⲆᐃⲆⲆ) {
			ᐃΔⲆⵠⵠⲆⲆ(ᐃΔΔⲆⲆᐃⲆ);
			ⲆⲆᐃᐃΔΔⲆ = ⲆⵠΔⵠΔ
		}
		ⵠ[382] === typeof ⵠᐃᐃΔΔᐃⲆ && (ⲆⲆⵠⲆⵠⵠⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[293]] = ᐃΔΔⲆⲆᐃⲆ(), ⲆⲆᐃᐃΔΔⲆ = true);
		if (!ⲆⲆᐃᐃΔΔⲆ) {
			var ΔⲆᐃᐃᐃⲆⲆ = ⲆⲆⲆⲆᐃᐃᐃ.ⲆΔΔᐃ;
			var ⵠΔᐃⲆⲆ = ⲆⲆⲆⲆᐃᐃᐃ.ⲆΔΔᐃ = ᐃΔΔⲆⲆᐃⲆ();
			ⵠΔᐃⲆⲆ.ⲆΔⵠᐃⲆⵠΔᐃⲆ = function() {
				ⲆⲆⲆⲆᐃᐃᐃ.ⲆΔΔᐃ = ΔⲆᐃᐃᐃⲆⲆ;
				return ⵠΔᐃⲆⲆ
			}
		}
	})((function() {
		function ᐃΔⵠΔⲆᐃᐃ() {
			var ᐃⲆ = 0;
			var ΔⵠᐃᐃⲆ = {};
			for (; arguments.length > ᐃⲆ; ᐃⲆ++) {
				var ⵠΔᐃᐃⵠ = arguments[ᐃⲆ];
				for (var ⵠΔⵠᐃⲆ in ⵠΔᐃᐃⵠ) {
					ΔⵠᐃᐃⲆ[ⵠΔⵠᐃⲆ] = ⵠΔᐃᐃⵠ[ⵠΔⵠᐃⲆ]
				}
			}
			return ΔⵠᐃᐃⲆ
		}

		function ⲆΔⲆΔΔ(ⲆⵠᐃΔᐃⵠⲆ) {
			function ⵠΔᐃⲆⲆ(ⵠΔⵠᐃⲆ, Ⲇⵠⵠᐃ, ⵠΔᐃᐃⵠ) {
				var ΔⵠᐃᐃⲆ;
				if (ⵠ[150] === typeof document) {
					return
				}
				if (arguments.length > 1) {
					ⵠΔᐃᐃⵠ = ᐃΔⵠΔⲆᐃᐃ({
						path: "/"
					}, ⵠΔᐃⲆⲆ.ᐃΔΔΔⵠΔⵠ, ⵠΔᐃᐃⵠ);
					if (typeof ⵠΔᐃᐃⵠ.expires === ⵠ[501]) {
						var ⲆΔᐃᐃᐃ = new Date;
						ⲆΔᐃᐃᐃ.setMilliseconds(ⲆΔᐃᐃᐃ.getMilliseconds() + ⵠΔᐃᐃⵠ.expires * 864e5);
						ⵠΔᐃᐃⵠ.expires = ⲆΔᐃᐃᐃ
					}
					try {
						ΔⵠᐃᐃⲆ = JSON.stringify(Ⲇⵠⵠᐃ);
						/^[\{\[]/.test(ΔⵠᐃᐃⲆ) && (Ⲇⵠⵠᐃ = ΔⵠᐃᐃⲆ)
					} catch (ΔΔⵠ) {}!ⲆⵠᐃΔᐃⵠⲆ.write ? Ⲇⵠⵠᐃ = encodeURIComponent(String(Ⲇⵠⵠᐃ)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent) : Ⲇⵠⵠᐃ = ⲆⵠᐃΔᐃⵠⲆ.write(Ⲇⵠⵠᐃ, ⵠΔⵠᐃⲆ);
					ⵠΔⵠᐃⲆ = encodeURIComponent(String(ⵠΔⵠᐃⲆ));
					ⵠΔⵠᐃⲆ = ⵠΔⵠᐃⲆ.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
					ⵠΔⵠᐃⲆ = ⵠΔⵠᐃⲆ.replace(/[\(\)]/g, escape);
					return document[ⲆⵠΔᐃᐃᐃΔ[81]] = [ⵠΔⵠᐃⲆ, "=", Ⲇⵠⵠᐃ, ⵠΔᐃᐃⵠ.expires ? "; expires=" + ⵠΔᐃᐃⵠ.expires[ⲆⵠΔᐃᐃᐃΔ[283]]() : "", ⵠΔᐃᐃⵠ.path ? "; path=" + ⵠΔᐃᐃⵠ.path : "", ⵠΔᐃᐃⵠ.domain ? "; domain=" + ⵠΔᐃᐃⵠ.domain : "", ⵠΔᐃᐃⵠ.ΔⵠⲆⵠᐃᐃᐃⵠⲆ ? "; secure" : ""].join("")
				}!ⵠΔⵠᐃⲆ && (ΔⵠᐃᐃⲆ = {});
				var ⵠⵠᐃᐃⲆᐃⵠ = document[ⲆⵠΔᐃᐃᐃΔ[81]] ? document[ⲆⵠΔᐃᐃᐃΔ[81]].split("; ") : [];
				var ΔⵠᐃⵠⲆⵠⲆ = /(%[0-9A-Z]{2})+/g;
				var ᐃⲆ = 0;
				for (; ᐃⲆ < ⵠⵠᐃᐃⲆᐃⵠ.length; ᐃⲆ++) {
					var ⲆⵠΔᐃᐃΔⲆ = ⵠⵠᐃᐃⲆᐃⵠ[ᐃⲆ].split("=");
					var ΔΔΔᐃⲆ = ⲆⵠΔᐃᐃΔⲆ.slice(1).join("=");
					ΔΔΔᐃⲆ.charAt(Δⵠⵠ) === '"' && (ΔΔΔᐃⲆ = ΔΔΔᐃⲆ.slice(1, -ⵠⲆⲆ));
					try {
						var name = ⲆⵠΔᐃᐃΔⲆ[0].replace(ΔⵠᐃⵠⲆⵠⲆ, decodeURIComponent);
						ΔΔΔᐃⲆ = ⲆⵠᐃΔᐃⵠⲆ.read ? ⲆⵠᐃΔᐃⵠⲆ.read(ΔΔΔᐃⲆ, name) : ⲆⵠᐃΔᐃⵠⲆ(ΔΔΔᐃⲆ, name) || ΔΔΔᐃⲆ.replace(ΔⵠᐃⵠⲆⵠⲆ, decodeURIComponent);
						if (this.json) {
							try {
								ΔΔΔᐃⲆ = JSON.parse(ΔΔΔᐃⲆ)
							} catch (ΔΔⵠ) {}
						}
						if (name === ⵠΔⵠᐃⲆ) {
							ΔⵠᐃᐃⲆ = ΔΔΔᐃⲆ;
							break
						}
						if (!ⵠΔⵠᐃⲆ) {
							ΔⵠᐃᐃⲆ[name] = ΔΔΔᐃⲆ
						}
					} catch (ΔΔⵠ) {}
				}
				return ΔⵠᐃᐃⲆ
			}
			ⵠΔᐃⲆⲆ.set = ⵠΔᐃⲆⲆ;
			ⵠΔᐃⲆⲆ.get = function(ⵠΔⵠᐃⲆ) {
				return ⵠΔᐃⲆⲆ.call(ⵠΔᐃⲆⲆ, ⵠΔⵠᐃⲆ)
			};
			ⵠΔᐃⲆⲆ.ᐃⲆⲆⲆΔᐃⲆᐃⲆ = function() {
				return ⵠΔᐃⲆⲆ.apply({
					json: ΔΔⲆⲆⲆ
				}, [].slice.call(arguments))
			};
			ⵠΔᐃⲆⲆ.ᐃΔΔΔⵠΔⵠ = {};
			ⵠΔᐃⲆⲆ.remove = function(ⵠΔⵠᐃⲆ, ⵠΔᐃᐃⵠ) {
				ⵠΔᐃⲆⲆ(ⵠΔⵠᐃⲆ, "", ᐃΔⵠΔⲆᐃᐃ(ⵠΔᐃᐃⵠ, {
					expires: -ⵠⲆⲆ
				}))
			};
			ⵠΔᐃⲆⲆ.ΔⲆΔⲆⲆΔΔⲆΔ = ⲆΔⲆΔΔ;
			return ⵠΔᐃⲆⲆ
		}
		return ⲆΔⲆΔΔ((function() {}))
	}));

	function ⵠⲆᐃᐃⵠⲆⵠ(ⵠⲆᐃⵠⲆⲆⲆ, ⲆΔⵠΔⲆΔΔ, ⵠΔⵠⲆᐃⲆᐃ, ΔΔⵠΔⵠᐃᐃ) {
		const ᐃᐃⲆⲆⲆⵠⵠ = (ⵠⲆᐃⵠⲆⲆⲆ | 40200) & ~(ⵠⲆᐃⵠⲆⲆⲆ & 40200);
		const ⵠⲆⵠᐃⲆⲆⲆ = ⲆΔⵠΔⲆΔΔ ^ 57200;
		const ⲆⲆⵠΔⲆⲆΔ = ~(9243 & ⵠΔⵠⲆᐃⲆᐃ) & 9243 | ~(9243 & ⵠΔⵠⲆᐃⲆᐃ) & ⵠΔⵠⲆᐃⲆᐃ;
		const ⲆΔⲆΔⵠⵠⵠ = (12345 + (61831 + ΔΔⵠΔⵠᐃᐃ) * 1103515245) % 2147483648;
		const ⲆᐃⲆⵠΔΔⲆ = ⲆⲆᐃᐃⲆⲆᐃ(ᐃᐃⲆⲆⲆⵠⵠ, ⵠⲆⵠᐃⲆⲆⲆ);
		const ᐃΔᐃᐃΔⵠΔ = ⵠᐃⲆⲆⲆΔΔ(ⲆⲆⵠΔⲆⲆΔ, ⲆΔⲆΔⵠⵠⵠ, ᐃᐃⲆⲆⲆⵠⵠ, ⵠⲆⵠᐃⲆⲆⲆ, ⲆⲆⵠΔⲆⲆΔ);
		const ⵠⵠᐃᐃΔⲆᐃ = (2531011 + 214013 * ((ⲆᐃⲆⵠΔΔⲆ ^ ᐃΔᐃᐃΔⵠΔ) + 8542)) % 4294967296;
		return ⵠⵠᐃᐃΔⲆᐃ
	}
	const ᐃΔᐃᐃⲆ = ⵠⲆⵠⵠΔ;

	function ⵠⵠΔΔᐃⵠΔ() {
		this.ᐃⵠΔⵠⵠΔⲆ = function() {
			this.ⵠⲆⵠⲆᐃ = 81;
			this.ⵠΔΔⵠⵠ = 68;
			this.ⵠᐃᐃⲆΔ = 90;
			this.ΔⲆΔⵠᐃΔⲆ = 83
		};
		this.ΔΔΔⵠⵠᐃⵠ = function() {
			this.ⵠⲆⵠⲆᐃ = 65;
			this.ⵠΔΔⵠⵠ = 68;
			this.ⵠᐃᐃⲆΔ = 87;
			this.ᐃⵠᐃⲆᐃ = 83
		};
		this.ΔⵠⵠⲆΔ = 0, this.ΔⲆΔⵠᐃΔⲆ = 1, this.ⲆΔⵠⵠᐃᐃⵠ = 49;
		this.ⵠⲆΔΔΔⲆⲆ = 50;
		this.ⲆⵠΔᐃⲆΔⵠ = 51;
		this.ⵠⲆⲆΔⵠⵠⲆ = 52;
		this.ⵠⵠΔᐃⵠⵠⲆⲆⵠ = 53;
		this.ⵠⵠᐃΔᐃΔⲆ = ΔⲆᐃΔⵠ;
		this.ⵠⵠᐃΔⲆᐃᐃ = 37;
		this.ΔΔΔᐃᐃⵠⲆ = 39;
		this.ᐃΔⵠⵠⵠⵠΔ = 38;
		this.ᐃΔⵠΔᐃᐃⵠ = 40;
		this.ᐃⵠΔⵠΔᐃⵠ = 32;
		this.ⲆⵠⲆΔΔⵠⲆ = 82;
		this.ⲆⵠⲆⲆⲆⲆΔ = 71;
		this.ᐃⲆⲆⵠⲆΔⲆ = 86;
		this.ⲆΔᐃᐃΔⲆⲆ = 66;
		this.ΔΔΔⵠⵠᐃⵠ();
		this.keys = new Array(ΔΔΔⵠᐃⵠⵠ);
		for (var ᐃⲆ = ΔΔᐃ; 255 > ᐃⲆ; ᐃⲆ++) this.keys[ᐃⲆ] = this.ΔⵠⵠⲆΔ;
		this.up = function(ⵠᐃᐃΔ) {
			var ΔᐃⲆᐃ = Math.min(ⵠᐃᐃΔ.charCode || ⵠᐃᐃΔ.keyCode, 255);
			this.keys[ΔᐃⲆᐃ] = this.ΔⵠⵠⲆΔ
		};
		this.down = function(ⵠᐃᐃΔ) {
			var ΔᐃⲆᐃ = Math.min(ⵠᐃᐃΔ.charCode || ⵠᐃᐃΔ.keyCode, ᐃᐃᐃΔᐃ);
			if (ΔᐃⲆᐃ == this.ⵠⲆⵠⲆᐃ || ΔᐃⲆᐃ == this.ⵠⵠᐃΔⲆᐃᐃ) this.ᐃⵠᐃΔᐃᐃⵠ();
			else if (this.ⵠᐃᐃⲆΔ == ΔᐃⲆᐃ || ΔᐃⲆᐃ == this.ᐃΔⵠⵠⵠⵠΔ) this.ΔⲆⵠΔΔΔⲆ();
			else if (this.ΔⲆΔⵠᐃΔⲆ == ΔᐃⲆᐃ || ΔᐃⲆᐃ == this.ⵠⵠⵠᐃᐃⲆᐃΔⵠ) this.ᐃΔΔΔⲆⲆᐃ();
			else(ΔᐃⲆᐃ == this.ⵠΔΔⵠⵠ || this.ΔΔΔᐃᐃⵠⲆ == ΔᐃⲆᐃ) && this.ΔᐃΔΔΔⵠᐃ();
			this.keys[ΔᐃⲆᐃ] = this.ΔⲆΔⵠᐃΔⲆ;
			return ΔᐃⲆᐃ
		};
		this.ᐃⵠᐃΔᐃᐃⵠ = function() {
			this.keys[this.ⵠΔΔⵠⵠ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ΔΔΔᐃᐃⵠⲆ] = this.ΔⵠⵠⲆΔ
		};
		this.ΔᐃΔΔΔⵠᐃ = function() {
			this.keys[this.ⵠⲆⵠⲆᐃ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ⵠⵠᐃΔⲆᐃᐃ] = this.ΔⵠⵠⲆΔ
		};
		this.ᐃΔΔΔⲆⲆᐃ = function() {
			this.keys[this.ⵠᐃᐃⲆΔ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ᐃΔⵠⵠⵠⵠΔ] = this.ΔⵠⵠⲆΔ
		};
		this.ΔⲆⵠΔΔΔⲆ = function() {
			this.keys[this.ᐃⵠᐃⲆᐃ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ᐃΔⵠΔᐃᐃⵠ] = this.ΔⵠⵠⲆΔ
		};
		this.ᐃᐃΔΔⲆⲆⲆ = function() {
			this.keys[this.ⵠΔΔⵠⵠ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ΔΔΔᐃᐃⵠⲆ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ⵠⲆⵠⲆᐃ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ⵠⵠᐃΔⲆᐃᐃ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ⵠᐃᐃⲆΔ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ᐃΔⵠⵠⵠⵠΔ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ᐃⵠᐃⲆᐃ] = this.ΔⵠⵠⲆΔ;
			this.keys[this.ᐃΔⵠΔᐃᐃⵠ] = this.ΔⵠⵠⲆΔ
		};
		this.ⵠᐃΔΔᐃⲆⵠ = function() {
			return this.keys[this.ⵠⲆⵠⲆᐃ] || this.keys[this.ⵠⵠᐃΔⲆᐃᐃ]
		};
		this.ⲆⵠⵠΔⲆⵠⵠ = function() {
			return this.keys[this.ⵠΔΔⵠⵠ] || this.keys[this.ΔΔΔᐃᐃⵠⲆ]
		};
		this.ⵠⲆᐃᐃΔⲆⲆ = function() {
			return this.keys[this.ⵠᐃᐃⲆΔ] || this.keys[this.ᐃΔⵠⵠⵠⵠΔ]
		};
		this.ᐃᐃⵠⵠⲆᐃᐃ = function() {
			return this.keys[this.ᐃⵠᐃⲆᐃ] || this.keys[this.ᐃΔⵠΔᐃᐃⵠ]
		};
		this.ᐃᐃᐃᐃΔΔⲆᐃⲆ = function() {
			return this.keys[this.ⵠⵠᐃΔᐃΔⲆ]
		};
		this.ⲆⵠⲆⵠⵠᐃΔⵠᐃ = function() {
			return this.keys[this.ⲆΔⵠⵠᐃᐃⵠ]
		};
		this.ΔΔⵠᐃⲆΔⲆΔⲆ = function() {
			return this.keys[this.ⵠⲆΔΔΔⲆⲆ]
		};
		this.ⵠΔⵠΔᐃΔᐃⵠΔ = function() {
			return this.keys[this.ⲆⵠΔᐃⲆΔⵠ]
		};
		this.ⲆⵠᐃⲆⵠΔᐃᐃⲆ = function() {
			return this.keys[this.ⵠⲆⲆΔⵠⵠⲆ]
		};
		this.ⵠᐃᐃⲆΔᐃᐃⲆᐃ = function() {
			return this.keys[this.ᐃⵠΔⵠΔᐃⵠ]
		};
		this.ⵠᐃⲆᐃⵠΔⵠⵠⵠ = function() {
			return this.keys[this.ⲆⵠⲆΔΔⵠⲆ]
		};
		this.ⵠⵠᐃⲆⵠᐃⵠⲆⵠ = function() {
			return this.keys[this.ⲆⵠⲆⲆⲆⲆΔ]
		};
		this.ΔᐃⵠⵠⲆᐃⵠⵠΔ = function() {
			return this.keys[this.ᐃⲆⲆⵠⲆΔⲆ]
		};
		this.ΔᐃΔᐃⵠᐃᐃΔⲆ = function() {
			return this.keys[this.ⲆΔᐃᐃΔⲆⲆ]
		}
	}

	function ⵠⲆⵠⲆΔΔΔ() {
		this.ΔⲆΔⵠᐃΔⲆ = 0, this.ΔⵠⵠⲆΔ = 1, this.IDLE = 2, this.ⵠⵠⵠⲆⲆᐃⲆ = ΔΔᐃ, this.ΔⵠⵠⲆⵠΔᐃⲆⲆ = 1, this.ᐃΔΔⵠ = {
			x: 0,
			y: ΔΔᐃ
		};
		this.ⵠⲆⵠⲆⲆΔᐃ = 0;
		this.ΔⲆΔⵠⲆΔⲆ = ΔΔᐃ;
		this.angle = 0;
		this.state = this.IDLE;
		this.ⵠⵠΔᐃ = this.ⵠⵠⵠⲆⲆᐃⲆ;
		this.down = function() {
			this.state = this.ΔⲆΔⵠᐃΔⲆ
		};
		this.up = function() {
			this.state = this.ΔⵠⵠⲆΔ
		};
		this.ⵠᐃⵠ = function() {
			if (this.ᐃΔΔⵠ.x != this.ⵠⲆⵠⲆⲆΔᐃ || this.ΔⲆΔⵠⲆΔⲆ != this.ᐃΔΔⵠ.y) {
				this.ⵠⲆⵠⲆⲆΔᐃ = this.ᐃΔΔⵠ.x;
				this.ΔⲆΔⵠⲆΔⲆ = this.ᐃΔΔⵠ.y;
				return ⲆⵠΔⵠΔ
			}
			return false
		}
	}
	const ᐃⵠΔᐃᐃᐃᐃⵠᐃ = ⲆⵠᐃⲆᐃΔΔ;
	var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[181]]("game_canvas");
	const ΔᐃΔᐃⵠ = ᐃᐃⲆᐃᐃ;
	const ⲆΔᐃⵠᐃ = ⵠΔⵠⵠⲆ;
	const ᐃⲆⲆΔΔⵠⲆ = ΔΔⲆⲆⲆ;
	const ΔⵠΔⲆ = ⵠᐃⵠⲆ;
	var Ⲇ = ΔΔ.getContext(ⵠ[140]);
	var Ⲇⵠⵠⵠ = ΔΔ.width;
	const ⲆⵠΔᐃΔⲆᐃ = ⵠᐃⲆⲆᐃΔⲆ;
	const Ⲇᐃⵠⵠᐃ = ΔⵠⵠΔⲆ;
	var ᐃΔⲆᐃ = ΔΔ.height;
	const ⵠⵠΔⵠΔ = ⲆΔΔΔᐃ;
	const ᐃⲆΔᐃΔΔΔ = ᐃⲆᐃⲆΔ;
	var ᐃΔΔᐃ = ΔΔ.width / ᐃᐃΔⵠ;
	var ⲆⲆΔⲆ = ΔΔ.height / ΔⲆⲆᐃ;
	var ᐃⵠⲆⲆⲆⵠᐃ = {
		x: ᐃΔΔᐃ,
		y: ⲆⲆΔⲆ
	};
	var ᐃ = ΔⲆᐃ;
	const ⵠᐃⵠΔ = ⵠⲆΔΔ;
	var ⵠⵠⲆⵠᐃΔΔ = 1;
	var ᐃΔΔⲆⲆⵠᐃ = -ᐃⵠ;
	var ⲆⵠⲆᐃΔΔⲆ;
	const ᐃⲆⵠⲆⲆ = ΔΔⲆⵠⵠ;
	var ᐃᐃᐃΔⵠᐃⵠ = "J" + ⵠΔᐃᐃⵠΔΔ;
	var ᐃⲆⲆΔΔᐃⲆ = "S" + ᐃⲆⵠΔⵠ;
	const ⲆΔᐃ = ⲆⵠⲆ;
	const Δⵠᐃᐃᐃ = ⲆⲆΔᐃᐃ;
	const ⲆⵠΔᐃⲆ = ⲆΔΔΔᐃ;
	const ᐃⵠⵠ = ΔⲆᐃ;
	const ⵠΔⵠⲆᐃⵠᐃ = ΔⵠᐃⵠΔΔΔ;
	const ᐃⲆⵠⲆⵠ = ᐃᐃⲆⵠⲆ;
	var ΔᐃⲆᐃΔᐃᐃ = ⲆⲆⲆⲆᐃᐃᐃ;
	const ⲆⲆᐃⵠ = Δᐃⵠⵠ;
	var ᐃⲆⵠΔⵠ;
	const ⵠⲆᐃΔⲆ = ᐃᐃΔⲆⵠ;
	var ⵠΔⲆⲆᐃΔᐃ;
	const ᐃⲆⲆΔᐃ = ᐃⵠⲆΔⲆ;
	var ᐃᐃⵠⵠⲆⵠⵠ = "O";
	const Δᐃⵠᐃᐃ = ᐃᐃⲆⵠⵠⲆᐃ;
	const ᐃᐃΔⲆⵠⲆΔ = ⵠΔⲆⲆᐃ;
	var ⲆᐃⲆⵠᐃⲆⵠ = ᐃᐃⵠⵠⲆⵠⵠ + "N";
	const ΔⵠⵠΔ = ⵠⲆⲆΔ;
	var ᐃⵠⵠⲆᐃᐃⲆ = "O";
	var ⵠΔⵠⵠΔⲆⵠ = ΔΔᐃ;
	var ⵠΔᐃᐃⵠΔΔ;
	const ΔⲆΔᐃ = ΔⵠΔⲆ;
	var ⲆᐃⵠⲆᐃᐃⲆ = ΔᐃⲆᐃΔᐃᐃ;
	const ⵠΔⵠⲆⲆ = ⲆΔᐃⲆⵠ;
	const ΔⲆⲆⲆᐃᐃⵠ = ΔⵠⲆⲆⲆⲆⵠ;
	var ᐃⲆⵠΔⵠ;
	const ΔⵠᐃΔⵠ = ⵠᐃΔᐃΔ;
	var ΔΔⵠⵠⵠᐃᐃ;
	const Ⲇⵠⵠⵠᐃ = ⲆⲆΔᐃᐃ;
	const ΔᐃⵠΔΔ = ⵠⲆⲆⲆⵠ;
	const ᐃⲆᐃⵠⵠ = ᐃⵠᐃᐃΔ;
	var ᐃⲆⲆΔΔᐃⲆ = "N";
	const ΔΔⵠᐃⵠⲆᐃ = ⲆᐃⲆΔⵠᐃⵠ;
	const ⵠⵠⲆΔᐃⵠⲆ = ⵠⵠⵠⵠΔ;
	var ΔⲆⲆᐃⵠⲆᐃ = "J";
	const ΔⲆᐃᐃⲆΔⵠ = ΔΔᐃΔⵠᐃⵠ;
	const ΔᐃⲆᐃⲆⲆΔⲆⵠ = 7102169;

	function ᐃⲆᐃΔᐃᐃΔ(ᐃᐃⵠΔⲆΔΔⵠΔ) {
		const ΔᐃⲆᐃⲆⲆΔⲆⵠ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
				ΔᐃⲆᐃⲆⲆΔⲆⵠ()
			}))
		};
		ΔᐃⲆᐃⲆⲆΔⲆⵠ()
	}
	const ᐃᐃⵠΔⲆΔΔⵠΔ = ᐃⲆᐃΔᐃᐃΔ + ";" + "let ᐃᐃⵠΔⲆΔΔⵠΔ = " + ᐃⲆᐃΔᐃᐃΔ + ";";
	const ᐃᐃⵠᐃⲆⲆΔ = ᐃᐃⵠΔⲆΔΔⵠΔ + "let ΔΔΔⲆⲆΔⲆ = 10092715; try { ΔΔΔⲆⲆΔⲆ = ᐃⲆᐃΔᐃᐃΔ; } catch (ΔᐃΔᐃᐃⵠⵠ) { ᐃᐃⵠΔⲆΔΔⵠΔ (); };";
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃᐃⵠᐃⲆⲆΔ, 0);
	var ᐃᐃⵠⵠⲆⵠⵠ = "O" + ⵠΔᐃᐃⵠΔΔ;
	const ⲆⵠⲆΔᐃΔⲆ = ΔΔⵠᐃⵠⲆᐃ;
	var ᐃᐃᐃΔⵠᐃⵠ;
	var ⵠΔⵠΔΔ = ⲆᐃⵠⲆᐃᐃⲆ;
	var ᐃⲆⵠⲆᐃⵠⵠ;
	var ⲆⵠⲆᐃΔΔⲆ;
	var ⵠⲆⲆᐃᐃⲆᐃ;
	var ᐃⵠΔᐃⵠᐃⵠ;
	var ᐃⲆⵠΔⵠ;
	const Δⵠⵠⵠ = ⲆⵠⲆⲆ;
	var ⵠΔᐃᐃⵠΔΔ;
	var ΔΔⲆⵠⲆΔⲆ = ⵠΔⵠΔΔ;
	const ⵠⲆⲆⵠⲆ = ᐃⲆⲆΔᐃ;
	const ᐃΔⲆⲆⲆᐃᐃ = ⵠΔⵠᐃⵠ;
	var ⲆᐃⲆⵠᐃⲆⵠ = "N" + ᐃⵠΔᐃⵠᐃⵠ;
	var ⲆᐃⲆⵠᐃⲆⵠ;
	var ᐃᐃⲆⵠᐃⲆⵠ = ΔΔⲆⵠⲆΔⲆ;
	var ⵠᐃⲆⲆⵠ;
	var ᐃᐃⵠⵠⲆⵠⵠ;
	var ⲆⵠⲆᐃΔΔⲆ;
	var ᐃⲆⵠⲆᐃⵠⵠ = "";
	const ΔᐃΔΔᐃ = ⲆᐃⲆᐃΔ;
	var ⲆΔΔΔⲆΔᐃ;
	var ᐃⲆΔᐃⵠⲆⲆ = ᐃᐃⲆⵠᐃⲆⵠ;
	var ΔⲆΔΔΔᐃⲆ;
	const ΔΔᐃⲆⲆ = ⵠᐃⵠⲆⵠ;
	var ᐃⲆⵠΔⵠ;
	var ⵠΔᐃᐃⵠΔΔ;
	var ΔᐃᐃⲆᐃⵠᐃ = ᐃⲆΔᐃⵠⲆⲆ;
	var ᐃᐃⵠⵠⲆⵠⵠ;
	const ⵠⵠᐃᐃⵠ = ᐃⵠᐃᐃΔ;
	const ᐃⵠᐃⲆⵠΔᐃ = Δⵠᐃⵠⵠ;
	const ⲆⲆΔⵠⲆΔⵠ = ⲆⲆΔᐃⵠᐃΔ;
	var ⲆᐃⵠΔᐃΔᐃ;
	const ⲆⲆᐃⲆⲆ = ΔⲆᐃΔⵠ;
	const ᐃᐃⵠⵠⵠ = ᐃᐃⲆᐃᐃ;
	var ᐃᐃᐃΔⵠᐃⵠ;
	var ⲆᐃⲆᐃⲆⵠⲆ = ΔᐃᐃⲆᐃⵠᐃ;
	const ΔⵠΔⲆᐃΔⵠ = ⲆⵠⵠΔⲆⵠⲆ;
	const ⵠⵠⲆᐃ = ⵠΔⲆΔ;
	const ΔⲆⲆⲆᐃ = ⵠⲆⵠⵠΔ;
	var ΔⲆⲆᐃⵠⲆᐃ = "O";
	const ᐃⵠⲆⵠⵠ = ᐃⲆⲆΔΔⵠⲆ;
	const ᐃⲆΔⲆΔⲆᐃ = ΔⵠⵠⵠⵠⵠΔ;
	const ⲆⲆⲆ = ⲆΔᐃ;
	var ⲆⵠⲆᐃΔΔⲆ = "J";
	var ᐃⲆⲆΔΔᐃⲆ;
	const Ⲇⵠⵠⵠᐃⵠᐃ = ⵠⲆⲆᐃⲆ;
	var ᐃᐃⲆᐃΔⵠᐃ;
	var ⲆⵠⲆᐃΔΔⲆ;
	const ᐃⵠΔ = ΔΔᐃ;
	var ⲆᐃⲆᐃⲆⵠⲆ = ΔᐃᐃⲆᐃⵠᐃ;
	var ᐃᐃⲆᐃΔⵠᐃ = "S";
	const ᐃⲆⲆᐃⵠⵠᐃ = ΔⲆᐃΔⵠ;
	const ⵠᐃⵠⵠᐃΔⲆ = ⲆΔᐃⲆⵠ;
	const ᐃᐃⲆⲆⲆ = ΔᐃⵠΔⵠ;
	const ΔⵠⵠⵠΔⵠⵠ = ⲆⲆΔᐃⵠᐃΔ;
	const ⵠᐃⵠⵠᐃΔᐃᐃⵠ = ᐃⲆⵠⵠᐃⵠⲆ;
	const ⵠⵠⲆ = ᐃⵠⵠ;
	const Ⲇᐃᐃᐃⵠ = ᐃⵠΔⵠⵠ;
	const ᐃⲆⵠⵠᐃ = ΔⵠⵠⵠⵠⵠΔ;
	const ⵠⵠᐃᐃΔⵠⵠ = ⵠᐃⲆⲆᐃΔⲆ;
	var ᐃⲆⲆⲆⵠΔᐃ = ⲆᐃⲆᐃⲆⵠⲆ;
	const ⵠⵠΔⵠ = ⵠᐃⵠⲆ;
	const ⵠⲆΔⲆᐃ = ⲆΔᐃⵠᐃ;
	const ⲆⵠᐃΔᐃ = ᐃΔⲆⲆⲆᐃᐃ;
	const ΔⲆⵠΔᐃ = ⲆⲆᐃⵠΔ;
	var ᐃⵠΔᐃⵠᐃⵠ;
	var ᐃᐃⵠⵠⵠⵠᐃ;
	var ᐃΔΔᐃⵠⲆΔ = ᐃⲆⲆⲆⵠΔᐃ;
	const ⲆᐃΔⵠⲆᐃᐃΔΔ = 13464891;
	const ᐃΔⲆⵠΔᐃᐃ = ⲆᐃΔⵠⲆᐃᐃΔΔ["ⵠᐃⲆⵠⲆΔΔ"];
	const ΔΔⲆΔΔⲆⲆⵠΔ = `const ᐃΔⵠΔⵠⲆⵠ = (typeof ⲆᐃᐃⵠᐃⵠΔ === "${ᐃΔⲆⵠΔᐃᐃ}") ? 1 : 0; return ᐃΔⵠΔⵠⲆⵠ;`;

	function ⲆᐃᐃⵠᐃⵠΔ() {
		ᐃΔⲆⵠΔᐃᐃ;
		ⲆᐃΔⵠⲆᐃᐃΔΔ();
		return ΔΔⲆΔΔⲆⲆⵠΔ
	}
	const ᐃΔⵠΔⵠⲆⵠ = 4897088;
	const ⵠΔᐃᐃΔⲆΔ = new Function(ⲆᐃᐃⵠᐃⵠΔ + ΔΔⲆΔΔⲆⲆⵠΔ);
	const ⵠⵠΔⲆⵠ = 11749261;
	if (ⵠΔᐃᐃΔⲆΔ(ᐃΔⵠΔⵠⲆⵠ, ⵠⵠΔⲆⵠ) === 1) {
		const ⲆᐃΔⵠⲆᐃᐃΔΔ = Math.random;
		const ⵠᐃⲆⵠⲆΔΔ = [];
		const ᐃΔⲆⵠΔᐃᐃ = function() {
			for (let ΔΔⲆΔΔⲆⲆⵠΔ = 0; ΔΔⲆΔΔⲆⲆⵠΔ < 603; ΔΔⲆΔΔⲆⲆⵠΔ++) ⵠᐃⲆⵠⲆΔΔ.push(ΔΔⲆΔΔⲆⲆⵠΔ);
			return ⲆᐃΔⵠⲆᐃᐃΔΔ()
		};
		Math.random = ᐃΔⲆⵠΔᐃᐃ
	}
	const ᐃⲆⵠⲆΔ = ᐃⵠΔⵠⵠ;
	const ⲆⲆΔᐃⵠ = ⲆⲆΔᐃᐃ;
	var ᐃⲆⵠΔⵠ = ⲆⵠⲆᐃΔΔⲆ + ᐃᐃⲆᐃΔⵠᐃ;
	const ᐃΔᐃⲆᐃⵠᐃ = ᐃᐃⲆΔⲆ;
	ΔΔ.oncontextmenu = function() {
		return ΔⲆⵠᐃⵠ
	};
	ᐃᐃᐃΔⵠᐃⵠ = ⲆⵠⲆᐃΔΔⲆ;
	const ⲆⲆᐃΔΔ = ΔⲆⲆⲆᐃ;
	const ᐃⲆⲆΔⵠ = ⵠⲆⲆᐃⲆ;
	ᐃⲆⵠⲆᐃⵠⵠ = ᐃᐃᐃΔⵠᐃⵠ;

	function ⵠᐃᐃ(ᐃΔⵠⲆ) {
		var ⵠⵠ = new Image;
		ⵠⵠ.src = ᐃΔⵠⲆ.toDataURL("image/png");
		ⵠⵠ.width = ᐃΔⵠⲆ.width;
		ⵠⵠ.height = ᐃΔⵠⲆ.height;
		ⵠⵠ.ⲆΔⲆΔᐃⵠΔ = ⵠⵠⲆ;
		return ⵠⵠ
	}
	ᐃᐃᐃΔⵠᐃⵠ = ᐃⲆⲆΔΔᐃⲆ;
	const ⲆΔⵠⵠⲆ = ⵠⵠΔⵠΔ;
	const ΔⲆⲆΔⲆᐃᐃ = ΔᐃΔΔΔⲆⵠ;
	const ⵠΔΔᐃᐃ = ⲆΔᐃΔⲆ;
	ΔⲆⲆᐃⵠⲆᐃ = ΔⲆⲆᐃⵠⲆᐃ + ᐃᐃᐃΔⵠᐃⵠ;
	const ⲆⵠΔΔⵠ = ᐃⲆⵠⲆⲆ;
	const ⲆΔᐃΔ = Δᐃⵠⵠ;
	ᐃⵠⵠⲆᐃᐃⲆ = ᐃⲆⵠΔⵠ + ΔⲆⲆᐃⵠⲆᐃ;
	const ᐃᐃΔⲆⲆ = ᐃⲆᐃΔΔ;
	ⵠΔⲆⲆᐃΔᐃ = ᐃⵠⵠⲆᐃᐃⲆ;
	ᐃᐃⵠⵠⲆⵠⵠ = ⲆᐃⲆⵠᐃⲆⵠ;
	const ΔⲆⲆⵠⵠ = ⲆΔΔⲆΔ;
	const ᐃΔΔᐃⵠΔᐃ = ᐃᐃᐃΔᐃ;
	ΔΔⵠⵠⵠᐃᐃ = ⵠΔⲆⲆᐃΔᐃ;
	const ⵠⲆⲆᐃⵠΔⲆ = ΔᐃᐃΔⲆⵠΔ;
	ⲆᐃⲆⵠᐃⲆⵠ = ⵠΔᐃᐃⵠΔΔ;
	const ᐃⵠᐃΔ = ⵠΔⲆⵠ;
	const ⵠⵠⵠᐃⲆⲆⵠ = ΔⲆⲆⲆᐃᐃⵠ;
	ⵠΔᐃᐃⵠΔΔ = ᐃⲆⵠΔⵠ;
	ⵠᐃⲆⲆⵠ = ᐃⲆⵠΔⵠ + ΔⲆⲆᐃⵠⲆᐃ;
	ⵠΔᐃᐃⵠΔΔ = ᐃⲆⵠΔⵠ;
	ᐃᐃⵠⵠⲆⵠⵠ = ᐃⲆⵠΔⵠ;
	ⵠⲆⲆᐃᐃⲆᐃ = ⵠᐃⲆⲆⵠ;
	ᐃⲆⲆΔΔᐃⲆ = ΔⲆⲆᐃⵠⲆᐃ + ᐃᐃᐃΔⵠᐃⵠ;
	const ⵠΔΔΔⲆ = ⲆⵠΔⵠΔ;
	ⲆΔΔΔⲆΔᐃ = ⵠΔⲆⲆᐃΔᐃ;
	const ΔΔΔΔⵠ = ⵠᐃⲆⲆᐃΔⲆ;
	ᐃᐃⵠⵠⲆⵠⵠ = ᐃⲆⵠΔⵠ + ΔⲆⲆᐃⵠⲆᐃ;
	const ⵠⲆⵠⵠ = Δᐃᐃᐃ;
	ΔⲆΔΔΔᐃⲆ = ᐃⵠⵠⲆᐃᐃⲆ;
	const ⵠⲆⲆⵠΔ = ΔᐃΔΔᐃ;
	const ΔⵠⲆᐃΔᐃᐃⲆᐃ = String.fromCharCode;
	const ΔΔΔⵠⵠⲆⵠ = 101;
	const ⲆⲆᐃⲆᐃᐃⵠ = 118;
	const ⵠΔⲆᐃⲆΔⵠ = "ΔⵠⵠΔΔΔⲆΔⵠ";
	const ⵠᐃᐃⵠⲆᐃⲆⲆᐃ = 97;
	const ᐃⵠⵠᐃⲆᐃⲆ = 108;
	const ⵠⵠΔⵠⵠΔᐃ = ΔⵠⲆᐃΔᐃᐃⲆᐃ(ΔΔΔⵠⵠⲆⵠ);
	const ⵠⲆⵠΔᐃⲆΔ = ΔⵠⲆᐃΔᐃᐃⲆᐃ(ⲆⲆᐃⲆᐃᐃⵠ);

	function ΔⵠⵠΔΔΔⲆΔⵠ() {
		ΔⲆᐃᐃⲆᐃⵠ = ΔⵠⵠΔΔΔⲆΔⵠ;
		return ΔⵠⵠΔΔΔⲆΔⵠ
	}
	const ⵠⲆᐃᐃⵠⲆᐃᐃⵠ = ΔⵠⲆᐃΔᐃᐃⲆᐃ(ⵠᐃᐃⵠⲆᐃⲆⲆᐃ);
	const ΔΔⵠᐃΔΔΔ = ΔⵠⲆᐃΔᐃᐃⲆᐃ(ᐃⵠⵠᐃⲆᐃⲆ);
	const ⲆᐃⲆᐃⵠⵠⲆⵠΔ = ⵠⵠΔⵠⵠΔᐃ + ⵠⲆⵠΔᐃⲆΔ + ⵠⲆᐃᐃⵠⲆᐃᐃⵠ + ΔΔⵠᐃΔΔΔ;
	const ᐃᐃΔⵠᐃΔⵠᐃⵠ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆᐃⲆᐃⵠⵠⲆⵠΔ];
	const ᐃⲆⵠⲆᐃΔⲆ = ᐃᐃΔⵠᐃΔⵠᐃⵠ(ΔⵠⵠΔΔΔⲆΔⵠ + "try{" + ⵠΔⲆᐃⲆΔⵠ + "();0;}catch(ⵠⲆᐃᐃⵠⲆᐃᐃⵠ){1;}");
	if (ᐃⲆⵠⲆᐃΔⲆ) {
		const ΔⵠⲆᐃΔᐃᐃⲆᐃ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]];
		const ΔΔΔⵠⵠⲆⵠ = ΔⵠⲆᐃΔᐃᐃⲆᐃ;
		const ⲆⲆᐃⲆᐃᐃⵠ = function() {
			ΔⵠⲆᐃΔᐃᐃⲆᐃ(ⲆⲆᐃⲆᐃᐃⵠ, 9656);
			ΔΔΔⵠⵠⲆⵠ(ⲆⲆᐃⲆᐃᐃⵠ, 7818)
		};
		ⲆⲆᐃⲆᐃᐃⵠ()
	}
	ⲆᐃⲆⵠᐃⲆⵠ = ᐃⲆⵠΔⵠ + ΔⲆⲆᐃⵠⲆᐃ;
	const ᐃᐃΔⲆΔⵠⵠ = ⵠᐃⵠⲆⵠ;
	const ᐃⲆᐃᐃΔ = ⵠᐃⲆⵠ;
	ⲆᐃⵠΔᐃΔᐃ = ΔΔⵠⵠⵠᐃᐃ;
	ΔⲆⲆᐃⵠⲆᐃ = ⵠΔᐃᐃⵠΔΔ;
	const ᐃΔⵠⲆΔᐃᐃ = ΔᐃᐃΔⲆⵠΔ;
	ᐃᐃⲆᐃΔⵠᐃ = ᐃⵠⵠⲆᐃᐃⲆ;
	const ΔΔⲆᐃⵠ = ⲆⵠΔΔⵠ;
	const ΔⵠᐃΔΔ = ΔⲆⲆⲆⲆ;
	const ⵠᐃⵠⵠΔ = ⵠΔⵠⲆⲆ;
	ᐃᐃⵠⵠⵠⵠᐃ = ⵠΔⲆⲆᐃΔᐃ;
	ᐃᐃᐃΔⵠᐃⵠ = ᐃᐃⵠⵠⲆⵠⵠ;
	var devicePixelRatio = ⲆⲆⲆⲆᐃᐃᐃ.devicePixelRatio || ⵠⲆⲆ;
	const ΔⲆⵠ = ⲆΔᐃ;
	var ᐃΔᐃΔⵠΔᐃ = Ⲇ.ⲆᐃΔⵠⵠⵠⵠⵠᐃ || Ⲇ.ᐃⲆΔᐃⲆΔⲆΔᐃ || Ⲇ.ⵠᐃᐃᐃᐃᐃΔⵠᐃ || Ⲇ.ΔΔⲆΔΔⲆᐃΔᐃ || Ⲇ.ΔⵠΔΔᐃᐃⲆⵠⵠ || 1;

	function ⲆⵠⲆⲆⲆⵠᐃ() {
		if (ΔΔ.width != ⲆⲆⲆⲆᐃᐃᐃ.innerWidth) {
			ΔΔ.width = ⲆⲆⲆⲆᐃᐃᐃ.innerWidth;
			Ⲇⵠⵠⵠ = ΔΔ.width;
			ᐃΔΔᐃ = ΔΔ.width / 2
		}
		ⲆⲆⲆⲆᐃᐃᐃ.innerHeight != ΔΔ.height && (ΔΔ.height = ⲆⲆⲆⲆᐃᐃᐃ.innerHeight, ᐃΔⲆᐃ = ΔΔ.height, ⲆⲆΔⲆ = ΔΔ.height / ⵠⲆΔΔ);
		ᐃⵠⲆⲆⲆⵠᐃ = {
			x: ᐃΔΔᐃ,
			y: ⲆⲆΔⲆ
		};
		var ⲆᐃΔⵠⵠΔΔ = ΔΔ.width;
		var ᐃⲆⵠⲆΔⲆΔ = ΔΔ.height;
		if (-ⵠⲆⲆ === ᐃΔΔⲆⲆⵠᐃ) ⵠⵠⲆⵠᐃΔΔ = devicePixelRatio / ᐃΔᐃΔⵠΔᐃ;
		else ⵠⵠⲆⵠᐃΔΔ = ᐃΔΔⲆⲆⵠᐃ;
		ΔΔ.width = ⲆᐃΔⵠⵠΔΔ * ⵠⵠⲆⵠᐃΔΔ;
		ΔΔ.height = ⵠⵠⲆⵠᐃΔΔ * ᐃⲆⵠⲆΔⲆΔ;
		ΔΔ.style.width = ⲆᐃΔⵠⵠΔΔ + ⵠ[454];
		ΔΔ.style.height = ᐃⲆⵠⲆΔⲆΔ + ⵠ[454];
		Ⲇ.scale(ⵠⵠⲆⵠᐃΔΔ, ⵠⵠⲆⵠᐃΔΔ);
		if (ⲆΔⲆ) {
			ⲆΔⲆ.ⵠΔΔ.ⵠⲆΔΔⵠⲆΔ = ⲆᐃΔⵠⵠΔΔ;
			ⲆΔⲆ.ⵠΔΔ.ⲆⲆⲆΔΔⲆᐃ = ᐃⲆⵠⲆΔⲆΔ
		}
		if (ΔⵠᐃᐃⵠΔΔ.ⲆΔΔⲆᐃ) ΔⵠᐃᐃⵠΔΔ.ⵠᐃⵠ();
		else if (ᐃᐃΔΔ.ⲆΔΔⲆᐃ) ᐃᐃΔΔ.ⵠᐃⵠ();
		else if (ⵠΔᐃⵠ.ⲆΔΔⲆᐃ) ⵠΔᐃⵠ.ⵠᐃⵠ();
		else if (ΔⲆΔⵠⲆᐃᐃ.ⲆΔΔⲆᐃ) ΔⲆΔⵠⲆᐃᐃ.ⵠᐃⵠ()
	}
	const ΔⲆᐃⵠΔ = ⵠⲆⲆⲆⵠ;
	var ΔΔⵠΔⲆᐃᐃ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[166]);
	ΔΔⵠΔⲆᐃᐃ.ondragstart = function() {
		return ⲆΔᐃⵠⲆ
	};
	ΔΔⵠΔⲆᐃᐃ.ondrop = function() {
		return false
	};
	ΔΔⵠΔⲆᐃᐃ.onresize = ⲆⵠⲆⲆⲆⵠᐃ;
	(function() {
		var ᐃⲆᐃⲆⲆⲆΔ = 0;
		var ᐃⲆᐃⲆΔΔᐃ = ["ms", "moz", "webkit", "o"];
		for (var ᐃᐃΔ = 0; ᐃⲆᐃⲆΔΔᐃ.length > ᐃᐃΔ && !ⲆⲆⲆⲆᐃᐃᐃ.requestAnimationFrame; ++ᐃᐃΔ) {
			ⲆⲆⲆⲆᐃᐃᐃ.requestAnimationFrame = ⲆⲆⲆⲆᐃᐃᐃ[ᐃⲆᐃⲆΔΔᐃ[ᐃᐃΔ] + "RequestAnimationFrame"];
			ⲆⲆⲆⲆᐃᐃᐃ.cancelAnimationFrame = ⲆⲆⲆⲆᐃᐃᐃ[ᐃⲆᐃⲆΔΔᐃ[ᐃᐃΔ] + "CancelAnimationFrame"] || ⲆⲆⲆⲆᐃᐃᐃ[ᐃⲆᐃⲆΔΔᐃ[ᐃᐃΔ] + "CancelRequestAnimationFrame"]
		}
		if (!ⲆⲆⲆⲆᐃᐃᐃ.requestAnimationFrame) ⲆⲆⲆⲆᐃᐃᐃ.requestAnimationFrame = function(callback, ⵠΔᐃΔⲆΔᐃΔⵠ) {
			var ⵠΔⲆᐃᐃⵠⲆ = (new Date).getTime();
			var ⲆᐃⵠⲆΔⲆᐃ = Math.max(0, ᐃΔᐃᐃⲆ - (ⵠΔⲆᐃᐃⵠⲆ - ᐃⲆᐃⲆⲆⲆΔ));
			var ⲆΔ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]]((function() {
				callback(ⵠΔⲆᐃᐃⵠⲆ + ⲆᐃⵠⲆΔⲆᐃ)
			}), ⲆᐃⵠⲆΔⲆᐃ);
			ᐃⲆᐃⲆⲆⲆΔ = ⵠΔⲆᐃᐃⵠⲆ + ⲆᐃⵠⲆΔⲆᐃ;
			return ⲆΔ
		};
		if (!ⲆⲆⲆⲆᐃᐃᐃ.cancelAnimationFrame) ⲆⲆⲆⲆᐃᐃᐃ.cancelAnimationFrame = function(ⲆΔ) {
			clearTimeout(ⲆΔ)
		}
	})();
	const ΔⵠΔⵠᐃⵠⲆ = ᐃⲆⵠⵠᐃ;
	const ⲆⲆᐃΔⲆ = ⲆⲆⵠⲆⵠ;
	const ΔⲆΔⲆ = ᐃΔᐃΔ;
	const ⵠᐃⲆⵠᐃᐃΔ = function() {
		let ΔΔⲆⵠΔ = ΔΔᐃ;
		let ⵠΔᐃΔᐃⵠᐃ = ⲆⵠⲆ;
		let ᐃΔⲆⵠⵠⲆᐃ = 0;
		const ΔⵠⵠΔⲆⲆᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 116, 97, 99, 107]);
		const ΔΔⲆⲆⲆΔⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([67, 97, 110, 118, 97, 115, 82, 101, 110, ⲆⲆⵠⵠⲆ, 101, 114, 105, 110, 103, 67, 111, 110, 116, 101, 120, 116, 50, 68]);
		const ⲆΔⲆΔᐃΔⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([112, 114, 111, 116, 111, 116, 121, 112, 101]);
		const ΔⵠΔⵠΔΔⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([ᐃΔⵠΔᐃ, 114, 97, 119, 73, 109, 97, 103, 101]);
		const ᐃⲆⵠΔⲆⵠⲆⲆⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([103, 108, 111, 98, 97, 108, 65, 108, 112, 104, 97]);
		const ΔᐃᐃΔⵠⵠⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([117, 115, 101, 114, 115, 99, 114, 105, 112, 116]);
		const ΔΔⲆⲆⵠᐃⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([105, 110, ⲆⲆⵠⵠⲆ, 101, 120, 79, 102]);
		const ᐃᐃᐃⲆⲆⲆᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([77, 97, 116, 104]);
		const ⲆⵠᐃᐃⵠⲆᐃΔᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([99, 101, 105, 108]);
		const ΔⵠⵠΔᐃⲆΔ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([102, 108, 111, 111, 114]);
		const Δᐃⵠⵠⵠⵠⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([87, 101, 98, 83, 111, 99, 107, 101, 116]);
		const ⲆΔⲆⵠᐃⵠⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 110, 100]);
		const ⲆΔⵠΔⵠⵠΔ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 105, 103, 110]);
		const ⲆⲆΔΔᐃⲆⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([102, 105, 108, 108, 82, 101, 99, 116]);
		const ΔᐃᐃⲆᐃⵠⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([103, 117, 105, 102, 121]);
		const ΔⵠᐃΔⵠⵠⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([101, 118, 97, 108]);
		const ⵠΔⲆⲆⵠⵠᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 88, 114, 97, 121]);
		const ᐃΔⵠⲆᐃᐃⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([ⵠΔᐃΔⲆ]);
		const ᐃΔᐃᐃⵠΔⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 67, 111, 108, 111, 114, 101, ⵠΔⵠⲆⲆ, 83, 112, 105, 107, 101, 115]);
		const ⵠᐃΔᐃᐃⵠᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 83, 112, 105, 107, 101]);
		const ΔΔⲆΔⵠΔⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 70, 101, 101, ⵠΔⵠⲆⲆ]);
		const ᐃⵠΔⲆⵠⵠΔ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 67, 114, 97, 102, 116]);
		const ⵠⵠⵠᐃᐃⵠΔ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 82, 101, 99, 121, 99, 108, 101]);
		const ΔΔⲆⲆⲆⵠΔ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 65, 117, 116, 111, 84, 111, 116, 101, 109]);
		const ΔΔᐃⵠΔⵠᐃᐃⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([115, 101, 116, 116, 105, 110, 103, 115, 46, 69, 120, 116, 114, 97, 99, 116, 111, 114, 73, 110, 102, 111]);
		const ⲆΔΔⵠⲆΔᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([83, 97, 110, 100, 115, 116, 111, 114, 109, 73, 109, 97, 103, 101]);
		const ΔⵠⵠΔΔⲆⵠ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([116, 111, 83, 116, 114, 105, 110, 103]);
		const ⵠᐃⵠᐃΔΔⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([66, 108, 105, 122, 122, 97, 114, ⵠᐃⵠⵠᐃΔⲆ, 73, 109, 97, 103, 101]);
		const ΔᐃⲆⲆΔᐃⲆ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([67, 66, 79]);
		const ⲆⲆⲆᐃΔⲆᐃ = Ⲇᐃⵠ.ⵠᐃᐃΔⵠ([76, 69, 69, 84, 95, 83, 67, 82, 73, 80, 84, 95, 69, 88, 84, 69, 82, 78, 65, 76]);

		function ᐃⵠⵠⲆΔⲆⵠ(ⲆⵠᐃᐃΔᐃⵠ) {
			try {
				new ⲆⵠᐃᐃΔᐃⵠ
			} catch (ⲆΔΔⵠᐃᐃⲆ) {
				return ⲆΔΔⵠᐃᐃⲆ[ΔⵠⵠΔⲆⲆᐃ][ΔΔⲆⲆⵠᐃⲆ](ΔᐃᐃΔⵠⵠⵠ) !== -ⵠⲆⲆ ? 1 : 0
			}
			return 0
		}

		function ⲆᐃᐃⲆΔᐃⲆ() {
			ᐃΔⲆⵠⵠⲆᐃ++;
			if (ᐃΔⲆⵠⵠⲆᐃ > 1e3) {
				ᐃΔⲆⵠⵠⲆᐃ = Δⵠⵠ;
				ΔΔⲆⵠΔ = ΔΔⲆᐃΔΔⲆ(ⲆⲆⲆⲆᐃᐃᐃ[ΔΔⲆⲆⲆΔⵠ][ⲆΔⲆΔᐃΔⲆ][ΔⵠΔⵠΔΔⲆ]) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔΔⲆᐃΔΔⲆ(ⲆⲆⲆⲆᐃᐃᐃ[ΔΔⲆⲆⲆΔⵠ][ⲆΔⲆΔᐃΔⲆ][ⲆⲆΔΔᐃⲆⲆ]) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔΔⲆᐃΔΔⲆ(ⲆⲆⲆⲆᐃᐃᐃ[Δᐃⵠⵠⵠⵠⵠ][ⲆΔⲆΔᐃΔⲆ][ⲆΔⲆⵠᐃⵠⲆ]) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ⲆⵠⵠⵠⲆΔⲆ(ᐃⵠⵠⲆΔⲆⵠ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ᐃⵠⵠⲆΔⲆⵠ(ⲆⲆⲆⲆᐃᐃᐃ[Δᐃⵠⵠⵠⵠⵠ]) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⲆⲆⲆᐃΔⲆᐃ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ΔᐃⲆⲆΔᐃⲆ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⵠΔⲆⲆⵠⵠᐃ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ᐃΔᐃᐃⵠΔⵠ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⵠᐃΔᐃᐃⵠᐃ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ΔΔⲆΔⵠΔⵠ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ᐃⵠΔⲆⵠⵠΔ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⵠⵠⵠᐃᐃⵠΔ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ΔΔⲆⲆⲆⵠΔ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ΔΔⲆⲆⲆⵠΔ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⲆΔΔⵠⲆΔᐃ) || ΔΔⲆⵠΔ;
				ΔΔⲆⵠΔ = ΔᐃⲆΔᐃ(ⵠᐃⵠᐃΔΔⲆ) || ΔΔⲆⵠΔ;
				if (undefined !== ⲆⲆⲆⲆᐃᐃᐃ[ΔᐃᐃⲆᐃⵠⵠ]) ΔΔⲆⵠΔ = 1
			}
			if (ΔΔⲆⵠΔ === ᐃⵠⵠ) {
				ⵠΔᐃΔᐃⵠᐃ++;
				1e4 < ⵠΔᐃΔᐃⵠᐃ && (ⵠΔᐃΔᐃⵠᐃ = ⲆⲆⲆ, ⲆⲆⲆⲆᐃᐃᐃ[ᐃᐃᐃⲆⲆⲆᐃ][ΔⵠⵠΔᐃⲆΔ] = ⲆⲆⲆⲆᐃᐃᐃ[ᐃᐃᐃⲆⲆⲆᐃ][ⲆΔⵠΔⵠⵠΔ])
			}
		}

		function ⲆⵠⵠⵠⲆΔⲆ(ⲆⵠᐃᐃΔᐃⵠ) {
			if (ⲆⵠᐃᐃΔᐃⵠ && ⲆⵠᐃᐃΔᐃⵠ[ΔⵠⵠΔΔⲆⵠ]) {
				const ⵠΔⲆᐃⵠΔᐃ = ⲆⵠᐃᐃΔᐃⵠ[ΔⵠⵠΔΔⲆⵠ]();
				if (ⵠΔⲆᐃⵠΔᐃ[ΔΔⲆⲆⵠᐃⲆ](ᐃΔⵠⲆᐃᐃⵠ) !== -ᐃⵠⵠ) return ΔⲆᐃ
			}
			return ᐃⵠΔ
		}

		function ⵠⲆᐃΔΔΔⵠ() {
			return ΔΔⲆⵠΔ
		}

		function ΔᐃⲆΔᐃ(ⲆΔΔΔΔⵠΔ) {
			try {
				ⲆⲆⲆⲆᐃᐃᐃ[ΔⵠᐃΔⵠⵠⲆ](ⲆΔΔΔΔⵠΔ);
				return 1
			} catch (ΔΔⵠ) {
				return Δⵠⵠ
			}
		}

		function ΔΔⲆᐃΔΔⲆ(ⲆⵠᐃᐃΔᐃⵠ) {
			try {
				ⲆⵠᐃᐃΔᐃⵠ()
			} catch (ⲆΔΔⵠᐃᐃⲆ) {
				return ⲆΔΔⵠᐃᐃⲆ[ΔⵠⵠΔⲆⲆᐃ][ΔΔⲆⲆⵠᐃⲆ](ΔᐃᐃΔⵠⵠⵠ) !== -1 ? ⵠⵠⲆ : Δⵠⵠ
			}
			return 0
		}
		return {
			"ⲆᐃᐃⲆΔᐃⲆ": ⲆᐃᐃⲆΔᐃⲆ,
			"ⵠⲆᐃΔΔΔⵠ": ⵠⲆᐃΔΔΔⵠ
		}
	}();
	const ᐃⵠⵠᐃⲆᐃⵠ = ΔⲆᐃᐃⲆΔⵠ;
	const ⵠΔΔᐃΔ = ⵠⵠⵠⵠΔ;
	var ⵠᐃⲆⵠᐃ = navigator.language || navigator.userLanguage;
	var ⲆⵠΔⵠⵠ = -((new Date).getTimezoneOffset() / 60);
	const ΔΔᐃⵠΔΔⵠ = ᐃⵠᐃᐃΔ;
	var ⲆΔΔⲆⲆΔⲆ = "Europe";
	var ⲆᐃΔⵠⲆⵠᐃ = "Russia";
	const ⲆΔΔᐃᐃ = ᐃΔⵠⲆΔ;
	const ⲆΔⲆᐃⲆ = ΔΔΔⲆⲆ;
	const ᐃΔᐃⵠΔ = ΔᐃᐃΔᐃ;
	const ᐃⲆⵠΔΔ = ⵠΔⵠⲆⲆ;
	var ⵠᐃⵠᐃⲆΔΔ = "North America";
	var ΔⵠᐃᐃΔⵠⲆ = "South America";
	const ⵠⲆⲆⵠⲆᐃⵠ = ⵠᐃⵠⲆΔⲆⲆ;
	const ΔⲆⲆⵠᐃⵠΔⲆᐃ = Ⲇᐃᐃᐃⵠᐃⵠ;
	var ⲆⲆⲆⲆⲆΔⲆ = "West America";
	const ⵠⲆⲆᐃⲆᐃΔ = ΔΔⵠᐃⵠⲆᐃ;
	var ⵠⲆⲆⵠΔΔΔ = "Asia";
	const ΔΔⵠΔ = ⵠΔΔΔ;
	var ᐃⵠᐃⵠᐃⵠⲆ = "Australia";
	var ΔⲆⲆΔᐃΔᐃ = ⲆΔΔⲆⲆΔⲆ;
	if (-2 <= ⲆⵠΔⵠⵠ && ⲆⵠΔⵠⵠ <= ⵠΔⵠᐃ) ΔⲆⲆΔᐃΔᐃ = ⲆΔΔⲆⲆΔⲆ;
	else if (ⵠⲆΔΔ < ⲆⵠΔⵠⵠ && ⲆⵠΔⵠⵠ <= ⲆⲆᐃⵠ) ΔⲆⲆΔᐃΔᐃ = ⲆᐃΔⵠⲆⵠᐃ;
	else if (5 < ⲆⵠΔⵠⵠ && ⲆⵠΔⵠⵠ <= ᐃᐃⲆⲆⲆ) ΔⲆⲆΔᐃΔᐃ = ⵠⲆⲆⵠΔΔΔ;
	else if (ⲆⵠΔⵠⵠ > 9) ΔⲆⲆΔᐃΔᐃ = ᐃⵠᐃⵠᐃⵠⲆ;
	else if (ⲆⵠΔⵠⵠ >= -5 && ⲆⵠΔⵠⵠ < -2) {
		ⵠᐃⲆⵠᐃ === "pt-BR" || "pt-br" === ⵠᐃⲆⵠᐃ || ⵠᐃⲆⵠᐃ === "pt" || ⵠᐃⲆⵠᐃ === "pt-pt" ? ΔⲆⲆΔᐃΔᐃ = ΔⵠᐃᐃΔⵠⲆ : ΔⲆⲆΔᐃΔᐃ = ⵠᐃⵠᐃⲆΔΔ
	} else if (ⲆⵠΔⵠⵠ < -5) {
		if (ⵠᐃⲆⵠᐃ === "pt-BR" || "pt-br" === ⵠᐃⲆⵠᐃ || "pt" === ⵠᐃⲆⵠᐃ || ⵠᐃⲆⵠᐃ === "pt-pt") ΔⲆⲆΔᐃΔᐃ = ΔⵠᐃᐃΔⵠⲆ;
		else ΔⲆⲆΔᐃΔᐃ = ⲆⲆⲆⲆⲆΔⲆ
	}
	const ⲆᐃᐃⲆΔ = ᐃⲆᐃⵠⵠ;
	const ΔⲆⲆΔ = ⲆΔᐃΔ;
	var ᐃⵠᐃΔⲆ = function() {
		function ⲆᐃΔΔⵠΔⵠ(ⵠⲆΔⵠⵠ) {
			var Δᐃⵠᐃ = 2147483648;
			var ⵠⵠⵠ = 1103515245;
			var ᐃΔⵠⲆ = 12345;
			var ⲆⲆⵠⲆ = ⵠⲆΔⵠⵠ ? ⵠⲆΔⵠⵠ : Math.floor((Δᐃⵠᐃ - 1) * Math.random());
			this.ⲆΔⲆΔΔ = function(ⵠⲆΔⵠⵠ) {
				ⲆⲆⵠⲆ = ⵠⲆΔⵠⵠ ? ⵠⲆΔⵠⵠ : Math.floor((Δᐃⵠᐃ - ⵠⵠⲆ) * Math.random())
			};
			this.get = function() {
				ⲆⲆⵠⲆ = (ⲆⲆⵠⲆ * ⵠⵠⵠ + ᐃΔⵠⲆ) % Δᐃⵠᐃ;
				return ⲆⲆⵠⲆ / Δᐃⵠᐃ
			}
		}
		return {
			"ⲆᐃΔΔⵠΔⵠ": ⲆᐃΔΔⵠΔⵠ
		}
	}();
	const ΔⲆᐃⵠΔΔΔ = ΔΔᐃᐃΔΔⵠ;

	function ⲆᐃⲆᐃΔⲆᐃ(ⵠΔⲆΔΔᐃᐃ, ⵠⲆⵠΔᐃᐃⲆ, ⲆⲆⵠᐃᐃΔΔ) {
		ⵠΔΔᐃΔⵠᐃ(ᐃΔΔΔⲆ, ⵠΔⲆΔΔᐃᐃ, ⵠⲆⵠΔᐃᐃⲆ, ⲆⲆⵠᐃᐃΔΔ);
		const ΔⲆΔⵠⵠΔᐃ = ᐃΔᐃⵠΔᐃⲆ(ⲆᐃΔⲆ[ᐃⵠΔ], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[0]);
		const ⵠΔᐃΔᐃΔΔⵠΔ = ⲆΔᐃᐃⲆΔΔ(ⲆᐃΔⲆ[ⵠⵠⲆ], ⲆᐃΔⲆ[ⵠᐃⵠΔ]);
		const ΔⵠΔᐃΔᐃⲆ = ~(35162 & ΔⲆΔⵠⵠΔᐃ) & (ΔⲆΔⵠⵠΔᐃ | 35162);
		return ΔⵠΔᐃΔᐃⲆ
	}

	function ⵠⵠᐃⲆΔᐃΔ(ⵠᐃⵠᐃΔᐃΔ, ⲆΔⲆᐃⲆⵠⲆ) {
		const ⵠⵠⲆᐃⵠⵠᐃ = ~(ⵠᐃⵠᐃΔᐃΔ & 21875) & 21875 | ~(21875 & ⵠᐃⵠᐃΔᐃΔ) & ⵠᐃⵠᐃΔᐃΔ;
		const ᐃⵠᐃᐃΔⵠᐃ = (1103515245 * (ⲆΔⲆᐃⲆⵠⲆ + 8547) + 12345) % 2147483648;
		const ᐃᐃᐃΔΔⲆⲆ = ΔⵠᐃⵠⵠⲆΔ(ⵠⵠⲆᐃⵠⵠᐃ, ᐃⵠᐃᐃΔⵠᐃ);
		const ΔⵠⲆᐃⲆΔⵠⵠΔ = ⲆⲆᐃᐃⲆⲆᐃ(ⵠⵠⲆᐃⵠⵠᐃ, ᐃⵠᐃᐃΔⵠᐃ);
		const ⵠᐃⲆⲆΔᐃⵠ = (54007 | ᐃᐃᐃΔΔⲆⲆ) & ~(54007 & ᐃᐃᐃΔΔⲆⲆ);
		return ⵠᐃⲆⲆΔᐃⵠ
	}

	function ⵠⲆⵠⲆᐃⲆΔ(ᐃᐃⵠⲆΔΔᐃ, ⵠⵠⲆⵠᐃⵠⲆ, ⲆΔΔⵠΔᐃⲆ, ΔⲆᐃⵠⲆⲆΔ, ⲆⲆᐃᐃⵠⲆⵠ) {
		const ⲆᐃΔᐃᐃⵠᐃ = (24 << (ᐃᐃⵠⲆΔΔᐃ >> 0 & 255)) + (8 << (ᐃᐃⵠⲆΔΔᐃ >> 16 & 255)) + (16 << (ᐃᐃⵠⲆΔΔᐃ >> 8 & 255)) + (0 << (ᐃᐃⵠⲆΔΔᐃ >> 24 & 255));
		const ⵠⲆⲆᐃΔΔΔ = (24 << (ⵠⵠⲆⵠᐃⵠⲆ >> 0 & 255)) + (ⲆⲆᐃΔΔ << (ⵠⵠⲆⵠᐃⵠⲆ >> 16 & ⲆⲆⵠΔⲆΔⵠ)) + (0 << (ⵠⵠⲆⵠᐃⵠⲆ >> 24 & 255)) + (8 << (ⵠⵠⲆⵠᐃⵠⲆ >> 8 & 255));
		const ᐃⲆΔⲆΔᐃⵠ = ((45919 + ⲆΔΔⵠΔᐃⲆ) * 2147483629 + 2147483587) % 2147483647;
		const ΔⲆⵠΔⲆΔᐃ = (16 << (ΔⲆᐃⵠⲆⲆΔ >> 8 & 255)) + (ⲆΔᐃ << (ΔⲆᐃⵠⲆⲆΔ >> 16 & ᐃΔΔᐃⵠΔᐃ)) + (24 << (ΔⲆᐃⵠⲆⲆΔ >> 24 & 255)) + (8 << (ΔⲆᐃⵠⲆⲆΔ >> 0 & 255));
		const ΔⵠΔⵠⲆⲆΔ = (16 << (ⲆⲆᐃᐃⵠⲆⵠ >> 0 & 255)) + (0 << (ⲆⲆᐃᐃⵠⲆⵠ >> 16 & 255)) + (8 << (ⲆⲆᐃᐃⵠⲆⵠ >> 8 & 255)) + (24 << (ⲆⲆᐃᐃⵠⲆⵠ >> 24 & ΔΔᐃΔⵠᐃⵠ));
		const ΔΔᐃΔᐃᐃΔ = ⵠⲆΔΔⲆⲆⵠ(ⲆᐃΔᐃᐃⵠᐃ, ⵠⲆⲆᐃΔΔΔ, ᐃⲆΔⲆΔᐃⵠ, ΔⲆⵠΔⲆΔᐃ, ΔⵠΔⵠⲆⲆΔ);
		const ΔΔᐃΔⲆᐃΔⵠΔ = ᐃⵠⵠᐃᐃᐃΔ(ⲆᐃΔᐃᐃⵠᐃ, ⵠⲆⲆᐃΔΔΔ, ᐃⲆΔⲆΔᐃⵠ, ΔⲆⵠΔⲆΔᐃ, ΔⵠΔⵠⲆⲆΔ);
		const ΔΔⲆⵠᐃⵠⲆ = ΔΔᐃΔᐃᐃΔ ^ 13331;
		return ΔΔⲆⵠᐃⵠⲆ
	}
	var ⲆΔᐃⵠᐃΔᐃ = [
		[0, "DRAGON", ΔΔⵠⲆΔ, ᐃⲆⵠⲆΔ, 66, 35, 0],
		[ᐃⵠΔ, ⵠ[ΔΔⵠᐃⵠⲆᐃ], 91, ⲆⵠᐃᐃⲆ, 5, 40, ⲆΔΔΔᐃ],
		[0, ⵠ[552], 135, 180, 89, 124, ᐃᐃⵠⵠ],
		[ᐃⵠΔ, ⵠ[162], 142, 6, 82, 99, ᐃⲆᐃᐃΔ],
		[0, ⵠ[262], ⵠⲆⵠⵠᐃ, 150, 90, 154, 8],
		[0, ⵠ[ΔⵠΔⲆᐃΔⵠ], ⵠⲆΔⲆᐃ, ⵠⲆⵠⵠᐃ, 90, 150, ⲆⵠⲆ],
		[ⵠⵠⲆ, "b", 0, 5, 175, ⲆΔᐃ],
		[1, "t", ⵠⲆΔΔ, ⲆⲆᐃⵠ, 174, 0],
		[ᐃⵠⵠ, "t", 5, ᐃᐃⵠⵠ, 173, ⲆⲆⲆ],
		[1, "b", ⵠⲆⲆΔ, 5, 176, ⲆΔᐃ],
		[1, "t", ᐃⵠΔ, ⲆΔⵠᐃ, 177, 0],
		[ΔⲆᐃ, "t", Δᐃᐃᐃ, Δᐃⵠⵠ, 178, 0],
		[1, "t", 4, ⲆᐃᐃΔ, 179, 0],
		[ᐃⵠ, "b", 0, ⲆΔⵠᐃ, 180, ⲆΔᐃ],
		[1, "t", 5, Δᐃⵠⵠ, 181, 0],
		[ᐃⵠⵠ, "b", ⵠΔⲆΔ, ᐃᐃⵠⵠ, 182, 0],
		[ᐃⵠ, "b", 1, 5, 183, 0],
		[1, "b", ⵠᐃⵠΔ, ᐃᐃⵠⵠ, 184, ᐃⵠΔ],
		[1, "t", ⲆⲆᐃⵠ, ⲆΔⵠᐃ, 185, 0],
		[ΔⲆᐃ, "t", ⲆⲆⵠΔ, Δᐃⵠⵠ, 186, ΔΔᐃ],
		[1, "t", ΔΔᐃ, ⲆᐃᐃΔ, 187, 0],
		[ⵠⵠⲆ, "t", ΔⲆⲆΔ, ⲆΔⵠᐃ, 188, 0],
		[ᐃⵠⵠ, "t", 1, ⲆΔᐃΔ, 189, ΔⲆⵠ],
		[1, "b", 2, 5, 190, 0],
		[ᐃⵠ, "t", ⲆⵠⲆⲆ, 5, 191, 0],
		[ΔⲆᐃ, "b", 3, ⲆΔⵠᐃ, 192, ⲆΔᐃ],
		[1, "t", 5, ⲆⲆᐃⵠ, 193, ᐃⵠΔ],
		[1, "t", 0, ΔⲆⲆΔ, 194, 0],
		[ᐃⵠ, "t", ⵠΔⵠⲆ, ΔⲆⲆΔ, 195, ΔⲆⵠ],
		[1, "b", ⲆΔᐃ, 5, 196, ΔΔᐃ],
		[1, "t", ⲆΔⵠᐃ, 5, 197, 0],
		[ⵠⲆⲆ, "t", 2, 5, 198, ΔⲆⵠ],
		[1, "b", ⲆⲆⵠΔ, 5, 199, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", 4, 5, 200, ⲆⲆⲆ],
		[ᐃⵠ, "t", ΔⲆᐃ, ⲆΔⵠᐃ, 201, ⲆⵠⲆ],
		[1, "b", ΔⲆᐃ, ⲆⲆᐃⵠ, 202, ⲆⵠⲆ],
		[1, "t", ⲆΔᐃΔ, 5, 203, 0],
		[1, "t", 2, ⲆⲆᐃⵠ, 204, ⲆⵠⲆ],
		[1, "t", 4, 5, 205, ΔΔᐃ],
		[1, "b", 2, 5, 206, ΔⲆⵠ],
		[1, "t", ΔⲆᐃ, ⲆΔⵠᐃ, 207, 0],
		[1, "t", 4, ⲆᐃᐃΔ, 208, ΔⲆⵠ],
		[1, "t", ⵠⲆΔΔ, 5, 209, ΔⲆⵠ],
		[ᐃⵠ, "b", ΔⲆⵠ, ⲆΔⵠᐃ, 210, ΔΔᐃ],
		[ⵠⵠⲆ, "t", 5, 5, 211, 0],
		[ⵠⲆⲆ, "t", 1, 5, 212, 0],
		[ⵠⲆⲆ, "t", 2, ⲆΔᐃΔ, 213, 0],
		[1, "b", ⵠΔⵠⲆ, ⲆᐃᐃΔ, 214, ⲆΔᐃ],
		[1, "t", ⲆᐃᐃΔ, ⲆᐃᐃΔ, 215, 0],
		[ᐃⵠ, "b", 0, ⲆΔᐃΔ, 216, 0],
		[ΔⲆᐃ, "t", 4, ⲆΔᐃΔ, 217, 0],
		[1, "t", 2, 5, 218, ⲆⵠⲆ],
		[1, "t", ᐃⵠ, 5, 219, 0],
		[ᐃⵠ, "t", ⵠⲆⵠⵠ, ᐃᐃⵠⵠ, 220, 0],
		[ⵠⵠⲆ, "t", 5, ᐃᐃⵠⵠ, 221, 0],
		[1, "t", ⵠⵠⲆᐃ, Δᐃⵠⵠ, 222, 0],
		[ⵠⵠⲆ, "t", 4, ⲆⲆᐃⵠ, 223, 0],
		[ᐃⵠⵠ, "b", ΔⵠⵠΔ, ᐃᐃⵠⵠ, 224, ⲆΔᐃ],
		[ΔⲆᐃ, "t", ⵠⲆⲆ, 5, 225, 0],
		[1, "t", ΔⵠⵠΔ, 5, 226, ⲆⵠⲆ],
		[1, "b", 0, ΔⲆⲆΔ, 227, 0],
		[1, "t", 3, 5, 228, ΔⲆⵠ],
		[ΔⲆᐃ, "t", Δᐃⵠⵠ, Δᐃⵠⵠ, 229, 0],
		[1, "t", ⵠᐃⵠΔ, ᐃᐃⵠⵠ, 230, ΔΔᐃ],
		[1, "t", 0, 5, 231, 0],
		[ΔⲆᐃ, "b", ⲆⲆⵠΔ, 5, 232, 0],
		[ⵠⲆⲆ, "t", ΔⲆᐃ, 5, 233, 0],
		[ⵠⵠⲆ, "t", ⵠᐃᐃⲆ, 5, 234, ⲆⵠⲆ],
		[ᐃⵠ, "b", ⵠⲆⲆ, 5, 235, ⲆⵠⲆ],
		[1, "t", ᐃΔᐃΔ, 5, 236, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", 2, ⲆΔᐃΔ, 237, 0],
		[1, "t", Δⵠⵠ, ᐃᐃⵠⵠ, 238, ΔⲆⵠ],
		[ΔⲆᐃ, "t", ⲆⲆΔΔ, 5, 239, 0],
		[ⵠⲆⲆ, "b", 2, ⲆΔᐃΔ, 240, ⲆΔᐃ],
		[ⵠⲆⲆ, "t", ᐃᐃⵠⵠ, 5, 241, 0],
		[ᐃⵠ, "b", ᐃⵠⵠ, 5, 242, 0],
		[ᐃⵠ, "t", 4, 5, 243, Δⵠⵠ],
		[ᐃⵠ, "t", ⵠᐃⵠΔ, ⲆΔⵠᐃ, 244, ΔⲆⵠ],
		[ᐃⵠ, "t", 1, ⲆΔᐃΔ, 245, ΔΔᐃ],
		[ⵠⵠⲆ, "b", 1, 5, 246, 0],
		[ⵠⲆⲆ, "t", ⵠⲆⵠⵠ, 5, 247, ΔΔᐃ],
		[1, "b", 2, ⲆⲆᐃⵠ, 248, ⲆΔᐃ],
		[1, "t", ΔⲆⲆΔ, 5, 249, 0],
		[1, "t", ᐃⵠΔⲆ, 5, 250, Δⵠⵠ],
		[1, "t", ⲆⵠⲆⲆ, 5, 251, ⲆΔᐃ],
		[1, "b", 1, ⲆⲆᐃⵠ, 252, 0],
		[1, "t", 4, 5, 253, 0],
		[1, "t", 1, 5, 254, ᐃⵠΔ],
		[1, "t", ⵠΔⵠⲆ, ⲆΔᐃΔ, 255, 0],
		[1, "t", 5, 5, ΔᐃᐃΔⲆⵠΔ, 0],
		[1, "b", ⵠᐃⵠΔ, 5, 257, 0],
		[ⵠⵠⲆ, "t", 4, 5, 258, 0],
		[ΔⲆᐃ, "b", ⵠΔᐃⲆ, ⲆΔᐃΔ, 259, ΔΔᐃ],
		[1, "t", ⲆⲆᐃⵠ, 5, 260, 0],
		[1, "b", 0, ⲆⲆᐃⵠ, 261, ᐃⵠΔ],
		[1, "t", ⵠⲆⲆΔ, 5, 262, ⲆⲆⲆ],
		[1, "t", 4, 5, 263, 0],
		[1, "t", 2, 5, 264, 0],
		[ⵠⵠⲆ, "b", ᐃⵠ, 5, 265, 0],
		[ⵠⵠⲆ, "b", ᐃⵠΔⲆ, ⲆΔᐃΔ, 266, 0],
		[ⵠⲆⲆ, "t", ⵠΔᐃⲆ, 5, 267, 0],
		[ⵠⲆⲆ, "t", ᐃΔΔΔ, ΔⲆⲆΔ, 268, 0],
		[1, "t", 0, 5, 269, 0],
		[ΔⲆᐃ, "t", 5, 5, 270, 0],
		[1, "t", ΔⵠⵠΔ, ΔⲆⲆΔ, 271, Δⵠⵠ],
		[ᐃⵠⵠ, "t", 4, 5, 272, ᐃⵠΔ],
		[ΔⲆᐃ, "t", 1, ⲆΔⵠᐃ, 273, 0],
		[1, "b", 2, ⲆᐃᐃΔ, 274, Δⵠⵠ],
		[1, "t", 1, Δᐃⵠⵠ, 275, ΔⲆⵠ],
		[1, "t", 4, 5, 276, ᐃⵠΔ],
		[ᐃⵠ, "b", 1, ⲆΔⵠᐃ, 277, 0],
		[ⵠⲆⲆ, "b", ᐃⵠΔⲆ, ᐃᐃⵠⵠ, 278, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", 1, 5, 279, 0],
		[1, "t", 4, ⲆΔⵠᐃ, 280, 0],
		[ⵠⵠⲆ, "t", 2, 5, 281, ᐃⵠΔ],
		[ᐃⵠ, "t", 5, Δᐃⵠⵠ, 282, ⲆⵠⲆ],
		[1, "b", ᐃᐃΔⵠ, ⲆΔᐃΔ, 283, ᐃⵠΔ],
		[1, "t", ᐃⵠ, 5, 284, Δⵠⵠ],
		[1, "b", ⵠⲆⲆΔ, 5, 285, 0],
		[1, "t", ᐃΔΔΔ, ⲆⲆᐃⵠ, 286, 0],
		[1, "t", ⲆⵠⲆ, ⲆΔᐃΔ, 287, 0],
		[1, "t", ΔⲆⲆΔ, ⲆᐃᐃΔ, 288, ΔΔᐃ],
		[1, "t", 2, 5, 289, 0],
		[1, "b", ⵠⵠⲆ, ⲆᐃᐃΔ, 290, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", 4, ⲆⲆᐃⵠ, 292, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", ᐃᐃΔⵠ, ᐃᐃⵠⵠ, 291, ΔΔᐃ],
		[1, "b", 2, ΔⲆⲆΔ, 293, 0],
		[1, "t", ᐃⵠ, 5, 294, 0],
		[1, "t", 3, ⲆⲆᐃⵠ, 295, 0],
		[ᐃⵠⵠ, "t", 5, ⲆΔⵠᐃ, 296, Δⵠⵠ],
		[1, "b", 0, 5, 297, 0],
		[1, "b", ⵠΔᐃⲆ, ΔⲆⲆΔ, 298, 0],
		[ᐃⵠ, "t", ᐃΔΔΔ, 5, 299, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", 2, 5, 300, ⲆⵠⲆ],
		[ᐃⵠ, "t", ᐃΔΔΔ, ΔⲆⲆΔ, 301, Δⵠⵠ],
		[ⵠⲆⲆ, "b", ΔΔᐃ, 5, 302, 0],
		[1, "b", ⵠⲆΔΔ, 5, 303, 0],
		[ᐃⵠⵠ, "t", ᐃⵠ, 6, 303, ΔⲆⵠ],
		[1, "t", 2, 7, 303, ΔΔᐃ],
		[ⵠⲆⲆ, "t", ΔⲆᐃ, 5, 304, ⲆⵠⲆ],
		[1, "t", ⵠΔⵠⲆ, ᐃⲆᐃⵠᐃ, 304, Δⵠⵠ],
		[ⵠⲆⲆ, "t", 4, ᐃⲆⲆΔᐃ, 304, Δⵠⵠ],
		[ᐃⵠⵠ, "t", ᐃᐃⵠⵠ, ⲆⲆᐃᐃᐃ, 303, ΔΔᐃ],
		[ΔⲆᐃ, "b", 1, ΔⲆᐃⵠᐃ, 304, 0],
		[1, "b", ⲆⲆⵠΔ, 9, 304, 0],
		[ᐃⵠ, "b", 3, ⲆᐃᐃⲆΔ, 303, 0],
		[ⵠⲆⲆ, "b", ΔⲆΔⵠ, 17, 304, 0],
		[1, "t", ΔⲆᐃ, ᐃᐃⲆⲆⲆ, 303, ⲆΔᐃ],
		[ᐃⵠ, "t", 1, 15, 304, 0],
		[ⵠⲆⲆ, "t", 1, Δⵠᐃᐃᐃ, 303, ⲆⵠⲆ],
		[1, "t", 3, 10, 303, 0],
		[1, "t", ⵠⲆⵠⵠ, ⵠΔΔΔΔΔᐃ, 304, Δⵠⵠ],
		[1, "t", 4, ᐃⵠⲆᐃⵠ, 304, 0],
		[ⵠⲆⲆ, "t", ⲆΔⵠᐃ, 11, 304, ⲆΔᐃ],
		[1, "t", 5, Δⵠᐃⵠⵠ, 303, ΔⲆⵠ],
		[ᐃⵠ, "t", ⲆᐃᐃΔ, ΔⲆⲆⲆᐃ, 304, 0],
		[1, "t", 5, ⲆⲆΔᐃᐃ, 304, Δⵠⵠ],
		[1, "t", 2, 12, 304, 0],
		[1, "t", 1, ΔᐃᐃΔᐃ, 303, 0],
		[1, "b", 3, 15, 303, 0],
		[ᐃⵠⵠ, "b", ΔⲆⵠ, Ⲇᐃᐃⵠᐃ, 303, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ⵠⲆⵠⵠ, 17, 303, 0],
		[ⵠⲆⲆ, "t", ⵠᐃᐃⲆ, ᐃⲆΔⲆΔⲆᐃ, 303, 0],
		[ᐃⵠⵠ, "t", ⵠⵠⲆᐃ, ⲆΔΔⲆΔ, 303, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", 1, ⵠⲆΔⵠ, 303, ⲆⲆⲆ],
		[1, "b", ᐃⵠ, 21, 303, ⲆⲆⲆ],
		[ᐃⵠⵠ, "t", 2, 22, 303, 0],
		[ⵠⵠⲆ, "t", 4, 23, 303, 0],
		[ⵠⵠⲆ, "b", ⵠⲆⵠⵠ, 24, 303, ΔΔᐃ],
		[1, "t", ⲆⲆᐃⵠ, 25, 303, 0],
		[1, "t", ᐃⵠⵠ, 26, 303, 0],
		[ᐃⵠ, "t", ΔⲆⲆᐃ, 27, 303, 0],
		[1, "t", 4, 28, 303, ⲆⵠⲆ],
		[1, "b", ᐃⵠΔ, ⲆΔΔⵠΔⲆⵠ, 304, ᐃⵠΔ],
		[1, "t", ⵠᐃⵠΔ, ΔⵠⲆⵠⵠ, 304, ⲆⲆⲆ],
		[1, "t", 5, 20, 304, ΔΔᐃ],
		[ⵠⵠⲆ, "b", 2, 21, 304, Δⵠⵠ],
		[ᐃⵠⵠ, "t", 4, 22, 304, 0],
		[1, "t", ⵠΔⵠᐃ, 23, 304, 0],
		[ⵠⵠⲆ, "t", ᐃⵠ, 24, 304, 0],
		[1, "t", 3, 25, 304, 0],
		[ᐃⵠⵠ, "t", Δⵠⵠ, 27, 304, 0],
		[ⵠⲆⲆ, "t", 5, 26, 304, ᐃⵠΔ],
		[ⵠⲆⲆ, "b", ⵠΔⲆΔ, 28, 304, 0],
		[ᐃⵠ, "t", 1, 29, 304, 0],
		[ⵠⲆⲆ, "b", ΔⲆᐃ, 29, 303, 0],
		[ⵠⵠⲆ, "b", ⵠⲆΔΔ, 30, 303, Δⵠⵠ],
		[1, "t", ⵠᐃᐃⲆ, 31, 303, ᐃⵠΔ],
		[1, "t", ⲆΔᐃ, 32, 303, 0],
		[ⵠⵠⲆ, "t", ⲆΔⵠᐃ, 33, 303, ⲆⲆⲆ],
		[ᐃⵠ, "t", 2, 34, 303, ⲆΔᐃ],
		[ᐃⵠ, "t", ⵠᐃᐃⲆ, 35, 303, 0],
		[1, "t", ΔⲆᐃ, 36, 303, 0],
		[ⵠⲆⲆ, "b", ⵠΔᐃⲆ, 37, 303, ⲆⵠⲆ],
		[1, "t", ⵠΔⵠᐃ, 32, 304, 0],
		[1, "t", 4, 30, 304, 0],
		[ᐃⵠ, "t", ⵠⵠⲆ, 31, 304, ⲆⵠⲆ],
		[ΔⲆᐃ, "b", 1, 33, 304, ⲆⵠⲆ],
		[1, "t", 2, 35, 304, 0],
		[ⵠⵠⲆ, "t", ⲆΔᐃΔ, 34, 304, ΔⲆⵠ],
		[1, "b", ᐃⵠΔⲆ, 36, 304, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", ᐃᐃⵠⵠ, 37, 304, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", ⵠⲆⲆ, 38, 304, ΔⲆⵠ],
		[1, "b", ⵠⲆⲆ, 40, 303, ΔⲆⵠ],
		[ᐃⵠ, "t", Δᐃᐃᐃ, 39, 303, ΔⲆⵠ],
		[1, "t", 3, 42, 304, ⲆⲆⲆ],
		[1, "t", 5, 38, 303, ⲆΔᐃ],
		[1, "t", ᐃᐃⵠⵠ, 39, 304, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", ΔⲆⲆΔ, 41, 303, ⲆΔᐃ],
		[ᐃⵠ, "t", ᐃΔⲆΔ, 41, 304, 0],
		[1, "t", 4, 44, 303, ᐃⵠΔ],
		[ᐃⵠ, "b", 2, 40, 304, ⲆΔᐃ],
		[1, "b", 2, 43, 303, ⲆⵠⲆ],
		[ᐃⵠ, "t", ⵠⲆⲆ, 42, 303, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 1, 43, 304, 0],
		[1, "t", 5, 44, 304, ⲆⵠⲆ],
		[1, "b", 1, 45, 303, Δⵠⵠ],
		[1, "t", 2, 45, 304, 0],
		[1, "t", 2, 46, 303, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", 4, 47, 303, ⲆⵠⲆ],
		[1, "b", 0, 48, 303, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", Δᐃⵠⵠ, 49, 303, ΔΔᐃ],
		[1, "t", 2, 50, 303, ΔⲆⵠ],
		[ΔⲆᐃ, "t", ᐃⵠⵠ, 51, 303, ΔΔᐃ],
		[ᐃⵠ, "t", Δⵠⵠⵠ, 52, 303, 0],
		[1, "t", Δᐃⵠⵠ, 46, 304, Δⵠⵠ],
		[1, "t", 2, 47, 304, ⲆΔᐃ],
		[ⵠⵠⲆ, "t", ⲆΔⵠᐃ, 48, 304, 0],
		[ᐃⵠⵠ, "t", 1, 49, 304, ΔΔᐃ],
		[1, "t", ΔⲆⲆᐃ, 50, 304, ⲆΔᐃ],
		[1, "b", 1, 53, 303, 0],
		[ΔⲆᐃ, "b", 2, 51, 304, ᐃⵠΔ],
		[1, "t", ⲆᐃᐃΔ, 52, 304, 0],
		[ⵠⵠⲆ, "t", 3, 53, 304, ΔΔᐃ],
		[1, "b", ᐃⵠΔⲆ, 54, 303, ⲆⵠⲆ],
		[ⵠⵠⲆ, "t", ΔⲆⲆΔ, 54, 304, ΔΔᐃ],
		[1, "t", Δᐃⵠⵠ, 55, 303, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 3, 56, 303, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", 4, 57, 303, ΔⲆⵠ],
		[1, "t", 5, 58, 303, ⲆΔᐃ],
		[ⵠⵠⲆ, "b", 1, 55, 304, ⲆⲆⲆ],
		[1, "t", 2, 56, 304, ΔⲆⵠ],
		[1, "t", 0, 57, 304, 0],
		[ᐃⵠⵠ, "t", ⵠⲆⲆΔ, 58, 304, ΔΔᐃ],
		[ᐃⵠⵠ, "t", 3, 63, 304, ΔⲆⵠ],
		[ⵠⲆⲆ, "t", 3, 59, 303, 0],
		[ⵠⵠⲆ, "t", 4, 59, 304, 0],
		[ⵠⲆⲆ, "t", 5, 60, 303, ⲆΔᐃ],
		[1, "t", 0, 60, 304, 0],
		[1, "t", ⲆΔᐃ, 66, 303, 0],
		[ᐃⵠⵠ, "t", 0, 70, 304, 0],
		[ⵠⲆⲆ, "t", 3, 61, 304, ⲆⲆⲆ],
		[1, "t", 3, 67, 303, 0],
		[1, "t", 3, 73, 304, ⲆⲆⲆ],
		[ᐃⵠ, "t", ⵠⲆⲆΔ, 76, 303, ΔⲆⵠ],
		[ΔⲆᐃ, "t", Δᐃᐃᐃ, 78, 304, 0],
		[ΔⲆᐃ, "t", 1, 61, 303, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", ΔⲆᐃ, 73, 303, 0],
		[ᐃⵠ, "t", 1, 79, 303, 0],
		[ⵠⲆⲆ, "b", 2, 62, 304, Δⵠⵠ],
		[1, "b", ᐃⵠΔⲆ, 70, 303, ⲆΔᐃ],
		[1, "t", 5, 62, 303, 0],
		[1, "t", 5, 68, 303, ΔΔᐃ],
		[ΔⲆᐃ, "t", ⲆⲆᐃⵠ, 71, 304, ΔΔᐃ],
		[ⵠⵠⲆ, "t", 5, 77, 304, 0],
		[ⵠⲆⲆ, "t", 5, 75, 303, ΔⲆⵠ],
		[ᐃⵠ, "t", ⲆΔⵠᐃ, 64, 304, Δⵠⵠ],
		[ᐃⵠⵠ, "t", 5, 65, 303, 0],
		[ΔⲆᐃ, "t", ᐃᐃⵠⵠ, 80, 303, 0],
		[ᐃⵠ, "t", ⵠⲆⲆ, 76, 304, ΔΔᐃ],
		[1, "t", ⵠⲆⲆΔ, 63, 303, 0],
		[1, "t", ᐃᐃⵠⵠ, 82, 304, Δⵠⵠ],
		[ⵠⵠⲆ, "b", ⵠΔⲆΔ, 65, 304, 0],
		[ⵠⲆⲆ, "t", ⵠⲆⲆ, 64, 303, 0],
		[1, "t", ΔⲆᐃ, 68, 304, 0],
		[ᐃⵠⵠ, "t", ΔⲆⲆᐃ, 69, 304, 0],
		[ΔⲆᐃ, "t", ⲆⵠⲆⲆ, 69, 303, ⲆⲆⲆ],
		[ΔⲆᐃ, "t", 5, 66, 304, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 0, 67, 304, 0],
		[1, "b", ᐃᐃΔⵠ, 72, 304, 0],
		[1, "t", ⲆΔᐃ, 71, 303, Δⵠⵠ],
		[ᐃⵠⵠ, "t", 4, 72, 303, ⲆⲆⲆ],
		[1, "t", ⲆⵠⲆⲆ, 74, 304, ᐃⵠΔ],
		[1, "t", 2, 74, 303, 0],
		[1, "t", ⲆⵠⵠΔ, 75, 304, ⲆΔᐃ],
		[1, "t", 1, 77, 303, Δⵠⵠ],
		[ⵠⵠⲆ, "t", ΔⲆΔⲆ, 78, 303, Δⵠⵠ],
		[1, "t", 4, 79, 304, ΔΔᐃ],
		[1, "t", 2, 80, 304, 0],
		[1, "b", ᐃⵠⵠ, 81, 304, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", 2, 81, 303, 0],
		[1, "t", ⲆᐃᐃΔ, 82, 303, 0],
		[1, "t", 1, 83, 303, 0],
		[1, "b", ⵠᐃⵠΔ, 83, 304, ΔΔᐃ],
		[ΔⲆᐃ, "t", 1, 84, 304, ⲆⲆⲆ],
		[ᐃⵠⵠ, "t", 4, 84, 303, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ΔⲆⲆΔ, 85, 304, 0],
		[1, "t", 3, 85, 303, ᐃⵠΔ],
		[1, "b", 2, 86, 304, ⲆⲆⲆ],
		[1, "t", 1, 86, 303, ⲆΔᐃ],
		[1, "b", 3, 87, 303, 0],
		[ᐃⵠ, "t", ⵠᐃᐃⲆ, 87, 304, ΔⲆⵠ],
		[ⵠⲆⲆ, "t", ᐃΔΔΔ, 88, 303, 0],
		[ᐃⵠ, "t", 0, 88, 304, 0],
		[1, "b", ⵠⲆⲆ, 89, 303, 0],
		[1, "t", ⲆⵠⵠΔ, 89, 304, 0],
		[1, "t", ΔⲆΔⵠ, 90, 303, 0],
		[1, "t", Δⵠⵠⵠ, 90, 304, 0],
		[1, "t", 4, 91, 303, 0],
		[1, "t", 0, 91, 304, 0],
		[1, "b", ⵠⵠⲆᐃ, 92, 303, 0],
		[ᐃⵠ, "t", ⵠᐃᐃⲆ, 92, 304, ⲆⵠⲆ],
		[ᐃⵠ, "t", 5, 93, 303, 0],
		[1, "t", ᐃⵠΔ, 93, 304, ⲆⲆⲆ],
		[1, "b", 3, 94, 303, 0],
		[ⵠⲆⲆ, "b", ⲆⵠⲆ, 94, 304, ᐃⵠΔ],
		[ⵠⲆⲆ, "b", ⲆⵠⲆ, 95, 303, 0],
		[ⵠⲆⲆ, "t", ᐃⵠΔⲆ, 95, 304, 0],
		[1, "f", ᐃⵠ, ⲆᐃᐃΔ, 151, 1],
		[ᐃⵠⵠ, "f", 2, 5, 153, 1],
		[ᐃⵠⵠ, "f", 0, ΔⲆⲆΔ, 152, 1],
		[1, "f", 0, 5, 147, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", 0, 5, 144, 1],
		[1, "f", ⲆⲆⲆ, 5, 140, 1],
		[ⵠⵠⲆ, "f", ⵠⵠⲆ, 5, 149, 1],
		[1, "f", ᐃⵠⵠ, 5, 146, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 1, 5, 143, 1],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 5, 141, 1],
		[1, "f", 2, 5, 150, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", 2, ⲆΔᐃΔ, 148, 1],
		[ᐃⵠⵠ, "f", ⲆⲆⵠΔ, 5, 145, ᐃⵠ],
		[1, "f", ᐃᐃΔⵠ, 5, 142, 1],
		[ΔⲆᐃ, "f", ΔⲆⲆᐃ, 5, 139, 1],
		[1, "f", 2, ⲆΔⵠᐃ, 136, ⵠⵠⲆ],
		[1, "f", ᐃⵠΔⲆ, 5, 133, 1],
		[1, "f", 2, ⲆⲆᐃⵠ, 131, ᐃⵠⵠ],
		[1, "f", ⵠⵠⲆᐃ, 5, 127, ⵠⵠⲆ],
		[ᐃⵠ, "f", ᐃⵠΔⲆ, 5, 125, 1],
		[ᐃⵠⵠ, "f", ᐃⵠⵠ, ΔⲆⲆΔ, 138, 1],
		[ΔⲆᐃ, "f", ᐃⵠⵠ, Δᐃⵠⵠ, 135, ⵠⵠⲆ],
		[1, "f", 1, ⲆⲆᐃⵠ, 132, 1],
		[1, "f", ᐃⵠ, ᐃᐃⵠⵠ, 130, ᐃⵠ],
		[ΔⲆᐃ, "f", ᐃⵠⵠ, ⲆⲆᐃⵠ, 128, ⵠⲆⲆ],
		[1, "f", ᐃⵠ, 5, 126, ⵠⵠⲆ],
		[1, "f", ΔⲆᐃ, 5, 124, ᐃⵠⵠ],
		[1, "f", ⲆⲆⲆ, 5, 129, 1],
		[1, "f", Δⵠⵠ, ⲆᐃᐃΔ, 134, ᐃⵠⵠ],
		[ᐃⵠ, "f", ⲆⵠⲆ, 5, 137, 1],
		[1, "f", ΔΔᐃ, ⲆᐃᐃΔ, 123, 1],
		[1, "f", 1, 5, 122, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, ⲆΔⵠᐃ, 120, ΔⲆᐃ],
		[1, "f", ᐃⵠⵠ, 5, 117, ᐃⵠ],
		[1, "f", 1, 5, 115, ᐃⵠ],
		[1, "f", ⵠⵠⲆ, ΔⲆⲆΔ, 111, ⵠⵠⲆ],
		[1, "f", ⵠⵠⲆ, 5, 108, ᐃⵠⵠ],
		[1, "f", ⵠΔⵠᐃ, 5, 121, 1],
		[ⵠⵠⲆ, "f", ⵠΔⲆΔ, Δᐃⵠⵠ, 118, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", ⵠΔⲆΔ, ⲆΔᐃΔ, 116, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", ᐃⵠΔⲆ, 5, 113, ᐃⵠⵠ],
		[1, "f", ⵠⵠⲆᐃ, ⲆⲆᐃⵠ, 110, 1],
		[1, "f", 0, 5, 119, 1],
		[1, "f", ΔΔᐃ, ⲆΔⵠᐃ, 114, 1],
		[1, "f", ᐃⵠΔ, 5, 112, 1],
		[1, "f", 0, 5, 109, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, ⲆΔᐃΔ, 106, 1],
		[1, "f", 1, ⲆΔᐃΔ, 103, 1],
		[ⵠⲆⲆ, "f", 1, Δᐃⵠⵠ, ⵠΔᐃᐃⲆ, 1],
		[1, "f", 1, 5, 97, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ᐃⵠⵠ, ΔⲆⲆΔ, 95, ⵠⵠⲆ],
		[1, "f", ᐃᐃΔⵠ, ⲆΔⵠᐃ, 107, 1],
		[ⵠⵠⲆ, "f", ᐃᐃΔⵠ, 5, 105, 1],
		[1, "f", ⲆⲆⵠΔ, ΔⲆⲆΔ, 102, 1],
		[1, "f", ⵠᐃⵠΔ, 5, 99, 1],
		[1, "f", ⵠⵠⲆᐃ, 5, 96, ⵠⲆⲆ],
		[1, "f", ᐃᐃΔⵠ, 5, 94, 1],
		[1, "f", 0, ᐃᐃⵠⵠ, 104, 1],
		[1, "f", 0, 5, 101, ᐃⵠⵠ],
		[ᐃⵠ, "f", 0, 5, 98, ᐃⵠⵠ],
		[1, "f", ⲆⵠⲆ, 5, 93, 1],
		[1, "f", ⵠⵠⲆ, 5, 92, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", ΔⲆᐃ, ⲆᐃᐃΔ, 89, 1],
		[ᐃⵠ, "f", ΔⲆᐃ, 5, 86, ᐃⵠ],
		[ⵠⵠⲆ, "f", ᐃⵠ, ⲆΔᐃΔ, 83, ⵠⲆⲆ],
		[1, "f", 1, 5, 80, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, 5, 78, ΔⲆᐃ],
		[1, "f", 2, ⲆᐃᐃΔ, 90, 1],
		[1, "f", 2, 5, 88, 1],
		[ⵠⵠⲆ, "f", ⵠᐃⵠΔ, 5, 85, 1],
		[1, "f", 2, Δᐃⵠⵠ, 82, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", ⵠᐃⵠΔ, 5, 79, 1],
		[1, "f", 2, ⲆΔᐃΔ, 77, 1],
		[1, "f", ⵠΔⵠᐃ, ΔⲆⲆΔ, 75, 1],
		[ΔⲆᐃ, "f", 2, ⲆᐃᐃΔ, 72, 1],
		[1, "f", 0, ⲆⲆᐃⵠ, 91, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", 0, Δᐃⵠⵠ, 87, ΔⲆᐃ],
		[ΔⲆᐃ, "f", 0, 5, 84, ᐃⵠ],
		[1, "f", 0, 5, 81, ΔⲆᐃ],
		[1, "f", 0, 5, 76, 1],
		[ᐃⵠⵠ, "f", 0, 5, 74, 1],
		[1, "f", ΔⲆᐃ, 5, 73, ᐃⵠⵠ],
		[ᐃⵠ, "f", ᐃⵠ, ⲆΔⵠᐃ, 71, 1],
		[ⵠⵠⲆ, "f", 1, 5, 68, ⵠⵠⲆ],
		[1, "f", 1, ΔⲆⲆΔ, 66, 1],
		[ᐃⵠⵠ, "f", 1, ⲆⲆᐃⵠ, 62, 1],
		[1, "f", 1, 5, 59, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 1, ⲆⲆᐃⵠ, 56, 1],
		[ΔⲆᐃ, "f", 1, ⲆΔᐃΔ, 53, ᐃⵠ],
		[ΔⲆᐃ, "f", 1, 5, 50, ⵠⲆⲆ],
		[1, "f", 2, ⲆΔᐃΔ, 70, ⵠⲆⲆ],
		[1, "f", 2, 5, 67, 1],
		[1, "f", ⵠΔⲆΔ, 5, 65, 1],
		[1, "f", ⲆⲆⵠΔ, 5, 63, 1],
		[ⵠⲆⲆ, "f", ᐃᐃΔⵠ, ⲆΔⵠᐃ, 60, ⵠⲆⲆ],
		[ⵠⵠⲆ, "f", ⵠΔⲆΔ, 5, 57, 1],
		[ⵠⵠⲆ, "f", 2, Δᐃⵠⵠ, 54, ⵠⵠⲆ],
		[1, "f", ⵠΔⵠᐃ, ⲆⲆᐃⵠ, 51, 1],
		[ᐃⵠ, "f", ⲆΔᐃ, ⲆⲆᐃⵠ, 69, ⵠⵠⲆ],
		[1, "f", ⲆⲆⲆ, 5, 64, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 0, ⲆᐃᐃΔ, 61, 1],
		[1, "f", ΔΔᐃ, 5, 58, ΔⲆᐃ],
		[1, "f", ⲆⵠⲆ, ΔⲆⲆΔ, 55, ᐃⵠⵠ],
		[1, "f", ⲆΔᐃ, 5, 52, 1],
		[ᐃⵠ, "f", ⲆⲆⲆ, ⲆⲆᐃⵠ, 49, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 0, 5, 45, 1],
		[ΔⲆᐃ, "f", ⲆⵠⲆ, 5, 42, ᐃⵠ],
		[ΔⲆᐃ, "f", 0, 5, 38, 1],
		[1, "f", ᐃⵠΔ, ⲆⲆᐃⵠ, 34, ᐃⵠⵠ],
		[ᐃⵠ, "f", Δⵠⵠ, 5, 31, 1],
		[ⵠⵠⲆ, "f", ⵠⲆⲆ, ⲆᐃᐃΔ, 48, ΔⲆᐃ],
		[ᐃⵠ, "f", ΔⲆᐃ, ᐃᐃⵠⵠ, 44, 1],
		[1, "f", ᐃⵠⵠ, 5, 41, 1],
		[ⵠⲆⲆ, "f", 1, ⲆⲆᐃⵠ, 37, 1],
		[1, "f", 1, Δᐃⵠⵠ, 33, 1],
		[ΔⲆᐃ, "f", 1, 5, 29, 1],
		[1, "f", ΔⲆⲆᐃ, ΔⲆⲆΔ, 30, 1],
		[1, "f", 2, 5, 32, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", 2, ⲆⲆᐃⵠ, 35, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", 2, ⲆᐃᐃΔ, 39, 1],
		[ⵠⲆⲆ, "f", ⵠᐃⵠΔ, 5, 46, ⵠⲆⲆ],
		[1, "f", 2, ⲆΔⵠᐃ, 43, 1],
		[ⵠⲆⲆ, "f", 1, ⲆΔᐃΔ, 47, 1],
		[1, "f", ΔΔᐃ, 5, 40, 1],
		[1, "f", 0, 5, 36, 1],
		[1, "f", ΔⲆⵠ, Δᐃⵠⵠ, 28, 1],
		[1, "f", ⵠⲆⲆ, Δᐃⵠⵠ, 25, 1],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 5, 22, ⵠⵠⲆ],
		[1, "f", 1, ⲆΔⵠᐃ, ⵠΔⲆⵠ, ᐃⵠⵠ],
		[1, "f", 1, ⲆΔᐃΔ, ⵠⲆⵠⵠΔ, 1],
		[ⵠⵠⲆ, "f", ΔⲆᐃ, ⲆΔⵠᐃ, 13, 1],
		[1, "f", ⵠⵠⲆ, 5, ᐃᐃⵠᐃΔ, ᐃⵠ],
		[1, "f", 2, 5, 27, 1],
		[ⵠⲆⲆ, "f", 2, 5, 24, ⵠⵠⲆ],
		[1, "f", ⵠⵠⲆᐃ, Δᐃⵠⵠ, 21, 1],
		[ᐃⵠ, "f", 2, 5, ΔᐃⵠᐃⲆ, 1],
		[ᐃⵠⵠ, "f", 2, Δᐃⵠⵠ, 15, 1],
		[1, "f", ᐃᐃΔⵠ, 5, ⲆΔⲆⲆⲆΔᐃ, ΔⲆᐃ],
		[1, "f", 2, 5, 9, ⵠⵠⲆ],
		[1, "f", 0, Δᐃⵠⵠ, 26, ᐃⵠⵠ],
		[1, "f", ΔΔᐃ, ⲆⲆᐃⵠ, 23, ᐃⵠⵠ],
		[1, "f", 0, 5, 14, 1],
		[ᐃⵠ, "f", ⲆΔᐃ, Δᐃⵠⵠ, 11, 1],
		[1, "f", 0, 5, 17, 1],
		[1, "f", ᐃⵠⵠ, ⲆᐃᐃΔ, ΔΔⵠⲆΔ, 1],
		[ᐃⵠⵠ, "f", 1, Δᐃⵠⵠ, ΔⲆᐃⵠᐃ, ᐃⵠⵠ],
		[1, "f", Δⵠⵠ, 5, 7, 1],
		[1, "f", 1, 5, Ⲇᐃᐃᐃⵠ, 1],
		[ᐃⵠ, "f", 0, ⲆᐃᐃΔ, 5, ⵠⲆⲆ],
		[1, "f", 1, ᐃⵠΔⵠⵠ, 5, 1],
		[ᐃⵠⵠ, "f", 2, ⵠΔᐃⲆᐃ, 5, ⵠⵠⲆ],
		[1, "f", Δⵠⵠ, 8, ᐃᐃⵠⵠ, ⵠⵠⲆ],
		[1, "f", ᐃⵠ, ᐃᐃΔⲆⵠⲆΔ, 5, 1],
		[ⵠⲆⲆ, "f", ᐃⵠⵠ, ⲆᐃᐃⲆΔ, 5, 1],
		[1, "f", 1, 15, ⲆⲆᐃⵠ, 1],
		[1, "f", 1, ⲆⲆᐃⲆⲆ, Δᐃⵠⵠ, ⵠⵠⲆ],
		[1, "f", 1, 22, ΔⲆⲆΔ, 1],
		[1, "f", ⵠⵠⲆ, 26, ⲆΔⵠᐃ, ΔⲆᐃ],
		[ⵠⵠⲆ, "f", 2, 10, 5, 1],
		[1, "f", 2, 13, Δᐃⵠⵠ, 1],
		[ⵠⵠⲆ, "f", 2, Ⲇᐃᐃⵠᐃ, 5, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", 2, ᐃⲆⵠⵠᐃ, 5, ΔⲆᐃ],
		[1, "f", 2, 21, Δᐃⵠⵠ, ᐃⵠ],
		[ΔⲆᐃ, "f", ᐃⵠΔⲆ, 23, 5, ᐃⵠⵠ],
		[1, "f", 2, 25, 5, 1],
		[ΔⲆᐃ, "f", ⵠⲆΔΔ, 27, ΔⲆⲆΔ, ⵠⵠⲆ],
		[1, "f", 0, 11, ⲆⲆᐃⵠ, 1],
		[1, "f", 0, ⵠΔΔΔΔΔᐃ, 5, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", 0, 19, ᐃᐃⵠⵠ, ΔⲆᐃ],
		[1, "f", 0, 24, ⲆᐃᐃΔ, ᐃⵠⵠ],
		[1, "f", ⲆⲆⲆ, 28, ⲆΔᐃΔ, ΔⲆᐃ],
		[1, "f", ⵠⵠⲆ, 20, 5, ΔⲆᐃ],
		[1, "f", 1, 29, 5, ⵠⲆⲆ],
		[1, "f", 1, 32, ⲆⲆᐃⵠ, ᐃⵠⵠ],
		[ᐃⵠ, "f", ⵠⲆⲆ, 35, 5, 1],
		[1, "f", ⵠⵠⲆ, 38, 5, 1],
		[ᐃⵠⵠ, "f", 1, 41, ⲆΔᐃΔ, 1],
		[1, "f", ⵠⲆⲆ, 45, ⲆΔᐃΔ, 1],
		[ᐃⵠ, "f", ΔⲆⲆᐃ, 30, 5, 1],
		[1, "f", 2, 33, Δᐃⵠⵠ, 1],
		[1, "f", 2, 36, ΔⲆⲆΔ, 1],
		[ⵠⲆⲆ, "f", 2, 39, Δᐃⵠⵠ, ᐃⵠ],
		[1, "f", ⵠⵠⲆᐃ, 42, ⲆΔⵠᐃ, 1],
		[1, "f", ⵠΔⵠᐃ, 44, ᐃᐃⵠⵠ, 1],
		[ᐃⵠ, "f", ⵠⵠⲆᐃ, 46, Δᐃⵠⵠ, ⵠⵠⲆ],
		[ⵠⲆⲆ, "f", ⲆⵠⲆ, 43, Δᐃⵠⵠ, 1],
		[ΔⲆᐃ, "f", 0, 40, 5, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", 0, 37, Δᐃⵠⵠ, ⵠⵠⲆ],
		[1, "f", 0, 34, 5, 1],
		[1, "f", 0, 31, 5, ᐃⵠ],
		[ᐃⵠ, "f", 0, 47, 5, ᐃⵠ],
		[1, "f", ᐃⵠ, 48, 5, 1],
		[ⵠⲆⲆ, "f", 1, 51, 5, ⵠⲆⲆ],
		[1, "f", ᐃⵠ, 53, 5, 1],
		[1, "f", 1, 57, ⲆⲆᐃⵠ, ⵠⵠⲆ],
		[1, "f", 1, 60, ⲆⲆᐃⵠ, ᐃⵠ],
		[ᐃⵠ, "f", ΔⲆᐃ, 63, ⲆᐃᐃΔ, ⵠⵠⲆ],
		[1, "f", ⵠⲆⲆ, 65, 5, 1],
		[1, "f", 2, 64, 5, ᐃⵠⵠ],
		[1, "f", ⵠᐃⵠΔ, 62, ⲆΔⵠᐃ, 1],
		[ⵠⲆⲆ, "f", ⵠⲆΔΔ, 59, 5, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", 2, 56, ᐃᐃⵠⵠ, 1],
		[ⵠⲆⲆ, "f", ⵠⲆΔΔ, 52, 5, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", ⲆⲆⵠΔ, 49, ⲆΔⵠᐃ, 1],
		[ⵠⵠⲆ, "f", ⵠΔⵠᐃ, 54, ⲆΔⵠᐃ, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", ΔⲆⵠ, 50, ΔⲆⲆΔ, 1],
		[ⵠⲆⲆ, "f", ⲆⲆⲆ, 55, ⲆⲆᐃⵠ, 1],
		[ᐃⵠ, "f", 0, 58, 5, 1],
		[1, "f", 0, 61, 5, ΔⲆᐃ],
		[ΔⲆᐃ, "f", 0, 66, 5, ᐃⵠⵠ],
		[1, "f", 1, 67, 5, 1],
		[1, "f", 1, 70, ⲆⲆᐃⵠ, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", ᐃⵠ, 72, ⲆΔᐃΔ, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ⵠⵠⲆ, 75, 5, ⵠⵠⲆ],
		[1, "f", 1, 79, 5, ᐃⵠ],
		[ⵠⲆⲆ, "f", 2, 68, 5, 1],
		[ᐃⵠⵠ, "f", 2, 71, ⲆⲆᐃⵠ, ⵠⵠⲆ],
		[ⵠⲆⲆ, "f", 2, 74, 5, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", ᐃᐃΔⵠ, 76, 5, ⵠⲆⲆ],
		[ⵠⵠⲆ, "f", 2, 78, Δᐃⵠⵠ, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ⲆΔᐃ, 69, Δᐃⵠⵠ, 1],
		[1, "f", 0, 73, 5, 1],
		[1, "f", ᐃⵠΔ, 77, 5, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ⲆΔᐃ, 80, 5, ᐃⵠ],
		[ΔⲆᐃ, "f", 1, 81, 5, ᐃⵠ],
		[1, "f", ⵠⲆⲆ, 84, 5, 1],
		[1, "f", ΔⲆᐃ, 87, 5, ⵠⵠⲆ],
		[1, "f", ⵠⲆⲆ, 89, 5, 1],
		[ᐃⵠⵠ, "f", ΔⲆᐃ, 92, Δᐃⵠⵠ, ᐃⵠⵠ],
		[1, "f", ⵠⵠⲆ, 94, ⲆΔᐃΔ, ⵠⵠⲆ],
		[1, "f", ΔΔᐃ, 82, 5, ΔⲆᐃ],
		[ᐃⵠⵠ, "f", ⵠΔⲆΔ, 83, 5, ᐃⵠ],
		[1, "f", 2, 85, ⲆΔⵠᐃ, ΔⲆᐃ],
		[1, "f", ⵠᐃⵠΔ, 88, 5, 1],
		[1, "f", 2, 90, ⲆᐃᐃΔ, 1],
		[1, "f", 2, 93, 5, 1],
		[1, "f", ⲆⲆⵠΔ, 95, ᐃᐃⵠⵠ, 1],
		[ᐃⵠ, "f", ⲆΔᐃ, 86, ⲆΔᐃΔ, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", ΔⲆⵠ, 91, ᐃᐃⵠⵠ, 1],
		[1, "f", 2, ⵠⲆΔⲆᐃ, 153, 1],
		[ΔⲆᐃ, "f", 1, ᐃⵠΔⵠⵠ, 152, ⵠⲆⲆ],
		[1, "t", ΔⲆᐃ, 93, 301, 0],
		[1, "t", 3, 94, 302, 0],
		[1, "t", 5, 95, 302, 0],
		[1, "t", ⲆΔⵠᐃ, 93, 302, ⲆⵠⲆ],
		[1, "b", 3, 92, 302, Δⵠⵠ],
		[ᐃⵠ, "t", 1, 91, 302, ⲆⵠⲆ],
		[1, "t", Δᐃⵠⵠ, 90, 302, 0],
		[1, "b", ᐃᐃΔⵠ, 92, 301, ⲆⵠⲆ],
		[ᐃⵠ, "t", ᐃⵠⵠ, 91, 301, 0],
		[ⵠⵠⲆ, "t", 2, 90, 301, ΔΔᐃ],
		[1, "b", 2, 89, 302, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", 4, 89, 301, ⲆΔᐃ],
		[1, "t", 1, 88, 302, ⲆⵠⲆ],
		[1, "t", ⵠΔⲆΔ, 88, 301, ΔⲆⵠ],
		[1, "t", Δᐃᐃᐃ, 87, 302, ᐃⵠΔ],
		[1, "t", 4, 87, 299, Δⵠⵠ],
		[1, "t", Δⵠⵠⵠ, 86, 302, 0],
		[1, "t", ᐃⵠⵠ, 85, 302, Δⵠⵠ],
		[1, "t", 5, 85, 301, ΔΔᐃ],
		[ⵠⵠⲆ, "b", 2, 84, 302, 0],
		[1, "t", 5, 83, 302, ΔΔᐃ],
		[1, "t", 1, 82, 302, 0],
		[ⵠⵠⲆ, "t", 5, 81, 302, 0],
		[1, "t", ᐃⵠΔⲆ, 80, 302, ΔΔᐃ],
		[1, "t", Δⵠⵠⵠ, 79, 302, ΔⲆⵠ],
		[ΔⲆᐃ, "t", 2, 78, 302, ⲆΔᐃ],
		[ⵠⵠⲆ, "b", 1, 77, 302, 0],
		[ᐃⵠ, "b", ΔⲆⲆᐃ, 76, 302, ⲆⲆⲆ],
		[1, "t", ⵠΔⲆΔ, 75, 302, ΔⲆⵠ],
		[ᐃⵠ, "t", ᐃΔⲆΔ, 74, 302, ΔΔᐃ],
		[1, "b", 1, 73, 302, ⲆⲆⲆ],
		[1, "t", ⲆⲆⵠΔ, 72, 302, ⲆⲆⲆ],
		[ᐃⵠ, "t", ᐃΔΔΔ, 71, 302, ᐃⵠΔ],
		[1, "b", ⵠΔⵠⲆ, 70, 302, 0],
		[ᐃⵠⵠ, "t", ⵠⲆⲆ, 69, 302, 0],
		[ΔⲆᐃ, "t", 2, 68, 302, 0],
		[1, "t", ΔⲆⲆΔ, 67, 302, 0],
		[ᐃⵠ, "b", ΔⲆᐃ, 66, 302, 0],
		[ⵠⵠⲆ, "t", ⵠᐃⵠΔ, 65, 302, 0],
		[ⵠⲆⲆ, "t", ᐃΔΔΔ, 64, 302, Δⵠⵠ],
		[ΔⲆᐃ, "b", ⵠⲆⵠⵠ, 63, 302, Δⵠⵠ],
		[1, "t", 5, 62, 302, ΔⲆⵠ],
		[1, "b", ⵠⲆⲆ, 61, 302, Δⵠⵠ],
		[ⵠⲆⲆ, "t", ⲆⵠⵠΔ, 60, 302, ⲆΔᐃ],
		[1, "t", 4, 59, 302, Δⵠⵠ],
		[1, "b", 2, 58, 302, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 5, 57, 302, 0],
		[1, "t", 1, 56, 302, ΔΔᐃ],
		[ᐃⵠⵠ, "t", 3, 55, 302, ⲆΔᐃ],
		[1, "t", ᐃΔⲆΔ, 54, 302, 0],
		[ⵠⲆⲆ, "t", ᐃⵠ, 53, 302, ⲆΔᐃ],
		[1, "t", 5, 52, 302, 0],
		[1, "t", 2, 51, 302, 0],
		[ΔⲆᐃ, "t", 4, 50, 302, 0],
		[1, "t", ⵠⲆΔΔ, 49, 302, 0],
		[ᐃⵠ, "b", 1, 48, 302, 0],
		[ᐃⵠ, "t", 3, 47, 302, 0],
		[ᐃⵠ, "t", 4, 46, 302, 0],
		[1, "t", ᐃⵠ, 45, 302, 0],
		[ᐃⵠⵠ, "t", 2, 44, 302, 0],
		[ᐃⵠ, "t", 5, 43, 302, 0],
		[1, "t", 2, 42, 302, ⲆⵠⲆ],
		[ᐃⵠ, "t", ⵠⲆⲆ, 41, 302, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 4, 40, 302, ᐃⵠΔ],
		[1, "b", 2, 39, 302, ᐃⵠΔ],
		[ΔⲆᐃ, "t", 5, 38, 302, 0],
		[ΔⲆᐃ, "t", 1, 37, 302, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", ΔⲆⲆᐃ, 36, 302, ᐃⵠΔ],
		[1, "t", ⲆⲆᐃⵠ, 35, 302, ᐃⵠΔ],
		[ᐃⵠ, "t", ᐃⵠΔ, 34, 302, Δⵠⵠ],
		[ᐃⵠ, "t", ΔⲆΔⵠ, 33, 302, 0],
		[ⵠⲆⲆ, "t", ᐃΔΔΔ, 32, 302, ⲆⲆⲆ],
		[ΔⲆᐃ, "b", 1, 31, 302, ⲆⵠⲆ],
		[ᐃⵠ, "t", 2, 30, 302, 0],
		[1, "t", ᐃΔⲆΔ, 29, 302, 0],
		[1, "t", 2, 28, 302, 0],
		[ᐃⵠ, "t", 5, 27, 302, 0],
		[1, "b", Δᐃᐃᐃ, 26, 302, Δⵠⵠ],
		[1, "t", 1, 25, 302, ΔΔᐃ],
		[ⵠⲆⲆ, "t", ᐃΔⲆΔ, 24, 302, ᐃⵠΔ],
		[1, "t", 2, 23, 302, 0],
		[1, "t", ⵠⲆⲆ, 22, 302, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", 5, 21, 302, ΔⲆⵠ],
		[1, "t", ⵠⵠⲆᐃ, ⵠⲆΔⵠ, 302, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", ᐃΔΔΔ, ⲆΔΔⲆΔ, 302, 0],
		[ᐃⵠⵠ, "b", ᐃⵠ, 18, 302, ΔΔᐃ],
		[ᐃⵠ, "t", Δᐃⵠⵠ, ⲆⲆᐃⲆⲆ, 302, 0],
		[1, "t", 3, ᐃΔᐃᐃⲆ, 302, ⲆΔᐃ],
		[ⵠⵠⲆ, "t", ΔⲆᐃ, 15, 302, 0],
		[1, "t", ⲆΔᐃΔ, ΔⵠᐃΔΔ, 302, Δⵠⵠ],
		[ΔⲆᐃ, "t", 3, 13, 302, 0],
		[ᐃⵠⵠ, "t", 4, ΔΔᐃⲆᐃ, 302, 0],
		[1, "t", 1, 11, 302, 0],
		[1, "t", ⵠⲆΔΔ, ΔⲆⵠΔᐃ, 302, ΔΔᐃ],
		[1, "t", ⲆⲆΔΔ, 9, 302, 0],
		[ᐃⵠⵠ, "b", Δᐃᐃᐃ, ⲆⵠΔᐃⲆ, 302, 0],
		[1, "t", ᐃᐃⵠⵠ, 8, 302, 0],
		[1, "t", ⲆᐃᐃΔ, 7, 302, Δⵠⵠ],
		[ᐃⵠ, "b", ⵠΔⵠᐃ, ᐃⲆⵠⲆΔ, 302, 0],
		[ⵠⲆⲆ, "t", ᐃⵠ, Ⲇᐃᐃᐃⵠ, 301, 0],
		[ᐃⵠⵠ, "t", ⵠᐃᐃⲆ, 6, 300, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", 2, 6, 299, Δⵠⵠ],
		[ⵠⲆⲆ, "b", ΔⲆⵠ, ᐃⵠΔⵠⵠ, 298, 0],
		[ᐃⵠⵠ, "t", 5, 6, 297, ΔΔᐃ],
		[1, "t", 2, ⵠⲆΔⲆᐃ, 296, Δⵠⵠ],
		[1, "t", 0, ᐃⲆᐃⵠᐃ, 295, ⲆⵠⲆ],
		[1, "b", ⵠⵠⲆᐃ, 6, 294, 0],
		[1, "t", ⲆΔⵠᐃ, 6, 293, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 1, ᐃⲆᐃᐃΔ, 292, 0],
		[ⵠⲆⲆ, "b", ⲆⲆⲆ, 6, 291, ⲆΔᐃ],
		[ΔⲆᐃ, "t", ᐃⵠΔⲆ, 6, 290, ⲆⵠⲆ],
		[1, "t", 5, 6, 289, 0],
		[1, "t", ᐃⵠⵠ, 6, 288, 0],
		[1, "t", 4, ᐃⲆᐃᐃΔ, 287, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", 2, 6, 286, 0],
		[1, "t", 5, Ⲇᐃᐃᐃⵠ, 285, ⲆⵠⲆ],
		[1, "t", ᐃᐃΔⵠ, ᐃⲆᐃᐃΔ, 284, 0],
		[1, "b", ΔΔᐃ, 6, 283, 0],
		[ⵠⵠⲆ, "t", 2, 6, 282, 0],
		[ⵠⲆⲆ, "t", 5, 6, 281, ᐃⵠΔ],
		[1, "b", ᐃᐃΔⵠ, ⵠⲆΔⲆᐃ, 280, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", 5, ᐃⲆᐃᐃΔ, 279, ⲆⲆⲆ],
		[ᐃⵠⵠ, "t", 1, 6, 278, 0],
		[1, "t", ᐃΔᐃΔ, 6, 277, 0],
		[ⵠⵠⲆ, "t", 3, 6, 276, Δⵠⵠ],
		[1, "t", ⲆΔⵠᐃ, 6, 275, 0],
		[1, "b", 0, Ⲇᐃᐃᐃⵠ, 274, ᐃⵠΔ],
		[ᐃⵠ, "t", 5, ᐃⲆᐃᐃΔ, 273, 0],
		[ⵠⵠⲆ, "t", 1, ᐃⵠΔⵠⵠ, 272, 0],
		[ⵠⲆⲆ, "t", ⵠᐃᐃⲆ, 6, 271, ΔΔᐃ],
		[1, "b", 3, 6, 270, ΔΔᐃ],
		[ᐃⵠ, "t", 5, 6, 269, 0],
		[ᐃⵠ, "t", 1, ⵠΔⵠⵠⲆ, 268, 0],
		[ⵠⵠⲆ, "t", 4, ⵠⲆⵠⵠᐃ, 267, 0],
		[1, "t", ΔⲆᐃ, ⵠⲆⵠⵠᐃ, 266, 0],
		[1, "t", 3, ⵠᐃⲆⵠ, 265, Δⵠⵠ],
		[ΔⲆᐃ, "t", 4, ᐃⲆᐃᐃΔ, 264, 0],
		[1, "b", ᐃⵠΔⲆ, 6, 263, 0],
		[1, "t", ᐃᐃⵠⵠ, ᐃⲆⵠⲆΔ, 262, 0],
		[1, "t", 3, ᐃⲆᐃⵠᐃ, 261, 0],
		[ΔⲆᐃ, "t", ⲆⲆⲆ, 6, 260, ⲆⵠⲆ],
		[ᐃⵠⵠ, "t", ⲆⲆᐃⵠ, 6, 259, 0],
		[1, "t", ⵠⵠⲆ, Ⲇᐃᐃᐃⵠ, 258, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", ΔⲆΔⵠ, 6, 257, ⲆΔᐃ],
		[1, "t", 4, ᐃⲆⵠⲆΔ, ⲆⵠΔΔΔ, 0],
		[1, "t", ⵠⲆⲆΔ, 6, 254, 0],
		[1, "t", Δᐃⵠⵠ, 6, 253, 0],
		[1, "b", 2, ᐃⵠΔⵠⵠ, 252, ΔΔᐃ],
		[1, "t", 5, ᐃⲆᐃⵠᐃ, 251, ᐃⵠΔ],
		[1, "t", ⵠⵠⲆ, ᐃⲆᐃⵠᐃ, 250, ⲆⵠⲆ],
		[ᐃⵠ, "t", 3, 6, 249, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", 4, ᐃⵠΔⵠⵠ, 248, 0],
		[ᐃⵠⵠ, "b", 3, 6, 247, ⲆⵠⲆ],
		[1, "t", 5, ⵠⲆⵠⵠᐃ, 246, ⲆⵠⲆ],
		[1, "t", 3, ⵠⲆⵠⵠᐃ, 245, Δⵠⵠ],
		[1, "t", 5, 6, 244, ᐃⵠΔ],
		[ᐃⵠ, "t", 0, 6, 243, ⲆΔᐃ],
		[ⵠⵠⲆ, "t", ᐃΔΔΔ, 6, 242, 0],
		[1, "t", 3, ⵠᐃⲆⵠ, 241, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", 5, 6, 240, 0],
		[1, "b", ΔⲆⵠ, 6, 239, ⲆⲆⲆ],
		[1, "t", 3, 6, 238, 0],
		[ᐃⵠⵠ, "t", ⲆⲆΔΔ, 6, 237, 0],
		[ⵠⵠⲆ, "t", ᐃⵠⵠ, 6, 236, 0],
		[1, "t", Δᐃⵠⵠ, ⵠᐃⲆⵠ, 235, 0],
		[1, "b", 2, 6, 234, 0],
		[ᐃⵠⵠ, "t", 2, 6, 233, 0],
		[ᐃⵠⵠ, "t", ⵠᐃᐃⲆ, ᐃⲆᐃⵠᐃ, 232, 0],
		[ⵠⵠⲆ, "b", ⵠΔᐃⲆ, 6, 231, ΔΔᐃ],
		[ᐃⵠ, "t", 5, 6, 230, ΔΔᐃ],
		[1, "t", 1, 6, 229, 0],
		[ΔⲆᐃ, "t", 2, ⵠⲆⵠⵠᐃ, 228, ᐃⵠΔ],
		[1, "t", 5, 6, 227, ᐃⵠΔ],
		[ΔⲆᐃ, "b", 2, 6, 226, ⲆⲆⲆ],
		[ᐃⵠ, "t", 4, 6, 225, 0],
		[ΔⲆᐃ, "t", ⲆⲆⲆ, ᐃⲆⵠⲆΔ, 224, 0],
		[1, "t", 2, 6, 223, Δⵠⵠ],
		[1, "t", ⲆΔᐃ, ᐃⲆⵠⲆΔ, 222, 0],
		[ᐃⵠ, "b", 2, Ⲇᐃᐃᐃⵠ, 221, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", 4, 6, 220, 0],
		[ΔⲆᐃ, "b", ⵠⲆⲆΔ, ⵠΔⵠⵠⲆ, 219, ⲆΔᐃ],
		[1, "t", 5, 6, 218, 0],
		[1, "t", 0, ⵠᐃⲆⵠ, 217, ΔΔᐃ],
		[ᐃⵠ, "t", 3, ⵠΔⵠⵠⲆ, 216, ⲆⲆⲆ],
		[ΔⲆᐃ, "b", Δⵠⵠ, 6, 215, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", ⵠᐃᐃⲆ, ⵠⲆⵠⵠᐃ, 214, ΔΔᐃ],
		[ⵠⵠⲆ, "t", ⵠᐃⵠΔ, ⵠᐃⲆⵠ, 213, 0],
		[ⵠⲆⲆ, "t", ⲆΔᐃ, 6, 212, ⲆΔᐃ],
		[1, "t", 2, 6, 211, ᐃⵠΔ],
		[1, "b", ΔⵠⵠΔ, ⵠᐃⲆⵠ, 210, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", 0, 6, 209, ⲆΔᐃ],
		[ᐃⵠ, "t", 5, 6, 207, Δⵠⵠ],
		[ΔⲆᐃ, "t", ᐃⵠΔⲆ, ᐃⲆᐃⵠᐃ, 208, 0],
		[1, "t", ⲆⵠⲆ, ᐃⲆᐃᐃΔ, 206, ᐃⵠΔ],
		[ᐃⵠ, "t", 2, 6, 205, ᐃⵠΔ],
		[1, "t", 2, Ⲇᐃᐃᐃⵠ, 203, ΔⲆⵠ],
		[ⵠⲆⲆ, "b", ΔΔᐃ, ⵠᐃⲆⵠ, 202, 0],
		[1, "t", ΔⲆΔⵠ, 6, 201, 0],
		[ᐃⵠⵠ, "t", ᐃΔᐃΔ, ᐃⲆᐃᐃΔ, 199, 0],
		[1, "t", ⲆⲆⲆ, ⵠⲆΔⲆᐃ, 198, Δⵠⵠ],
		[1, "t", 2, ⵠⲆΔⲆᐃ, 197, 0],
		[1, "t", 4, 6, 196, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", ⵠⵠⲆ, 6, 195, 0],
		[1, "t", Δᐃᐃᐃ, ⵠⲆΔⲆᐃ, 194, 0],
		[ⵠⲆⲆ, "t", 4, ⲆΔᐃⵠᐃ, 192, ΔΔᐃ],
		[1, "t", ⲆⲆⵠΔ, ⵠΔⵠⵠⲆ, 191, ⲆΔᐃ],
		[1, "b", ΔΔᐃ, Ⲇᐃᐃᐃⵠ, 190, 0],
		[1, "t", 3, 6, 189, ⲆΔᐃ],
		[1, "t", 4, 6, 187, 0],
		[1, "b", ΔΔᐃ, 6, 186, 0],
		[1, "t", 2, 6, 185, ⲆΔᐃ],
		[1, "t", ⵠᐃᐃⲆ, 6, 184, ΔⲆⵠ],
		[1, "t", ⵠᐃⵠΔ, ᐃⲆᐃⵠᐃ, 183, 0],
		[ⵠⲆⲆ, "t", ⲆⵠⲆ, ᐃⲆⵠⲆΔ, 182, ᐃⵠΔ],
		[ᐃⵠ, "b", 2, ⵠⲆΔⲆᐃ, 181, ΔΔᐃ],
		[1, "t", ⲆᐃᐃΔ, ᐃⲆᐃⵠᐃ, 180, 0],
		[1, "t", ⵠᐃⵠΔ, Ⲇᐃᐃᐃⵠ, 179, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 0, 6, 178, 0],
		[ⵠⲆⲆ, "t", ⵠᐃⵠΔ, ᐃⲆᐃᐃΔ, 177, ⲆΔᐃ],
		[ⵠⲆⲆ, "t", 4, ⵠΔⵠⵠⲆ, 176, ΔⲆⵠ],
		[ᐃⵠ, "b", ⵠΔⲆΔ, 6, 175, ΔΔᐃ],
		[ᐃⵠⵠ, "t", 1, 6, 174, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", ⲆΔⵠᐃ, 6, 173, 0],
		[1, "t", 2, ᐃⵠΔⵠⵠ, 256, 0],
		[1, "t", ᐃΔⲆΔ, 6, 204, 0],
		[1, "t", 4, 6, 200, 0],
		[1, "t", 2, ⵠⲆⵠⵠᐃ, 193, 0],
		[ᐃⵠ, "t", 2, 6, 188, ᐃⵠΔ],
		[1, "f", ΔⲆᐃ, Ⲇᐃᐃᐃⵠ, 150, 1],
		[1, "f", 2, 6, 151, 1],
		[ᐃⵠⵠ, "f", 2, ⵠΔⵠⵠⲆ, 149, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 6, 148, 1],
		[1, "f", ⵠΔⲆΔ, 6, 147, ⵠⲆⲆ],
		[ᐃⵠ, "f", 2, 6, 145, 1],
		[ⵠⵠⲆ, "f", 2, ⲆΔᐃⵠᐃ, 143, 1],
		[1, "f", 1, 6, 146, 1],
		[1, "f", 1, 6, 144, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", 1, 6, 142, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", 2, ᐃⲆⵠⲆΔ, 141, ΔⲆᐃ],
		[1, "f", ΔⲆⲆᐃ, ⵠⲆⵠⵠᐃ, 139, 1],
		[1, "f", ⵠⲆΔΔ, 6, 137, ⵠⲆⲆ],
		[ᐃⵠ, "f", ΔⲆⲆᐃ, Ⲇᐃᐃᐃⵠ, 135, 1],
		[ⵠⲆⲆ, "f", 2, 6, 133, 1],
		[1, "f", ΔⲆᐃ, 6, 140, ΔⲆᐃ],
		[1, "f", 1, 6, 138, 1],
		[ΔⲆᐃ, "f", ᐃⵠⵠ, 6, 136, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", 1, 6, 134, 1],
		[ΔⲆᐃ, "f", ᐃⵠ, Ⲇᐃᐃᐃⵠ, 132, 1],
		[ΔⲆᐃ, "f", ΔⲆⲆᐃ, 6, 131, ᐃⵠ],
		[ΔⲆᐃ, "f", 2, ⲆΔᐃⵠᐃ, 129, ⵠⲆⲆ],
		[1, "f", ⵠⲆΔΔ, ᐃⲆᐃᐃΔ, 127, 1],
		[ᐃⵠⵠ, "f", 2, 6, 125, 1],
		[1, "f", ΔⲆⲆᐃ, 6, 123, 1],
		[ⵠⵠⲆ, "f", ᐃⵠΔⲆ, ⵠᐃⲆⵠ, 121, ΔⲆᐃ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, ⵠᐃⲆⵠ, 130, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", ΔⲆᐃ, ⵠⲆⵠⵠᐃ, 128, 1],
		[1, "f", ΔⲆᐃ, 6, 126, ΔⲆᐃ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, Ⲇᐃᐃᐃⵠ, 124, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 1, 6, 122, ΔⲆᐃ],
		[1, "f", ᐃⵠ, ᐃⵠΔⵠⵠ, 120, ᐃⵠⵠ],
		[1, "f", ⵠΔⵠᐃ, ⵠΔⵠⵠⲆ, 119, 1],
		[1, "f", 2, ⵠΔⵠⵠⲆ, 117, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ᐃⵠΔⲆ, ⵠᐃⲆⵠ, 115, ΔⲆᐃ],
		[ⵠⵠⲆ, "f", ⵠⲆΔΔ, ⲆΔᐃⵠᐃ, 113, 1],
		[1, "f", 2, 6, 111, ᐃⵠ],
		[1, "f", ⵠⲆΔΔ, 6, 109, ⵠⲆⲆ],
		[ⵠⵠⲆ, "f", 1, ⲆΔᐃⵠᐃ, 118, 1],
		[1, "f", ⵠⲆⲆ, 6, 116, 1],
		[ⵠⲆⲆ, "f", 1, Ⲇᐃᐃᐃⵠ, 114, ⵠⲆⲆ],
		[1, "f", 1, 6, 112, 1],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, ᐃⲆᐃⵠᐃ, 110, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ⵠⲆⲆ, 6, 108, 1],
		[1, "f", 1, ⲆΔᐃⵠᐃ, 106, ⵠⲆⲆ],
		[1, "f", ⵠⲆⲆ, ⵠᐃⲆⵠ, 104, 1],
		[1, "f", 2, 6, 107, 1],
		[ᐃⵠ, "f", 2, ⲆΔᐃⵠᐃ, 105, 1],
		[ⵠⲆⲆ, "f", 2, ᐃⲆᐃⵠᐃ, 103, 1],
		[ⵠⲆⲆ, "f", 2, ⵠⲆⵠⵠᐃ, 101, ᐃⵠ],
		[1, "f", ΔⲆⲆᐃ, 6, 99, ᐃⵠⵠ],
		[1, "f", ⵠⲆΔΔ, 6, 97, 1],
		[ⵠⲆⲆ, "f", 2, 6, 95, 1],
		[1, "f", ⵠⵠⲆᐃ, 6, 93, ᐃⵠ],
		[1, "f", 2, ⵠΔⵠⵠⲆ, 91, 1],
		[1, "f", ⵠⵠⲆ, ⵠΔⵠⵠⲆ, 102, ᐃⵠⵠ],
		[1, "f", ᐃⵠ, 6, 100, ΔⲆᐃ],
		[1, "f", 1, 6, 98, 1],
		[ᐃⵠ, "f", ⵠⲆⲆ, ᐃⲆᐃⵠᐃ, 96, 1],
		[1, "f", 1, ⵠΔⵠⵠⲆ, 94, ΔⲆᐃ],
		[ᐃⵠ, "f", ᐃⵠⵠ, 6, 92, 1],
		[ᐃⵠ, "f", 1, ᐃⲆⵠⲆΔ, 90, 1],
		[1, "f", 1, 6, 88, 1],
		[1, "f", ⵠⵠⲆ, ᐃⵠΔⵠⵠ, 86, ᐃⵠⵠ],
		[1, "f", ⵠⲆΔΔ, ᐃⲆⵠⲆΔ, 89, ᐃⵠⵠ],
		[1, "f", ⵠⲆΔΔ, Ⲇᐃᐃᐃⵠ, 87, ᐃⵠ],
		[ΔⲆᐃ, "f", 2, ᐃⲆⵠⲆΔ, 85, ΔⲆᐃ],
		[ᐃⵠ, "f", ⵠᐃⵠΔ, Ⲇᐃᐃᐃⵠ, 83, ⵠⵠⲆ],
		[1, "f", ⵠⵠⲆᐃ, ⵠⲆΔⲆᐃ, 81, 1],
		[1, "f", 2, 6, 79, ᐃⵠ],
		[ⵠⲆⲆ, "f", 2, 6, 77, ᐃⵠⵠ],
		[ᐃⵠ, "f", 1, ⵠᐃⲆⵠ, 84, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 1, ⵠᐃⲆⵠ, 82, 1],
		[ΔⲆᐃ, "f", ᐃⵠ, 6, 80, ⵠⵠⲆ],
		[1, "f", ᐃⵠⵠ, ᐃⲆⵠⲆΔ, 78, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", ᐃⵠⵠ, 6, 76, 1],
		[ᐃⵠⵠ, "f", ᐃⵠΔⲆ, ᐃⲆᐃⵠᐃ, 75, 1],
		[1, "f", 2, Ⲇᐃᐃᐃⵠ, 73, 1],
		[ΔⲆᐃ, "f", ⵠⵠⲆᐃ, 6, 71, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 2, 6, 69, 1],
		[1, "f", ⵠᐃⵠΔ, ᐃⲆⵠⲆΔ, 67, 1],
		[ᐃⵠ, "f", ΔⲆⲆᐃ, ⵠᐃⲆⵠ, 65, ᐃⵠⵠ],
		[1, "f", ᐃⵠⵠ, 6, 74, ⵠⵠⲆ],
		[1, "f", 1, ᐃⵠΔⵠⵠ, 72, ⵠⵠⲆ],
		[1, "f", ᐃⵠⵠ, 6, 70, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", 1, 6, 68, 1],
		[1, "f", 1, 6, 66, ⵠⲆⲆ],
		[1, "f", ⵠⵠⲆ, ᐃⵠΔⵠⵠ, 64, ᐃⵠ],
		[1, "f", 2, 6, 63, ΔⲆᐃ],
		[1, "f", 2, 6, 61, 1],
		[ᐃⵠⵠ, "f", ΔⲆⲆᐃ, 6, 59, 1],
		[1, "f", ⵠⲆΔΔ, 6, 57, 1],
		[ⵠⵠⲆ, "f", 2, 6, 55, ⵠⵠⲆ],
		[1, "f", 2, 6, 53, 1],
		[1, "f", ᐃⵠΔⲆ, ⵠΔⵠⵠⲆ, 51, ᐃⵠ],
		[ⵠⲆⲆ, "f", ΔⲆᐃ, ⵠⲆΔⲆᐃ, 62, ΔⲆᐃ],
		[ᐃⵠ, "f", 1, 6, 60, ᐃⵠ],
		[ᐃⵠ, "f", ⵠⲆⲆ, 6, 58, 1],
		[ΔⲆᐃ, "f", ⵠⵠⲆ, ᐃⲆᐃⵠᐃ, 56, ᐃⵠ],
		[1, "f", 1, 6, 54, ΔⲆᐃ],
		[1, "f", 1, ⲆΔᐃⵠᐃ, 52, 1],
		[1, "f", ΔⲆᐃ, 6, 50, ΔⲆᐃ],
		[ᐃⵠⵠ, "f", ΔⲆⲆᐃ, ᐃⵠΔⵠⵠ, 49, ᐃⵠⵠ],
		[1, "f", 2, ᐃⵠΔⵠⵠ, 47, 1],
		[ΔⲆᐃ, "f", 2, ᐃⲆⵠⲆΔ, 45, ᐃⵠ],
		[ΔⲆᐃ, "f", ⵠΔⲆΔ, 6, 43, 1],
		[1, "f", ᐃᐃΔⵠ, ᐃⲆᐃᐃΔ, 41, 1],
		[1, "f", ᐃᐃΔⵠ, 6, 39, 1],
		[1, "f", ⵠⲆⲆ, 6, 48, 1],
		[ΔⲆᐃ, "f", 1, ⲆΔᐃⵠᐃ, 46, 1],
		[1, "f", ΔⲆᐃ, ⵠⲆΔⲆᐃ, 44, 1],
		[1, "f", ᐃⵠ, ⵠⲆΔⲆᐃ, 42, 1],
		[1, "f", ⵠⲆⲆ, ⲆΔᐃⵠᐃ, 40, 1],
		[1, "f", 1, 6, 38, 1],
		[1, "f", 2, 6, 37, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ᐃᐃΔⵠ, 6, 35, 1],
		[1, "f", 2, 6, 33, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", ⵠⵠⲆᐃ, ⵠΔⵠⵠⲆ, 31, ᐃⵠⵠ],
		[1, "f", 2, 6, 29, ᐃⵠ],
		[1, "f", 2, 6, 27, 1],
		[1, "f", ⵠⲆⲆ, ᐃⵠΔⵠⵠ, 36, 1],
		[ᐃⵠⵠ, "f", 1, 6, 34, ΔⲆᐃ],
		[1, "f", 1, ⵠᐃⲆⵠ, 32, 1],
		[1, "f", 1, ᐃⵠΔⵠⵠ, 30, ᐃⵠⵠ],
		[1, "f", ᐃⵠ, 6, 28, 1],
		[ⵠⲆⲆ, "f", ⵠⲆⲆ, 6, 26, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", ⵠⵠⲆᐃ, 6, 25, 1],
		[ΔⲆᐃ, "f", 2, ⵠΔⵠⵠⲆ, 23, 1],
		[ΔⲆᐃ, "f", ᐃᐃΔⵠ, ⵠᐃⲆⵠ, 21, 1],
		[1, "f", ᐃᐃΔⵠ, ⵠΔⵠⵠⲆ, ⵠⲆᐃᐃⲆ, 1],
		[ⵠⵠⲆ, "f", ΔⲆⲆᐃ, 6, 17, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", 2, 6, 15, 1],
		[1, "f", ⵠⲆⲆ, ⵠⲆⵠⵠᐃ, 24, 1],
		[ᐃⵠⵠ, "f", 1, ⲆΔᐃⵠᐃ, 22, 1],
		[1, "f", 1, ⲆΔᐃⵠᐃ, ⵠⵠΔⵠ, 1],
		[1, "f", 1, ⵠⲆΔⲆᐃ, 18, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", 1, ⵠⲆⵠⵠᐃ, 16, ⵠⲆⲆ],
		[1, "f", ⵠᐃⵠΔ, 6, ⲆⲆΔᐃⵠ, 1],
		[ᐃⵠ, "f", 2, ⵠᐃⲆⵠ, 11, ᐃⵠⵠ],
		[ᐃⵠ, "f", 2, ⵠⲆΔⲆᐃ, 9, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", ᐃⵠΔⲆ, ᐃⲆⵠⲆΔ, Ⲇⵠᐃᐃᐃ, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", 1, 6, 14, ᐃⵠ],
		[1, "f", ⵠⲆⲆ, ⲆΔᐃⵠᐃ, ⵠᐃⲆΔΔ, 1],
		[ᐃⵠⵠ, "f", ⵠⲆⲆ, 6, ΔᐃΔᐃⵠ, 1],
		[1, "f", 1, ᐃⵠΔⵠⵠ, ⵠᐃᐃΔⲆ, ΔⲆᐃ],
		[ᐃⵠ, "f", ᐃⵠⵠ, ᐃⲆⵠⲆΔ, 6, ⵠⲆⲆ],
		[1, "f", ᐃⵠⵠ, ΔⲆᐃᐃᐃ, ⵠⲆⵠⵠᐃ, ΔⲆᐃ],
		[1, "f", ⵠᐃⵠΔ, 7, ᐃⲆᐃⵠᐃ, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 2, 9, 6, 1],
		[ⵠⵠⲆ, "f", ΔⲆⲆᐃ, 11, 6, 1],
		[ⵠⵠⲆ, "f", ⵠᐃⵠΔ, 13, 6, ᐃⵠⵠ],
		[1, "f", ΔⲆⲆᐃ, 15, 6, ᐃⵠⵠ],
		[1, "f", ᐃⵠⵠ, ΔᐃΔᐃⵠ, ᐃⲆᐃᐃΔ, 1],
		[ΔⲆᐃ, "f", 1, 12, 6, 1],
		[ᐃⵠ, "f", ΔⲆᐃ, 14, Ⲇᐃᐃᐃⵠ, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", 1, ⵠΔⵠᐃⵠ, ᐃⵠΔⵠⵠ, ⵠⵠⲆ],
		[1, "f", 1, 18, 6, ⵠⵠⲆ],
		[1, "f", ΔⲆᐃ, ⵠⵠᐃᐃ, ⵠⲆΔⲆᐃ, 1],
		[1, "f", ⵠⵠⲆ, 22, 6, ᐃⵠⵠ],
		[1, "f", ⵠⵠⲆ, 24, 6, ᐃⵠ],
		[1, "f", ⵠⵠⲆ, 26, Ⲇᐃᐃᐃⵠ, ᐃⵠⵠ],
		[ᐃⵠ, "f", ᐃⵠΔⲆ, 17, ⵠᐃⲆⵠ, ΔⲆᐃ],
		[ⵠⲆⲆ, "f", 2, 19, 6, ⵠⲆⲆ],
		[1, "f", 2, 21, 6, ᐃⵠ],
		[ⵠⵠⲆ, "f", 2, 23, 6, ᐃⵠ],
		[1, "f", 2, 25, ⵠᐃⲆⵠ, 1],
		[1, "f", 2, 27, 6, ⵠⲆⲆ],
		[1, "f", 2, 29, ᐃⵠΔⵠⵠ, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", ⵠΔⲆΔ, 31, ᐃⲆᐃᐃΔ, 1],
		[ⵠⵠⲆ, "f", 2, 33, ⵠⲆΔⲆᐃ, ΔⲆᐃ],
		[ᐃⵠ, "f", 1, 28, 6, 1],
		[ᐃⵠ, "f", ΔⲆᐃ, 30, Ⲇᐃᐃᐃⵠ, ΔⲆᐃ],
		[1, "f", ⵠⲆⲆ, 32, 6, 1],
		[1, "f", ᐃⵠⵠ, 34, ⵠᐃⲆⵠ, 1],
		[ⵠⲆⲆ, "f", 2, 67, 6, ᐃⵠ],
		[1, "f", ᐃᐃΔⵠ, 69, 6, ΔⲆᐃ],
		[ᐃⵠⵠ, "f", 2, 71, 6, ⵠⲆⲆ],
		[1, "f", 2, 73, ᐃⲆⵠⲆΔ, ⵠⲆⲆ],
		[1, "f", ⵠΔⲆΔ, 75, ⲆΔᐃⵠᐃ, 1],
		[ⵠⲆⲆ, "f", ᐃⵠ, 68, Ⲇᐃᐃᐃⵠ, ⵠⲆⲆ],
		[1, "f", ⵠⵠⲆ, 70, 6, 1],
		[1, "f", 1, 72, 6, 1],
		[ⵠⵠⲆ, "f", ᐃⵠ, 74, 6, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 1, 76, ⵠᐃⲆⵠ, 1],
		[1, "f", 2, 77, Ⲇᐃᐃᐃⵠ, 1],
		[1, "f", 2, 79, 6, 1],
		[ⵠⲆⲆ, "f", ⲆⲆⵠΔ, 81, 6, ⵠⵠⲆ],
		[1, "f", ⵠΔⵠᐃ, 83, ⵠⲆⵠⵠᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, "f", ⵠⲆΔΔ, 85, Ⲇᐃᐃᐃⵠ, 1],
		[1, "f", 1, 78, 6, 1],
		[1, "f", 1, 80, ⵠᐃⲆⵠ, ⵠⵠⲆ],
		[ᐃⵠ, "f", 1, 82, ᐃⲆᐃⵠᐃ, 1],
		[1, "f", 1, 84, 6, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 1, 86, 6, 1],
		[1, "f", 2, 87, ⵠⲆΔⲆᐃ, 1],
		[ⵠⲆⲆ, "f", ⵠⲆΔΔ, 89, ⲆΔᐃⵠᐃ, ⵠⵠⲆ],
		[1, "f", ⵠΔⲆΔ, 91, 6, ΔⲆᐃ],
		[1, "f", 2, 93, 6, 1],
		[1, "f", 1, 88, 6, ΔⲆᐃ],
		[1, "f", 1, 90, 6, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", ΔⲆᐃ, 92, ⵠⲆⵠⵠᐃ, 1],
		[ΔⲆᐃ, "f", ⵠⲆⲆ, 94, 6, ⵠⲆⲆ],
		[1, "f", ⵠΔⲆΔ, 95, ⵠΔⵠⵠⲆ, 1],
		[1, "f", ⵠⵠⲆ, 95, 7, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", 1, 83, 7, 1],
		[1, "f", ᐃⵠⵠ, 81, 7, ᐃⵠ],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 79, ᐃⲆⲆΔᐃ, ΔⲆᐃ],
		[1, "f", ⵠⵠⲆ, 77, 7, ⵠⵠⲆ],
		[ᐃⵠ, "f", 1, 75, 7, ᐃⵠ],
		[ⵠⲆⲆ, "f", ᐃⵠ, 73, ⲆⵠΔΔⵠ, 1],
		[ΔⲆᐃ, "f", 1, 71, 7, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 69, 7, 1],
		[1, "f", 1, 33, ᐃⲆⲆΔᐃ, ᐃⵠ],
		[1, "f", 1, 31, 7, 1],
		[1, "f", 1, 29, ΔΔⲆⵠⵠ, ᐃⵠ],
		[1, "f", ⵠⲆⲆ, 27, ⲆⵠΔΔⵠ, ⵠⲆⲆ],
		[ⵠⵠⲆ, "f", 1, 25, ⲆⵠΔΔⵠ, 1],
		[1, "f", 1, 23, ᐃⲆⲆΔᐃ, ᐃⵠ],
		[ᐃⵠⵠ, "f", ⵠⲆⲆ, 21, 7, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", 1, 19, 7, ⵠⵠⲆ],
		[1, "f", ⵠⵠⲆ, 17, ᐃⲆⲆΔᐃ, ⵠⵠⲆ],
		[1, "f", 1, ᐃⲆⵠᐃᐃ, Ⲇⵠᐃᐃᐃ, 1],
		[1, "f", 1, 13, 7, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", ᐃⵠⵠ, 11, 7, ⵠⵠⲆ],
		[ᐃⵠ, "f", 1, 9, ΔΔⲆᐃⵠ, 1],
		[1, "f", 1, ΔΔⲆⵠⵠ, 7, 1],
		[1, "s", 0, 7, 8, 1],
		[1, "t", 4, 7, 174, 0],
		[1, "t", ⲆᐃᐃΔ, ᐃⲆⵠⲆⲆ, 175, ⲆΔᐃ],
		[1, "t", 4, ΔΔⲆⵠⵠ, 176, 0],
		[1, "b", ᐃⵠΔⲆ, 7, 177, 0],
		[ᐃⵠ, "t", Δᐃᐃᐃ, 94, 301, 0],
		[1, "b", ⵠⲆⲆΔ, 95, 301, ⲆⲆⲆ],
		[1, "t", ⲆⵠⲆⲆ, 96, 301, ᐃⵠΔ],
		[1, "t", ΔⲆᐃ, 97, 301, ΔΔᐃ],
		[ᐃⵠⵠ, "t", 2, 98, 301, ⲆⲆⲆ],
		[1, "t", 4, 99, 301, 0],
		[1, "t", ⵠⲆΔΔ, 100, 301, 0],
		[1, "t", ⲆⲆΔΔ, 96, 304, 0],
		[ⵠⵠⲆ, "t", ⵠⵠⲆᐃ, 96, 302, 0],
		[ᐃⵠⵠ, "t", 2, 97, 304, 0],
		[ⵠⵠⲆ, "t", 2, 96, 303, 0],
		[ᐃⵠ, "t", ΔⲆⲆΔ, 97, 303, ⲆΔᐃ],
		[1, "t", ⲆΔᐃΔ, 98, 304, ⲆⵠⲆ],
		[1, "b", 2, 97, 302, ΔⲆⵠ],
		[ᐃⵠⵠ, "b", 2, 99, 304, ⲆΔᐃ],
		[1, "t", ᐃⵠⵠ, 98, 303, 0],
		[ΔⲆᐃ, "t", 4, 98, 302, 0],
		[ⵠⲆⲆ, "t", 4, 99, 303, 0],
		[ᐃⵠ, "t", 4, ⲆⲆⵠⵠⲆ, 304, Δⵠⵠ],
		[ⵠⵠⲆ, "t", ⲆᐃᐃΔ, 99, 302, 0],
		[1, "t", 5, 101, 303, ⲆⲆⲆ],
		[1, "t", ⵠΔⵠᐃ, 100, 303, 0],
		[1, "t", 0, 100, 302, ⲆⵠⲆ],
		[1, "t", Δⵠⵠ, 101, 304, 0],
		[1, "t", 4, 102, 304, ΔΔᐃ],
		[ᐃⵠⵠ, "f", ⲆⵠⲆ, 94, 7, ᐃⵠ],
		[1, "f", 1, 93, 7, ᐃⵠⵠ],
		[1, "f", 1, 92, 7, 1],
		[1, "f", ΔⲆⵠ, 91, ΔΔⲆᐃⵠ, ᐃⵠ],
		[1, "f", 1, 90, 7, ⵠⲆⲆ],
		[1, "f", ⵠⲆⲆ, 89, ᐃⲆⵠⲆⲆ, ΔⲆᐃ],
		[ᐃⵠ, "f", 0, 88, ⲆⵠΔΔⵠ, ᐃⵠ],
		[ᐃⵠ, "f", ⵠⵠⲆ, 87, 7, 1],
		[1, "f", 1, 86, 7, 1],
		[ⵠⲆⲆ, "f", ΔⲆᐃ, 85, ΔΔⲆᐃⵠ, 1],
		[ⵠⲆⲆ, "f", ⲆΔᐃ, 84, Ⲇⵠᐃᐃᐃ, ⵠⵠⲆ],
		[1, "f", ⵠⲆⲆ, 82, 7, ᐃⵠ],
		[1, "f", 0, 80, 7, ΔⲆᐃ],
		[1, "f", 1, 78, 7, 1],
		[ΔⲆᐃ, "f", 0, 76, 7, ᐃⵠⵠ],
		[1, "f", ᐃⵠ, 74, Ⲇⵠᐃᐃᐃ, ⵠⵠⲆ],
		[1, "f", Δⵠⵠ, 72, ΔΔⲆᐃⵠ, ᐃⵠⵠ],
		[1, "f", Δⵠⵠ, 70, Ⲇⵠᐃᐃᐃ, 1],
		[ᐃⵠ, "f", ⵠⵠⲆ, 68, 7, ⵠⵠⲆ],
		[ⵠⲆⲆ, "f", ΔⲆᐃ, 32, 7, 1],
		[ⵠⵠⲆ, "f", ⲆⵠⲆ, 30, 7, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", 1, 28, 7, ⵠⲆⲆ],
		[1, "f", 0, 26, 7, ⵠⲆⲆ],
		[ⵠⵠⲆ, "f", ᐃⵠⵠ, 24, 7, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", ⲆⲆⲆ, 22, 7, 1],
		[1, "f", 1, 20, 7, 1],
		[1, "f", ΔⲆⵠ, 18, ⵠᐃⵠⲆᐃ, 1],
		[ᐃⵠⵠ, "f", 1, 16, ᐃⲆⵠΔᐃ, ᐃⵠ],
		[ⵠⲆⲆ, "f", 0, ΔⲆⲆⲆⲆ, ᐃⲆⵠⲆⲆ, 1],
		[1, "f", 1, ⵠⲆⵠⲆΔ, 7, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", Δⵠⵠ, 10, 7, 1],
		[ᐃⵠ, "f", 1, 8, 7, 1],
		[1, "s", 1, ⵠΔᐃⲆᐃ, 9, 1],
		[ᐃⵠ, "f", Δⵠⵠ, 95, 152, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", 1, 95, 151, 1],
		[1, "f", 0, 95, 11, ᐃⵠ],
		[ᐃⵠ, "f", 1, 95, 12, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, 95, 14, 1],
		[ᐃⵠⵠ, "f", 1, 95, 19, ⵠⵠⲆ],
		[1, "f", 0, 95, 15, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 0, 95, ⲆᐃΔⵠ, 1],
		[1, "f", ᐃⵠⵠ, 95, 21, ΔⲆᐃ],
		[1, "f", ⵠⵠⲆ, 95, 26, ⵠⲆⲆ],
		[1, "f", ⵠⵠⲆ, 95, 37, 1],
		[ΔⲆᐃ, "f", 0, 95, 44, ⵠⲆⲆ],
		[1, "f", 1, 95, 50, ⵠⲆⲆ],
		[1, "f", 1, 95, 52, 1],
		[ᐃⵠⵠ, "f", 0, 95, 53, 1],
		[1, "f", 1, 95, 54, ⵠⵠⲆ],
		[ⵠⲆⲆ, "f", 1, 95, 62, 1],
		[ⵠⲆⲆ, "f", ⲆΔᐃ, 95, 55, 1],
		[1, "f", 1, 95, 64, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", 0, 95, 58, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", Δⵠⵠ, 95, 61, 1],
		[ⵠⵠⲆ, "f", 0, 95, 68, 1],
		[ᐃⵠⵠ, "f", 0, 95, 72, 1],
		[1, "f", 0, 95, 78, 1],
		[1, "f", 1, 95, 115, ⵠⵠⲆ],
		[1, "f", 1, 95, 117, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", 1, 95, 128, 1],
		[ᐃⵠⵠ, "f", 0, 95, 85, ⵠⲆⲆ],
		[1, "f", 0, 95, 91, 1],
		[ΔⲆᐃ, "f", ᐃⵠΔ, 95, 95, ⵠⲆⲆ],
		[1, "f", 0, 95, 114, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", ⲆⲆⵠΔ, 95, 113, ⵠⵠⲆ],
		[1, "f", 1, 95, 119, ᐃⵠ],
		[ⵠⲆⲆ, "f", ⲆΔᐃ, 95, 120, 1],
		[1, "f", ᐃⵠ, 95, 121, 1],
		[ΔⲆᐃ, "f", ᐃⵠΔ, 95, 127, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 95, 130, 1],
		[1, "f", 0, 95, 131, ᐃⵠ],
		[1, "f", 1, 95, 132, ⵠⵠⲆ],
		[1, "f", 1, 95, 136, 1],
		[1, "f", ᐃⵠΔ, 95, 137, ΔⲆᐃ],
		[1, "f", ΔⲆⵠ, 95, 143, 1],
		[ᐃⵠⵠ, "f", ΔⲆⵠ, 95, 147, ⵠⲆⲆ],
		[ᐃⵠ, "f", ᐃⵠⵠ, 95, 138, 1],
		[1, "f", 1, 95, 144, 1],
		[1, "f", ΔⲆᐃ, 95, 10, 1],
		[ΔⲆᐃ, "f", Δⵠⵠ, 95, ⲆΔⵠⵠⲆ, 1],
		[1, "f", 1, 95, ⲆⲆᐃΔⲆ, ᐃⵠ],
		[ᐃⵠⵠ, "f", 0, 95, 13, 1],
		[1, "f", ⵠⵠⲆ, 95, ᐃᐃᐃⲆⲆ, 1],
		[ᐃⵠ, "f", ⵠⵠⲆ, 95, ΔΔᐃⲆⲆ, ΔⲆᐃ],
		[1, "f", 0, 95, ΔⵠΔⵠᐃⵠⲆ, ᐃⵠⵠ],
		[1, "f", ⵠⲆⲆ, 95, 45, 1],
		[ⵠⵠⲆ, "f", 0, 95, 51, 1],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 95, 56, 1],
		[ᐃⵠⵠ, "f", 1, 95, 57, 1],
		[1, "f", 1, 95, 59, 1],
		[ᐃⵠ, "f", ⵠⵠⲆ, 95, 60, ⵠⲆⲆ],
		[ΔⲆᐃ, "f", ΔⲆᐃ, 95, 63, 1],
		[1, "f", 0, 95, 65, ⵠⲆⲆ],
		[ᐃⵠ, "f", ⵠⲆⲆ, 95, 66, 1],
		[ᐃⵠ, "f", ⵠⲆⲆ, 95, 67, 1],
		[ΔⲆᐃ, "f", ᐃⵠ, 95, 69, ⵠⲆⲆ],
		[1, "f", 1, 95, 70, ⵠⲆⲆ],
		[ᐃⵠ, "f", 0, 95, 71, ΔⲆᐃ],
		[ᐃⵠ, "f", 1, 95, 73, ᐃⵠⵠ],
		[1, "f", 1, 95, 74, ᐃⵠ],
		[1, "f", Δⵠⵠ, 95, 75, 1],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 95, 76, 1],
		[ⵠⲆⲆ, "f", 1, 95, 77, 1],
		[1, "f", 1, 95, 79, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 95, 80, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", ⲆⵠⲆ, 95, 81, 1],
		[1, "f", 1, 95, 82, ΔⲆᐃ],
		[1, "f", ΔΔᐃ, 95, 83, 1],
		[1, "f", ΔⲆᐃ, 95, 84, ⵠⲆⲆ],
		[1, "f", 1, 95, 86, 1],
		[1, "f", ΔⲆᐃ, 95, 88, ᐃⵠⵠ],
		[1, "f", 0, 95, 87, 1],
		[ᐃⵠ, "f", 1, 95, 89, 1],
		[1, "f", ΔⲆᐃ, 95, 90, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 95, 92, 1],
		[1, "f", 1, 95, 93, ᐃⵠ],
		[1, "f", ⵠⵠⲆ, 95, 94, 1],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 95, 96, ΔⲆᐃ],
		[1, "f", 1, 95, 97, 1],
		[1, "f", 0, 95, 98, ΔⲆᐃ],
		[1, "f", ᐃⵠⵠ, 95, 99, ⵠⲆⲆ],
		[1, "f", ⵠⲆⲆ, 95, ᐃⵠΔⲆⲆ, 1],
		[ᐃⵠⵠ, "f", 0, 95, 101, 1],
		[1, "f", ⵠⵠⲆ, 95, 102, ᐃⵠⵠ],
		[1, "f", 0, 95, 103, 1],
		[ᐃⵠ, "f", ᐃⵠ, 95, 104, ᐃⵠⵠ],
		[1, "f", ᐃⵠ, 95, 105, 1],
		[1, "f", ⲆⵠⲆ, 95, 106, 1],
		[ΔⲆᐃ, "f", 1, 95, 107, ᐃⵠ],
		[ⵠⲆⲆ, "f", 1, 95, 108, ΔⲆᐃ],
		[1, "f", ⵠⲆⲆ, 95, 109, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 0, 95, 110, 1],
		[ᐃⵠⵠ, "f", 1, 95, 111, ᐃⵠ],
		[ΔⲆᐃ, "f", 0, 95, 112, 1],
		[1, "f", 1, 95, 116, 1],
		[1, "f", ΔⲆⵠ, 95, 118, 1],
		[ⵠⲆⲆ, "f", ⲆⵠⲆ, 95, 122, 1],
		[ΔⲆᐃ, "f", 1, 95, 123, 1],
		[ᐃⵠⵠ, "f", 1, 95, 124, 1],
		[ⵠⲆⲆ, "f", Δⵠⵠ, 95, 125, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", 1, 95, 126, ᐃⵠⵠ],
		[1, "f", 1, 95, 129, 1],
		[ᐃⵠⵠ, "f", 1, 95, 133, ᐃⵠⵠ],
		[1, "f", 0, 95, 134, 1],
		[1, "f", 1, 95, 135, 1],
		[ᐃⵠⵠ, "f", ΔⲆᐃ, 95, 139, 1],
		[ⵠⵠⲆ, "f", 0, 95, 140, ᐃⵠ],
		[1, "f", 1, 95, 141, ⵠⲆⲆ],
		[ᐃⵠ, "f", 1, 95, 142, 1],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 95, 146, 1],
		[1, "f", ΔⲆⵠ, 95, 145, 1],
		[ⵠⵠⲆ, "f", 1, 95, 148, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ΔⲆᐃ, 95, 149, ΔⲆᐃ],
		[ᐃⵠ, "f", ᐃⵠⵠ, 95, 150, ᐃⵠⵠ],
		[1, "f", ᐃⵠⵠ, 95, 153, 1],
		[1, ⵠ[370], 0, 64, 9, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃⵠⵠ, 64, ⲆⲆᐃⵠΔ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 64, ⵠⲆⵠⵠΔ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 64, ΔᐃⵠΔΔ, 1],
		[1, ⵠ[370], ⲆⲆⲆ, 64, 20, 1],
		[1, ⵠ[370], ᐃⵠ, 64, 21, 1],
		[1, ⵠ[370], 2, 64, 22, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 0, 64, 23, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 64, 24, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], 1, 64, 29, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠᐃ, 64, 30, 1],
		[1, ⵠ[370], 3, 64, 31, 1],
		[1, ⵠ[370], 0, 64, 32, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆ, 64, 33, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 64, 34, 1],
		[1, ⵠ[370], ΔⲆⵠ, 64, 35, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 64, 8, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 65, ⵠⵠΔⵠΔ, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 65, ΔᐃⵠΔⵠ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 65, 10, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], Δᐃᐃᐃ, 65, 11, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 65, ⲆⲆⵠᐃⲆ, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 64, 17, ᐃⵠ],
		[1, ⵠ[370], ΔⲆΔⵠ, 65, ΔΔᐃⲆⲆ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 64, 18, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 65, 18, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⵠⲆ, 65, 19, 1],
		[1, ⵠ[370], 1, 65, 20, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔᐃⲆ, 65, 21, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 65, 22, 1],
		[1, ⵠ[370], 3, 65, 23, 1],
		[1, ⵠ[370], ΔΔᐃ, 65, 24, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 65, 29, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 65, 30, 1],
		[ᐃⵠ, ⵠ[370], 0, 65, 31, ᐃⵠ],
		[1, ⵠ[370], 1, 65, 32, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 65, 33, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 65, 34, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 63, ΔᐃΔᐃⲆΔⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⵠ, 62, 9, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 61, ⲆⲆᐃΔⲆ, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 60, ΔⲆᐃᐃΔ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 59, 9, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 58, 9, 1],
		[ᐃⵠ, ⵠ[370], 0, 57, ΔᐃⵠΔⵠ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 56, 9, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 55, 9, 1],
		[1, ⵠ[370], 2, 54, ΔⲆᐃᐃΔ, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⲆ, 53, ⲆⵠΔᐃⵠ, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 0, 51, ⵠΔⲆⲆᐃ, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 52, ᐃΔⵠΔΔ, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 50, 9, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 48, 9, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 49, ᐃΔⵠΔΔ, 1],
		[1, ⵠ[370], Δⵠⵠ, 47, 9, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 0, 45, 9, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⵠⲆ, 43, ᐃⲆΔΔᐃ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 46, 9, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 44, ⲆⵠΔᐃⵠ, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 42, ΔᐃΔᐃⲆΔⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 41, ⲆⵠΔᐃⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⵠ, 40, ΔᐃⵠΔⵠ, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 39, 9, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 38, 9, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⵠ, 37, ⲆⲆⵠⲆⵠ, 1],
		[1, ⵠ[370], 0, 63, ⲆⲆᐃᐃᐃ, 1],
		[1, ⵠ[370], 2, 65, ⵠᐃⵠⲆᐃ, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 64, ⵠᐃⵠⲆᐃ, 1],
		[1, ⵠ[370], 2, 62, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], ⲆⵠⵠΔ, 61, ⲆΔΔΔᐃ, 1],
		[1, ⵠ[370], 1, 62, ᐃⲆⵠΔᐃ, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 63, ⲆⵠΔΔⵠ, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⵠ, 64, 6, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 65, 6, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 63, 6, 1],
		[1, ⵠ[370], 2, 62, 6, 1],
		[1, ⵠ[370], 2, 61, 6, 1],
		[1, ⵠ[370], 2, 60, ᐃⵠΔⵠⵠ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 59, 6, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 61, ΔΔⲆᐃⵠ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⲆΔᐃ, 60, 7, 1],
		[1, ⵠ[370], 2, 60, 8, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 59, 7, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 59, ⵠᐃᐃΔⲆ, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 58, 8, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 57, ⵠⲆΔⲆᐃ, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 55, 7, 1],
		[ⵠⲆⲆ, ⵠ[370], Δⵠⵠ, 56, 6, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 58, 6, ᐃⵠ],
		[1, ⵠ[370], 2, 58, 7, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 57, Ⲇⵠᐃᐃᐃ, 1],
		[1, ⵠ[370], 2, 56, ᐃⲆⵠⲆⲆ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 55, 6, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 57, ⲆⲆᐃᐃᐃ, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 56, ⲆΔΔΔᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 55, 8, 1],
		[1, ⵠ[370], ⲆⲆⲆ, 54, 8, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 0, 50, ᐃⵠⲆΔⲆ, 1],
		[1, ⵠ[370], 0, 53, ᐃⲆᐃᐃΔ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 54, 6, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 54, 7, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 53, 7, 1],
		[ᐃⵠ, ⵠ[370], 2, 52, ⵠᐃⵠⲆᐃ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 52, ᐃⲆᐃᐃΔ, 1],
		[1, ⵠ[370], ᐃⵠ, 52, 8, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 53, ⲆⵠΔᐃⲆ, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 51, ⲆⵠΔᐃⲆ, 1],
		[1, ⵠ[370], 2, 51, 7, 1],
		[ᐃⵠ, ⵠ[370], 2, 51, 6, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 50, ᐃⲆⵠⲆΔ, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 50, 8, 1],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔⲆ, 49, 8, 1],
		[1, ⵠ[370], 2, 49, ⵠΔᐃⲆᐃ, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 49, ᐃⲆᐃᐃΔ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠΔ, 46, 7, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆᐃ, 48, ΔⲆᐃᐃᐃ, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 44, 7, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ΔⲆᐃ, 41, ΔⲆᐃᐃᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃᐃΔⵠ, 48, ΔΔⲆᐃⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 48, 6, 1],
		[ᐃⵠ, ⵠ[370], 2, 47, 6, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 47, 7, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 47, 8, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 46, ⲆΔΔΔᐃ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 45, 8, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 45, Ⲇⵠᐃᐃᐃ, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 45, ⵠᐃⲆⵠ, 1],
		[ᐃⵠ, ⵠ[370], 2, 46, 6, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 44, ⵠᐃⲆⵠ, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 44, 8, 1],
		[1, ⵠ[370], 2, 43, ⲆΔⵠⵠⲆ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 43, ⵠΔᐃⲆᐃ, 1],
		[ᐃⵠ, ⵠ[370], 2, 43, ⵠⲆⵠⵠᐃ, ᐃⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 42, 6, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 42, 7, ᐃⵠ],
		[1, ⵠ[370], 2, 42, 8, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠᐃⵠΔ, 41, 7, 1],
		[1, ⵠ[370], 2, 41, ⵠⲆⵠⵠᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 40, ⵠⲆΔⲆᐃ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 40, 7, 1],
		[1, ⵠ[370], 2, 40, ⵠⵠΔⵠΔ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 39, ⲆⵠΔᐃⲆ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], Δⵠⵠ, 39, 7, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠ, 38, 8, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 39, ⵠⲆⵠⵠᐃ, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 38, 6, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 37, 6, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 38, 7, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 37, ⵠΔᐃⲆᐃ, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 37, ⲆΔΔΔᐃ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 37, 10, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 38, ᐃᐃⵠᐃΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 38, 11, 1],
		[1, ⵠ[370], 0, 38, 17, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 1, 37, 18, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 38, ΔⲆⲆⵠⵠ, 1],
		[1, ⵠ[370], 2, 37, ΔΔΔΔⵠ, 1],
		[1, ⵠ[370], 2, 37, ᐃΔᐃᐃⲆ, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 37, 17, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 38, 18, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 37, 19, ΔⲆᐃ],
		[1, ⵠ[370], 3, 38, 16, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⲆ, 37, 21, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 0, 38, 22, 1],
		[ᐃⵠ, ⵠ[370], 0, 38, 24, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 37, ⲆᐃΔⵠ, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 38, 20, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 38, 21, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 37, 23, 1],
		[1, ⵠ[370], 3, 37, 22, 1],
		[1, ⵠ[370], ⵠΔᐃⲆ, 38, 23, ΔⲆᐃ],
		[1, ⵠ[370], 2, 37, 24, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 0, 38, 30, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⲆ, 38, 32, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⲆ, 37, 31, ⵠⵠⲆ],
		[1, ⵠ[370], 1, 38, 34, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠⵠ, 37, 29, 1],
		[1, ⵠ[370], 2, 38, 29, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 37, 30, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 38, 31, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 37, 32, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 3, 38, 33, 1],
		[1, ⵠ[370], Δᐃᐃᐃ, 38, 35, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 37, 33, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 36, 8, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 36, ⵠⵠᐃᐃΔⵠⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 35, 9, ΔⲆᐃ],
		[1, ⵠ[370], 2, 36, ⲆⲆᐃΔⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃᐃΔⵠ, 36, ⵠΔᐃΔⲆ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 35, 10, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠ, 33, 8, 1],
		[1, ⵠ[370], 3, 34, ⲆⲆᐃΔⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 35, ⲆⵠΔᐃⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆᐃ, 34, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], ⲆΔᐃ, 36, 7, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 1, 34, ᐃⲆⵠⲆⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 35, 7, 1],
		[1, ⵠ[370], 2, 35, ⵠᐃⲆⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠᐃⵠΔ, 36, ⵠᐃⲆⵠ, 1],
		[1, ⵠ[370], 2, 68, ⲆⵠΔᐃⵠ, 1],
		[1, ⵠ[370], 2, 66, 10, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠⲆ, 66, ⵠΔⵠⲆⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔΔᐃ, 67, ⲆⵠΔᐃⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⵠⲆ, 66, ⵠᐃᐃΔⲆ, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], 2, 67, 8, ᐃⵠ],
		[1, ⵠ[370], 1, 68, 8, ΔⲆᐃ],
		[1, ⵠ[370], 1, 66, 11, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ᐃᐃΔⵠ, 67, ⵠΔᐃΔⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⵠ, 66, 6, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 66, 7, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 67, 7, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 69, ⲆⲆᐃᐃᐃ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠᐃ, 63, 32, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 62, 34, 1],
		[ᐃⵠ, ⵠ[370], 2, 60, 35, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 59, 35, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 61, 35, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔ, 63, 34, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 63, 33, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 63, 35, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 62, 35, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 58, 36, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠ, 59, 36, 1],
		[1, ⵠ[370], 1, 62, 36, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 60, 36, ᐃⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 61, 34, 1],
		[1, ⵠ[370], ⲆⵠⵠΔ, 62, 33, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⵠⵠΔ, 63, 36, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 3, 61, 36, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 0, 42, 36, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 39, 36, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 41, 36, ᐃⵠ],
		[1, ⵠ[370], ΔⲆΔⵠ, 39, 35, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], Δᐃᐃᐃ, 40, 36, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 43, 36, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 40, 35, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 41, 35, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 40, 34, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 39, 34, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 39, 33, 1],
		[1, ⵠ[370], 2, 39, 32, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 40, 33, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 41, 34, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆᐃ, 44, 36, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 43, 35, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 42, 35, 1],
		[1, ⵠ[370], Δⵠⵠ, 37, 34, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆΔⵠ, 59, 30, 1],
		[1, ⵠ[370], Δⵠⵠ, 60, 29, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 60, 28, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 60, 27, 1],
		[1, ⵠ[370], 0, 60, 26, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 54, 25, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 48, 25, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 42, 26, 1],
		[ᐃⵠ, ⵠ[370], 0, 55, 25, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 59, 26, 1],
		[1, ⵠ[370], Δⵠⵠ, 43, 26, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 1, 42, 27, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 42, 28, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⲆᐃ, 43, 30, 1],
		[1, ⵠ[370], 0, 42, 29, 1],
		[1, ⵠ[370], 0, 54, 24, 1],
		[1, ⵠ[370], ⲆⵠⲆ, 48, 24, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 54, 23, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 48, 23, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 63, 22, ΔⲆᐃ],
		[1, ⵠ[370], 2, 63, 21, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 39, 21, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 57, ΔΔⵠⲆΔ, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 56, 18, 1],
		[1, ⵠ[370], ⵠΔᐃⲆ, 51, 21, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔ, 51, ⵠΔΔΔ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 51, ᐃᐃᐃΔΔ, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 51, ΔⵠΔⵠᐃⵠⲆ, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 63, Ⲇᐃᐃⵠᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆᐃ, 63, ⲆΔⵠᐃⲆ, ΔⲆᐃ],
		[1, ⵠ[370], 2, 56, 13, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⵠΔ, 57, 13, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 45, 18, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 47, 18, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 46, ⵠᐃⵠᐃⲆᐃΔ, ᐃⵠ],
		[1, ⵠ[370], 0, 46, Ⲇⵠⵠⵠᐃ, 1],
		[ᐃⵠ, ⵠ[370], 2, 45, 13, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 39, ⲆᐃᐃᐃⲆ, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 39, ⲆⲆⵠᐃⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 47, ⲆⲆᐃⲆⲆ, ᐃⵠⵠ],
		[ⵠⵠⲆ, "a", 0, 51, ᐃⲆⵠᐃᐃ, 1],
		[1, "a", 1, 53, ᐃᐃⲆⵠⵠⲆᐃ, ᐃⵠ],
		[1, "a", ᐃⵠ, 49, ΔⵠᐃΔΔ, 1],
		[ᐃⵠ, ⵠ[20], ⵠⵠΔⵠΔ, 55, 15, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⲆΔⵠ], ⵠΔⵠⲆⵠ, 48, 28, ΔΔᐃ],
		[1, ⵠ[20], ᐃᐃⵠⵠⵠ, 58, 26, Δⵠⵠ],
		[1, ⵠ[ⵠΔΔΔ], ⲆⵠΔᐃΔⲆᐃ, 59, 29, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], ᐃΔᐃⲆᐃⵠᐃ, 55, 34, 0],
		[1, ⵠ[ⵠΔΔΔ], 10, 48, 33, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 9, 41, 32, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 9, 56, 24, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⲆΔ], ᐃⲆΔΔᐃ, 62, ⲆⲆᐃΔΔ, 0],
		[ΔⲆᐃ, ⵠ[20], 9, 45, 11, 0],
		[1, ⵠ[20], 9, 44, ᐃᐃΔⲆΔⵠⵠ, 0],
		[1, ⵠ[ⵠΔΔΔ], ΔⲆⵠΔᐃ, 44, ⲆⲆⵠᐃⵠⵠⲆ, ⲆⲆⲆ],
		[1, ⵠ[20], 10, 58, 13, ΔⲆⵠ],
		[1, ⵠ[20], ⲆΔⵠᐃⲆ, 63, 31, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 8, 60, 30, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], ⲆⲆᐃᐃᐃ, 43, 26, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 10, 43, 29, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], ⲆΔⵠᐃⲆ, 53, 29, 0],
		[1, ⵠ[20], 10, 53, 24, 0],
		[ΔⲆᐃ, ⵠ[20], 9, 53, 19, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[20], ⵠⵠᐃᐃΔⵠⵠ, 49, 19, ΔⲆⵠ],
		[1, ⵠ[20], 10, 39, 26, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 9, 46, 24, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 9, 62, 10, 0],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], ⲆΔΔΔᐃ, 40, ΔⵠᐃΔΔ, 0],
		[1, ⵠ[20], 32, 55, 35, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], 32, 60, 33, 0],
		[1, ⵠ[ΔΔⵠΔ], 32, 63, 28, 0],
		[1, ⵠ[20], 32, 63, 24, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⲆΔⵠ], 32, 58, 22, ΔⲆⵠ],
		[1, ⵠ[ⵠᐃⵠⲆ], 32, 59, ⲆⵠⲆⵠⲆ, 0],
		[ᐃⵠ, ⵠ[20], 32, 63, 13, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 32, 59, ᐃⵠⲆᐃⵠ, ⲆⲆⲆ],
		[1, ⵠ[20], 32, 56, ΔΔᐃⲆᐃ, ΔⲆⵠ],
		[1, ⵠ[ⵠᐃⵠⲆ], 32, 52, 17, 0],
		[1, ⵠ[20], 32, 51, Δᐃⵠᐃᐃ, ⲆⲆⲆ],
		[1, ⵠ[ΔⵠΔⲆ], 32, 39, ⵠᐃⲆᐃⵠ, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 32, 39, 18, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 32, 41, 25, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 32, 39, 30, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 32, 50, 29, 0],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⲆΔ], 32, 43, 34, 0],
		[1, ⵠ[20], 32, 47, 34, ⲆΔᐃ],
		[1, ⵠ[20], 31, 54, 33, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 31, 59, 24, 0],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], 31, 63, 19, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 31, 47, ᐃΔⵠⲆΔ, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 31, 43, ⵠᐃⵠⲆⵠ, ⲆⲆⲆ],
		[1, ⵠ[ⵠᐃⵠⲆ], 31, 39, 27, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 31, 48, 27, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔΔΔ], 31, 57, 27, ᐃⵠΔ],
		[1, ⵠ[20], 32, 44, 27, ⲆⵠⲆ],
		[ⵠⲆⲆ, "d", 0, ᐃⵠᐃᐃΔ, 13, ΔⲆᐃ],
		[ᐃⵠ, "d", 0, 89, ⲆⲆⵠᐃⵠⵠⲆ, ⵠⵠⲆ],
		[1, "d", 1, 91, 21, 1],
		[1, "d", 1, ⲆΔⵠᐃⲆ, 22, ⵠⵠⲆ],
		[1, "f", 2, 89, ᐃⲆⵠⵠᐃ, 1],
		[1, "f", ΔΔᐃ, 88, 19, 1],
		[1, "g", ᐃⵠⵠ, 85, 22, ᐃⵠ],
		[1, "s", 1, 90, 29, 1],
		[1, "s", 1, 92, 15, ᐃⵠ],
		[ΔⲆᐃ, "s", 0, 91, 31, 1],
		[ᐃⵠⵠ, "s", ᐃᐃΔⵠ, 90, 38, ⵠⲆⲆ],
		[ⵠⲆⲆ, "s", 0, 91, 42, ᐃⵠⵠ],
		[ᐃⵠⵠ, "s", 0, 90, 49, ΔⲆᐃ],
		[1, "f", ΔⲆᐃ, 86, 43, 1],
		[1, "f", 0, 81, 45, ᐃⵠ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆᐃ, 66, 44, 1],
		[ⵠⵠⲆ, "f", ⲆⲆⵠΔ, 55, 49, 1],
		[1, "f", ⵠⲆⲆ, 54, 50, 1],
		[1, "f", 2, 43, 45, 1],
		[1, "f", 2, 31, 48, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", ⵠⲆⲆ, 27, 39, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 80, 46, ᐃⵠⵠ],
		[ᐃⵠⵠ, "f", ⵠⵠⲆ, 69, 48, 1],
		[ⵠⵠⲆ, "g", 0, 80, 40, 1],
		[1, "g", 2, 81, 40, ᐃⵠ],
		[ⵠⵠⲆ, "s", 2, 77, 39, ΔⲆᐃ],
		[ᐃⵠⵠ, "s", ᐃⵠΔ, 68, 43, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", 2, 57, 41, 1],
		[1, "s", 1, 56, 42, 1],
		[ΔⲆᐃ, "s", 1, 40, 41, ᐃⵠ],
		[ΔⲆᐃ, "s", 2, 48, 48, ⵠⵠⲆ],
		[ᐃⵠ, "f", ⵠΔⲆΔ, 17, 12, 1],
		[1, "f", 0, ΔΔⲆΔΔ, 31, 1],
		[1, "f", ᐃⵠⵠ, ᐃᐃⲆⵠⵠⲆᐃ, 32, ⵠⲆⲆ],
		[1, "s", ΔⲆⵠ, 15, 27, ⵠⲆⲆ],
		[ΔⲆᐃ, "s", 0, ΔⲆΔᐃΔ, 39, ⵠⵠⲆ],
		[ⵠⲆⲆ, "f", 2, 11, 17, ⵠⵠⲆ],
		[ΔⲆᐃ, "f", ᐃⵠⵠ, ⵠⵠᐃᐃⵠ, 18, 1],
		[1, "g", ⵠⵠⲆᐃ, 12, 25, 1],
		[1, "f", 0, 16, 45, ΔⲆᐃ],
		[ᐃⵠ, "f", 1, ⵠᐃⵠⲆⵠ, 46, 1],
		[1, "s", ⵠⲆⲆ, 74, 48, 1],
		[1, "s", ⵠⲆⲆ, ⵠⵠᐃᐃ, 47, 1],
		[1, "g", ΔΔᐃ, 58, 59, 1],
		[1, "g", 0, 46, 72, ⵠⵠⲆ],
		[ⵠⵠⲆ, "g", ᐃⵠΔ, 69, 79, 1],
		[1, "g", ⲆⵠⲆ, 72, 74, ᐃⵠ],
		[ⵠⲆⲆ, "g", 0, 26, 88, 1],
		[ⵠⲆⲆ, "g", ⲆⲆⲆ, ⲆᐃΔⵠ, 74, 1],
		[1, "g", 0, 28, 67, 1],
		[1, "g", Δⵠⵠ, 49, 86, 1],
		[1, "g", ΔΔᐃ, 77, 90, 1],
		[ΔⲆᐃ, "g", ⲆⵠⲆ, 87, 72, ⵠⲆⲆ],
		[1, "g", 0, 14, 85, ᐃⵠ],
		[ᐃⵠ, "g", ⵠⲆⲆ, 85, 97, 1],
		[ᐃⵠⵠ, "g", ΔⲆᐃ, 68, 104, 1],
		[1, "g", 1, 63, 91, ⵠⵠⲆ],
		[1, "g", ΔⲆᐃ, 39, 90, ΔⲆᐃ],
		[ⵠⵠⲆ, "g", 1, 34, 99, ⵠⵠⲆ],
		[1, "g", 1, 17, 103, ⵠⲆⲆ],
		[1, "g", ⵠΔⲆΔ, 77, 60, ᐃⵠⵠ],
		[1, "g", ⲆⲆⵠΔ, 19, 56, 1],
		[ᐃⵠ, "g", 2, 39, 60, 1],
		[1, "g", ᐃᐃΔⵠ, 87, 57, ⵠⵠⲆ],
		[ⵠⵠⲆ, "f", 0, ᐃᐃⲆⲆⲆ, 62, ᐃⵠ],
		[ΔⲆᐃ, "f", 0, 12, 81, ΔⲆᐃ],
		[1, "f", ⲆΔᐃ, 26, 59, 1],
		[1, "f", 0, 35, 53, ᐃⵠⵠ],
		[ᐃⵠ, "f", ⲆΔᐃ, 44, 58, ᐃⵠⵠ],
		[1, "f", ⲆⵠⲆ, 88, 62, ⵠⲆⲆ],
		[1, "f", 0, 91, 82, ΔⲆᐃ],
		[1, "f", ⲆⵠⲆ, 84, 85, 1],
		[ⵠⵠⲆ, "f", ΔⲆⵠ, 79, 69, 1],
		[1, "f", ⲆΔᐃ, 64, 71, ᐃⵠⵠ],
		[ᐃⵠ, "f", ⲆⵠⲆ, 62, 83, ΔⲆᐃ],
		[ⵠⵠⲆ, "f", ΔⲆⵠ, 34, 81, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", 0, 39, 71, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", ⲆΔᐃ, 54, 94, ᐃⵠⵠ],
		[ᐃⵠ, "f", 1, 81, 70, 1],
		[1, "f", ⵠⲆⲆ, 91, 72, 1],
		[ΔⲆᐃ, "f", ᐃⵠⵠ, 8, 91, ⵠⵠⲆ],
		[1, "f", ⵠⵠⲆ, 14, 81, 1],
		[1, "f", ΔⲆᐃ, 29, 79, 1],
		[1, "f", 1, 13, 65, ⵠⲆⲆ],
		[1, "f", 1, 46, 97, ΔⲆᐃ],
		[ⵠⵠⲆ, "f", ᐃⵠ, 43, 73, 1],
		[1, "f", 1, 60, 69, 1],
		[ᐃⵠⵠ, "f", 1, 70, 96, 1],
		[ⵠⲆⲆ, "f", ⵠⵠⲆ, 58, 84, 1],
		[ᐃⵠ, "s", ᐃⵠⵠ, 56, 76, ⵠⲆⲆ],
		[1, "s", ⵠⲆⲆ, 85, 74, ᐃⵠⵠ],
		[ΔⲆᐃ, "s", ΔΔᐃ, 72, 71, ᐃⵠⵠ],
		[1, "s", 0, 41, 62, 1],
		[1, "s", ΔⲆⵠ, 60, 61, 1],
		[1, "s", 0, ΔⲆΔᐃ, 66, 1],
		[1, "s", ΔⲆⵠ, 47, 83, ⵠⲆⲆ],
		[1, "s", 0, 29, 86, 1],
		[ᐃⵠⵠ, "s", ΔⲆⵠ, 78, 92, 1],
		[1, "s", ᐃⵠΔ, 62, 102, 1],
		[ᐃⵠ, "s", 0, ⵠⵠⲆΔᐃⵠⲆ, 95, 1],
		[ⵠⵠⲆ, "s", 2, 64, 101, 1],
		[1, "s", 2, 78, 84, 1],
		[1, "s", 2, 49, 83, 1],
		[ᐃⵠⵠ, "s", 2, 15, 76, ᐃⵠ],
		[1, "s", 2, 21, 84, 1],
		[ᐃⵠⵠ, "f", 1, 26, 94, ⵠⵠⲆ],
		[1, "f", 2, 23, 96, ᐃⵠ],
		[ⵠⵠⲆ, "f", ΔⲆⲆᐃ, 25, 72, 1],
		[1, "f", 2, 85, 77, 1],
		[1, "f", 2, 79, 95, 1],
		[ⵠⲆⲆ, "f", 2, 51, 65, 1],
		[ΔⲆᐃ, "f", 2, 69, 60, 1],
		[1, "f", 1, 25, 105, ⵠⲆⲆ],
		[1, "s", 1, ⲆⵠᐃᐃⲆ, 68, ⵠⲆⲆ],
		[1, "s", ⲆⵠⲆ, 55, 76, 1],
		[1, "s", Δⵠⵠ, 74, 59, 1],
		[ᐃⵠⵠ, "f", 1, 46, 142, ⵠⲆⲆ],
		[1, "f", ᐃⵠ, ΔⲆⲆⵠⵠ, 140, ᐃⵠ],
		[ᐃⵠ, "f", ΔⲆᐃ, 77, 137, 1],
		[ⵠⵠⲆ, "f", ⲆⲆⲆ, 75, 137, ⵠⲆⲆ],
		[1, "f", 0, 55, 138, ⵠⲆⲆ],
		[1, "f", 0, 33, 127, ΔⲆᐃ],
		[1, "f", 0, 76, 121, 1],
		[1, "f", ⲆΔᐃ, 55, 121, 1],
		[ᐃⵠ, "f", 0, ⲆⲆⵠᐃⵠⵠⲆ, 123, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", 0, ⵠⵠⵠⵠΔ, 141, 1],
		[ᐃⵠⵠ, "f", ⲆⵠⲆ, 40, 137, 1],
		[ΔⲆᐃ, "f", 2, 76, 142, 1],
		[1, "f", 2, 57, 140, 1],
		[1, "f", ⵠⲆΔΔ, 39, 138, 1],
		[1, "f", ᐃⵠΔⲆ, ⵠΔⵠᐃⵠ, 143, 1],
		[ᐃⵠ, "f", 2, 29, 131, ⵠⲆⲆ],
		[ⵠⲆⲆ, "f", ᐃⵠΔ, 70, 150, ⵠⲆⲆ],
		[1, "f", ⲆⲆⲆ, 28, 146, ΔⲆᐃ],
		[ᐃⵠ, "f", ⲆⵠⲆ, ⵠⲆⵠⲆΔ, 132, 1],
		[1, "f", ᐃⵠΔ, 90, 129, 1],
		[1, "f", 1, 87, 131, 1],
		[1, "f", 0, 91, 143, ⵠⲆⲆ],
		[1, "f", 2, 87, 145, ΔⲆᐃ],
		[1, "f", 1, 89, 141, ᐃⵠⵠ],
		[1, "f", ᐃⵠ, 63, 130, 1],
		[1, "f", ⵠⵠⲆ, 75, 122, ΔⲆᐃ],
		[ᐃⵠ, "f", ⵠⵠⲆ, 52, 124, 1],
		[1, "f", 1, 34, 127, ᐃⵠ],
		[ⵠⲆⲆ, "f", 1, 14, 123, ΔⲆᐃ],
		[1, "f", 1, 24, 122, 1],
		[1, "f", ⲆⲆⲆ, 83, 108, ⵠⵠⲆ],
		[1, "f", 0, 89, 118, ᐃⵠⵠ],
		[ⵠⲆⲆ, "f", ΔΔᐃ, 56, 107, ᐃⵠ],
		[1, "f", ⲆΔᐃ, 38, 113, ᐃⵠⵠ],
		[1, "f", 0, ⲆⲆⵠᐃⲆ, 110, 1],
		[1, "f", ΔⲆᐃ, 80, 105, 1],
		[1, "f", ⵠⲆⲆ, 82, 109, 1],
		[ⵠⵠⲆ, "f", 1, 87, 118, ᐃⵠ],
		[1, "f", 1, 59, 110, 1],
		[1, "f", 1, 29, 111, 1],
		[1, "f", 2, 28, 112, 1],
		[ⵠⵠⲆ, "f", 2, 70, 112, ⵠⵠⲆ],
		[ᐃⵠ, "f", ⵠΔⵠᐃ, 42, 111, 1],
		[ⵠⲆⲆ, "s", 0, 68, 157, ⵠⲆⲆ],
		[ᐃⵠ, "s", 0, 81, 158, 1],
		[1, "s", 0, 25, 172, 1],
		[1, "s", 0, 22, 161, 1],
		[1, "s", ⲆⵠⲆ, 35, 152, ᐃⵠ],
		[1, "s", ⲆⵠⲆ, 66, 144, 1],
		[1, "s", ΔΔᐃ, 87, 145, 1],
		[1, "s", 0, 86, 145, ⵠⲆⲆ],
		[ᐃⵠ, "s", 0, 84, 135, 1],
		[1, "s", ᐃⵠΔ, 69, 133, 1],
		[ᐃⵠⵠ, "s", ΔΔᐃ, 84, 122, ⵠⵠⲆ],
		[ΔⲆᐃ, "s", Δⵠⵠ, 68, 121, 1],
		[1, "s", 0, 48, 124, 1],
		[1, "s", 0, 26, 129, ᐃⵠ],
		[1, "s", Δⵠⵠ, 9, 127, ⵠⵠⲆ],
		[ᐃⵠⵠ, "s", ΔⲆⵠ, 11, 144, 1],
		[1, "s", Δⵠⵠ, ⲆⵠΔᐃⵠ, 109, 1],
		[1, "s", ⲆΔᐃ, 35, 101, ᐃⵠ],
		[ΔⲆᐃ, "s", 0, 47, 109, 1],
		[ᐃⵠ, "s", ⲆⲆⲆ, 58, 111, ΔⲆᐃ],
		[ⵠⵠⲆ, "s", 0, 84, 110, 1],
		[1, "s", ΔⲆⵠ, 28, 114, ΔⲆᐃ],
		[ⵠⲆⲆ, "s", 1, 30, 116, ᐃⵠ],
		[1, "s", 1, 46, 112, ⵠⲆⲆ],
		[1, "s", ᐃⵠ, 81, 111, 1],
		[1, "s", 1, 70, 123, ⵠⵠⲆ],
		[ᐃⵠⵠ, "s", 1, 49, 127, 1],
		[1, "s", ᐃⵠ, 66, 134, 1],
		[1, "s", 1, 67, 144, ⵠⲆⲆ],
		[ⵠⲆⲆ, "s", ᐃⵠ, 38, 152, 1],
		[ⵠⵠⲆ, "s", 1, 21, 164, ΔⲆᐃ],
		[1, "s", 1, ⵠⲆⵠⲆΔ, 147, 1],
		[ᐃⵠⵠ, "s", 1, 24, 130, 1],
		[1, "s", ᐃⵠ, 12, 125, ⵠⲆⲆ],
		[ⵠⵠⲆ, "s", 1, 65, 158, ᐃⵠⵠ],
		[1, "s", ⵠⵠⲆ, 83, 167, ⵠⲆⲆ],
		[ⵠⵠⲆ, "s", ᐃⵠ, 65, 167, ᐃⵠⵠ],
		[ΔⲆᐃ, "s", ⵠⵠⲆ, 47, 164, 1],
		[ⵠⲆⲆ, "s", ᐃⵠⵠ, 56, 168, ᐃⵠ],
		[1, "s", 2, 54, 169, 1],
		[ᐃⵠ, "s", ⵠᐃⵠΔ, 88, 170, ⵠⲆⲆ],
		[1, "s", 2, 91, 162, 1],
		[ΔⲆᐃ, "s", ᐃᐃΔⵠ, 79, 149, 1],
		[ΔⲆᐃ, "s", 2, 75, 144, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", 2, 57, 150, ⵠⵠⲆ],
		[ᐃⵠⵠ, "s", 2, 47, 143, 1],
		[1, "s", ⵠⲆΔΔ, 31, 145, 1],
		[1, "s", ᐃⵠΔⲆ, 36, 138, 1],
		[ⵠⵠⲆ, "s", ΔⲆⲆᐃ, 10, 163, ᐃⵠⵠ],
		[1, "s", ⵠⲆΔΔ, 22, 142, ⵠⵠⲆ],
		[1, "g", 2, 78, 132, 1],
		[1, "g", 1, 48, 135, ⵠⵠⲆ],
		[ΔⲆᐃ, "g", 2, 16, 136, ᐃⵠ],
		[ⵠⲆⲆ, "g", ⲆΔᐃ, 62, 92, 1],
		[ᐃⵠ, "g", 2, 70, 80, 1],
		[ⵠⵠⲆ, "g", ⵠΔⵠᐃ, ⵠⲆᐃΔⲆ, 86, 1],
		[1, "g", ᐃᐃΔⵠ, 47, 75, 1],
		[ᐃⵠⵠ, "g", 2, 36, 89, 1],
		[ⵠⵠⲆ, "g", 2, 80, 90, 1],
		[1, "f", 1, 39, 118, ᐃⵠ],
		[1, "d", 2, 84, 54, ᐃⵠⵠ],
		[1, "d", ⵠΔⵠᐃ, 16, 54, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[ΔΔⵠΔ], ⵠΔᐃⲆᐃ, 13, 13, ⲆⲆⲆ],
		[1, ⵠ[20], ⲆᐃᐃΔ, 16, 28, 0],
		[ⵠⲆⲆ, ⵠ[20], ΔⲆⲆΔ, ⵠΔⵠⲆⵠ, 25, ⲆⲆⲆ],
		[1, ⵠ[20], Δᐃⵠⵠ, 34, 41, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], 4, 28, 40, ⲆΔᐃ],
		[1, ⵠ[ΔⲆΔᐃ], ᐃⲆᐃᐃΔ, 31, 47, 0],
		[ΔⲆᐃ, ⵠ[20], ⵠᐃⲆⵠ, ⵠᐃⲆᐃⵠ, 39, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 4, ⲆⵠᐃΔᐃ, 47, ⲆⲆⲆ],
		[1, ⵠ[ⵠᐃⵠⲆ], ᐃΔⲆΔ, ⲆⵠΔΔⵠ, 46, 0],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], ᐃⵠΔⵠⵠ, 7, 33, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], Ⲇᐃᐃᐃⵠ, 40, 42, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[ΔⵠΔⲆ], 7, ⵠᐃⲆΔ, 48, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔⲆⵠ], Ⲇⵠᐃᐃᐃ, 29, 59, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⵠⵠᐃ, 27, 58, 0],
		[1, ⵠ[20], Ⲇᐃᐃᐃⵠ, ⵠⲆᐃΔⲆ, 54, ᐃⵠΔ],
		[1, ⵠ[20], 5, 12, 66, 0],
		[1, ⵠ[20], 5, 37, 53, 0],
		[1, ⵠ[20], Δⵠⵠⵠ, ᐃⵠⲆᐃⵠ, 63, 0],
		[1, ⵠ[20], 7, 49, 48, 0],
		[ⵠⵠⲆ, ⵠ[ᐃⵠᐃΔ], 7, 37, 63, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], ⲆΔᐃⵠᐃ, 33, 68, 0],
		[ⵠⲆⲆ, ⵠ[20], 6, 56, 52, ᐃⵠΔ],
		[1, ⵠ[20], 5, 59, 58, ΔΔᐃ],
		[1, ⵠ[20], 6, 48, 58, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 4, 53, 63, ΔΔᐃ],
		[1, ⵠ[ⵠⵠᐃᐃ], ⲆⵠⲆⲆ, 67, 44, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[20], ⲆΔⵠᐃ, 70, 49, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], ΔⲆⲆΔ, 82, 55, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 5, 79, 41, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 5, 91, 29, Δⵠⵠ],
		[1, ⵠ[20], ΔΔⲆᐃⵠ, 91, 43, ΔΔᐃ],
		[1, ⵠ[20], ⵠᐃⲆⵠ, 85, 44, 0],
		[1, ⵠ[20], 6, 74, 60, 0],
		[ᐃⵠ, ⵠ[20], 6, 90, ⵠⵠΔⵠΔ, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠΔⵠ], 5, 91, 15, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⲆΔⵠ], ⲆⲆΔΔ, 87, 20, 0],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 7, 93, 11, ⲆⵠⲆ],
		[1, ⵠ[20], 6, 91, 21, 0],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 6, 85, 35, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], Δᐃⵠⵠ, 93, 58, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], ⲆΔᐃΔ, 87, 63, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], ⵠᐃⵠⲆᐃ, 77, 62, Δⵠⵠ],
		[1, ⵠ[20], 6, 68, 61, ΔΔᐃ],
		[1, ⵠ[ΔΔⵠΔ], ⲆᐃᐃΔ, 90, 73, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 4, 87, 71, 0],
		[1, ⵠ[ΔⲆΔᐃ], ᐃⲆⲆΔᐃ, 80, 71, 0],
		[1, ⵠ[20], ᐃⲆⲆΔᐃ, 83, 77, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], ⵠⲆⲆⵠⲆ, 89, 83, 0],
		[ΔⲆᐃ, ⵠ[20], 4, 71, 80, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], ⲆⲆΔΔ, 71, 70, ⲆⵠⲆ],
		[1, ⵠ[20], 5, 63, 72, ⲆⵠⲆ],
		[1, ⵠ[20], ᐃΔⲆΔ, 54, 75, ⲆⲆⲆ],
		[1, ⵠ[20], 5, 44, 83, ⲆΔᐃ],
		[1, ⵠ[20], 5, 42, 74, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[20], 5, ᐃΔⵠⲆΔ, 81, 0],
		[1, ⵠ[20], ⵠᐃᐃⲆ, 29, 80, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 4, 37, 90, 0],
		[ⵠⲆⲆ, ⵠ[20], 4, 7, 75, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], ⲆΔᐃⵠᐃ, 22, 74, 0],
		[1, ⵠ[ⵠΔΔΔ], 6, 43, 95, 0],
		[1, ⵠ[20], 6, 57, 85, 0],
		[1, ⵠ[20], 6, ΔᐃⵠᐃⲆ, 94, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 6, ⵠΔⲆⲆᐃ, 92, 0],
		[1, ⵠ[ⲆᐃΔⵠ], Δᐃⵠⵠ, 26, 89, ΔΔᐃ],
		[1, ⵠ[ΔΔⵠΔ], 5, 31, 112, 0],
		[1, ⵠ[ⵠᐃⲆΔ], ᐃᐃⵠⵠ, 54, 108, ⲆⲆⲆ],
		[1, ⵠ[20], ⲆᐃᐃΔ, 55, 95, ⲆΔᐃ],
		[1, ⵠ[20], ⲆⲆᐃⵠ, 35, 104, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ΔⲆΔᐃ], ⲆᐃᐃΔ, 13, 110, ΔΔᐃ],
		[1, ⵠ[20], ⵠⲆⲆⵠⲆ, 27, 107, ᐃⵠΔ],
		[1, ⵠ[ΔΔⵠΔ], 7, 47, 99, 0],
		[1, ⵠ[20], ΔΔⲆᐃⵠ, ᐃᐃⲆΔⲆ, 104, ⲆⵠⲆ],
		[1, ⵠ[ⲆᐃΔⵠ], ᐃⲆⵠⲆⲆ, 9, 111, ᐃⵠΔ],
		[1, ⵠ[ⵠⵠΔⵠ], 7, 40, 114, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 7, 28, 117, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], 7, 47, 113, 0],
		[ΔⲆᐃ, ⵠ[20], ⵠΔᐃⲆᐃ, 63, 104, ᐃⵠΔ],
		[1, ⵠ[20], ᐃΔᐃΔ, 64, 92, 0],
		[1, ⵠ[20], 6, 86, 97, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[20], 5, 76, 91, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], ⲆᐃᐃΔ, 85, 86, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 6, 78, 83, 0],
		[ⵠⲆⲆ, ⵠ[ᐃⵠᐃΔ], 6, 71, 97, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], Δⵠⵠⵠ, 69, 105, 0],
		[1, ⵠ[20], ΔⲆΔⲆ, 79, 104, Δⵠⵠ],
		[1, ⵠ[ⵠᐃⲆΔ], ΔⲆΔⲆ, 86, 109, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], Δⵠⵠⵠ, 86, 118, 0],
		[1, ⵠ[20], ⲆⲆᐃⵠ, 70, 113, 0],
		[1, ⵠ[20], 6, 69, 121, 0],
		[ᐃⵠ, ⵠ[20], ᐃⵠΔⵠⵠ, 76, 122, 0],
		[ⵠⵠⲆ, ⵠ[20], ᐃⵠⲆΔⲆ, 87, 130, 0],
		[ΔⲆᐃ, ⵠ[20], ⲆⲆΔΔ, 84, 123, 0],
		[1, ⵠ[20], 4, 57, 121, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 5, 53, 125, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 5, 62, 131, 0],
		[ᐃⵠⵠ, ⵠ[20], 6, 67, 143, 0],
		[ᐃⵠⵠ, ⵠ[20], ΔⲆⲆΔ, 77, 143, 0],
		[ⵠⵠⲆ, ⵠ[20], 5, 85, 136, 0],
		[ⵠⲆⲆ, ⵠ[20], ᐃⲆᐃᐃΔ, 87, 147, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 6, 92, 140, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], ⲆⲆΔΔ, 93, 127, ⲆΔᐃ],
		[1, ⵠ[ⵠΔⲆⵠ], 5, 93, 106, ⲆⲆⲆ],
		[1, ⵠ[ΔⲆΔᐃ], ⲆΔⵠᐃ, 45, 144, 0],
		[ᐃⵠ, ⵠ[20], 4, 41, 139, ΔⲆⵠ],
		[1, ⵠ[20], ⵠᐃᐃⲆ, 54, 138, 0],
		[1, ⵠ[20], ⵠⲆΔⲆᐃ, 29, 145, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[ᐃᐃᐃⲆ], 6, 29, 132, ⲆⲆⲆ],
		[1, ⵠ[20], 6, 35, 127, 0],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], 6, 64, 142, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[20], 5, 23, 131, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 5, ᐃΔⵠΔΔ, 134, ⲆⲆⲆ],
		[1, ⵠ[20], 6, 11, 121, 0],
		[1, ⵠ[ⲆᐃΔⵠ], ᐃΔᐃΔ, 26, 121, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 35, 58, 150, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 33, 48, 156, 0],
		[ᐃⵠ, ⵠ[20], 33, 25, 158, 0],
		[ᐃⵠ, ⵠ[20], 33, 36, 154, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 34, 9, 154, 0],
		[ᐃⵠⵠ, ⵠ[20], 34, ΔΔⲆΔΔ, 148, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 34, 21, 142, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔΔΔ], 34, 38, 139, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 34, 47, 144, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔΔΔ], 34, 68, 142, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], 36, 70, 135, Δⵠⵠ],
		[1, ⵠ[ΔⲆΔᐃ], 36, 64, 132, 0],
		[ᐃⵠ, ⵠ[ΔΔⵠΔ], 36, 86, 134, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 36, 90, 141, ᐃⵠΔ],
		[1, ⵠ[ⵠⵠᐃᐃ], 36, 93, 131, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 36, 91, 125, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[20], 36, 76, 123, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 33, 82, 122, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], 35, 56, 122, ΔⲆⵠ],
		[1, ⵠ[20], 35, 40, 119, 0],
		[ⵠⵠⲆ, ⵠ[20], 35, ΔΔⲆᐃⲆ, 112, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 35, 37, 102, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔⲆⵠ], 33, 18, 97, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 34, 10, 83, ⲆΔᐃ],
		[1, ⵠ[20], 33, ⲆΔᐃΔⲆ, 73, 0],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 33, ⵠΔᐃΔⲆ, 60, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[ΔΔⵠΔ], 35, 24, 60, Δⵠⵠ],
		[1, ⵠ[20], 36, ΔⲆⲆⲆⲆ, 45, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 36, 21, 42, 0],
		[1, ⵠ[20], 35, 8, 32, 0],
		[1, ⵠ[20], 33, 9, 24, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 35, 35, 27, 0],
		[1, ⵠ[ΔΔⵠΔ], 33, 56, 35, ⲆⵠⲆ],
		[1, ⵠ[ⵠᐃⲆΔ], 36, 53, 36, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[20], 33, 45, 35, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 35, 53, 39, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 36, 57, 30, ⲆⲆⲆ],
		[1, ⵠ[20], 33, 86, 108, ⲆΔᐃ],
		[1, ⵠ[20], 33, 68, 112, ⲆⲆⲆ],
		[1, ⵠ[20], 33, 49, 109, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 33, 46, 95, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ⵠⲆΔⵠ], 33, 90, 76, ⲆⲆⲆ],
		[1, ⵠ[ⵠᐃⲆΔ], 36, 76, 83, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 36, 70, 72, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 36, 78, 63, 0],
		[ⵠⲆⲆ, ⵠ[20], 36, 90, 64, 0],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 36, 60, 70, 0],
		[1, ⵠ[20], 35, 75, 90, ⲆⲆⲆ],
		[1, ⵠ[20], 35, 81, 58, ⲆⵠⲆ],
		[1, ⵠ[ⲆᐃΔⵠ], 35, 91, 51, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 35, 93, 56, ΔⲆⵠ],
		[1, ⵠ[ⲆᐃΔⵠ], 35, 61, 60, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], 35, 66, 46, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 33, 90, ΔⵠⲆⵠⵠ, ᐃⵠΔ],
		[1, ⵠ[ⵠΔΔΔ], 34, 92, ᐃΔⵠΔΔ, ⲆⲆⲆ],
		[1, ⵠ[20], 35, 75, 39, ΔΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], 35, 67, 42, Δⵠⵠ],
		[1, ⵠ[20], 35, 93, 37, ⲆΔᐃ],
		[1, ⵠ[ⵠΔΔΔ], 36, 89, 28, 0],
		[1, ⵠ[20], 36, 42, 61, Δⵠⵠ],
		[1, ⵠ[20], 33, 49, 50, 0],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 33, 44, 75, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 33, 46, 85, ⲆⲆⲆ],
		[1, ⵠ[20], 33, 64, 84, ⲆⵠⲆ],
		[1, ⵠ[20], 33, 56, 94, 0],
		[1, ⵠ[ⵠΔΔΔ], 33, 25, 90, ⲆⲆⲆ],
		[1, ⵠ[20], 33, 31, 69, 0],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 35, 34, 54, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 35, 29, 47, ΔⲆⵠ],
		[1, ⵠ[ΔΔⵠΔ], 36, 42, 41, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[20], 36, 29, 34, ΔΔᐃ],
		[1, ⵠ[20], 35, 20, 55, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], 35, 14, 52, ΔΔᐃ],
		[1, "s", 2, 12, 171, ⵠⵠⲆ],
		[1, "r", ΔΔⵠΔ, 188, ⲆⲆⲆ],
		[ΔⲆᐃ, "r", 21, 188, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 22, 188, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 23, 188, Δⵠⵠ],
		[1, "r", 24, 188, 0],
		[ᐃⵠⵠ, "r", 25, 189, Δⵠⵠ],
		[1, "r", 24, 189, Δⵠⵠ],
		[ⵠⵠⲆ, "r", 23, 189, ΔΔᐃ],
		[1, "r", 22, 189, Δⵠⵠ],
		[ᐃⵠ, "r", 21, 189, ⲆⲆⲆ],
		[1, "r", 20, 189, 0],
		[1, "r", 19, 189, ΔⲆⵠ],
		[ⵠⵠⲆ, "r", ΔᐃⵠᐃⲆ, 190, 0],
		[ᐃⵠ, "r", 19, 191, ΔⲆⵠ],
		[1, "r", ΔΔⵠΔ, 191, 0],
		[1, "r", 21, 191, 0],
		[1, "r", 22, 191, ⲆΔᐃ],
		[1, "r", 24, 191, ⲆⵠⲆ],
		[1, "r", 23, 191, 0],
		[ᐃⵠ, "r", 25, 191, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 25, 190, 0],
		[ⵠⲆⲆ, "r", 24, 190, 0],
		[ᐃⵠⵠ, "r", 23, 190, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 22, 190, 0],
		[ⵠⵠⲆ, "r", 21, 190, ΔΔᐃ],
		[1, "r", ⲆᐃΔⵠ, 190, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 26, 190, Δⵠⵠ],
		[1, "r", 26, 191, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 24, 193, Δⵠⵠ],
		[1, "r", 23, 193, 0],
		[1, "r", 22, 193, 0],
		[1, "r", ⵠΔⲆⵠ, 192, 0],
		[1, "r", 21, 192, 0],
		[ⵠⵠⲆ, "r", 22, 192, 0],
		[ΔⲆᐃ, "r", 23, 192, 0],
		[ᐃⵠ, "r", 24, 192, 0],
		[ᐃⵠⵠ, "r", 25, 192, 0],
		[ᐃⵠ, "r", 53, 199, 0],
		[1, "r", 52, 200, 0],
		[1, "r", 54, 199, 0],
		[ⵠⲆⲆ, "r", 55, 199, 0],
		[ⵠⵠⲆ, "r", 55, 200, ⲆⵠⲆ],
		[1, "r", 54, 200, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 53, 200, ΔⲆⵠ],
		[ᐃⵠⵠ, "r", 51, 200, 0],
		[1, "r", 56, 200, ⲆⲆⲆ],
		[1, "r", 55, 201, Δⵠⵠ],
		[1, "r", 54, 201, 0],
		[1, "r", 55, 202, ᐃⵠΔ],
		[1, "r", 54, 203, 0],
		[ⵠⵠⲆ, "r", 54, 204, ΔⲆⵠ],
		[ᐃⵠⵠ, "r", 54, 202, ⲆⵠⲆ],
		[1, "r", 53, 202, ⲆΔᐃ],
		[1, "r", 52, 202, ᐃⵠΔ],
		[1, "r", 53, 201, 0],
		[ΔⲆᐃ, "r", 52, 201, ΔΔᐃ],
		[ⵠⵠⲆ, "r", 51, 201, 0],
		[ΔⲆᐃ, "r", 51, 202, ᐃⵠΔ],
		[1, "r", 50, 202, 0],
		[ᐃⵠ, "r", 50, 201, 0],
		[ᐃⵠⵠ, "r", 56, 201, 0],
		[ᐃⵠ, "r", 53, 203, 0],
		[1, "r", 52, 203, Δⵠⵠ],
		[ⵠⵠⲆ, "r", 51, 203, 0],
		[ᐃⵠ, "r", 56, 202, 0],
		[1, "r", 55, 203, 0],
		[ᐃⵠ, "r", 53, 204, Δⵠⵠ],
		[1, "r", 52, 204, 0],
		[ΔⲆᐃ, "r", 55, 204, ᐃⵠΔ],
		[1, "r", 56, 203, ΔⲆⵠ],
		[ⵠⵠⲆ, "r", 56, 244, ᐃⵠΔ],
		[ⵠⵠⲆ, "r", 54, 246, 0],
		[ⵠⲆⲆ, "r", 50, 248, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 48, 248, 0],
		[1, "r", 43, 248, ΔΔᐃ],
		[1, "r", 45, 238, Δⵠⵠ],
		[ⵠⵠⲆ, "r", 44, 238, 0],
		[ⵠⵠⲆ, "r", 43, 238, 0],
		[ᐃⵠⵠ, "r", 46, 238, 0],
		[1, "r", 47, 238, 0],
		[1, "r", 48, 238, ᐃⵠΔ],
		[ⵠⲆⲆ, "r", 49, 238, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 50, 238, 0],
		[ΔⲆᐃ, "r", 51, 238, ΔⲆⵠ],
		[ⵠⵠⲆ, "r", 52, 238, 0],
		[1, "r", 53, 238, 0],
		[1, "r", 54, 239, 0],
		[ⵠⵠⲆ, "r", 53, 240, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 53, 239, ⲆⲆⲆ],
		[ΔⲆᐃ, "r", 52, 239, 0],
		[ΔⲆᐃ, "r", 51, 239, 0],
		[1, "r", 50, 239, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 49, 239, ⲆΔᐃ],
		[ⵠⲆⲆ, "r", 48, 239, 0],
		[1, "r", 47, 239, 0],
		[ⵠⲆⲆ, "r", 46, 239, Δⵠⵠ],
		[1, "r", 45, 239, ⲆΔᐃ],
		[1, "r", 44, 239, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 43, 239, 0],
		[ⵠⵠⲆ, "r", 42, 239, ΔⲆⵠ],
		[1, "r", 41, 240, 0],
		[1, "r", 42, 240, 0],
		[ᐃⵠ, "r", 43, 240, ᐃⵠΔ],
		[1, "r", 44, 240, ΔⲆⵠ],
		[1, "r", 45, 240, ⲆΔᐃ],
		[1, "r", 46, 240, ⲆⲆⲆ],
		[1, "r", 47, 240, 0],
		[1, "r", 48, 240, 0],
		[ΔⲆᐃ, "r", 49, 240, ΔⲆⵠ],
		[1, "r", 50, 240, ⲆΔᐃ],
		[1, "r", 51, 240, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 52, 240, 0],
		[1, "r", 54, 240, 0],
		[1, "r", 55, 240, 0],
		[1, "r", 56, 241, 0],
		[1, "r", 55, 241, 0],
		[ᐃⵠⵠ, "r", 54, 241, Δⵠⵠ],
		[1, "r", 53, 241, 0],
		[1, "r", 52, 241, ⲆⲆⲆ],
		[ⵠⵠⲆ, "r", 51, 241, ΔΔᐃ],
		[ⵠⵠⲆ, "r", 49, 241, ⲆⵠⲆ],
		[1, "r", 50, 241, ⲆⵠⲆ],
		[ⵠⵠⲆ, "r", 48, 241, 0],
		[ΔⲆᐃ, "r", 47, 241, ⲆⵠⲆ],
		[1, "r", 46, 241, ⲆΔᐃ],
		[ⵠⵠⲆ, "r", 45, 241, Δⵠⵠ],
		[1, "r", 44, 241, Δⵠⵠ],
		[1, "r", 43, 241, ⲆΔᐃ],
		[1, "r", 42, 241, 0],
		[ΔⲆᐃ, "r", 41, 241, 0],
		[ⵠⲆⲆ, "r", 40, 242, ᐃⵠΔ],
		[ⵠⵠⲆ, "r", 41, 242, ᐃⵠΔ],
		[ᐃⵠ, "r", 42, 242, ⲆⲆⲆ],
		[1, "r", 43, 242, ᐃⵠΔ],
		[ⵠⲆⲆ, "r", 44, 242, 0],
		[1, "r", 45, 242, ⲆΔᐃ],
		[1, "r", 46, 242, ⲆⵠⲆ],
		[ⵠⲆⲆ, "r", 47, 242, 0],
		[1, "r", 48, 242, 0],
		[ⵠⵠⲆ, "r", 49, 242, ⲆΔᐃ],
		[1, "r", 50, 242, 0],
		[1, "r", 51, 242, ΔⲆⵠ],
		[ΔⲆᐃ, "r", 52, 242, 0],
		[ᐃⵠ, "r", 53, 242, 0],
		[ᐃⵠ, "r", 54, 242, ΔⲆⵠ],
		[1, "r", 55, 242, ⲆΔᐃ],
		[ᐃⵠⵠ, "r", 56, 242, 0],
		[ᐃⵠⵠ, "r", 56, 243, 0],
		[ⵠⲆⲆ, "r", 55, 243, ⲆⵠⲆ],
		[ⵠⲆⲆ, "r", 54, 243, 0],
		[1, "r", 53, 243, 0],
		[ⵠⲆⲆ, "r", 52, 243, 0],
		[1, "r", 51, 243, 0],
		[1, "r", 50, 243, 0],
		[1, "r", 49, 243, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 48, 243, 0],
		[1, "r", 47, 243, 0],
		[ⵠⲆⲆ, "r", 46, 243, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 45, 243, 0],
		[1, "r", 44, 243, ⲆΔᐃ],
		[1, "r", 43, 243, 0],
		[1, "r", 42, 243, 0],
		[ΔⲆᐃ, "r", 41, 243, 0],
		[ⵠⲆⲆ, "r", 40, 243, 0],
		[1, "r", 40, 244, 0],
		[ᐃⵠ, "r", 41, 244, 0],
		[ⵠⵠⲆ, "r", 43, 244, Δⵠⵠ],
		[1, "r", 44, 244, 0],
		[ΔⲆᐃ, "r", 45, 244, 0],
		[1, "r", 46, 244, ᐃⵠΔ],
		[1, "r", 47, 244, 0],
		[1, "r", 48, 244, 0],
		[ⵠⵠⲆ, "r", 49, 244, 0],
		[ᐃⵠⵠ, "r", 50, 244, 0],
		[1, "r", 51, 244, ⲆⵠⲆ],
		[ⵠⵠⲆ, "r", 52, 244, 0],
		[ᐃⵠⵠ, "r", 53, 244, 0],
		[1, "r", 54, 244, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 55, 244, 0],
		[1, "r", 42, 244, 0],
		[1, "r", 40, 245, 0],
		[ΔⲆᐃ, "r", 41, 245, ΔⲆⵠ],
		[1, "r", 42, 245, ⲆⵠⲆ],
		[1, "r", 43, 245, 0],
		[ΔⲆᐃ, "r", 44, 245, 0],
		[ᐃⵠ, "r", 45, 245, 0],
		[ⵠⵠⲆ, "r", 46, 245, ΔⲆⵠ],
		[1, "r", 47, 245, ΔΔᐃ],
		[1, "r", 48, 245, ΔⲆⵠ],
		[1, "r", 49, 245, ΔⲆⵠ],
		[1, "r", 50, 245, 0],
		[ᐃⵠ, "r", 51, 245, 0],
		[ⵠⵠⲆ, "r", 52, 246, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 52, 245, 0],
		[1, "r", 53, 245, 0],
		[ⵠⲆⲆ, "r", 54, 245, ΔΔᐃ],
		[1, "r", 55, 245, Δⵠⵠ],
		[1, "r", 53, 246, 0],
		[ᐃⵠ, "r", 51, 246, 0],
		[ᐃⵠ, "r", 50, 246, 0],
		[1, "r", 49, 246, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 48, 246, ΔⲆⵠ],
		[ᐃⵠ, "r", 47, 246, ⲆΔᐃ],
		[ᐃⵠ, "r", 45, 246, 0],
		[1, "r", 46, 246, ⲆⵠⲆ],
		[ᐃⵠⵠ, "r", 44, 246, ⲆⵠⲆ],
		[ⵠⵠⲆ, "r", 43, 246, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 42, 246, 0],
		[1, "r", 41, 246, ΔΔᐃ],
		[ᐃⵠ, "r", 42, 247, Δⵠⵠ],
		[1, "r", 43, 247, 0],
		[ᐃⵠⵠ, "r", 44, 247, 0],
		[ⵠⲆⲆ, "r", 45, 247, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 46, 247, 0],
		[ΔⲆᐃ, "r", 47, 247, ᐃⵠΔ],
		[1, "r", 48, 247, ⲆⵠⲆ],
		[ᐃⵠⵠ, "r", 50, 247, 0],
		[ⵠⵠⲆ, "r", 51, 247, 0],
		[1, "r", 52, 247, ΔΔᐃ],
		[1, "r", 53, 247, ⲆΔᐃ],
		[1, "r", 54, 247, 0],
		[1, "r", 49, 247, 0],
		[1, "r", 49, 248, 0],
		[1, "r", 47, 248, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 46, 248, Δⵠⵠ],
		[ᐃⵠⵠ, "r", 45, 248, 0],
		[ᐃⵠ, "r", 51, 248, ⲆΔᐃ],
		[ᐃⵠⵠ, "r", 55, 246, 1],
		[ΔⲆᐃ, "r", 55, 247, ⵠⲆⲆ],
		[ᐃⵠ, "r", 56, 247, ⵠⲆⲆ],
		[1, "r", 56, 248, ⵠⲆⲆ],
		[ⵠⵠⲆ, "r", 95, 270, 1],
		[ⵠⵠⲆ, "r", 93, 270, ⵠⲆⲆ],
		[1, "r", 94, 270, ΔⲆᐃ],
		[ᐃⵠⵠ, "r", 95, 271, 1],
		[ᐃⵠ, "r", 94, 271, ⵠⲆⲆ],
		[1, "r", 93, 271, ⵠⲆⲆ],
		[ᐃⵠ, "r", 94, 282, ⵠⵠⲆ],
		[1, "r", 93, 282, 1],
		[ⵠⵠⲆ, "r", 93, 281, ᐃⵠⵠ],
		[ΔⲆᐃ, "r", 92, 281, ᐃⵠ],
		[ⵠⲆⲆ, "r", 92, 280, ΔⲆᐃ],
		[ⵠⵠⲆ, "r", 91, 280, 1],
		[1, "r", 90, 279, 1],
		[ⵠⵠⲆ, "r", 95, 275, 1],
		[ⵠⲆⲆ, "r", 95, 274, 1],
		[1, "r", 95, 273, 1],
		[ⵠⵠⲆ, "r", 95, 272, ᐃⵠⵠ],
		[1, "r", 94, 274, ᐃⵠⵠ],
		[ᐃⵠ, "r", 94, 273, 1],
		[1, "r", 94, 272, ᐃⵠⵠ],
		[1, "r", 93, 272, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 93, 273, ᐃⵠ],
		[ⵠⵠⲆ, "r", 93, 274, ⵠⵠⲆ],
		[1, "r", 92, 273, 1],
		[ΔⲆᐃ, "r", 92, 272, 1],
		[1, "r", 92, 270, ᐃⵠ],
		[1, "r", 92, 271, ⵠⵠⲆ],
		[1, "r", 92, 269, 1],
		[1, "r", 90, 269, 1],
		[ⵠⲆⲆ, "r", 91, 269, 1],
		[ΔⲆᐃ, "r", 91, 271, ΔⲆᐃ],
		[1, "r", 91, 270, ⵠⵠⲆ],
		[ᐃⵠ, "r", 95, 278, ⵠⵠⲆ],
		[ⵠⲆⲆ, "r", 95, 277, 1],
		[ⵠⵠⲆ, "r", 95, 276, ΔⲆᐃ],
		[1, "r", 94, 276, 1],
		[1, "r", 94, 275, ΔⲆᐃ],
		[1, "r", 93, 275, 1],
		[1, "r", 92, 274, 1],
		[ᐃⵠ, "r", 92, 275, ⵠⵠⲆ],
		[ⵠⲆⲆ, "r", 91, 275, ᐃⵠⵠ],
		[1, "r", 90, 275, ⵠⲆⲆ],
		[1, "r", 89, 274, ΔⲆᐃ],
		[ᐃⵠ, "r", 90, 274, ⵠⵠⲆ],
		[1, "r", 89, 275, 1],
		[1, "r", 88, 274, 1],
		[ⵠⵠⲆ, "r", 88, 273, 1],
		[1, "r", 86, 272, 1],
		[1, "r", 85, 271, 1],
		[ᐃⵠⵠ, "r", 86, 271, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 87, 272, ΔⲆᐃ],
		[ᐃⵠ, "r", 55, 248, 1],
		[ᐃⵠⵠ, "r", 54, 248, 1],
		[ᐃⵠ, "r", 56, 249, 1],
		[ⵠⵠⲆ, "r", 55, 249, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 55, 250, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 56, 250, 1],
		[ⵠⲆⲆ, "r", 57, 250, ⵠⲆⲆ],
		[ᐃⵠⵠ, "r", 57, 249, ⵠⲆⲆ],
		[ⵠⲆⲆ, "r", 59, 250, ⵠⲆⲆ],
		[1, "r", 58, 250, 1],
		[1, "r", 60, 250, 1],
		[1, "r", 61, 251, ⵠⵠⲆ],
		[1, "r", 60, 251, 1],
		[1, "r", 62, 251, ᐃⵠⵠ],
		[1, "r", 62, 252, 1],
		[ᐃⵠⵠ, "r", 63, 252, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 58, 251, 1],
		[1, "r", 57, 251, 1],
		[1, "r", 56, 251, ΔⲆᐃ],
		[1, "r", 58, 252, 1],
		[1, "r", 57, 252, 1],
		[ⵠⲆⲆ, "r", 57, 253, 1],
		[1, "r", 58, 253, 1],
		[1, "r", 58, 254, ⵠⲆⲆ],
		[ΔⲆᐃ, "r", 59, 255, ΔⲆᐃ],
		[1, "r", 58, 255, ⵠⵠⲆ],
		[ⵠⵠⲆ, "r", 57, 254, ΔⲆᐃ],
		[ᐃⵠⵠ, "r", 56, 252, ΔⲆᐃ],
		[ⵠⵠⲆ, "r", 55, 251, ᐃⵠ],
		[ⵠⲆⲆ, "r", 60, ⵠᐃᐃⵠⲆ, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 61, 255, 1],
		[1, "r", 61, ⲆᐃⲆΔⵠᐃⵠ, 1],
		[ᐃⵠ, "r", 60, ⲆⵠⲆΔᐃΔⲆ, ᐃⵠⵠ],
		[1, "r", 62, 256, ΔⲆᐃ],
		[1, "r", 62, 257, ᐃⵠ],
		[1, "r", 61, 257, 1],
		[1, "r", 64, 253, 1],
		[ᐃⵠ, "r", 64, 254, ᐃⵠⵠ],
		[ⵠⵠⲆ, "r", 65, 254, ΔⲆᐃ],
		[ⵠⵠⲆ, "r", 61, 250, ᐃⵠ],
		[1, "r", 64, 252, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 65, 253, ᐃⵠ],
		[ΔⲆᐃ, "r", 66, 254, 1],
		[1, "r", 65, ᐃᐃᐃΔᐃ, ⵠⲆⲆ],
		[1, "r", 64, ᐃⵠⵠᐃⲆᐃⵠ, ᐃⵠ],
		[ᐃⵠ, "r", 64, ᐃΔⵠⲆΔᐃᐃ, ⵠⵠⲆ],
		[1, "r", 65, 256, 1],
		[1, "r", 65, 257, 1],
		[1, "r", 64, 257, ⵠⲆⲆ],
		[ⵠⲆⲆ, "r", 63, 257, ᐃⵠⵠ],
		[1, "r", 62, 258, ⵠⵠⲆ],
		[1, "r", 63, 258, 1],
		[ΔⲆᐃ, "r", 64, 258, ΔⲆᐃ],
		[1, "r", 66, ⲆⲆⵠΔⲆΔⵠ, 1],
		[1, "r", 66, ΔᐃᐃΔⲆⵠΔ, ΔⲆᐃ],
		[ᐃⵠ, "r", 66, 257, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 66, 258, 1],
		[ⵠⵠⲆ, "r", 65, 258, ᐃⵠ],
		[ᐃⵠ, "r", 67, 258, ᐃⵠ],
		[ᐃⵠ, "r", 67, 257, ⵠⵠⲆ],
		[1, "r", 67, 259, ᐃⵠⵠ],
		[ⵠⵠⲆ, "r", 66, 259, ᐃⵠ],
		[1, "r", 65, 259, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 56, 246, ⵠⵠⲆ],
		[ᐃⵠ, "r", 56, 245, ⵠⵠⲆ],
		[ⵠⵠⲆ, "r", 68, 258, 1],
		[ᐃⵠ, "r", 68, 259, 1],
		[1, "r", 68, 260, ⵠⵠⲆ],
		[ᐃⵠⵠ, "r", 69, 260, ᐃⵠⵠ],
		[ᐃⵠ, "r", 69, 261, ΔⲆᐃ],
		[1, "r", 70, 261, ⵠⲆⲆ],
		[1, "r", 71, 261, 1],
		[1, "r", 67, 260, ⵠⲆⲆ],
		[1, "r", 89, 269, 1],
		[1, "r", 89, 268, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 90, 268, 1],
		[1, "r", 82, 267, 1],
		[1, "r", 83, 267, ⵠⵠⲆ],
		[ᐃⵠⵠ, "r", 80, 266, ΔⲆᐃ],
		[1, "r", 81, 266, 1],
		[1, "r", 81, 267, ⵠⵠⲆ],
		[ⵠⲆⲆ, "r", 79, 266, 1],
		[1, "r", 78, 265, 1],
		[1, "r", 77, 265, 1],
		[ΔⲆᐃ, "r", 76, 264, ᐃⵠⵠ],
		[ⵠⵠⲆ, "r", 75, 264, 1],
		[ᐃⵠ, "r", 75, 263, ⵠⵠⲆ],
		[ⵠⲆⲆ, "r", 74, 263, ᐃⵠ],
		[1, "r", 74, 262, ⵠⲆⲆ],
		[1, "r", 72, 262, 1],
		[1, "r", 73, 262, 1],
		[ᐃⵠⵠ, "r", 71, 262, 1],
		[ᐃⵠ, "r", 85, 270, 1],
		[ΔⲆᐃ, "r", 84, 270, 1],
		[1, "r", 84, 269, 1],
		[1, "r", 83, 269, ⵠⲆⲆ],
		[ᐃⵠⵠ, "r", 82, 269, 1],
		[1, "r", 81, 269, 1],
		[1, "r", 81, 268, ⵠⲆⲆ],
		[1, "r", 82, 268, ᐃⵠ],
		[1, "r", 83, 268, ΔⲆᐃ],
		[ᐃⵠⵠ, "r", 80, 268, 1],
		[1, "r", 80, 267, 1],
		[ⵠⵠⲆ, "r", 79, 267, ⵠⲆⲆ],
		[ΔⲆᐃ, "r", 78, 266, ΔⲆᐃ],
		[ΔⲆᐃ, "r", 76, 265, ⵠⲆⲆ],
		[1, "r", 75, 262, 1],
		[ΔⲆᐃ, "r", 90, 280, 1],
		[ᐃⵠ, "r", 89, 280, ΔⲆᐃ],
		[1, "r", 89, 279, ⵠⵠⲆ],
		[1, "r", 88, 279, 1],
		[ᐃⵠⵠ, "r", 88, 278, 1],
		[1, "r", 87, 277, 1],
		[1, "r", 86, 276, 1],
		[ᐃⵠ, "r", 86, 275, ⵠⲆⲆ],
		[1, "r", 86, 274, ᐃⵠⵠ],
		[ΔⲆᐃ, "r", 86, 273, ᐃⵠⵠ],
		[ᐃⵠ, "r", 85, 273, 1],
		[ᐃⵠⵠ, "r", 85, 272, 1],
		[ᐃⵠⵠ, "r", 85, 274, 1],
		[1, "r", 86, 277, ⵠⵠⲆ],
		[1, "r", 87, 278, 1],
		[1, "r", 84, 271, ⵠⵠⲆ],
		[ΔⲆᐃ, "r", 83, 270, ⵠⲆⲆ],
		[1, "r", 87, 273, 1],
		[1, "r", 91, 274, ⵠⵠⲆ],
		[ᐃⵠ, "r", 89, 273, ᐃⵠ],
		[ΔⲆᐃ, "r", 88, 272, ᐃⵠ],
		[1, "r", 91, 281, ⵠⵠⲆ],
		[ᐃⵠ, "r", 92, 282, 1],
		[ⵠⲆⲆ, "r", 88, 280, ⵠⵠⲆ],
		[1, "r", 87, 279, ᐃⵠⵠ],
		[ΔⲆᐃ, "r", 85, 275, ΔⲆᐃ],
		[1, "r", 84, 273, ᐃⵠⵠ],
		[1, "r", 84, 272, 1],
		[1, "r", 83, 271, 1],
		[1, "r", 82, 270, 1],
		[1, "r", 84, 267, Δⵠⵠ],
		[1, "r", 85, 267, ⲆⲆⲆ],
		[1, "r", 76, 262, ⲆⲆⲆ],
		[ΔⲆᐃ, "r", 77, 262, ⲆⵠⲆ],
		[1, "r", 88, 268, 0],
		[1, "r", 78, 262, 0],
		[ΔⲆᐃ, "r", 79, 262, Δⵠⵠ],
		[ᐃⵠ, "r", 80, 262, 0],
		[ᐃⵠⵠ, "r", 80, 263, 0],
		[ⵠⲆⲆ, "r", 81, 263, ⲆⵠⲆ],
		[1, "r", 82, 263, 0],
		[ⵠⵠⲆ, "r", 83, 263, ⲆⵠⲆ],
		[1, "r", 84, 263, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 85, 263, ΔΔᐃ],
		[ᐃⵠ, "r", 88, 262, 0],
		[ⵠⵠⲆ, "r", 89, 262, ⲆⲆⲆ],
		[1, "r", 90, 262, Δⵠⵠ],
		[ⵠⲆⲆ, "r", 87, 262, ΔΔᐃ],
		[ⵠⵠⲆ, "r", 86, 262, Δⵠⵠ],
		[1, "r", 86, 263, 0],
		[ᐃⵠ, "r", 87, 263, 0],
		[ᐃⵠ, "r", 91, 262, 0],
		[ⵠⵠⲆ, "r", 95, 262, ΔΔᐃ],
		[1, "r", 94, 262, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 86, 267, 0],
		[ⵠⲆⲆ, "r", 87, 267, 0],
		[1, "r", 87, 268, 0],
		[1, "r", 86, 268, 0],
		[1, "r", 74, 189, ⲆⲆⲆ],
		[1, "r", 75, 189, 0],
		[ⵠⵠⲆ, "r", 76, 189, ΔΔᐃ],
		[1, "r", 77, 189, ΔⲆⵠ],
		[ᐃⵠ, "r", 78, 190, ΔΔᐃ],
		[1, "r", 77, 190, 0],
		[ΔⲆᐃ, "r", 75, 190, 0],
		[ᐃⵠⵠ, "r", 76, 190, 0],
		[1, "r", 74, 190, ᐃⵠΔ],
		[1, "r", 73, 190, 0],
		[ⵠⵠⲆ, "r", 78, 191, 0],
		[ᐃⵠ, "r", 76, 191, ⲆⲆⲆ],
		[ⵠⵠⲆ, "r", 77, 191, ⲆⵠⲆ],
		[ᐃⵠⵠ, "r", 75, 191, Δⵠⵠ],
		[1, "r", 74, 191, ΔΔᐃ],
		[ΔⲆᐃ, "r", 78, 192, Δⵠⵠ],
		[ᐃⵠ, "r", 77, 192, 0],
		[ΔⲆᐃ, "r", 76, 192, ΔΔᐃ],
		[1, "r", 75, 192, ΔΔᐃ],
		[1, "r", 74, 192, 0],
		[1, "r", 73, 191, 0],
		[ΔⲆᐃ, "f", ⵠⵠⲆ, 96, 22, 1],
		[1, "s", ⵠⲆⲆ, 97, 22, 1],
		[ᐃⵠ, "f", ΔⲆᐃ, 98, 22, ⵠⲆⲆ],
		[ΔⲆᐃ, "s", ⲆⲆⲆ, 99, 22, 1],
		[1, "s", ΔⲆᐃ, ⲆΔᐃⲆⵠ, 21, 1],
		[1, "s", 1, 96, 49, 1],
		[1, "s", 1, ΔⵠΔⵠⵠ, 50, 1],
		[1, "s", 0, 99, 49, ⵠⲆⲆ],
		[1, "s", 0, 97, 49, ΔⲆᐃ],
		[ΔⲆᐃ, "f", 1, 98, 49, 1],
		[1, "r", 70, 218, 0],
		[ᐃⵠ, "r", 71, 218, 0],
		[1, "r", 72, 218, ⲆⵠⲆ],
		[1, "r", 73, 218, Δⵠⵠ],
		[1, "r", 74, 219, 0],
		[1, "r", 73, 219, ᐃⵠΔ],
		[1, "r", 72, 219, ⲆⲆⲆ],
		[1, "r", 71, 219, Δⵠⵠ],
		[ⵠⵠⲆ, "r", 70, 219, 0],
		[ᐃⵠⵠ, "r", 73, 220, 0],
		[1, "r", 72, 220, 0],
		[ΔⲆᐃ, "r", 71, 220, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 72, 221, ⲆⲆⲆ],
		[1, "r", 71, 221, ΔⲆⵠ],
		[1, "r", 70, 221, Δⵠⵠ],
		[ᐃⵠ, "r", 69, 221, 0],
		[1, "r", 68, 221, ⲆⵠⲆ],
		[ᐃⵠ, "r", 70, 220, Δⵠⵠ],
		[ᐃⵠ, "r", 69, 220, 0],
		[1, "r", 69, 219, Δⵠⵠ],
		[1, "r", 68, 220, ᐃⵠΔ],
		[ᐃⵠ, "r", 73, 221, 0],
		[1, "r", 73, 222, 0],
		[ⵠⲆⲆ, "r", 71, 222, 0],
		[ⵠⲆⲆ, "r", 72, 222, Δⵠⵠ],
		[ᐃⵠ, "r", 74, 221, 0],
		[1, "r", 74, 220, 0],
		[ⵠⵠⲆ, "r", 75, 220, ⲆⵠⲆ],
		[1, "r", 75, 221, ⲆΔᐃ],
		[ⵠⵠⲆ, "r", 70, 222, 0],
		[ᐃⵠⵠ, "r", 69, 222, 0],
		[ⵠⲆⲆ, "r", 29, 217, 0],
		[1, "r", 30, 217, 0],
		[ᐃⵠⵠ, "r", 31, 217, ᐃⵠΔ],
		[ᐃⵠⵠ, "r", 32, 217, ΔΔᐃ],
		[1, "r", 31, 219, 0],
		[1, "r", 30, 219, ⲆⵠⲆ],
		[1, "r", 29, 219, 0],
		[1, "r", 27, 219, ΔΔᐃ],
		[ⵠⲆⲆ, "r", 25, 219, ΔⲆⵠ],
		[ΔⲆᐃ, "r", 26, 219, 0],
		[ⵠⲆⲆ, "r", 28, 219, ⲆⲆⲆ],
		[1, "r", 26, 218, 0],
		[1, "r", 27, 218, ⲆΔᐃ],
		[1, "r", 28, 218, 0],
		[ⵠⵠⲆ, "r", 29, 218, 0],
		[ΔⲆᐃ, "r", 30, 218, ᐃⵠΔ],
		[1, "r", 28, 217, 0],
		[ⵠⵠⲆ, "r", 26, 217, 0],
		[ᐃⵠ, "r", 27, 217, ΔΔᐃ],
		[ⵠⲆⲆ, "r", 28, 216, 0],
		[ᐃⵠ, "r", 29, 216, 0],
		[ⵠⵠⲆ, "r", 30, 216, 0],
		[ᐃⵠⵠ, "r", 31, 218, ⲆΔᐃ],
		[ᐃⵠⵠ, "r", 32, 218, 0],
		[ⵠⲆⲆ, "r", 31, 216, 0],
		[1, "r", 31, 221, ΔⲆⵠ],
		[1, "r", 31, 220, 0],
		[ᐃⵠⵠ, "r", 30, 220, 0],
		[ᐃⵠⵠ, "r", 29, 220, Δⵠⵠ],
		[1, "r", 28, 220, ⲆⲆⲆ],
		[1, "r", 27, 220, Δⵠⵠ],
		[ᐃⵠⵠ, "r", 26, 220, ⲆⲆⲆ],
		[ⵠⲆⲆ, "r", 25, 218, ⲆⲆⲆ],
		[1, "r", 27, 221, 0],
		[ⵠⲆⲆ, "r", 28, 221, 0],
		[1, "r", 29, 221, ⲆⵠⲆ],
		[ᐃⵠ, "r", 30, 221, ⲆⵠⲆ],
		[ⵠⲆⲆ, "r", 32, 220, 0],
		[1, "r", 32, 219, 0],
		[ΔⲆᐃ, "r", 33, 218, ΔΔᐃ],
		[ΔⲆᐃ, "r", 33, 219, Δⵠⵠ],
		[1, "r", 75, 238, 0],
		[ⵠⵠⲆ, "r", 76, 238, 0],
		[1, "r", 77, 239, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 76, 239, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 75, 239, ΔΔᐃ],
		[ⵠⲆⲆ, "r", 74, 239, 0],
		[ᐃⵠ, "r", 76, 240, ᐃⵠΔ],
		[1, "r", 77, 240, Δⵠⵠ],
		[ⵠⲆⲆ, "r", 78, 240, ⲆⵠⲆ],
		[1, "r", 77, 241, 0],
		[ᐃⵠⵠ, "r", 76, 241, 0],
		[1, "r", 75, 241, ΔΔᐃ],
		[1, "r", 75, 240, 0],
		[ᐃⵠ, "r", 74, 240, 0],
		[ⵠⲆⲆ, "r", 78, 239, 0],
		[ⵠⵠⲆ, "r", 77, 238, 0],
		[ⵠⲆⲆ, "r", 18, 253, 0],
		[1, "r", 19, 252, 0],
		[ᐃⵠ, "r", 20, 252, ⲆⵠⲆ],
		[1, "r", 21, 253, 0],
		[1, "r", 23, 254, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 20, 254, 0],
		[1, "r", ⵠⲆⲆⲆⵠ, 254, ⲆⲆⲆ],
		[ⵠⵠⲆ, "r", 22, 254, 0],
		[1, "r", ⲆⵠᐃᐃⲆ, 254, 0],
		[ᐃⵠⵠ, "r", ᐃᐃᐃΔΔ, 253, ᐃⵠΔ],
		[1, "r", 20, 253, ᐃⵠΔ],
		[1, "r", 21, 254, 0],
		[ΔⲆᐃ, "r", 22, 253, ⲆⲆⲆ],
		[1, "r", 21, ΔΔΔⵠᐃⵠⵠ, ΔΔᐃ],
		[1, "r", ⵠᐃⵠⲆ, ᐃᐃᐃΔᐃ, 0],
		[1, "r", ΔᐃⵠΔΔ, 255, ⲆⵠⲆ],
		[1, "r", ᐃⲆⵠⵠᐃ, ᐃΔᐃⲆΔ, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 17, 255, 0],
		[1, "r", ΔΔᐃⲆⲆ, 254, 0],
		[1, "r", 22, 255, 0],
		[ᐃⵠⵠ, "r", ⵠⲆᐃᐃⲆ, ᐃΔⵠⲆΔᐃᐃ, ΔⲆⵠ],
		[1, "r", ⵠⵠᐃᐃ, ⲆⵠⲆΔᐃΔⲆ, ΔΔᐃ],
		[1, "r", 21, 256, ⲆⲆⲆ],
		[1, "r", 39, 270, 0],
		[ᐃⵠ, "r", 40, 270, 0],
		[1, "r", 41, 270, 0],
		[1, "r", 43, 270, 0],
		[1, "r", 44, 270, 0],
		[1, "r", 46, 270, Δⵠⵠ],
		[1, "r", 42, 270, ⲆⵠⲆ],
		[ᐃⵠ, "r", 45, 270, 0],
		[1, "r", 44, 269, ᐃⵠΔ],
		[ⵠⲆⲆ, "r", 43, 269, 0],
		[ΔⲆᐃ, "r", 42, 269, ΔⲆⵠ],
		[ΔⲆᐃ, "r", 40, 269, 0],
		[1, "r", 41, 269, ⲆⲆⲆ],
		[1, "r", 45, 271, 0],
		[1, "r", 44, 271, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 43, 271, 0],
		[ⵠⲆⲆ, "r", 42, 271, ⲆⲆⲆ],
		[1, "r", 41, 271, 0],
		[1, "r", 40, 271, 0],
		[1, "r", 39, 271, Δⵠⵠ],
		[ᐃⵠ, "r", 46, 271, ᐃⵠΔ],
		[1, "r", 45, 272, 0],
		[ⵠⲆⲆ, "r", 44, 272, 0],
		[1, "r", 43, 272, ⲆⲆⲆ],
		[1, "r", 42, 272, ⲆΔᐃ],
		[1, "r", 19, 284, Δⵠⵠ],
		[ᐃⵠ, "r", ⵠΔΔΔ, 284, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 21, 285, ᐃⵠΔ],
		[1, "r", 22, 285, ⲆΔᐃ],
		[1, "r", 23, 286, 0],
		[ᐃⵠⵠ, "r", 22, 288, 0],
		[1, "r", ⵠⵠΔⵠ, 288, 0],
		[ᐃⵠⵠ, "r", ΔᐃΔⵠⲆ, 288, 0],
		[ⵠⲆⲆ, "r", 17, 287, ΔⲆⵠ],
		[1, "r", 16, 287, ⲆⵠⲆ],
		[ᐃⵠⵠ, "r", 16, 286, ΔⲆⵠ],
		[1, "r", ΔΔⲆᐃⲆ, 286, ΔⲆⵠ],
		[ΔⲆᐃ, "r", 18, 286, 0],
		[ΔⲆᐃ, "r", ᐃᐃᐃΔΔ, 286, 0],
		[ᐃⵠⵠ, "r", 20, 286, 0],
		[ⵠⲆⲆ, "r", 21, 286, 0],
		[ⵠⲆⲆ, "r", 22, 286, ⲆⲆⲆ],
		[1, "r", ⵠⲆΔⵠ, 285, ΔⲆⵠ],
		[1, "r", ⵠⲆⲆⲆⵠ, 285, 0],
		[ᐃⵠⵠ, "r", 18, 285, ΔΔᐃ],
		[ΔⲆᐃ, "r", ΔΔΔⲆⲆΔᐃ, 285, 0],
		[1, "r", ⵠΔΔᐃᐃ, 287, 0],
		[1, "r", ⵠΔΔᐃΔ, 287, ΔΔᐃ],
		[1, "r", 20, 287, ⲆⵠⲆ],
		[1, "r", 21, 287, 0],
		[ᐃⵠ, "r", 22, 287, ᐃⵠΔ],
		[1, "r", 23, 287, 0],
		[1, "r", 21, 288, 0],
		[ⵠⲆⲆ, "r", 19, 288, 0],
		[1, "r", 17, 288, 0],
		[ᐃⵠ, "r", ΔⲆⲆⵠⵠ, 289, 0],
		[1, "r", 21, 289, 0],
		[1, "r", 22, 289, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 20, 289, ⲆⵠⲆ],
		[1, "r", 23, 288, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 24, 287, ⲆⵠⲆ],
		[1, "r", 24, 286, 0],
		[ᐃⵠ, "r", 23, 285, 0],
		[ⵠⲆⲆ, "r", 66, 286, 0],
		[ⵠⵠⲆ, "r", 64, 287, ⲆΔᐃ],
		[ΔⲆᐃ, "r", 63, 287, 0],
		[ⵠⲆⲆ, "r", 60, 287, 0],
		[ᐃⵠ, "r", 59, 285, 0],
		[1, "r", 58, 284, 0],
		[ΔⲆᐃ, "r", 59, 283, 0],
		[ᐃⵠⵠ, "r", 65, 283, 0],
		[ᐃⵠⵠ, "r", 64, 283, 0],
		[1, "r", 63, 283, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 62, 283, 0],
		[ⵠⲆⲆ, "r", 61, 283, 0],
		[ΔⲆᐃ, "r", 60, 283, 0],
		[ᐃⵠⵠ, "r", 59, 284, ΔⲆⵠ],
		[ᐃⵠ, "r", 58, 285, 0],
		[1, "r", 60, 286, ⲆⲆⲆ],
		[1, "r", 59, 286, Δⵠⵠ],
		[1, "r", 61, 287, ΔΔᐃ],
		[1, "r", 62, 287, Δⵠⵠ],
		[ⵠⵠⲆ, "r", 61, 286, 0],
		[1, "r", 62, 286, 0],
		[1, "r", 63, 286, 0],
		[ᐃⵠⵠ, "r", 64, 286, 0],
		[ᐃⵠ, "r", 65, 286, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 67, 285, ⲆⲆⲆ],
		[ΔⲆᐃ, "r", 66, 285, 0],
		[ⵠⲆⲆ, "r", 65, 285, 0],
		[ⵠⵠⲆ, "r", 64, 285, 0],
		[1, "r", 63, 285, 0],
		[1, "r", 62, 285, ⲆⲆⲆ],
		[1, "r", 61, 285, 0],
		[1, "r", 60, 285, 0],
		[1, "r", 60, 284, 0],
		[ΔⲆᐃ, "r", 61, 284, 0],
		[ᐃⵠ, "r", 62, 284, ⲆΔᐃ],
		[1, "r", 63, 284, 0],
		[ΔⲆᐃ, "r", 64, 284, ᐃⵠΔ],
		[ᐃⵠⵠ, "r", 65, 284, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 66, 284, ΔΔᐃ],
		[ⵠⵠⲆ, "r", 65, 287, 0],
		[1, "r", 67, 286, ΔΔᐃ],
		[ᐃⵠⵠ, "p", ΔⲆⵠ, Ⲇⵠⵠⵠᐃ, 189, 1],
		[1, "p", ⲆΔᐃ, 32, 184, 1],
		[ΔⲆᐃ, "p", ΔΔᐃ, 47, 191, 1],
		[1, "p", ΔΔᐃ, 64, 184, ΔⲆᐃ],
		[ⵠⵠⲆ, "p", ΔⲆⵠ, 84, 192, 1],
		[ⵠⲆⲆ, "p", ᐃⵠΔ, 78, 207, ᐃⵠ],
		[1, "p", 0, 58, 216, 1],
		[1, "p", 0, 41, 211, 1],
		[ᐃⵠ, "p", 0, 18, 211, 1],
		[ᐃⵠⵠ, "p", 0, 14, 230, ⵠⲆⲆ],
		[ΔⲆᐃ, "p", 0, 29, 237, ᐃⵠⵠ],
		[ᐃⵠ, "p", 0, 50, 230, 1],
		[ᐃⵠⵠ, "p", 0, 78, 241, ᐃⵠⵠ],
		[1, "p", 0, 74, 256, 1],
		[ⵠⲆⲆ, "p", 0, 68, 266, ᐃⵠⵠ],
		[1, "p", ⲆⲆⲆ, 48, 259, 1],
		[1, "p", ⲆⵠⲆ, 31, 263, 1],
		[ᐃⵠ, "p", 0, 18, 274, 1],
		[1, "p", 0, 33, 283, 1],
		[ᐃⵠⵠ, "p", Δⵠⵠ, 66, 287, 1],
		[ᐃⵠⵠ, "p", 0, 82, 291, ΔⲆᐃ],
		[ᐃⵠ, "p", ΔΔᐃ, ᐃΔⲆⲆⲆᐃᐃ, 295, 1],
		[ⵠⵠⲆ, "p", ⲆⵠⲆ, 45, 294, 1],
		[1, "p", 0, 18, 252, 1],
		[ⵠⲆⲆ, "p", 0, 79, 227, ΔⲆᐃ],
		[ⵠⵠⲆ, "p", 0, 32, 200, 1],
		[ᐃⵠ, "p", 0, 64, 200, ᐃⵠⵠ],
		[1, "s", ⲆⲆⲆ, 21, 193, ⵠⵠⲆ],
		[1, "s", 1, ΔΔⵠⲆΔ, 189, ΔⲆᐃ],
		[1, "s", ⵠΔⲆΔ, 26, 189, 1],
		[ΔⲆᐃ, "b", ᐃⵠ, 15, 181, ⲆⲆⲆ],
		[ᐃⵠⵠ, "b", ⲆⲆⵠΔ, ΔᐃΔⵠⲆ, 190, Δⵠⵠ],
		[1, "b", 2, 29, 193, 0],
		[ᐃⵠⵠ, "t", 3, ΔⲆⲆⲆᐃ, 182, 0],
		[ΔⲆᐃ, "t", ⵠΔᐃⲆ, ⲆⲆΔᐃᐃ, 195, 0],
		[1, "t", 4, ⲆⵠᐃΔᐃ, 183, 0],
		[1, "t", ⲆΔⵠᐃ, 10, 184, 0],
		[ΔⲆᐃ, "t", 5, 23, 182, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ⵠᐃᐃⲆ, 30, 187, Δⵠⵠ],
		[1, "t", 1, 26, 192, Δⵠⵠ],
		[1, "b", ⵠⲆⲆ, 25, 188, 0],
		[ΔⲆᐃ, "s", 1, 24, 181, ⵠⲆⲆ],
		[1, "t", ⵠΔᐃⲆ, 33, 183, ⲆⲆⲆ],
		[1, "b", ΔⲆᐃ, 36, 189, ΔⲆⵠ],
		[1, "t", ⵠΔⲆΔ, 35, 190, Δⵠⵠ],
		[ⵠⲆⲆ, "b", ΔⲆΔⵠ, 19, 200, 0],
		[1, "s", 0, 28, 194, 1],
		[1, "s", ΔⲆᐃ, 32, 196, 1],
		[ᐃⵠ, "s", 1, 36, 183, ᐃⵠⵠ],
		[ᐃⵠⵠ, "s", ⵠⲆΔΔ, 38, 184, ᐃⵠ],
		[ᐃⵠ, "s", 2, 10, 192, 1],
		[ⵠⵠⲆ, "s", ⵠⵠⲆᐃ, ᐃⲆᐃⵠⵠ, 183, 1],
		[ᐃⵠ, "s", ⵠⵠⲆ, ᐃᐃΔⲆⵠ, 199, 1],
		[ᐃⵠⵠ, "b", 0, 12, 202, ⲆΔᐃ],
		[1, "t", 2, ⵠᐃⵠⲆΔⲆⲆ, 203, ⲆⲆⲆ],
		[1, "t", ΔⲆΔⲆ, 20, 200, 0],
		[ⵠⲆⲆ, "t", 4, 12, 194, 0],
		[ⵠⲆⲆ, "t", ᐃᐃⵠⵠ, ⵠⲆᐃΔⲆ, 205, ΔΔᐃ],
		[ᐃⵠ, "t", 5, 29, 200, ΔⲆⵠ],
		[1, "t", 3, 28, 201, 0],
		[1, "s", 2, 25, 199, 1],
		[ᐃⵠⵠ, "s", 1, 22, 204, 1],
		[1, "g", ⵠΔⲆΔ, 25, 205, ⵠⵠⲆ],
		[1, "b", 1, 27, 216, ⲆⵠⲆ],
		[ᐃⵠⵠ, "s", 1, 25, 217, ⵠⲆⲆ],
		[ΔⲆᐃ, "s", 1, 33, 217, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", 2, 35, 215, ⵠⲆⲆ],
		[ᐃⵠ, "s", Δⵠⵠ, 32, 221, ᐃⵠ],
		[ᐃⵠ, "t", 2, 31, 222, ΔⲆⵠ],
		[ΔⲆᐃ, "t", 4, 26, 221, 0],
		[1, "b", 3, 27, 222, ⲆΔᐃ],
		[1, "b", 0, ΔΔΔⲆⲆΔᐃ, 217, ΔΔᐃ],
		[1, "t", ⵠΔⵠⲆ, ΔⵠⵠⵠⵠⵠΔ, 216, 0],
		[ᐃⵠⵠ, "t", ΔⲆΔⲆ, ⵠᐃⵠⲆΔⲆⲆ, 215, ⲆΔᐃ],
		[ᐃⵠⵠ, "t", ⲆᐃᐃΔ, 30, 213, ΔⲆⵠ],
		[ᐃⵠ, "t", Δᐃⵠⵠ, 24, 208, 0],
		[ᐃⵠ, "s", 1, 12, 216, ΔⲆᐃ],
		[ΔⲆᐃ, "s", ⵠᐃⵠΔ, ᐃΔᐃⲆᐃⵠᐃ, 210, ᐃⵠ],
		[1, "s", 2, 34, 223, ᐃⵠⵠ],
		[1, "b", ᐃⵠΔⲆ, 36, 218, ⲆⲆⲆ],
		[1, "t", ᐃΔΔΔ, 40, 206, ⲆΔᐃ],
		[ⵠⲆⲆ, "t", 5, 35, 203, 0],
		[ΔⲆᐃ, "t", ⲆⵠⵠΔ, 39, 206, 0],
		[ⵠⵠⲆ, "b", ᐃⵠⵠ, 34, 204, ⲆⲆⲆ],
		[1, "s", 1, 33, 206, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", ΔⲆᐃ, 42, 203, ⵠⲆⲆ],
		[ⵠⲆⲆ, "s", 0, 47, 196, 1],
		[ΔⲆᐃ, "b", 2, 40, 196, 0],
		[1, "t", 4, 39, 197, 0],
		[1, "t", ⲆΔᐃΔ, 44, 187, ⲆⲆⲆ],
		[1, "b", 1, 46, 181, Δⵠⵠ],
		[ⵠⵠⲆ, "t", 2, 47, 182, 0],
		[ᐃⵠ, "b", 0, 57, 182, 0],
		[1, "b", 3, 56, 183, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ᐃΔΔΔ, 55, 184, ᐃⵠΔ],
		[1, "t", 5, 62, 195, 0],
		[1, "s", ΔⲆᐃ, 51, 185, ΔⲆᐃ],
		[ⵠⵠⲆ, "s", 2, 62, 180, 1],
		[ΔⲆᐃ, "s", ⵠΔⵠᐃ, 61, 188, ⵠⲆⲆ],
		[ᐃⵠⵠ, "s", ᐃⵠⵠ, 61, 189, 1],
		[1, "s", 2, 48, 195, ⵠⵠⲆ],
		[ᐃⵠⵠ, "b", 1, 51, 199, ΔΔᐃ],
		[ᐃⵠ, "t", 2, 52, 199, 0],
		[ᐃⵠⵠ, "t", ⵠΔⵠⲆ, 56, 204, 0],
		[1, "t", ⵠᐃᐃⲆ, 57, 204, 0],
		[1, "t", ᐃΔΔΔ, 51, 204, 0],
		[ΔⲆᐃ, "s", 1, 52, 205, 1],
		[1, "s", ᐃⵠΔⲆ, 57, 200, ⵠⲆⲆ],
		[1, "s", 1, 56, 199, ᐃⵠⵠ],
		[1, "b", Δⵠⵠ, 55, 192, ⲆⲆⲆ],
		[1, "t", ⵠΔⵠⲆ, 56, 193, 0],
		[1, "t", ΔⲆΔⲆ, 50, 190, ΔⲆⵠ],
		[ⵠⵠⲆ, "b", ᐃⵠⵠ, 76, 188, ΔⲆⵠ],
		[1, "t", ⲆⲆⵠΔ, 75, 188, ΔΔᐃ],
		[1, "t", 2, 73, 192, 0],
		[ⵠⵠⲆ, "t", ᐃΔΔΔ, 72, 191, ⲆΔᐃ],
		[ᐃⵠⵠ, "t", 5, 78, 193, 0],
		[ᐃⵠ, "b", 0, 79, 192, ΔΔᐃ],
		[1, "s", ⵠᐃⵠΔ, 79, 190, 1],
		[1, "s", 1, 74, 194, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", ΔⲆᐃ, 72, 187, 1],
		[1, "s", 0, 74, 183, ΔⲆᐃ],
		[ⵠⵠⲆ, "s", ⵠⲆⲆ, 75, 183, 1],
		[1, "t", ΔⲆⲆᐃ, 69, 181, 0],
		[1, "t", ΔⲆΔⲆ, 70, 182, ΔΔᐃ],
		[1, "t", ᐃᐃⵠⵠ, 69, 180, ⲆⲆⲆ],
		[ⵠⵠⲆ, "b", 1, 65, 189, 0],
		[ᐃⵠⵠ, "b", ⵠΔⲆΔ, 66, 189, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", 3, 64, 188, ⲆΔᐃ],
		[1, "t", 4, 67, 192, 0],
		[ᐃⵠⵠ, "b", 2, 85, 183, ⲆⲆⲆ],
		[1, "t", 1, 84, 184, ΔΔᐃ],
		[1, "t", 4, 81, 180, 0],
		[ᐃⵠ, "t", ᐃᐃⵠⵠ, 89, 180, 0],
		[ᐃⵠⵠ, "t", ΔⲆⵠ, 90, 188, ᐃⵠΔ],
		[1, "t", ⵠⲆⲆΔ, 89, 190, ⲆⲆⲆ],
		[1, "s", 1, 87, 187, 1],
		[ⵠⵠⲆ, "s", 2, 87, 197, 1],
		[1, "b", ᐃⵠⵠ, 84, 200, ⲆΔᐃ],
		[1, "t", 2, 83, 201, ᐃⵠΔ],
		[1, "t", ᐃΔᐃΔ, 87, 207, 0],
		[1, "s", ⵠΔⲆΔ, 79, 202, ΔⲆᐃ],
		[1, "s", ᐃⵠⵠ, 80, 203, 1],
		[ⵠⵠⲆ, "t", 0, 71, 200, 0],
		[1, "b", 2, 72, 201, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", ⲆⲆⵠΔ, 65, 205, Δⵠⵠ],
		[1, "t", ᐃⵠ, 66, 206, ⲆⵠⲆ],
		[1, "t", 4, 63, 209, 0],
		[ᐃⵠ, "t", 5, 73, 203, 0],
		[ᐃⵠⵠ, "s", ⲆⵠⲆ, 70, 207, ΔⲆᐃ],
		[1, "s", ᐃⵠⵠ, 71, 206, ᐃⵠ],
		[1, "s", ⵠⵠⲆᐃ, 68, 199, ᐃⵠ],
		[1, "s", ᐃⵠⵠ, 64, 213, 1],
		[1, "t", Δⵠⵠ, 85, 213, 0],
		[1, "b", ᐃⵠΔⲆ, 84, 212, ΔⲆⵠ],
		[1, "t", ⵠΔⵠⲆ, 77, 209, ⲆⲆⲆ],
		[1, "t", ᐃΔⲆΔ, 83, 216, ⲆⵠⲆ],
		[ᐃⵠ, "t", 4, 73, 209, ΔⲆⵠ],
		[ⵠⵠⲆ, "b", ᐃⵠΔ, 86, 222, ⲆⵠⲆ],
		[1, "b", ΔⲆΔⵠ, 87, 221, 0],
		[1, "s", 1, 80, 214, 1],
		[ᐃⵠ, "s", 2, 87, 216, ᐃⵠ],
		[1, "s", 2, 84, 224, ᐃⵠ],
		[ⵠⵠⲆ, "s", ⵠⲆⲆ, 77, 227, 1],
		[1, "t", 1, 74, 222, ⲆΔᐃ],
		[ᐃⵠⵠ, "b", ⵠⲆⲆ, 69, 218, 0],
		[ΔⲆᐃ, "b", ⵠⵠⲆᐃ, 75, 219, 0],
		[ᐃⵠⵠ, "s", ⵠⵠⲆᐃ, 74, 218, 1],
		[ⵠⲆⲆ, "s", 1, 69, 223, ΔⲆᐃ],
		[ⵠⵠⲆ, "s", ⵠⵠⲆ, 77, 221, ΔⲆᐃ],
		[ΔⲆᐃ, "b", 1, 72, 211, ⲆⲆⲆ],
		[ΔⲆᐃ, "b", ⵠⲆⲆ, 85, 232, ⲆⲆⲆ],
		[1, "t", 2, 84, 233, 0],
		[1, "t", ⵠⵠⲆᐃ, 78, 238, ΔⲆⵠ],
		[ᐃⵠ, "b", 1, 77, 237, 0],
		[ᐃⵠⵠ, "t", ᐃᐃⵠⵠ, 87, 236, ⲆⲆⲆ],
		[ᐃⵠ, "t", Δᐃⵠⵠ, 76, 229, 0],
		[1, "b", ᐃᐃΔⵠ, 74, 241, 0],
		[1, "s", Δⵠⵠ, 73, 242, ᐃⵠⵠ],
		[ᐃⵠ, "s", 0, 81, 238, ⵠⵠⲆ],
		[ⵠⵠⲆ, "s", 1, 82, 237, ᐃⵠ],
		[ᐃⵠⵠ, "s", ᐃᐃΔⵠ, 72, 237, 1],
		[1, "s", ⵠᐃⵠΔ, 78, 242, ᐃⵠ],
		[ᐃⵠⵠ, "b", 1, 66, 230, 0],
		[ⵠⵠⲆ, "b", 2, 62, 229, 0],
		[ᐃⵠⵠ, "t", 4, 67, 231, ᐃⵠΔ],
		[ΔⲆᐃ, "t", 4, 62, 228, 0],
		[1, "t", ΔⲆⲆΔ, 64, 233, 0],
		[ΔⲆᐃ, "t", 2, 65, 234, Δⵠⵠ],
		[ⵠⵠⲆ, "t", 2, 51, 220, ΔΔᐃ],
		[ⵠⵠⲆ, "t", ⵠⲆⲆ, 50, 218, ᐃⵠΔ],
		[1, "b", 1, 45, 223, 0],
		[1, "b", 2, 46, 224, 0],
		[1, "t", ⲆⲆΔΔ, 49, 218, 0],
		[1, "t", ᐃΔΔΔ, 47, 225, ⲆΔᐃ],
		[1, "s", 1, 50, 215, 1],
		[ΔⲆᐃ, "s", ΔⲆⲆᐃ, 51, 213, 1],
		[1, "s", ⲆⲆⵠΔ, 42, 227, 1],
		[ⵠⵠⲆ, "s", 1, 44, 227, 1],
		[ΔⲆᐃ, "s", 1, 60, 230, ΔⲆᐃ],
		[ᐃⵠⵠ, "s", 2, 59, 231, 1],
		[1, "b", 1, 85, 252, 0],
		[1, "t", 2, 84, 251, ΔΔᐃ],
		[ΔⲆᐃ, "t", ⵠΔⲆΔ, 74, 250, ΔⲆⵠ],
		[ⵠⲆⲆ, "t", ΔⲆⵠ, 75, 251, ⲆⵠⲆ],
		[1, "b", 0, 83, 246, 0],
		[1, "t", ΔⵠⵠΔ, 82, 247, 0],
		[ⵠⲆⲆ, "t", 4, 81, 259, 0],
		[ⵠⲆⲆ, "t", ⲆⵠⲆⲆ, 69, 249, 0],
		[ⵠⵠⲆ, "t", 5, 87, 246, ⲆⲆⲆ],
		[ᐃⵠ, "t", 5, 75, 252, ⲆΔᐃ],
		[1, "s", ⵠⵠⲆ, 79, 257, 1],
		[1, "s", ⲆⲆⵠΔ, 78, 249, ⵠⵠⲆ],
		[1, "s", ΔⲆⲆᐃ, 80, 258, ᐃⵠⵠ],
		[1, "s", ᐃⵠⵠ, 88, 254, 1],
		[1, "s", 1, 85, 264, ᐃⵠ],
		[ⵠⵠⲆ, "s", 2, 89, 263, ⵠⵠⲆ],
		[1, "s", ᐃᐃΔⵠ, 87, 269, ᐃⵠ],
		[ΔⲆᐃ, "s", 0, 84, 268, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", 2, 76, 267, 1],
		[1, "s", 1, 66, 261, 1],
		[1, "s", ΔⲆᐃ, 87, 274, 1],
		[ⵠⵠⲆ, "s", ⵠⲆⲆ, 76, 263, ᐃⵠⵠ],
		[1, "s", 1, 59, 251, ΔⲆᐃ],
		[ᐃⵠ, "s", ᐃⵠΔ, 59, 252, 1],
		[1, "t", ⵠΔⵠᐃ, 86, 265, ⲆΔᐃ],
		[ᐃⵠ, "t", Δⵠⵠ, 78, 270, 0],
		[ⵠⵠⲆ, "t", 2, 79, 271, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 0, 77, 260, Δⵠⵠ],
		[ⵠⲆⲆ, "t", ⵠΔᐃⲆ, 78, 261, 0],
		[1, "b", 1, 71, 264, 0],
		[ⵠⲆⲆ, "b", ⵠⲆⲆ, 88, 269, ΔⲆⵠ],
		[ᐃⵠⵠ, "t", Δᐃⵠⵠ, 84, 264, ⲆⵠⲆ],
		[1, "t", 5, 79, 261, 0],
		[1, "t", 5, 72, 265, ΔⲆⵠ],
		[1, "t", ⲆᐃᐃΔ, 77, 270, 0],
		[1, "t", ⲆⲆⲆ, 87, 261, ᐃⵠΔ],
		[1, "t", 2, 86, 260, 0],
		[1, "t", ᐃΔᐃΔ, 84, 255, Δⵠⵠ],
		[1, "t", 4, 68, 255, 0],
		[ᐃⵠⵠ, "t", ΔⲆᐃ, 67, 254, 0],
		[ᐃⵠⵠ, "t", ᐃⵠΔⲆ, 65, 262, ⲆⵠⲆ],
		[1, "t", 1, 57, 260, 0],
		[ᐃⵠⵠ, "t", 2, 58, 259, ΔⲆⵠ],
		[ΔⲆᐃ, "b", 1, 63, 256, 0],
		[ⵠⲆⲆ, "b", ᐃⵠ, 52, 248, ⲆⵠⲆ],
		[1, "t", ⵠⵠⲆᐃ, 53, 248, 0],
		[ⵠⲆⲆ, "s", ᐃⵠⵠ, 50, 253, ⵠⵠⲆ],
		[ⵠⲆⲆ, "s", 2, 67, 263, 1],
		[ᐃⵠ, "s", 2, 52, 252, 1],
		[ⵠⵠⲆ, "s", ⵠⲆΔΔ, 71, 244, 1],
		[1, "b", ᐃⵠΔ, 57, 245, ⲆⵠⲆ],
		[ΔⲆᐃ, "t", 2, 58, 244, Δⵠⵠ],
		[1, "b", ᐃⵠ, 53, 237, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", 2, 54, 237, ΔΔᐃ],
		[ᐃⵠⵠ, "t", 2, 41, 238, 0],
		[1, "t", ⵠⵠⲆ, 42, 237, 0],
		[ⵠⵠⲆ, "t", 5, 57, 235, 0],
		[1, "t", ⲆΔⵠᐃ, 60, 246, ⲆⲆⲆ],
		[1, "t", ⲆᐃᐃΔ, 50, 252, ΔⲆⵠ],
		[1, "t", ᐃⵠ, 42, 248, ⲆⵠⲆ],
		[1, "b", 1, 43, 249, ⲆⵠⲆ],
		[1, "b", Δᐃᐃᐃ, 37, 243, Δⵠⵠ],
		[ΔⲆᐃ, "s", 0, 50, 236, ᐃⵠⵠ],
		[ᐃⵠ, "s", 2, 39, 247, ⵠⲆⲆ],
		[1, "s", ᐃⵠΔⲆ, 51, 235, 1],
		[1, "s", 2, 60, 243, 1],
		[ᐃⵠ, "s", ᐃᐃΔⵠ, 36, 240, ⵠⲆⲆ],
		[1, "s", ⵠΔⲆΔ, 43, 254, ⵠⵠⲆ],
		[ΔⲆᐃ, "s", 1, 42, 254, 1],
		[1, "t", ᐃⵠ, 38, 233, 0],
		[1, "t", 2, 35, 235, 0],
		[ΔⲆᐃ, "t", ᐃΔᐃΔ, 33, 228, 0],
		[1, "t", 4, 33, 245, 0],
		[1, "t", 4, 43, 235, 0],
		[1, "t", ⲆΔⵠᐃ, 45, 249, ⲆΔᐃ],
		[1, "t", 5, 41, 253, 0],
		[1, "b", ⵠⲆⲆ, ⵠᐃⵠⲆ, 227, 0],
		[1, "b", 1, 14, 240, Δⵠⵠ],
		[1, "t", 3, 21, 227, ΔΔᐃ],
		[ᐃⵠⵠ, "t", ΔⵠⵠΔ, 27, 234, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 3, ⵠⲆᐃΔⲆ, 241, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ⲆⵠⵠΔ, 12, 229, 0],
		[ⵠⲆⲆ, "t", ⵠᐃᐃⲆ, ⵠᐃⵠⲆⵠ, 224, 0],
		[ⵠⵠⲆ, "t", ⲆⲆΔΔ, ΔᐃᐃΔᐃ, 231, 0],
		[1, "t", 4, 22, 238, 0],
		[1, "t", Δⵠⵠⵠ, ⵠΔⲆᐃⲆᐃⵠ, 239, Δⵠⵠ],
		[1, "t", 1, 22, 243, 0],
		[1, "b", ⲆⲆⵠΔ, 23, 242, 0],
		[1, "s", 1, 23, 238, ΔⲆᐃ],
		[1, "s", ⵠⲆⲆ, 22, 228, 1],
		[1, "s", ᐃᐃΔⵠ, 24, 228, 1],
		[1, "s", ⵠᐃⵠΔ, 21, 236, 1],
		[1, "s", 0, ⲆⲆΔᐃⵠ, 228, 1],
		[1, "s", 0, 16, 242, 1],
		[ᐃⵠ, "s", 1, ⵠⲆⲆᐃⲆ, 244, 1],
		[1, "s", 1, 34, 236, ⵠⲆⲆ],
		[1, "t", 1, 26, 249, Δⵠⵠ],
		[1, "t", ᐃⵠⵠ, 22, ⲆⵠⲆⵠⵠⵠⲆ, ⲆⵠⲆ],
		[ᐃⵠ, "t", ⵠΔⵠᐃ, 23, 255, 0],
		[ᐃⵠⵠ, "b", ⵠⵠⲆ, 17, ⵠⲆⲆᐃⲆᐃΔ, 0],
		[1, "b", ΔⲆⲆᐃ, 18, ᐃΔⵠⲆΔᐃᐃ, 0],
		[1, "s", 0, 21, 252, ᐃⵠ],
		[1, "s", ΔⲆⲆᐃ, 20, 250, 1],
		[ᐃⵠⵠ, "s", ⵠⵠⲆᐃ, 23, 259, ᐃⵠ],
		[1, "s", 1, 13, 257, 1],
		[1, "t", 1, 31, 254, 0],
		[1, "t", ⵠΔⵠᐃ, 32, 254, 0],
		[ᐃⵠⵠ, "t", 4, 28, 254, 0],
		[ᐃⵠ, "t", ᐃΔⲆΔ, 34, 258, 0],
		[1, "t", ΔΔᐃ, 29, 260, ΔⲆⵠ],
		[1, "b", ⵠⲆΔΔ, 30, 261, 0],
		[ΔⲆᐃ, "t", ⲆⵠⲆ, 43, 262, ⲆΔᐃ],
		[1, "t", ΔⲆⲆᐃ, 42, 263, ⲆΔᐃ],
		[1, "t", 4, 46, 264, 0],
		[1, "b", ⵠⵠⲆ, 39, 265, 0],
		[1, "b", ⵠⵠⲆ, 58, 267, 0],
		[1, "t", 2, 57, 268, 0],
		[1, "t", ΔⲆΔⲆ, 62, 270, 0],
		[ᐃⵠⵠ, "t", ⲆΔⵠᐃ, 52, 273, 0],
		[1, "s", 1, 52, 269, ⵠⲆⲆ],
		[1, "s", 1, 41, 272, ᐃⵠⵠ],
		[ΔⲆᐃ, "s", 2, 41, 274, 1],
		[ⵠⵠⲆ, "t", ⲆⲆⵠΔ, 42, 268, 0],
		[ⵠⲆⲆ, "t", ΔⲆⵠ, 43, 268, 0],
		[1, "b", ⵠⵠⲆ, 46, 272, 0],
		[1, "b", ᐃⵠ, 14, 265, Δⵠⵠ],
		[1, "t", 2, 15, 266, ᐃⵠΔ],
		[1, "t", 4, 19, 264, 0],
		[ᐃⵠ, "t", Δⵠⵠⵠ, 29, 263, Δⵠⵠ],
		[ᐃⵠ, "t", 4, 11, 269, 0],
		[1, "t", ⵠⲆⲆ, 29, 271, ⲆΔᐃ],
		[1, "b", ᐃᐃΔⵠ, 28, 272, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", ⲆⲆⵠΔ, 24, 267, 0],
		[ⵠⵠⲆ, "t", 2, 20, 279, ⲆⵠⲆ],
		[ᐃⵠⵠ, "t", 0, ΔⵠⲆⵠⵠ, 278, 0],
		[1, "t", ⵠΔᐃⲆ, 13, 278, ⲆⲆⲆ],
		[1, "b", 0, 21, 284, 0],
		[ᐃⵠⵠ, "b", 0, ⵠΔΔᐃΔ, 289, ⲆΔᐃ],
		[ᐃⵠ, "t", ⵠᐃⵠΔ, ⵠⵠΔⵠ, 283, ΔΔᐃ],
		[ᐃⵠⵠ, "t", ⵠᐃⵠΔ, ᐃᐃᐃΔΔ, 290, ΔΔᐃ],
		[1, "t", ᐃΔᐃΔ, 19, 283, 0],
		[ᐃⵠ, "t", 4, ⵠⵠᐃᐃ, 290, ΔΔᐃ],
		[ⵠⲆⲆ, "s", ᐃⵠ, ⲆⵠᐃΔᐃ, 285, 1],
		[ᐃⵠⵠ, "s", ⵠⵠⲆ, 24, 288, 1],
		[1, "s", ⵠΔⲆΔ, 26, 287, 1],
		[1, "s", ΔⲆⲆᐃ, 16, 278, ᐃⵠ],
		[1, "s", ⵠⵠⲆ, 21, 268, 1],
		[ΔⲆᐃ, "s", 2, ⵠⲆᐃᐃⲆ, 268, 1],
		[1, "t", 0, ⵠⲆⵠⲆΔ, 294, ΔΔᐃ],
		[ⵠⲆⲆ, "b", ᐃⵠ, 13, 295, ΔⲆⵠ],
		[ᐃⵠⵠ, "t", ⵠⲆⲆΔ, ⲆⲆΔᐃⵠ, 291, ⲆⲆⲆ],
		[ΔⲆᐃ, "t", ⵠⲆⲆΔ, ⲆᐃᐃᐃⲆ, 299, ΔΔᐃ],
		[1, "t", 4, 11, 287, ᐃⵠΔ],
		[1, "t", ᐃΔᐃΔ, 17, 298, 0],
		[1, "t", ΔⲆᐃ, 27, 294, 0],
		[1, "b", ΔⲆⲆᐃ, 26, 295, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", ⵠΔᐃⲆ, 33, 297, Δⵠⵠ],
		[ΔⲆᐃ, "b", 1, 48, 278, 0],
		[1, "b", 0, 46, 280, ⲆⲆⲆ],
		[1, "b", 2, 50, 280, ΔΔᐃ],
		[1, "t", 0, 44, 282, 0],
		[1, "b", 1, 49, 283, 0],
		[ⵠⲆⲆ, "b", Δⵠⵠ, 51, 278, 0],
		[1, "b", ⵠΔᐃⲆ, 50, 279, ᐃⵠΔ],
		[1, "b", 3, 44, 284, ᐃⵠΔ],
		[ⵠⲆⲆ, "b", ΔΔᐃ, 47, 284, ⲆⵠⲆ],
		[1, "b", ⵠᐃⵠΔ, 42, 283, 0],
		[ᐃⵠⵠ, "t", 4, 51, 277, 0],
		[1, "b", 1, 44, 286, 0],
		[ᐃⵠⵠ, "b", ⵠᐃⵠΔ, 46, 286, 0],
		[ⵠⵠⲆ, "b", 1, 42, 285, 0],
		[1, "b", 3, 41, 286, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", ⲆᐃᐃΔ, 42, 287, 0],
		[ΔⲆᐃ, "b", 1, 42, 278, 0],
		[ᐃⵠ, "b", ⵠΔⲆΔ, 43, 279, ΔΔᐃ],
		[1, "b", Δⵠⵠ, 40, 280, ᐃⵠΔ],
		[1, "t", 4, 39, 283, 0],
		[1, "t", ᐃΔᐃΔ, 39, 279, 0],
		[ΔⲆᐃ, "t", ⲆΔᐃΔ, 43, 277, ⲆⲆⲆ],
		[ᐃⵠⵠ, "t", 5, 47, 287, 0],
		[ᐃⵠ, "t", ᐃΔⲆΔ, 46, 277, 0],
		[1, "t", 4, 45, 290, ᐃⵠΔ],
		[1, "t", ᐃΔⲆΔ, 36, 285, ΔΔᐃ],
		[ᐃⵠ, "t", Δᐃᐃᐃ, 35, 284, 0],
		[ᐃⵠ, "t", 3, 36, 272, ⲆⲆⲆ],
		[ΔⲆᐃ, "t", 4, 35, 271, 0],
		[ᐃⵠ, "t", ⵠⵠⲆ, 29, 279, 0],
		[ⵠⵠⲆ, "b", ⵠⵠⲆ, 32, 277, 0],
		[1, "t", ΔⵠⵠΔ, 31, 278, 0],
		[ᐃⵠⵠ, "b", 2, 28, 280, ⲆΔᐃ],
		[1, "t", ᐃΔΔΔ, 29, 286, ΔΔᐃ],
		[1, "t", 5, 28, 275, ⲆⵠⲆ],
		[1, "t", ΔⲆΔⵠ, 37, 292, 0],
		[1, "b", ᐃⵠ, 36, 291, ⲆΔᐃ],
		[1, "b", ⲆⵠⲆ, 34, 298, 0],
		[ᐃⵠⵠ, "t", ⵠᐃᐃⲆ, 31, 292, 0],
		[ⵠⲆⲆ, "t", 4, 46, 295, ⲆΔᐃ],
		[1, "t", ⲆⲆΔΔ, 59, 287, ΔΔᐃ],
		[1, "b", 1, 58, 286, ᐃⵠΔ],
		[1, "s", ᐃⵠ, 68, 284, 1],
		[ⵠⲆⲆ, "s", 2, 70, 286, ΔⲆᐃ],
		[ΔⲆᐃ, "s", Δⵠⵠ, 67, 284, 1],
		[1, "t", 3, 66, 283, 0],
		[ΔⲆᐃ, "t", 1, 65, 282, 0],
		[1, "b", 1, 64, 288, 0],
		[1, "t", ΔⵠⵠΔ, 60, 293, 0],
		[ΔⲆᐃ, "t", 1, 61, 294, 0],
		[ΔⲆᐃ, "b", 1, 76, 294, ΔΔᐃ],
		[ᐃⵠ, "t", ⲆⲆᐃⵠ, 75, 295, 0],
		[1, "t", ᐃᐃⵠⵠ, 56, 293, ⲆΔᐃ],
		[1, "t", ⲆΔᐃΔ, 59, 281, Δⵠⵠ],
		[1, "t", ⲆⲆᐃⵠ, 67, 291, Δⵠⵠ],
		[ⵠⵠⲆ, "b", ᐃⵠΔ, 88, 293, 0],
		[1, "t", 2, 89, 292, 0],
		[1, "t", ⵠΔⲆΔ, 85, 286, ΔⲆⵠ],
		[ΔⲆᐃ, "t", 4, 88, 289, ΔⲆⵠ],
		[1, "t", 4, 79, 287, 0],
		[1, "b", ⵠⵠⲆ, 84, 285, 0],
		[1, "t", 3, 75, 284, ΔΔᐃ],
		[ⵠⵠⲆ, "b", ⲆⵠⲆ, 75, 278, 0],
		[ΔⲆᐃ, "t", ΔⵠⵠΔ, 74, 277, 0],
		[1, "t", 4, 81, 276, ⲆΔᐃ],
		[1, "t", ⵠᐃⵠΔ, 65, 276, 0],
		[ⵠⵠⲆ, "b", ⵠⵠⲆ, 66, 275, 0],
		[1, "g", ᐃⵠΔ, 45, 261, 1],
		[ᐃⵠⵠ, "g", 1, 39, 258, 1],
		[ΔⲆᐃ, "g", 0, 35, 250, 1],
		[1, "g", 2, 22, 247, ᐃⵠⵠ],
		[1, "g", 2, 27, 227, ᐃⵠⵠ],
		[ᐃⵠ, "g", ⲆⲆⵠΔ, 63, 218, 1],
		[ᐃⵠ, "g", ⵠⲆⲆ, 56, 224, ᐃⵠⵠ],
		[1, "g", 0, 46, 231, 1],
		[ᐃⵠⵠ, "g", ⵠⲆⲆ, 65, 240, ᐃⵠⵠ],
		[ᐃⵠ, "g", ⵠΔⲆΔ, 67, 238, ᐃⵠⵠ],
		[ᐃⵠ, "g", 2, 79, 232, ᐃⵠ],
		[1, "g", ⵠΔⵠᐃ, 72, 253, ᐃⵠⵠ],
		[ⵠⵠⲆ, "g", ᐃᐃΔⵠ, 62, 264, ᐃⵠⵠ],
		[ᐃⵠ, "g", 2, 28, 267, ᐃⵠⵠ],
		[ⵠⲆⲆ, "g", 2, 58, 274, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], ⵠᐃⵠΔ, 14, 182, 0],
		[1, ⵠ[ⵠΔΔΔ], ⵠᐃⵠΔ, 24, 182, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 0, 11, 185, ⲆΔᐃ],
		[1, ⵠ[20], ⲆΔᐃ, 14, 194, 0],
		[ᐃⵠ, ⵠ[20], ⵠⲆⲆ, 25, 196, ⲆⵠⲆ],
		[1, ⵠ[20], 3, 31, 183, Δⵠⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], 0, 38, 181, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 2, 45, 186, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], ᐃⵠⵠ, 38, 191, 0],
		[1, ⵠ[20], 0, 56, 181, 0],
		[1, ⵠ[20], ᐃⵠ, 68, 182, 0],
		[1, ⵠ[20], ⵠΔⵠᐃ, 80, 181, ΔⲆⵠ],
		[1, ⵠ[ΔⵠΔⲆ], ⵠⲆⵠⵠ, 86, 187, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], Δⵠⵠ, 84, 193, 0],
		[ⵠⲆⲆ, ⵠ[20], 1, 82, 201, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[20], ΔⲆⲆᐃ, 64, 191, 0],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], ⵠΔⲆΔ, 72, 200, ᐃⵠΔ],
		[1, ⵠ[20], ΔⵠⵠΔ, 64, 201, 0],
		[1, ⵠ[20], ⵠΔⲆΔ, 76, 209, 0],
		[1, ⵠ[20], ⵠⲆⲆΔ, 71, 212, 0],
		[ΔⲆᐃ, ⵠ[20], 1, 86, 214, 0],
		[ⵠⵠⲆ, ⵠ[20], ᐃⵠΔ, 57, 208, 0],
		[ⵠⲆⲆ, ⵠ[20], ⲆⲆⲆ, 41, 203, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 1, 15, 206, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], ⵠⲆΔΔ, 25, 209, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], ⲆⵠⵠΔ, ᐃᐃᐃⲆⲆ, 218, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], 3, 11, 227, 0],
		[1, ⵠ[20], 0, 22, 229, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 1, 15, 239, 0],
		[1, ⵠ[20], 2, 24, 238, ΔΔᐃ],
		[1, ⵠ[20], 3, 22, 246, 0],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], ⵠⲆⵠⵠ, 10, 253, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 1, 18, 258, ΔⲆⵠ],
		[1, ⵠ[20], 1, 28, 261, 0],
		[ⵠⲆⲆ, ⵠ[20], ᐃⵠ, ⵠΔΔΔΔΔᐃ, 267, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 0, 24, 268, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 0, ⲆΔΔᐃᐃ, 278, ΔΔᐃ],
		[1, ⵠ[20], 2, 21, 279, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 2, 30, 272, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 2, 29, 281, 0],
		[1, ⵠ[ΔΔⵠΔ], 2, 15, 284, 0],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], 3, 12, 291, 0],
		[ΔⲆᐃ, ⵠ[20], ⲆⵠⵠΔ, 30, 287, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[20], ⵠΔⵠⲆ, 27, 293, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], ⲆⵠⲆ, 25, 296, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], ᐃⵠΔ, ᐃΔᐃⵠΔ, 298, 0],
		[1, ⵠ[ⵠⲆΔⵠ], ΔΔᐃ, ⲆⵠΔᐃⲆ, 286, 0],
		[ⵠⵠⲆ, ⵠ[20], ᐃⵠΔⲆ, 36, 299, 0],
		[1, ⵠ[ΔΔⵠΔ], ΔⲆⲆᐃ, 37, 280, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠᐃᐃ], 3, 38, 291, 0],
		[1, ⵠ[ⵠΔΔΔ], ⵠⲆⲆ, 48, 287, ΔⲆⵠ],
		[1, ⵠ[20], ᐃⵠⵠ, 46, 277, Δⵠⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], ᐃⵠⵠ, 53, 278, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⵠⲆ], 3, 48, 295, 0],
		[ᐃⵠⵠ, ⵠ[20], Δⵠⵠ, 57, 294, 0],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 1, 65, 290, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 1, 84, 292, ⲆⵠⲆ],
		[1, ⵠ[ⵠⵠΔⵠ], ᐃᐃΔⵠ, 77, 295, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], ⵠΔⲆΔ, 84, 287, 0],
		[ᐃⵠⵠ, ⵠ[20], ⲆⲆⲆ, 74, 279, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔΔΔ], ⵠΔⵠⲆ, 65, 274, 0],
		[ⵠⵠⲆ, ⵠ[20], 2, 71, 267, 0],
		[ⵠⲆⲆ, ⵠ[20], ⵠΔⲆΔ, 65, 261, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 2, 47, 264, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], ⵠⲆⲆΔ, 47, 258, ⲆⲆⲆ],
		[1, ⵠ[20], ΔⲆΔⵠ, 53, 251, 0],
		[1, ⵠ[ⵠΔΔΔ], ⵠⲆΔΔ, 40, 253, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 0, 35, 244, ᐃⵠΔ],
		[1, ⵠ[ⵠᐃⲆΔ], ⲆΔᐃ, 37, 233, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], 3, 44, 226, 0],
		[1, ⵠ[ΔⲆΔᐃ], 2, 37, 219, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], ⵠΔⵠᐃ, 54, 234, Δⵠⵠ],
		[1, ⵠ[ⵠΔΔΔ], ᐃⵠⵠ, 66, 234, 0],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 2, 65, 241, ⲆⵠⲆ],
		[1, ⵠ[ⵠⵠΔⵠ], 0, 68, 249, 0],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], ⵠΔᐃⲆ, 78, 257, 0],
		[ᐃⵠⵠ, ⵠ[20], ⵠΔⵠᐃ, 86, 253, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⵠᐃᐃ], ⵠΔⲆΔ, 83, 245, 0],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 1, 82, 238, 0],
		[1, ⵠ[ⵠΔΔΔ], 3, 76, 235, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠΔⵠ], 2, 86, 232, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], ⲆⲆⲆ, 86, 224, ⲆΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], ⵠΔⲆΔ, 76, 226, 0],
		[ΔⲆᐃ, ⵠ[20], 2, 61, 228, 0],
		[1, ⵠ[20], 2, 58, 217, ᐃⵠΔ],
		[1, ⵠ[ΔΔⵠΔ], 0, 49, 217, 0],
		[1, ⵠ[ⵠⵠΔⵠ], ΔᐃⵠᐃⲆ, 11, 179, 0],
		[1, ⵠ[20], ᐃᐃᐃⲆ, 17, 180, 0],
		[ᐃⵠⵠ, ⵠ[20], 22, ⲆⵠᐃᐃⲆ, 181, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], 19, 30, 184, 0],
		[ⵠⲆⲆ, ⵠ[20], ΔⲆⲆⵠⵠ, 27, 187, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⵠΔⵠ], 19, 30, 195, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 19, ⵠᐃⵠᐃⲆᐃΔ, 192, ΔⲆⵠ],
		[1, ⵠ[ΔⲆΔᐃ], 19, 44, 182, 0],
		[1, ⵠ[20], ΔⵠⲆⵠⵠ, 49, 182, 0],
		[1, ⵠ[20], ΔᐃⵠΔΔ, 54, 182, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], ΔⵠⲆⵠⵠ, 59, 183, 0],
		[ΔⲆᐃ, ⵠ[20], ΔᐃⵠΔΔ, 56, 186, 0],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 19, 46, 188, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], ⲆΔΔⲆΔ, 58, 193, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 19, 67, 187, 0],
		[ᐃⵠ, ⵠ[20], ⲆΔᐃΔⲆ, 65, 192, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 19, 71, 180, 0],
		[1, ⵠ[20], ⲆΔᐃΔⲆ, 78, 187, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], ⲆΔΔⲆΔ, 80, 194, 0],
		[1, ⵠ[20], 19, 72, 193, 0],
		[ᐃⵠⵠ, ⵠ[20], 19, 82, 182, ᐃⵠΔ],
		[1, ⵠ[20], ΔⲆⲆⵠⵠ, 88, 185, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 87, 189, 0],
		[1, ⵠ[ⵠΔⲆⵠ], ᐃᐃᐃΔΔ, 86, 197, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[20], 19, 85, 203, 0],
		[ᐃⵠ, ⵠ[20], 19, 74, 200, 0],
		[ΔⲆᐃ, ⵠ[20], ΔⲆᐃⵠΔ, 70, 202, 0],
		[1, ⵠ[ⵠⵠΔⵠ], ⵠⲆᐃᐃⲆ, 83, 199, ⲆⲆⲆ],
		[1, ⵠ[ⵠᐃⲆΔ], ᐃᐃᐃΔΔ, 86, 208, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠΔⲆⵠ], 19, 84, 214, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 83, 211, 0],
		[ⵠⵠⲆ, ⵠ[20], ΔⲆᐃⵠΔ, 84, 217, 0],
		[ⵠⲆⲆ, ⵠ[20], 19, 77, 210, 0],
		[ᐃⵠⵠ, ⵠ[20], 19, 71, 210, 0],
		[ⵠⵠⲆ, ⵠ[20], 19, 73, 213, 0],
		[ᐃⵠⵠ, ⵠ[ΔⵠΔⲆ], 19, 66, 207, 0],
		[ᐃⵠ, ⵠ[ΔⵠΔⲆ], ⵠⲆᐃᐃⲆ, 66, 204, ⲆⵠⲆ],
		[1, ⵠ[ᐃᐃᐃⲆ], 19, 62, 209, 0],
		[ⵠⲆⲆ, ⵠ[20], 19, 63, 201, 0],
		[1, ⵠ[20], 19, 56, 205, 0],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], ΔⲆⲆⵠⵠ, 49, 199, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], ⲆΔᐃΔⲆ, 50, 205, 0],
		[1, ⵠ[ΔΔⵠΔ], ΔᐃⵠΔΔ, 40, 197, ΔⲆⵠ],
		[1, ⵠ[20], ⵠΔΔᐃᐃ, 38, 198, ᐃⵠΔ],
		[1, ⵠ[ⵠΔⲆⵠ], ⵠⲆⲆⲆⵠ, 40, 208, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], ⵠⲆⲆⲆⵠ, 36, 204, 0],
		[ⵠⲆⲆ, ⵠ[ⲆᐃΔⵠ], ⵠΔΔᐃᐃ, 33, 204, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 19, 29, 202, 0],
		[1, ⵠ[ΔⵠΔⲆ], 19, 27, 200, 0],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 19, 26, 193, ᐃⵠΔ],
		[1, ⵠ[20], ΔⲆᐃⵠΔ, ΔΔⵠⲆΔ, 201, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], ΔᐃⵠᐃⲆ, ⵠΔΔΔ, 199, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], ⵠⲆᐃᐃⲆ, ⲆⵠⲆᐃᐃ, 196, ⲆⵠⲆ],
		[1, ⵠ[ⵠΔⲆⵠ], ⲆΔᐃΔⲆ, ᐃⵠᐃᐃΔ, 204, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 19, ᐃᐃⲆΔⲆ, 201, 0],
		[1, ⵠ[20], 19, 23, 208, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 19, 31, 214, 0],
		[ⵠⲆⲆ, ⵠ[20], ᐃᐃᐃΔΔ, 26, 215, 0],
		[ΔⲆᐃ, ⵠ[ΔⵠΔⲆ], 19, 36, 217, 0],
		[ᐃⵠⵠ, ⵠ[20], ΔᐃⵠᐃⲆ, 32, 223, 0],
		[1, ⵠ[20], ΔⲆᐃⵠΔ, 26, 223, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 18, 218, ⲆⲆⲆ],
		[1, ⵠ[20], 19, 15, 215, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], 19, 17, 212, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 19, ⵠⲆⲆᐃⲆ, 224, 0],
		[1, ⵠ[20], 19, ⲆΔΔⲆΔ, 229, 0],
		[1, ⵠ[ⵠⵠΔⵠ], ΔᐃⵠΔΔ, 10, 230, ⲆⵠⲆ],
		[1, ⵠ[20], 19, 22, 240, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], 19, 13, 238, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], ΔⲆᐃⵠΔ, ⵠⲆⲆⵠⲆᐃⵠ, 243, 0],
		[1, ⵠ[ΔΔⵠΔ], ΔⵠⲆⵠⵠ, 24, 244, 0],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 19, 24, 250, ΔΔᐃ],
		[1, ⵠ[ΔΔⵠΔ], ⲆΔΔⲆΔ, 28, 253, 0],
		[1, ⵠ[ΔⲆΔᐃ], ΔᐃⵠᐃⲆ, 33, ᐃⵠⵠᐃⲆᐃⵠ, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[20], 19, 34, 260, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], 19, 31, 260, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], ΔⲆᐃⵠΔ, 38, 267, ⲆⲆⲆ],
		[1, ⵠ[20], ⵠΔΔᐃᐃ, 44, 264, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 19, 43, 261, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔⲆⵠ], ΔᐃⵠᐃⲆ, 16, 257, ᐃⵠΔ],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 22, 258, ΔⲆⵠ],
		[1, ⵠ[20], ⲆΔᐃΔⲆ, 12, 253, 0],
		[1, ⵠ[20], ΔᐃⵠᐃⲆ, 8, 242, 0],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, ⵠⵠΔⵠΔ, 255, ⲆΔᐃ],
		[1, ⵠ[ⵠᐃⵠⲆ], 19, 15, 264, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 20, 265, 0],
		[1, ⵠ[20], 19, ⵠⲆⵠⲆΔ, 271, 0],
		[ⵠⵠⲆ, ⵠ[20], ΔⲆⲆⵠⵠ, 8, 272, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], ⵠⲆᐃᐃⲆ, ΔΔⲆΔΔ, 277, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 19, 21, 277, ⲆΔᐃ],
		[1, ⵠ[20], 19, 21, 281, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], ᐃᐃᐃΔΔ, 27, 282, 0],
		[1, ⵠ[ΔΔⵠΔ], 19, 29, 278, Δⵠⵠ],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 19, 29, 273, ⲆΔᐃ],
		[1, ⵠ[ᐃⵠᐃΔ], ⲆΔΔⲆΔ, 36, 271, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 19, ⵠⵠΔⵠΔ, 278, ⲆΔᐃ],
		[1, ⵠ[20], ΔᐃⵠΔΔ, 11, 286, 0],
		[ⵠⲆⲆ, ⵠ[20], ⲆΔᐃΔⲆ, 17, 291, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⲆⲆⵠ, ΔⵠᐃΔΔ, 294, ⲆⵠⲆ],
		[1, ⵠ[20], 19, 8, 292, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 19, ΔΔᐃⲆᐃ, 300, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔΔΔ], 19, 18, 298, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], ⵠⲆⲆⲆⵠ, 16, 301, ⲆⵠⲆ],
		[1, ⵠ[20], ⲆΔᐃΔⲆ, 27, 296, Δⵠⵠ],
		[1, ⵠ[ⵠᐃⲆΔ], 19, 25, 292, ⲆⵠⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], ⵠⲆᐃᐃⲆ, 23, 301, 0],
		[1, ⵠ[20], 19, 28, 301, Δⵠⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], ᐃᐃᐃΔΔ, 35, 297, 0],
		[1, ⵠ[ⵠΔⲆⵠ], ⲆΔΔⲆΔ, 37, 301, 0],
		[ⵠⵠⲆ, ⵠ[20], 19, 43, 301, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[20], 19, 46, 294, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 19, 46, 288, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], ΔⲆᐃⵠΔ, 40, 287, ᐃⵠΔ],
		[1, ⵠ[20], ⵠΔΔᐃᐃ, 50, 301, 0],
		[ᐃⵠ, ⵠ[ⲆᐃΔⵠ], ⲆΔΔⲆΔ, 58, 301, ⲆΔᐃ],
		[1, ⵠ[ᐃᐃᐃⲆ], ⲆΔᐃΔⲆ, 64, 301, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⲆⲆⵠ, 71, 301, 0],
		[ᐃⵠ, ⵠ[20], ⵠⲆⲆⲆⵠ, 80, 301, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 19, 87, 301, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], 19, 86, 294, 0],
		[1, ⵠ[ⲆᐃΔⵠ], ΔⵠⲆⵠⵠ, 87, 290, 0],
		[ⵠⲆⲆ, ⵠ[20], 19, 82, 286, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], 19, 75, 285, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠᐃⵠⲆ], ΔᐃⵠᐃⲆ, 66, 292, 0],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, 66, 288, ⲆⵠⲆ],
		[1, ⵠ[20], ⲆΔΔⲆΔ, 58, 288, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ΔΔⵠΔ], ⵠⲆⲆⲆⵠ, 67, 282, 0],
		[ᐃⵠ, ⵠ[20], ⵠⲆᐃᐃⲆ, 61, 281, 0],
		[ⵠⲆⲆ, ⵠ[20], 19, 60, 295, ⲆΔᐃ],
		[1, ⵠ[20], 19, 50, 282, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠΔⵠ], ΔᐃⵠᐃⲆ, 47, 283, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ᐃᐃᐃⲆ], ΔⲆᐃⵠΔ, 48, 281, ⲆⲆⲆ],
		[1, ⵠ[20], 19, 44, 277, 0],
		[1, ⵠ[20], ΔⲆᐃⵠΔ, 41, 282, 0],
		[ⵠⵠⲆ, ⵠ[20], 19, 38, 281, 0],
		[1, ⵠ[20], 19, 42, 288, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[20], 19, 52, 281, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 19, 50, 275, Δⵠⵠ],
		[1, ⵠ[20], ΔⲆᐃⵠΔ, 39, 277, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 19, 38, 284, 0],
		[1, ⵠ[ΔⲆΔᐃ], ᐃᐃᐃΔΔ, 51, 285, ΔⲆⵠ],
		[1, ⵠ[ⵠⵠΔⵠ], ΔᐃⵠΔΔ, 38, 278, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 19, 47, 272, 0],
		[ⵠⲆⲆ, ⵠ[ΔΔⵠΔ], ΔⲆᐃⵠΔ, 44, 267, ⲆⲆⲆ],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, 76, 280, 0],
		[ⵠⵠⲆ, ⵠ[20], ΔᐃⵠΔΔ, 78, 272, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 68, 275, 0],
		[ᐃⵠⵠ, ⵠ[20], 19, 70, 265, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[20], ⲆΔᐃΔⲆ, 65, 263, 0],
		[ΔⲆᐃ, ⵠ[20], 19, 64, 262, 0],
		[1, ⵠ[20], 19, 60, 268, 0],
		[ΔⲆᐃ, ⵠ[ᐃⵠᐃΔ], ⲆΔᐃΔⲆ, 56, 266, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], 19, 55, 260, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], ⵠΔΔᐃᐃ, 59, 258, ⲆⵠⲆ],
		[1, ⵠ[ⵠⵠΔⵠ], 19, 62, ΔΔΔⵠⲆΔᐃ, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠᐃᐃ], ΔⲆⲆⵠⵠ, 67, 253, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[20], 19, 69, ΔⵠΔⲆᐃΔⵠ, Δⵠⵠ],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 19, 44, 253, 0],
		[ⵠⲆⲆ, ⵠ[20], 19, 44, 250, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 19, 36, 245, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 19, 39, 239, 0],
		[ⵠⵠⲆ, ⵠ[20], ⵠⲆᐃᐃⲆ, 42, 234, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⲆΔ], ⲆΔᐃΔⲆ, 37, 235, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], ⵠⲆᐃᐃⲆ, 45, 226, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 19, 46, 222, ⲆΔᐃ],
		[1, ⵠ[20], 19, 51, 218, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], ΔᐃⵠᐃⲆ, 68, 218, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 19, 74, 224, 0],
		[1, ⵠ[ⵠⲆΔⵠ], ⵠⲆⲆⲆⵠ, 76, 218, ΔΔᐃ],
		[1, ⵠ[ΔⲆΔᐃ], ⲆΔΔⲆΔ, 84, 221, 0],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], ⲆΔΔⲆΔ, 88, 223, ⲆΔᐃ],
		[1, ⵠ[20], ΔⵠⲆⵠⵠ, 76, 230, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], ⲆΔΔⲆΔ, 86, 234, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 19, 79, 237, 0],
		[ᐃⵠ, ⵠ[20], 19, 75, 243, ᐃⵠΔ],
		[1, ⵠ[ⵠᐃⲆΔ], ᐃᐃᐃΔΔ, 81, 245, ΔΔᐃ],
		[1, ⵠ[20], ΔⵠⲆⵠⵠ, 83, 247, 0],
		[ⵠⵠⲆ, ⵠ[20], ⲆΔΔⲆΔ, 88, 247, 0],
		[ⵠⵠⲆ, ⵠ[20], ⵠΔΔᐃᐃ, 84, 254, ⲆⵠⲆ],
		[1, ⵠ[20], ΔⲆⲆⵠⵠ, 86, 251, 0],
		[1, ⵠ[20], 19, 85, 260, ⲆⲆⲆ],
		[1, ⵠ[20], ΔⵠⲆⵠⵠ, 79, 260, Δⵠⵠ],
		[1, ⵠ[20], 19, 76, 251, ⲆⵠⲆ],
		[1, ⵠ[ⵠⲆΔⵠ], ⲆΔΔⲆΔ, 72, 251, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 19, 69, 251, 0],
		[ᐃⵠⵠ, ⵠ[20], 19, 87, 266, Δⵠⵠ],
		[1, ⵠ[ΔⵠΔⲆ], ΔⵠⲆⵠⵠ, 89, 270, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 19, 87, 271, 0],
		[ᐃⵠ, ⵠ[20], 19, 82, 277, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[20], 19, 87, 284, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 19, 87, 237, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], 19, 88, 179, 0],
		[1, ⵠ[20], ᐃᐃᐃΔΔ, 50, 191, ΔΔᐃ],
		[1, ⵠ[ᐃⵠᐃΔ], 19, 52, 221, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 19, 34, 234, ΔΔᐃ],
		[1, ⵠ[ⵠΔΔΔ], 19, 27, 233, 0],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⲆⲆⵠ, 37, 293, 0],
		[1, ⵠ[ΔΔⵠΔ], 29, 13, 181, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ᐃⵠᐃΔ], 29, 8, 180, 0],
		[ⵠⵠⲆ, ⵠ[20], 30, 13, 186, ⲆΔᐃ],
		[1, ⵠ[ⵠⵠᐃᐃ], 31, 24, 183, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[20], 32, 33, 185, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[ΔⵠΔⲆ], 32, 37, 182, 0],
		[ᐃⵠ, ⵠ[20], 29, 45, 183, ΔⲆⵠ],
		[1, ⵠ[20], 30, 48, 183, 0],
		[1, ⵠ[20], 30, 58, 181, 0],
		[1, ⵠ[20], 30, 66, 188, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ⵠΔⲆⵠ], 30, 66, 182, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[20], 29, 63, 196, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 29, 54, 194, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 30, 79, 189, 0],
		[ⵠⲆⲆ, ⵠ[20], 30, 87, 182, ᐃⵠΔ],
		[1, ⵠ[ⵠⵠᐃᐃ], 30, 83, 185, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 29, 88, 189, ᐃⵠΔ],
		[1, ⵠ[20], 29, 85, 202, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 31, 82, 203, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 32, 80, 201, 0],
		[ΔⲆᐃ, ⵠ[20], 32, 87, 209, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 32, 83, 214, 0],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], 30, 88, 220, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 30, 78, 229, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 30, 73, 223, 0],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 29, 74, 217, ᐃⵠΔ],
		[1, ⵠ[20], 29, 67, 217, ⲆⲆⲆ],
		[1, ⵠ[20], 30, 72, 208, 0],
		[ⵠⲆⲆ, ⵠ[20], 30, 73, 199, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 30, 65, 207, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 29, 63, 210, Δⵠⵠ],
		[1, ⵠ[20], 29, 50, 204, ⲆⵠⲆ],
		[1, ⵠ[ⵠⲆΔⵠ], 30, 41, 205, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 29, 35, 205, ΔⲆⵠ],
		[1, ⵠ[20], 30, 27, 202, 0],
		[ΔⲆᐃ, ⵠ[20], 30, 20, 201, ⲆⵠⲆ],
		[1, ⵠ[20], 29, ΔⲆⵠΔᐃ, 203, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], 29, 14, 196, 0],
		[ᐃⵠⵠ, ⵠ[ᐃⵠᐃΔ], 29, 24, 187, ⲆⲆⲆ],
		[1, ⵠ[20], 29, 28, 223, 0],
		[ᐃⵠⵠ, ⵠ[20], 29, 32, 212, 0],
		[1, ⵠ[20], 30, 28, 214, ⲆⲆⲆ],
		[1, ⵠ[ⲆᐃΔⵠ], 31, 24, 218, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[20], 29, 36, 219, 0],
		[1, ⵠ[20], 29, 37, 217, 0],
		[ⵠⲆⲆ, ⵠ[ΔⵠΔⲆ], 29, 52, 217, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 29, 59, 217, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[20], 29, 69, 231, 0],
		[1, ⵠ[20], 29, 64, 242, ⲆΔᐃ],
		[1, ⵠ[ⵠⵠΔⵠ], 30, 53, 253, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 30, 45, 250, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[ᐃⵠᐃΔ], 30, 58, 261, ΔΔᐃ],
		[1, ⵠ[ⵠΔⲆⵠ], 30, 73, 276, 0],
		[ᐃⵠⵠ, ⵠ[20], 30, 64, 276, ΔⲆⵠ],
		[1, ⵠ[20], 30, 82, 285, 0],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 30, 65, 293, 0],
		[ᐃⵠ, ⵠ[20], 30, 56, 288, 0],
		[1, ⵠ[20], 30, 45, 296, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 30, 40, 288, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 30, 37, 283, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ᐃⵠᐃΔ], 30, 53, 280, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 30, 41, 277, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 29, 28, 296, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 29, 18, 292, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ΔⲆΔᐃ], 29, 24, 284, 0],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 30, 10, 295, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 30, ᐃⵠⲆᐃⵠ, 286, ⲆΔᐃ],
		[1, ⵠ[ΔⲆΔᐃ], 30, ᐃᐃΔⲆⵠ, 279, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 30, ᐃⲆⵠᐃᐃ, 269, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 30, 21, 259, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 30, ᐃⲆᐃⵠⵠ, 256, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 30, 31, 245, 0],
		[ⵠⵠⲆ, ⵠ[20], 30, ⵠᐃⲆᐃⵠ, 240, 0],
		[ᐃⵠⵠ, ⵠ[20], 30, 28, 235, 0],
		[ᐃⵠ, ⵠ[20], 30, 13, 226, 0],
		[1, ⵠ[20], 30, 39, 231, 0],
		[1, ⵠ[ⵠΔΔΔ], 30, 61, 226, ⲆⵠⲆ],
		[1, "r", 96, 262, ΔΔᐃ],
		[ᐃⵠⵠ, "r", 97, 262, Δⵠⵠ],
		[1, "r", 98, 262, 0],
		[1, "r", 97, 270, ΔⲆⵠ],
		[ⵠⵠⲆ, "r", 97, 271, 0],
		[1, "r", 97, 272, ᐃⵠΔ],
		[ᐃⵠⵠ, "r", 97, 273, ⲆⵠⲆ],
		[ⵠⵠⲆ, "r", 97, 274, ⲆⵠⲆ],
		[1, "r", 97, 275, ⲆΔᐃ],
		[1, "r", 97, 276, ᐃⵠΔ],
		[1, "r", 97, 277, 0],
		[1, "r", 97, 278, ᐃⵠΔ],
		[ᐃⵠ, "r", 98, 270, 0],
		[ᐃⵠ, "r", 98, 271, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 98, 272, ΔΔᐃ],
		[ⵠⲆⲆ, "r", 98, 273, 0],
		[ⵠⲆⲆ, "r", 98, 274, Δⵠⵠ],
		[1, "r", 98, 275, Δⵠⵠ],
		[ⵠⲆⲆ, "r", 98, 276, 0],
		[1, "r", 98, 277, 0],
		[ᐃⵠⵠ, "r", 98, 278, 0],
		[ᐃⵠ, "r", 96, 283, 0],
		[1, "r", 97, 283, ᐃⵠΔ],
		[1, "r", 97, 284, 0],
		[1, "r", 97, 285, Δⵠⵠ],
		[1, "r", 98, 283, ᐃⵠΔ],
		[1, "r", 98, 284, 0],
		[1, "r", 98, 285, 0],
		[ᐃⵠⵠ, "r", 96, 270, ᐃⵠΔ],
		[1, "r", 96, 271, ΔΔᐃ],
		[1, "r", 96, 272, ΔⲆⵠ],
		[1, "r", 96, 273, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 96, 274, 0],
		[ᐃⵠ, "r", 96, 275, 0],
		[ΔⲆᐃ, "r", 96, 276, ΔΔᐃ],
		[1, "r", 96, 277, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 96, 278, ᐃⵠΔ],
		[ⵠⲆⲆ, "r", 44, 248, 0],
		[1, ⵠ[20], ⵠⲆⵠⵠΔ, 94, 290, 0],
		[ⵠⵠⲆ, ⵠ[20], ΔⲆⲆⲆᐃ, 94, 252, 0],
		[ΔⲆᐃ, ⵠ[20], 16, 94, 228, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], ΔⲆᐃΔⵠ, 94, 200, Δⵠⵠ],
		[1, "r", 95, 282, 1],
		[1, "r", 95, 281, ᐃⵠ],
		[ⵠⲆⲆ, "r", 94, 281, ⵠⲆⲆ],
		[ᐃⵠⵠ, "r", 90, 281, ᐃⵠⵠ],
		[ⵠⵠⲆ, "r", 91, 282, 1],
		[ΔⲆᐃ, "r", 89, 281, 1],
		[ΔⲆᐃ, "r", 85, 276, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 85, 277, ᐃⵠ],
		[ⵠⵠⲆ, "r", 86, 278, ΔⲆᐃ],
		[ΔⲆᐃ, "p", 0, 85, 279, 1],
		[ⵠⲆⲆ, "r", 86, 279, ΔⲆᐃ],
		[ⵠⲆⲆ, "r", 87, 280, 1],
		[1, "r", 96, 281, Δⵠⵠ],
		[1, "r", 97, 281, 0],
		[1, "r", 98, 281, 0],
		[1, "r", 98, 282, 0],
		[1, "r", 97, 282, 0],
		[ⵠⵠⲆ, "r", 96, 282, ⲆⵠⲆ],
		[1, "r", 68, 261, ΔⲆᐃ],
		[1, ⵠ[26], 1, 94, 168, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[26], ⵠΔⲆΔ, 94, 151, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[26], ᐃⵠ, 94, 138, 0],
		[1, ⵠ[26], 1, 93, 124, ᐃⵠΔ],
		[1, ⵠ[26], 1, 94, 129, 0],
		[1, ⵠ[26], ⵠⲆⲆ, 93, 113, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[26], ᐃⵠⵠ, 94, 102, 0],
		[1, ⵠ[26], ΔⲆᐃ, 94, 93, ΔⲆⵠ],
		[1, ⵠ[26], 1, 93, 90, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[26], 1, 94, 79, 0],
		[1, ⵠ[26], ⵠⵠⲆ, 94, 76, 0],
		[1, ⵠ[26], ᐃⵠ, 93, 70, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[26], 1, 93, 63, 0],
		[ⵠⵠⲆ, ⵠ[26], ᐃⵠ, 94, 53, 0],
		[1, ⵠ[26], ⵠⵠⲆ, 93, ⲆᐃᐃᐃⲆ, ᐃⵠΔ],
		[1, ⵠ[26], ᐃⵠ, 85, ⲆⵠΔᐃⲆ, ⲆΔᐃ],
		[1, ⵠ[26], ⵠⵠⲆ, 94, ⵠᐃⲆᐃⵠ, 0],
		[ᐃⵠⵠ, ⵠ[26], ᐃⵠ, 66, 13, 0],
		[1, ⵠ[26], ΔⲆᐃ, 69, 9, ⲆⲆⲆ],
		[1, ⵠ[26], ΔⲆⲆᐃ, 68, Δᐃⵠᐃᐃ, 0],
		[ⵠⵠⲆ, ⵠ[26], 2, 66, 25, ΔⲆⵠ],
		[1, ⵠ[26], ⵠᐃⵠΔ, 92, ᐃΔⵠΔΔ, ΔΔᐃ],
		[1, ⵠ[26], ⵠᐃⵠΔ, 94, 14, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[26], 2, 87, 9, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[26], ⵠΔⵠᐃ, 71, 9, 0],
		[ⵠⵠⲆ, ⵠ[26], ⵠⲆΔΔ, 90, ⵠⵠᐃᐃⵠ, 0],
		[ⵠⵠⲆ, ⵠ[26], 2, 91, 13, 0],
		[ⵠⲆⲆ, ⵠ[26], ᐃⵠ, 74, ⵠⲆⵠⲆΔ, 0],
		[1, ⵠ[26], 2, 72, ᐃⵠᐃᐃΔ, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[26], 2, 75, Ⲇⵠⵠⵠᐃ, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[26], ⵠⵠⲆᐃ, 74, ⵠⲆⲆᐃⲆ, 0],
		[1, ⵠ[26], ⵠΔⵠᐃ, 84, 12, ⲆⵠⲆ],
		[1, ⵠ[26], ᐃᐃΔⵠ, 81, 14, 0],
		[ⵠⲆⲆ, ⵠ[26], ⵠⵠⲆ, 84, ⵠᐃⵠⲆΔⲆⲆ, ⲆΔᐃ],
		[1, ⵠ[26], ᐃⵠ, 84, 19, 0],
		[1, ⵠ[26], 1, ΔᐃᐃΔᐃ, ⲆⲆᐃΔⲆ, 0],
		[1, ⵠ[26], ⵠⲆⲆ, 7, 14, 0],
		[ⵠⵠⲆ, ⵠ[26], ⵠⵠⲆ, ΔⲆᐃⵠᐃ, 22, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[26], ΔⲆᐃ, ⵠΔᐃⲆᐃ, 34, ⲆⵠⲆ],
		[1, ⵠ[26], 1, 12, 24, 0],
		[1, ⵠ[26], 2, 8, 24, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[26], ⵠⲆΔΔ, ΔᐃⵠΔⵠ, 21, 0],
		[ΔⲆᐃ, ⵠ[26], 2, 31, 10, ⲆⵠⲆ],
		[1, ⵠ[26], ᐃᐃΔⵠ, 33, 27, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[26], ⵠⵠⲆᐃ, 9, 34, 0],
		[1, ⵠ[26], ᐃⵠΔⲆ, ⲆⵠΔᐃⲆ, 19, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[26], ᐃⵠⵠ, ᐃᐃⲆⵠⵠⲆᐃ, 10, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[26], ⵠΔⵠᐃ, ΔΔⲆΔΔ, 9, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[26], 2, 15, ᐃΔᐃⵠΔ, 0],
		[ᐃⵠ, ⵠ[26], 2, ⵠΔⲆⲆᐃ, ⲆⲆⵠⲆⵠ, 0],
		[1, ⵠ[26], 2, 9, ⲆⲆᐃⵠΔ, 0],
		[ᐃⵠⵠ, ⵠ[26], 2, 9, ⵠⲆᐃΔⲆ, 0],
		[1, ⵠ[26], 2, 10, 23, Δⵠⵠ],
		[1, ⵠ[26], ⵠⲆΔΔ, 34, 29, ΔΔᐃ],
		[1, ⵠ[26], 2, 27, 18, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[26], 2, 25, 21, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[26], 2, ⵠᐃⵠⲆ, 18, 0],
		[ⵠⲆⲆ, ⵠ[26], ⲆⲆⵠΔ, ⵠⵠⲆΔᐃⵠⲆ, 21, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[26], ⵠⲆΔΔ, 29, ᐃΔⵠΔΔ, 0],
		[ᐃⵠⵠ, ⵠ[26], ⵠⲆΔΔ, 13, 14, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[26], ΔⲆⲆᐃ, ⲆⲆᐃΔⲆ, 38, ᐃⵠΔ],
		[1, ⵠ[26], 2, 21, 39, ΔΔᐃ],
		[1, ⵠ[26], 2, 84, 26, ᐃⵠΔ],
		[1, ⵠ[26], 2, 77, 25, 0],
		[1, ⵠ[26], 2, 86, 35, ⲆⵠⲆ],
		[1, ⵠ[26], 1, 70, 35, 0],
		[ᐃⵠⵠ, ⵠ[26], ⵠΔⵠᐃ, 72, 36, ᐃⵠΔ],
		[1, ⵠ[26], ⲆⲆⵠΔ, 73, 31, ΔΔᐃ],
		[1, ⵠ[26], ⵠⵠⲆᐃ, 89, 39, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[26], ⵠⲆΔΔ, 65, 40, 0],
		[1, ⵠ[26], 2, 92, 32, 0],
		[ΔⲆᐃ, ⵠ[26], ᐃᐃΔⵠ, 90, 28, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 22, 25, 266, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 22, 17, 206, 0],
		[1, ⵠ[20], ⵠⲆⲆⲆⵠ, ⲆⲆᐃᐃᐃ, 184, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[ⵠΔⲆⵠ], 19, 22, 183, 0],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⲆⲆⵠ, 35, 188, 0],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], ᐃᐃᐃΔΔ, 36, 192, 0],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], 19, 50, 277, ⲆΔᐃ],
		[1, ⵠ[ⵠΔΔΔ], 19, 35, 279, 0],
		[1, "t", 4, 7, 178, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", 1, ⵠⲆⲆⵠⲆ, 179, 0],
		[1, "t", 3, ⵠΔᐃⲆᐃ, 180, Δⵠⵠ],
		[ⵠⵠⲆ, "t", 2, 7, 181, 0],
		[ⵠⲆⲆ, "t", 5, 7, 182, ⲆΔᐃ],
		[ᐃⵠⵠ, "t", 4, 7, 183, 0],
		[ⵠⵠⲆ, "t", ⵠⲆⵠⵠ, ⵠᐃⵠⲆᐃ, 184, Δⵠⵠ],
		[1, "t", 4, 7, 185, Δⵠⵠ],
		[1, "t", ⵠᐃⵠΔ, ΔΔⲆⵠⵠ, 186, 0],
		[1, "t", 1, ᐃⲆⵠΔᐃ, 187, 0],
		[1, "t", 4, Ⲇⵠᐃᐃᐃ, 188, 0],
		[ⵠⵠⲆ, "t", 3, ΔΔⲆⵠⵠ, 189, 0],
		[1, "t", ⲆⲆᐃⵠ, ᐃⲆⲆΔᐃ, 190, ΔΔᐃ],
		[ⵠⲆⲆ, "t", ΔⲆᐃ, 7, 191, ⲆⵠⲆ],
		[1, "t", 3, ΔΔⲆᐃⵠ, 192, ⲆⵠⲆ],
		[ⵠⲆⲆ, "t", 4, 7, 193, ᐃⵠΔ],
		[1, "t", ΔⵠⵠΔ, ΔΔⲆⵠⵠ, 194, ⲆⲆⲆ],
		[ⵠⵠⲆ, "t", 5, ᐃⲆⵠⲆⲆ, 195, 0],
		[ᐃⵠⵠ, "t", ⵠⲆΔΔ, ᐃⲆⵠΔᐃ, 196, 0],
		[1, "t", ⵠᐃᐃⲆ, ᐃⲆⵠΔᐃ, 197, ⲆⵠⲆ],
		[1, "b", ⵠⲆΔΔ, 7, 198, 0],
		[ᐃⵠ, "t", 4, ⵠᐃⵠⲆᐃ, 199, ΔΔᐃ],
		[ᐃⵠ, "t", 2, 7, 200, 0],
		[ᐃⵠⵠ, "t", ΔⲆⲆΔ, ⲆⵠΔΔⵠ, 201, ΔⲆⵠ],
		[1, "t", 2, ᐃⵠⲆΔⲆ, 202, ⲆΔᐃ],
		[ΔⲆᐃ, "t", 4, ᐃⵠⲆΔⲆ, 203, ⲆⵠⲆ],
		[1, "t", 2, ⵠⲆⲆⵠⲆ, 204, ⲆⲆⲆ],
		[1, "t", 5, 7, 205, 0],
		[ᐃⵠ, "t", ⵠΔⲆΔ, ⵠΔᐃⲆᐃ, 206, Δⵠⵠ],
		[ⵠⲆⲆ, "t", 1, ⲆⵠΔΔⵠ, 207, 0],
		[ᐃⵠ, "t", ⲆⵠⲆⲆ, 7, 208, 0],
		[ᐃⵠ, "t", ΔⵠⵠΔ, ΔΔⲆᐃⵠ, 209, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", ΔⲆᐃ, ᐃⵠⲆΔⲆ, 210, ΔⲆⵠ],
		[ᐃⵠ, "b", 0, ⵠΔᐃⲆᐃ, 211, 0],
		[1, "t", 3, ᐃⵠⲆΔⲆ, 212, 0],
		[1, "t", Δⵠⵠⵠ, 7, 213, ΔΔᐃ],
		[ΔⲆᐃ, "t", ⵠΔᐃⲆ, ⵠᐃⵠⲆᐃ, 214, 0],
		[ᐃⵠⵠ, "t", Δᐃⵠⵠ, ΔΔⲆⵠⵠ, 215, 0],
		[ΔⲆᐃ, "t", ΔⲆⲆΔ, ᐃⵠⲆΔⲆ, 216, 0],
		[ⵠⵠⲆ, "t", ΔⵠⵠΔ, ⵠⲆⲆⵠⲆ, 217, ⲆΔᐃ],
		[ᐃⵠ, "t", 1, ᐃⵠⲆΔⲆ, 218, ᐃⵠΔ],
		[1, "t", 4, ⲆⵠΔΔⵠ, 219, ΔΔᐃ],
		[ⵠⲆⲆ, "b", ᐃⵠΔⲆ, 7, 220, ᐃⵠΔ],
		[1, "t", ᐃⵠⵠ, ᐃⲆⵠΔᐃ, 221, Δⵠⵠ],
		[1, "t", 2, ᐃⲆⵠⲆⲆ, 222, ΔⲆⵠ],
		[1, "t", ᐃΔⲆΔ, ᐃⲆⵠⲆⲆ, 223, 0],
		[ⵠⲆⲆ, "t", 3, 7, 224, ᐃⵠΔ],
		[ᐃⵠ, "t", ⵠⵠⲆ, 7, 225, 0],
		[ᐃⵠ, "t", 4, ΔΔⲆᐃⵠ, 226, 0],
		[ᐃⵠ, "t", ⵠⲆΔΔ, 7, 227, 0],
		[ᐃⵠⵠ, "t", ⲆᐃᐃΔ, ⵠΔᐃⲆᐃ, 228, ⲆⵠⲆ],
		[ⵠⵠⲆ, "t", ⵠΔⵠⲆ, 7, 229, 0],
		[ΔⲆᐃ, "t", 1, ΔΔⲆⵠⵠ, 230, Δⵠⵠ],
		[1, "t", 4, 7, 231, 0],
		[1, "b", ⵠΔⵠᐃ, ᐃⵠⲆΔⲆ, 232, 0],
		[ΔⲆᐃ, "t", Δᐃⵠⵠ, 7, 233, ΔⲆⵠ],
		[1, "t", ᐃⵠⵠ, 7, 234, 0],
		[1, "t", 3, ᐃⵠⲆΔⲆ, 235, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", 4, ᐃⵠⲆΔⲆ, 236, ⲆΔᐃ],
		[1, "t", 2, ᐃⲆⵠⲆⲆ, 237, ΔⲆⵠ],
		[1, "t", 5, ΔΔⲆᐃⵠ, 238, 0],
		[1, "b", ⵠΔⵠⲆ, ᐃⲆⲆΔᐃ, 239, ⲆΔᐃ],
		[1, "t", 2, ⵠΔᐃⲆᐃ, 240, 0],
		[ΔⲆᐃ, "t", ⵠⵠⲆ, ⵠᐃⵠⲆᐃ, 241, 0],
		[ΔⲆᐃ, "t", 2, 7, 242, 0],
		[ᐃⵠⵠ, "t", 4, 7, 243, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", 3, ⲆⵠΔΔⵠ, 244, 0],
		[1, "t", ᐃΔⲆΔ, ΔΔⲆᐃⵠ, 245, 0],
		[ΔⲆᐃ, "t", ⵠⲆⲆ, ⵠΔᐃⲆᐃ, 246, ⲆⵠⲆ],
		[ΔⲆᐃ, "b", 0, ΔΔⲆⵠⵠ, 247, 0],
		[ⵠⲆⲆ, "t", ⵠⲆⲆΔ, 7, 248, 0],
		[1, "t", ⲆΔⵠᐃ, ⵠⲆⲆⵠⲆ, 249, 0],
		[1, "t", ⵠⵠⲆᐃ, 7, 250, ΔⲆⵠ],
		[ΔⲆᐃ, "t", 1, 7, 251, 0],
		[ⵠⵠⲆ, "t", ΔⲆΔⲆ, ⵠⲆⲆⵠⲆ, 252, 0],
		[1, "t", ⵠⲆⲆΔ, 7, 253, 0],
		[1, "t", ΔⲆⲆΔ, ᐃⲆⵠΔᐃ, 254, 0],
		[1, "t", 1, 7, 255, 0],
		[ⵠⵠⲆ, "t", 4, ᐃⲆⲆΔᐃ, 256, 0],
		[ᐃⵠ, "t", 1, 7, 257, Δⵠⵠ],
		[ΔⲆᐃ, "t", 2, ᐃⲆⵠⲆⲆ, 258, ΔⲆⵠ],
		[ⵠⲆⲆ, "t", ᐃᐃⵠⵠ, ⵠΔᐃⲆᐃ, 260, 0],
		[1, "t", ΔⲆΔⵠ, ᐃⲆⵠΔᐃ, 259, Δⵠⵠ],
		[1, "t", ᐃⵠ, ᐃⲆⵠΔᐃ, 261, ⲆΔᐃ],
		[ⵠⵠⲆ, "t", ⵠΔᐃⲆ, ⵠΔᐃⲆᐃ, 262, 0],
		[1, "t", 4, 7, 263, 0],
		[1, "t", ΔⲆᐃ, 7, 264, 0],
		[1, "t", 2, 7, 265, Δⵠⵠ],
		[1, "t", Δᐃⵠⵠ, ᐃⵠⲆΔⲆ, 266, ⲆⵠⲆ],
		[1, "t", 2, 7, 267, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 2, 7, 269, Δⵠⵠ],
		[ᐃⵠⵠ, "b", 2, 7, 268, 0],
		[1, "t", ᐃΔΔΔ, ᐃⲆⵠΔᐃ, 270, ΔⲆⵠ],
		[1, "t", 1, ⲆⵠΔΔⵠ, 271, 0],
		[ⵠⲆⲆ, "t", ⲆΔᐃΔ, 7, 272, 0],
		[ΔⲆᐃ, "b", ⵠⵠⲆᐃ, ⵠⲆⲆⵠⲆ, 273, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", 4, 7, 274, ᐃⵠΔ],
		[ᐃⵠ, "t", ⵠⵠⲆᐃ, ᐃⵠⲆΔⲆ, 275, 0],
		[ᐃⵠⵠ, "t", ΔⲆⲆΔ, ⲆⵠΔΔⵠ, 276, 0],
		[ΔⲆᐃ, "t", ΔⲆⲆΔ, 7, 277, 0],
		[ᐃⵠⵠ, "t", ⵠⵠⲆᐃ, 7, 278, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", ᐃⵠ, 7, 279, 0],
		[ⵠⵠⲆ, "t", ⲆⲆΔΔ, ᐃⲆⵠΔᐃ, 280, Δⵠⵠ],
		[1, "b", 1, ΔΔⲆⵠⵠ, 281, 0],
		[1, "t", 3, 7, 282, ΔⲆⵠ],
		[ᐃⵠ, "t", ΔⲆΔⲆ, 7, 283, ⲆⲆⲆ],
		[1, "t", ΔⲆᐃ, ⵠᐃⵠⲆᐃ, 284, ΔΔᐃ],
		[ᐃⵠ, "t", 3, 7, 285, ⲆⲆⲆ],
		[ⵠⲆⲆ, "t", ⲆᐃᐃΔ, ᐃⲆⵠΔᐃ, 286, ΔⲆⵠ],
		[ᐃⵠ, "t", 4, ΔΔⲆᐃⵠ, 288, 0],
		[1, "t", 2, ⵠᐃⵠⲆᐃ, 287, 0],
		[ᐃⵠ, "b", ᐃⵠΔ, 7, 289, ᐃⵠΔ],
		[ᐃⵠⵠ, "t", ᐃΔᐃΔ, 7, 290, ⲆⵠⲆ],
		[1, "t", 2, 7, 291, 0],
		[ᐃⵠⵠ, "t", ΔⲆⲆΔ, 7, 292, ΔΔᐃ],
		[ⵠⵠⲆ, "t", 3, ΔΔⲆᐃⵠ, 293, Δⵠⵠ],
		[ⵠⵠⲆ, "t", ⵠⵠⲆ, ᐃⲆⵠΔᐃ, 294, 0],
		[ᐃⵠ, "t", Δⵠⵠⵠ, ⵠⲆⲆⵠⲆ, 295, 0],
		[1, "t", ⵠΔⵠⲆ, 7, 296, ᐃⵠΔ],
		[1, "t", ⵠⵠⲆ, ⵠⲆⲆⵠⲆ, 297, ⲆⵠⲆ],
		[ᐃⵠⵠ, "t", ᐃΔΔΔ, Ⲇⵠᐃᐃᐃ, 298, 0],
		[ᐃⵠⵠ, "t", 2, 7, 299, 0],
		[ᐃⵠⵠ, "b", 0, 7, 300, ᐃⵠΔ],
		[ⵠⲆⲆ, "t", 2, ᐃⲆⵠΔᐃ, 301, ΔΔᐃ],
		[ΔⲆᐃ, "r", 196, 271, ⲆΔᐃ],
		[1, "r", 199, 274, ⲆⲆⲆ],
		[ⵠⵠⲆ, "r", 167, 238, ΔΔᐃ],
		[ⵠⲆⲆ, "r", 171, 240, 0],
		[ⵠⲆⲆ, "r", 189, 207, ⲆΔᐃ],
		[ⵠⵠⲆ, "r", 192, 209, Δⵠⵠ],
		[1, "r", 198, 271, 0],
		[ᐃⵠ, "r", 197, 271, Δⵠⵠ],
		[ᐃⵠ, "r", 198, 272, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 197, 272, Δⵠⵠ],
		[ᐃⵠⵠ, "r", 196, 272, 0],
		[ⵠⲆⲆ, "r", 195, 272, 0],
		[ⵠⲆⲆ, "r", 199, 272, 0],
		[ⵠⵠⲆ, "r", 199, 273, ΔⲆⵠ],
		[1, "r", 198, 273, 0],
		[ΔⲆᐃ, "r", 197, 273, 0],
		[ᐃⵠⵠ, "r", 196, 273, Δⵠⵠ],
		[ΔⲆᐃ, "r", 198, 274, 0],
		[ᐃⵠ, "r", 197, 274, ⲆΔᐃ],
		[ⵠⲆⲆ, "r", 195, 273, 0],
		[1, "r", 196, 274, ⲆΔᐃ],
		[ⵠⲆⲆ, "r", 198, 275, 0],
		[ᐃⵠⵠ, "r", 197, 275, Δⵠⵠ],
		[1, "r", 200, 274, 0],
		[ΔⲆᐃ, "r", 200, 273, 0],
		[ⵠⵠⲆ, "r", 199, 275, Δⵠⵠ],
		[1, ⵠ[153], 2, 200, 272, 0],
		[ⵠⲆⲆ, ⵠ[153], ⵠⲆⲆ, 195, 271, 0],
		[1, ⵠ[153], 0, 199, 268, 0],
		[1, ⵠ[153], 0, 193, 277, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[153], 1, 199, 276, 0],
		[1, "s", 1, 200, 275, ᐃⵠⵠ],
		[1, "s", ΔⲆᐃ, 194, 272, ⵠⲆⲆ],
		[ΔⲆᐃ, "s", ᐃⵠΔⲆ, 193, 270, ⵠⵠⲆ],
		[ᐃⵠⵠ, "g", ⵠⵠⲆᐃ, 193, 273, ᐃⵠⵠ],
		[ᐃⵠ, "g", 2, 201, 267, 1],
		[ᐃⵠⵠ, "m", ΔⲆⲆᐃ, 220, 298, 1],
		[1, "m", ⵠⲆⲆ, 219, 292, ⵠⵠⲆ],
		[1, "m", ΔⲆᐃ, 214, 297, ᐃⵠⵠ],
		[ᐃⵠⵠ, "r", 168, 238, 0],
		[ᐃⵠⵠ, "r", 169, 238, ⲆΔᐃ],
		[ᐃⵠ, "r", 170, 238, 0],
		[1, "r", 171, 239, ΔΔᐃ],
		[1, "r", 170, 239, ⲆⵠⲆ],
		[1, "r", 169, 239, ⲆⲆⲆ],
		[ᐃⵠ, "r", 168, 239, 0],
		[ᐃⵠ, "r", 167, 239, 0],
		[ⵠⵠⲆ, "r", 166, 239, ⲆⵠⲆ],
		[ⵠⲆⲆ, "r", 166, 240, ΔΔᐃ],
		[1, "r", 167, 240, ⲆΔᐃ],
		[ᐃⵠ, "r", 168, 240, 0],
		[1, "r", 169, 240, 0],
		[ⵠⲆⲆ, "r", 170, 240, 0],
		[1, "r", 168, 241, ⲆΔᐃ],
		[ⵠⵠⲆ, "r", 169, 241, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 170, 241, 0],
		[ᐃⵠⵠ, "r", 171, 241, ΔΔᐃ],
		[1, ⵠ[153], ⵠΔⵠᐃ, 171, 238, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[153], 1, 166, 238, 0],
		[ΔⲆᐃ, ⵠ[153], ⲆΔᐃ, 167, 237, ΔΔᐃ],
		[1, ⵠ[153], ⲆⵠⲆ, 171, 242, 0],
		[1, ⵠ[153], 0, 165, 243, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[153], 0, 171, 235, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[153], 0, 174, 241, ΔΔᐃ],
		[ⵠⲆⲆ, "s", ΔⲆᐃ, 165, 239, ⵠⲆⲆ],
		[1, "s", 1, 172, 241, 1],
		[1, "s", 0, 170, 237, 1],
		[1, "s", 1, 171, 237, ⵠⵠⲆ],
		[1, "s", ᐃⵠΔⲆ, 174, 236, ᐃⵠ],
		[1, "s", 2, 162, 241, 1],
		[1, "s", 2, 170, 246, 1],
		[ΔⲆᐃ, "s", 2, 167, 235, ΔⲆᐃ],
		[1, "s", 2, 176, 243, ΔⲆᐃ],
		[1, "r", 190, 207, ᐃⵠΔ],
		[1, "r", 191, 207, 0],
		[1, "r", 192, 208, ΔⲆⵠ],
		[ᐃⵠⵠ, "r", 191, 208, 0],
		[1, "r", 190, 208, 0],
		[ⵠⲆⲆ, "r", 189, 208, 0],
		[ᐃⵠ, "r", 188, 208, ⲆⵠⲆ],
		[1, "r", 189, 209, ΔⲆⵠ],
		[ΔⲆᐃ, "r", 190, 209, 0],
		[1, "r", 191, 209, 0],
		[1, "r", 188, 209, ⲆⲆⲆ],
		[ᐃⵠⵠ, "r", 190, 210, 0],
		[ᐃⵠ, "r", 191, 210, 0],
		[ΔⲆᐃ, "r", 192, 210, 0],
		[ⵠⵠⲆ, ⵠ[153], 2, 189, 210, 0],
		[ⵠⲆⲆ, ⵠ[153], ⵠⲆΔΔ, 192, 205, 0],
		[ⵠⵠⲆ, ⵠ[153], 1, 192, 207, Δⵠⵠ],
		[1, ⵠ[153], ΔⲆⵠ, 193, 210, 0],
		[ᐃⵠⵠ, ⵠ[153], Δⵠⵠ, 187, 208, 0],
		[1, ⵠ[153], ⲆΔᐃ, 197, 206, ⲆⲆⲆ],
		[1, ⵠ[153], 0, 191, 213, 0],
		[ΔⲆᐃ, ⵠ[153], ⲆΔᐃ, 190, 204, 0],
		[ᐃⵠⵠ, "s", ᐃⵠ, 188, 207, ⵠⲆⲆ],
		[1, "s", ⵠⵠⲆ, 190, 211, 1],
		[ⵠⲆⲆ, "s", ⲆⲆⵠΔ, 188, 213, 1],
		[1, "s", ⵠⵠⲆᐃ, 187, 205, ᐃⵠ],
		[1, "s", ⲆΔᐃ, 194, 210, 1],
		[ᐃⵠⵠ, "s", 0, 198, 207, ⵠⵠⲆ],
		[ⵠⵠⲆ, "s", 1, 193, 204, ᐃⵠⵠ],
		[ᐃⵠ, "s", ΔⲆᐃ, 193, 213, 1],
		[1, "s", ⵠᐃⵠΔ, 198, 212, 1],
		[ⵠⲆⲆ, "s", ⵠΔⲆΔ, 182, 208, 1],
		[ⵠⵠⲆ, "s", ΔⲆᐃ, 204, 271, ᐃⵠ],
		[1, "s", ⲆⲆⲆ, 203, 272, 1],
		[ⵠⲆⲆ, "s", Δⵠⵠ, 189, 275, 1],
		[ᐃⵠ, "s", 0, 195, 265, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", ΔⲆⲆᐃ, 196, 264, ᐃⵠ],
		[1, "s", ᐃᐃΔⵠ, 186, 274, ⵠⲆⲆ],
		[ᐃⵠ, "s", 2, 197, 280, 1],
		[1, "s", 0, 217, 282, 1],
		[1, "s", 1, 214, 285, 1],
		[ᐃⵠ, "s", ΔⲆᐃ, 214, 274, ΔⲆᐃ],
		[ᐃⵠⵠ, "s", 1, 203, 282, ᐃⵠⵠ],
		[1, "s", 1, 205, 290, 1],
		[1, "s", 0, 207, 292, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", Δⵠⵠ, 197, 297, ΔⲆᐃ],
		[ΔⲆᐃ, "s", Δⵠⵠ, 184, 287, 1],
		[1, "s", ⵠΔⲆΔ, 213, 289, 1],
		[1, "s", 2, 196, 294, ⵠⵠⲆ],
		[ⵠⵠⲆ, "s", ᐃⵠΔⲆ, 187, 286, 1],
		[ᐃⵠ, "s", 1, 192, 289, 1],
		[ΔⲆᐃ, "s", ᐃⵠ, 189, 299, 1],
		[ᐃⵠⵠ, "s", 0, 213, 273, ΔⲆᐃ],
		[ᐃⵠⵠ, "g", ᐃᐃΔⵠ, 212, 278, 1],
		[1, "g", ᐃⵠⵠ, 200, 288, ⵠⵠⲆ],
		[ᐃⵠ, "g", 2, 215, 265, 1],
		[1, "g", ⵠⲆΔΔ, 183, 281, 1],
		[1, "s", Δⵠⵠ, 178, 295, ᐃⵠ],
		[ⵠⲆⲆ, "s", 0, 167, 281, ᐃⵠⵠ],
		[1, "s", ⲆΔᐃ, 175, 263, ᐃⵠ],
		[1, "s", ⵠⵠⲆ, 176, 293, ⵠⵠⲆ],
		[1, "s", ⵠⵠⲆ, 163, 285, 1],
		[ᐃⵠⵠ, "s", ⵠⵠⲆ, 177, 266, 1],
		[1, "s", 1, 161, 272, 1],
		[1, "s", ⵠᐃⵠΔ, 185, 261, 1],
		[1, "c", ᐃⵠΔ, 217, 270, 1],
		[ⵠⲆⲆ, "c", 0, 220, 278, ᐃⵠ],
		[1, "c", ΔΔᐃ, 217, 283, 1],
		[ⵠⵠⲆ, "c", ⲆⲆⲆ, 220, 287, ⵠⲆⲆ],
		[1, "c", 0, 210, 292, 1],
		[ΔⲆᐃ, "c", ⲆⲆⲆ, 205, 297, 1],
		[ⵠⲆⲆ, "c", ⲆΔᐃ, 198, 293, 1],
		[ᐃⵠⵠ, "c", ΔⲆⵠ, 208, 283, ⵠⲆⲆ],
		[1, "c", 0, 197, 283, 1],
		[ᐃⵠ, "c", Δⵠⵠ, 190, 289, ⵠⵠⲆ],
		[1, "c", ⲆⲆⲆ, 183, 296, ⵠⵠⲆ],
		[1, "c", ᐃⵠΔ, 189, 291, ⵠⵠⲆ],
		[1, "c", ⲆⲆⲆ, 178, 284, 1],
		[1, "c", 0, 208, 265, 1],
		[1, "c", ⲆⵠⲆ, 169, 292, ⵠⲆⲆ],
		[ⵠⵠⲆ, "s", 1, 158, 294, 1],
		[1, "s", 0, 151, 297, 1],
		[1, "s", ΔⲆⵠ, 147, 288, ᐃⵠⵠ],
		[ⵠⵠⲆ, "c", ᐃⵠΔ, 150, 289, 1],
		[1, "c", 0, 160, 282, ΔⲆᐃ],
		[1, "c", ΔΔᐃ, 146, 274, 1],
		[ⵠⵠⲆ, "c", ⲆΔᐃ, 167, 264, 1],
		[1, "c", Δⵠⵠ, 165, 267, 1],
		[ⵠⵠⲆ, "g", ᐃⵠΔ, 189, 257, 1],
		[1, "g", 1, 197, 248, 1],
		[1, "g", 2, 170, ᐃΔᐃⲆΔ, ᐃⵠⵠ],
		[1, "g", ᐃᐃΔⵠ, 212, 234, ᐃⵠ],
		[1, "g", ⵠⲆΔΔ, 189, 230, ᐃⵠ],
		[ᐃⵠ, "g", ΔⲆⲆᐃ, 173, 221, ᐃⵠⵠ],
		[1, "g", ⵠⵠⲆ, 210, 214, ⵠⵠⲆ],
		[ⵠⲆⲆ, "s", 1, 153, 257, 1],
		[ⵠⵠⲆ, "s", 0, 158, ᐃΔΔᐃⵠΔᐃ, 1],
		[ⵠⲆⲆ, "s", ⲆⲆⲆ, 184, 248, 1],
		[1, "s", 0, 212, 254, 1],
		[ⵠⵠⲆ, "s", 1, 203, 249, 1],
		[1, "s", ⲆⲆⵠΔ, 204, 252, ⵠⲆⲆ],
		[1, "s", 2, 187, 248, ⵠⵠⲆ],
		[1, "s", ΔⲆⵠ, 206, 237, 1],
		[1, "s", 0, 196, 227, ᐃⵠ],
		[ⵠⵠⲆ, "s", ⲆΔᐃ, 181, 228, 1],
		[ΔⲆᐃ, "s", 1, 199, 227, 1],
		[1, "s", 1, 208, 238, 1],
		[1, "s", ⵠⵠⲆ, 179, 222, ᐃⵠⵠ],
		[1, "s", 1, 213, 223, 1],
		[1, "s", ⵠΔⵠᐃ, 182, 222, 1],
		[ⵠⲆⲆ, "s", 2, 211, 226, ⵠⵠⲆ],
		[1, "s", ⵠΔⵠᐃ, 214, 214, 1],
		[ᐃⵠ, "s", 2, 201, 216, 1],
		[1, "s", 2, 215, 192, ᐃⵠ],
		[1, "s", 1, 210, 198, 1],
		[1, "s", 1, 198, 196, ΔⲆᐃ],
		[1, "s", 2, 208, 199, 1],
		[ᐃⵠⵠ, "s", ⵠΔⵠᐃ, 187, 192, 1],
		[ᐃⵠⵠ, "s", 1, 179, 198, ᐃⵠ],
		[1, "s", ⵠΔⲆΔ, 177, 197, 1],
		[1, "s", 0, 164, 197, 1],
		[1, "s", ⵠⵠⲆ, 159, 193, ⵠⲆⲆ],
		[1, "s", ΔⲆᐃ, 149, 206, ᐃⵠ],
		[1, "s", ⵠⲆⲆ, 164, 209, 1],
		[1, "s", ⵠΔⵠᐃ, 165, 210, 1],
		[1, "s", ⵠᐃⵠΔ, 161, 191, ᐃⵠⵠ],
		[1, "s", ᐃⵠ, 162, 224, ⵠⵠⲆ],
		[ᐃⵠ, "s", 0, 150, 236, ᐃⵠ],
		[ᐃⵠ, "s", ⵠⲆⲆ, 149, 239, 1],
		[1, "s", 2, 153, 236, ᐃⵠ],
		[1, "s", 2, 160, 223, 1],
		[1, "s", 2, 151, 207, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", ⵠᐃⵠΔ, 147, 220, ⵠⲆⲆ],
		[1, "s", 2, 145, 265, 1],
		[ⵠⲆⲆ, "s", 2, 145, 285, 1],
		[1, "c", 0, 152, 266, ⵠⲆⲆ],
		[ⵠⵠⲆ, "c", 0, 185, 271, 1],
		[ΔⲆᐃ, "c", ⲆⵠⲆ, 210, 254, ᐃⵠⵠ],
		[ⵠⲆⲆ, "c", ΔΔᐃ, 209, 256, ⵠⵠⲆ],
		[ΔⲆᐃ, "c", ΔⲆⵠ, 198, 254, 1],
		[1, "c", 0, 213, 246, ⵠⵠⲆ],
		[ΔⲆᐃ, "c", 0, 216, 237, ⵠⵠⲆ],
		[ᐃⵠ, "c", ᐃⵠΔ, 204, 240, ᐃⵠⵠ],
		[1, "c", ᐃⵠΔ, 196, 234, 1],
		[ᐃⵠ, "c", ⲆⵠⲆ, 188, 238, ᐃⵠ],
		[1, "c", 0, 182, 245, 1],
		[1, "c", ⲆΔᐃ, 173, 252, 1],
		[1, "c", 0, 153, 248, 1],
		[1, "c", ⲆⵠⲆ, 158, 233, 1],
		[1, "c", 0, 147, 230, ᐃⵠ],
		[1, "c", ΔΔᐃ, 151, 224, ⵠⲆⲆ],
		[1, "c", 0, 157, 214, ᐃⵠ],
		[1, "c", ᐃⵠΔ, 167, 219, 1],
		[1, "c", ⲆⲆⲆ, 171, 208, 1],
		[ⵠⲆⲆ, "c", 0, 179, 219, ⵠⵠⲆ],
		[1, "c", ⲆΔᐃ, 176, 229, ΔⲆᐃ],
		[1, "c", Δⵠⵠ, 195, 221, 1],
		[1, "c", 0, 207, 222, 1],
		[1, "c", ΔⲆⵠ, 214, 207, 1],
		[ᐃⵠⵠ, "c", 0, 205, 210, 1],
		[1, "c", ΔⲆⵠ, 204, 196, 1],
		[1, "c", ⲆΔᐃ, 214, 196, ⵠⵠⲆ],
		[ᐃⵠⵠ, "c", ⲆⲆⲆ, 190, 199, ΔⲆᐃ],
		[1, "c", 0, 184, 194, ΔⲆᐃ],
		[1, "c", 0, 172, 199, ⵠⲆⲆ],
		[ⵠⲆⲆ, "c", 0, 161, 204, 1],
		[ᐃⵠⵠ, "c", ⲆΔᐃ, 157, 196, 1],
		[ⵠⲆⲆ, "c", ΔΔᐃ, 149, 194, ᐃⵠⵠ],
		[1, "c", Δⵠⵠ, 147, 208, ΔⲆᐃ],
		[1, "c", 0, 207, 274, 1],
		[ᐃⵠ, "c", 0, 217, 258, ΔⲆᐃ],
		[1, "c", ᐃⵠΔ, 201, 260, 1],
		[ᐃⵠⵠ, "c", 0, 178, 276, ᐃⵠⵠ],
		[1, "c", ⲆΔᐃ, 187, 265, 1],
		[1, "s", ⵠⵠⲆ, 204, 260, ⵠⵠⲆ],
		[ᐃⵠ, "s", ⵠⲆⲆ, 216, 260, ΔⲆᐃ],
		[ᐃⵠ, "s", 1, 187, 255, 1],
		[ⵠⵠⲆ, "s", ⵠⵠⲆᐃ, 189, 254, ᐃⵠ],
		[1, "s", ᐃᐃΔⵠ, 212, 257, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", 2, 182, 286, ᐃⵠⵠ],
		[1, "s", ⲆⲆⵠΔ, 169, 280, ᐃⵠ],
		[1, "s", ΔⲆⲆᐃ, 217, 273, ΔⲆᐃ],
		[ΔⲆᐃ, "s", ΔⲆⲆᐃ, 215, 282, ⵠⵠⲆ],
		[ᐃⵠⵠ, "s", 2, 172, 263, 1],
		[ⵠⲆⲆ, "s", 2, 176, 267, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", 2, 215, 251, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[527], 1, 221, 282, ⲆⲆⲆ],
		[1, ⵠ[527], 1, 222, 284, ⲆΔᐃ],
		[1, ⵠ[527], 1, 221, 290, ΔΔᐃ],
		[ᐃⵠ, ⵠ[527], ᐃⵠⵠ, 222, 294, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[527], ᐃⵠ, 221, 297, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[527], 1, 223, 298, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[527], ᐃⵠⵠ, 222, 300, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[527], 1, 218, 301, 0],
		[ⵠⲆⲆ, ⵠ[527], ⵠⵠⲆ, 217, 299, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[527], ⵠⲆⲆ, 215, 301, 0],
		[ΔⲆᐃ, ⵠ[527], 1, 212, 300, ΔⲆⵠ],
		[1, ⵠ[527], ⵠⵠⲆ, 206, 300, 0],
		[ᐃⵠⵠ, ⵠ[527], 1, 209, 301, 0],
		[1, ⵠ[527], ⵠⲆⲆ, 204, 299, 0],
		[ⵠⵠⲆ, ⵠ[527], ΔⲆᐃ, 202, 301, ᐃⵠΔ],
		[1, ⵠ[527], 1, 199, 301, 0],
		[1, ⵠ[527], 1, 222, 282, 0],
		[1, ⵠ[527], 1, 207, 301, 0],
		[1, ⵠ[527], ΔⲆᐃ, 197, 301, ᐃⵠΔ],
		[1, ⵠ[527], ᐃⵠ, 215, 291, 0],
		[1, ⵠ[527], ᐃⵠ, 216, 286, 0],
		[1, ⵠ[527], 1, 214, 292, 0],
		[1, ⵠ[527], ⵠⵠⲆ, 210, 289, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[527], ᐃⵠ, 208, 294, 0],
		[ⵠⵠⲆ, ⵠ[527], ᐃⵠ, 210, 298, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[527], 1, 212, 281, ⲆⵠⲆ],
		[1, ⵠ[527], 1, 219, 278, ⲆΔᐃ],
		[1, ⵠ[527], 1, 219, 282, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[527], ᐃⵠ, 205, 286, Δⵠⵠ],
		[1, ⵠ[527], ⵠⵠⲆ, 202, 293, 0],
		[1, ⵠ[527], 1, 198, 295, 0],
		[1, ⵠ[527], 2, 213, 282, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[527], 2, 213, 291, 0],
		[1, ⵠ[527], ⵠᐃⵠΔ, 216, 289, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 219, 289, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[527], 2, 218, 285, 0],
		[ⵠⲆⲆ, ⵠ[527], ΔⲆⲆᐃ, 220, 283, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[527], 2, 211, 283, 0],
		[ⵠⵠⲆ, ⵠ[527], ⵠΔⵠᐃ, 215, 281, ⲆⵠⲆ],
		[1, ⵠ[527], ⵠⲆΔΔ, 217, 279, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[527], ⵠᐃⵠΔ, 208, 290, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[527], ⵠⲆΔΔ, 211, 296, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[527], 2, 215, 294, 0],
		[1, ⵠ[527], ⲆⲆⵠΔ, 212, 298, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[527], ⵠⲆΔΔ, 203, 294, ⲆΔᐃ],
		[1, ⵠ[527], 2, 204, 288, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[527], ⵠΔⵠᐃ, 200, 294, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 198, 297, 0],
		[ⵠⲆⲆ, ⵠ[527], ⵠⲆΔΔ, 202, 299, 0],
		[ᐃⵠ, ⵠ[527], ⵠᐃⵠΔ, 200, 299, 0],
		[1, ⵠ[527], ⵠⲆΔΔ, 220, 300, 0],
		[ᐃⵠ, ⵠ[527], ⵠΔⲆΔ, 220, 295, 0],
		[ΔⲆᐃ, ⵠ[527], 2, 220, 292, 0],
		[ⵠⲆⲆ, ⵠ[527], 2, 219, 287, ΔΔᐃ],
		[1, ⵠ[527], ᐃᐃΔⵠ, 211, 288, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[527], 2, 213, 287, 0],
		[ⵠⵠⲆ, ⵠ[527], ⵠⵠⲆᐃ, 211, 289, ᐃⵠΔ],
		[1, ⵠ[527], ⵠⲆΔΔ, 212, 290, ΔⲆⵠ],
		[1, ⵠ[527], ⵠⲆΔΔ, 195, 296, 0],
		[ᐃⵠ, ⵠ[527], ⵠⲆΔΔ, 196, 299, ⲆⵠⲆ],
		[1, ⵠ[527], 2, 194, 300, 0],
		[1, ⵠ[527], 2, 195, 300, ΔΔᐃ],
		[1, ⵠ[527], 2, 213, 279, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 211, 279, 0],
		[1, ⵠ[527], 0, 218, 290, 0],
		[ΔⲆᐃ, ⵠ[527], 0, 212, 294, 0],
		[1, ⵠ[527], ⵠⲆⲆ, 213, 295, 0],
		[1, ⵠ[527], ᐃⵠ, 217, 292, 0],
		[1, ⵠ[527], 1, 218, 288, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[527], 1, 210, 295, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[527], 1, 213, 292, 0],
		[ΔⲆᐃ, ⵠ[527], ΔⲆᐃ, 212, 289, 0],
		[ᐃⵠⵠ, ⵠ[527], ⵠⵠⲆ, 205, 295, 0],
		[1, ⵠ[527], 2, 206, 296, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[527], ⲆⲆⵠΔ, 208, 296, 0],
		[ΔⲆᐃ, ⵠ[527], ⵠΔⲆΔ, 221, 288, ΔⲆⵠ],
		[1, ⵠ[527], 2, 209, 299, 0],
		[1, ⵠ[527], ⵠⲆΔΔ, 211, 291, 0],
		[ΔⲆᐃ, ⵠ[527], 1, 203, 275, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[527], 1, 204, 272, 0],
		[ᐃⵠ, ⵠ[527], 2, 205, 273, ΔΔᐃ],
		[1, ⵠ[527], 2, 204, 276, Δⵠⵠ],
		[ᐃⵠ, ⵠ[527], ⵠᐃⵠΔ, 202, 276, ΔⲆⵠ],
		[1, ⵠ[527], ⵠΔⲆΔ, 199, 277, ΔⲆⵠ],
		[1, ⵠ[527], ΔⲆⲆᐃ, 202, 273, ⲆΔᐃ],
		[1, ⵠ[527], 2, 199, 270, 0],
		[ⵠⲆⲆ, ⵠ[527], 2, 194, 274, 0],
		[1, ⵠ[527], 2, 194, 277, 0],
		[1, ⵠ[527], ᐃⵠ, 192, 274, ΔⲆⵠ],
		[1, ⵠ[527], 1, 194, 267, 0],
		[ᐃⵠ, ⵠ[527], 2, 194, 265, 0],
		[1, ⵠ[527], ⲆⲆⵠΔ, 190, 272, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[527], 2, 191, 275, 0],
		[ⵠⵠⲆ, ⵠ[527], 2, 195, 274, ΔΔᐃ],
		[1, ⵠ[527], 2, 200, 271, Δⵠⵠ],
		[ᐃⵠ, ⵠ[527], ᐃⵠⵠ, 168, 243, ⲆⵠⲆ],
		[1, ⵠ[527], ΔⲆᐃ, 175, 240, 0],
		[1, ⵠ[527], 1, 169, 234, 0],
		[ⵠⵠⲆ, ⵠ[527], ⵠⵠⲆ, 162, 235, Δⵠⵠ],
		[1, ⵠ[527], ⵠΔⲆΔ, 169, 236, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[527], 2, 171, 234, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[527], ΔⲆⲆᐃ, 165, 238, 0],
		[ᐃⵠ, ⵠ[527], ⵠΔⵠᐃ, 173, 241, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[527], ⵠⲆΔΔ, 174, 238, 0],
		[1, ⵠ[527], ⵠΔⵠᐃ, 176, 240, ᐃⵠΔ],
		[1, ⵠ[527], 2, 169, 244, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[527], 2, 166, 243, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[527], ⲆⲆⵠΔ, 162, 236, ⲆΔᐃ],
		[1, ⵠ[527], 2, 164, 235, 0],
		[ⵠⲆⲆ, ⵠ[527], ⲆⲆⵠΔ, 162, 233, 0],
		[1, ⵠ[527], ⵠⵠⲆᐃ, 163, 236, 0],
		[ᐃⵠⵠ, ⵠ[527], 2, 174, 242, 0],
		[ᐃⵠ, ⵠ[527], 2, 171, 243, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[527], 1, 194, 206, 0],
		[1, ⵠ[527], ⵠⵠⲆ, 190, 214, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[527], ⵠⵠⲆ, 186, 206, ⲆⲆⲆ],
		[1, ⵠ[527], ᐃⵠ, 197, 207, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[527], 2, 196, 208, 0],
		[ⵠⲆⲆ, ⵠ[527], 2, 198, 206, 0],
		[ᐃⵠ, ⵠ[527], ΔⲆⲆᐃ, 198, 208, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[527], ⵠⲆΔΔ, 194, 204, 0],
		[ᐃⵠ, ⵠ[527], 2, 187, 206, 0],
		[1, ⵠ[527], ⵠⵠⲆᐃ, 186, 204, 0],
		[1, ⵠ[527], ᐃᐃΔⵠ, 189, 214, 0],
		[ᐃⵠ, ⵠ[527], 2, 189, 213, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 193, 215, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[527], ΔⲆⲆᐃ, 194, 214, 0],
		[ᐃⵠ, ⵠ[527], 2, 187, 215, 0],
		[1, ⵠ[527], 2, 193, 209, ⲆΔᐃ],
		[1, ⵠ[527], ⵠⵠⲆᐃ, 189, 211, ΔⲆⵠ],
		[1, ⵠ[527], ᐃᐃΔⵠ, 187, 209, 0],
		[ᐃⵠ, ⵠ[527], 2, 187, 207, ΔΔᐃ],
		[1, ⵠ[527], ᐃⵠΔⲆ, 191, 205, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[527], ᐃᐃΔⵠ, 189, 203, 0],
		[ᐃⵠ, ⵠ[370], 2, 224, 176, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 0, 224, 177, 1],
		[1, ⵠ[370], 3, 224, 178, 1],
		[1, ⵠ[370], 2, 224, 179, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 224, 180, 1],
		[1, ⵠ[370], 2, 224, 181, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆΔᐃ, 224, 182, 1],
		[ᐃⵠ, ⵠ[370], 2, 224, 183, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 0, 224, 184, ΔⲆᐃ],
		[1, ⵠ[370], ΔⵠⵠΔ, 224, 185, ᐃⵠ],
		[1, ⵠ[370], 2, 224, 186, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 0, 224, 187, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 224, 188, ⵠⲆⲆ],
		[1, ⵠ[370], ΔΔᐃ, 224, 189, ᐃⵠ],
		[1, ⵠ[370], 1, 224, 190, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 191, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔΔᐃ, 224, 192, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 224, 193, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 194, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 1, 224, 195, 1],
		[1, ⵠ[370], 2, 224, 196, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 0, 224, 197, ᐃⵠ],
		[1, ⵠ[370], 3, 224, 198, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 199, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 1, 224, 200, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 224, 201, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 3, 224, 202, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 203, 1],
		[1, ⵠ[370], 1, 224, 204, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 224, 205, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 206, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 224, 207, ᐃⵠ],
		[1, ⵠ[370], 3, 224, 208, 1],
		[1, ⵠ[370], 2, 224, 209, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 224, 210, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 223, 211, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 1, 224, 211, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 224, 212, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 224, 213, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠ, 224, 214, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⵠⵠ, 224, 215, 1],
		[ᐃⵠ, ⵠ[370], 0, 224, 216, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆ, 224, 217, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 224, 218, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔᐃⲆ, 224, 219, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 223, 215, 1],
		[1, ⵠ[370], 2, 223, 214, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 223, 212, ΔⲆᐃ],
		[1, ⵠ[370], 2, 223, 216, 1],
		[1, ⵠ[370], ⵠΔⵠⲆ, 223, 217, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⵠ, 223, 218, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 220, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], 0, 224, 222, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 0, 223, 209, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⲆ, 223, 205, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 224, 221, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 223, 219, 1],
		[1, ⵠ[370], 2, 223, 220, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 223, 213, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 223, 210, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 223, 178, 1],
		[1, ⵠ[370], 3, 223, 179, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 3, 223, 181, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔᐃⲆ, 223, 182, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆ, 223, 185, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 223, 184, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 223, 186, ΔⲆᐃ],
		[1, ⵠ[370], ᐃⵠΔ, 223, 180, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 223, 183, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 223, 187, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆᐃ, 223, 188, 1],
		[ᐃⵠ, ⵠ[370], 2, 223, 189, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 223, 190, ᐃⵠ],
		[1, ⵠ[370], 3, 223, 191, 1],
		[1, ⵠ[370], 1, 223, 192, ᐃⵠ],
		[1, ⵠ[370], 2, 223, 193, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 223, 194, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 3, 223, 195, 1],
		[1, ⵠ[370], ⵠⵠⲆ, 223, 196, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 223, 197, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 223, 199, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 223, 198, ᐃⵠⵠ],
		[1, ⵠ[370], Δⵠⵠ, 223, 200, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 223, 201, 1],
		[ᐃⵠ, ⵠ[370], 0, 223, 202, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 3, 223, 203, 1],
		[1, ⵠ[370], 3, 223, 204, 1],
		[1, ⵠ[370], 3, 223, 206, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 3, 223, 207, 1],
		[1, ⵠ[370], 3, 223, 208, 1],
		[1, ⵠ[370], 2, 223, 221, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 223, 222, 1],
		[1, ⵠ[370], Δⵠⵠ, 223, 224, 1],
		[ΔⲆᐃ, ⵠ[370], Δⵠⵠ, 224, 228, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 224, 230, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⵠ, 223, 234, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 223, 223, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 224, 223, 1],
		[1, ⵠ[370], 2, 224, 224, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 224, 225, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠⵠ, 223, 226, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠ, 224, 231, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠⵠ, 223, 232, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 3, 223, 225, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⵠΔ, 224, 226, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⲆΔ, 223, 227, 1],
		[1, ⵠ[370], Δᐃᐃᐃ, 224, 227, ᐃⵠ],
		[1, ⵠ[370], 3, 223, 229, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 223, 228, ΔⲆᐃ],
		[1, ⵠ[370], Δᐃᐃᐃ, 224, 229, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 223, 230, 1],
		[1, ⵠ[370], ΔⵠⵠΔ, 223, 231, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], Δᐃᐃᐃ, 224, 232, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⵠⵠΔ, 224, 233, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆⲆΔ, 223, 233, 1],
		[1, ⵠ[370], 3, 224, 234, 1],
		[ᐃⵠ, ⵠ[370], 3, 224, 235, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⵠⵠ, 223, 235, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆ, 224, 236, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 223, 236, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 223, 237, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆΔⵠ, 224, 237, 1],
		[1, ⵠ[370], 3, 224, 238, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⵠ, 224, 239, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 1, 223, 241, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 224, 243, 1],
		[1, ⵠ[370], 0, 223, 245, 1],
		[1, ⵠ[370], ⲆΔᐃ, 224, 247, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 223, 240, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 223, 239, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 224, 240, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 241, 1],
		[1, ⵠ[370], 2, 224, 242, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 223, 242, 1],
		[ᐃⵠ, ⵠ[370], 2, 223, 243, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 223, 244, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠᐃⵠΔ, 224, 244, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 224, 245, ᐃⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 224, 246, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 3, 223, 238, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠⲆ, 223, 246, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 223, 247, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 223, 249, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠⵠ, 224, 253, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 1, 223, 256, ᐃⵠ],
		[1, ⵠ[370], 0, 223, 254, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 250, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⵠⵠ, 223, 248, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⲆΔⵠ, 223, 250, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 223, 252, 1],
		[ᐃⵠ, ⵠ[370], 3, 223, 255, ᐃⵠ],
		[1, ⵠ[370], 3, 223, 257, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 248, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 224, 249, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 223, 251, ᐃⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 224, 251, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 252, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃᐃΔⵠ, 223, 253, 1],
		[1, ⵠ[370], 2, 224, 254, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 255, ᐃⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 224, 256, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 257, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 224, 258, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 223, 261, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⲆΔᐃ, 224, 263, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 224, 266, 1],
		[1, ⵠ[370], ⲆⲆⲆ, 224, 272, ΔⲆᐃ],
		[1, ⵠ[370], ΔⲆⵠ, 223, 270, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 0, 223, 275, ᐃⵠ],
		[1, ⵠ[370], ⵠⵠⲆ, 223, 259, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 223, 264, 1],
		[1, ⵠ[370], ᐃⵠⵠ, 223, 268, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆᐃ, 224, 274, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 223, 258, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 223, 260, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 223, 263, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 223, 265, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 223, 267, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ᐃᐃΔⵠ, 223, 271, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 223, 273, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆⵠⵠ, 223, 262, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⵠⵠΔ, 223, 266, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 3, 223, 269, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⵠⵠΔ, 223, 272, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⵠΔ, 223, 274, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 224, 275, 1],
		[1, ⵠ[370], ⵠⲆⲆΔ, 224, 273, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆΔⵠ, 224, 271, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 224, 270, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 224, 269, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆⲆΔ, 224, 268, 1],
		[1, ⵠ[370], ⵠⲆⲆΔ, 224, 267, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 224, 265, 1],
		[1, ⵠ[370], Δᐃᐃᐃ, 224, 264, 1],
		[1, ⵠ[370], 3, 224, 262, 1],
		[1, ⵠ[370], 3, 224, 261, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆⲆΔ, 224, 260, 1],
		[ⵠⲆⲆ, ⵠ[370], Δᐃᐃᐃ, 224, 259, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 223, 276, 1],
		[1, ⵠ[370], 1, 224, 276, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆ, 224, 280, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 223, 281, 1],
		[1, ⵠ[370], 1, 224, 286, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], Δⵠⵠ, 223, 280, ᐃⵠ],
		[1, ⵠ[370], 0, 223, 284, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 224, 288, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⵠ, 224, 279, 1],
		[1, ⵠ[370], 2, 223, 277, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 277, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 224, 278, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 224, 281, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 224, 283, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 224, 282, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 224, 284, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 224, 285, 1],
		[1, ⵠ[370], 2, 224, 287, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 223, 287, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 223, 285, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 223, 283, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 223, 279, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 223, 278, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 223, 282, 1],
		[1, ⵠ[370], 3, 223, 286, 1],
		[ᐃⵠ, ⵠ[370], ⲆⵠⵠΔ, 223, 289, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⵠⵠΔ, 224, 289, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 223, 288, ᐃⵠ],
		[1, ⵠ[370], 2, 224, 290, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 223, 290, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 292, ᐃⵠⵠ],
		[1, ⵠ[370], ΔΔᐃ, 223, 294, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⵠⲆ, 224, 297, ΔⲆᐃ],
		[1, ⵠ[370], ΔΔᐃ, 223, 299, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 223, 291, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 224, 291, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 223, 292, 1],
		[ᐃⵠ, ⵠ[370], ᐃᐃΔⵠ, 223, 293, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 224, 293, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 224, 294, ⵠⲆⲆ],
		[1, ⵠ[370], 1, 224, 295, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 223, 295, 1],
		[1, ⵠ[370], 2, 223, 296, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 296, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 223, 297, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 223, 298, ᐃⵠ],
		[1, ⵠ[370], 2, 224, 298, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 224, 299, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 223, 300, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠ, 224, 300, 1],
		[1, ⵠ[370], ⲆⲆⲆ, 223, 301, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 0, 224, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⵠ, 224, 304, ᐃⵠ],
		[1, ⵠ[370], 3, 224, 301, ΔⲆᐃ],
		[1, ⵠ[370], 3, 224, 303, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆΔᐃ, 221, 303, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 0, 219, 304, 1],
		[1, ⵠ[370], 1, 222, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 222, 302, 1],
		[1, ⵠ[370], 2, 223, 302, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 223, 303, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 222, 303, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 223, 304, 1],
		[1, ⵠ[370], 2, 221, 304, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 220, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 220, 303, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 220, 302, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 221, 302, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 219, 303, 1],
		[ᐃⵠ, ⵠ[370], 0, 217, 302, ᐃⵠ],
		[1, ⵠ[370], 0, 215, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆΔᐃ, 214, 302, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 218, 302, ⵠⵠⲆ],
		[1, ⵠ[370], 1, 217, 304, 1],
		[1, ⵠ[370], 1, 215, 302, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 219, 302, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 218, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 218, 304, 1],
		[ᐃⵠ, ⵠ[370], 2, 217, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 216, 304, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 215, 303, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 216, 303, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 216, 302, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 214, 303, 1],
		[1, ⵠ[370], 2, 214, 304, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 212, 302, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⲆ, 210, 303, 1],
		[1, ⵠ[370], 0, 212, 304, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⲆⵠ, 208, 304, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 210, 302, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆᐃ, 208, 303, 1],
		[1, ⵠ[370], 2, 213, 302, 1],
		[1, ⵠ[370], 2, 213, 303, 1],
		[ᐃⵠ, ⵠ[370], 2, 213, 304, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 212, 303, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 211, 304, ᐃⵠ],
		[1, ⵠ[370], 2, 211, 303, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 211, 302, 1],
		[1, ⵠ[370], 2, 209, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 209, 303, ΔⲆᐃ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 209, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 210, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 208, 302, 1],
		[1, ⵠ[370], 0, 206, 303, 1],
		[1, ⵠ[370], ⲆΔᐃ, 203, 304, 1],
		[1, ⵠ[370], 0, 200, 303, 1],
		[1, ⵠ[370], 0, 199, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆΔᐃ, 195, 304, ᐃⵠ],
		[1, ⵠ[370], 0, 191, 303, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 0, 193, 304, ΔⲆᐃ],
		[1, ⵠ[370], 0, 189, 304, 1],
		[1, ⵠ[370], 1, 204, 303, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⲆ, 197, 302, 1],
		[ᐃⵠ, ⵠ[370], 0, 202, 302, ΔⲆᐃ],
		[1, ⵠ[370], 0, 188, 302, 1],
		[1, ⵠ[370], Δⵠⵠ, 194, 302, 1],
		[ᐃⵠ, ⵠ[370], 1, 197, 303, 1],
		[1, ⵠ[370], ΔⲆᐃ, 201, 304, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⲆᐃ, 192, 302, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⲆ, 189, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 205, 302, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 1, 188, 304, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 207, 302, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 207, 303, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 207, 304, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 206, 304, 1],
		[1, ⵠ[370], 2, 206, 302, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 205, 303, ΔⲆᐃ],
		[1, ⵠ[370], 2, 204, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 205, 304, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 204, 302, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 203, 302, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 203, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 202, 303, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 201, 303, 1],
		[1, ⵠ[370], 2, 201, 302, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 200, 302, 1],
		[ᐃⵠ, ⵠ[370], 2, 199, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 198, 303, 1],
		[1, ⵠ[370], 2, 198, 302, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 199, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 200, 304, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 202, 304, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 197, 304, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 198, 304, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 196, 304, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 196, 303, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆⲆᐃ, 196, 302, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 195, 302, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 195, 303, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 194, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 194, 304, 1],
		[1, ⵠ[370], 2, 193, 303, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 193, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 192, 303, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 192, 304, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 191, 304, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 190, 304, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 190, 303, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠΔⲆ, 189, 302, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 190, 302, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 191, 302, 1],
		[1, ⵠ[370], 2, 188, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 186, 303, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 183, 304, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔΔᐃ, 184, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 181, 302, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ΔΔᐃ, 176, 302, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆΔᐃ, 178, 303, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 173, 304, ΔⲆᐃ],
		[1, ⵠ[370], ΔⲆⵠ, 170, 303, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ⲆⵠⲆ, 172, 302, 1],
		[ⵠⵠⲆ, ⵠ[370], 1, 182, 303, ΔⲆᐃ],
		[1, ⵠ[370], 1, 178, 304, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 1, 175, 304, 1],
		[1, ⵠ[370], ⵠⵠⲆ, 173, 302, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠⵠ, 185, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⲆ, 169, 304, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 3, 187, 304, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆΔⵠ, 186, 304, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆΔ, 187, 303, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 3, 187, 302, ΔⲆᐃ],
		[1, ⵠ[370], 3, 186, 302, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 185, 302, ᐃⵠ],
		[1, ⵠ[370], 3, 185, 303, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 3, 184, 303, 1],
		[1, ⵠ[370], 3, 183, 303, ⵠⲆⲆ],
		[1, ⵠ[370], Δᐃᐃᐃ, 183, 302, ᐃⵠ],
		[1, ⵠ[370], 3, 182, 302, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 3, 184, 304, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 182, 304, 1],
		[1, ⵠ[370], ⵠΔⵠⲆ, 181, 304, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔᐃⲆ, 179, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 180, 304, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔᐃⲆ, 181, 303, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ΔⵠⵠΔ, 180, 303, 1],
		[ᐃⵠ, ⵠ[370], ΔⵠⵠΔ, 179, 303, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⵠⵠΔ, 180, 302, 1],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 179, 302, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠⲆ, 178, 302, 1],
		[1, ⵠ[370], 3, 177, 302, ΔⲆᐃ],
		[1, ⵠ[370], 3, 177, 304, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⵠⵠΔ, 177, 303, 1],
		[ᐃⵠ, ⵠ[370], 3, 176, 303, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 176, 304, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⵠΔ, 174, 304, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 175, 303, ᐃⵠ],
		[1, ⵠ[370], 3, 174, 303, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 173, 303, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 3, 172, 303, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⵠΔ, 171, 303, 1],
		[1, ⵠ[370], 3, 170, 304, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 171, 304, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔᐃⲆ, 172, 304, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 174, 302, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 175, 302, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 171, 302, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 170, 302, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⵠⵠΔ, 169, 302, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⵠⵠΔ, 169, 303, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 168, 302, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 166, 303, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 163, 304, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 161, 302, 1],
		[1, ⵠ[370], 0, 159, 303, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⵠ, 152, 304, 1],
		[1, ⵠ[370], 0, 155, 303, 1],
		[1, ⵠ[370], 1, 164, 303, 1],
		[1, ⵠ[370], 1, 162, 303, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⲆ, 158, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⲆ, 156, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 153, 302, ΔⲆᐃ],
		[1, ⵠ[370], 1, 154, 304, 1],
		[1, ⵠ[370], 2, 168, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 168, 303, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 167, 303, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 167, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 166, 304, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 165, 304, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 164, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 165, 303, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 167, 302, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 166, 302, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 165, 302, 1],
		[1, ⵠ[370], 2, 164, 302, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 163, 302, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 162, 302, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 163, 303, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 162, 304, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 160, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 159, 304, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 161, 304, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 161, 303, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 160, 303, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 160, 302, 1],
		[ᐃⵠ, ⵠ[370], ⵠᐃⵠΔ, 158, 302, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 159, 302, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 157, 302, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 156, 303, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 157, 303, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 158, 303, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 157, 304, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 156, 304, ᐃⵠ],
		[1, ⵠ[370], 2, 155, 304, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 153, 304, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 153, 303, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 154, 303, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 154, 302, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⲆΔ, 155, 302, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 152, 303, 1],
		[1, ⵠ[370], 2, 152, 302, 1],
		[1, ⵠ[370], 0, 151, 302, 1],
		[1, ⵠ[370], 0, 149, 303, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⲆ, 145, 304, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⲆ, 147, 302, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 143, 303, ΔⲆᐃ],
		[1, ⵠ[370], 0, 141, 303, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠⵠ, 147, 304, ᐃⵠ],
		[1, ⵠ[370], 1, 145, 302, 1],
		[1, ⵠ[370], 1, 142, 302, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠ, 150, 304, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 151, 304, 1],
		[1, ⵠ[370], 2, 151, 303, ⵠⲆⲆ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 150, 303, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 150, 302, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 148, 302, ᐃⵠ],
		[1, ⵠ[370], 2, 146, 302, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 144, 302, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 141, 302, 1],
		[1, ⵠ[370], 2, 141, 304, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 142, 304, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆΔΔ, 142, 303, 1],
		[1, ⵠ[370], 2, 143, 304, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⲆᐃ, 144, 304, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 144, 303, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 148, 304, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 148, 303, ᐃⵠ],
		[1, ⵠ[370], 2, 146, 303, ΔⲆᐃ],
		[1, ⵠ[370], 2, 145, 303, 1],
		[1, ⵠ[370], 2, 147, 303, ᐃⵠ],
		[1, ⵠ[370], 2, 146, 304, 1],
		[1, ⵠ[370], 2, 149, 304, ᐃⵠ],
		[1, ⵠ[370], 3, 149, 302, 1],
		[1, ⵠ[370], 3, 143, 302, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 0, 139, 304, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 138, 302, ⵠⲆⲆ],
		[1, ⵠ[370], 1, 139, 302, ΔⲆᐃ],
		[1, ⵠ[370], 2, 140, 302, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 140, 303, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 139, 303, 1],
		[1, ⵠ[370], 2, 138, 303, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⵠⲆᐃ, 138, 304, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 140, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ΔΔᐃ, 137, 304, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 0, 135, 303, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⵠ, 133, 304, ΔⲆᐃ],
		[1, ⵠ[370], ᐃⵠⵠ, 135, 304, 1],
		[ᐃⵠ, ⵠ[370], ᐃⵠ, 136, 302, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 137, 302, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 136, 303, 1],
		[ᐃⵠ, ⵠ[370], 2, 137, 303, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 136, 304, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 134, 304, ΔⲆᐃ],
		[1, ⵠ[370], 2, 134, 303, ᐃⵠ],
		[1, ⵠ[370], 2, 133, 303, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 132, 304, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 131, 302, ᐃⵠ],
		[1, ⵠ[370], 0, 134, 302, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 0, 129, 304, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠ, 130, 303, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 1, 132, 302, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 135, 302, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆⲆᐃ, 133, 302, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 132, 303, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 131, 303, 1],
		[1, ⵠ[370], 2, 130, 304, ΔⲆᐃ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 131, 304, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆΔΔ, 128, 304, 1],
		[1, ⵠ[370], 2, 129, 303, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 130, 302, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠⲆ, 127, 304, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 132, 301, 1],
		[1, ⵠ[370], 2, 133, 301, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 134, 301, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 135, 301, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆⲆΔ, 131, 301, 1],
		[1, ⵠ[370], ΔⲆΔⵠ, 136, 301, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 136, 178, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔ, 136, 183, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 136, 182, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⲆᐃ, 136, 181, 1],
		[1, ⵠ[370], 0, 136, 179, 1],
		[1, ⵠ[370], 3, 136, 180, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 135, 183, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠⵠ, 135, 182, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔᐃⲆ, 135, 180, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⲆ, 134, 183, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 133, 183, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 3, 133, 182, 1],
		[1, ⵠ[370], ᐃⵠⵠ, 132, 183, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⲆΔ, 131, 183, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 135, 181, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 134, 182, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⲆΔ, 134, 181, 1],
		[1, ⵠ[527], 0, 213, 301, ⲆΔᐃ],
		[1, ⵠ[527], ⲆΔᐃ, 204, 301, ᐃⵠΔ],
		[1, ⵠ[527], ᐃⵠ, 196, 288, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[527], 1, 198, 283, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[527], ᐃⵠ, 190, 288, ΔⲆⵠ],
		[1, ⵠ[527], ⵠⵠⲆ, 189, 296, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[527], 1, 193, 293, 0],
		[1, ⵠ[527], 1, 183, 292, 0],
		[ΔⲆᐃ, ⵠ[527], 1, 186, 287, 0],
		[ⵠⲆⲆ, ⵠ[527], 1, 190, 290, 0],
		[1, ⵠ[527], 1, 218, 271, 0],
		[1, ⵠ[527], ᐃⵠⵠ, 220, 266, ΔΔᐃ],
		[1, ⵠ[527], ΔⲆᐃ, 211, 268, 0],
		[1, ⵠ[527], 1, 210, 274, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[527], ΔⲆᐃ, 205, 263, 0],
		[ᐃⵠⵠ, ⵠ[527], ΔⲆᐃ, 216, 258, 0],
		[ⵠⲆⲆ, ⵠ[527], 2, 201, 294, ⲆⲆⲆ],
		[1, ⵠ[527], 2, 190, 296, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[527], ⵠⲆΔΔ, 188, 299, Δⵠⵠ],
		[1, ⵠ[527], ᐃⵠΔⲆ, 186, 297, Δⵠⵠ],
		[1, ⵠ[527], 2, 188, 296, 0],
		[ᐃⵠ, ⵠ[527], 2, 189, 291, 0],
		[ᐃⵠⵠ, ⵠ[527], ΔⲆⲆᐃ, 189, 286, ⲆΔᐃ],
		[1, ⵠ[527], ⵠᐃⵠΔ, 191, 286, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[527], 2, 197, 286, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 195, 290, 0],
		[ⵠⲆⲆ, ⵠ[527], 2, 186, 288, 0],
		[1, ⵠ[527], 2, 184, 290, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[527], 2, 183, 293, ⲆⵠⲆ],
		[1, ⵠ[527], 2, 198, 286, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[527], 2, 196, 283, 0],
		[ᐃⵠ, ⵠ[527], 2, 196, 281, 0],
		[1, ⵠ[527], ⵠⲆΔΔ, 201, 280, 0],
		[ᐃⵠ, ⵠ[527], ⵠⲆΔΔ, 205, 287, 0],
		[ⵠⲆⲆ, ⵠ[527], ⵠᐃⵠΔ, 209, 283, 0],
		[1, ⵠ[527], ΔⲆⲆᐃ, 212, 280, ΔⲆⵠ],
		[1, ⵠ[527], 2, 209, 277, 0],
		[ᐃⵠ, ⵠ[527], ᐃⵠΔⲆ, 217, 278, 0],
		[1, ⵠ[527], 2, 219, 275, ΔⲆⵠ],
		[1, ⵠ[527], 2, 220, 271, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[527], 2, 220, 267, ⲆⲆⲆ],
		[1, ⵠ[527], 2, 217, 265, 0],
		[ΔⲆᐃ, ⵠ[527], 2, 213, 267, ᐃⵠΔ],
		[1, ⵠ[527], ΔⲆⲆᐃ, 208, 264, 0],
		[1, ⵠ[527], 2, 206, 261, Δⵠⵠ],
		[1, ⵠ[527], 2, 203, 265, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[527], ⵠᐃⵠΔ, 204, 270, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[527], ⲆⲆⵠΔ, 196, 267, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[527], 2, 214, 261, 0],
		[1, ⵠ[527], 2, 211, 260, ⲆⵠⲆ],
		[1, ⵠ[527], ⵠⵠⲆᐃ, 218, 256, 0],
		[ᐃⵠⵠ, ⵠ[527], ⵠΔⲆΔ, 219, 262, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[527], 2, 220, 253, ΔⲆⵠ],
		[1, ⵠ[527], ΔⲆⲆᐃ, 211, 257, 0],
		[ᐃⵠⵠ, ⵠ[220], 3, 198, 27, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[220], ⲆⵠⵠΔ, 201, 30, 1],
		[1, ⵠ[220], ⵠΔᐃⲆ, 200, 32, 1],
		[ⵠⲆⲆ, ⵠ[220], 3, 198, 33, ⵠⵠⲆ],
		[1, ⵠ[220], 3, 196, 33, 1],
		[ᐃⵠⵠ, ⵠ[220], Δᐃᐃᐃ, 194, 32, ⵠⲆⲆ],
		[1, ⵠ[220], 3, 194, 28, 1],
		[ΔⲆᐃ, ⵠ[220], 0, 200, 28, 1],
		[ⵠⲆⲆ, ⵠ[220], Δⵠⵠ, 193, 30, 1],
		[ᐃⵠ, ⵠ[220], 3, 196, 27, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[220], ⲆⵠⵠΔ, 199, 30, 1],
		[ᐃⵠ, ⵠ[220], ΔⲆΔⵠ, 197, 29, 1],
		[1, ⵠ[220], 3, 195, 30, 1],
		[ᐃⵠ, ⵠ[220], ⵠΔⵠⲆ, 197, 31, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[220], 2, 201, 33, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[220], 4, 202, 34, ΔⲆᐃ],
		[1, ⵠ[220], 4, 202, 35, 1],
		[ⵠⵠⲆ, ⵠ[220], ⲆⵠⲆⲆ, 203, 36, ΔⲆᐃ],
		[1, ⵠ[220], 4, 204, 37, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[220], ᐃᐃΔⵠ, 205, 38, 1],
		[ΔⲆᐃ, ⵠ[220], 5, 205, 39, 1],
		[1, ⵠ[220], ⲆΔⵠᐃ, 205, 40, 1],
		[1, ⵠ[220], ⵠΔⵠᐃ, 206, 41, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[220], 1, 207, 42, 1],
		[ᐃⵠⵠ, ⵠ[220], 1, 205, 41, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[220], ⵠᐃᐃⲆ, 208, 43, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[220], 4, 209, 43, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[220], ΔⲆᐃ, 210, 43, ᐃⵠⵠ],
		[1, ⵠ[220], ⵠᐃⵠΔ, 211, 43, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[220], ⲆⲆᐃⵠ, 212, 43, 1],
		[ⵠⵠⲆ, ⵠ[220], 4, 213, 44, 1],
		[1, ⵠ[220], Δᐃᐃᐃ, 223, 54, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], ⵠⲆⵠⵠ, 221, 53, 1],
		[ⵠⵠⲆ, ⵠ[220], ⵠΔᐃⲆ, 219, 53, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[220], 4, 218, 52, 1],
		[ⵠⵠⲆ, ⵠ[220], 4, 217, 51, 1],
		[ΔⲆᐃ, ⵠ[220], ⵠᐃᐃⲆ, 216, 51, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], ⵠⵠⲆ, 215, 50, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], ᐃΔⲆΔ, 212, 46, ⵠⵠⲆ],
		[1, ⵠ[220], 1, 210, 44, 1],
		[1, ⵠ[220], ⵠⲆⵠⵠ, 206, 50, ᐃⵠⵠ],
		[1, ⵠ[239], 0, 217, 24, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[239], ΔⲆⵠ, 207, ΔⲆⲆⲆᐃ, 1],
		[1, ⵠ[20], 44, 54, 14, ⲆⵠⲆ],
		[1, ⵠ[ⵠⵠᐃᐃ], 44, 53, ⲆⲆΔᐃⵠ, ⲆΔᐃ],
		[1, ⵠ[20], 44, 51, 16, ⲆⲆⲆ],
		[1, ⵠ[ΔΔⵠΔ], 44, 49, Ⲇⵠⵠⵠᐃ, ⲆⵠⲆ],
		[1, ⵠ[ⵠᐃⲆΔ], 44, 48, Δᐃⵠᐃᐃ, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 21, 78, 293, Δⵠⵠ],
		[ᐃⵠ, ⵠ[370], 0, 221, ⲆⵠΔᐃⲆ, 1],
		[ᐃⵠⵠ, ⵠ[370], Δⵠⵠ, 224, ⲆⲆⵠⲆⵠ, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 1, 223, ⲆΔΔΔᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 224, 8, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 222, 8, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 224, ᐃⲆⵠⲆΔ, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆⵠ, 222, ⲆΔⵠᐃ, 1],
		[1, ⵠ[370], 0, 219, ᐃⲆⵠΔᐃ, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 220, 5, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 217, ΔΔⲆᐃⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 224, 5, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 223, Δᐃⵠⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, ΔΔⲆᐃⵠ, 1],
		[1, ⵠ[370], 2, 223, 7, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 223, 6, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 222, ⲆΔᐃⵠᐃ, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 222, 7, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 221, 7, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 221, 6, 1],
		[ᐃⵠ, ⵠ[370], 2, 221, 5, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ᐃᐃΔⵠ, 220, 6, 1],
		[1, ⵠ[370], 2, 220, 7, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠΔⲆ, 220, 8, ᐃⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 219, 8, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 219, ⲆΔᐃⵠᐃ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 219, 5, 1],
		[1, ⵠ[370], 0, 218, Δᐃⵠⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 216, ⲆⵠΔᐃⲆ, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 218, 8, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 217, ΔⲆᐃⵠᐃ, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 218, 7, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 218, 6, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 217, 6, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 217, ΔⲆⲆΔ, 1],
		[1, ⵠ[370], 1, 215, ⲆΔᐃⵠᐃ, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆᐃ, 213, 5, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 0, 214, 6, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⲆ, 216, 5, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 213, ⵠⵠΔⵠΔ, 1],
		[1, ⵠ[370], 0, 211, ΔΔⲆⵠⵠ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⵠ, 209, ⲆΔᐃΔ, 1],
		[1, ⵠ[370], 0, 208, ᐃⲆⵠⲆⲆ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 207, ⵠⵠΔⵠΔ, ᐃⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 216, ᐃⲆᐃᐃΔ, 1],
		[1, ⵠ[370], 2, 216, ⵠⲆⲆⵠⲆ, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 215, 7, ᐃⵠ],
		[1, ⵠ[370], 2, 215, ⵠⵠΔⵠΔ, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 214, ⵠᐃᐃΔⲆ, 1],
		[1, ⵠ[370], 2, 214, 7, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 215, ⲆⲆᐃⵠ, 1],
		[1, ⵠ[370], 2, 214, 5, 1],
		[1, ⵠ[370], 2, 213, 6, 1],
		[ᐃⵠ, ⵠ[370], 2, 213, 7, 1],
		[1, ⵠ[370], 2, 212, Ⲇⵠᐃᐃᐃ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⵠⲆ, 211, Δᐃⵠⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆ, 209, ⵠᐃᐃΔⲆ, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 212, ⵠⵠΔⵠΔ, 1],
		[1, ⵠ[370], 2, 211, 8, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 210, 8, ΔⲆᐃ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 209, ᐃⲆⲆΔᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 210, ᐃⲆⵠⲆⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 210, ⵠᐃⲆⵠ, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 212, 6, 1],
		[1, ⵠ[370], 2, 212, ⲆᐃᐃΔ, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 211, 6, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 210, ΔⲆⲆΔ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 209, 6, 1],
		[ᐃⵠ, ⵠ[370], 2, 208, 6, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 208, 5, 1],
		[1, ⵠ[370], 2, 207, ᐃⲆⵠΔᐃ, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔⲆ, 207, 6, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 207, ΔⲆⲆΔ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 206, 5, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 208, 8, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 206, Ⲇᐃᐃᐃⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], ΔΔᐃ, 204, ΔⲆᐃᐃᐃ, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⲆ, 205, ᐃⲆⵠⲆΔ, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 203, 5, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 202, ΔΔⲆⵠⵠ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 0, 199, 8, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⲆ, 200, ⵠⲆΔⲆᐃ, ᐃⵠ],
		[1, ⵠ[370], 0, 197, ⵠΔⵠⵠⲆ, 1],
		[1, ⵠ[370], 0, 195, ⲆΔΔΔᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⲆΔᐃ, 194, 6, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 202, 8, 1],
		[1, ⵠ[370], 1, 206, ⵠᐃⵠⲆᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], 1, 201, ⲆΔⵠᐃ, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⲆⲆ, 197, 8, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 1, 192, ᐃⵠⲆΔⲆ, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 1, 195, 5, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 205, ⲆⵠΔΔⵠ, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 205, ⵠⵠΔⵠΔ, 1],
		[ᐃⵠ, ⵠ[370], 2, 206, ⵠᐃᐃΔⲆ, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 204, 7, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 204, ⵠΔⵠⵠⲆ, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠᐃⵠΔ, 204, ΔⲆⲆΔ, 1],
		[1, ⵠ[370], 2, 205, ΔⲆⲆΔ, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 203, ⵠΔⵠⵠⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 203, 7, 1],
		[ᐃⵠ, ⵠ[370], 2, 203, 8, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆΔΔ, 201, ΔⲆᐃᐃᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 200, ⲆΔΔΔᐃ, ΔⲆᐃ],
		[1, ⵠ[370], 2, 200, Ⲇⵠᐃᐃᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 201, ⲆⵠΔΔⵠ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 201, 6, 1],
		[1, ⵠ[370], 2, 202, 5, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 202, 6, ΔⲆᐃ],
		[1, ⵠ[370], 2, 200, 5, 1],
		[1, ⵠ[370], 2, 199, ᐃᐃⵠⵠ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 197, 5, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 196, ΔⲆⲆΔ, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 198, 5, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⲆᐃ, 198, 6, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 199, 6, 1],
		[1, ⵠ[370], 2, 199, 7, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 198, 7, 1],
		[1, ⵠ[370], 2, 198, 8, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 197, ⵠΔᐃⲆᐃ, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 196, 7, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 196, ⲆⲆᐃᐃᐃ, ΔⲆᐃ],
		[1, ⵠ[370], 2, 196, 6, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 195, ᐃⵠΔⵠⵠ, ᐃⵠ],
		[1, ⵠ[370], 2, 195, 7, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 194, ᐃⲆⵠⲆⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 193, ⵠⵠΔⵠΔ, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 194, 8, ᐃⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 193, 7, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 193, 6, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 193, ⲆΔᐃΔ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 194, 5, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⲆΔᐃ, 192, 5, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 0, 191, ΔⲆᐃᐃᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⲆ, 190, ⲆΔᐃⵠᐃ, ᐃⵠ],
		[1, ⵠ[370], ΔΔᐃ, 188, ⵠΔᐃⲆᐃ, 1],
		[1, ⵠ[370], ΔΔᐃ, 186, 8, 1],
		[ᐃⵠ, ⵠ[370], 0, 186, ⲆΔᐃΔ, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 0, 184, ᐃⲆⵠΔᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 182, ⲆⵠΔᐃⲆ, 1],
		[1, ⵠ[370], Δⵠⵠ, 181, ⵠⲆΔⲆᐃ, 1],
		[1, ⵠ[370], 1, 189, 8, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆ, 183, 8, 1],
		[1, ⵠ[370], 1, 188, ᐃᐃⵠⵠ, 1],
		[1, ⵠ[370], 1, 185, ᐃⲆⵠⲆΔ, 1],
		[1, ⵠ[370], ΔⲆᐃ, 180, ⵠᐃⵠⲆᐃ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 1, 183, 5, 1],
		[1, ⵠ[370], 1, 178, 8, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃⵠⵠ, 177, 6, ΔⲆᐃ],
		[1, ⵠ[370], 1, 173, ⲆⵠΔΔⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆ, 171, ᐃⵠⲆΔⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 177, 8, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 0, 175, 7, ⵠⵠⲆ],
		[1, ⵠ[370], Δⵠⵠ, 179, ⲆⲆᐃⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 174, ⲆΔⵠᐃ, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⲆΔᐃ, 176, ᐃᐃⵠⵠ, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], Δⵠⵠ, 172, ΔⲆᐃⵠᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 170, 8, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 169, ⵠⲆⵠⵠᐃ, 1],
		[1, ⵠ[370], 2, 192, ⵠΔⵠⵠⲆ, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⲆᐃ, 192, 8, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 191, ᐃⲆⲆΔᐃ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 191, Ⲇᐃᐃᐃⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 191, ⲆⲆᐃⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 190, 5, ΔⲆᐃ],
		[1, ⵠ[370], 2, 189, 5, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 189, 6, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠΔⲆ, 189, 7, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 190, 7, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 190, 8, ΔⲆᐃ],
		[1, ⵠ[370], 2, 188, 8, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 187, 8, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 187, ⵠΔᐃⲆᐃ, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆᐃ, 187, 6, 1],
		[1, ⵠ[370], 2, 188, 6, 1],
		[1, ⵠ[370], 2, 187, ᐃᐃⵠⵠ, 1],
		[ᐃⵠ, ⵠ[370], 2, 186, ⵠⲆΔⲆᐃ, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 186, 7, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 185, 7, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 185, 8, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 184, ⲆⲆᐃᐃᐃ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 183, ⵠⲆⲆⵠⲆ, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 183, ⵠΔⵠⵠⲆ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 184, ⲆΔᐃⵠᐃ, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 184, 5, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 185, 5, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 2, 182, ⵠᐃⲆⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 182, 7, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 181, ᐃⲆⵠΔᐃ, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 181, ⲆΔⵠⵠⲆ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 180, ⲆⲆᐃᐃᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 179, 8, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 182, ⲆⲆᐃⵠ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 181, ΔⲆⲆΔ, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 180, Δᐃⵠⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 180, ⵠⲆⵠⵠᐃ, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 179, ᐃⵠΔⵠⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 179, ⵠⲆⲆⵠⲆ, ΔⲆᐃ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 178, ᐃⲆⵠⲆⲆ, 1],
		[1, ⵠ[370], 2, 178, ⵠᐃⲆⵠ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 178, Δᐃⵠⵠ, 1],
		[1, ⵠ[370], 2, 177, ⲆᐃᐃΔ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 177, 7, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠᐃⵠΔ, 176, ᐃⵠⲆΔⲆ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 176, Ⲇᐃᐃᐃⵠ, ᐃⵠ],
		[1, ⵠ[370], 2, 175, ⵠᐃⲆⵠ, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 175, ⲆΔⵠᐃ, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 176, ΔⲆᐃⵠᐃ, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 174, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 175, 8, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 173, ⲆⵠΔᐃⲆ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 174, 7, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 173, 6, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 174, 6, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 172, ⲆΔᐃΔ, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 173, 5, 1],
		[1, ⵠ[370], 2, 172, ᐃⲆᐃⵠᐃ, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 172, ⵠⲆⲆⵠⲆ, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 171, ⲆΔΔΔᐃ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 170, ᐃⲆⵠΔᐃ, 1],
		[1, ⵠ[370], 2, 170, ᐃⵠΔⵠⵠ, 1],
		[1, ⵠ[370], 2, 170, 5, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 171, 5, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 171, 6, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 169, 5, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 169, ᐃⲆⵠΔᐃ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 169, 8, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 168, ᐃⲆⵠⲆⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠ, 166, 5, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 164, 7, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆᐃ, 160, 7, 1],
		[ⵠⵠⲆ, ⵠ[370], 1, 156, 8, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 166, 8, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 0, 168, 5, 1],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔ, 164, Ⲇᐃᐃᐃⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⲆ, 162, 7, 1],
		[1, ⵠ[370], 0, 158, ⵠᐃᐃΔⲆ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ΔΔᐃ, 157, 6, 1],
		[1, ⵠ[370], Δⵠⵠ, 161, 5, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⵠ, 159, 5, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 155, 7, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 0, 154, ⲆᐃᐃΔ, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 151, ⵠⲆⲆⵠⲆ, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆⲆ, 153, ⵠⵠΔⵠΔ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠ, 151, 5, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 168, 6, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 168, ΔⲆᐃⵠᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 167, ⲆⲆᐃᐃᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 167, ⵠᐃⵠⲆᐃ, ᐃⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 167, 6, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 167, ⲆᐃᐃΔ, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 166, 6, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 166, ᐃⲆⲆΔᐃ, 1],
		[1, ⵠ[370], 2, 165, 7, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 165, ᐃⲆⵠⲆΔ, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 165, ⲆΔᐃΔ, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 164, ⲆΔⵠᐃ, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 163, ⲆⲆᐃⵠ, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 162, 5, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 162, 6, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 163, ⵠΔⵠⵠⲆ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠᐃ, 163, 7, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 163, 8, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 164, 8, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 165, ⵠⵠΔⵠΔ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 161, 8, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 162, 8, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 160, ⵠᐃᐃΔⲆ, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 159, ΔⲆᐃⵠᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 159, ᐃⲆⲆΔᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 159, 6, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 160, Δᐃⵠⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 160, ⵠΔⵠⵠⲆ, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 161, 6, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 161, ⵠᐃⵠⲆᐃ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 157, ⵠⲆⲆⵠⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 158, 7, 1],
		[1, ⵠ[370], 2, 158, ᐃⲆᐃⵠᐃ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 158, ⲆᐃᐃΔ, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 155, 5, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 155, 6, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 156, ⵠΔⵠⵠⲆ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 156, 7, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 157, ⵠⵠΔⵠΔ, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 155, ⵠᐃᐃΔⲆ, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⵠⲆᐃ, 154, ⲆΔΔΔᐃ, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 154, ⵠᐃⵠⲆᐃ, 1],
		[1, ⵠ[370], 2, 154, Ⲇᐃᐃᐃⵠ, 1],
		[ᐃⵠ, ⵠ[370], 2, 152, 8, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 153, 7, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 153, Ⲇᐃᐃᐃⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 153, 5, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 152, ⲆΔᐃΔ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⲆᐃ, 152, 6, 1],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 152, ⵠⲆⲆⵠⲆ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 151, ᐃⲆᐃⵠᐃ, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 157, 5, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 156, ᐃᐃⵠⵠ, 1],
		[1, ⵠ[370], 0, 150, 5, 1],
		[ᐃⵠ, ⵠ[370], 0, 149, 7, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⵠ, 147, ⲆΔΔΔᐃ, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 146, 5, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔΔᐃ, 144, 7, ΔⲆᐃ],
		[1, ⵠ[370], 0, 142, ⲆᐃᐃΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆ, 147, 6, 1],
		[1, ⵠ[370], 1, 145, 8, ⵠⲆⲆ],
		[1, ⵠ[370], 1, 144, ᐃᐃⵠⵠ, ΔⲆᐃ],
		[1, ⵠ[370], 2, 148, ⲆΔⵠᐃ, 1],
		[1, ⵠ[370], 2, 149, 5, 1],
		[1, ⵠ[370], 2, 150, ᐃⲆᐃᐃΔ, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 150, ⵠⵠΔⵠΔ, 1],
		[1, ⵠ[370], 2, 151, ΔⲆᐃⵠᐃ, 1],
		[ᐃⵠ, ⵠ[370], 2, 150, ΔΔⲆⵠⵠ, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠᐃ, 149, 8, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 148, 8, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 149, ᐃⲆⵠⲆΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 148, ⲆΔᐃⵠᐃ, ΔⲆᐃ],
		[1, ⵠ[370], 2, 148, ᐃⲆⲆΔᐃ, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 147, ⲆⵠΔΔⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 147, Δᐃⵠⵠ, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 146, 6, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 146, 7, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 146, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 145, ᐃⲆⵠΔᐃ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 145, 6, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 145, 5, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⵠᐃⵠΔ, 144, ⵠⲆⵠⵠᐃ, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 143, 5, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 143, ᐃⲆⵠⲆΔ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 142, 6, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 141, 5, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 224, ΔⲆⵠΔᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⵠⲆ, 224, 11, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆΔᐃ, 224, 13, 1],
		[1, ⵠ[370], ⲆΔᐃ, 224, 17, 1],
		[ᐃⵠ, ⵠ[370], ⲆΔᐃ, 224, ⵠΔΔᐃᐃ, 1],
		[1, ⵠ[370], 0, 224, 22, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔ, 224, 24, 1],
		[1, ⵠ[370], 0, 224, 29, ΔⲆᐃ],
		[1, ⵠ[370], 0, 224, 33, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔ, 224, 35, 1],
		[1, ⵠ[370], 0, 224, 38, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 1, 224, 14, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠ, 224, ⵠᐃⵠⲆ, ΔⲆᐃ],
		[1, ⵠ[370], ΔⲆᐃ, 224, 27, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], 1, 224, 31, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠⵠ, 224, 36, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, ᐃⵠᐃᐃΔ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 15, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 224, ⲆⵠᐃΔᐃ, 1],
		[ᐃⵠ, ⵠ[370], 2, 224, ⵠᐃⵠᐃⲆᐃΔ, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 224, 21, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 224, 23, 1],
		[ᐃⵠ, ⵠ[370], 2, 224, 25, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⲆΔ, 224, 26, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 224, 28, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 30, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 224, 32, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 34, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 224, 37, ᐃⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 39, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 224, 41, ᐃⵠ],
		[1, ⵠ[370], ⲆΔᐃ, 224, 44, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⵠⲆ, 224, 46, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠΔ, 224, 52, 1],
		[ᐃⵠ, ⵠ[370], 0, 224, 57, ⵠⵠⲆ],
		[1, ⵠ[370], 1, 224, 47, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 224, 40, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 42, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 224, 43, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 224, 45, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 224, 49, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠ, 224, 50, 1],
		[1, ⵠ[370], 2, 224, 51, ᐃⵠⵠ],
		[1, ⵠ[220], 3, 224, 54, 1],
		[1, ⵠ[370], 2, 224, 56, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 224, 58, 1],
		[ᐃⵠ, ⵠ[370], ᐃᐃΔⵠ, 224, 61, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 224, 60, 1],
		[ΔⲆᐃ, ⵠ[370], Δⵠⵠ, 224, 64, 1],
		[1, ⵠ[370], ᐃⵠΔ, 224, 66, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 224, 70, 1],
		[1, ⵠ[370], ΔΔᐃ, 224, 74, 1],
		[ᐃⵠ, ⵠ[370], 0, 224, 77, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆ, 224, 62, ΔⲆᐃ],
		[1, ⵠ[370], 1, 224, 68, 1],
		[1, ⵠ[370], ΔⲆᐃ, 224, 72, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 224, 76, ⵠⵠⲆ],
		[1, ⵠ[370], 1, 224, 80, 1],
		[1, ⵠ[370], 1, 224, 83, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 1, 224, 91, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⲆ, 224, 95, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⵠⲆ, 224, 97, 1],
		[1, ⵠ[370], ⲆΔᐃ, 224, 85, 1],
		[ᐃⵠ, ⵠ[370], ⲆⵠⲆ, 224, 88, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔΔᐃ, 224, 93, ᐃⵠ],
		[1, ⵠ[370], 0, 224, 98, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 224, 59, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 63, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 65, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 67, ΔⲆᐃ],
		[1, ⵠ[370], 2, 224, 69, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 224, 71, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 73, 1],
		[1, ⵠ[370], 2, 224, 75, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 78, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 224, 79, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 224, 81, 1],
		[1, ⵠ[370], 2, 224, 82, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 224, 84, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 224, 86, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 224, 87, 1],
		[1, ⵠ[370], 2, 224, 89, 1],
		[1, ⵠ[370], 2, 224, 90, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 224, 92, ᐃⵠ],
		[1, ⵠ[370], 2, 224, 94, ΔⲆᐃ],
		[1, ⵠ[370], 2, 224, 96, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 224, 99, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 224, ⵠⵠΔΔⵠ, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 0, 224, 101, 1],
		[1, ⵠ[370], 1, 224, 103, 1],
		[1, ⵠ[370], 2, 224, 102, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⲆ, 222, ⵠΔᐃΔⲆ, 1],
		[1, ⵠ[370], 2, 223, 9, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 222, ᐃᐃⲆⲆⲆ, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 221, 9, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 223, 10, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 223, 11, ᐃⵠ],
		[1, ⵠ[370], 2, 223, 12, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ⲆⵠⵠΔ, 223, ΔΔⲆΔΔ, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⵠⵠΔ, 222, ΔᐃᐃΔᐃ, 1],
		[1, ⵠ[370], 3, 220, 9, 1],
		[1, ⵠ[370], 3, 219, ᐃΔⵠΔΔ, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 221, 10, 1],
		[ᐃⵠ, ⵠ[239], 2, 219, ⵠᐃⵠⲆΔⲆⲆ, ᐃⵠ],
		[1, ⵠ[239], 1, 218, 18, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[239], 1, 214, 13, 1],
		[1, ⵠ[370], ᐃⵠΔ, 221, 20, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆᐃ, 223, 18, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ᐃᐃΔⵠ, 222, 19, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 223, ΔⲆⲆⵠⵠ, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 223, 20, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 222, 20, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 220, 21, 1],
		[1, ⵠ[370], 0, 219, 21, ᐃⵠ],
		[1, ⵠ[370], ⵠΔᐃⲆ, 221, 21, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 218, 21, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 222, 21, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 220, 22, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆΔⵠ, 219, 22, 1],
		[1, ⵠ[370], 3, 221, 22, 1],
		[1, ⵠ[370], 0, 211, 9, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 1, 211, ᐃᐃⵠⵠⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 210, 12, 1],
		[1, ⵠ[370], 0, 211, 13, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 210, 9, 1],
		[1, ⵠ[370], 2, 210, ΔⲆⵠΔᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 210, ΔᐃᐃΔᐃ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 212, ⲆⲆⵠⲆⵠ, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 210, Δⵠᐃᐃᐃ, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 211, ⲆⵠⲆᐃᐃ, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 211, ᐃᐃⲆΔⲆ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 211, ⵠΔΔΔΔΔᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 212, ᐃⲆⲆΔⵠ, ᐃⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 210, Δⵠᐃⵠⵠ, ΔⲆᐃ],
		[1, ⵠ[370], 3, 211, 15, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 213, 9, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 212, ΔⲆⵠΔᐃ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠⲆ, 223, 21, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⵠΔ, 209, 9, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], 3, 223, 22, ᐃⵠⵠ],
		[1, ⵠ[220], 3, 221, 23, ΔⲆᐃ],
		[1, ⵠ[220], ⵠⲆⲆΔ, 207, ΔᐃⵠΔⵠ, ⵠⲆⲆ],
		[1, ⵠ[220], ΔⵠⵠΔ, 209, 10, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[220], ⲆΔᐃ, 209, 12, ᐃⵠⵠ],
		[1, ⵠ[220], 4, 209, ΔⲆⲆⲆⲆ, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[220], ⲆⵠⲆⲆ, 219, 23, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[220], ⵠΔⵠⲆ, 210, ᐃᐃΔⲆⵠ, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[220], 3, 217, 22, ᐃⵠ],
		[1, ⵠ[220], 4, 212, 16, 1],
		[1, ⵠ[220], ⲆⲆⵠΔ, 214, 19, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], 4, 213, ⲆᐃΔⵠ, ⵠⲆⲆ],
		[1, ⵠ[220], 1, 212, 21, 1],
		[ᐃⵠ, ⵠ[220], 4, 215, ΔΔⵠⲆΔ, ΔⲆᐃ],
		[1, ⵠ[220], ⵠᐃⵠΔ, 216, 17, 1],
		[ΔⲆᐃ, ⵠ[220], 5, 216, ⵠΔⵠᐃⵠ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[220], 5, 216, 15, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[220], 1, 217, ⵠⲆⵠⵠΔ, ΔⲆᐃ],
		[1, ⵠ[220], 2, 218, 16, ⵠⵠⲆ],
		[1, ⵠ[220], ⲆⲆⵠΔ, 216, 14, 1],
		[1, ⵠ[220], 2, 219, 16, ΔⲆᐃ],
		[1, ⵠ[220], ⲆᐃᐃΔ, 220, ⲆⲆᐃΔΔ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[220], ΔⲆⲆΔ, 216, ΔⲆΔᐃΔ, 1],
		[1, ⵠ[220], ⲆⵠⲆⲆ, 217, ᐃⲆⲆΔⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], 0, 211, 44, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆ, 212, 45, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 213, 45, 1],
		[ᐃⵠ, ⵠ[370], ⲆⵠⲆ, 214, 46, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 215, 46, ᐃⵠ],
		[1, ⵠ[370], Δᐃᐃᐃ, 213, 46, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 3, 214, 47, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 214, 48, 1],
		[1, ⵠ[370], ΔⵠⵠΔ, 216, 46, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⲆ, 208, ΔⲆΔᐃ, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 210, 21, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], 0, 212, 23, 1],
		[1, ⵠ[370], 0, 213, 25, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 213, 24, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 211, 22, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 210, ᐃⵠᐃΔ, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 209, 21, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 209, 20, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 211, 21, 1],
		[1, ⵠ[370], 2, 212, 22, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 213, 23, ΔⲆᐃ],
		[1, ⵠ[370], ΔⵠⵠΔ, 213, 26, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 207, 20, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[220], 4, 192, 33, 1],
		[ΔⲆᐃ, ⵠ[220], ΔⲆΔⲆ, 191, 34, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[220], ⲆⵠⲆⲆ, 190, 35, 1],
		[ⵠⲆⲆ, ⵠ[220], 3, 189, 37, 1],
		[1, ⵠ[220], Δᐃᐃᐃ, 188, 39, ΔⲆᐃ],
		[1, ⵠ[220], 4, 186, 40, 1],
		[ΔⲆᐃ, ⵠ[220], ᐃΔᐃΔ, 185, 39, ᐃⵠⵠ],
		[1, ⵠ[220], Δⵠⵠⵠ, 184, 39, 1],
		[ⵠⲆⲆ, ⵠ[220], 2, 183, 39, ⵠⵠⲆ],
		[1, ⵠ[220], ᐃⵠⵠ, 182, 40, 1],
		[1, ⵠ[220], 2, 181, 41, 1],
		[1, ⵠ[220], ΔⲆⲆΔ, 180, 41, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[220], 5, 179, 41, ᐃⵠⵠ],
		[1, ⵠ[220], 4, 192, 28, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[220], 4, 191, 28, 1],
		[1, ⵠ[220], 4, 190, 27, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], 3, 188, 27, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[220], 4, 187, 26, 1],
		[ⵠⲆⲆ, ⵠ[220], 4, 186, 25, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], 4, 185, 25, 1],
		[1, ⵠ[220], ᐃΔΔΔ, 184, 24, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[220], ⲆⲆᐃⵠ, 184, 23, ⵠⵠⲆ],
		[1, ⵠ[220], 2, 184, 22, 1],
		[1, ⵠ[220], ᐃᐃⵠⵠ, 184, 21, 1],
		[1, ⵠ[220], ᐃⵠⵠ, 183, ⵠⵠΔⵠ, 1],
		[ΔⲆᐃ, ⵠ[220], 5, 182, ⲆᐃΔⵠ, ⵠⵠⲆ],
		[1, ⵠ[220], ⲆⲆⵠΔ, 181, 20, ᐃⵠ],
		[1, ⵠ[220], 5, 180, ⲆᐃΔⵠ, 1],
		[1, ⵠ[220], ⵠⲆΔΔ, 179, 20, ᐃⵠ],
		[1, ⵠ[220], ᐃΔΔΔ, 178, 19, 1],
		[1, ⵠ[220], 3, 178, 17, ᐃⵠ],
		[1, ⵠ[220], Δᐃᐃᐃ, 176, 18, ⵠⲆⲆ],
		[1, ⵠ[370], ⲆⲆⲆ, 177, ᐃⲆⵠᐃᐃ, 1],
		[1, ⵠ[370], 0, 175, ΔⲆᐃΔⵠ, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 0, 180, 16, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔ, 174, 19, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔ, 172, ⵠΔⲆⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], 1, 175, ᐃⲆⲆΔⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 172, ΔᐃΔⵠⲆ, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠ, 181, ⵠⲆⲆᐃⲆ, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 179, 15, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 177, ⲆⲆⵠᐃⲆ, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 176, 16, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 174, 18, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 173, 19, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 172, ΔⵠⲆⵠⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 173, 18, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 173, ᐃⲆᐃⲆΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 174, ⲆⲆᐃⲆⲆ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 174, 16, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 175, ᐃᐃᐃⲆⲆ, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 176, ᐃⲆⲆΔⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 178, 15, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 178, 16, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 179, ⲆⲆᐃΔΔ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 180, 15, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆᐃ, 181, ⵠΔⵠᐃⵠ, 1],
		[ᐃⵠ, ⵠ[370], Δᐃᐃᐃ, 182, 16, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔᐃⲆ, 172, 21, 1],
		[ᐃⵠ, ⵠ[220], 1, 175, ΔⲆⲆⵠⵠ, 1],
		[1, ⵠ[220], 2, 174, 20, 1],
		[ⵠⲆⲆ, ⵠ[220], ᐃⵠΔⲆ, 173, 20, 1],
		[ΔⲆᐃ, ⵠ[220], ΔⲆᐃ, 180, ⲆⲆᐃⲆⲆ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], 2, 181, 17, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[220], 3, 191, ⵠᐃⲆΔ, 1],
		[1, "s", 0, 217, 30, 1],
		[ᐃⵠ, "s", 0, 208, 35, ΔⲆᐃ],
		[ᐃⵠ, "s", Δⵠⵠ, 204, 24, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", ⵠⲆⲆ, 218, 32, 1],
		[1, "s", 1, 207, 34, 1],
		[1, "s", 1, 202, 23, ᐃⵠⵠ],
		[1, "s", 1, 195, ⲆⲆⵠᐃⲆ, 1],
		[1, "s", 2, 222, 28, 1],
		[1, "s", ⵠΔⲆΔ, 212, 38, 1],
		[ⵠⵠⲆ, "s", ⵠⲆΔΔ, 207, 23, ⵠⵠⲆ],
		[ⵠⲆⲆ, "s", ⵠΔⲆΔ, 202, 12, ΔⲆᐃ],
		[1, "s", ᐃᐃΔⵠ, 195, ⵠⵠⵠⵠΔ, 1],
		[ⵠⵠⲆ, "s", ᐃⵠⵠ, 191, 12, 1],
		[1, "s", 0, 187, 16, 1],
		[1, "s", 2, 188, 16, ᐃⵠⵠ],
		[1, "s", ΔⲆᐃ, 186, ᐃⵠᐃⲆⵠΔᐃ, 1],
		[ᐃⵠⵠ, "s", 1, 201, 16, 1],
		[1, "g", ᐃⵠ, 216, 31, 1],
		[ΔⲆᐃ, "g", 0, 200, 15, ᐃⵠ],
		[ⵠⵠⲆ, "g", Δⵠⵠ, 202, 40, 1],
		[ᐃⵠⵠ, "g", ⲆⵠⲆ, 189, 32, ⵠⵠⲆ],
		[1, "g", 0, 204, 28, ᐃⵠⵠ],
		[1, "g", 0, 196, 24, 1],
		[ⵠⵠⲆ, "g", ⵠᐃⵠΔ, 198, 37, 1],
		[ΔⲆᐃ, "s", 0, 193, 39, 1],
		[ᐃⵠⵠ, "s", ⲆΔᐃ, 201, 45, ⵠⵠⲆ],
		[ΔⲆᐃ, "a", ⲆⵠⲆ, 210, 29, ΔⲆᐃ],
		[1, "a", 0, 200, 20, 1],
		[1, ⵠ[370], 0, 200, 34, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 0, 193, 27, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⲆ, 203, 30, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⲆᐃ, 191, 31, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 202, 32, 1],
		[1, ⵠ[370], 2, 194, 26, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 192, 27, 1],
		[1, ⵠ[370], 2, 192, 32, ΔⲆᐃ],
		[1, ⵠ[370], 2, 203, 31, 1],
		[1, ⵠ[370], 2, 202, 31, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 202, 30, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], Δᐃᐃᐃ, 202, 29, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔᐃⲆ, 201, 32, 1],
		[1, ⵠ[370], Δᐃᐃᐃ, 199, 35, 1],
		[1, ⵠ[370], ⲆΔᐃ, 193, 34, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 194, 34, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 198, 35, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆΔⵠ, 199, 34, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 191, 29, 1],
		[1, ⵠ[370], ⲆⵠⲆ, 191, 30, 1],
		[1, ⵠ[370], 3, 190, 29, 1],
		[1, ⵠ[220], ΔⲆΔⵠ, 180, 69, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], ⵠⲆⲆΔ, 182, 68, 1],
		[ᐃⵠ, ⵠ[220], 3, 184, 68, 1],
		[1, ⵠ[220], 3, 186, 70, 1],
		[ᐃⵠⵠ, ⵠ[220], 3, 184, 72, 1],
		[1, ⵠ[220], 3, 182, 72, ΔⲆᐃ],
		[1, ⵠ[220], 3, 180, 71, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⵠ, 186, 68, 1],
		[1, ⵠ[370], Δⵠⵠ, 187, 70, 1],
		[ᐃⵠ, ⵠ[370], ⲆⲆⲆ, 183, 74, ⵠⲆⲆ],
		[1, ⵠ[370], Δⵠⵠ, 178, 70, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃᐃΔⵠ, 182, 66, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 182, 74, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 181, 73, 1],
		[1, ⵠ[370], 2, 180, 74, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 181, 74, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[220], Δⵠⵠ, 184, 70, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[220], 3, 182, 70, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 181, 67, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], ⲆⵠⵠΔ, 184, 67, 1],
		[ⵠⲆⲆ, ⵠ[370], 3, 182, 67, ᐃⵠⵠ],
		[1, ⵠ[220], Δⵠⵠⵠ, 187, 69, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[220], 1, 188, 68, ᐃⵠ],
		[1, ⵠ[220], ⲆⲆΔΔ, 189, 68, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[220], 2, 190, 68, 1],
		[1, ⵠ[220], ΔⲆᐃ, 191, 68, ᐃⵠⵠ],
		[1, ⵠ[220], 4, 192, 68, 1],
		[ᐃⵠⵠ, ⵠ[220], 2, 193, 68, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], ⵠᐃᐃⲆ, 194, 69, 1],
		[ⵠⵠⲆ, ⵠ[220], ⲆⲆⵠΔ, 194, 70, 1],
		[1, ⵠ[220], 5, 195, 71, 1],
		[ΔⲆᐃ, ⵠ[220], 1, 194, 71, 1],
		[ᐃⵠ, ⵠ[220], ⵠⲆΔΔ, 196, 72, 1],
		[ᐃⵠⵠ, ⵠ[220], ᐃΔⲆΔ, 196, 71, 1],
		[1, ⵠ[220], 1, 197, 73, 1],
		[ᐃⵠⵠ, ⵠ[220], 5, 196, 73, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[220], ⲆᐃᐃΔ, 198, 73, ΔⲆᐃ],
		[1, ⵠ[220], ⲆⵠⵠΔ, 201, 73, 1],
		[ⵠⵠⲆ, ⵠ[220], 3, 203, 72, ⵠⵠⲆ],
		[1, ⵠ[220], ᐃΔΔΔ, 199, 73, ⵠⲆⲆ],
		[1, ⵠ[220], 1, 205, 72, ᐃⵠⵠ],
		[1, ⵠ[220], 2, 206, 72, ΔⲆᐃ],
		[1, ⵠ[220], ⲆᐃᐃΔ, 207, 72, 1],
		[ⵠⵠⲆ, ⵠ[220], ᐃⵠⵠ, 208, 72, ⵠⵠⲆ],
		[1, ⵠ[220], 1, 209, 73, ⵠⲆⲆ],
		[1, ⵠ[220], 2, 209, 74, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[220], ⲆΔᐃΔ, 211, 76, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], 4, 210, 75, 1],
		[1, ⵠ[220], ⲆᐃᐃΔ, 212, 76, 1],
		[ⵠⵠⲆ, ⵠ[220], ⲆⲆΔΔ, 202, 75, 1],
		[1, ⵠ[220], 2, 203, 76, 1],
		[ᐃⵠⵠ, ⵠ[220], 4, 204, 77, 1],
		[ᐃⵠⵠ, ⵠ[220], ⵠΔⵠᐃ, 204, 78, 1],
		[ⵠⲆⲆ, ⵠ[220], 2, 204, 79, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[220], 5, 204, 80, 1],
		[1, ⵠ[370], 0, 202, 74, 1],
		[1, ⵠ[370], ᐃⵠ, 203, 74, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 204, 73, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 203, 75, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆⲆΔ, 204, 76, ᐃⵠⵠ],
		[1, ⵠ[370], 3, 205, 73, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 205, 74, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 204, 74, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 204, 75, 1],
		[1, ⵠ[370], 2, 206, 73, 1],
		[1, ⵠ[370], 3, 207, 73, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 205, 76, ᐃⵠ],
		[1, ⵠ[370], 3, 205, 77, 1],
		[1, ⵠ[220], ⲆⵠⵠΔ, 183, 66, 1],
		[1, ⵠ[220], 4, 183, 65, 1],
		[ᐃⵠⵠ, ⵠ[220], 4, 184, 64, ⵠⲆⲆ],
		[1, ⵠ[220], ⵠᐃᐃⲆ, 185, 63, 1],
		[ΔⲆᐃ, ⵠ[220], ΔⲆᐃ, 185, 62, 1],
		[ⵠⵠⲆ, ⵠ[220], ⵠΔⲆΔ, 185, 61, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], ⵠⲆΔΔ, 185, 60, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[220], 4, 186, 59, ᐃⵠⵠ],
		[1, ⵠ[220], ᐃⵠⵠ, 187, 58, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[220], ⲆⲆⵠΔ, 187, 57, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[220], ᐃⵠΔⲆ, 187, 56, ⵠⲆⲆ],
		[ⵠⵠⲆ, "s", ⲆΔᐃ, 191, 60, ⵠⲆⲆ],
		[ⵠⲆⲆ, "s", 1, 195, 58, ⵠⵠⲆ],
		[ΔⲆᐃ, "s", ᐃⵠ, 199, 46, ᐃⵠ],
		[1, "s", ⵠⲆΔΔ, 202, 49, 1],
		[1, "g", ⵠΔⲆΔ, 197, 55, ᐃⵠ],
		[ΔⲆᐃ, "g", ΔⲆᐃ, 213, 55, 1],
		[ⵠⲆⲆ, "g", Δⵠⵠ, 192, 45, ᐃⵠ],
		[ⵠⲆⲆ, "g", ᐃⵠΔ, 210, 61, 1],
		[ΔⲆᐃ, "g", 0, 182, 52, 1],
		[1, "g", Δⵠⵠ, 180, 35, 1],
		[ᐃⵠⵠ, "g", ᐃⵠΔ, 175, 25, 1],
		[ⵠⵠⲆ, "g", 0, 168, 32, ΔⲆᐃ],
		[1, "g", ᐃⵠⵠ, 179, 28, 1],
		[ⵠⵠⲆ, "g", ᐃⵠ, 161, 16, ⵠⲆⲆ],
		[ΔⲆᐃ, "g", 2, 172, 12, 1],
		[ᐃⵠⵠ, "g", 2, 160, 25, 1],
		[1, "g", ⵠΔⲆΔ, 157, 39, ᐃⵠⵠ],
		[ΔⲆᐃ, "g", 2, 170, 43, ⵠⲆⲆ],
		[1, "g", 2, 202, 67, 1],
		[ⵠⲆⲆ, "g", 2, 217, 72, ⵠⵠⲆ],
		[ᐃⵠⵠ, "g", ᐃᐃΔⵠ, 214, 82, ᐃⵠⵠ],
		[1, "g", ⵠΔⵠᐃ, 193, 86, ᐃⵠⵠ],
		[ⵠⵠⲆ, "g", ⵠᐃⵠΔ, 168, 60, ᐃⵠ],
		[1, "g", 2, 165, 78, 1],
		[ΔⲆᐃ, "g", ᐃⵠΔⲆ, 173, 88, 1],
		[ⵠⲆⲆ, "s", ΔⲆⵠ, 185, 51, 1],
		[ᐃⵠ, "s", Δⵠⵠ, 175, 44, ᐃⵠ],
		[ᐃⵠ, "s", 0, 165, 50, 1],
		[ⵠⲆⲆ, "s", 0, 160, 32, 1],
		[1, "s", ⵠⲆⲆ, 162, 30, ⵠⲆⲆ],
		[ᐃⵠⵠ, "s", ᐃⵠ, 176, 28, 1],
		[1, "s", 1, 154, ΔΔⲆᐃⲆ, 1],
		[1, "s", ΔⲆᐃ, 184, 49, ΔⲆᐃ],
		[ⵠⲆⲆ, "s", 1, 192, 62, 1],
		[1, "s", 1, 216, 62, ᐃⵠ],
		[ⵠⵠⲆ, "s", ᐃⵠ, 204, 65, 1],
		[1, "s", 1, 217, 79, 1],
		[1, "s", ⵠⵠⲆ, 206, 86, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[220], ΔⲆΔⵠ, 211, 69, 1],
		[ⵠⵠⲆ, ⵠ[220], ΔⲆΔⲆ, 215, 69, 1],
		[1, ⵠ[220], 5, 201, 81, 1],
		[1, ⵠ[220], ΔⲆᐃ, 207, 83, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], 3, 173, 32, ΔⲆᐃ],
		[1, ⵠ[220], ᐃⵠΔⲆ, 181, 45, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], ᐃⵠ, 178, 38, 1],
		[1, ⵠ[220], ᐃⵠⵠ, 213, 69, 1],
		[1, ⵠ[220], ⲆΔⵠᐃ, 214, 69, 1],
		[ΔⲆᐃ, ⵠ[220], ᐃΔΔΔ, 216, 68, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[220], ⲆⲆⲆ, 191, 78, 1],
		[1, ⵠ[220], 3, 191, 80, ⵠⵠⲆ],
		[1, ⵠ[220], ⵠΔᐃⲆ, 189, 79, 1],
		[1, "g", 2, 150, 29, 1],
		[ⵠⵠⲆ, "g", 2, 154, 67, 1],
		[1, "g", ⵠⵠⲆᐃ, 202, 94, ⵠⵠⲆ],
		[ᐃⵠ, "g", 2, 155, 90, ΔⲆᐃ],
		[ⵠⵠⲆ, "s", 2, 215, 80, ᐃⵠ],
		[ⵠⵠⲆ, "s", ⵠΔⲆΔ, 204, 62, 1],
		[1, "s", ΔⲆⲆᐃ, 218, 60, ⵠⵠⲆ],
		[ΔⲆᐃ, "s", ⵠᐃⵠΔ, 194, 62, 1],
		[1, "s", ᐃⵠΔ, 216, 86, 1],
		[1, "s", 0, 211, 93, 1],
		[ᐃⵠ, ⵠ[220], 0, 216, 92, 1],
		[ᐃⵠⵠ, ⵠ[220], 0, 151, 96, ⵠⵠⲆ],
		[1, ⵠ[220], 1, 155, 95, 1],
		[1, ⵠ[220], ᐃΔΔΔ, 214, 88, 1],
		[1, "s", ⲆΔᐃ, 205, 99, ⵠⲆⲆ],
		[1, "s", 1, 217, 88, ⵠⲆⲆ],
		[ΔⲆᐃ, "s", 1, 213, 94, ⵠⲆⲆ],
		[1, "s", ΔⲆᐃ, 202, 97, ᐃⵠⵠ],
		[ᐃⵠ, "s", 0, 199, 85, 1],
		[1, "s", 0, 190, 93, 1],
		[ᐃⵠⵠ, "s", 1, 199, 87, 1],
		[1, "s", ⵠⲆⲆ, 192, 97, ΔⲆᐃ],
		[1, ⵠ[220], ΔⲆΔⵠ, 196, 92, 1],
		[1, ⵠ[220], ᐃⵠⵠ, 199, 91, ᐃⵠ],
		[1, ⵠ[220], ᐃⵠ, 220, 91, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[220], 0, 219, 77, 1],
		[ⵠⲆⲆ, ⵠ[220], ⲆΔᐃ, 200, 59, 1],
		[1, ⵠ[220], 3, 188, 87, 1],
		[1, ⵠ[220], ⲆⵠⲆ, 183, 94, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], ᐃⵠⵠ, 187, 83, ᐃⵠⵠ],
		[1, ⵠ[220], 1, 175, 82, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], ᐃⵠ, 172, 94, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[220], ⲆⲆⵠΔ, 179, 78, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], ⲆⲆⲆ, 166, 87, 1],
		[ⵠⲆⲆ, ⵠ[220], ΔⲆΔⵠ, 159, 80, 1],
		[ⵠⲆⲆ, ⵠ[220], ΔⵠⵠΔ, 167, 15, 1],
		[ⵠⵠⲆ, ⵠ[220], 1, 164, 17, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[220], ⵠⵠⲆ, 172, 28, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[220], 3, 153, 24, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[220], Δⵠⵠⵠ, 164, 91, 1],
		[1, ⵠ[220], ⲆⲆΔΔ, 156, 82, 1],
		[1, ⵠ[220], ⲆⲆΔΔ, 149, 90, 1],
		[1, "s", ΔΔᐃ, 178, 85, 1],
		[ᐃⵠ, "s", ᐃⵠ, 180, 85, ⵠⵠⲆ],
		[1, "s", ΔΔᐃ, 163, 96, ΔⲆᐃ],
		[1, "s", ΔⲆⵠ, 159, 86, 1],
		[1, "s", 0, 185, 78, 1],
		[ᐃⵠⵠ, "s", ᐃⵠ, 194, 75, ᐃⵠⵠ],
		[ⵠⵠⲆ, "s", 2, 195, 76, ⵠⲆⲆ],
		[1, "s", 2, 181, 78, 1],
		[1, "s", 2, 161, 87, 1],
		[1, "s", 2, 166, 97, 1],
		[ᐃⵠⵠ, "s", ⲆⲆⵠΔ, 177, 97, 1],
		[1, "s", 0, 149, 85, ΔⲆᐃ],
		[1, "s", ᐃⵠ, 151, 83, ⵠⵠⲆ],
		[1, "s", 1, 175, 74, ⵠⲆⲆ],
		[1, "s", 0, 174, 72, ⵠⲆⲆ],
		[1, ⵠ[220], 3, 168, 71, 1],
		[ᐃⵠ, ⵠ[220], ⲆⵠⵠΔ, 180, 60, 1],
		[ⵠⲆⲆ, "s", ⲆⲆⲆ, 156, 63, ᐃⵠ],
		[ΔⲆᐃ, "s", ⲆⵠⲆ, 151, 47, ⵠⲆⲆ],
		[1, "s", ⵠⵠⲆ, 158, 64, ᐃⵠ],
		[1, "s", ᐃⵠ, 161, 75, ⵠⲆⲆ],
		[1, "s", 1, 162, 51, ⵠⵠⲆ],
		[1, "s", 1, 175, 45, 1],
		[ᐃⵠ, "s", 1, 152, 47, ᐃⵠ],
		[1, "s", ΔⲆᐃ, 159, 33, ᐃⵠ],
		[ⵠⲆⲆ, "s", ᐃⵠ, 152, ⲆⵠᐃᐃⲆ, 1],
		[1, "s", ⲆΔᐃ, 151, 13, ᐃⵠ],
		[ⵠⵠⲆ, "s", 0, 166, 22, ΔⲆᐃ],
		[1, "s", ᐃⵠΔ, 170, 63, ΔⲆᐃ],
		[ⵠⲆⲆ, "s", 2, 172, 62, ᐃⵠ],
		[ᐃⵠ, "s", 2, 155, 61, ᐃⵠⵠ],
		[1, "s", ⵠⵠⲆᐃ, 167, 51, ΔⲆᐃ],
		[1, "s", 2, 150, 52, ᐃⵠⵠ],
		[1, ⵠ[220], ⲆⵠⲆⲆ, 178, 69, 1],
		[ΔⲆᐃ, ⵠ[220], 4, 177, 68, 1],
		[1, ⵠ[220], 3, 176, 67, ᐃⵠ],
		[1, ⵠ[220], 0, 174, 67, 1],
		[1, ⵠ[220], 1, 172, 67, 1],
		[1, ⵠ[220], ⲆⲆΔΔ, 171, 67, 1],
		[1, ⵠ[220], 4, 170, 66, ᐃⵠ],
		[1, ⵠ[220], ⲆⲆΔΔ, 169, 66, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], 1, 168, 66, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[220], 4, 167, 67, 1],
		[ⵠⵠⲆ, ⵠ[220], ΔⲆᐃ, 166, 67, 1],
		[1, ⵠ[220], ⵠᐃᐃⲆ, 165, 68, 1],
		[ⵠⲆⲆ, ⵠ[220], ΔⲆⲆΔ, 164, 68, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[220], ⵠⵠⲆᐃ, 163, 68, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[220], 5, 162, 68, ᐃⵠ],
		[1, ⵠ[220], ᐃⵠΔⲆ, 161, 68, 1],
		[ΔⲆᐃ, ⵠ[220], Δᐃᐃᐃ, 153, 72, ᐃⵠ],
		[1, ⵠ[220], 3, 163, 60, 1],
		[1, ⵠ[220], 3, 164, 42, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[220], ΔⲆⵠ, 155, 51, ΔⲆᐃ],
		[1, ⵠ[220], ᐃⵠ, 168, 42, 1],
		[1, ⵠ[220], Δⵠⵠⵠ, 158, 48, 1],
		[ⵠⵠⲆ, ⵠ[220], 4, 178, 57, 1],
		[ᐃⵠ, ⵠ[220], ΔⲆΔⲆ, 151, 69, ⵠⵠⲆ],
		[1, ⵠ[220], 2, 170, 74, 1],
		[ⵠⵠⲆ, ⵠ[220], 2, 160, 84, 1],
		[ⵠⲆⲆ, ⵠ[220], ⵠΔⵠᐃ, 174, 92, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[220], ⵠᐃⵠΔ, 188, 90, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[220], 2, 209, 84, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[220], ⵠⵠⲆᐃ, 206, 93, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[220], 5, 156, 70, 1],
		[ΔⲆᐃ, ⵠ[220], 5, 165, 57, 1],
		[ⵠⵠⲆ, ⵠ[220], 5, 182, 58, 1],
		[1, ⵠ[220], 5, 166, 44, 1],
		[ᐃⵠⵠ, ⵠ[220], ΔⲆᐃ, 163, 39, 1],
		[ⵠⲆⲆ, ⵠ[220], 1, 152, 53, 1],
		[ΔⲆᐃ, ⵠ[220], 1, 152, 37, 1],
		[1, ⵠ[220], 2, 163, 13, 1],
		[1, ⵠ[ⵠΔΔΔ], ⵠⲆⵠⲆΔ, 219, 12, ⲆⵠⲆ],
		[1, ⵠ[20], 14, 203, ⲆⲆΔᐃⵠ, 0],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], ⵠⲆⲆᐃⲆ, 220, 19, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[20], 12, 223, ⲆΔΔᐃᐃ, ⲆⲆⲆ],
		[1, ⵠ[ⵠⵠᐃᐃ], ΔΔᐃⵠΔΔⵠ, 213, ΔᐃΔᐃⵠ, 0],
		[1, ⵠ[20], 37, 217, 19, 0],
		[1, ⵠ[20], 38, 220, ᐃⵠᐃⲆⵠΔᐃ, 0],
		[ΔⲆᐃ, ⵠ[20], 38, 215, 10, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 40, 214, 14, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 40, 222, 16, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 40, 209, ⵠΔΔᐃΔ, 0],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 37, 212, 18, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], 38, 215, 26, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 37, 222, 25, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 40, 221, 29, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[ΔⵠΔⲆ], 12, 220, 27, 0],
		[ᐃⵠⵠ, ⵠ[20], 13, 213, 27, 0],
		[ⵠⲆⲆ, ⵠ[ΔⵠΔⲆ], 14, 215, 30, ⲆⵠⲆ],
		[1, ⵠ[ⵠΔⲆⵠ], ⵠⲆⲆᐃⲆ, 219, 33, 0],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 38, 220, 31, ΔⲆⵠ],
		[1, ⵠ[ⵠⵠΔⵠ], 38, 217, 35, 0],
		[ⵠⵠⲆ, ⵠ[20], 40, 221, 34, ΔⲆⵠ],
		[1, ⵠ[20], 39, 215, 32, 0],
		[1, ⵠ[20], 37, 211, 35, 0],
		[1, ⵠ[20], 12, 223, 38, ᐃⵠΔ],
		[1, ⵠ[20], 13, 213, 38, ΔΔᐃ],
		[1, ⵠ[ΔⵠΔⲆ], 14, 222, 44, 0],
		[ΔⲆᐃ, ⵠ[20], 15, 208, 33, 0],
		[1, ⵠ[ⵠΔΔΔ], ᐃⲆⵠᐃᐃ, 206, 23, Δⵠⵠ],
		[1, ⵠ[20], 13, 205, 28, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], 14, 211, 23, 0],
		[ᐃⵠ, ⵠ[20], 14, 201, 20, 0],
		[ᐃⵠ, ⵠ[20], 15, 198, ΔⲆᐃᐃΔ, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[20], 15, 199, ᐃΔᐃᐃⲆ, 0],
		[1, ⵠ[ⵠΔⲆⵠ], ⵠⵠᐃᐃⵠ, 194, ᐃⲆⲆΔⵠ, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 12, 197, 23, ⲆⵠⲆ],
		[1, ⵠ[20], 37, 205, 13, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], 39, 204, ⲆⲆⵠⲆⵠ, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 40, 196, 12, ΔΔᐃ],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 40, 198, ᐃⲆⵠⵠᐃ, 0],
		[ᐃⵠⵠ, ⵠ[ᐃⵠᐃΔ], 37, 192, ᐃΔᐃⵠΔ, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 37, 199, 24, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 37, 209, 24, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 39, 209, 30, 0],
		[1, ⵠ[20], 39, 204, 31, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⵠᐃᐃ], 39, 192, 24, ⲆΔᐃ],
		[1, ⵠ[20], 40, 187, 23, 0],
		[1, ⵠ[ΔⵠΔⲆ], 38, 187, 18, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 39, 192, ΔᐃΔⵠⲆ, ⲆⵠⲆ],
		[1, ⵠ[20], 37, 185, 15, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[20], ⵠⲆⵠⲆΔ, 188, Ⲇⵠⵠⵠᐃⵠᐃ, 0],
		[1, ⵠ[20], ΔⲆΔᐃΔ, 185, 13, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 14, 189, ᐃᐃΔⲆⵠⲆΔ, 0],
		[ΔⲆᐃ, ⵠ[20], ⵠⲆⲆᐃⲆ, 187, 22, 0],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 15, 180, ΔᐃⵠΔⵠ, 0],
		[1, ⵠ[20], 12, 177, Δⵠᐃⵠⵠ, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 14, 173, ᐃᐃΔⲆⵠⲆΔ, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[20], 14, 171, 15, Δⵠⵠ],
		[ᐃⵠ, ⵠ[20], 40, 182, ΔⲆᐃᐃΔ, 0],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 39, 179, 13, 0],
		[ⵠⵠⲆ, ⵠ[20], 39, 175, 9, 0],
		[ⵠⵠⲆ, ⵠ[ᐃᐃᐃⲆ], 40, 173, 14, 0],
		[ᐃⵠⵠ, ⵠ[20], 37, 169, ᐃᐃⲆΔⲆ, 0],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], 37, 163, ᐃᐃⲆᐃᐃ, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 38, 164, 15, 0],
		[1, ⵠ[20], 39, 170, 20, 0],
		[1, ⵠ[20], 40, 160, ΔⲆᐃΔⵠ, ⲆⲆⲆ],
		[1, ⵠ[20], 40, 154, ΔⲆⵠΔᐃ, ΔⲆⵠ],
		[1, ⵠ[20], 40, 165, 23, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 40, 150, 19, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⵠᐃᐃ], 37, 155, 16, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], 39, 146, 10, 0],
		[1, ⵠ[20], ᐃⵠᐃᐃΔ, 159, ⵠⲆⵠⲆΔ, 0],
		[1, ⵠ[20], 13, 151, 9, 0],
		[1, ⵠ[20], Δᐃⵠᐃᐃ, 150, ⵠΔΔΔΔΔᐃ, 0],
		[1, ⵠ[ⵠΔⲆⵠ], ᐃᐃΔⲆⵠ, 153, 19, ⲆΔᐃ],
		[1, ⵠ[20], ΔⲆΔᐃΔ, 161, 25, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], ᐃᐃⲆⵠⵠⲆᐃ, 169, 25, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 15, 176, 25, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠΔΔΔ], 12, 180, 29, ᐃⵠΔ],
		[1, ⵠ[ⵠΔΔΔ], 12, 188, 31, 0],
		[1, ⵠ[20], ᐃᐃⲆⵠⵠⲆᐃ, 181, 36, 0],
		[ⵠⵠⲆ, ⵠ[ᐃⵠᐃΔ], 37, 186, 33, 0],
		[1, ⵠ[20], 38, 183, 26, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 39, 177, 21, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[20], 40, 175, 31, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 37, 176, 39, 0],
		[1, ⵠ[20], 37, 168, 34, 0],
		[ᐃⵠⵠ, ⵠ[20], 38, 162, 32, ⲆⵠⲆ],
		[1, ⵠ[20], 38, 168, 45, 0],
		[1, ⵠ[20], 38, 173, 45, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ᐃⵠᐃΔ], 39, 160, 35, 0],
		[ΔⲆᐃ, ⵠ[20], 40, 161, 42, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 40, 170, 39, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 40, 181, 43, ᐃⵠΔ],
		[1, ⵠ[ⵠΔΔΔ], 40, 156, 26, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 40, 150, 32, 0],
		[ΔⲆᐃ, ⵠ[20], 37, 159, 26, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], 37, 155, 40, 0],
		[1, ⵠ[20], 37, 154, 45, 0],
		[ᐃⵠ, ⵠ[20], 39, 149, 45, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], 40, 150, 50, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 40, 160, 52, ΔⲆⵠ],
		[1, ⵠ[20], 37, 164, 52, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 38, 168, 50, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⵠⲆ], 12, 176, 45, ⲆΔᐃ],
		[1, ⵠ[20], 12, 167, 32, ᐃⵠΔ],
		[1, ⵠ[20], 13, 158, 32, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 14, 149, 28, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 15, 163, 30, ΔΔᐃ],
		[ᐃⵠ, ⵠ[20], 14, 158, 39, ⲆΔᐃ],
		[1, ⵠ[20], 12, 171, 43, ⲆΔᐃ],
		[1, ⵠ[ᐃᐃᐃⲆ], 12, 174, 36, ⲆⲆⲆ],
		[1, ⵠ[20], 12, 151, 43, 0],
		[1, ⵠ[20], Δⵠᐃᐃᐃ, 152, 48, 0],
		[ᐃⵠⵠ, ⵠ[20], 14, 164, 49, 0],
		[ᐃⵠ, ⵠ[20], ᐃⲆⲆΔⵠ, 149, 52, 0],
		[ΔⲆᐃ, ⵠ[20], ⵠⵠᐃᐃⵠ, 174, 49, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], ⲆⲆΔᐃⵠ, 183, 51, 0],
		[1, ⵠ[20], 14, 186, 48, ΔΔᐃ],
		[1, ⵠ[ⵠΔⲆⵠ], 37, 182, 48, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 38, 187, 52, 0],
		[ⵠⲆⲆ, ⵠ[20], 39, 188, 43, 0],
		[1, ⵠ[20], 37, 200, 38, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[20], 40, 194, 37, ᐃⵠΔ],
		[1, ⵠ[ΔⲆΔᐃ], 39, 199, 44, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[20], 38, 200, 49, 0],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], 37, 196, 54, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 12, 194, 40, ⲆΔᐃ],
		[1, ⵠ[20], ⲆⲆΔᐃⵠ, 202, 45, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[ΔⲆΔᐃ], ΔⵠᐃΔΔ, 198, 47, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 15, 198, 55, 0],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 15, 212, 54, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], ᐃⲆⲆΔⵠ, 216, 63, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], ΔⲆⲆⲆⲆ, 209, 62, Δⵠⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], ⲆΔⲆⲆⲆΔᐃ, 219, 60, 0],
		[1, ⵠ[ⵠᐃⲆΔ], ᐃⵠᐃᐃΔ, 206, 56, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 12, 218, 72, 0],
		[1, ⵠ[20], ⲆΔⲆⲆⲆΔᐃ, 223, 67, 0],
		[1, ⵠ[20], ᐃⵠᐃᐃΔ, 205, 64, ΔⲆⵠ],
		[1, ⵠ[20], 12, 193, 63, ⲆⵠⲆ],
		[1, ⵠ[20], 14, 216, 80, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 14, 222, 87, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 38, 210, 53, 0],
		[1, ⵠ[20], 37, 210, 47, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⵠⲆ], 37, 200, 63, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 37, 218, 62, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⵠⲆ], 37, 222, 60, ᐃⵠΔ],
		[1, ⵠ[ΔⵠΔⲆ], 37, 207, 70, Δⵠⵠ],
		[1, ⵠ[20], 38, 203, 68, 0],
		[1, ⵠ[20], 38, 195, 66, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], 38, 218, 55, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 38, 212, 61, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 38, 222, 70, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 38, 218, 70, 0],
		[1, ⵠ[20], 40, 222, 81, 0],
		[1, ⵠ[ⵠΔΔΔ], 38, 214, 79, 0],
		[1, ⵠ[20], 39, 213, 83, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 39, 207, 76, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 39, 208, 86, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 39, 218, 87, ΔΔᐃ],
		[1, ⵠ[20], 39, 222, 93, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], 39, 216, 96, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 39, 209, 94, ⲆΔᐃ],
		[1, ⵠ[20], 39, 201, 87, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 39, 198, 82, 0],
		[1, ⵠ[20], 39, 207, 99, 0],
		[ᐃⵠ, ⵠ[20], 39, 200, 97, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 39, 202, 92, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 37, 194, 97, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 39, 204, 88, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 39, 189, 90, 0],
		[ᐃⵠ, ⵠ[20], 39, 194, 81, 0],
		[1, ⵠ[20], 39, 188, 98, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 37, 183, 91, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 37, 186, 80, 0],
		[1, ⵠ[20], 37, 191, 72, ⲆΔᐃ],
		[1, ⵠ[20], 38, 184, 77, 0],
		[1, ⵠ[20], 38, 180, 80, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[20], 39, 173, 75, 0],
		[ᐃⵠ, ⵠ[20], 40, 178, 87, ΔⲆⵠ],
		[1, ⵠ[20], 40, 174, 94, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], 40, 192, 93, ⲆⲆⲆ],
		[1, ⵠ[ΔΔⵠΔ], 40, 165, 92, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 37, 160, 89, Δⵠⵠ],
		[1, ⵠ[20], 38, 161, 85, ΔⲆⵠ],
		[1, ⵠ[20], 38, 164, 98, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], 38, 151, 99, 0],
		[1, ⵠ[20], 38, 151, 85, 0],
		[1, ⵠ[20], 40, 148, 83, 0],
		[1, ⵠ[ΔΔⵠΔ], 40, 160, 77, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 40, 167, 77, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ᐃⵠᐃΔ], 40, 153, 69, 0],
		[1, ⵠ[20], 40, 149, 74, 0],
		[ᐃⵠ, ⵠ[ΔⵠΔⲆ], 37, 161, 64, ᐃⵠΔ],
		[1, ⵠ[20], 37, 154, 61, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 39, 157, 55, ⲆΔᐃ],
		[1, ⵠ[20], 39, 174, 64, ᐃⵠΔ],
		[1, ⵠ[ΔΔⵠΔ], 39, 175, 56, 0],
		[1, ⵠ[ⵠΔΔΔ], 39, 149, 67, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 12, 218, 96, ΔΔᐃ],
		[ᐃⵠ, ⵠ[20], Δⵠᐃᐃᐃ, 212, 95, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[20], ΔⲆⲆⲆⲆ, 204, 85, ⲆⲆⲆ],
		[1, ⵠ[20], ᐃⲆⲆΔⵠ, 215, 85, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 15, 197, 97, 0],
		[1, ⵠ[20], ⲆⵠⲆᐃᐃ, 198, 87, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 14, 196, 77, ⲆⲆⲆ],
		[1, ⵠ[20], Ⲇⵠⵠⵠᐃ, 194, 86, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⵠⲆ], 15, 181, 84, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], Δⵠᐃⵠⵠ, 184, 79, ⲆΔᐃ],
		[1, ⵠ[ⲆᐃΔⵠ], 14, 188, 93, 0],
		[1, ⵠ[20], ⲆⲆΔᐃᐃ, 180, 87, ⲆⲆⲆ],
		[1, ⵠ[ⵠⲆΔⵠ], 13, 178, 96, ⲆⲆⲆ],
		[1, ⵠ[ⵠⲆΔⵠ], Δⵠᐃᐃᐃ, 163, 95, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 15, 172, 88, 0],
		[1, ⵠ[ᐃⵠᐃΔ], ⲆΔΔᐃᐃ, 176, 75, 0],
		[1, ⵠ[20], ᐃⵠᐃⲆⵠΔᐃ, 172, 72, 0],
		[ᐃⵠ, ⵠ[20], ΔⵠᐃΔΔ, 169, 82, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], ΔⲆΔᐃΔ, 164, 78, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], ⲆⲆΔᐃᐃ, 158, 87, ᐃⵠΔ],
		[1, ⵠ[20], 13, 149, 86, 0],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], ᐃⲆⵠᐃᐃ, 154, 91, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], ᐃⲆⵠᐃᐃ, 160, 74, 0],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⵠⲆ], 14, 152, 76, 0],
		[1, ⵠ[20], ΔⲆⲆⲆⲆ, 158, 63, 0],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 14, 150, 60, 0],
		[ⵠⲆⲆ, ⵠ[20], ⵠᐃⲆΔΔ, 169, 59, Δⵠⵠ],
		[1, ⵠ[ΔⲆΔᐃ], Ⲇⵠⵠⵠᐃ, 173, 61, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠⵠ, 143, 104, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 141, 102, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 138, 102, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 139, 102, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 140, 102, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⵠⵠΔ, 143, 107, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 0, 143, 106, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 143, 105, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⵠᐃⵠΔ, 142, 103, 1],
		[1, ⵠ[370], 0, 142, 104, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 141, 103, 1],
		[1, ⵠ[370], 3, 142, 105, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], Δᐃᐃᐃ, 140, 103, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⵠΔ, 141, 104, 1],
		[ᐃⵠ, ⵠ[220], 4, 151, 23, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[220], 4, 150, 22, 1],
		[1, ⵠ[220], 1, 149, 21, 1],
		[ᐃⵠⵠ, ⵠ[220], 4, 148, 21, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[220], 2, 147, ᐃⵠᐃΔ, ᐃⵠ],
		[1, ⵠ[220], 4, 147, 19, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[220], ᐃᐃⵠⵠ, 147, ⵠⵠⲆΔᐃⵠⲆ, 1],
		[ᐃⵠⵠ, ⵠ[220], 1, 147, ⲆⲆᐃⲆⲆ, ⵠⲆⲆ],
		[1, ⵠ[220], 3, 144, 9, 1],
		[ᐃⵠⵠ, ⵠ[220], ᐃᐃⵠⵠ, 147, 16, 1],
		[1, ⵠ[220], ⵠΔⲆΔ, 147, ⵠⲆᐃΔⲆ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[220], ᐃΔΔΔ, 147, 14, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[220], ᐃΔⲆΔ, 145, ᐃΔᐃⵠΔ, ΔⲆᐃ],
		[1, ⵠ[220], 5, 145, ΔΔᐃⲆᐃ, 1],
		[ΔⲆᐃ, ⵠ[220], ΔⲆᐃ, 146, ⲆⲆΔᐃᐃ, 1],
		[1, ⵠ[220], 2, 145, 13, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[220], 3, 155, 25, ᐃⵠⵠ],
		[1, ⵠ[220], 0, 155, 24, ⵠⲆⲆ],
		[1, ⵠ[220], 3, 153, 26, 1],
		[1, ⵠ[370], 0, 151, 24, 1],
		[1, ⵠ[370], 0, 153, 22, ΔⲆᐃ],
		[1, ⵠ[370], 3, 152, 22, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 3, 154, 22, ᐃⵠ],
		[1, ⵠ[370], 1, 157, 26, ᐃⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 157, 24, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 156, 26, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 154, 28, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 151, 26, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 152, 25, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 151, 25, 1],
		[ᐃⵠ, ⵠ[370], 2, 156, 27, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 157, 23, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 157, 22, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 150, 24, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 3, 150, 23, ᐃⵠ],
		[1, ⵠ[20], 38, 155, 29, 0],
		[ⵠⵠⲆ, ⵠ[20], 12, 157, 27, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], Δᐃⵠᐃᐃ, 153, 29, 0],
		[ⵠⵠⲆ, ⵠ[20], ᐃⲆⵠᐃᐃ, 158, 23, 0],
		[ⵠⵠⲆ, ⵠ[20], 13, 156, 21, 0],
		[1, ⵠ[20], ⵠⲆⲆⵠⲆᐃⵠ, 147, 36, 0],
		[1, ⵠ[20], Ⲇⵠⵠⵠᐃ, 161, 56, ⲆⵠⲆ],
		[1, ⵠ[ᐃᐃᐃⲆ], 13, 147, 79, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⲆΔ], ΔΔᐃⵠΔΔⵠ, 157, 99, 0],
		[ΔⲆᐃ, ⵠ[20], ⵠᐃⲆΔΔ, 172, 99, 0],
		[ΔⲆᐃ, ⵠ[220], ΔⲆΔⵠ, 143, 102, 1],
		[ⵠⵠⲆ, ⵠ[220], 4, 149, 96, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[220], ⲆⵠⲆⲆ, 145, 102, ⵠⲆⲆ],
		[1, ⵠ[220], 1, 148, 97, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[220], ⲆᐃᐃΔ, 148, 98, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⲆΔ, 144, 104, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 144, 103, 1],
		[1, ⵠ[370], 3, 145, 103, 1],
		[1, ⵠ[370], ⲆⵠⵠΔ, 145, 104, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠⲆ, 142, 101, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆΔⵠ, 143, 100, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔᐃⲆ, 141, 101, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 142, 100, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⲆⲆ, 141, 100, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 140, 101, 1],
		[1, ⵠ[370], 2, 144, 105, 1],
		[1, ⵠ[370], 3, 146, 103, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⲆΔⵠ, 146, 102, 1],
		[1, ⵠ[370], ΔⲆΔⵠ, 150, 95, 1],
		[1, ⵠ[370], 0, 150, 97, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⵠᐃ, 151, 98, 1],
		[1, ⵠ[370], 0, 153, 97, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⵠⵠΔ, 153, 96, ᐃⵠ],
		[1, ⵠ[370], 2, 149, 95, 1],
		[1, "s", 0, 213, 127, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[153], ⵠⲆⲆ, 214, 131, 0],
		[ΔⲆᐃ, ⵠ[153], ⵠⲆⲆ, 207, 128, 0],
		[1, ⵠ[153], 0, 208, 127, ⲆΔᐃ],
		[1, "s", ᐃⵠ, 207, 132, 1],
		[1, "s", 2, 208, 133, 1],
		[1, ⵠ[153], 0, 217, 132, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[153], ΔⲆⲆᐃ, 186, 158, ⲆⵠⲆ],
		[1, ⵠ[153], 0, 184, 160, 0],
		[1, "s", ΔⲆᐃ, 183, 156, 1],
		[1, "s", ⵠⲆΔΔ, 186, 159, 1],
		[ⵠⲆⲆ, "p", ⲆⲆⲆ, 182, 157, ⵠⵠⲆ],
		[ΔⲆᐃ, "p", ⲆⲆⲆ, 114, 205, 1],
		[ⵠⵠⲆ, ⵠ[153], ᐃⵠ, 117, 204, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[153], ⲆΔᐃ, 117, 205, ⲆⲆⲆ],
		[1, ⵠ[153], ᐃᐃΔⵠ, 112, 204, ⲆⵠⲆ],
		[ᐃⵠⵠ, "s", 2, 114, 207, 1],
		[1, "s", 2, 115, 204, 1],
		[ⵠⲆⲆ, ⵠ[153], 2, 122, 151, 0],
		[1, ⵠ[153], ΔⲆᐃ, 123, 150, ᐃⵠΔ],
		[1, ⵠ[153], 1, 117, 151, ΔⲆⵠ],
		[ⵠⵠⲆ, "s", 0, 118, 150, ⵠⲆⲆ],
		[1, "s", 1, 122, 152, ⵠⲆⲆ],
		[1, ⵠ[153], 2, 156, 130, ΔⲆⵠ],
		[1, ⵠ[153], 1, 154, 127, 0],
		[1, "s", 0, 153, 128, ⵠⵠⲆ],
		[1, "s", ⵠⵠⲆᐃ, 152, 130, ᐃⵠⵠ],
		[ᐃⵠⵠ, "p", ⲆⵠⲆ, 123, 65, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[153], 2, 125, 62, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[153], 1, 124, 62, 0],
		[1, ⵠ[153], Δⵠⵠ, 120, 65, 0],
		[1, "s", ᐃⵠ, 125, 63, 1],
		[1, "s", 1, 121, 64, 1],
		[ⵠⵠⲆ, "s", ⵠᐃⵠΔ, 122, 62, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], 0, 140, 106, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 144, 106, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 145, 105, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 144, 107, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 141, 106, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 141, 105, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 140, 105, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 140, 104, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆᐃ, 138, 103, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⵠ, 139, 104, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⵠⲆᐃ, 139, 103, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 139, 105, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 142, 106, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 142, 107, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 139, 101, 1],
		[1, ⵠ[ⵠⲆΔⵠ], ⵠΔΔᐃᐃ, 27, 264, 0],
		[1, ⵠ[220], ᐃΔΔΔ, 147, 99, 1],
		[ΔⲆᐃ, ⵠ[220], 1, 146, ⲆⲆⵠⵠⲆ, ⵠⲆⲆ],
		[1, ⵠ[220], ⲆⲆΔΔ, 145, 101, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 215, 47, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], 2, 216, 47, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 215, 48, 1],
		[ⵠⲆⲆ, ⵠ[220], ᐃΔⲆΔ, 214, 45, ᐃⵠⵠ],
		[1, ⵠ[220], ᐃΔΔΔ, 215, 45, 1],
		[ΔⲆᐃ, ⵠ[220], ⲆⵠⲆ, 216, 46, 1],
		[1, ⵠ[220], 4, 216, 48, 1],
		[ᐃⵠⵠ, ⵠ[220], ᐃΔⲆΔ, 216, 49, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], 4, 217, 50, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[220], ⵠΔⵠⲆ, 214, 49, 1],
		[1, ⵠ[220], 4, 211, 45, 1],
		[ΔⲆᐃ, ⵠ[220], ΔⲆΔⵠ, 213, 47, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 224, 48, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[153], 2, 111, 243, 0],
		[1, ⵠ[153], ᐃⵠⵠ, 108, 246, 0],
		[ⵠⲆⲆ, "s", ᐃⵠ, 110, 243, ΔⲆᐃ],
		[1, "s", Δⵠⵠ, 108, 245, 1],
		[ⵠⲆⲆ, "s", Δⵠⵠ, 121, 276, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[153], 2, 122, 277, 0],
		[1, ⵠ[153], ⵠᐃⵠΔ, 117, 276, ⲆΔᐃ],
		[1, ⵠ[153], 1, 118, 277, 0],
		[ᐃⵠ, "s", 1, 118, 278, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 66, ⵠⲆⵠⵠΔ, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 67, ⵠΔⵠᐃⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], Δⵠⵠ, 67, 17, 1],
		[ᐃⵠ, ⵠ[370], 2, 66, 17, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔᐃⲆ, 66, ⵠᐃⵠᐃⲆᐃΔ, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 68, ΔΔᐃⲆⲆ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⲆ, 36, ⲆⲆⵠᐃⲆ, 1],
		[1, ⵠ[370], 2, 36, ᐃⲆⲆᐃⵠⵠᐃ, 1],
		[1, ⵠ[370], 2, 36, ⵠⵠⵠⵠΔ, 1],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 35, ⲆⵠⲆⵠⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆΔⵠ, 36, 19, ᐃⵠ],
		[1, ⵠ[370], 3, 35, 18, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 66, 30, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆΔΔ, 66, 23, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠⲆ, 66, 22, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆΔⵠ, 66, 31, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⵠᐃⵠΔ, 36, 30, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 36, 23, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆ, 36, 22, 1],
		[1, ⵠ[370], 2, 36, 31, 1],
		[ᐃⵠⵠ, ⵠ[370], 3, 42, 13, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 0, 43, 13, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 44, Ⲇⵠⵠⵠᐃ, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⵠΔᐃⲆ, 42, 16, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⲆΔ, 41, 16, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 40, 16, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 42, 19, 1],
		[1, ⵠ[370], 3, 43, 19, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 3, 44, 19, ᐃⵠ],
		[1, ⵠ[370], ΔⲆΔⵠ, 45, 19, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 46, 19, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃⵠΔ, 43, 22, ᐃⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 42, 22, ⵠⲆⲆ],
		[1, ⵠ[370], 1, 41, 22, ᐃⵠ],
		[1, ⵠ[370], Δⵠⵠ, 40, 22, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 39, ΔΔΔⲆⲆΔᐃ, 1],
		[1, ⵠ[370], 1, 44, 26, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 45, 26, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 3, 46, 26, 1],
		[1, ⵠ[370], ⲆⵠⲆ, 47, 26, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 48, 26, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 47, 25, 1],
		[1, ⵠ[370], 3, 43, 27, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠ, 49, 32, 1],
		[1, ⵠ[370], 2, 50, 32, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 51, 32, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 52, 32, ΔⲆᐃ],
		[ⵠⵠⲆ, "d", ⲆⲆⲆ, 51, 29, 1],
		[ΔⲆᐃ, "d", ⵠⵠⲆ, 53, 29, ⵠⲆⲆ],
		[1, "d", 1, 49, 29, ᐃⵠ],
		[1, ⵠ[370], 3, 55, 31, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 3, 54, 32, 1],
		[1, ⵠ[370], 3, 47, 31, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⵠⵠΔ, 48, 32, ΔⲆᐃ],
		[1, ⵠ[370], 0, 51, 33, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 52, 33, 1],
		[1, ⵠ[370], 2, 50, 33, 1],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 56, 30, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 56, 31, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⵠⵠ, 46, 30, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 46, 31, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠⵠ, 53, 33, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⵠΔ, 49, 33, ᐃⵠ],
		[1, ⵠ[370], 2, 53, 32, 1],
		[1, ⵠ[370], 0, 55, 32, 1],
		[1, ⵠ[370], 0, 47, 32, 1],
		[ⵠⲆⲆ, "d", 1, 54, 35, 1],
		[ⵠⵠⲆ, ⵠ[26], 2, 35, ⵠⲆⲆᐃⲆ, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[26], 2, 36, 12, 0],
		[1, ⵠ[26], 2, 67, 15, 0],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⵠⵠ, 60, ⲆⲆΔᐃᐃ, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 59, ⵠⲆⲆⵠⲆᐃⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃⵠ, 58, ΔΔⲆΔΔ, 1],
		[1, ⵠ[370], ΔⵠⵠΔ, 62, 16, ᐃⵠ],
		[1, ⵠ[370], ⲆⵠⲆ, 61, ΔⲆⲆⲆᐃ, ΔⲆᐃ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 60, 16, ᐃⵠ],
		[1, ⵠ[370], ⵠΔᐃⲆ, 63, 17, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 60, 19, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆᐃ, 59, 19, 1],
		[1, ⵠ[370], 3, 58, ΔᐃⵠΔΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 57, 19, 1],
		[1, ⵠ[370], 2, 56, ΔⲆⲆⵠⵠ, 1],
		[1, ⵠ[370], ᐃⵠΔ, 55, ⵠⵠⵠⵠΔ, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔⲆ, 55, 17, 1],
		[1, ⵠ[370], 2, 63, 23, 1],
		[1, ⵠ[370], 0, 62, 22, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 61, 22, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 1, 60, 22, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 59, 22, 1],
		[1, ⵠ[370], 2, 54, 26, 1],
		[ᐃⵠ, ⵠ[370], 2, 55, 26, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 56, 26, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠⵠ, 57, 26, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 58, 26, 1],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 59, 27, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 68, 16, 1],
		[1, ⵠ[370], 2, 68, 15, ΔⲆᐃ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆΔⵠ, 69, 15, 1],
		[1, ⵠ[370], ⵠΔᐃⲆ, 70, ⲆΔΔᐃᐃ, 1],
		[1, ⵠ[370], 3, 70, 14, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆᐃ, 69, ⵠΔΔΔΔΔᐃ, ΔⲆᐃ],
		[1, ⵠ[370], ᐃⵠⵠ, 69, 16, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 71, Δⵠᐃᐃᐃ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⵠΔ, 71, 14, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆΔⵠ, 72, 13, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 70, ΔⲆᐃⵠᐃ, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 71, 8, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃᐃΔⵠ, 72, 8, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔ, 73, ⲆΔⵠⵠⲆ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 3, 74, 9, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠΔⵠⲆ, 74, ⵠⵠΔⵠΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔΔᐃ, 75, 8, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 3, 76, ⲆⵠΔᐃⲆ, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 75, ᐃᐃⲆⲆⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⵠΔ, 75, ᐃⵠⲆᐃⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], ΔⲆⵠ, 76, 10, 1],
		[ᐃⵠ, ⵠ[370], 0, 76, 16, ΔⲆᐃ],
		[1, ⵠ[370], 3, 76, 15, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⵠⵠΔ, 75, ⲆⲆᐃΔΔ, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 77, 11, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 77, 14, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆΔⵠ, 77, ΔΔᐃⲆᐃ, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 77, 13, 1],
		[ᐃⵠ, ⵠ[370], ⲆⵠⵠΔ, 77, ⲆΔΔᐃᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 0, 74, 18, 1],
		[1, ⵠ[370], 1, 75, 17, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 74, 17, 1],
		[1, ⵠ[370], 3, 73, 19, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 67, 23, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 68, 23, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 72, ΔⲆΔᐃ, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 73, ΔΔⵠΔ, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 74, 19, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 74, 36, ΔⲆᐃ],
		[1, ⵠ[370], 2, 77, 27, ⵠⲆⲆ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 76, 26, 1],
		[1, ⵠ[370], 2, 75, 26, 1],
		[1, ⵠ[370], ΔⲆⵠ, 74, 26, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 75, 25, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 0, 76, 25, 1],
		[1, ⵠ[370], ΔⲆᐃ, 77, 23, 1],
		[ᐃⵠ, ⵠ[370], ΔⲆⲆᐃ, 77, 16, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 76, ᐃⲆΔᐃΔΔΔ, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 76, 24, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 77, 24, ᐃⵠ],
		[1, ⵠ[370], 2, 77, 25, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 77, 26, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆᐃ, 75, 27, 1],
		[1, ⵠ[370], ⲆⵠⵠΔ, 76, 27, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⲆΔΔ, 67, 24, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 66, 24, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 73, 26, 1],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 74, 27, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 74, 25, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 66, 19, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 66, ⵠΔΔΔ, 1],
		[ᐃⵠ, ⵠ[370], 2, 66, 21, 1],
		[1, ⵠ[370], 2, 67, ΔᐃΔⵠⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 67, 22, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⵠ, 77, 36, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 0, 77, 32, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 1, 75, 35, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 75, 36, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 76, 36, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 77, 35, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 77, 34, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 76, 35, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 77, 33, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃᐃΔⵠ, 77, 31, ᐃⵠⵠ],
		[1, ⵠ[370], ⲆⲆⲆ, 77, 29, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 0, 71, 32, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⲆⲆⲆ, 76, 34, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 77, 30, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 77, 28, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 76, 28, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃᐃΔⵠ, 75, 28, 1],
		[1, ⵠ[370], 2, 76, 29, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⲆᐃ, 76, 33, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 70, 32, 1],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔⲆ, 69, 31, 1],
		[ΔⲆᐃ, ⵠ[370], 0, 68, 31, 1],
		[1, ⵠ[370], 2, 67, 31, 1],
		[1, ⵠ[370], 2, 67, 30, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 69, 32, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⲆ, 67, 32, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⲆΔ, 68, 32, 1],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 66, 32, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 66, 33, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 67, 33, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 70, 33, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 69, 33, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 68, 33, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔ, 68, 34, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⵠⲆ, 66, 35, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 67, 34, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 66, 34, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 65, 35, ᐃⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 64, 36, ΔⲆᐃ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 65, 36, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 67, 35, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 66, 36, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 69, 34, 1],
		[1, ⵠ[370], 2, 68, 35, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 76, 9, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 77, 9, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], 2, 77, ⲆⲆᐃᐃᐃ, 1],
		[1, ⵠ[370], 2, 77, ᐃᐃⵠᐃΔ, 1],
		[1, ⵠ[370], 2, 78, 8, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 78, ΔⲆᐃᐃΔ, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 78, ᐃᐃⵠⵠⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 78, 11, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 78, 12, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], 2, 78, ⲆⲆΔᐃⵠ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 0, 79, 9, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆᐃ, 79, ᐃᐃⲆΔⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 79, ⲆⲆᐃᐃᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔᐃⲆ, 79, 10, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 79, 12, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⵠⵠΔ, 80, 8, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⲆᐃ, 80, 10, 1],
		[1, ⵠ[370], 2, 80, ΔᐃⵠΔⵠ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 80, ⵠΔⲆᐃⲆᐃⵠ, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 81, ΔⲆᐃⵠᐃ, ᐃⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 81, ⲆⲆⵠⲆⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 81, ᐃᐃⵠⵠⵠ, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 78, 14, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], 2, 79, ⲆⲆⵠᐃⵠⵠⲆ, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 78, 15, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 80, ΔΔᐃⵠΔΔⵠ, 1],
		[1, ⵠ[370], ⲆΔᐃ, 79, ΔⲆⲆⲆⲆ, ΔⲆᐃ],
		[1, ⵠ[370], 0, 82, 9, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 82, ⲆΔⵠⵠⲆ, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 82, ᐃⵠⲆᐃⵠ, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 81, 11, 1],
		[ΔⲆᐃ, ⵠ[370], ΔⵠⵠΔ, 80, 13, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 78, 30, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⲆ, 78, 34, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 1, 78, 27, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], Δⵠⵠ, 78, 25, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 0, 79, 29, 1],
		[1, ⵠ[370], 0, 79, 32, 1],
		[1, ⵠ[370], ⲆⵠⲆ, 79, 35, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 78, 35, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 78, 36, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 79, 34, 1],
		[1, ⵠ[370], 2, 78, 33, 1],
		[1, ⵠ[370], 2, 79, 33, ΔⲆᐃ],
		[ᐃⵠ, ⵠ[370], 2, 78, 32, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 78, 31, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 79, 31, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 79, 30, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆΔΔ, 78, 29, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 78, 28, 1],
		[1, ⵠ[370], ΔⲆⲆᐃ, 79, 28, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 79, 27, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 2, 78, 26, ᐃⵠ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 79, 26, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠᐃⵠΔ, 78, 24, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 80, 34, ᐃⵠ],
		[1, ⵠ[370], 2, 80, 33, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 80, 31, ᐃⵠ],
		[1, ⵠ[370], 2, 80, 30, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 80, 32, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 80, 29, 1],
		[ᐃⵠ, ⵠ[370], 2, 80, 28, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 80, 27, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 0, 81, 30, 1],
		[1, ⵠ[370], ⵠⵠⲆ, 81, 32, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 1, 81, 28, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 81, 29, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 81, 31, ᐃⵠ],
		[1, ⵠ[370], 2, 81, 33, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 82, 30, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃᐃΔⵠ, 82, 31, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 82, 32, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⲆⲆ, 37, 36, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 38, 36, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 37, 35, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 36, 36, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⵠΔ, 34, 35, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 35, 35, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 36, 35, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 33, 34, 1],
		[1, ⵠ[370], 1, 35, 34, 1],
		[ᐃⵠ, ⵠ[370], ⲆⲆⵠΔ, 36, 34, 1],
		[ᐃⵠ, ⵠ[370], 2, 34, 34, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 36, 33, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 35, 33, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 34, 33, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 33, 33, 1],
		[1, ⵠ[370], 2, 31, 32, 1],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠⵠ, 36, 32, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 32, 32, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 35, 32, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 33, 32, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 2, 32, 33, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 33, 31, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⲆΔ, 34, 31, ᐃⵠ],
		[1, ⵠ[370], 2, 35, 31, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔΔᐃ, 34, 32, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 35, 30, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 39, 23, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 3, 39, 22, 1],
		[1, ⵠ[370], ΔⲆΔⵠ, 36, 24, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆⲆΔ, 35, 24, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 34, 23, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 35, 23, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 36, 20, ᐃⵠ],
		[1, ⵠ[370], 2, 36, 21, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠᐃⵠΔ, 35, 22, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 35, 16, 1],
		[1, ⵠ[370], 2, 34, 16, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 33, 16, ᐃⵠⵠ],
		[1, ⵠ[370], 0, 34, ΔⲆᐃΔⵠ, ⵠⵠⲆ],
		[1, ⵠ[370], Δⵠⵠ, 32, ᐃΔⵠⲆΔ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 31, ΔⵠᐃΔΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆⲆΔ, 30, Ⲇⵠⵠⵠᐃ, 1],
		[1, ⵠ[370], 1, 33, 15, 1],
		[ΔⲆᐃ, ⵠ[370], 1, 31, ⲆⲆΔᐃᐃ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⵠᐃ, 32, ΔⵠᐃΔΔ, 1],
		[ⵠⲆⲆ, ⵠ[370], 0, 31, ΔⲆᐃᐃᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ΔⲆⲆᐃ, 32, 8, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 25, 13, 1],
		[ⵠⵠⲆ, ⵠ[370], 0, 25, ⲆᐃᐃⲆΔ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 25, ᐃΔᐃⵠΔ, 1],
		[1, ⵠ[370], ⵠⲆⲆΔ, 25, ᐃᐃⲆᐃᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 0, 25, 9, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 2, 25, 8, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃⵠΔⲆ, 26, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], 2, 27, 8, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⲆΔ, 28, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], 2, 29, 8, 1],
		[1, ⵠ[370], 2, 30, 8, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 26, 9, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 27, ᐃᐃⲆⲆⲆ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 26, 10, ᐃⵠ],
		[1, ⵠ[370], 1, 27, 10, ⵠⲆⲆ],
		[ⵠⵠⲆ, ⵠ[370], 3, 28, 9, 1],
		[1, ⵠ[370], 3, 25, Δⵠᐃⵠⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 25, 15, 1],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 26, 15, ᐃⵠ],
		[1, ⵠ[370], 3, 27, 16, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔ, 28, ᐃⲆᐃⲆΔ, 1],
		[1, ⵠ[370], ⵠⵠⲆ, 29, 18, ᐃⵠⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 26, ᐃᐃᐃⲆⲆ, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ⵠⲆΔΔ, 25, Ⲇᐃᐃⵠᐃ, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 27, 17, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 26, ᐃⲆⲆᐃⵠⵠᐃ, 1],
		[1, ⵠ[370], ⵠⲆⲆ, 27, 18, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠΔⲆΔ, 28, ⲆⵠᐃᐃⲆ, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 30, ΔⲆⲆⵠⵠ, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 29, 19, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ᐃⵠΔⲆ, 24, 14, 1],
		[1, ⵠ[370], 2, 24, 15, ⵠⵠⲆ],
		[1, ⵠ[370], 0, 23, ΔⵠᐃΔΔ, ᐃⵠ],
		[1, ⵠ[370], ΔⲆⲆᐃ, 24, ᐃⵠⲆᐃⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 24, ᐃΔᐃⲆᐃⵠᐃ, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 24, ⲆᐃᐃⲆΔ, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 24, ⵠᐃⵠⲆΔⲆⲆ, 1],
		[1, ⵠ[370], 1, 23, ᐃᐃⲆᐃᐃ, 1],
		[ᐃⵠ, ⵠ[370], ΔΔᐃ, 22, ⲆΔⵠⵠⲆ, 1],
		[1, ⵠ[370], 0, 22, 12, 1],
		[ᐃⵠ, ⵠ[370], 1, 23, ⲆⲆᐃᐃᐃ, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⲆΔ, 24, 8, ⵠⵠⲆ],
		[1, ⵠ[370], 2, 24, ᐃᐃΔⲆⵠⲆΔ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⲆΔ, 23, 9, ΔⲆᐃ],
		[ⵠⲆⲆ, ⵠ[370], ⵠⵠⲆᐃ, 22, 9, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 22, 10, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 22, ΔΔΔΔⵠ, 1],
		[ᐃⵠ, ⵠ[370], ⵠᐃⵠΔ, 23, ᐃᐃⲆΔⲆ, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 23, ⵠⵠᐃᐃⵠ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 23, 13, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 22, 13, ᐃⵠ],
		[1, ⵠ[370], 2, 21, 9, 1],
		[1, ⵠ[370], 2, 21, ⲆΔⵠⵠⲆ, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 29, 25, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 25, 24, ⵠⵠⲆ],
		[1, ⵠ[370], ᐃᐃΔⵠ, 26, 25, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 27, 25, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⵠⲆ, 28, 25, ⵠⵠⲆ],
		[1, ⵠ[370], 1, 25, 23, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 26, 24, 1],
		[1, ⵠ[370], 0, 24, 25, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 3, 23, 24, 1],
		[1, ⵠ[370], ⵠΔᐃⲆ, 24, 24, 1],
		[1, ⵠ[370], 3, 25, 25, 1],
		[1, ⵠ[370], 3, 23, 25, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠⵠⲆ, 22, 26, 1],
		[1, ⵠ[370], ΔⲆᐃ, 26, 26, ⵠⲆⲆ],
		[1, ⵠ[370], 1, 29, 26, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ᐃᐃΔⵠ, 23, 26, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 24, 26, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], 2, 25, 26, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 27, 26, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠᐃ, 28, 26, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 30, 26, ᐃⵠⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 29, 27, 1],
		[ᐃⵠ, ⵠ[370], 2, 28, 28, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠ, 26, 29, 1],
		[1, ⵠ[370], 0, 28, 27, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 27, 28, 1],
		[ᐃⵠ, ⵠ[370], 2, 27, 27, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 2, 26, 28, ⵠⲆⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 26, 27, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 25, 28, 1],
		[1, ⵠ[370], 2, 25, 27, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 23, 27, ᐃⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 22, 27, ᐃⵠ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 24, 27, 1],
		[ⵠⲆⲆ, ⵠ[370], ΔⲆⵠ, 24, 28, 1],
		[1, ⵠ[370], ⲆΔᐃ, 25, 32, 1],
		[ᐃⵠ, ⵠ[370], 1, 24, 30, 1],
		[1, ⵠ[370], ⵠΔⵠᐃ, 25, 31, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ᐃⵠΔⲆ, 25, 30, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 25, 29, ΔⲆᐃ],
		[1, ⵠ[370], 2, 24, 29, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 23, 29, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 26, 33, 1],
		[1, ⵠ[370], 0, 26, 34, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 27, 35, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 22, 28, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⲆΔΔ, 23, 28, ᐃⵠ],
		[1, ⵠ[370], 2, 24, 31, 1],
		[1, ⵠ[370], 2, 24, 32, 1],
		[1, ⵠ[370], ⵠΔⲆΔ, 25, 33, ΔⲆᐃ],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 26, 35, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠⲆΔΔ, 24, 33, ᐃⵠⵠ],
		[1, ⵠ[370], 2, 25, 34, 1],
		[ⵠⲆⲆ, ⵠ[370], 1, 22, 29, 1],
		[ΔⲆᐃ, ⵠ[370], 1, 24, 34, ⵠⲆⲆ],
		[1, ⵠ[370], ᐃⵠΔ, 23, 35, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆΔΔ, 25, 35, ⵠⲆⲆ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 24, 35, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⵠⲆᐃ, 23, 34, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 23, 33, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⲆΔᐃ, 22, 33, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 1, 23, 32, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠᐃ, 22, 32, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 23, 31, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 23, 30, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 22, 30, 1],
		[1, ⵠ[370], ⲆⲆⵠΔ, 22, 31, 1],
		[ⵠⵠⲆ, ⵠ[370], 1, 21, 31, 1],
		[ᐃⵠⵠ, ⵠ[370], 0, 21, 29, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ᐃⵠΔⲆ, 21, 30, ᐃⵠ],
		[1, ⵠ[370], ⲆⲆⵠΔ, 24, 36, 1],
		[ᐃⵠ, ⵠ[370], 2, 26, 36, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[370], 2, 25, 36, 1],
		[1, ⵠ[370], 2, 27, 36, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 28, 36, ⵠⵠⲆ],
		[1, "d", 2, 83, 65, 1],
		[ΔⲆᐃ, "d", 2, ᐃΔⲆⲆⲆᐃᐃ, 67, ᐃⵠ],
		[ⵠⲆⲆ, "g", ᐃⵠΔ, 15, ⵠᐃⵠⲆⵠ, 1],
		[1, "s", Δⵠⵠ, 18, 13, ᐃⵠⵠ],
		[ΔⲆᐃ, "s", ⲆΔᐃ, 85, 11, 1],
		[ⵠⲆⲆ, "f", 0, 41, 102, ΔⲆᐃ],
		[1, "f", 0, 42, 124, ⵠⵠⲆ],
		[ᐃⵠⵠ, "f", 0, 64, 116, ⵠⲆⲆ],
		[ᐃⵠⵠ, "f", 0, 74, 104, 1],
		[ᐃⵠ, "f", ⲆⲆⲆ, 70, 87, ΔⲆᐃ],
		[1, "f", 0, 27, 96, 1],
		[ⵠⲆⲆ, "f", ⲆⵠⲆ, 22, 79, 1],
		[ΔⲆᐃ, "f", ᐃⵠΔ, ᐃᐃᐃⲆ, 117, 1],
		[ⵠⵠⲆ, "f", Δⵠⵠ, 30, 137, ⵠⵠⲆ],
		[ᐃⵠ, "f", ⲆΔᐃ, 59, 146, 1],
		[1, "f", 0, 52, 147, 1],
		[1, "f", ΔⲆⵠ, ⲆᐃΔⵠ, 149, ᐃⵠ],
		[ᐃⵠⵠ, "f", 0, 36, 146, ᐃⵠⵠ],
		[1, "f", 0, 62, 124, ᐃⵠⵠ],
		[1, "g", 1, 34, 121, ΔⲆᐃ],
		[ⵠⵠⲆ, "g", 1, 52, 116, 1],
		[1, "g", 1, 78, 116, 1],
		[ⵠⲆⲆ, "g", 1, 71, 129, 1],
		[1, "s", 0, 53, 100, 1],
		[ᐃⵠ, "s", 0, 73, 111, 1],
		[ⵠⲆⲆ, "s", 0, 77, 126, ΔⲆᐃ],
		[1, "s", ᐃⵠΔ, 48, 90, 1],
		[1, "s", 0, ΔⲆᐃⵠΔ, 102, ᐃⵠ],
		[1, "s", ⲆΔᐃ, 18, 127, ᐃⵠ],
		[1, "s", 0, 35, 159, 1],
		[ᐃⵠⵠ, "s", 0, 65, 54, 1],
		[1, "s", 0, 44, 52, 1],
		[1, "s", 0, 26, 51, ᐃⵠ],
		[ⵠⲆⲆ, "f", 1, 56, 136, ᐃⵠⵠ],
		[ΔⲆᐃ, "f", 1, 41, 133, 1],
		[1, "f", ᐃⵠ, 80, 120, ᐃⵠⵠ],
		[1, "f", 1, 16, 117, ᐃⵠⵠ],
		[ⵠⵠⲆ, "f", ⵠⲆⲆ, Δⵠᐃᐃᐃ, 99, ᐃⵠ],
		[1, "f", 1, ΔⲆᐃΔⵠ, 89, ᐃⵠⵠ],
		[1, "f", 1, 90, 98, 1],
		[ᐃⵠⵠ, "f", ᐃⵠ, 84, 95, ᐃⵠ],
		[1, "f", 1, ᐃᐃᐃⲆⲆ, 57, 1],
		[1, "f", 1, 77, 53, ⵠⵠⲆ],
		[ⵠⵠⲆ, "d", ⵠⵠⲆ, 48, 35, ⵠⵠⲆ],
		[1, ⵠ[20], ⲆΔⵠⵠⲆ, 33, Δⵠᐃᐃᐃ, ⲆⲆⲆ],
		[1, ⵠ[ᐃᐃᐃⲆ], 8, 30, ᐃⲆΔΔᐃ, 0],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], ΔᐃΔᐃⲆΔⵠ, 32, 30, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔⲆⵠ], ΔᐃΔᐃⵠ, 30, 25, ᐃⵠΔ],
		[1, ⵠ[20], ΔⲆⵠΔᐃ, 33, 21, ⲆΔᐃ],
		[1, ⵠ[20], 8, 31, 34, Δⵠⵠ],
		[1, ⵠ[20], 8, 67, 29, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔⲆⵠ], ⵠΔⲆⲆᐃ, 70, 22, 0],
		[ᐃⵠ, ⵠ[20], 10, 70, 16, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], ⲆΔⵠᐃⲆ, 75, 11, 0],
		[ΔⲆᐃ, ⵠ[20], ⲆⲆᐃᐃᐃ, 68, 10, 0],
		[ᐃⵠ, ⵠ[20], 8, 75, 30, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 11, 71, 33, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], ΔᐃᐃΔᐃ, 72, 25, 0],
		[1, ⵠ[ΔΔⵠΔ], 11, 64, 25, ⲆⲆⲆ],
		[1, ⵠ[ᐃᐃᐃⲆ], ⲆⵠΔᐃΔⲆᐃ, 52, 10, 0],
		[1, ⵠ[ⵠᐃⲆΔ], ΔᐃᐃΔᐃ, 31, 15, ᐃⵠΔ],
		[1, ⵠ[20], 30, 29, 14, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 30, 36, ⵠⲆⲆᐃⲆ, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 30, 34, 29, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 30, 30, 29, ⲆΔᐃ],
		[1, ⵠ[20], 30, 71, 29, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], 28, 68, 25, 0],
		[ΔⲆᐃ, ⵠ[20], 28, 75, 15, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 27, 67, 19, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 29, 72, 10, ΔΔᐃ],
		[1, ⵠ[ΔⵠΔⲆ], 29, 75, 32, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[20], 29, 32, 20, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[26], ΔⲆᐃ, 39, ᐃⲆᐃⵠⵠ, 0],
		[ⵠⵠⲆ, ⵠ[26], 1, 34, Δⵠᐃⵠⵠ, 0],
		[ΔⲆᐃ, ⵠ[26], ᐃⵠⵠ, 74, 28, 0],
		[1, ⵠ[26], ΔⲆⲆᐃ, 74, 29, 0],
		[1, ⵠ[26], 2, 69, 30, 0],
		[ⵠⵠⲆ, ⵠ[26], 2, 77, 22, 0],
		[1, ⵠ[26], 2, 74, 21, 0],
		[ΔⲆᐃ, ⵠ[26], 2, 76, 18, Δⵠⵠ],
		[1, ⵠ[26], ΔⲆᐃ, 78, 17, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[26], 1, 28, 19, ΔⲆⵠ],
		[1, ⵠ[26], 2, 27, 24, 0],
		[ᐃⵠ, ⵠ[26], 2, 24, 17, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[26], ᐃⵠΔⲆ, 29, 21, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[26], 1, 27, 32, ᐃⵠΔ],
		[1, ⵠ[26], 2, 30, 33, 0],
		[ⵠⵠⲆ, ⵠ[26], ᐃⵠ, 29, 28, ᐃⵠΔ],
		[1, ⵠ[26], 2, 28, 31, ᐃⵠΔ],
		[1, ⵠ[26], 2, ⵠᐃⵠⲆ, 24, ΔⲆⵠ],
		[1, ⵠ[26], 2, 20, 26, ΔΔᐃ],
		[1, ⵠ[26], 2, 23, 16, ΔⲆⵠ],
		[1, ⵠ[26], 2, 11, 25, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 33, 29, 22, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[20], 34, 32, 25, 0],
		[ⵠⵠⲆ, ⵠ[20], 34, 30, ⵠⵠⵠⵠΔ, 0],
		[1, ⵠ[ΔⵠΔⲆ], 33, 78, ⲆⵠᐃᐃⲆ, ΔⲆⵠ],
		[1, ⵠ[ⲆᐃΔⵠ], 33, 73, 35, 0],
		[ᐃⵠ, ⵠ[20], 36, 72, 23, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 35, 25, ⵠⵠⵠⵠΔ, ᐃⵠΔ],
		[1, "d", ᐃⵠ, 83, 41, 1],
		[1, "d", ᐃⵠⵠ, ΔΔᐃⲆⲆ, 40, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 224, 104, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], ⲆⲆⲆ, 224, 105, ⵠⵠⲆ],
		[ᐃⵠ, ⵠ[370], 3, 224, 106, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], 3, 216, 128, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[220], ΔⲆⵠ, 215, 126, 1],
		[1, "s", ⲆⲆⲆ, 216, 130, ΔⲆᐃ],
		[1, "s", ΔⲆᐃ, 217, 129, 1],
		[1, "s", 0, 218, 128, ⵠⵠⲆ],
		[1, "s", 1, 217, 127, ᐃⵠ],
		[1, "s", ΔΔᐃ, 217, 126, 1],
		[1, "s", 1, 217, 125, ᐃⵠ],
		[ᐃⵠ, "s", ⲆⲆⲆ, 216, 124, 1],
		[ⵠⲆⲆ, "s", ᐃⵠ, 215, 124, ᐃⵠⵠ],
		[1, "s", Δⵠⵠ, 214, 124, ⵠⲆⲆ],
		[1, "s", ᐃⵠⵠ, 213, 125, 1],
		[1, "s", 0, 213, 126, ᐃⵠⵠ],
		[1, ⵠ[153], ᐃⵠΔⲆ, 217, 130, 0],
		[1, ⵠ[153], ⵠᐃⵠΔ, 212, 125, 0],
		[1, "p", ⲆⲆⲆ, 214, 134, ⵠⲆⲆ],
		[ⵠⵠⲆ, "s", 1, 211, 126, 1],
		[1, "b", 1, 45, 277, 0],
		[ⵠⲆⲆ, "b", ΔⲆᐃ, 50, 286, ⲆⵠⲆ],
		[1, "b", 2, 51, 284, 0],
		[1, "b", 1, 47, 287, ⲆⵠⲆ],
		[ᐃⵠ, "b", ⲆⵠⲆ, 39, 285, 0],
		[ΔⲆᐃ, "b", Δᐃᐃᐃ, 40, 283, Δⵠⵠ],
		[ⵠⵠⲆ, "b", 0, 52, 283, ᐃⵠΔ],
		[ⵠⵠⲆ, "b", ⵠⲆⲆ, 51, 280, ΔⲆⵠ],
		[ⵠⵠⲆ, "g", 0, 45, 269, 1],
		[1, "p", 0, 55, 281, 1],
		[ⵠⲆⲆ, "b", 1, ᐃᐃⵠⵠ, 172, 0],
		[1, "b", ⵠΔⲆΔ, ⲆΔᐃⵠᐃ, 172, 0],
		[ⵠⲆⲆ, "t", ⲆᐃᐃΔ, 6, 171, ⲆΔᐃ],
		[1, "t", ᐃⵠⵠ, ᐃᐃⵠⵠ, 170, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", 1, 5, 164, ΔⲆⵠ],
		[ⵠⵠⲆ, "t", 3, 6, 164, ⲆⲆⲆ],
		[1, "b", ⲆΔᐃ, 6, 165, ⲆΔᐃ],
		[1, "t", ΔⲆΔⵠ, Δᐃⵠⵠ, 165, 0],
		[ᐃⵠ, "b", ᐃⵠΔⲆ, ᐃⲆⵠⲆΔ, 166, 0],
		[1, "t", 4, ᐃᐃⵠⵠ, 166, 0],
		[ⵠⵠⲆ, "t", ᐃΔⲆΔ, ⵠⲆΔⲆᐃ, 167, ΔⲆⵠ],
		[1, "t", ⵠΔⲆΔ, 6, 168, 0],
		[1, "t", 0, ⵠᐃⲆⵠ, 169, 0],
		[1, "t", 4, 6, 170, ⲆⵠⲆ],
		[1, "t", 0, 5, 167, 0],
		[ΔⲆᐃ, "t", 2, 5, 169, 0],
		[ⵠⵠⲆ, "b", 0, ⲆΔᐃΔ, 168, 0],
		[ᐃⵠ, "s", 1, ᐃⲆⲆΔᐃ, 153, ᐃⵠⵠ],
		[ⵠⲆⲆ, "s", ⵠᐃⵠΔ, ᐃⲆⲆΔᐃ, 151, 1],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], ⲆᐃᐃΔ, 7, 152, 0],
		[1, "t", 1, ⲆᐃᐃΔ, 154, ΔΔᐃ],
		[ⵠⲆⲆ, "b", ⲆⵠⲆ, ⲆΔᐃⵠᐃ, 154, 0],
		[1, "t", ⲆⲆⵠΔ, 6, 155, 0],
		[1, "b", ᐃⵠΔⲆ, ᐃⲆⵠⲆΔ, 156, ᐃⵠΔ],
		[ⵠⵠⲆ, "t", ᐃᐃΔⵠ, 5, 157, ⲆΔᐃ],
		[ᐃⵠⵠ, "t", ⵠᐃᐃⲆ, 5, 155, ⲆⵠⲆ],
		[1, "b", ⲆⲆⲆ, ⲆΔᐃⵠᐃ, 157, 0],
		[ΔⲆᐃ, "t", 1, ⲆΔᐃΔ, 156, 0],
		[1, "t", ᐃᐃⵠⵠ, ᐃⲆᐃⵠᐃ, 158, ΔΔᐃ],
		[ΔⲆᐃ, "b", ⲆⲆⵠΔ, ᐃⲆⵠⲆΔ, 159, ⲆⲆⲆ],
		[1, "b", 0, 6, 162, 0],
		[ΔⲆᐃ, "t", 4, 6, 163, 0],
		[1, "t", 4, ⲆΔᐃⵠᐃ, 161, ᐃⵠΔ],
		[ᐃⵠⵠ, "b", 1, 6, 160, 0],
		[ⵠⵠⲆ, "b", 2, Δᐃⵠⵠ, 163, 0],
		[ΔⲆᐃ, "b", ᐃⵠΔⲆ, 5, 158, 0],
		[1, "b", ⵠⵠⲆᐃ, 5, 161, 0],
		[1, "t", 1, 5, 162, ⲆΔᐃ],
		[1, "t", ᐃⵠⵠ, 5, 160, ΔⲆⵠ],
		[ᐃⵠ, "b", ⵠⲆⲆ, 85, 176, ⲆⵠⲆ],
		[ⵠⲆⲆ, "b", 2, 83, 178, ⲆⵠⲆ],
		[1, "s", 1, 82, 177, ᐃⵠ],
		[ᐃⵠⵠ, "b", 0, 76, 172, 0],
		[ᐃⵠ, "b", ΔⵠⵠΔ, 76, 174, 0],
		[ⵠⲆⲆ, "t", ⵠⲆⵠⵠ, 73, 174, Δⵠⵠ],
		[1, "t", 5, 72, 175, 0],
		[ⵠⵠⲆ, "t", 5, 87, 173, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[20], ᐃⵠΔⲆ, 76, 175, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[20], 3, 77, 171, 0],
		[1, ⵠ[ΔⲆΔᐃ], ΔⲆΔⵠ, 86, 177, 0],
		[1, ⵠ[ΔⲆΔᐃ], ⵠᐃⵠΔ, 71, 175, ΔΔᐃ],
		[1, "s", 1, 70, 174, 1],
		[1, "r", 48, 174, ΔⲆⵠ],
		[ᐃⵠ, "r", 49, 175, 0],
		[ᐃⵠⵠ, "r", 50, 175, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 51, 175, 0],
		[ᐃⵠ, "r", 51, 174, 0],
		[ᐃⵠⵠ, "r", 50, 174, 0],
		[1, "r", 49, 174, ΔΔᐃ],
		[ΔⲆᐃ, "r", 52, 175, 0],
		[ⵠⲆⲆ, "r", 52, 176, ΔΔᐃ],
		[1, "r", 51, 176, ΔΔᐃ],
		[1, "r", 50, 176, ⲆⵠⲆ],
		[1, "r", 49, 176, ᐃⵠΔ],
		[1, "r", 48, 175, 0],
		[ⵠⵠⲆ, "r", 47, 175, 0],
		[1, "r", 48, 176, 0],
		[ⵠⵠⲆ, "r", 69, 163, ⲆⵠⲆ],
		[1, "r", 70, 163, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 71, 163, 0],
		[1, "r", 73, 163, ᐃⵠΔ],
		[1, "r", 72, 163, 0],
		[1, "r", 73, 164, ⲆΔᐃ],
		[1, "r", 72, 164, ⲆⵠⲆ],
		[ᐃⵠ, "r", 71, 164, 0],
		[1, "r", 70, 164, ⲆⵠⲆ],
		[1, "r", 69, 164, 0],
		[ΔⲆᐃ, "r", 68, 164, ΔⲆⵠ],
		[ᐃⵠ, "r", 68, 165, ᐃⵠΔ],
		[ΔⲆᐃ, "r", 69, 165, 0],
		[ⵠⲆⲆ, "r", 70, 165, 0],
		[1, "r", 71, 165, ᐃⵠΔ],
		[ⵠⲆⲆ, "r", 72, 165, 0],
		[1, "r", 74, 164, ⲆⵠⲆ],
		[1, "r", 73, 165, 0],
		[1, "r", 72, 166, 0],
		[1, "r", 71, 166, ⲆⲆⲆ],
		[ΔⲆᐃ, "r", 70, 166, 0],
		[ⵠⲆⲆ, "r", 74, 165, 0],
		[1, "r", 24, 164, ⲆⵠⲆ],
		[1, "r", 25, 164, 0],
		[ᐃⵠ, "r", 27, 164, ΔⲆⵠ],
		[1, "r", 26, 164, 0],
		[1, "r", 28, 165, ⲆΔᐃ],
		[1, "r", 26, 165, 0],
		[1, "r", 27, 165, 0],
		[1, "r", 25, 165, ΔⲆⵠ],
		[1, "r", 24, 165, 0],
		[1, "r", 23, 165, 0],
		[1, "r", 22, 165, 0],
		[1, "r", 21, 165, ΔⲆⵠ],
		[1, "r", 21, 166, 0],
		[1, "r", 22, 166, 0],
		[1, "r", 23, 166, 0],
		[1, "r", 24, 166, 0],
		[1, "r", 25, 166, 0],
		[1, "r", 26, 166, 0],
		[1, "r", 27, 166, 0],
		[ᐃⵠ, "r", 28, 166, 0],
		[ᐃⵠ, "r", 28, 167, 0],
		[1, "r", 26, 167, ᐃⵠΔ],
		[1, "r", 25, 167, 0],
		[ⵠⲆⲆ, "r", 24, 167, ⲆΔᐃ],
		[ⵠⵠⲆ, "r", 23, 167, ΔⲆⵠ],
		[1, "r", 22, 167, ΔΔᐃ],
		[1, "r", 27, 167, 0],
		[1, "r", 29, 166, 0],
		[ⵠⲆⲆ, "r", 29, 167, 0],
		[1, "r", 28, 168, ⲆⵠⲆ],
		[ⵠⲆⲆ, "r", 27, 168, ⲆⲆⲆ],
		[1, "r", 26, 168, ⲆⲆⲆ],
		[1, "r", 25, 168, 0],
		[1, "r", 24, 168, 0],
		[ΔⲆᐃ, "r", 23, 168, ⲆⵠⲆ],
		[ΔⲆᐃ, "r", 27, 169, ⲆⲆⲆ],
		[1, "r", 26, 169, 0],
		[ᐃⵠⵠ, "r", 25, 169, ⲆⵠⲆ],
		[ᐃⵠ, "r", 24, 169, ΔⲆⵠ],
		[ⵠⲆⲆ, "r", 23, 169, 0],
		[ⵠⲆⲆ, "r", 22, 168, ⲆΔᐃ],
		[1, "r", 21, 167, ⲆΔᐃ],
		[ΔⲆᐃ, "s", ΔⲆᐃ, 52, 174, 1],
		[ᐃⵠ, "t", 3, 50, 177, 0],
		[1, "t", 4, 49, 177, 0],
		[1, "b", ⲆⵠⲆ, 47, 174, 0],
		[ⵠⵠⲆ, "b", ᐃⵠΔ, 69, 166, 0],
		[ⵠⵠⲆ, "t", 2, 68, 166, 0],
		[ᐃⵠⵠ, "t", 5, 74, 163, 0],
		[ⵠⲆⲆ, "t", ⵠⲆⲆ, 73, 162, 0],
		[ⵠⵠⲆ, "s", ⲆⲆⲆ, 73, 166, ⵠⲆⲆ],
		[1, "s", ⵠⵠⲆᐃ, 76, 165, 1],
		[1, "g", 2, 59, 175, 1],
		[ⵠⲆⲆ, "p", ⲆⵠⲆ, 78, 168, ⵠⵠⲆ],
		[1, "p", 0, 61, 162, ΔⲆᐃ],
		[1, "p", 0, 42, 170, 1],
		[1, "p", ⲆⵠⲆ, ΔⵠΔⲆ, 174, ⵠⵠⲆ],
		[1, "p", 0, 16, 160, 1],
		[ⵠⵠⲆ, "b", 1, 23, 164, Δⵠⵠ],
		[1, "b", 1, 28, 169, 0],
		[1, "b", ⵠΔⵠᐃ, 29, 168, Δⵠⵠ],
		[ΔⲆᐃ, "b", 2, 16, 170, 0],
		[1, "t", ⵠⵠⲆ, 15, 171, ΔⲆⵠ],
		[1, "t", 5, Δⵠᐃᐃᐃ, 175, 0],
		[1, "t", ΔⲆⲆΔ, ΔᐃⵠᐃⲆ, 166, ⲆⵠⲆ],
		[1, "t", ᐃᐃⵠⵠ, 26, 163, ⲆⵠⲆ],
		[1, "s", ᐃⵠ, 29, 165, ⵠⵠⲆ],
		[1, "t", 5, 11, 167, 0],
		[ᐃⵠⵠ, "t", 0, 29, 176, ⲆⵠⲆ],
		[1, "b", 2, 30, 175, 0],
		[1, "t", ⵠᐃⵠΔ, 24, 177, ⲆⲆⲆ],
		[1, "b", ᐃⵠ, 37, 174, 0],
		[1, "b", 0, 35, 172, ᐃⵠΔ],
		[1, "b", 3, 37, 170, 0],
		[ᐃⵠⵠ, "t", 4, 38, 169, ⲆΔᐃ],
		[1, "t", 4, 34, 173, ΔⲆⵠ],
		[ᐃⵠ, "t", ⲆⲆᐃⵠ, 38, 175, Δⵠⵠ],
		[ᐃⵠ, "b", 2, 39, 173, ᐃⵠΔ],
		[1, "t", 3, 37, 176, 0],
		[ⵠⵠⲆ, "t", 4, 30, 168, ΔΔᐃ],
		[ᐃⵠⵠ, "s", 2, 35, 176, 1],
		[1, "s", 1, 41, 175, 1],
		[1, "b", ⲆⲆⵠΔ, 53, 176, ΔΔᐃ],
		[1, "t", ⲆΔᐃΔ, 55, 173, ΔⲆⵠ],
		[1, "t", Δᐃⵠⵠ, 45, 170, 0],
		[1, "b", ⵠⵠⲆ, 53, 162, 0],
		[1, "b", 0, 50, 164, ⲆⲆⲆ],
		[ᐃⵠ, "t", 2, 54, 163, ⲆΔᐃ],
		[ⵠⲆⲆ, "t", ΔⵠⵠΔ, 49, 165, ᐃⵠΔ],
		[1, "t", 4, 48, 160, 0],
		[ⵠⲆⲆ, "t", ⵠᐃᐃⲆ, 57, 164, Δⵠⵠ],
		[ⵠⲆⲆ, "t", ᐃΔⲆΔ, 66, 162, ⲆⵠⲆ],
		[ⵠⵠⲆ, "b", 1, 86, 161, ⲆⲆⲆ],
		[1, "b", 2, 81, 163, ⲆⵠⲆ],
		[1, "t", 3, 85, 162, 0],
		[1, "t", ΔⲆⲆΔ, 81, 162, ⲆⲆⲆ],
		[1, "t", 5, 88, 163, 0],
		[1, "t", ΔⲆᐃ, 84, 166, ⲆΔᐃ],
		[ⵠⲆⲆ, "t", ⲆΔᐃΔ, 72, 160, 0],
		[1, "t", 5, 70, 170, 0],
		[ⵠⲆⲆ, "s", ᐃⵠ, 57, 162, 1],
		[1, "b", ⵠⵠⲆ, 39, 161, ⲆΔᐃ],
		[1, "b", ΔⲆⵠ, 34, 164, ΔΔᐃ],
		[1, "b", 2, 54, 164, 0],
		[1, "t", 1, 59, 169, ⲆⵠⲆ],
		[ᐃⵠⵠ, "t", 3, 60, 170, ΔⲆⵠ],
		[1, "t", Δⵠⵠⵠ, 63, 169, ΔⲆⵠ],
		[1, "t", ᐃΔⲆΔ, 63, 174, 0],
		[ᐃⵠⵠ, "t", ⵠⲆⲆ, 62, 175, ⲆΔᐃ],
		[1, "t", Δᐃⵠⵠ, 40, 162, ΔΔᐃ],
		[ⵠⲆⲆ, "t", 1, 63, 180, 0],
		[ΔⲆᐃ, "t", ⵠⲆΔΔ, 64, 179, 0],
		[ᐃⵠ, "t", 2, 35, 165, 0],
		[ⵠⵠⲆ, "s", 1, 63, 173, 1],
		[ᐃⵠⵠ, "s", 2, 40, 165, ᐃⵠⵠ],
		[ⵠⵠⲆ, "b", 0, 46, 169, ⲆⵠⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], 22, 74, 168, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 22, 86, 168, 0],
		[1, ⵠ[20], 22, 83, 175, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 22, 78, 175, ⲆΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], 19, 72, 176, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔⲆⵠ], ⲆΔΔⲆΔ, 68, 168, 0],
		[1, ⵠ[20], 19, 65, 163, ⲆΔᐃ],
		[1, ⵠ[ΔⵠΔⲆ], 19, 75, 162, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[20], 19, 80, 162, 0],
		[1, ⵠ[ΔⵠΔⲆ], 19, 88, 159, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], 19, 87, 164, 0],
		[1, ⵠ[ΔⵠΔⲆ], 19, 61, 177, 0],
		[ⵠⲆⲆ, ⵠ[20], ΔⲆᐃⵠΔ, 59, 172, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[ⵠΔⲆⵠ], 19, 59, 167, 0],
		[1, ⵠ[20], ⵠΔΔᐃᐃ, 53, 165, 0],
		[1, ⵠ[ⵠⵠΔⵠ], ᐃᐃᐃΔΔ, 56, 163, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 19, 51, 161, ΔΔᐃ],
		[1, ⵠ[ᐃᐃᐃⲆ], 19, 48, 167, 0],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 19, 47, 170, ⲆⵠⲆ],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, 41, 163, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[ᐃⵠᐃΔ], ⲆΔΔⲆΔ, 37, 161, ᐃⵠΔ],
		[1, ⵠ[ⵠΔⲆⵠ], ⵠΔΔᐃᐃ, 36, 166, 0],
		[1, ⵠ[ⵠⲆΔⵠ], ΔⲆᐃⵠΔ, 36, 171, ᐃⵠΔ],
		[1, ⵠ[ⵠⵠᐃᐃ], ΔᐃⵠᐃⲆ, 34, 174, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], 19, 40, 172, 0],
		[1, ⵠ[20], 19, 38, 177, ⲆⵠⲆ],
		[1, ⵠ[ⲆᐃΔⵠ], 19, 42, 176, 0],
		[1, ⵠ[ΔΔⵠΔ], 19, 53, 178, ⲆⲆⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], 19, 53, 172, 0],
		[1, ⵠ[20], ΔⵠⲆⵠⵠ, 64, 181, ⲆⲆⲆ],
		[1, ⵠ[ⵠⲆΔⵠ], ΔⲆⲆⵠⵠ, 64, 175, 0],
		[1, ⵠ[20], ⲆΔΔⲆΔ, 79, 172, 0],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, 30, 170, Δⵠⵠ],
		[ᐃⵠ, ⵠ[20], ΔⵠⲆⵠⵠ, 17, 168, 0],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], 19, 14, 173, 0],
		[1, ⵠ[20], 19, ᐃⲆᐃⵠⵠ, 162, 0],
		[ⵠⵠⲆ, ⵠ[20], ΔⲆᐃⵠΔ, 9, 167, 0],
		[ΔⲆᐃ, ⵠ[20], ΔⲆⲆⵠⵠ, ΔⵠΔⲆ, 161, 0],
		[1, ⵠ[20], ⵠⲆᐃᐃⲆ, 27, 162, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[20], 19, 83, 195, ΔⲆⵠ],
		[1, ⵠ[20], ⵠᐃⵠΔ, 85, 163, 0],
		[1, ⵠ[20], ⵠᐃⵠΔ, 80, 164, 0],
		[ⵠⲆⲆ, ⵠ[ⲆᐃΔⵠ], ⵠⲆΔΔ, 84, 169, ΔⲆⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], ᐃᐃΔⵠ, 55, 165, 0],
		[ᐃⵠⵠ, ⵠ[20], 3, 46, 163, ⲆⵠⲆ],
		[1, ⵠ[ⵠΔΔΔ], 2, 66, 169, 0],
		[1, ⵠ[ΔΔⵠΔ], 0, 63, 175, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[20], ⲆⲆⲆ, 34, 164, 0],
		[1, ⵠ[20], 0, 18, 160, Δⵠⵠ],
		[1, ⵠ[ⵠᐃⲆΔ], 2, 40, 160, 0],
		[ⵠⵠⲆ, ⵠ[ᐃⵠᐃΔ], 2, 53, 160, ⲆⲆⲆ],
		[1, ⵠ[ⵠⵠΔⵠ], 2, ᐃⵠᐃⲆⵠΔᐃ, 170, 0],
		[1, ⵠ[20], 2, 19, 175, 0],
		[ⵠⲆⲆ, ⵠ[20], ⲆⲆⵠΔ, 23, 176, 0],
		[ⵠⲆⲆ, ⵠ[20], 5, 60, 147, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 33, 59, 160, ΔΔᐃ],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 33, 85, 157, 0],
		[ⵠⵠⲆ, ⵠ[20], 33, 29, 143, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[ᐃᐃᐃⲆ], 33, 62, 140, 0],
		[ᐃⵠ, ⵠ[20], 33, 43, 127, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 33, 18, 129, ⲆⲆⲆ],
		[1, ⵠ[20], 33, 50, 134, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 33, 79, 127, 0],
		[ΔⲆᐃ, ⵠ[ΔΔⵠΔ], 33, 89, 139, Δⵠⵠ],
		[1, "b", ᐃⵠⵠ, 44, 156, ⲆΔᐃ],
		[ᐃⵠ, "t", ⵠⲆΔΔ, 45, 157, ⲆⲆⲆ],
		[ΔⲆᐃ, "b", ⲆⵠⲆ, 75, 156, 0],
		[ᐃⵠ, "t", 3, 76, 157, 0],
		[1, "t", ⲆᐃᐃΔ, 62, 157, 0],
		[1, "t", 5, 79, 156, 0],
		[1, "t", 5, 41, 156, ⲆⲆⲆ],
		[ⵠⲆⲆ, "b", ⵠⲆⲆ, 28, 156, ΔⲆⵠ],
		[1, "t", 2, 27, 157, ᐃⵠΔ],
		[1, "t", 4, 21, 156, ⲆⵠⲆ],
		[1, "t", ᐃΔΔΔ, 56, 159, 0],
		[1, "f", 1, 94, 153, ⵠⵠⲆ],
		[1, "f", ⵠⲆΔΔ, 93, 153, 1],
		[1, "f", ᐃᐃΔⵠ, 99, 153, 1],
		[ᐃⵠ, "f", ⵠⵠⲆ, 98, 153, 1],
		[1, "f", ᐃⵠΔ, 97, 153, 1],
		[1, "f", ΔⲆᐃ, 96, 153, ᐃⵠⵠ],
		[ᐃⵠ, "s", ⵠⵠⲆ, Ⲇⵠᐃᐃᐃ, 149, 1],
		[ⵠⵠⲆ, ⵠ[20], 4, 7, 150, 0],
		[ΔⲆᐃ, "b", ⲆⵠⵠΔ, 43, 281, ΔΔᐃ],
		[1, ⵠ[ΔⵠΔⲆ], 50, 24, 39, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 50, 21, 39, ⲆΔᐃ],
		[1, ⵠ[20], 50, 22, 43, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[ⵠΔⲆⵠ], 50, ᐃⲆⵠᐃᐃ, 34, 0],
		[ⵠⲆⲆ, ⵠ[20], 50, ⲆΔΔⵠΔⲆⵠ, 26, 0],
		[ⵠⲆⲆ, ⵠ[20], 50, 44, 42, ΔΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], 50, 57, 39, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 50, 62, 43, 0],
		[1, ⵠ[20], 50, 77, 44, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 50, 71, 41, 0],
		[1, ⵠ[20], 50, 55, 39, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 50, 22, 39, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], 50, 20, 41, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ΔΔⵠΔ], 50, ⲆΔΔⵠΔⲆⵠ, 21, 0],
		[ⵠⲆⲆ, ⵠ[20], 50, 15, 21, 0],
		[ⵠⵠⲆ, ⵠ[20], 50, 18, 19, 0],
		[1, ⵠ[20], 50, ΔⲆᐃΔⵠ, 17, 0],
		[ⵠⲆⲆ, ⵠ[ⵠΔⲆⵠ], 50, 18, ᐃᐃⵠⵠⵠ, ⲆⵠⲆ],
		[1, ⵠ[ⵠⵠΔⵠ], 50, ⲆΔΔⵠΔⲆⵠ, 9, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⵠⲆ], 50, 52, 41, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 50, 82, 39, ⲆⲆⲆ],
		[1, ⵠ[20], 50, 86, 38, 0],
		[1, ⵠ[20], 50, 84, 31, 0],
		[ⵠⲆⲆ, ⵠ[20], 50, 86, 30, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠΔΔΔ], 50, 84, 26, Δⵠⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], 50, 86, 23, 0],
		[1, ⵠ[20], 50, 86, Δᐃⵠᐃᐃ, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ⵠⵠΔⵠ], 50, 29, 42, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[20], 9, 74, 37, 0],
		[1, ⵠ[ⵠⲆΔⵠ], ⲆⲆⵠⲆⵠ, 76, 22, 0],
		[ΔⲆᐃ, ⵠ[20], 10, 79, 24, 0],
		[1, ⵠ[20], 11, 77, 17, 0],
		[ⵠⲆⲆ, ⵠ[20], 36, 81, 25, 0],
		[ᐃⵠⵠ, ⵠ[20], 36, 80, 36, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 36, 21, 36, 0],
		[1, ⵠ[20], 28, 23, 22, 0],
		[1, ⵠ[20], 28, 27, 31, 0],
		[ΔⲆᐃ, ⵠ[20], 28, 69, 36, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 28, 80, 20, ᐃⵠΔ],
		[1, ⵠ[20], 51, 24, 155, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 51, 7, 154, ⲆΔᐃ],
		[1, ⵠ[20], 51, 11, 154, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 51, ⲆΔⲆⲆⲆΔᐃ, 156, 0],
		[1, ⵠ[20], 51, ΔⲆⲆⲆᐃ, 154, 0],
		[ⵠⵠⲆ, ⵠ[20], 51, 20, 154, 0],
		[ΔⲆᐃ, ⵠ[20], 51, 23, 154, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[20], 51, 18, 157, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 51, 31, 154, 0],
		[ᐃⵠ, ⵠ[20], 51, 32, 157, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠΔⲆⵠ], 51, 86, 154, 0],
		[ⵠⵠⲆ, ⵠ[20], 51, 88, 156, 0],
		[1, ⵠ[20], 51, 82, 154, ⲆⵠⲆ],
		[1, ⵠ[20], 51, 80, 154, 0],
		[1, ⵠ[20], 51, 77, 154, 0],
		[1, ⵠ[20], 51, 74, 154, 0],
		[ⵠⵠⲆ, ⵠ[ⲆᐃΔⵠ], 51, 71, 154, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔⲆⵠ], 51, 67, 154, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 51, 60, 154, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 51, 57, 154, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 51, 65, 154, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 51, 68, 156, 0],
		[1, ⵠ[20], 51, 59, 156, ⲆⵠⲆ],
		[1, ⵠ[ⵠΔⲆⵠ], 51, 55, 154, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[20], 51, 54, 154, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 51, 52, 154, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⵠⲆ], 51, 55, 155, 0],
		[ⵠⵠⲆ, ⵠ[ΔⲆΔᐃ], 51, 54, 157, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 51, 49, 154, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 51, 46, 154, ⲆΔᐃ],
		[1, ⵠ[ΔΔⵠΔ], 51, 44, 154, 0],
		[1, ⵠ[ΔⵠΔⲆ], 51, 43, 154, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[20], 51, 41, 154, 0],
		[1, ⵠ[ΔΔⵠΔ], 51, 38, 154, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], 51, 39, 156, 0],
		[ΔⲆᐃ, ⵠ[20], 51, 34, 154, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[20], Δᐃⵠⵠ, 19, 142, ᐃⵠΔ],
		[1, ⵠ[20], 5, 37, 147, 0],
		[ⵠⵠⲆ, ⵠ[20], ᐃⲆⵠⲆⲆ, 53, 147, 0],
		[1, ⵠ[ΔⲆΔᐃ], 6, 69, 150, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 4, 94, 148, 0],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], ᐃΔⲆΔ, 66, 147, ⲆⲆⲆ],
		[1, ⵠ[ⵠⵠᐃᐃ], ⲆⵠⲆⲆ, 10, 145, 0],
		[1, ⵠ[ⲆᐃΔⵠ], ⲆⲆΔΔ, 28, 137, 0],
		[1, ⵠ[20], 4, 15, 137, 0],
		[1, ⵠ[ⵠΔΔΔ], Δⵠⵠⵠ, 48, 134, 0],
		[1, ⵠ[20], ᐃᐃⵠⵠ, 67, 135, ᐃⵠΔ],
		[1, ⵠ[ⵠΔⲆⵠ], 34, 84, 155, ΔⲆⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 35, 70, 156, 0],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 35, 51, 156, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 35, 56, 157, 0],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], 35, 65, 159, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 35, 23, 156, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[20], 35, 15, 155, 0],
		[ᐃⵠⵠ, ⵠ[20], 35, ⲆΔⵠⵠⲆ, 155, Δⵠⵠ],
		[1, ⵠ[20], 33, 13, 155, 0],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], 33, 33, 158, 0],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 36, 78, 155, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 36, 87, 157, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[26], ᐃⵠⵠ, 73, 36, ⲆⲆⲆ],
		[1, ⵠ[26], ᐃⵠ, 80, 24, ᐃⵠΔ],
		[1, ⵠ[26], ⲆⲆⵠΔ, 67, 36, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[26], 2, 45, 36, 0],
		[1, ⵠ[26], 2, 53, 34, 0],
		[1, ⵠ[26], ⵠⲆⲆ, 51, 35, ΔΔᐃ],
		[ᐃⵠ, ⵠ[26], ΔⲆᐃ, 58, 35, 0],
		[ⵠⲆⲆ, ⵠ[26], ΔⲆᐃ, 33, 35, ⲆⲆⲆ],
		[1, ⵠ[26], ᐃⵠⵠ, 31, 33, 0],
		[1, ⵠ[26], 2, 29, 36, ⲆⲆⲆ],
		[1, ⵠ[26], 2, 56, 36, 0],
		[1, ⵠ[26], 2, 60, 37, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[26], 2, 45, 32, ⲆⵠⲆ],
		[1, ⵠ[26], ᐃⵠΔⲆ, 22, 25, 0],
		[1, ⵠ[26], 2, 21, 35, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 52, 90, 208, 0],
		[ᐃⵠ, ⵠ[20], ⵠⵠⲆΔᐃⵠⲆ, 94, 250, 0],
		[ΔⲆᐃ, ⵠ[20], ᐃⲆΔᐃΔΔΔ, 95, 253, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], 0, 140, 5, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 139, 5, ᐃⵠ],
		[1, ⵠ[370], 2, 138, 5, 1],
		[ⵠⲆⲆ, ⵠ[370], 2, 138, 6, 1],
		[ᐃⵠⵠ, ⵠ[370], ΔⲆⲆᐃ, 139, 6, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 141, ⵠΔⵠⵠⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 140, ᐃⲆᐃⵠᐃ, ΔⲆᐃ],
		[1, ⵠ[220], Δᐃᐃᐃ, 143, 7, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], ⵠⲆⲆΔ, 139, 7, 1],
		[1, ⵠ[370], ᐃⵠΔ, 137, ⵠⲆⲆⵠⲆ, 1],
		[1, ⵠ[370], 1, 138, ⲆⲆᐃᐃᐃ, ᐃⵠ],
		[1, ⵠ[370], ⵠⲆΔΔ, 137, 6, 1],
		[ᐃⵠ, ⵠ[370], 2, 137, ⲆΔΔΔᐃ, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], ⲆⲆⵠΔ, 136, 7, 1],
		[ᐃⵠⵠ, ⵠ[370], 2, 138, 9, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⲆⵠⵠΔ, 139, 9, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆΔⵠ, 136, ⵠᐃᐃΔⲆ, 1],
		[ⵠⵠⲆ, ⵠ[370], 3, 137, ⵠΔⲆⲆᐃ, 1],
		[1, ⵠ[20], 53, 92, 165, 0],
		[ᐃⵠ, ⵠ[20], 53, 92, 180, 0],
		[1, ⵠ[20], 53, 92, 188, 0],
		[1, ⵠ[20], 54, 92, 153, 0],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 54, 91, 153, ᐃⵠΔ],
		[1, ⵠ[20], 54, 90, 153, 0],
		[ⵠⲆⲆ, ⵠ[20], 54, 89, 153, ΔΔᐃ],
		[1, ⵠ[ᐃⵠᐃΔ], 54, 88, 153, ΔΔᐃ],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], 54, 87, 153, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 54, 86, 153, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 54, 85, 153, 0],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 54, 84, 153, 0],
		[ⵠⵠⲆ, ⵠ[20], 54, 83, 153, ΔΔᐃ],
		[1, ⵠ[20], 54, 82, 153, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 54, 81, 153, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 54, 80, 153, 0],
		[ᐃⵠⵠ, ⵠ[20], 54, 79, 153, Δⵠⵠ],
		[ⵠⲆⲆ, ⵠ[ⵠΔⲆⵠ], 54, 78, 153, 0],
		[1, ⵠ[20], 54, 77, 153, ⲆⵠⲆ],
		[1, ⵠ[ⲆᐃΔⵠ], 54, 76, 153, Δⵠⵠ],
		[1, ⵠ[20], 54, 75, 153, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠᐃᐃ], 54, 74, 153, 0],
		[1, ⵠ[20], 54, 73, 153, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], 54, 72, 153, ⲆⵠⲆ],
		[1, ⵠ[ΔⵠΔⲆ], 54, 70, 153, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[20], 54, 71, 153, 0],
		[1, ⵠ[ⵠΔΔΔ], 54, 69, 153, 0],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 54, 68, 153, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 54, 67, 153, ΔΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], 54, 66, 153, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], 54, 65, 153, 0],
		[ⵠⲆⲆ, ⵠ[20], 54, 64, 153, 0],
		[1, ⵠ[ΔⵠΔⲆ], 54, 63, 153, ⲆⵠⲆ],
		[1, ⵠ[ΔⲆΔᐃ], 54, 61, 153, 0],
		[ᐃⵠ, ⵠ[ⵠⲆΔⵠ], 54, 62, 153, 0],
		[ΔⲆᐃ, ⵠ[20], 54, 60, 153, ᐃⵠΔ],
		[1, ⵠ[20], 54, 59, 153, ΔⲆⵠ],
		[1, ⵠ[ΔⵠΔⲆ], 54, 57, 153, ⲆΔᐃ],
		[1, ⵠ[20], 54, 58, 153, 0],
		[ᐃⵠ, ⵠ[20], 54, 56, 153, 0],
		[1, ⵠ[20], 54, 55, 153, 0],
		[1, ⵠ[20], 54, 54, 153, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 54, 53, 153, 0],
		[1, ⵠ[20], 54, 52, 153, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 54, 51, 153, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], 54, 50, 153, 0],
		[ᐃⵠ, ⵠ[ΔΔⵠΔ], 54, 49, 153, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 54, 48, 153, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], 54, 47, 153, 0],
		[ΔⲆᐃ, ⵠ[20], 54, 46, 153, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 54, 45, 153, 0],
		[1, ⵠ[20], 54, 44, 153, 0],
		[1, ⵠ[20], 54, 43, 153, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔΔΔ], 54, 42, 153, 0],
		[1, ⵠ[20], 54, 41, 153, 0],
		[1, ⵠ[20], 54, 40, 153, 0],
		[ⵠⲆⲆ, ⵠ[ᐃⵠᐃΔ], 54, 39, 153, ΔΔᐃ],
		[1, ⵠ[ⵠΔⲆⵠ], 54, 37, 153, ⲆΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], 54, 38, 153, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 54, 36, 153, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 54, 35, 153, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 54, 34, 153, Δⵠⵠ],
		[1, ⵠ[ⵠΔⲆⵠ], 54, 33, 153, 0],
		[1, ⵠ[20], 54, 32, 153, 0],
		[1, ⵠ[20], 54, 31, 153, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 54, 30, 153, 0],
		[1, ⵠ[20], 54, 29, 153, 0],
		[ⵠⵠⲆ, ⵠ[20], 54, 28, 153, ᐃⵠΔ],
		[ᐃⵠⵠ, ⵠ[20], 54, 27, 153, 0],
		[1, ⵠ[ΔⵠΔⲆ], 54, 26, 153, ΔⲆⵠ],
		[1, ⵠ[ⵠᐃⲆΔ], 54, 25, 153, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 54, 24, 153, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔⲆⵠ], 54, 23, 153, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ᐃⵠᐃΔ], 54, 22, 153, 0],
		[1, ⵠ[ⵠΔΔΔ], 54, 21, 153, ⲆⵠⲆ],
		[1, ⵠ[ᐃᐃᐃⲆ], 54, 20, 153, ⲆΔᐃ],
		[1, ⵠ[ΔⲆΔᐃ], 54, 19, 153, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 54, ΔΔⵠⲆΔ, 153, ΔΔᐃ],
		[1, ⵠ[20], 54, 17, 153, 0],
		[1, ⵠ[20], 54, 16, 153, 0],
		[ᐃⵠⵠ, ⵠ[20], 54, ⵠⲆⲆᐃⲆ, 153, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 54, ΔⵠᐃΔΔ, 153, 0],
		[1, ⵠ[20], 54, ⲆⲆΔᐃⵠ, 153, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 54, 12, 153, 0],
		[1, ⵠ[20], 54, 11, 153, ⲆΔᐃ],
		[1, ⵠ[20], 54, 10, 153, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 54, 8, 153, Δⵠⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], 54, 9, 153, ΔⲆⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], 55, 83, ⲆⲆᐃᐃᐃ, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 55, 83, 9, ᐃⵠΔ],
		[1, ⵠ[20], 55, 83, 10, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], 55, 83, ᐃΔᐃⵠΔ, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 55, 83, ᐃⲆᐃⵠⵠ, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 55, 83, ΔⲆΔᐃΔ, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 83, 14, 0],
		[ᐃⵠⵠ, ⵠ[20], 55, 83, ⵠⲆᐃΔⲆ, ⲆΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠⵠΔⵠ], 55, 83, ⵠⲆⵠⵠΔ, ΔΔᐃ],
		[1, ⵠ[ᐃⵠᐃΔ], 55, 83, 17, 0],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 55, 83, ⵠⲆᐃᐃⲆ, ΔⲆⵠ],
		[1, ⵠ[ΔⵠΔⲆ], 55, 83, 18, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 55, 83, 20, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 55, 83, 21, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 55, 83, 22, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[20], 55, 83, 23, 0],
		[1, ⵠ[20], 55, 83, 24, ΔΔᐃ],
		[ᐃⵠ, ⵠ[ⵠᐃⵠⲆ], 55, 83, 25, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 83, 26, 0],
		[1, ⵠ[20], 55, 83, 27, 0],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 55, 83, 28, Δⵠⵠ],
		[1, ⵠ[ΔⲆΔᐃ], 55, 83, 29, 0],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 55, 83, 30, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 83, 31, Δⵠⵠ],
		[1, ⵠ[20], 55, 83, 32, ⲆΔᐃ],
		[ⵠⵠⲆ, ⵠ[ⵠⵠΔⵠ], 55, 83, 33, ΔⲆⵠ],
		[1, ⵠ[ⵠᐃⲆΔ], 55, 83, 34, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 55, 83, 36, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], 55, 83, 35, ⲆⵠⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], 55, 83, 37, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 55, 83, 38, 0],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 55, 81, 38, 0],
		[1, ⵠ[ΔⲆΔᐃ], 55, 82, 38, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 55, 80, 38, ⲆⲆⲆ],
		[1, ⵠ[20], 55, 79, 38, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], 55, 78, 38, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[ΔⲆΔᐃ], 55, 77, 38, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[20], 55, 76, 38, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 55, 75, 38, 0],
		[ΔⲆᐃ, ⵠ[ΔⵠΔⲆ], 55, 73, 38, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 74, 38, ΔΔᐃ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 55, 72, 38, 0],
		[1, ⵠ[20], 55, 71, 38, 0],
		[1, ⵠ[ⵠΔΔΔ], 55, 70, 38, 0],
		[1, ⵠ[ⵠΔΔΔ], 55, 68, 38, 0],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 55, 69, 38, 0],
		[1, ⵠ[ΔⵠΔⲆ], 55, 67, 38, 0],
		[ᐃⵠ, ⵠ[20], 55, 66, 38, ⲆⲆⲆ],
		[1, ⵠ[20], 55, 65, 38, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 55, 64, 38, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 55, 63, 38, 0],
		[1, ⵠ[ΔΔⵠΔ], 55, 62, 38, ⲆΔᐃ],
		[1, ⵠ[ⵠΔΔΔ], 55, 60, 38, ⲆⲆⲆ],
		[ⵠⲆⲆ, ⵠ[ⵠⵠᐃᐃ], 55, 61, 38, 0],
		[1, ⵠ[20], 55, 59, 38, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[ΔΔⵠΔ], 55, 57, 38, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 55, 58, 38, ᐃⵠΔ],
		[1, ⵠ[20], 55, 56, 38, 0],
		[1, ⵠ[20], 55, 55, 38, ⲆΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], 55, 54, 38, ΔΔᐃ],
		[1, ⵠ[ᐃⵠᐃΔ], 55, 53, 38, 0],
		[1, ⵠ[20], 55, 52, 38, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[ᐃⵠᐃΔ], 55, 51, 38, 0],
		[ⵠⵠⲆ, ⵠ[20], 55, 49, 38, 0],
		[1, ⵠ[20], 55, 50, 38, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[ⵠᐃⵠⲆ], 55, 48, 38, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 55, 47, 38, ⲆΔᐃ],
		[1, ⵠ[20], 55, 46, 38, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[ᐃᐃᐃⲆ], 55, 45, 38, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⵠⲆ], 55, 44, 38, ⲆⲆⲆ],
		[1, ⵠ[20], 55, 43, 38, 0],
		[ᐃⵠ, ⵠ[20], 55, 42, 38, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], 55, 41, 38, 0],
		[1, ⵠ[20], 55, 40, 38, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[20], 55, 39, 38, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 55, 38, 38, 0],
		[1, ⵠ[20], 55, 37, 38, 0],
		[ⵠⵠⲆ, ⵠ[20], 55, 36, 38, ΔⲆⵠ],
		[1, ⵠ[20], 55, 34, 38, 0],
		[ᐃⵠ, ⵠ[20], 55, 35, 38, 0],
		[ⵠⵠⲆ, ⵠ[ⵠⵠᐃᐃ], 55, 33, 38, 0],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 55, 31, 38, ⲆΔᐃ],
		[1, ⵠ[ᐃᐃᐃⲆ], 55, 32, 38, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠⵠΔⵠ], 55, 30, 38, ᐃⵠΔ],
		[1, ⵠ[ⵠᐃⵠⲆ], 55, 29, 38, 0],
		[ⵠⲆⲆ, ⵠ[20], 55, 28, 38, 0],
		[ᐃⵠⵠ, ⵠ[20], 55, 27, 38, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 55, 26, 38, 0],
		[1, ⵠ[ⵠΔΔΔ], 55, 25, 38, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 55, 24, 38, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 55, 23, 38, 0],
		[1, ⵠ[20], 55, 21, 38, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[20], 55, 22, 38, Δⵠⵠ],
		[1, ⵠ[20], 55, ⵠΔⲆⵠ, 38, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 55, 19, 38, ⲆΔᐃ],
		[1, ⵠ[20], 55, 19, 37, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 55, ⵠⲆⲆⲆⵠ, 36, 0],
		[1, ⵠ[20], 55, 19, 35, 0],
		[ᐃⵠ, ⵠ[20], 55, ΔᐃⵠΔΔ, 34, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[20], 55, 19, 33, ⲆⵠⲆ],
		[ⵠⲆⲆ, ⵠ[ⲆᐃΔⵠ], 55, ΔᐃⵠᐃⲆ, 32, 0],
		[1, ⵠ[20], 55, 19, 31, 0],
		[ᐃⵠ, ⵠ[20], 55, 19, 30, 0],
		[ⵠⵠⲆ, ⵠ[20], 55, ⵠⲆᐃᐃⲆ, 28, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[20], 55, ⵠΔΔᐃᐃ, 29, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[ΔⵠΔⲆ], 55, 19, 27, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 55, ⲆΔΔⲆΔ, 26, ΔⲆⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], 55, ⲆΔΔⲆΔ, 25, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[20], 55, 19, 24, 0],
		[ᐃⵠⵠ, ⵠ[20], 55, ΔᐃⵠᐃⲆ, 23, 0],
		[1, ⵠ[ᐃᐃᐃⲆ], 55, 19, 22, 0],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 55, ΔⲆᐃⵠΔ, 21, 0],
		[ᐃⵠ, ⵠ[20], 55, 19, 20, 0],
		[ΔⲆᐃ, ⵠ[20], 55, ΔᐃⵠᐃⲆ, ᐃⲆⵠⵠᐃ, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 19, ᐃᐃᐃΔΔ, ⲆΔᐃ],
		[1, ⵠ[ⵠᐃⵠⲆ], 55, 19, 16, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[20], 55, 19, ΔΔⲆᐃⲆ, Δⵠⵠ],
		[1, ⵠ[ⲆᐃΔⵠ], 55, ΔᐃⵠᐃⲆ, 15, ΔⲆⵠ],
		[1, ⵠ[ⵠⲆΔⵠ], 55, ΔⵠⲆⵠⵠ, 14, ΔΔᐃ],
		[1, ⵠ[20], 55, 19, ΔⲆΔᐃΔ, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 55, 19, 12, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 55, ΔᐃⵠΔΔ, 11, 0],
		[ᐃⵠ, ⵠ[20], 55, ΔᐃⵠΔΔ, ᐃⵠⲆᐃⵠ, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 55, ⵠΔΔᐃᐃ, ΔᐃΔᐃⲆΔⵠ, ⲆΔᐃ],
		[1, ⵠ[20], 55, 19, ⲆⲆᐃᐃᐃ, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 55, 84, 35, 0],
		[1, ⵠ[ⵠΔⲆⵠ], 55, 84, 32, ⲆⵠⲆ],
		[1, ⵠ[ΔⵠΔⲆ], 55, 84, 25, ⲆⲆⲆ],
		[1, ⵠ[ⵠᐃⵠⲆ], 50, 84, 24, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 55, 84, ⵠⵠᐃᐃ, 0],
		[1, ⵠ[20], 55, 84, 17, 0],
		[1, ⵠ[20], 55, 84, ⲆⲆⵠᐃⲆ, 0],
		[ΔⲆᐃ, ⵠ[20], 50, 84, 15, ΔΔᐃ],
		[ᐃⵠⵠ, ⵠ[ⵠᐃⲆΔ], 55, 84, 8, ⲆⲆⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], 55, 84, 9, 0],
		[1, ⵠ[20], 50, 85, 11, 0],
		[ᐃⵠ, ⵠ[20], 55, 81, 39, 0],
		[ⵠⲆⲆ, ⵠ[ⵠᐃⲆΔ], 50, 83, 40, 0],
		[ΔⲆᐃ, ⵠ[20], 55, 72, 39, 0],
		[1, ⵠ[20], 55, 74, 39, ⲆⲆⲆ],
		[ⵠⵠⲆ, ⵠ[ΔΔⵠΔ], 55, 66, 39, 0],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 55, 65, 39, ΔⲆⵠ],
		[1, ⵠ[ᐃᐃᐃⲆ], 50, 67, 41, ΔⲆⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], 55, 56, 39, Δⵠⵠ],
		[ᐃⵠ, ⵠ[20], 55, 58, 39, 0],
		[1, ⵠ[ΔⲆΔᐃ], 55, 50, 39, Δⵠⵠ],
		[1, ⵠ[ΔⵠΔⲆ], 50, 49, 39, 0],
		[1, ⵠ[20], 55, 44, 39, 0],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 55, 42, 39, ΔΔᐃ],
		[1, ⵠ[20], 50, 43, 39, ΔⲆⵠ],
		[1, ⵠ[20], 50, 41, 39, 0],
		[1, ⵠ[20], 50, 37, 39, 0],
		[1, ⵠ[ΔⲆΔᐃ], 55, 36, 39, ᐃⵠΔ],
		[1, ⵠ[ⲆᐃΔⵠ], 55, 32, 39, 0],
		[1, ⵠ[20], 50, 31, 39, ΔⲆⵠ],
		[1, ⵠ[20], 55, 23, 39, 0],
		[1, ⵠ[20], 55, 18, 37, ΔⲆⵠ],
		[ᐃⵠ, ⵠ[20], 50, ⵠΔΔᐃΔ, 36, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[ΔⲆΔᐃ], 55, ᐃⲆΔⲆΔⲆᐃ, 35, 0],
		[ⵠⵠⲆ, ⵠ[ΔⲆΔᐃ], 50, ⵠΔΔᐃΔ, 34, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 55, 18, 31, 0],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 50, 18, 30, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[ΔⵠΔⲆ], 55, 18, 25, 0],
		[1, ⵠ[20], 50, ⵠΔΔᐃΔ, 24, 0],
		[1, ⵠ[ΔⲆΔᐃ], 55, 18, 20, ΔΔᐃ],
		[1, ⵠ[20], 55, ⲆⵠᐃᐃⲆ, 14, ⲆΔᐃ],
		[1, ⵠ[ⵠⲆΔⵠ], 50, ⲆⵠᐃᐃⲆ, Ⲇⵠⵠⵠᐃⵠᐃ, 0],
		[ⵠⵠⲆ, ⵠ[20], 55, ΔⵠⵠⵠⵠⵠΔ, ⵠᐃᐃΔⲆ, 0],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 54, 90, 154, ⲆΔᐃ],
		[1, ⵠ[20], 51, 89, 154, 0],
		[ⵠⲆⲆ, ⵠ[ΔⲆΔᐃ], 54, 85, 154, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[ⵠⵠᐃᐃ], 54, 81, 154, 0],
		[ᐃⵠⵠ, ⵠ[20], 54, 76, 154, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 54, 70, 154, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 54, 66, 154, 0],
		[ⵠⵠⲆ, ⵠ[ᐃⵠᐃΔ], 54, 61, 154, Δⵠⵠ],
		[1, ⵠ[20], 54, 56, 154, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[ΔⵠΔⲆ], 54, 53, 154, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[20], 54, 45, 154, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 54, 42, 154, 0],
		[1, ⵠ[20], 54, 37, 154, ⲆⲆⲆ],
		[1, ⵠ[20], 54, 30, 154, ΔΔᐃ],
		[1, ⵠ[20], 54, 25, 154, Δⵠⵠ],
		[1, ⵠ[20], 54, 17, 154, ᐃⵠΔ],
		[1, ⵠ[ΔⵠΔⲆ], 54, ⵠΔᐃΔⲆ, 154, 0],
		[1, ⵠ[20], 54, ⵠⵠΔⵠΔ, 154, ⲆⲆⲆ],
		[1, ⵠ[20], 55, 20, 9, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 154, ⲆⲆⲆ],
		[1, ⵠ[ᐃⵠᐃΔ], 53, 93, 156, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 53, 93, 158, ΔΔᐃ],
		[ᐃⵠ, ⵠ[20], 52, 91, 157, 0],
		[1, ⵠ[ΔⲆΔᐃ], 53, 93, 159, 0],
		[1, ⵠ[ⵠΔΔΔ], 53, 93, 161, 0],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 162, ⲆⲆⲆ],
		[1, ⵠ[ⵠΔΔΔ], 53, 93, 163, ΔΔᐃ],
		[1, ⵠ[20], 53, 93, 164, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⵠᐃⵠⲆ], 53, 93, 165, 0],
		[1, ⵠ[ΔⵠΔⲆ], 53, 93, 166, 0],
		[1, ⵠ[20], 53, 93, 167, 0],
		[ᐃⵠⵠ, ⵠ[ⵠⵠᐃᐃ], 52, 91, 167, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 53, 93, 169, 0],
		[1, ⵠ[20], 53, 93, 168, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ⵠΔΔΔ], 53, 93, 170, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 53, 93, 171, ⲆⲆⲆ],
		[1, ⵠ[ΔⵠΔⲆ], 53, 93, 173, ᐃⵠΔ],
		[ᐃⵠ, ⵠ[ΔⲆΔᐃ], 53, 93, 176, ᐃⵠΔ],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 175, Δⵠⵠ],
		[1, ⵠ[20], 53, 92, 169, 0],
		[1, ⵠ[20], 53, 93, 178, ΔⲆⵠ],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 53, 93, 179, 0],
		[1, ⵠ[20], 53, 93, 180, 0],
		[1, ⵠ[20], 53, 93, 181, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 53, 93, 183, 0],
		[1, ⵠ[20], 53, 93, 184, 0],
		[ᐃⵠⵠ, ⵠ[20], 53, 93, 186, 0],
		[ᐃⵠ, ⵠ[ⵠᐃⲆΔ], ⵠⵠⵠⵠΔ, 95, 185, 0],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 53, 93, 187, ΔΔᐃ],
		[1, ⵠ[ⲆᐃΔⵠ], 53, 93, 188, ᐃⵠΔ],
		[1, ⵠ[20], 52, 91, 186, 0],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 190, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 53, 93, 192, Δⵠⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], 53, 93, 195, 0],
		[1, ⵠ[ΔΔⵠΔ], 53, 93, 194, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 52, 91, 196, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ᐃᐃᐃⲆ], 53, 93, 197, 0],
		[1, ⵠ[20], 53, 93, 200, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], 53, 93, 198, ⲆⵠⲆ],
		[1, ⵠ[20], 53, 93, 201, 0],
		[ᐃⵠ, ⵠ[ΔⵠΔⲆ], 53, 93, 202, Δⵠⵠ],
		[ᐃⵠ, ⵠ[20], 53, 93, 203, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 53, 93, 204, 0],
		[1, ⵠ[20], 53, 93, 206, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 205, 0],
		[ᐃⵠ, ⵠ[20], 53, 93, 207, ⲆΔᐃ],
		[1, ⵠ[ⵠⵠΔⵠ], 53, 93, 209, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[ⵠⵠᐃᐃ], 53, 93, 210, ΔΔᐃ],
		[1, ⵠ[ⵠᐃⲆΔ], 53, 93, 212, 0],
		[1, ⵠ[20], 52, 91, 204, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[20], 53, 93, 213, 0],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 214, 0],
		[ⵠⵠⲆ, ⵠ[20], 53, 93, 215, 0],
		[1, ⵠ[ⵠΔΔΔ], 53, 93, 216, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 53, 93, 217, ΔⲆⵠ],
		[1, ⵠ[20], 53, 93, 218, 0],
		[ⵠⵠⲆ, ⵠ[20], 53, 93, 219, ⲆⲆⲆ],
		[1, ⵠ[ΔⵠΔⲆ], 53, 93, 220, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 52, 92, 213, Δⵠⵠ],
		[1, ⵠ[ⲆᐃΔⵠ], 52, 92, 206, ᐃⵠΔ],
		[1, ⵠ[20], 52, 92, 202, ⲆΔᐃ],
		[1, ⵠ[ᐃᐃᐃⲆ], 53, 92, 201, ᐃⵠΔ],
		[1, ⵠ[20], 52, 92, 194, 0],
		[ᐃⵠ, ⵠ[ⵠⵠΔⵠ], 52, 92, 178, ΔⲆⵠ],
		[ᐃⵠⵠ, ⵠ[20], 52, 92, 171, ᐃⵠΔ],
		[1, ⵠ[ⵠΔⲆⵠ], 53, 93, 221, 0],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 222, ⲆⲆⲆ],
		[1, ⵠ[20], 53, 93, 223, Δⵠⵠ],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 53, 93, 225, 0],
		[ᐃⵠⵠ, ⵠ[20], 53, 93, 228, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ⵠΔⲆⵠ], 53, 93, 227, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔΔΔ], 52, 92, 217, 0],
		[1, ⵠ[20], 53, 92, 218, 0],
		[1, ⵠ[ᐃⵠᐃΔ], 52, 92, 221, 0],
		[ᐃⵠ, ⵠ[20], 52, 92, 225, 0],
		[1, ⵠ[20], 52, 93, 226, 0],
		[1, ⵠ[20], 52, 93, 224, ᐃⵠΔ],
		[ⵠⲆⲆ, ⵠ[ΔⵠΔⲆ], 52, 93, 208, 0],
		[ᐃⵠⵠ, ⵠ[ⵠΔⲆⵠ], 52, 93, 211, 0],
		[ᐃⵠ, ⵠ[ᐃⵠᐃΔ], 52, 93, 196, 0],
		[1, ⵠ[ⲆᐃΔⵠ], 52, 93, 199, 0],
		[1, ⵠ[ⵠᐃⲆΔ], 52, 93, 189, ΔⲆⵠ],
		[1, ⵠ[ⵠΔΔΔ], 52, 93, 191, 0],
		[ⵠⵠⲆ, ⵠ[20], 52, 93, 193, 0],
		[ΔⲆᐃ, ⵠ[ⵠΔⲆⵠ], 52, 93, 182, 0],
		[1, ⵠ[20], 52, 93, 185, ᐃⵠΔ],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 52, 93, 172, 0],
		[1, ⵠ[20], 52, 93, 174, 0],
		[ΔⲆᐃ, ⵠ[20], 52, 93, 177, 0],
		[ᐃⵠ, ⵠ[ᐃᐃᐃⲆ], 52, 93, 155, ⲆⲆⲆ],
		[ᐃⵠⵠ, ⵠ[20], 52, 93, 157, 0],
		[ⵠⵠⲆ, ⵠ[20], 52, 93, 160, ᐃⵠΔ],
		[1, ⵠ[20], 52, 92, 162, ⲆⵠⲆ],
		[ΔⲆᐃ, ⵠ[ⵠΔΔΔ], 53, 93, 229, 0],
		[ΔⲆᐃ, ⵠ[ⲆᐃΔⵠ], 53, 93, 231, ⲆΔᐃ],
		[1, ⵠ[ⵠⵠΔⵠ], 53, 93, 232, ΔⲆⵠ],
		[1, ⵠ[20], 53, 93, 234, 0],
		[ᐃⵠ, ⵠ[20], 52, 93, 230, ⲆⵠⲆ],
		[1, ⵠ[20], 52, 92, 228, Δⵠⵠ],
		[ᐃⵠⵠ, ⵠ[ΔⵠΔⲆ], 53, 93, 235, 0],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 236, ᐃⵠΔ],
		[1, ⵠ[20], 53, 93, 237, 0],
		[1, ⵠ[20], 53, 93, 239, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[20], 53, 93, 240, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 52, 93, 238, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 53, 93, 241, 0],
		[1, ⵠ[ⵠΔΔΔ], 52, 93, 242, 0],
		[1, ⵠ[20], 52, 93, 243, ΔΔᐃ],
		[1, ⵠ[20], 53, 93, 244, 0],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 53, 93, 246, 0],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 245, ΔⲆⵠ],
		[1, ⵠ[ΔⲆΔᐃ], 52, 93, 247, 0],
		[1, ⵠ[20], 53, 93, 248, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 52, 92, 235, 0],
		[1, ⵠ[ⵠⵠᐃᐃ], 52, 92, 245, 0],
		[ⵠⵠⲆ, ⵠ[ⵠᐃⲆΔ], 52, 93, 249, ⲆΔᐃ],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 53, 93, 250, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 251, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 53, 93, 252, 0],
		[1, ⵠ[ΔΔⵠΔ], 53, 93, 254, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[20], 52, 93, 253, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[20], 52, 93, 255, ⲆⵠⲆ],
		[1, ⵠ[20], 53, 93, 257, ΔΔᐃ],
		[1, ⵠ[ⵠⵠᐃᐃ], 53, 93, 256, 0],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 52, 93, 258, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[ᐃᐃᐃⲆ], 53, 93, 259, 0],
		[ᐃⵠ, ⵠ[ⵠΔⲆⵠ], 52, 93, 260, ⲆⵠⲆ],
		[ⵠⵠⲆ, ⵠ[20], 53, 93, 263, ΔⲆⵠ],
		[1, ⵠ[20], 53, 93, 264, 0],
		[1, ⵠ[ⵠᐃⵠⲆ], 53, 93, 265, 0],
		[ᐃⵠ, ⵠ[20], 52, 93, 266, ⲆⲆⲆ],
		[ᐃⵠ, ⵠ[20], 53, 93, 267, ΔΔᐃ],
		[1, ⵠ[20], 52, 93, 268, 0],
		[1, ⵠ[ΔⵠΔⲆ], 52, 93, 269, 0],
		[1, ⵠ[20], 53, 93, 276, 0],
		[1, ⵠ[20], 53, 93, 277, ⲆⵠⲆ],
		[ᐃⵠ, ⵠ[ⵠΔΔΔ], 52, 93, 278, Δⵠⵠ],
		[1, ⵠ[20], 53, 93, 279, ΔΔᐃ],
		[ᐃⵠ, ⵠ[20], 52, 93, 280, 0],
		[1, ⵠ[20], 52, 93, 283, 0],
		[1, ⵠ[20], 53, 93, 284, 0],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 285, 0],
		[ᐃⵠⵠ, ⵠ[20], 53, 93, 286, 0],
		[1, ⵠ[ⵠⵠΔⵠ], 52, 93, 287, 0],
		[1, ⵠ[ⵠΔΔΔ], 53, 93, 288, 0],
		[1, ⵠ[ΔⲆΔᐃ], 53, 93, 289, 0],
		[ⵠⲆⲆ, ⵠ[ⵠⲆΔⵠ], 52, 93, 290, Δⵠⵠ],
		[1, ⵠ[ⵠⵠΔⵠ], 52, 93, 291, 0],
		[1, ⵠ[20], 53, 93, 292, 0],
		[ᐃⵠⵠ, ⵠ[ⲆᐃΔⵠ], 52, 93, 293, ΔⲆⵠ],
		[ⵠⲆⲆ, ⵠ[20], 53, 93, 294, Δⵠⵠ],
		[1, ⵠ[20], 52, 93, 295, Δⵠⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], 52, 93, 296, ⲆⵠⲆ],
		[ᐃⵠⵠ, ⵠ[ⵠⲆΔⵠ], 53, 93, 297, Δⵠⵠ],
		[1, ⵠ[ⵠⵠᐃᐃ], 53, 93, 298, 0],
		[1, ⵠ[ΔⵠΔⲆ], 52, 93, 299, 0],
		[1, ⵠ[ⵠⲆΔⵠ], 53, 93, 300, ΔⲆⵠ],
		[ⵠⵠⲆ, ⵠ[20], 52, 92, 298, ΔⲆⵠ],
		[1, ⵠ[20], 52, 92, 293, 0],
		[ΔⲆᐃ, "r", 92, 262, ⲆⲆⲆ],
		[1, "r", 93, 262, ⲆⲆⲆ],
		[ΔⲆᐃ, ⵠ[ⵠⲆΔⵠ], 52, 93, 261, 0],
		[1, ⵠ[370], ⲆⵠⲆ, 223, 104, ⵠⲆⲆ],
		[ᐃⵠ, ⵠ[370], ⵠⵠⲆᐃ, 223, 105, ᐃⵠⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 223, 102, 1],
		[1, ⵠ[370], ᐃᐃΔⵠ, 223, 103, ⵠⵠⲆ],
		[ⵠⲆⲆ, ⵠ[220], ΔⵠⵠΔ, 141, ⲆΔΔΔᐃ, 1],
		[1, ⵠ[370], ⵠⲆΔΔ, 140, 9, 1],
		[1, ⵠ[220], ⲆⵠⲆⲆ, 142, ⲆⲆⵠⲆⵠ, ᐃⵠ],
		[ⵠⵠⲆ, ⵠ[20], ⵠᐃᐃⲆ, 81, 149, ΔΔᐃ],
		[ⵠⲆⲆ, "f", ᐃⵠΔ, 83, 148, 1],
		[ⵠⵠⲆ, "f", ΔⲆᐃ, 82, 149, 1],
		[ΔⲆᐃ, ⵠ[ΔⵠΔⲆ], 34, 81, 156, Δⵠⵠ],
		[1, ⵠ[ⵠⵠΔⵠ], 51, ᐃⲆΔᐃΔΔΔ, 9, ΔΔᐃ],
		[ΔⲆᐃ, ⵠ[ⵠⵠᐃᐃ], 54, 16, 9, ⲆΔᐃ],
		[ᐃⵠ, ⵠ[ⵠᐃⵠⲆ], 54, ⵠⲆⲆᐃⲆ, ᐃⲆΔΔᐃ, ΔΔᐃ],
		[ⵠⵠⲆ, ⵠ[370], 3, 223, 106, ⵠⲆⲆ],
		[ⵠⵠⲆ, "p", 0, 119, 279, ᐃⵠ],
		[1, "p", ⲆⵠⲆ, 109, 242, ⵠⲆⲆ],
		[1, ⵠ[370], ⵠⵠⲆ, 29, ΔᐃⵠΔⵠ, ᐃⵠⵠ],
		[1, ⵠ[370], ⵠΔⲆΔ, 30, ⲆⵠΔᐃⵠ, ᐃⵠ],
		[1, ⵠ[370], 2, 31, ⵠΔⲆⲆᐃ, ᐃⵠⵠ],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 32, 9, ⵠⵠⲆ],
		[ᐃⵠⵠ, ⵠ[370], 2, 33, ⵠΔⵠⲆⵠ, 1],
		[1, ⵠ[370], 2, 69, 9, 1],
		[1, ⵠ[370], ᐃⵠΔⲆ, 71, ⲆⲆᐃΔⲆ, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠᐃ, 70, 9, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 1, 72, 9, ΔⲆᐃ],
		[1, ⵠ[370], ⵠΔⵠᐃ, 73, ΔᐃⵠΔⵠ, 1],
		[1, ⵠ[ⵠⲆΔⵠ], ᐃⵠⲆᐃⵠ, 31, ⲆᐃᐃᐃⲆ, ⲆΔᐃ],
		[1, ⵠ[ΔΔⵠΔ], ᐃᐃⲆᐃᐃ, 29, 10, ᐃⵠΔ],
		[1, ⵠ[ⵠⵠᐃᐃ], 10, 44, 10, 0],
		[ΔⲆᐃ, ⵠ[ⵠᐃⲆΔ], ᐃΔᐃΔ, 87, 10, ΔⲆⵠ],
		[1, ⵠ[ⵠⵠΔⵠ], ᐃΔΔΔ, 86, ᐃᐃⵠⵠⵠ, ⲆΔᐃ],
		[1, ⵠ[ΔⵠΔⲆ], ᐃᐃⵠⵠ, 87, ⵠΔⲆⲆᐃ, 0],
		[1, ⵠ[20], ΔⲆⲆΔ, 13, 10, ⲆΔᐃ],
		[ΔⲆᐃ, ⵠ[20], 4, 14, ᐃᐃⲆΔⲆ, 0],
		[ⵠⵠⲆ, ⵠ[20], 4, 16, ⲆᐃᐃᐃⲆ, Δⵠⵠ],
		[ⵠⵠⲆ, ⵠ[ᐃᐃᐃⲆ], ⲆⵠⲆⲆ, 17, 10, 0],
		[ΔⲆᐃ, ⵠ[370], 2, 146, 9, 1],
		[1, ⵠ[370], ⵠᐃⵠΔ, 148, 9, 1],
		[1, ⵠ[370], 2, 150, 9, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 153, 9, 1],
		[1, ⵠ[370], 2, 155, ᐃᐃⲆⲆⲆ, 1],
		[1, ⵠ[370], 1, 149, 9, 1],
		[ᐃⵠ, ⵠ[370], 1, 154, 9, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 147, ᐃⲆΔΔᐃ, ΔⲆᐃ],
		[ΔⲆᐃ, ⵠ[370], 3, 151, 9, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 3, 152, ⲆⲆᐃΔⲆ, 1],
		[1, ⵠ[370], 3, 156, ᐃΔⵠΔΔ, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], ⵠⲆⵠⵠ, 157, ΔᐃⵠΔⵠ, ᐃⵠ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 158, 9, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 159, ᐃΔⵠΔΔ, ⵠⵠⲆ],
		[1, ⵠ[370], 3, 160, ᐃᐃⲆⲆⲆ, 1],
		[1, ⵠ[370], 0, 161, 9, ΔⲆᐃ],
		[1, ⵠ[370], ⵠᐃⵠΔ, 162, ᐃᐃⲆⲆⲆ, ᐃⵠ],
		[1, ⵠ[370], ᐃⵠΔⲆ, 163, 9, ᐃⵠⵠ],
		[1, ⵠ[370], 1, 164, ⵠΔⵠⲆⵠ, 1],
		[ᐃⵠⵠ, ⵠ[370], ⵠᐃⵠΔ, 165, 9, 1],
		[ΔⲆᐃ, ⵠ[370], 3, 166, ΔⲆᐃᐃΔ, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], Δᐃᐃᐃ, 168, 9, ⵠⲆⲆ],
		[ΔⲆᐃ, ⵠ[370], 3, 170, ⲆⲆᐃΔⲆ, 1],
		[ᐃⵠⵠ, ⵠ[370], 1, 169, 9, ᐃⵠ],
		[ᐃⵠ, ⵠ[370], 2, 167, 9, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], 2, 171, ᐃᐃⲆⲆⲆ, 1],
		[ⵠⵠⲆ, ⵠ[370], ⵠⲆΔΔ, 173, 9, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 2, 172, 9, 1],
		[ΔⲆᐃ, ⵠ[370], ⵠᐃⵠΔ, 174, ᐃⲆΔΔᐃ, 1],
		[1, ⵠ[370], ⵠⵠⲆ, 175, 9, 1],
		[ᐃⵠ, ⵠ[370], 3, 176, ΔᐃⵠΔⵠ, 1],
		[ᐃⵠ, ⵠ[370], ⵠΔⵠⲆ, 178, 9, 1],
		[1, ⵠ[370], ⵠⲆⲆΔ, 179, 9, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⲆ, 180, ⲆⲆᐃΔⲆ, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 2, 177, ΔᐃⵠΔⵠ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], 2, 182, ⵠΔⲆⲆᐃ, 1],
		[1, ⵠ[370], 2, 181, ᐃᐃΔⲆⵠⲆΔ, 1],
		[ΔⲆᐃ, ⵠ[370], 2, 183, ⲆⲆᐃΔⲆ, ⵠⲆⲆ],
		[1, ⵠ[370], 2, 184, ⲆⲆⵠⲆⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], 2, 185, ⵠΔⲆⲆᐃ, 1],
		[1, ⵠ[370], 2, 186, ⵠΔⵠⲆⵠ, ᐃⵠ],
		[ⵠⲆⲆ, ⵠ[370], 1, 187, ⲆⲆⵠⲆⵠ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠᐃⵠΔ, 188, ⵠΔⵠⲆⵠ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⵠΔⵠⲆ, 189, 9, 1],
		[1, ⵠ[370], 3, 190, 9, 1],
		[ᐃⵠ, ⵠ[370], 3, 191, ᐃΔⵠΔΔ, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[370], ⵠᐃⵠΔ, 192, 9, ⵠⲆⲆ],
		[ⵠⲆⲆ, ⵠ[370], 0, 193, 9, 1],
		[ᐃⵠⵠ, ⵠ[370], ᐃᐃΔⵠ, 194, ΔᐃⵠΔⵠ, 1],
		[ⵠⵠⲆ, ⵠ[370], ΔⲆⲆᐃ, 196, ⵠΔⵠⲆⵠ, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠΔⲆΔ, 198, ⲆⵠΔᐃⵠ, 1],
		[1, ⵠ[370], 2, 200, ᐃᐃⲆⲆⲆ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], 3, 195, 9, 1],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 197, ⲆⲆⵠⲆⵠ, ᐃⵠⵠ],
		[ΔⲆᐃ, ⵠ[370], ⵠΔⵠⲆ, 199, 9, ⵠⵠⲆ],
		[1, ⵠ[370], ⲆⲆⲆ, 201, 9, 1],
		[1, ⵠ[370], ⵠⵠⲆᐃ, 202, ΔᐃⵠΔⵠ, ᐃⵠ],
		[ΔⲆᐃ, ⵠ[370], 2, 203, ᐃⲆΔΔᐃ, 1],
		[1, ⵠ[370], 3, 208, 9, ⵠⵠⲆ],
		[ⵠⵠⲆ, ⵠ[370], 3, 207, ΔᐃΔᐃⲆΔⵠ, 1],
		[1, ⵠ[370], 3, 206, 9, ⵠⵠⲆ],
		[1, ⵠ[370], ⵠⲆⵠⵠ, 205, 9, ᐃⵠⵠ],
		[ᐃⵠ, ⵠ[370], ΔⵠⵠΔ, 204, 9, 1],
		[ⵠⲆⲆ, ⵠ[370], ⵠⲆⲆΔ, 214, 9, ⵠⵠⲆ],
		[1, ⵠ[370], Δᐃᐃᐃ, 215, 9, ⵠⲆⲆ],
		[1, ⵠ[370], ΔⵠⵠΔ, 216, ⵠΔⵠⲆⵠ, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[370], ⲆⵠⵠΔ, 217, 9, ⵠⲆⲆ],
		[1, ⵠ[370], 3, 218, 9, ⵠⲆⲆ],
		[1, "b", 0, ᐃᐃⵠⵠ, 159, ᐃⵠΔ],
		[ᐃⵠⵠ, "b", 0, 5, 171, ΔΔᐃ],
		[2, ⵠ[398], 1, 122, 63, ⲆⲆⲆ],
		[ᐃⵠΔⲆ, ⵠ[398], 2, 119, 277, 0],
		[2, ⵠ[398], 2, 109, 244, ⲆⵠⲆ],
		[ΔⲆⲆᐃ, ⵠ[398], ᐃᐃΔⵠ, 114, 205, 0],
		[2, ⵠ[398], 1, 120, 150, ⲆⲆⲆ],
		[ⵠⵠⲆᐃ, ⵠ[398], ⵠⵠⲆᐃ, 154, 129, ᐃⵠΔ],
		[ᐃᐃΔⵠ, ⵠ[398], ᐃⵠΔ, 184, 158, 0],
		[2, ⵠ[398], ⵠⲆⲆ, 208, 128, 0],
		[ⲆⲆⵠΔ, ⵠ[398], 1, 215, 132, ᐃⵠΔ],
		[ⵠᐃⵠΔ, ⵠ[398], 1, 214, 128, 0],
		[2, ⵠ[398], 1, 209, 132, ⲆⵠⲆ],
		[1, ⵠ[220], ⵠⲆⵠⵠ, 217, ⵠⲆΔⵠ, ⵠⵠⲆ],
		[ΔⲆᐃ, ⵠ[220], 1, 215, 19, ΔⲆᐃ],
		[1, ⵠ[220], ⲆⲆⲆ, 212, 18, ⵠⵠⲆ],
		[1, ⵠ[220], ᐃΔᐃΔ, 214, ⵠΔΔᐃΔ, 1],
		[1, ⵠ[220], 4, 216, ΔⲆᐃⵠΔ, ⵠⵠⲆ],
		[1, ⵠ[220], ⵠᐃᐃⲆ, 211, ᐃⵠᐃΔ, 1],
		[ΔⲆᐃ, ⵠ[220], ⵠⲆⲆΔ, 210, ⵠΔΔᐃᐃ, 1],
		[1, ⵠ[220], ⵠⲆⲆΔ, 215, 21, 1],
		[ᐃⵠⵠ, ⵠ[220], ΔⲆᐃ, 214, ⵠΔΔΔ, 1],
		[ᐃⵠ, ⵠ[220], ΔⵠⵠΔ, 214, 22, 1],
		[1, ⵠ[220], 3, 214, 24, 1],
		[1, ⵠ[220], ⵠᐃᐃⲆ, 214, 26, ΔⲆᐃ],
		[ᐃⵠⵠ, ⵠ[220], ᐃΔᐃΔ, 213, 27, 1],
		[ⵠⲆⲆ, ⵠ[220], 1, 212, 28, ΔⲆᐃ],
		[1, ⵠ[220], 2, 212, 29, ᐃⵠⵠ],
		[ⵠⲆⲆ, ⵠ[220], ⲆⲆᐃⵠ, 212, 30, ⵠⵠⲆ],
		[1, ⵠ[220], 4, 208, 19, ᐃⵠ],
		[ᐃⵠ, ⵠ[220], 4, 207, ⵠⲆⲆⲆⵠ, 1],
		[1, ⵠ[220], 1, 206, ΔⲆᐃⵠΔ, 1],
		[1, ⵠ[220], 1, 205, 19, ᐃⵠ],
		[ᐃⵠⵠ, ⵠ[220], 2, 204, ΔⲆⲆⵠⵠ, 1],
		[ᐃⵠ, ⵠ[220], ⲆΔᐃΔ, 203, 19, 1],
		[ⵠⵠⲆ, ⵠ[220], 3, 210, ⵠᐃⵠⲆⵠ, 1]
	];

	function ⵠᐃΔᐃΔᐃⵠ(ᐃⵠᐃⵠⵠΔⵠ, ΔⵠΔⲆΔⵠⵠ, ᐃᐃᐃⲆⲆΔⵠ, ΔᐃΔⲆΔΔΔ, ⲆⵠΔᐃⲆⲆΔ, ΔⲆᐃⲆⲆⵠΔ) {
		const ᐃᐃᐃΔⲆΔᐃ = (ΔⲆⵠ << (ᐃⵠᐃⵠⵠΔⵠ >> 0 & 255)) + (8 << (ᐃⵠᐃⵠⵠΔⵠ >> 24 & 255)) + (24 << (ᐃⵠᐃⵠⵠΔⵠ >> 16 & 255)) + (16 << (ᐃⵠᐃⵠⵠΔⵠ >> 8 & 255));
		const ⵠᐃΔΔΔᐃⵠ = (2147483587 + 2147483629 * (28149 + ΔⵠΔⲆΔⵠⵠ)) % 2147483647;
		const ᐃᐃⵠⵠⵠⲆⲆ = (22695477 * (ᐃᐃᐃⲆⲆΔⵠ + 55445) + ΔⲆᐃ) % 4294967296;
		const ⲆᐃⵠⵠΔⵠⵠ = ((ΔᐃΔⲆΔΔΔ + 40880) * 1103515245 + 12345) % 2147483648;
		const ᐃᐃΔⲆⵠΔΔ = (ⵠⲆⲆ + 22695477 * (ⲆⵠΔᐃⲆⲆΔ + 3411)) % 4294967296;
		const ΔᐃᐃΔΔⵠΔ = (ΔⲆᐃⲆⲆⵠΔ + 48480) % 65476;
		const ᐃΔⲆⵠⲆᐃΔ = ⲆⵠⲆⵠΔⲆⵠ(ᐃᐃᐃΔⲆΔᐃ, ⵠᐃΔΔΔᐃⵠ, ᐃᐃⵠⵠⵠⲆⲆ, ⲆᐃⵠⵠΔⵠⵠ, ᐃᐃΔⲆⵠΔΔ);
		const ⲆⲆⵠᐃⲆⵠⲆⵠᐃ = ⵠⲆⵠΔⲆⲆⵠ(ΔᐃᐃΔΔⵠΔ, ᐃᐃᐃΔⲆΔᐃ, ⵠᐃΔΔΔᐃⵠ, ᐃᐃⵠⵠⵠⲆⲆ, ⲆᐃⵠⵠΔⵠⵠ, ᐃᐃΔⲆⵠΔΔ);
		const ⲆⵠⵠⵠⵠΔᐃ = 37410 ^ ᐃΔⲆⵠⲆᐃΔ;
		return ⲆⵠⵠⵠⵠΔᐃ
	}

	function ⵠⲆΔΔⲆⲆⵠ(ΔⵠΔΔᐃΔⲆ, ⲆⵠΔⲆⲆΔⲆ, ⲆⵠⲆᐃΔⵠΔ, ⲆⲆΔΔᐃⲆⵠ, ⵠΔⲆⵠΔⲆΔ) {
		const ᐃⲆⲆᐃⲆΔⲆ = ~(ΔⵠΔΔᐃΔⲆ & 46109) & (46109 | ΔⵠΔΔᐃΔⲆ);
		const ΔⲆΔᐃΔⵠⲆ = (ⵠᐃᐃΔⲆ << (ⲆⵠΔⲆⲆΔⲆ >> 24 & 255)) + (24 << (ⲆⵠΔⲆⲆΔⲆ >> 16 & ΔΔΔⵠᐃⵠⵠ)) + (16 << (ⲆⵠΔⲆⲆΔⲆ >> 0 & ⲆⵠΔΔΔ)) + (ΔⲆⵠ << (ⲆⵠΔⲆⲆΔⲆ >> 8 & 255));
		const ⵠⵠⵠΔΔⲆΔ = (1013904223 + (ⲆⵠⲆᐃΔⵠΔ + 10794) * 1664525) % 4294967296;
		const ΔⲆⵠⵠΔᐃᐃ = (22695477 * (ⲆⲆΔΔᐃⲆⵠ + 40857) + 1) % 4294967296;
		const ᐃΔᐃᐃⵠΔⲆ = ~(11153 & ⵠΔⲆⵠΔⲆΔ) & 11153 | ~(11153 & ⵠΔⲆⵠΔⲆΔ) & ⵠΔⲆⵠΔⲆΔ;
		const ᐃⵠⲆⵠⲆⵠᐃ = ⵠᐃΔᐃΔᐃⵠ(ᐃⲆⲆᐃⲆΔⲆ, ΔⲆΔᐃΔⵠⲆ, ⵠⵠⵠΔΔⲆΔ, ΔⲆⵠⵠΔᐃᐃ, ᐃΔᐃᐃⵠΔⲆ, ᐃⲆⲆᐃⲆΔⲆ);
		const ΔᐃΔΔⵠⵠⵠⵠΔ = ⵠⵠᐃⲆΔᐃΔ(ΔⲆΔᐃΔⵠⲆ, ⵠⵠⵠΔΔⲆΔ);
		const ᐃΔⵠᐃⲆⵠΔ = ~(ᐃⵠⲆⵠⲆⵠᐃ & 18372) & (18372 | ᐃⵠⲆⵠⲆⵠᐃ);
		return ᐃΔⵠᐃⲆⵠΔ
	}
	const ᐃⲆⵠᐃⲆᐃⵠ = ᐃᐃᐃⲆⲆ;
	var Δᐃ = 0;
	const ᐃΔⵠᐃ = ΔⲆⲆᐃ;
	const ΔⵠⵠΔΔⲆΔ = ⲆⲆⵠΔⲆΔⵠ;
	const ᐃⲆᐃⵠᐃΔⲆ = ⵠⵠⵠᐃⲆⲆⵠ;
	const ΔΔⵠᐃⵠ = ᐃᐃⵠⵠⵠ;
	const ⲆΔⲆΔᐃ = ᐃⵠⲆⵠⵠ;
	var Δ = {
		"ⲆⵠⵠΔⲆ": ["#133A2B", ⵠ[482]],
		"ⲆΔᐃⲆⵠⲆⲆⲆΔ": [ⵠ[16], ⵠ[37]],
		"ⵠΔⲆᐃᐃᐃⲆ": ["#4EB687", ⵠ[80]],
		"ΔΔⵠⵠⲆⵠΔ": ["#664516", "#13474C"],
		"ⲆⲆⵠⲆⲆⲆⲆ": ["#FCEFBB", "#0F4D48"],
		"ᐃⲆⵠⵠⵠᐃⲆ": ["#C1AA7E", "#0F423D"],
		"ᐃⵠΔⲆⲆⵠΔ": ["#594837", ⵠ[407]],
		"ᐃⲆΔⲆᐃΔⵠ": ["#A5D6D6", "#539CA0"],
		"ⲆᐃΔⵠⲆ": [ⵠ[224], ⵠ[492]],
		"ⲆⵠΔⵠⲆⲆΔ": [ⵠ[356], ⵠ[509]],
		"ΔᐃΔⵠⲆⲆⵠ": [ⵠ[524], ⵠ[191]],
		"ⲆΔΔⵠⲆΔΔ": ["#ECF7F9", "#539CA0"],
		"ᐃᐃⵠⵠⵠⵠⲆ": [ⵠ[68], ⵠ[68]],
		"ᐃⲆⵠⵠΔⲆΔ": [ⵠ[68], ⵠ[68]],
		"ΔΔᐃⵠΔᐃΔ": ["#1C9BA4", "#00272F"],
		"ⵠⵠᐃᐃⲆ": ["#2D2017", "#031C1E"],
		"ΔⲆΔ": ⲆΔᐃ,
		"ⲆⵠΔ": ᐃⵠⵠ,
		"ΔᐃⵠⲆΔⲆⵠⲆⵠ": 2300,
		"ᐃⲆⲆᐃⵠⲆΔⵠᐃ": 2290,
		"ⲆⵠᐃΔⵠΔΔ": 34,
		"ⲆᐃᐃⲆᐃΔⵠ": 5,
		"ⲆⵠⲆᐃΔᐃⲆ": 68,
		"ⵠⲆΔⵠΔⵠᐃ": 34,
		"ⲆⵠΔᐃⵠⵠⵠ": 5,
		"ⵠⵠⵠᐃᐃΔⵠ": 1,
		"ⲆⵠⲆᐃⲆⵠᐃ": .6,
		"ⵠᐃᐃⵠᐃⲆⵠ": .25,
		"ᐃⲆⵠⵠᐃⵠᐃ": 50,
		"ᐃⵠⲆᐃⵠᐃᐃ": ⵠΔᐃΔⲆ,
		"ᐃΔᐃⲆⲆⲆⲆ": 75,
		"ⵠⲆΔΔⵠᐃⲆ": ⵠⲆΔⵠ,
		"ⲆᐃᐃΔⵠΔᐃ": ⲆΔⵠᐃ,
		"ⵠⲆⵠΔⲆ": Δᐃ++,
		"ᐃⵠᐃⲆΔ": Δᐃ++,
		"ⵠΔᐃⵠᐃ": Δᐃ++,
		"ᐃᐃΔⵠᐃ": Δᐃ++,
		"ᐃᐃΔᐃΔ": Δᐃ++,
		"ⲆᐃΔΔⲆ": Δᐃ++,
		"ΔⲆᐃⲆᐃ": Δᐃ++,
		"ΔΔᐃⵠᐃ": Δᐃ++,
		"ⵠᐃΔⵠᐃ": Δᐃ++,
		"ΔⲆⲆΔⲆ": Δᐃ++,
		"ⲆⲆⵠᐃᐃ": Δᐃ++,
		"ΔⲆⲆΔᐃ": Δᐃ++,
		"ΔΔΔⲆⵠ": Δᐃ++,
		"ⲆΔⵠᐃⵠ": Δᐃ++,
		"ⵠⲆΔᐃⲆ": Δᐃ++,
		"ΔⲆⲆᐃᐃ": Δᐃ++,
		"ⵠⵠΔᐃⵠ": Δᐃ++,
		"ᐃⵠⲆΔΔ": Δᐃ++,
		"ⵠⲆⲆⲆᐃ": Δᐃ++,
		"ⵠⲆⲆΔⲆ": Δᐃ++,
		"ΔⲆΔᐃⵠ": Δᐃ++,
		"ΔΔΔᐃᐃ": Δᐃ++,
		"Δⵠᐃᐃⵠ": Δᐃ++,
		"ⵠⵠᐃⵠᐃ": Δᐃ++,
		"ⵠⲆΔΔⵠ": Δᐃ++,
		"ⵠΔⵠⵠⵠ": Δᐃ++,
		"ⵠⲆⵠᐃᐃ": Δᐃ++,
		"ᐃΔⵠⲆⵠ": Δᐃ++,
		"ΔᐃⵠⲆΔ": Δᐃ++,
		"ⵠΔΔⵠ": Δᐃ++,
		"ΔᐃΔⲆⲆ": Δᐃ++,
		"ᐃΔΔᐃΔ": Δᐃ++,
		"ᐃΔᐃΔᐃ": Δᐃ++,
		"ᐃⲆⵠⲆᐃ": Δᐃ++,
		"ⲆⲆⲆⵠⲆ": Δᐃ++,
		"ΔⲆΔⲆᐃ": Δᐃ++,
		"ⲆⲆΔⲆⵠ": Δᐃ++,
		"ⲆᐃΔⵠᐃ": Δᐃ++,
		"ᐃΔⵠⵠᐃ": Δᐃ++,
		"ⲆⲆⵠᐃⵠ": Δᐃ++,
		"ΔⲆᐃⲆⵠ": Δᐃ++,
		"ᐃⵠᐃⲆⵠ": Δᐃ++,
		"ⵠⵠⲆΔⲆ": Δᐃ++,
		"ⲆᐃⲆΔⵠ": Δᐃ++,
		"ⲆⲆⲆΔⲆ": Δᐃ++,
		"ⵠΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠⲆᐃᐃ": Δᐃ++,
		"ⵠΔᐃΔΔ": Δᐃ++,
		"ⲆⲆΔⲆᐃ": Δᐃ++,
		"ᐃΔⲆΔⵠ": Δᐃ++,
		"ᐃᐃⲆᐃⲆ": Δᐃ++,
		"ᐃⵠΔⲆΔ": Δᐃ++,
		"ᐃⵠⵠⵠᐃ": Δᐃ++,
		"ⵠΔΔᐃⲆ": Δᐃ++,
		"ᐃᐃⲆΔᐃ": Δᐃ++,
		"ⲆΔΔΔΔ": Δᐃ++,
		"ⲆⲆⵠⵠᐃ": Δᐃ++,
		"Ⲇᐃⵠᐃⵠ": Δᐃ++,
		"Δᐃⵠᐃⵠ": Δᐃ++,
		"ⵠᐃⲆΔᐃ": Δᐃ++,
		"ᐃᐃⵠⲆᐃ": Δᐃ++,
		"ᐃᐃⲆΔⵠ": Δᐃ++,
		"ᐃⲆΔΔⵠ": Δᐃ++,
		"ⲆᐃΔⲆⵠ": Δᐃ++,
		"ᐃΔⵠᐃⵠ": Δᐃ++,
		"ᐃⲆΔⵠΔ": Δᐃ++,
		"ⲆⵠⲆΔⵠ": Δᐃ++,
		"ⲆⲆΔⲆⲆ": Δᐃ++,
		"ⲆⲆᐃⵠⵠ": Δᐃ++,
		"ⵠΔΔⵠΔ": Δᐃ++,
		"ᐃᐃΔΔⲆ": Δᐃ++,
		"ⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠⵠΔⲆΔ": Δᐃ++,
		"ⵠΔⲆΔΔ": Δᐃ++,
		"ⵠΔΔⲆΔ": Δᐃ++,
		"ⲆⲆΔΔΔ": Δᐃ++,
		"ᐃⵠⵠⲆⵠ": Δᐃ++,
		"ᐃᐃⵠᐃⵠ": Δᐃ++,
		"ᐃⵠΔⵠⲆ": Δᐃ++,
		"ⵠᐃⵠᐃᐃ": Δᐃ++,
		"ᐃⲆⵠⵠΔ": Δᐃ++,
		"ⲆᐃᐃⵠΔ": Δᐃ++,
		"ⵠⵠΔᐃᐃ": Δᐃ++,
		"ᐃⲆΔᐃⵠ": Δᐃ++,
		"ΔΔᐃᐃΔ": Δᐃ++,
		"ᐃᐃΔΔⵠ": Δᐃ++,
		"ⲆΔⵠⲆⲆ": Δᐃ++,
		"ⵠᐃᐃⵠΔ": Δᐃ++,
		"ΔⲆⵠⵠᐃ": Δᐃ++,
		"ⵠᐃⲆᐃⲆ": Δᐃ++,
		"ΔΔⵠⵠᐃ": Δᐃ++,
		"ΔᐃΔⵠⵠ": Δᐃ++,
		"ΔⲆᐃⵠⲆ": Δᐃ++,
		"ᐃΔⲆΔⲆ": Δᐃ++,
		"ΔΔⵠⲆⲆ": Δᐃ++,
		"ⲆⵠΔⵠᐃ": Δᐃ++,
		"ⲆΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠΔΔᐃ": Δᐃ++,
		"ⵠΔⵠⵠΔ": Δᐃ++,
		"ⲆⲆⵠΔΔ": Δᐃ++,
		"ⲆΔᐃⵠⵠⵠᐃΔⵠ": Δᐃ++,
		"ΔⵠᐃⲆⲆ": Δᐃ++,
		"ΔⵠΔⲆⲆ": Δᐃ++,
		"ΔΔⵠⲆᐃ": Δᐃ++,
		"ⲆⲆΔΔⲆ": Δᐃ++,
		"ΔΔᐃΔⵠ": Δᐃ++,
		"ⵠⲆᐃⲆⲆ": Δᐃ++,
		"ⲆΔⵠⵠⵠ": Δᐃ++,
		"ΔⵠΔΔᐃ": Δᐃ++,
		"ⵠⵠⵠⲆ": Δᐃ++,
		"ⵠⵠᐃΔᐃ": Δᐃ++,
		"ⲆᐃⲆⵠ": Δᐃ++,
		"ⲆⵠⲆⵠ": Δᐃ++,
		"ᐃᐃᐃΔⲆᐃⵠ": Δᐃ++,
		"ΔᐃΔⵠΔ": Δᐃ++,
		"ΔⲆⵠᐃⵠⵠᐃ": Δᐃ++,
		"ⲆᐃⵠΔᐃ": Δᐃ++,
		"ⵠᐃᐃⵠⵠ": Δᐃ++,
		"ΔΔΔΔᐃⲆⵠ": Δᐃ++,
		"ⲆΔᐃⲆΔΔⵠ": Δᐃ++,
		"ΔΔⲆΔᐃ": Δᐃ++,
		"ⲆⵠΔⵠ": Δᐃ++,
		"ΔΔⵠΔⲆ": Δᐃ++,
		"ⲆⵠΔⲆᐃ": Δᐃ++,
		"ⲆⵠⲆΔⲆΔⵠ": Δᐃ++,
		"ⲆΔᐃΔΔ": Δᐃ++,
		"ᐃⲆⵠⵠⵠ": Δᐃ++,
		"ⵠΔΔⲆⵠ": Δᐃ++,
		"ᐃⲆᐃᐃⵠ": Δᐃ++,
		"ΔᐃᐃⲆΔ": Δᐃ++,
		"ΔⵠⲆⲆΔ": Δᐃ++,
		"ⲆⲆⲆΔⵠ": Δᐃ++,
		"ⵠᐃⲆΔⲆ": Δᐃ++,
		"ΔⵠᐃⲆΔ": Δᐃ++,
		"ΔⲆⲆΔΔ": Δᐃ++,
		"ⵠⵠⲆΔΔ": Δᐃ++,
		"ⵠᐃⲆⲆΔ": Δᐃ++,
		"ᐃⵠⲆⵠΔ": Δᐃ++,
		"ΔΔᐃᐃᐃ": Δᐃ++,
		"ᐃᐃᐃⲆΔ": Δᐃ++,
		"ᐃⵠⲆᐃⵠⲆⲆ": Δᐃ++,
		"ⵠᐃⲆᐃᐃ": Δᐃ++,
		"ᐃⲆᐃⲆⲆⲆᐃ": Δᐃ++,
		"ᐃⲆΔΔⲆᐃᐃ": Δᐃ++,
		"ᐃⲆⵠΔᐃΔⵠ": Δᐃ++,
		"ᐃΔᐃⲆⲆᐃᐃ": Δᐃ++,
		"ᐃⵠΔᐃⵠ": Δᐃ++,
		"ⲆⵠⵠΔᐃ": Δᐃ++,
		"ⵠⲆⵠᐃⵠ": Δᐃ++,
		"ΔⵠⵠⵠΔ": Δᐃ++,
		"ΔⵠⵠΔᐃ": Δᐃ++,
		"ⲆΔⵠΔΔ": Δᐃ++,
		"ΔΔΔΔΔ": Δᐃ++,
		"ΔⲆᐃΔⲆ": Δᐃ++,
		"ⵠᐃΔⲆΔ": Δᐃ++,
		"ⵠⲆⵠⲆⲆ": Δᐃ++,
		"ᐃΔᐃⵠⲆ": Δᐃ++,
		"ⲆⲆᐃΔⵠ": Δᐃ++,
		"ⲆΔⲆᐃΔ": Δᐃ++,
		"ΔⵠⲆΔᐃ": Δᐃ++,
		"Δᐃⵠⵠᐃ": Δᐃ++,
		"ᐃΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔᐃⲆᐃ": Δᐃ++,
		"ᐃᐃᐃΔⲆ": Δᐃ++,
		"ΔΔⵠⵠⵠ": Δᐃ++,
		"ΔⲆΔΔᐃ": Δᐃ++,
		"ᐃⲆⵠⲆᐃⵠΔ": Δᐃ++,
		"ΔⵠΔⲆᐃ": Δᐃ++,
		"ⲆΔⵠΔⵠ": Δᐃ++,
		"Δⵠⵠᐃⵠ": Δᐃ++,
		"ⲆᐃⵠⲆΔ": Δᐃ++,
		"ΔⲆᐃⵠᐃΔⵠ": Δᐃ++,
		"ᐃᐃⲆΔᐃⵠΔ": Δᐃ++,
		"ᐃⵠᐃⲆⵠⲆΔ": Δᐃ++,
		"ᐃΔⲆᐃᐃ": Δᐃ++,
		"ⲆⵠⲆΔⲆΔΔ": Δᐃ++,
		"ⲆⵠᐃⲆΔⵠⵠ": Δᐃ++,
		"ΔⲆⵠⵠΔⲆⵠ": Δᐃ++,
		"ⲆΔⲆᐃⵠᐃⵠ": Δᐃ++,
		"ᐃᐃⵠᐃᐃⵠⲆ": Δᐃ++,
		"ⲆⵠⲆⲆⲆᐃΔ": Δᐃ++,
		"ⲆΔΔⲆⲆΔᐃ": Δᐃ++,
		"ⵠⲆⲆⲆᐃΔⵠ": Δᐃ++,
		"ᐃᐃᐃⵠⲆ": Δᐃ++,
		"ⲆⵠᐃⵠⲆ": Δᐃ++,
		"ⲆΔⲆⲆΔ": Δᐃ++,
		"ᐃⵠⵠᐃⲆ": Δᐃ++,
		"ⲆⲆᐃᐃΔ": Δᐃ++,
		"ⲆⲆΔΔᐃⵠⵠ": Δᐃ++,
		"ΔⵠⵠΔⵠ": Δᐃ++,
		"ⵠΔⲆᐃⵠ": Δᐃ++,
		"ⵠᐃΔⵠⵠⲆⵠ": Δᐃ++,
		"ⵠΔΔⵠᐃ": Δᐃ++,
		"ⲆⲆᐃⲆⲆΔᐃ": Δᐃ++,
		"ΔⵠⵠⲆᐃ": Δᐃ++,
		"ⵠⵠⵠᐃⲆ": Δᐃ++,
		"ⵠΔΔΔⵠΔᐃ": Δᐃ++,
		"ⲆⲆΔΔⲆⲆⵠ": Δᐃ++,
		"ⵠᐃᐃⲆⵠ": Δᐃ++,
		"ΔᐃⲆΔΔ": Δᐃ++,
		"ⲆⵠⵠᐃᐃᐃΔ": Δᐃ++,
		"ᐃⵠΔᐃΔ": Δᐃ++,
		"ᐃΔⲆⲆ": Δᐃ++,
		"ⲆⵠΔⲆⵠ": Δᐃ++,
		"ᐃΔᐃΔᐃⵠᐃ": Δᐃ++,
		"ⲆⵠⵠⲆᐃ": Δᐃ++,
		"ΔⵠΔⲆᐃΔᐃ": Δᐃ++,
		"ⲆⵠⵠᐃΔ": Δᐃ++,
		"ⵠΔΔⵠⵠᐃⲆ": Δᐃ++,
		"ᐃΔⲆΔᐃ": Δᐃ++,
		"ΔΔⵠⲆᐃᐃⲆ": Δᐃ++,
		"ΔⲆⲆⲆⲆᐃⲆ": Δᐃ++,
		"ⲆⵠⵠⲆⲆ": Δᐃ++,
		"ΔⲆΔⵠⵠ": Δᐃ++,
		"ⵠⲆᐃᐃᐃ": Δᐃ++,
		"ᐃⲆⲆⵠⲆ": Δᐃ++,
		"ᐃᐃΔΔΔ": Δᐃ++,
		"ᐃⵠⵠⲆⲆ": Δᐃ++,
		"ⲆᐃᐃⲆⵠ": Δᐃ++,
		"ΔⲆⲆⵠᐃ": Δᐃ++,
		"ΔⵠᐃⲆⵠ": Δᐃ++,
		"ᐃᐃᐃⵠⵠ": Δᐃ++,
		"Δᐃᐃᐃᐃ": Δᐃ++,
		"ΔΔⲆᐃΔ": Δᐃ++,
		"ⵠᐃⲆⵠΔ": Δᐃ++,
		"ⵠΔᐃⲆⲆΔᐃ": Δᐃ++,
		"ΔᐃⵠᐃΔᐃⵠ": Δᐃ++,
		"ᐃΔⵠⵠΔ": Δᐃ++,
		"ΔⲆⵠᐃΔⵠⵠ": Δᐃ++,
		"ΔᐃᐃΔΔ": Δᐃ++,
		"ᐃⲆᐃⲆⲆ": Δᐃ++,
		"ᐃᐃⵠΔΔ": Δᐃ++,
		"ᐃⲆⲆⲆⲆ": Δᐃ++,
		"ᐃⲆⲆᐃⲆ": Δᐃ++,
		"ⲆⵠⲆⲆⲆΔⵠ": Δᐃ++,
		"ΔᐃⲆⵠᐃ": Δᐃ++,
		"ⲆᐃΔⲆⲆ": Δᐃ++,
		"Δᐃⵠⵠⵠ": Δᐃ++,
		"Ⲇᐃᐃᐃᐃ": Δᐃ++,
		"ⲆⵠᐃⲆΔ": Δᐃ++,
		"ⵠⵠⵠΔⲆ": Δᐃ++,
		"ΔᐃᐃⲆᐃ": Δᐃ++,
		"ⵠⵠⲆΔᐃ": Δᐃ++,
		"ⵠⵠⲆᐃⲆᐃⵠ": Δᐃ++,
		"ΔΔⵠⵠΔ": Δᐃ++,
		"ᐃΔᐃΔⵠ": Δᐃ++,
		"ΔⵠⲆΔᐃΔⲆ": Δᐃ++,
		"ᐃⵠᐃⲆⲆ": Δᐃ++,
		"ⵠⵠᐃᐃᐃ": Δᐃ++,
		"ⲆⵠᐃΔΔᐃⲆ": Δᐃ++,
		"ΔΔⲆⵠᐃ": Δᐃ++,
		"ΔⲆΔⵠᐃ": Δᐃ++,
		"ᐃⵠⲆⲆΔᐃⵠ": Δᐃ++,
		"ᐃᐃᐃⲆΔΔⵠ": Δᐃ++,
		"ᐃⲆΔΔⲆΔΔ": Δᐃ++,
		"ΔⲆⲆⲆⵠᐃΔ": Δᐃ++,
		"ⵠᐃⵠⵠⵠΔⵠ": Δᐃ++,
		"ⲆⵠⲆᐃⲆⲆⲆ": Δᐃ++,
		"ⵠⵠᐃⵠⲆⵠΔ": Δᐃ++,
		"ΔΔᐃΔΔⵠᐃ": Δᐃ++,
		"ⵠΔⲆΔᐃ": Δᐃ++,
		"ⲆΔᐃⲆΔⲆᐃ": Δᐃ++,
		"ⵠⲆⲆΔΔᐃⵠ": Δᐃ++,
		"ⵠΔᐃᐃᐃⵠⲆ": Δᐃ++,
		"ᐃΔΔᐃᐃ": Δᐃ++,
		"ΔⲆᐃᐃᐃᐃⲆ": Δᐃ++,
		"ⵠⵠᐃΔᐃΔⵠ": Δᐃ++,
		"ΔⵠᐃΔᐃⵠⲆ": Δᐃ++,
		"ΔⵠΔΔⵠΔⲆ": Δᐃ++,
		"ⲆΔⲆⲆⲆΔΔ": Δᐃ++,
		"ΔΔΔⲆⵠⲆᐃ": Δᐃ++,
		"ⲆᐃⲆⲆⲆᐃⵠ": Δᐃ++,
		"ⵠⲆΔᐃΔᐃⲆ": Δᐃ++,
		"ⲆⵠⵠⲆᐃᐃⵠ": Δᐃ++,
		"ⲆᐃᐃⲆⲆⵠΔ": Δᐃ++,
		"ΔΔⲆᐃΔΔⵠ": Δᐃ++,
		"ΔΔᐃΔᐃⲆΔ": Δᐃ++,
		"ΔᐃⲆⵠⲆⲆΔ": Δᐃ++,
		"ᐃⲆⵠᐃΔᐃᐃ": Δᐃ++,
		"ΔᐃⲆⲆ": Δᐃ++,
		"ᐃⵠΔᐃⲆ": Δᐃ++,
		"Ⲇⵠⵠⵠⵠⵠⵠ": Δᐃ++,
		"ⲆᐃⲆⵠᐃⵠⲆ": Δᐃ++,
		"Δᐃ": Δᐃ++,
		"ⵠⵠⵠⵠⵠⲆⵠ": Δᐃ++,
		"ᐃⲆⵠⵠⲆ": Δᐃ++,
		"Ⲇⵠᐃⵠⵠ": Δᐃ++,
		"ⵠᐃⵠΔᐃⲆᐃ": Δᐃ++,
		"ⲆⵠΔⲆΔ": Δᐃ++,
		"ΔΔⲆⵠⵠⵠⲆ": Δᐃ++,
		"ᐃᐃΔⲆⲆⵠᐃ": Δᐃ++,
		"ⵠⲆⲆΔᐃᐃⲆ": Δᐃ++,
		"ΔᐃⲆΔⲆⵠⲆ": Δᐃ++,
		"ⲆᐃᐃᐃΔΔⲆ": Δᐃ++,
		"ᐃΔᐃⲆⲆ": Δᐃ++,
		"ᐃⵠΔⲆΔⵠᐃ": Δᐃ++,
		"ⵠᐃᐃⲆⵠᐃⲆ": Δᐃ++,
		"ⵠⵠⲆᐃⲆΔΔ": Δᐃ++,
		"ᐃᐃⲆⲆⲆΔΔ": Δᐃ++,
		"ⲆⲆⲆⵠΔ": Δᐃ++,
		"ⲆᐃΔⵠⵠⲆΔ": Δᐃ++,
		"ⲆᐃᐃⲆⲆᐃⲆ": Δᐃ++,
		"ΔΔⲆᐃᐃᐃⲆ": Δᐃ++,
		"ΔⲆΔⲆⵠΔΔ": Δᐃ++,
		"ⵠⲆᐃⵠⵠᐃᐃ": Δᐃ++,
		"ᐃΔⵠΔⵠⵠΔ": Δᐃ++,
		"ⲆΔᐃⵠΔΔᐃ": Δᐃ++,
		"ᐃⵠⵠⵠⵠ": Δᐃ++,
		"ᐃⵠⲆⲆⲆⵠⵠ": Δᐃ++,
		"ⲆᐃⲆⵠᐃᐃΔ": Δᐃ++,
		"ⲆᐃⵠⲆΔⲆⵠ": Δᐃ++,
		"ⲆⵠⵠᐃᐃᐃⲆ": Δᐃ++,
		"ᐃⵠᐃⲆⲆΔΔ": Δᐃ++,
		"ΔᐃⲆᐃᐃᐃⲆ": Δᐃ++,
		"ⵠΔΔΔΔᐃᐃ": Δᐃ++,
		"ⲆᐃΔⵠΔᐃᐃ": Δᐃ++,
		"ΔⵠᐃΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔᐃⲆΔᐃᐃ": Δᐃ++,
		"ⲆⵠⵠⲆΔⲆⲆ": Δᐃ++,
		"ᐃΔⵠⵠⵠΔᐃ": Δᐃ++,
		"ⵠⵠΔⲆᐃⲆΔ": Δᐃ++,
		"ⵠⲆΔⲆⲆ": Δᐃ++,
		"ⵠⲆᐃⵠⵠⵠⵠ": Δᐃ++,
		"ⵠⵠᐃⵠΔⵠᐃ": Δᐃ++,
		"ᐃᐃⲆⲆΔⵠΔ": Δᐃ++,
		"ᐃⲆⵠⵠⲆΔΔ": Δᐃ++,
		"ⵠⲆᐃᐃⲆⲆⵠ": Δᐃ++,
		"ΔΔΔⲆΔᐃΔ": Δᐃ++,
		"ΔⲆᐃᐃⵠⵠⵠ": Δᐃ++,
		"ΔⵠΔⲆⲆᐃⵠ": Δᐃ++,
		"ΔⲆⲆᐃⲆᐃᐃ": Δᐃ++,
		"ᐃᐃᐃᐃⵠⲆᐃ": Δᐃ++,
		"ᐃΔᐃᐃⵠⲆⲆ": Δᐃ++,
		"ⵠⵠⲆΔᐃⵠⵠ": Δᐃ++,
		"ᐃⵠΔⵠᐃᐃⵠ": Δᐃ++,
		"ⵠΔᐃᐃΔΔΔ": Δᐃ++,
		"ᐃΔⲆⵠΔΔⲆ": Δᐃ++,
		"ΔΔΔⵠΔⲆⵠ": Δᐃ++,
		"ᐃⲆΔⲆᐃΔⲆ": Δᐃ++,
		"ⵠᐃΔΔᐃⲆΔ": Δᐃ++,
		"ⵠᐃΔⲆⲆᐃⵠ": Δᐃ++,
		"ⵠⵠⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠᐃΔᐃᐃⵠⲆ": Δᐃ++,
		"ⲆⵠΔⵠⲆⲆⵠ": Δᐃ++,
		"ⵠᐃΔⲆΔᐃⵠ": Δᐃ++,
		"ᐃⵠᐃⵠⲆᐃⵠ": Δᐃ++,
		"ΔⲆⵠΔⵠΔᐃ": Δᐃ++,
		"ⵠⵠⲆᐃᐃᐃⲆΔᐃ": Δᐃ++,
		"ⵠΔⵠⵠⲆᐃⲆ": Δᐃ++,
		"ⵠΔᐃⲆⲆᐃⵠ": Δᐃ++,
		"ΔΔΔΔⲆᐃΔ": Δᐃ++,
		"ⲆⲆⲆⵠΔⲆᐃ": Δᐃ++,
		"ⲆⲆⲆⵠᐃᐃΔ": Δᐃ++,
		"ⵠⲆⵠΔΔⵠⵠ": Δᐃ++,
		"ⲆΔⲆⲆⵠⵠⵠ": Δᐃ++,
		"ⲆⵠⲆⵠΔΔⵠ": Δᐃ++,
		"ⲆⵠⲆΔᐃⵠᐃ": Δᐃ++,
		"ⲆᐃⲆΔᐃⵠⵠ": Δᐃ++,
		"ⵠⲆΔΔΔⲆᐃ": Δᐃ++,
		"ⵠⲆᐃΔᐃⵠⵠ": Δᐃ++,
		"ΔᐃΔⲆⵠᐃⵠ": Δᐃ++,
		"ⲆⲆᐃᐃⵠⵠⲆ": Δᐃ++,
		"ⵠΔΔᐃⵠᐃᐃ": Δᐃ++,
		"ⲆⲆᐃᐃⲆΔΔ": Δᐃ++,
		"ⵠⵠᐃᐃⵠᐃᐃ": Δᐃ++,
		"ΔΔⲆΔⲆⲆⲆ": Δᐃ++,
		"ᐃΔΔⵠⵠΔΔ": Δᐃ++,
		"ᐃᐃⲆΔᐃⵠⵠ": Δᐃ++,
		"ⲆᐃΔᐃⲆΔⵠ": Δᐃ++,
		"ΔⲆⲆΔᐃⵠΔ": Δᐃ++,
		"ΔⲆⵠⲆᐃᐃⵠ": Δᐃ++,
		"ⲆᐃⵠⲆΔᐃΔ": Δᐃ++,
		"ᐃⵠΔᐃⲆⲆΔ": Δᐃ++,
		"ⲆᐃᐃᐃᐃⲆⲆ": Δᐃ++,
		"ⲆⲆᐃΔΔⵠᐃ": Δᐃ++,
		"ⵠΔᐃⲆⲆᐃΔ": Δᐃ++,
		"ⵠᐃΔΔᐃᐃᐃ": Δᐃ++,
		"ΔΔΔΔⲆΔΔ": Δᐃ++,
		"ΔᐃⵠΔⵠⲆΔ": Δᐃ++,
		"ΔⲆⲆⵠΔⲆΔ": Δᐃ++,
		"ΔᐃΔⵠⵠⵠΔ": Δᐃ++,
		"ᐃⵠΔᐃᐃⲆⲆ": Δᐃ++,
		"Δⵠᐃᐃⵠᐃⵠ": Δᐃ++,
		"ⲆⵠΔⲆᐃⲆᐃ": Δᐃ++,
		"ⲆᐃᐃΔΔⲆᐃ": Δᐃ++,
		"ᐃᐃⲆΔⲆΔᐃ": Δᐃ++,
		"ⵠᐃᐃᐃⲆᐃⵠ": Δᐃ++,
		"ᐃⵠⲆⲆΔᐃᐃ": Δᐃ++,
		"ᐃΔⲆⵠⵠᐃΔ": Δᐃ++,
		"ⵠⲆΔⲆⵠⲆⲆ": Δᐃ++,
		"ⲆΔⲆⲆΔⵠΔ": Δᐃ++,
		"ⵠΔⵠᐃᐃⵠᐃ": Δᐃ++,
		"ⲆⲆᐃⲆⵠⲆΔ": Δᐃ++,
		"ᐃΔⵠⵠᐃᐃⲆ": Δᐃ++,
		"ⵠⲆᐃΔᐃᐃⲆ": Δᐃ++,
		"ᐃⲆΔⵠⲆᐃᐃ": Δᐃ++,
		"ⵠⵠⲆᐃⵠᐃⲆ": Δᐃ++,
		"ⲆⵠΔΔΔⵠᐃ": Δᐃ++,
		"ⲆⲆΔⵠΔⵠΔ": Δᐃ++,
		"ⵠᐃΔⲆΔⵠᐃ": Δᐃ++,
		"ΔΔⲆΔᐃⲆΔ": Δᐃ++,
		"ⵠᐃⲆⵠⲆⲆᐃ": Δᐃ++,
		"ᐃⲆⲆᐃΔⵠⵠ": Δᐃ++,
		"ⵠⲆⵠᐃΔΔᐃ": Δᐃ++,
		"ⵠΔⵠᐃᐃΔⵠ": Δᐃ++,
		"ⲆⲆⵠΔΔⲆⲆ": Δᐃ++,
		"ⲆⵠΔⲆΔΔⲆ": Δᐃ++,
		"ⲆᐃᐃⲆⵠᐃⲆ": Δᐃ++,
		"ⲆⵠᐃⵠⵠᐃⲆ": Δᐃ++,
		"ΔⵠⲆΔΔΔΔ": Δᐃ++,
		"ⵠΔⵠΔⲆⵠΔ": Δᐃ++,
		"ᐃⲆⵠΔΔᐃⲆ": Δᐃ++,
		"ⲆᐃΔᐃΔᐃᐃ": Δᐃ++,
		"ΔΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔⵠⲆΔΔⲆⲆⲆ": Δᐃ++,
		"ⵠⲆΔΔᐃ": Δᐃ++,
		"ⵠΔⲆΔⵠ": Δᐃ++,
		"ⲆᐃΔΔⲆⵠⵠⲆᐃ": Δᐃ++,
		"ⵠᐃⵠΔⲆⵠⲆ": Δᐃ++,
		"ᐃⲆΔΔΔ": Δᐃ++,
		"ⲆᐃⵠⲆⲆΔᐃ": Δᐃ++,
		"ⵠᐃᐃᐃΔⲆᐃ": Δᐃ++,
		"ⲆᐃΔᐃⲆⲆⲆ": Δᐃ++,
		"ⵠᐃⲆᐃⲆΔᐃ": Δᐃ++,
		"ΔⵠⲆⵠⵠΔⵠ": Δᐃ++,
		"ᐃⵠⵠΔⵠΔΔ": Δᐃ++,
		"ᐃΔⵠΔⲆᐃⲆ": Δᐃ++,
		"Δᐃᐃᐃⵠⵠᐃ": Δᐃ++,
		"ⵠΔᐃΔᐃⲆⲆ": Δᐃ++,
		"ⲆⵠᐃᐃΔⲆⵠ": Δᐃ++,
		"ᐃⵠᐃᐃⲆᐃᐃ": Δᐃ++,
		"ᐃⲆⵠᐃΔΔᐃ": Δᐃ++,
		"ⲆⲆᐃⲆΔᐃⵠ": Δᐃ++,
		"ⲆⲆⲆᐃⲆⵠᐃ": Δᐃ++,
		"ΔᐃΔΔᐃᐃⵠ": Δᐃ++,
		"ᐃΔΔᐃᐃΔⲆ": Δᐃ++,
		"ΔⵠⲆᐃⲆⲆᐃ": Δᐃ++,
		"ᐃⲆⵠΔⵠΔᐃ": Δᐃ++,
		"ΔⲆⲆⵠⵠᐃⲆ": Δᐃ++,
		"ⲆⵠΔΔᐃΔᐃ": Δᐃ++,
		"ᐃΔⵠⲆⵠⲆΔ": Δᐃ++,
		"ⵠΔΔᐃΔⵠⵠ": Δᐃ++,
		"ⲆΔᐃⲆⲆᐃⵠ": Δᐃ++,
		"ᐃⲆⲆᐃᐃᐃᐃ": Δᐃ++,
		"ⵠᐃⲆⵠⲆⵠⲆⵠᐃ": Δᐃ++,
		"ⵠⵠⲆⲆΔ": Δᐃ++,
		"ⲆⵠΔⵠⲆᐃΔ": Δᐃ++,
		"ⵠⲆΔΔΔᐃΔ": Δᐃ++,
		"ⲆᐃⲆᐃⵠⲆΔⵠΔ": Δᐃ++,
		"ᐃⲆⵠᐃⵠ": Δᐃ++,
		"ᐃⵠΔᐃᐃ": Δᐃ++,
		"ΔᐃⲆΔⲆΔⲆ": Δᐃ++,
		"ΔΔᐃᐃΔΔⲆ": Δᐃ++,
		"ⲆⲆⲆᐃⲆⵠⲆ": Δᐃ++,
		"ⵠⵠⵠⲆⲆⵠᐃ": Δᐃ++,
		"ᐃᐃΔⵠΔᐃⲆ": Δᐃ++,
		"ᐃᐃᐃⲆᐃᐃᐃ": Δᐃ++,
		"ⵠᐃⵠΔⲆᐃΔ": Δᐃ++,
		"ᐃΔΔⵠⲆᐃⵠ": Δᐃ++,
		"ᐃΔᐃΔᐃΔⲆ": Δᐃ++,
		"ΔΔᐃᐃᐃⵠⵠ": Δᐃ++,
		"ΔᐃⲆΔᐃΔⲆ": Δᐃ++,
		"ⵠΔᐃᐃⲆᐃⲆ": Δᐃ++,
		"ᐃⵠᐃᐃΔΔΔ": Δᐃ++,
		"ᐃⲆⲆⲆⲆⵠᐃ": Δᐃ++,
		"ⵠⵠᐃᐃⲆᐃⲆ": Δᐃ++,
		"ᐃⲆⵠᐃᐃⲆⲆ": Δᐃ++,
		"ⵠⵠΔΔⵠᐃⲆ": Δᐃ++,
		"ⲆᐃΔⵠⲆΔΔ": Δᐃ++,
		"ⵠⵠⵠΔᐃⵠⲆ": Δᐃ++,
		"ᐃⲆⲆⵠⵠⵠᐃ": Δᐃ++,
		"ᐃⵠᐃⵠⵠΔᐃ": Δᐃ++,
		"ⲆⵠⵠⲆΔⵠΔ": Δᐃ++,
		"ᐃⵠⲆⵠᐃⵠⲆ": Δᐃ++,
		"ΔΔᐃΔⵠΔⲆ": Δᐃ++,
		"ⵠⲆⲆⲆⵠⵠⲆ": Δᐃ++,
		"ᐃᐃΔⵠΔᐃΔ": Δᐃ++,
		"ⵠⵠΔⵠⲆⵠⵠ": Δᐃ++,
		"ᐃⵠⲆΔⵠΔᐃ": Δᐃ++,
		"ⲆᐃⲆⵠⵠᐃⵠ": Δᐃ++,
		"ⵠⵠⲆΔᐃΔᐃ": Δᐃ++,
		"ᐃᐃⲆⵠΔⲆΔ": Δᐃ++,
		"ⲆΔⲆᐃᐃⲆΔ": Δᐃ++,
		"ΔⵠᐃΔⲆΔᐃ": Δᐃ++,
		"ⵠⵠΔⵠᐃⵠΔ": Δᐃ++,
		"ⲆⵠⵠⵠⵠⵠⲆ": Δᐃ++,
		"ᐃⵠⲆⲆⵠⵠⲆ": Δᐃ++,
		"ⵠⲆΔⵠⵠⲆⵠ": Δᐃ++,
		"ⲆⵠⲆΔᐃⲆᐃ": Δᐃ++,
		"ⲆⲆΔⵠⵠⵠⵠ": Δᐃ++,
		"ⲆⲆΔᐃΔᐃᐃ": Δᐃ++,
		"ⵠⵠⲆⵠΔⵠΔ": Δᐃ++,
		"ⲆΔⵠⲆⵠΔΔ": Δᐃ++,
		"ΔΔⵠⵠᐃⲆⵠ": Δᐃ++,
		"ᐃᐃⵠᐃⵠⲆᐃ": Δᐃ++,
		"ⲆⵠⲆⵠᐃⲆΔ": Δᐃ++,
		"ⵠΔⵠⵠᐃⲆΔ": Δᐃ++,
		"ᐃⵠⵠΔⲆᐃΔ": Δᐃ++,
		"ᐃᐃⵠΔⲆⵠΔ": Δᐃ++,
		"ᐃΔⲆΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔⲆⵠⲆᐃΔ": Δᐃ++,
		"ΔΔⲆⵠⵠᐃⵠ": Δᐃ++,
		"ᐃⵠⵠΔΔⵠⲆ": Δᐃ++,
		"ⵠΔΔᐃⵠⲆΔ": Δᐃ++,
		"ⵠΔⵠⵠΔΔⲆ": Δᐃ++,
		"ⵠⵠΔⵠⲆⲆⵠ": Δᐃ++,
		"ᐃΔᐃᐃΔᐃⲆ": Δᐃ++,
		"ⵠⵠᐃᐃⲆᐃⲆ": Δᐃ++,
		"Δⵠⵠⵠⵠᐃⵠ": Δᐃ++,
		"ⲆᐃⲆⵠⵠΔⲆ": Δᐃ++,
		"ᐃΔΔⵠΔⵠⵠ": Δᐃ++,
		"ⵠᐃΔⵠⵠⲆΔ": Δᐃ++,
		"ⲆⲆⲆΔΔⲆⲆ": Δᐃ++,
		"ΔᐃⵠⵠⲆⲆⲆ": Δᐃ++,
		"ᐃΔᐃΔΔⲆᐃ": Δᐃ++,
		"ΔΔⲆΔᐃᐃᐃ": Δᐃ++,
		"ⵠΔΔⲆⲆⵠᐃ": Δᐃ++,
		"ⲆᐃΔᐃⵠᐃⵠ": Δᐃ++,
		"ΔΔᐃΔᐃΔⵠ": Δᐃ++,
		"ᐃⲆⵠΔⲆᐃⲆ": Δᐃ++,
		"ᐃΔⵠΔΔᐃⲆ": Δᐃ++,
		"ΔΔᐃⵠⵠⲆᐃ": Δᐃ++,
		"ᐃⵠΔΔⵠΔⲆ": Δᐃ++,
		"ᐃΔⵠΔⵠΔΔ": Δᐃ++,
		"ᐃΔΔⵠⵠⲆⵠ": Δᐃ++,
		"ΔΔᐃᐃⵠΔΔ": Δᐃ++,
		"ΔⲆⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠᐃⲆΔⵠΔⵠ": Δᐃ++,
		"ΔᐃⵠΔⵠᐃⵠ": Δᐃ++,
		"ⵠᐃΔⲆⲆΔΔ": Δᐃ++,
		"ΔⲆΔⲆΔⵠᐃ": Δᐃ++,
		"ᐃΔΔΔΔⵠΔ": Δᐃ++,
		"ΔⲆⲆΔᐃⵠⵠ": Δᐃ++,
		"ⲆᐃᐃⵠⲆΔΔ": Δᐃ++,
		"ⵠᐃⲆᐃⲆⲆΔ": Δᐃ++,
		"ΔᐃΔⵠⵠⲆΔ": Δᐃ++,
		"ΔⵠΔⲆᐃⵠⵠ": Δᐃ++,
		"ᐃⵠⵠⲆΔⲆⲆ": Δᐃ++,
		"ᐃᐃΔΔⲆⲆᐃ": Δᐃ++,
		"ⲆⲆΔᐃᐃᐃΔᐃⵠ": Δᐃ++,
		"ΔⵠⵠⲆΔⵠᐃ": Δᐃ++,
		"ⲆΔⲆΔⲆΔΔ": Δᐃ++,
		"ᐃⲆΔⲆᐃⲆΔ": Δᐃ++,
		"ᐃⲆᐃⲆⵠⲆⲆ": Δᐃ++,
		"ⲆⲆᐃΔΔⲆΔⵠΔ": Δᐃ++,
		POINTS: Δᐃ++,
		"ⲆⲆΔᐃᐃΔΔ": Δᐃ++,
		"ⲆΔⵠΔᐃᐃⲆ": Δᐃ++,
		"ᐃⲆⲆⵠᐃⲆΔ": Δᐃ++,
		"ᐃᐃⵠᐃΔᐃⵠ": Δᐃ++,
		"ⵠⵠᐃⲆΔⲆΔ": Δᐃ++,
		"ⲆᐃᐃⲆΔⵠⲆ": Δᐃ++,
		"ΔΔᐃᐃⲆⲆⵠ": Δᐃ++,
		"ⲆⵠᐃⵠΔⵠΔ": Δᐃ++,
		"ᐃⵠᐃⲆⲆⵠᐃ": Δᐃ++,
		"ΔᐃⲆⲆⲆᐃⵠ": Δᐃ++,
		"ⲆΔⲆᐃⲆΔᐃ": Δᐃ++,
		"ⲆⵠⵠᐃⲆⲆΔ": Δᐃ++,
		"ᐃⲆⵠᐃⵠⲆᐃ": Δᐃ++,
		"ⲆⵠΔⲆᐃᐃᐃ": Δᐃ++,
		"ⲆΔⲆⵠⵠᐃⲆ": Δᐃ++,
		"ⲆᐃⵠⵠᐃⵠΔ": Δᐃ++,
		"ⵠΔⲆⵠⵠᐃΔ": Δᐃ++,
		"ⵠⵠⵠΔⲆᐃⲆ": Δᐃ++,
		"ᐃⵠⲆΔΔⵠⲆ": Δᐃ++,
		"ΔⵠΔⲆⵠⲆⲆ": Δᐃ++,
		"ⵠΔᐃΔⵠᐃⵠ": Δᐃ++,
		"ⵠᐃⵠⲆⵠΔⲆ": Δᐃ++,
		"ΔᐃΔᐃΔᐃΔ": Δᐃ++,
		"ⵠⵠᐃⵠᐃⵠⲆ": Δᐃ++,
		"ⲆⲆⲆΔⵠⲆⵠ": Δᐃ++,
		"ⲆⵠⲆᐃᐃᐃⲆ": Δᐃ++,
		"ⵠⵠⲆⲆⲆⵠⵠ": Δᐃ++,
		"ᐃΔⲆⲆᐃᐃⵠ": Δᐃ++,
		"ᐃᐃΔⲆⲆΔⵠ": Δᐃ++,
		"ᐃΔΔᐃⲆⲆᐃ": Δᐃ++,
		"ΔΔⲆⵠΔⲆⵠ": Δᐃ++,
		"ΔΔⵠⵠⵠΔᐃ": Δᐃ++,
		"ⲆΔΔΔᐃⲆⲆ": Δᐃ++,
		"ⵠⲆⵠⲆΔⵠΔ": Δᐃ++,
		"ᐃᐃⲆΔⲆᐃΔ": Δᐃ++,
		"ⵠΔᐃⵠΔᐃⵠ": Δᐃ++,
		"ΔΔᐃⲆᐃⵠᐃ": Δᐃ++,
		"ΔⵠᐃⲆⵠᐃΔ": Δᐃ++,
		"ᐃⲆⲆΔⲆⲆᐃ": Δᐃ++,
		"ⲆΔᐃᐃᐃⲆΔ": Δᐃ++,
		"ⵠⲆⵠⲆΔⲆⵠ": Δᐃ++,
		"ⲆᐃᐃᐃⲆⵠᐃ": Δᐃ++,
		"ⲆⲆⵠⵠⲆⵠᐃ": Δᐃ++,
		"Δᐃⵠⵠⵠᐃᐃ": Δᐃ++,
		"ⵠᐃΔⵠᐃⵠΔ": Δᐃ++,
		"ᐃΔⲆⵠⲆᐃⵠ": Δᐃ++,
		"ᐃⲆΔΔⵠⲆⲆ": Δᐃ++,
		"ⲆᐃⲆⲆⵠⵠΔⲆᐃ": Δᐃ++,
		"ΔΔⲆⵠΔΔᐃ": Δᐃ++,
		"ⲆⵠᐃᐃⵠΔᐃΔᐃ": Δᐃ++,
		"ⲆⵠⲆᐃⲆᐃΔ": Δᐃ++,
		"ⲆᐃᐃⲆΔΔⲆⵠⵠ": Δᐃ++,
		"ⵠΔᐃⲆⵠΔΔᐃⵠ": Δᐃ++,
		"ⲆⵠⲆΔΔΔⵠⲆⲆ": Δᐃ++,
		"ⵠⲆⲆᐃⲆΔᐃⲆⲆ": Δᐃ++,
		"ⵠⲆⵠᐃᐃᐃⲆΔᐃ": Δᐃ++,
		"ΔᐃⵠΔⲆΔⲆ": Δᐃ++,
		"ᐃΔΔⵠⲆ": Δᐃ++,
		"ΔᐃᐃᐃⵠᐃⲆ": Δᐃ++,
		"ΔⲆᐃⵠᐃⵠΔ": Δᐃ++,
		"ⲆΔᐃᐃΔᐃⲆ": Δᐃ++,
		"ⵠΔΔⵠⲆⲆⲆⵠⲆ": Δᐃ++,
		"ᐃΔⵠⲆⵠⲆᐃ": Δᐃ++,
		"ⲆᐃⲆΔⵠΔΔ": Δᐃ++,
		"ΔⲆΔⲆⵠᐃⲆ": Δᐃ++,
		"ᐃΔᐃⵠΔΔⲆ": Δᐃ++,
		"ⵠⲆⲆⲆⵠᐃⵠ": Δᐃ++,
		"ⲆⵠΔⲆⲆᐃΔ": Δᐃ++,
		"ᐃᐃⲆΔⲆᐃᐃ": Δᐃ++,
		"ΔᐃⲆᐃΔⲆⵠ": Δᐃ++,
		"ᐃᐃⲆⵠᐃⵠⲆ": Δᐃ++,
		"ΔΔⲆⵠⲆΔΔ": Δᐃ++,
		"ⵠⲆⵠⵠᐃᐃᐃ": Δᐃ++,
		"ⲆⲆⲆⲆⵠ": Δᐃ++,
		"ΔΔᐃⲆⵠ": Δᐃ++,
		"ΔⵠⲆᐃΔ": Δᐃ++,
		"ΔΔⵠΔΔⲆΔᐃⲆ": Δᐃ++,
		"ᐃⵠᐃᐃΔᐃᐃ": Δᐃ++,
		"ⵠᐃᐃⲆⲆΔⵠ": Δᐃ++,
		"ᐃᐃⵠΔⵠᐃⵠ": Δᐃ++,
		"ⵠⲆΔⵠⲆᐃⵠ": Δᐃ++,
		"ⵠᐃᐃᐃᐃⵠⵠ": Δᐃ++,
		"ⵠᐃΔⵠⲆᐃᐃ": Δᐃ++,
		"ⲆΔⵠⲆᐃⲆᐃ": Δᐃ++,
		"ⲆΔᐃⲆⲆⲆⵠ": Δᐃ++,
		"ΔΔᐃⵠᐃᐃᐃ": Δᐃ++,
		"ᐃⵠᐃⵠⵠᐃⵠ": Δᐃ++,
		"ⲆΔΔⵠⵠⵠⵠ": Δᐃ++,
		"ⵠᐃⲆΔⲆΔⵠ": Δᐃ++,
		"ΔᐃⲆᐃᐃⲆⵠ": Δᐃ++,
		"ⲆᐃⲆⲆΔᐃᐃ": Δᐃ++,
		"ⵠΔⵠΔⲆ": Δᐃ++,
		"ΔⵠⵠΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔᐃᐃΔⲆᐃ": Δᐃ++,
		"ᐃΔⵠᐃⵠᐃⲆ": Δᐃ++,
		"ᐃⲆᐃⵠⲆⵠⲆ": Δᐃ++,
		"ᐃⲆⲆⲆⵠⵠⲆ": Δᐃ++,
		"ⲆⲆⲆΔᐃⵠᐃ": Δᐃ++,
		"ΔᐃᐃⲆⲆⵠⵠ": Δᐃ++,
		"ⵠᐃΔΔⵠΔⵠ": Δᐃ++,
		"ᐃᐃᐃⵠΔⵠⵠ": Δᐃ++,
		"ⵠᐃⵠⵠⵠⲆⵠ": Δᐃ++,
		"ⲆΔⲆΔⲆᐃΔ": Δᐃ++,
		"ᐃᐃⲆᐃᐃⵠΔ": Δᐃ++,
		"ΔᐃΔᐃⵠΔⵠ": Δᐃ++,
		"ᐃⵠᐃΔΔᐃᐃ": Δᐃ++,
		"ⵠⲆᐃⲆⵠΔΔ": Δᐃ++,
		"ΔⲆⲆΔⵠΔΔ": Δᐃ++,
		"ⵠΔⲆⲆⵠⲆⲆ": Δᐃ++,
		"ᐃⵠΔⵠᐃΔᐃ": Δᐃ++,
		"ⵠΔⵠᐃⵠᐃᐃ": Δᐃ++,
		"ⵠⵠⲆΔΔᐃⵠ": Δᐃ++,
		"ⲆᐃᐃⵠΔⲆⵠ": Δᐃ++,
		"ᐃⲆᐃΔⵠⲆΔ": Δᐃ++,
		"ΔᐃΔᐃⲆᐃⵠ": Δᐃ++,
		"ⲆᐃᐃⵠⲆᐃᐃ": Δᐃ++,
		"ⵠΔⲆⵠⵠΔΔ": Δᐃ++,
		"ⵠᐃΔⲆⲆⲆⵠ": Δᐃ++,
		"ⲆΔⲆⵠⵠᐃᐃ": Δᐃ++,
		"ΔΔⲆⲆᐃⲆΔ": Δᐃ++,
		"ᐃΔⲆᐃⲆᐃΔ": Δᐃ++,
		"ΔⵠⵠⵠⵠᐃⲆ": Δᐃ++,
		"ⵠⵠᐃⲆΔᐃᐃ": Δᐃ++,
		"ⵠᐃΔᐃⵠⲆⵠ": Δᐃ++,
		"ᐃⲆΔᐃⲆⲆΔ": Δᐃ++,
		"ⵠΔⵠᐃᐃⵠΔ": Δᐃ++,
		"ΔΔᐃⵠᐃΔᐃ": Δᐃ++,
		"ΔⵠΔΔⵠ": Δᐃ++,
		"ⲆⲆᐃΔⲆᐃΔ": Δᐃ++,
		"ⲆᐃⲆⵠⵠᐃⲆ": Δᐃ++,
		"ⵠⵠᐃΔⲆ": Δᐃ++,
		"ᐃⲆΔᐃᐃΔⵠⲆⲆ": Δᐃ++,
		"ΔⵠᐃⲆⲆΔᐃ": Δᐃ++,
		"ΔⵠΔΔΔ": Δᐃ++,
		"ⵠⵠΔΔⵠⲆⲆ": Δᐃ++,
		"ⵠⲆᐃᐃⲆⵠᐃ": Δᐃ++,
		"ΔⵠⵠⵠⵠΔⲆ": Δᐃ++,
		"ᐃΔᐃΔΔᐃᐃ": Δᐃ++,
		"ᐃⵠⵠⲆᐃΔⵠ": Δᐃ++,
		"ⲆⵠⲆⵠⵠⲆᐃ": Δᐃ++,
		"ⵠΔⵠᐃᐃⵠⲆ": Δᐃ++,
		"ᐃΔᐃΔⲆΔΔ": Δᐃ++,
		"ΔⵠⵠⲆⲆⵠⵠ": Δᐃ++,
		"ᐃΔⲆⲆⲆⲆⵠ": Δᐃ++,
		"ⲆⲆΔᐃⵠΔΔ": Δᐃ++,
		"ⵠⲆⵠᐃΔ": Δᐃ++,
		"ᐃΔΔΔΔ": Δᐃ++,
		"ⲆⵠⲆⵠⵠ": Δᐃ++,
		"ⲆⲆⲆⲆⲆ": Δᐃ++,
		"ⵠⵠᐃⲆⵠ": Δᐃ++,
		"ⲆΔᐃΔⲆⲆΔ": Δᐃ++,
		"ΔⵠΔᐃᐃΔⵠ": Δᐃ++,
		"ⵠⲆΔᐃᐃΔⵠ": Δᐃ++,
		"ΔΔⲆΔΔᐃⵠ": Δᐃ++,
		"ΔᐃⲆΔⲆᐃⲆ": Δᐃ++,
		"ᐃᐃΔᐃΔⵠⵠ": Δᐃ++,
		"ΔΔᐃⵠⵠⲆⲆ": Δᐃ++,
		"ᐃᐃⵠⲆⲆⵠΔ": Δᐃ++,
		"ΔⵠⲆΔΔᐃⲆ": Δᐃ++,
		"ΔΔΔⲆᐃΔΔ": Δᐃ++,
		"ΔⵠᐃⲆⲆⲆⲆ": Δᐃ++,
		"ΔᐃⲆΔΔⵠΔ": Δᐃ++,
		"ᐃᐃΔΔᐃΔᐃ": Δᐃ++,
		"ᐃᐃⵠΔΔⵠΔ": Δᐃ++,
		"Ⲇᐃⵠᐃᐃⵠⵠ": Δᐃ++,
		"ⵠᐃⲆⵠᐃⲆⲆ": Δᐃ++,
		"ᐃΔᐃᐃΔⵠⵠ": Δᐃ++,
		"ᐃᐃΔΔᐃⲆΔ": Δᐃ++,
		"ΔⲆⵠⲆᐃⲆΔ": Δᐃ++,
		"ᐃΔⵠⲆᐃⵠᐃ": Δᐃ++,
		"ⵠᐃᐃⵠⵠⵠᐃ": Δᐃ++,
		"ⵠⵠΔⲆᐃⵠⲆ": Δᐃ++,
		"ᐃΔΔⵠⵠⵠΔ": Δᐃ++,
		"ⵠⵠΔⲆΔᐃΔ": Δᐃ++,
		"ΔᐃⵠⵠⲆᐃⵠ": Δᐃ++,
		"ᐃⵠⵠᐃᐃΔⲆⵠΔ": Δᐃ++,
		"ΔᐃᐃⵠⵠΔⲆ": Δᐃ++,
		"ΔⲆⵠΔΔⲆⵠ": Δᐃ++,
		"ᐃⵠⵠᐃⵠⲆΔ": Δᐃ++,
		"ⵠΔᐃᐃᐃⲆᐃ": Δᐃ++,
		"ΔⲆᐃⲆⲆⵠᐃ": Δᐃ++,
		"ΔᐃⲆⵠⲆᐃΔ": Δᐃ++,
		"ⲆⲆⵠΔᐃⲆⲆ": Δᐃ++,
		"ⵠΔⲆⲆᐃⲆΔ": Δᐃ++,
		"ΔᐃⵠΔΔⵠΔ": Δᐃ++,
		"ⲆⲆΔⲆⵠⵠⲆ": Δᐃ++,
		"ΔᐃΔⵠⵠⲆⲆ": Δᐃ++,
		"ⲆᐃᐃⲆᐃᐃΔ": Δᐃ++,
		"ⲆⲆΔΔⵠᐃΔ": Δᐃ++,
		"ⵠΔⲆⲆⲆⵠΔ": Δᐃ++,
		"ΔᐃⵠΔΔⵠⲆ": Δᐃ++,
		"ⲆⲆΔΔⵠᐃⲆ": Δᐃ++,
		"ᐃᐃΔΔΔᐃⵠ": Δᐃ++,
		"ⲆⲆΔΔⲆᐃⲆ": Δᐃ++,
		"ΔⲆΔᐃΔᐃⲆ": Δᐃ++,
		"ΔⲆⲆᐃⲆⵠΔ": Δᐃ++,
		"ΔᐃⵠᐃΔⵠᐃ": Δᐃ++,
		"ΔⲆΔⲆΔⲆΔ": Δᐃ++,
		"ⵠⵠⲆⲆⵠⲆΔ": Δᐃ++,
		"ᐃⲆᐃⵠΔᐃⵠ": Δᐃ++,
		"ΔΔᐃΔΔΔⲆ": Δᐃ++,
		"ⲆᐃⲆⲆⵠⵠᐃ": Δᐃ++,
		"ΔᐃᐃⵠⵠΔΔ": Δᐃ++,
		"ᐃⵠⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠΔᐃᐃⲆⵠⵠ": Δᐃ++,
		"ⲆⵠⵠΔᐃⲆⲆ": Δᐃ++,
		"ⵠⲆⲆⵠΔⲆΔ": Δᐃ++,
		"ⲆᐃⲆⲆⵠⵠⲆ": Δᐃ++,
		"ⵠᐃⲆΔⲆᐃᐃ": Δᐃ++,
		"ΔⵠΔΔΔᐃⲆ": Δᐃ++,
		"ⵠᐃⵠⲆΔⵠΔ": Δᐃ++,
		"ⲆΔⵠΔⵠᐃⲆ": Δᐃ++,
		"ⵠᐃⲆΔⵠᐃⲆ": Δᐃ++,
		"ⲆᐃᐃⵠᐃⲆⲆ": Δᐃ++,
		"ⵠⲆⲆⲆⲆΔⲆ": Δᐃ++,
		"ⲆᐃᐃᐃⵠΔᐃ": Δᐃ++,
		"ᐃⲆⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠⲆΔᐃᐃⲆΔ": Δᐃ++,
		"ᐃⵠⵠΔⵠⵠΔ": Δᐃ++,
		"ΔⵠᐃⲆⲆⲆᐃ": Δᐃ++,
		"ΔⲆⵠⲆΔⲆⵠ": Δᐃ++,
		"ΔΔᐃⵠⲆΔⵠ": Δᐃ++,
		"ⵠΔⲆΔⲆⵠⵠ": Δᐃ++,
		"ΔᐃᐃᐃᐃⲆⲆ": Δᐃ++,
		"ΔΔⵠᐃⵠⲆⲆ": Δᐃ++,
		"ⲆΔⵠⵠⲆᐃⵠ": Δᐃ++,
		"ⲆⲆᐃⲆⵠᐃⵠ": Δᐃ++,
		"ΔΔᐃⲆⵠᐃΔ": Δᐃ++,
		"ᐃⵠΔΔⵠⵠΔ": Δᐃ++,
		"ΔᐃᐃⲆᐃⲆⵠ": Δᐃ++,
		"ⲆⲆΔⲆᐃⵠᐃ": Δᐃ++,
		"ᐃᐃⵠᐃΔⵠⵠ": Δᐃ++,
		"ΔⲆⲆⲆΔΔᐃ": Δᐃ++,
		"ⵠⵠᐃⲆΔΔⲆ": Δᐃ++,
		"ᐃⵠΔⲆΔⲆᐃ": Δᐃ++,
		"ᐃᐃᐃⵠⲆᐃⵠ": Δᐃ++,
		"ⵠⲆΔΔⵠΔΔ": Δᐃ++,
		"ⲆᐃⵠⵠΔᐃⲆ": Δᐃ++,
		"ΔΔΔⲆⵠⲆⵠ": Δᐃ++,
		"ⵠⲆⵠΔᐃΔⵠ": Δᐃ++,
		"ΔΔⲆⲆⲆⲆΔ": Δᐃ++,
		"ΔⵠΔᐃᐃᐃⵠ": Δᐃ++,
		"ΔᐃᐃΔⵠΔᐃ": Δᐃ++,
		"ᐃⵠⲆⵠᐃΔᐃ": Δᐃ++,
		"ⵠΔⵠⵠᐃᐃⲆ": Δᐃ++,
		"ⵠᐃⵠᐃⵠᐃⵠ": Δᐃ++,
		"ᐃΔⲆᐃΔⵠⵠ": Δᐃ++,
		"ⵠⵠⵠᐃᐃ": Δᐃ++,
		"ΔⵠⲆⲆΔⵠᐃ": Δᐃ++,
		"ⲆᐃⵠᐃᐃⵠΔ": Δᐃ++,
		"ⵠⲆΔᐃᐃ": Δᐃ++,
		"ΔΔᐃⲆⵠⵠᐃ": Δᐃ++,
		"ⵠⵠᐃⲆᐃⵠΔ": Δᐃ++,
		"ᐃⵠⵠⵠⵠΔⵠ": Δᐃ++,
		"ⲆΔⲆΔΔⵠᐃ": Δᐃ++,
		"ΔᐃⵠⵠΔΔᐃ": Δᐃ++,
		"ΔᐃΔⲆⵠ": Δᐃ++,
		"ⵠΔⵠⵠⵠΔⵠ": Δᐃ++,
		"ΔⵠᐃΔⵠⲆⲆⲆΔ": Δᐃ++,
		"ΔⲆⵠΔⵠᐃᐃⵠⵠ": Δᐃ++,
		"ⲆⲆᐃΔᐃᐃᐃᐃⵠ": Δᐃ++,
		"ⵠⵠⵠⵠⲆΔΔⲆᐃ": Δᐃ++,
		"ⵠᐃᐃᐃⲆⵠΔ": Δᐃ++,
		"ΔΔⵠⵠᐃΔⲆ": Δᐃ++,
		"ᐃⵠΔⵠΔΔⲆ": Δᐃ++,
		"ⲆᐃⵠⲆⵠⵠⲆ": Δᐃ++,
		"ᐃᐃⵠΔΔⲆⵠ": Δᐃ++,
		"ⲆⲆⲆⲆⵠᐃᐃ": Δᐃ++,
		"ᐃⵠⵠᐃⲆⲆⵠ": Δᐃ++,
		"ᐃⲆⵠᐃᐃᐃⵠ": Δᐃ++,
		"ΔᐃᐃⵠⵠⲆⵠ": Δᐃ++,
		"ΔᐃⵠᐃⲆⲆᐃ": Δᐃ++,
		"ⲆⲆⲆᐃΔ": Δᐃ++,
		"ⵠⵠᐃⵠΔ": Δᐃ++,
		"ᐃᐃⲆⵠⲆⵠⲆ": Δᐃ++,
		"ⵠⲆΔΔᐃⵠⵠ": Δᐃ++,
		"ⲆΔⲆⵠᐃᐃᐃ": Δᐃ++,
		"ΔⵠᐃⲆⲆⲆΔ": Δᐃ++,
		"ⵠⲆⵠⵠⵠᐃᐃ": Δᐃ++,
		"ΔᐃΔⵠᐃᐃΔ": Δᐃ++,
		"ⲆΔⲆᐃⲆᐃⵠ": Δᐃ++,
		"ᐃⲆⲆⲆⲆΔᐃ": Δᐃ++,
		"ΔⵠⲆⲆⵠⲆⲆ": Δᐃ++,
		"ⲆⲆΔⵠⲆⲆΔ": Δᐃ++,
		"ΔᐃⵠⲆⲆⲆⲆ": Δᐃ++,
		"ᐃⵠᐃⵠᐃⲆⲆ": Δᐃ++,
		"ⲆΔⵠⲆᐃⲆⵠΔΔ": Δᐃ++,
		"ⲆⲆⲆⲆⵠⵠⵠᐃΔ": Δᐃ++,
		"ᐃΔᐃΔⲆΔⲆ": Δᐃ++,
		"ᐃΔⵠⵠⵠᐃⲆ": Δᐃ++,
		"ΔⲆᐃⲆⲆΔᐃ": Δᐃ++,
		"ΔᐃⵠΔΔᐃⲆ": Δᐃ++,
		"ΔⲆⵠᐃΔᐃⵠ": Δᐃ++,
		"ⵠΔᐃⲆΔᐃⲆ": Δᐃ++,
		"ΔᐃᐃⵠΔᐃΔ": Δᐃ++,
		"ΔᐃᐃⲆⵠⲆΔ": Δᐃ++,
		"ⵠⵠⲆⲆΔⲆⵠ": Δᐃ++,
		"ⵠⵠⲆⵠΔⵠⵠ": Δᐃ++,
		"ⲆⲆⵠᐃⲆΔⲆ": Δᐃ++,
		"ⲆⵠⲆΔᐃΔΔ": Δᐃ++,
		"ⲆⵠⲆΔᐃⵠⲆ": Δᐃ++,
		"ⲆⲆΔᐃⲆⲆⵠ": Δᐃ++,
		"ΔⵠᐃⵠⲆⵠᐃ": Δᐃ++,
		"Δⵠᐃᐃⵠᐃᐃ": Δᐃ++,
		"ⲆᐃⵠⲆⲆⵠΔ": Δᐃ++,
		"ΔⲆⵠⵠΔⵠᐃ": Δᐃ++,
		"ⵠΔΔⲆΔⲆᐃᐃⵠ": Δᐃ++,
		"ᐃⵠᐃΔᐃΔΔ": Δᐃ++,
		"ⲆⲆΔⵠᐃ": Δᐃ++,
		"ᐃΔⵠΔⲆᐃⲆΔⵠ": Δᐃ++,
		"ᐃⲆⲆᐃΔΔⲆᐃⲆ": Δᐃ++,
		"ΔᐃᐃⵠΔΔᐃΔᐃ": Δᐃ++,
		"ⵠⲆⲆΔΔⵠⵠⲆⲆ": Δᐃ++,
		"ΔΔⲆᐃΔⲆΔ": Δᐃ++,
		"ⲆⲆΔᐃⲆᐃⵠ": Δᐃ++,
		"ⵠᐃΔⲆΔⲆΔ": Δᐃ++,
		"ᐃᐃᐃⵠΔⲆΔ": Δᐃ++,
		"ⲆⵠⲆⵠΔⲆⲆ": Δᐃ++,
		"ⲆΔⲆⵠΔⵠⲆⲆΔ": Δᐃ++,
		"ΔⲆᐃⲆᐃᐃΔ": Δᐃ++,
		"ⲆΔΔᐃⲆᐃⲆ": Δᐃ++,
		"ΔⵠⲆᐃᐃⵠᐃ": Δᐃ++,
		"ΔΔⲆᐃⵠᐃⵠ": Δᐃ++,
		"ᐃⲆΔΔΔⲆΔ": Δᐃ++,
		"ⵠⲆⲆⲆᐃⵠΔ": Δᐃ++,
		"ΔⲆⵠᐃⵠΔⲆ": Δᐃ++,
		"ΔⲆΔⵠⲆ": Δᐃ++,
		"ᐃⵠᐃⲆⵠⵠⲆΔⲆ": Δᐃ++,
		"ᐃⲆⵠⵠΔⲆᐃ": Δᐃ++,
		"ᐃΔⵠΔⵠᐃᐃ": Δᐃ++,
		"ΔⵠⵠⵠᐃᐃΔ": Δᐃ++,
		"ᐃΔΔᐃᐃⵠⲆ": Δᐃ++,
		"ⵠΔΔΔᐃᐃⵠ": Δᐃ++,
		"ⲆⵠᐃⲆⲆⲆⲆ": Δᐃ++,
		"ⵠΔΔᐃⲆΔⲆ": Δᐃ++,
		"ΔⵠΔᐃⵠⲆᐃ": Δᐃ++,
		"ⵠⵠΔⲆⵠⵠΔ": Δᐃ++,
		"ⵠᐃⲆᐃⵠⵠᐃ": Δᐃ++,
		"ⲆⲆⲆᐃΔΔΔ": Δᐃ++,
		"ⲆⵠⲆⵠΔΔΔ": Δᐃ++,
		"ΔᐃⵠᐃΔᐃᐃ": Δᐃ++,
		"ᐃᐃⵠᐃᐃ": Δᐃ++,
		"ⲆⲆᐃᐃΔⵠΔ": Δᐃ++,
		"ΔΔΔΔⵠⲆⵠ": Δᐃ++,
		"ᐃᐃⲆⵠΔⲆⵠ": Δᐃ++,
		"ΔᐃΔᐃΔΔⲆ": Δᐃ++,
		"ⵠᐃⵠᐃⲆⲆⵠ": Δᐃ++,
		"ᐃⵠⲆᐃⵠⲆⵠ": Δᐃ++,
		"Ⲇⵠᐃᐃᐃⵠⵠ": Δᐃ++,
		"ΔⲆᐃⵠᐃⵠᐃ": Δᐃ++,
		"ⲆⲆᐃΔⵠΔⵠ": Δᐃ++,
		"ᐃᐃᐃᐃᐃᐃΔ": Δᐃ++,
		"ΔᐃⵠⲆⲆⵠΔ": Δᐃ++,
		"ᐃᐃⲆⲆΔⵠᐃ": Δᐃ++,
		"ᐃᐃⵠⲆΔΔⵠ": Δᐃ++,
		"ⵠⲆᐃΔΔΔᐃ": Δᐃ++,
		"ⲆⵠΔⵠⲆⵠΔ": Δᐃ++,
		"ⲆᐃⲆΔΔⲆΔ": Δᐃ++,
		"ⲆᐃᐃᐃΔⵠΔ": Δᐃ++,
		"ⲆᐃⵠⲆⵠΔᐃ": Δᐃ++,
		"ⲆΔⵠⲆⲆⲆⲆ": Δᐃ++,
		"ⲆⲆⲆⵠⵠΔⲆ": Δᐃ++,
		"ΔᐃⵠᐃⲆΔᐃ": Δᐃ++,
		"ⵠⲆᐃⲆΔⲆⲆ": Δᐃ++,
		"ⵠⲆⵠᐃⵠⵠΔ": Δᐃ++,
		"ΔᐃᐃⵠΔᐃⲆ": Δᐃ++,
		"ΔᐃᐃᐃⲆⵠΔ": Δᐃ++,
		"ᐃⲆⵠⵠⲆΔᐃ": Δᐃ++,
		"ⲆⲆⲆⲆⲆΔᐃΔᐃ": Δᐃ++,
		"ᐃⲆⲆⲆⲆᐃΔⵠᐃ": Δᐃ++,
		"ΔΔΔᐃΔΔⵠΔⲆ": Δᐃ++,
		"ᐃᐃⵠΔΔΔⲆⵠⵠ": Δᐃ++,
		"ⵠᐃᐃⵠⲆⲆᐃ": Δᐃ++,
		"ᐃᐃⵠᐃⲆᐃⲆ": Δᐃ++,
		"ⵠⲆⵠΔᐃ": Δᐃ++,
		"ΔⲆⲆΔᐃᐃⵠ": Δᐃ++,
		"ⲆΔⲆⲆΔᐃΔ": Δᐃ++,
		"ⵠⵠⵠᐃⲆⵠΔ": Δᐃ++,
		"ⵠⲆⵠᐃΔⵠΔ": Δᐃ++,
		"ⲆᐃⲆⲆⲆᐃⲆ": Δᐃ++,
		"ΔⲆΔⲆⵠⲆᐃ": Δᐃ++,
		"ᐃΔⲆⵠⵠⵠⲆ": Δᐃ++,
		"ᐃΔⵠᐃⵠᐃΔ": Δᐃ++,
		"ΔⵠΔᐃΔᐃⵠ": Δᐃ++,
		"ⵠᐃⲆΔΔⵠⲆ": Δᐃ++,
		"ⵠⵠᐃⵠⲆΔⵠ": Δᐃ++,
		"Δⵠᐃⵠᐃⵠᐃ": Δᐃ++,
		"ⲆΔᐃᐃⲆⲆΔ": Δᐃ++,
		"ⵠⲆⵠⵠⵠⲆΔ": Δᐃ++,
		"ⵠⲆΔⲆΔΔⲆ": Δᐃ++,
		"ⲆᐃⲆⲆΔᐃⲆ": Δᐃ++,
		"ΔΔᐃⲆΔⵠΔ": Δᐃ++,
		"ᐃΔᐃⲆⲆⲆΔ": Δᐃ++,
		"ᐃᐃΔⵠⲆⲆᐃ": Δᐃ++,
		"ⲆΔⲆⲆⲆⲆᐃⵠⲆ": Δᐃ++,
		"ⵠᐃᐃᐃᐃ": Δᐃ++,
		"ⲆᐃᐃⵠΔΔᐃ": Δᐃ++,
		"ΔΔⵠⲆΔⲆᐃ": Δᐃ++,
		"ΔⲆⵠⲆᐃⵠᐃ": Δᐃ++,
		"ⵠᐃⵠⲆⲆⵠⵠ": Δᐃ++,
		"ⵠᐃⲆΔᐃⲆᐃ": Δᐃ++,
		"ⲆⵠⲆⵠⲆΔΔ": Δᐃ++,
		"ⵠⵠⲆᐃᐃΔⵠ": Δᐃ++,
		"ΔⲆⲆΔⲆΔΔ": Δᐃ++,
		"ⵠⵠᐃⲆᐃᐃΔ": Δᐃ++,
		"ΔⲆⵠΔⲆⲆⵠ": Δᐃ++,
		"ᐃΔⵠΔᐃΔΔ": Δᐃ++,
		"ⲆⲆΔⲆᐃⵠⵠ": Δᐃ++,
		"ⵠᐃᐃⲆⲆⵠΔ": Δᐃ++,
		"ᐃⵠᐃΔⵠⵠᐃ": Δᐃ++,
		"ⲆΔΔᐃⵠΔᐃ": Δᐃ++,
		"ⲆᐃⵠⵠᐃᐃΔ": Δᐃ++,
		"ⵠΔⵠΔΔᐃᐃ": Δᐃ++,
		"ᐃⵠⲆⵠΔⲆⲆ": Δᐃ++,
		"ΔΔᐃⲆΔⵠⵠ": Δᐃ++,
		"ΔⲆⵠᐃⵠᐃᐃ": Δᐃ++,
		"ᐃⵠⵠΔΔⲆⲆ": Δᐃ++,
		"ⲆᐃⵠⲆᐃⵠⲆ": Δᐃ++,
		"ΔᐃⵠⵠⵠΔΔⲆᐃ": Δᐃ++,
		"ⲆⲆⵠⵠⵠⵠᐃ": Δᐃ++,
		"ΔⵠⲆⲆⵠΔⵠ": Δᐃ++,
		"ⵠⵠΔᐃΔΔⲆ": Δᐃ++,
		"ᐃⲆⵠⲆⵠΔⲆ": Δᐃ++,
		"ⵠⵠΔᐃⵠᐃⵠ": Δᐃ++,
		"ⲆⵠⵠⲆⲆΔⵠ": Δᐃ++,
		"ⲆⵠⵠⲆΔΔⲆ": Δᐃ++,
		"ᐃΔⲆⲆⲆΔⲆ": Δᐃ++,
		"ΔᐃᐃⵠⲆⲆΔ": Δᐃ++,
		"ᐃⵠΔᐃΔⵠⲆ": Δᐃ++,
		"ΔⲆᐃⵠᐃΔᐃ": Δᐃ++,
		"ᐃⲆⵠⵠⵠⲆΔ": Δᐃ++,
		"ᐃⲆΔⲆⵠᐃⲆ": Δᐃ++,
		"ⲆⲆΔⲆⵠⵠᐃ": Δᐃ++,
		"ⵠᐃΔᐃᐃⵠΔ": Δᐃ++,
		"ⵠΔᐃⲆᐃᐃⲆ": Δᐃ++,
		"ᐃⲆⵠⵠⲆᐃⵠ": Δᐃ++,
		"ΔⵠΔΔⲆᐃΔ": Δᐃ++,
		"ᐃⲆᐃⵠᐃΔⵠ": Δᐃ++,
		"ⵠΔⵠᐃⵠⵠⲆ": Δᐃ++,
		"ⵠⵠΔᐃᐃᐃᐃ": Δᐃ++,
		"ΔΔΔᐃᐃΔᐃ": Δᐃ++,
		"ΔⵠⵠΔᐃΔᐃ": Δᐃ++,
		"ΔⵠΔΔᐃᐃᐃ": Δᐃ++,
		"ⲆΔⲆⵠᐃ": Δᐃ++,
		"ᐃᐃᐃᐃΔⵠΔ": Δᐃ++,
		"ᐃΔΔΔΔⵠⲆ": Δᐃ++,
		"ΔⲆᐃᐃΔᐃⵠ": Δᐃ++,
		"ᐃⵠΔⵠᐃⲆⲆ": Δᐃ++,
		"ⵠⲆᐃⲆⵠⵠⲆ": Δᐃ++,
		"ᐃⲆᐃⲆⵠᐃⲆ": Δᐃ++,
		"ⵠᐃΔⵠΔᐃΔ": Δᐃ++,
		"ⲆⲆΔᐃΔⵠΔ": Δᐃ++,
		"ⲆΔⲆⲆᐃΔⵠ": Δᐃ++,
		"ⲆⵠⵠᐃⵠⲆⲆ": Δᐃ++,
		"ΔⲆⲆⵠⵠⵠⲆ": Δᐃ++,
		"ⵠᐃΔᐃΔⲆΔ": Δᐃ++,
		"ᐃᐃᐃⵠᐃᐃⲆ": Δᐃ++,
		"ᐃΔⲆⵠⲆⵠⲆ": Δᐃ++,
		"ᐃΔΔᐃⵠᐃᐃ": Δᐃ++,
		"ⵠᐃⵠⲆΔΔⵠ": Δᐃ++,
		"ⵠⲆΔⲆΔⲆⵠ": Δᐃ++,
		"ⵠᐃᐃⵠΔⵠⵠ": Δᐃ++,
		"ᐃⵠⲆᐃⵠΔⵠ": Δᐃ++,
		"ⵠΔᐃⲆΔΔᐃ": Δᐃ++,
		"ΔⵠⲆᐃⲆⲆΔ": Δᐃ++,
		"ⵠᐃΔⲆΔⲆⲆ": Δᐃ++,
		"ⵠΔⲆΔΔΔⲆ": Δᐃ++,
		"ⲆⲆⲆᐃᐃⵠⵠ": Δᐃ++,
		"ᐃᐃᐃⲆⵠⲆᐃ": Δᐃ++,
		"ᐃⲆⲆⲆΔΔⵠ": Δᐃ++,
		"ΔⵠΔⵠⲆⲆᐃ": Δᐃ++,
		"ᐃⵠᐃⲆⵠⲆᐃ": Δᐃ++,
		"ΔⲆⵠⵠⵠⵠΔ": Δᐃ++,
		"ΔⲆᐃⲆΔⵠⲆ": Δᐃ++,
		"ᐃΔⵠᐃᐃᐃⵠ": Δᐃ++,
		"ᐃΔᐃⲆⵠⲆⲆ": Δᐃ++,
		"ΔᐃᐃΔⵠⵠⲆ": Δᐃ++,
		"ⲆᐃⵠⵠᐃⲆᐃ": Δᐃ++,
		"ⲆΔΔΔ": Δᐃ++,
		"ΔⵠⲆᐃ": Δᐃ++,
		"ⲆᐃⵠⲆΔΔⲆ": Δᐃ++,
		"ⲆΔⲆⵠΔᐃᐃ": Δᐃ++,
		"ⵠᐃᐃⲆⲆⵠᐃ": Δᐃ++,
		"ΔⲆᐃⲆⵠΔⲆ": Δᐃ++,
		"ⵠⵠⵠⲆⵠᐃⲆ": Δᐃ++,
		"ΔⵠⵠᐃΔΔΔ": Δᐃ++,
		"ⲆⵠⲆⲆΔΔⵠ": Δᐃ++,
		"ᐃⲆⲆⵠΔ": Δᐃ++,
		"ⵠⲆⵠΔⲆΔⵠ": Δᐃ++,
		"ᐃⲆᐃᐃⲆ": Δᐃ++,
		"ⵠⵠᐃⵠᐃΔᐃ": Δᐃ++,
		"ᐃᐃⵠΔⵠ": Δᐃ++,
		"ⵠΔΔΔⲆᐃⲆ": Δᐃ++,
		"ΔᐃⵠΔᐃ": Δᐃ++,
		"ⲆⲆⵠΔⲆᐃᐃ": Δᐃ++,
		"ᐃⲆΔⵠⲆ": Δᐃ++,
		"ᐃⲆΔᐃΔ": Δᐃ++,
		"ⵠⵠⲆᐃⲆᐃᐃ": Δᐃ++,
		"ⲆΔⵠΔⲆⲆΔ": Δᐃ++,
		"ᐃⵠΔⵠⵠᐃᐃ": Δᐃ++,
		"ⵠΔΔⲆⲆⲆⲆ": Δᐃ++,
		"ᐃΔᐃⵠᐃᐃⵠ": Δᐃ++,
		"ᐃᐃⵠΔⵠΔΔ": Δᐃ++,
		"ⲆᐃⲆⵠᐃΔᐃ": Δᐃ++,
		"ⲆᐃⵠΔΔᐃⲆ": Δᐃ++,
		"ⵠⵠⵠⲆΔᐃΔ": Δᐃ++,
		"ⵠⲆⲆΔΔ": Δᐃ++,
		"ⵠⲆⲆΔⲆΔΔ": Δᐃ++,
		"ᐃᐃⵠΔΔ": Δᐃ++,
		"ⲆⵠⲆⲆᐃⲆᐃ": Δᐃ++,
		"ΔⲆⲆⲆⵠⵠᐃ": Δᐃ++,
		"ΔΔᐃⵠᐃᐃΔ": Δᐃ++,
		"ᐃⵠᐃⵠᐃΔᐃ": Δᐃ++,
		"ᐃᐃᐃⲆⵠⵠΔ": Δᐃ++,
		"ᐃⲆⵠᐃᐃΔΔ": Δᐃ++,
		"ⵠⲆᐃΔⲆᐃⲆᐃᐃ": Δᐃ++,
		"ⵠⲆⵠⵠⲆⲆⵠ": Δᐃ++,
		"ⲆΔΔⲆⵠⵠⲆ": Δᐃ++,
		"ⲆΔΔΔΔᐃⵠⲆᐃ": Δᐃ++,
		"ᐃⲆⵠⵠΔⲆⵠ": Δᐃ++,
		"ⲆⲆⵠᐃⲆᐃⲆ": Δᐃ++,
		"ᐃΔⲆᐃΔΔⵠ": Δᐃ++,
		"ᐃⵠΔᐃⵠⵠᐃ": Δᐃ++,
		"ᐃⲆⲆⲆⲆ": Δᐃ++,
		"ᐃⲆᐃⲆⵠⵠⲆ": Δᐃ++,
		"ᐃⵠⵠⵠᐃᐃᐃ": Δᐃ++,
		"ΔⵠⲆⵠᐃᐃΔ": Δᐃ++,
		"ⵠⲆᐃⲆΔⲆΔ": Δᐃ++,
		"ⵠΔΔΔΔⲆΔ": Δᐃ++,
		"ⵠⲆᐃᐃⵠⵠΔ": Δᐃ++,
		"ᐃⲆⲆᐃᐃΔⲆ": Δᐃ++,
		"ΔⵠᐃᐃΔᐃᐃ": Δᐃ++,
		"ⵠⵠᐃΔⵠⵠⵠ": Δᐃ++,
		"ΔΔⵠⲆⲆΔᐃ": Δᐃ++,
		"ⵠⵠᐃⲆⲆᐃΔ": Δᐃ++,
		"ΔⵠⲆⲆⵠᐃᐃ": Δᐃ++,
		"ⵠⵠⵠΔᐃⲆⵠ": Δᐃ++,
		"ⲆΔᐃⲆⵠᐃᐃ": Δᐃ++,
		"ᐃⲆⲆᐃⲆ": Δᐃ++,
		"ⵠⲆⵠⵠᐃⵠΔ": Δᐃ++,
		"ⲆᐃⲆⵠᐃᐃᐃ": Δᐃ++,
		"ᐃⵠΔⵠΔⵠΔ": Δᐃ++,
		"ΔⵠⲆΔⵠΔⵠ": Δᐃ++,
		"ᐃⲆᐃᐃᐃⲆⲆ": Δᐃ++,
		"ⲆⲆᐃΔΔᐃᐃ": Δᐃ++,
		"ⵠΔΔⵠⲆΔᐃ": Δᐃ++,
		"ⲆⲆⵠΔᐃΔⵠ": Δᐃ++,
		"ᐃᐃᐃⵠΔᐃⵠ": Δᐃ++,
		"ᐃΔᐃΔᐃⲆΔ": Δᐃ++,
		"ᐃᐃⲆⲆΔⵠⵠ": Δᐃ++,
		"ⲆᐃᐃΔⵠΔΔ": Δᐃ++,
		"ᐃⲆΔⵠΔⲆⵠ": Δᐃ++,
		"ⲆⵠⵠΔΔᐃⵠ": Δᐃ++,
		"ΔᐃⲆⵠᐃ": Δᐃ++,
		"ΔⵠΔᐃⲆᐃᐃ": Δᐃ++,
		"ⵠⵠⵠΔⵠⲆⵠ": Δᐃ++,
		"ᐃΔⲆⵠⵠⵠⵠ": Δᐃ++,
		"ⲆΔⲆⵠᐃΔΔ": Δᐃ++,
		"ⵠⵠᐃⲆᐃⲆΔ": Δᐃ++,
		"ⵠΔᐃᐃⵠΔⲆ": Δᐃ++,
		"ⲆᐃᐃᐃᐃΔᐃ": Δᐃ++,
		"ᐃⲆᐃΔᐃΔΔ": Δᐃ++,
		"ⲆΔᐃᐃⲆⵠⲆ": Δᐃ++,
		"ΔᐃⲆⵠⲆⵠᐃ": Δᐃ++,
		"ⵠΔⵠΔⵠᐃΔ": Δᐃ++,
		"ᐃᐃᐃⵠΔᐃΔ": Δᐃ++,
		"ⲆⵠᐃΔΔΔⲆ": Δᐃ++,
		"ⵠΔᐃᐃⲆΔⵠ": Δᐃ++,
		"ⲆⵠᐃⲆᐃⲆΔ": Δᐃ++,
		"ⵠᐃᐃΔΔΔⲆ": Δᐃ++,
		"ⲆⵠΔⲆᐃⲆΔ": Δᐃ++,
		"ⵠⲆΔⲆᐃΔⲆ": Δᐃ++,
		"ⵠΔᐃⵠⲆⲆᐃ": Δᐃ++,
		"ⲆΔⵠΔⵠᐃᐃ": Δᐃ++,
		"Ⲇᐃᐃᐃᐃ": Δᐃ++,
		"ⵠⲆⲆⵠΔⲆᐃ": Δᐃ++,
		"ᐃⲆΔᐃΔΔᐃ": Δᐃ++,
		"ⵠᐃᐃⵠᐃⲆⲆ": Δᐃ++,
		"ᐃΔΔᐃⵠⲆⵠ": Δᐃ++,
		"ⵠⵠⵠⲆΔⵠⲆ": Δᐃ++,
		"ΔΔᐃΔⲆⲆᐃ": Δᐃ++,
		"ΔⲆΔⵠⲆⲆᐃ": Δᐃ++,
		"ⵠⲆⵠᐃⵠⲆⵠ": Δᐃ++,
		"ⲆⲆⵠᐃⵠⵠΔ": Δᐃ++,
		"ᐃⲆⵠᐃⵠⲆΔ": Δᐃ++,
		"ᐃΔⵠΔΔⵠⵠ": Δᐃ++,
		"ᐃΔΔᐃΔⵠᐃ": Δᐃ++,
		"ΔⲆⲆΔᐃⵠⲆ": Δᐃ++,
		"ᐃⲆΔⵠⲆⵠΔ": Δᐃ++,
		"ᐃⵠⵠⲆΔⲆᐃ": Δᐃ++,
		"ⵠⲆⲆᐃΔⲆΔ": Δᐃ++,
		"ⵠⵠⲆᐃᐃᐃⲆ": Δᐃ++,
		"ᐃᐃᐃᐃⲆΔⲆ": Δᐃ++,
		"ⲆⲆΔⵠⵠΔⲆ": Δᐃ++,
		"ⵠᐃⵠᐃΔΔᐃ": Δᐃ++,
		"ⵠⲆⲆⵠⵠΔΔ": Δᐃ++,
		"ⲆⵠⵠⵠᐃⵠΔ": Δᐃ++,
		"ᐃΔᐃⵠΔᐃΔ": Δᐃ++,
		"ⲆΔⲆᐃⲆᐃΔ": Δᐃ++,
		"ᐃⲆⲆⵠᐃΔⲆ": Δᐃ++,
		"ⲆⲆⵠⵠΔⲆⲆ": Δᐃ++,
		"ᐃⵠΔⲆⵠᐃᐃ": Δᐃ++,
		"ΔⵠᐃᐃΔⲆᐃ": Δᐃ++,
		"ΔᐃᐃᐃΔΔΔ": ["#E9CF96", "#144940"],
		"ⲆⵠΔⵠΔⲆⲆ": Δᐃ++,
		"ΔΔΔⵠⲆⵠᐃ": Δᐃ++,
		"ᐃⵠΔⲆᐃᐃᐃ": Δᐃ++,
		"ᐃⲆⵠΔΔⲆΔ": Δᐃ++,
		"ᐃⲆⵠⲆⵠⵠⵠ": Δᐃ++,
		"ⵠⲆⵠⵠΔΔⲆ": Δᐃ++,
		"ⵠΔᐃΔᐃΔΔ": Δᐃ++,
		"ⲆⵠΔΔᐃ": Δᐃ++,
		"ᐃΔᐃΔΔΔᐃ": Δᐃ++,
		"ᐃᐃΔΔⵠⲆⲆ": Δᐃ++,
		"ᐃΔΔⲆⲆΔⵠ": Δᐃ++,
		"ⲆⲆⲆⵠⲆΔⵠ": Δᐃ++,
		"ⲆᐃΔⲆⵠᐃΔ": Δᐃ++,
		"ⵠⲆΔⵠᐃⵠⵠ": Δᐃ++,
		"ΔΔᐃΔᐃⵠᐃ": Δᐃ++,
		"ΔᐃΔⵠⲆᐃⵠ": Δᐃ++,
		"ⵠᐃⵠΔⵠⲆΔ": Δᐃ++,
		"ⲆⲆᐃΔⲆⲆⲆ": Δᐃ++,
		"ⲆⲆⵠⵠᐃⲆᐃ": Δᐃ++,
		"ᐃΔⵠᐃᐃΔΔ": Δᐃ++,
		"ⲆⵠΔⵠᐃΔⵠ": Δᐃ++,
		"ΔⲆⲆⵠᐃᐃⲆ": Δᐃ++,
		"ΔΔⲆⵠᐃᐃΔ": Δᐃ++,
		"ᐃⲆΔⵠⵠⵠᐃ": Δᐃ++,
		"ᐃⲆⲆΔⲆᐃΔ": Δᐃ++,
		"ΔᐃⲆᐃⵠΔΔ": Δᐃ++,
		"ⲆⲆⲆⲆⲆᐃΔ": Δᐃ++,
		"ⵠⵠᐃᐃᐃΔⲆ": Δᐃ++,
		"ΔⲆⲆⲆΔΔⵠ": Δᐃ++,
		"ⲆᐃΔⵠΔᐃΔ": Δᐃ++,
		"ᐃΔⵠⵠᐃΔᐃ": Δᐃ++,
		"ΔΔΔⲆⲆⵠⵠ": Δᐃ++,
		"ΔΔᐃⲆΔΔΔ": Δᐃ++,
		"ⲆΔⲆΔΔⵠΔ": Δᐃ++,
		"ⲆΔΔⵠᐃⵠΔ": Δᐃ++,
		"ⲆⵠⲆΔⵠⵠΔ": Δᐃ++,
		"ⵠⵠⲆᐃⲆⵠᐃ": Δᐃ++,
		"Δⵠᐃⵠⵠⵠⵠ": Δᐃ++,
		"ΔΔⲆΔⲆⲆⵠ": Δᐃ++,
		"ⲆᐃᐃΔⲆⲆΔ": Δᐃ++,
		"ᐃⲆⲆᐃΔΔᐃ": Δᐃ++,
		"ᐃⲆᐃⲆⲆΔΔ": Δᐃ++,
		"ⵠⲆΔΔⲆⲆⲆ": Δᐃ++,
		"ⵠΔᐃΔΔᐃⲆ": Δᐃ++,
		"ΔⵠΔᐃⵠΔⲆ": Δᐃ++,
		"ⲆᐃΔΔᐃᐃⲆ": Δᐃ++,
		"ΔⲆᐃΔⵠΔᐃ": Δᐃ++,
		"ⵠΔΔᐃⵠⵠΔ": Δᐃ++,
		"ⵠⵠᐃΔⲆΔⲆ": Δᐃ++,
		"ΔᐃⲆⵠⵠΔⵠ": Δᐃ++,
		"ⲆⵠⵠΔⵠⵠⵠ": Δᐃ++,
		"ⵠΔΔⲆΔΔⲆ": Δᐃ++,
		"ⲆΔΔΔΔⲆᐃ": Δᐃ++,
		"ᐃᐃᐃᐃⲆⲆⵠ": Δᐃ++,
		"ΔΔΔΔⵠΔΔ": Δᐃ++,
		"ⲆᐃⵠΔⲆⵠⵠ": Δᐃ++,
		"ⵠΔⵠΔⵠⲆᐃ": Δᐃ++,
		"ⲆΔᐃⲆΔⵠᐃ": Δᐃ++,
		"ⲆΔΔⲆⲆⵠⵠ": Δᐃ++,
		"ⵠⵠⵠⲆⵠⲆΔ": Δᐃ++,
		"ⵠⵠΔᐃⵠᐃΔ": Δᐃ++,
		"ⲆⵠᐃⲆᐃⵠᐃ": Δᐃ++,
		"ⵠⲆΔⲆⲆᐃⲆ": Δᐃ++,
		"ⲆⲆⵠΔⵠⵠΔ": Δᐃ++,
		"ⵠΔⵠΔᐃᐃⵠ": Δᐃ++,
		"ⲆⵠⲆᐃΔΔᐃ": Δᐃ++,
		"ᐃΔⲆⲆΔⵠΔ": Δᐃ++,
		"ⲆΔΔᐃⵠᐃᐃ": Δᐃ++,
		"ⲆⵠⲆⵠⵠᐃⵠ": Δᐃ++,
		"ΔⵠⲆΔⵠ": Δᐃ++,
		"ⵠⵠΔⲆΔⲆⵠ": Δᐃ++,
		"ⵠⵠᐃᐃᐃ": Δᐃ++,
		"ⵠⲆΔⵠⵠᐃⲆ": Δᐃ++,
		"ⲆΔᐃᐃⵠⵠⲆ": Δᐃ++,
		"ⲆⲆⲆⵠⵠⲆⵠ": Δᐃ++,
		"ⵠⲆⲆⲆᐃᐃᐃ": Δᐃ++,
		"ΔⲆΔΔΔⵠᐃ": Δᐃ++,
		"ⵠⵠⵠⵠⲆᐃⵠ": Δᐃ++,
		"ᐃΔⲆᐃⵠⲆᐃ": Δᐃ++,
		"ΔΔⲆⵠⵠⵠᐃ": Δᐃ++,
		"ᐃⵠⲆΔΔΔᐃ": Δᐃ++,
		"ᐃⵠⲆⵠⲆᐃⲆ": Δᐃ++,
		"ΔⵠⲆⲆᐃⵠⲆ": Δᐃ++,
		"ⵠᐃᐃΔᐃΔᐃ": Δᐃ++,
		"ΔⵠᐃⵠᐃΔᐃ": Δᐃ++,
		"ΔΔⵠΔΔⵠⲆ": Δᐃ++,
		"ΔΔⵠΔᐃⲆΔ": Δᐃ++,
		"ⵠⲆΔᐃⵠⵠⵠ": Δᐃ++,
		"ᐃΔⲆⲆⵠⵠⲆ": Δᐃ++,
		"ΔⲆⵠⵠⲆⵠΔ": Δᐃ++,
		"ⵠᐃⵠΔΔⲆΔ": Δᐃ++,
		"ⵠΔⵠΔⵠΔΔ": Δᐃ++,
		"ⵠΔⲆⲆᐃΔⵠ": Δᐃ++,
		"ᐃΔΔΔᐃⲆⲆ": Δᐃ++,
		"ⵠᐃⲆᐃⲆⵠΔ": Δᐃ++,
		"ⲆⵠᐃⵠΔΔⲆ": Δᐃ++,
		"ⵠᐃᐃⵠⵠᐃⵠ": Δᐃ++,
		"ⵠᐃΔΔⵠⵠΔ": Δᐃ++,
		"ⵠⵠΔⲆⲆⵠᐃ": Δᐃ++,
		"ΔΔΔⵠᐃΔⲆ": Δᐃ++,
		"ΔᐃⵠᐃᐃΔᐃ": Δᐃ++,
		"ᐃⵠⲆΔⲆⲆⲆ": Δᐃ++,
		"ΔⵠΔΔⵠᐃᐃ": Δᐃ++,
		"ⲆⵠⵠΔⲆⵠΔ": Δᐃ++,
		"ⲆⵠΔⵠⲆⵠⵠ": Δᐃ++,
		"ΔΔΔⲆⲆᐃⵠ": Δᐃ++,
		"ΔΔᐃᐃΔⵠᐃ": Δᐃ++,
		"ⵠΔⵠⵠⵠᐃΔ": Δᐃ++,
		"ᐃΔⲆⵠᐃⵠᐃ": Δᐃ++,
		"ⲆⲆⲆⲆᐃⲆᐃ": Δᐃ++,
		"ⵠⲆⲆⵠⲆⲆᐃ": Δᐃ++,
		"ᐃᐃⵠⲆΔⲆᐃ": Δᐃ++,
		"ⵠΔᐃᐃⲆⲆⵠ": Δᐃ++,
		"ⲆⲆΔΔᐃⲆΔ": Δᐃ++,
		"ⲆⵠᐃΔᐃΔⵠ": Δᐃ++,
		"ᐃⵠⲆⵠᐃⲆΔ": Δᐃ++,
		"ΔⵠⲆⲆᐃⲆⲆ": Δᐃ++,
		"ⲆⵠⲆⵠᐃᐃΔ": Δᐃ++,
		"ᐃΔᐃΔⲆⵠⲆ": Δᐃ++,
		"ᐃᐃⵠⲆⲆⲆⵠ": Δᐃ++,
		"ΔⵠΔⵠΔΔᐃ": Δᐃ++,
		"ⲆⲆΔⵠΔⵠⵠ": Δᐃ++,
		"ⲆⲆᐃⲆΔⲆᐃ": Δᐃ++,
		"ⵠᐃᐃᐃᐃⵠΔ": Δᐃ++,
		"ⵠᐃⵠᐃⲆⵠΔ": Δᐃ++
	};
	var Δᐃ = ⲆⲆⲆ;
	const ⲆᐃᐃⵠΔΔⵠ = ᐃⲆΔᐃΔΔΔ;
	var ᐃΔᐃ = {
		"ⲆⵠΔⲆΔ": Δᐃ++,
		"ⵠᐃᐃΔΔ": Δᐃ++,
		"ⲆⲆᐃⲆⵠ": Δᐃ++,
		"ΔᐃΔⵠΔ": Δᐃ++,
		"ⵠᐃΔⵠᐃ": Δᐃ++,
		"ᐃⵠᐃⲆΔ": Δᐃ++,
		"ᐃᐃΔⵠᐃ": Δᐃ++,
		"ᐃᐃΔᐃΔ": Δᐃ++,
		"ᐃΔΔᐃΔ": Δᐃ++,
		"ᐃΔᐃΔᐃ": Δᐃ++,
		"ΔⲆΔⲆᐃ": Δᐃ++,
		"ⲆⲆΔⲆⵠ": Δᐃ++,
		"ⲆᐃΔⵠᐃ": Δᐃ++,
		"ᐃΔⵠⵠᐃ": Δᐃ++,
		"ⲆⲆⵠᐃⵠ": Δᐃ++,
		"ⵠΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠⲆᐃᐃ": Δᐃ++,
		"ᐃᐃⲆᐃⲆ": Δᐃ++,
		"ᐃⵠΔⲆΔ": Δᐃ++,
		"ᐃⵠⵠⵠᐃ": Δᐃ++,
		"ΔⵠⲆⲆΔ": Δᐃ++,
		"ᐃΔⲆΔⵠ": Δᐃ++,
		"ⵠΔΔᐃⲆ": Δᐃ++,
		"ᐃᐃⲆΔᐃ": Δᐃ++,
		"ΔᐃⵠⲆΔ": Δᐃ++,
		"ΔΔΔⲆⵠ": Δᐃ++,
		"ⲆΔⵠᐃⵠ": Δᐃ++,
		"ⵠⲆΔᐃⲆ": Δᐃ++,
		"ΔⲆⲆᐃᐃ": Δᐃ++,
		"ᐃⲆⵠⲆᐃ": Δᐃ++,
		"ⲆⲆⲆⵠⲆ": Δᐃ++,
		"ⵠⵠΔᐃⵠ": Δᐃ++,
		"ᐃⵠⲆΔΔ": Δᐃ++,
		"ⵠⲆⲆⲆᐃ": Δᐃ++,
		"Ⲇᐃⵠᐃⵠ": Δᐃ++,
		"ⵠⲆⵠΔⲆ": Δᐃ++,
		"ⲆᐃΔΔⲆ": Δᐃ++,
		"ΔⲆᐃⲆᐃ": Δᐃ++,
		"ΔᐃΔⲆⲆ": Δᐃ++,
		"ⵠⲆⲆΔⲆ": Δᐃ++,
		"ΔⲆΔⵠᐃ": Δᐃ++,
		"ⵠᐃⲆΔⲆ": Δᐃ++,
		"ᐃΔⲆⵠΔ": Δᐃ++,
		"ⵠⵠΔⵠᐃ": Δᐃ++,
		"ⵠⵠᐃⵠⲆ": Δᐃ++,
		"ᐃⵠⲆᐃᐃ": Δᐃ++,
		"ⵠⵠⲆⲆᐃ": Δᐃ++,
		"ⲆᐃⲆΔⲆ": Δᐃ++,
		"ΔⵠᐃᐃΔ": Δᐃ++,
		"ⵠᐃᐃⵠⵠ": Δᐃ++,
		"ΔΔᐃᐃᐃ": Δᐃ++,
		"ⵠⲆΔⵠᐃ": Δᐃ++,
		"ΔⵠᐃⲆΔ": Δᐃ++,
		"ⵠᐃⲆⲆΔ": Δᐃ++,
		"ⵠⵠⵠᐃⲆ": Δᐃ++,
		"ⲆΔᐃⲆᐃ": Δᐃ++,
		"ᐃᐃᐃΔⲆ": Δᐃ++,
		"ΔΔⵠⵠⵠ": Δᐃ++,
		"ΔⲆΔΔᐃ": Δᐃ++,
		"ΔΔⵠΔⲆ": Δᐃ++,
		"ᐃⵠⵠⲆⲆ": Δᐃ++,
		"ⲆΔᐃΔⵠ": Δᐃ++,
		"ΔᐃᐃⲆⵠ": Δᐃ++,
		"ⲆⲆⲆⵠⵠ": Δᐃ++,
		"ⵠⲆᐃΔᐃ": Δᐃ++,
		"ΔⲆⵠᐃΔ": Δᐃ++,
		"ⲆᐃᐃⲆⵠ": Δᐃ++,
		"Δᐃⵠⵠᐃ": Δᐃ++,
		"ⲆΔⵠΔⵠ": Δᐃ++,
		"Δⵠⵠᐃⵠ": Δᐃ++,
		"ⲆᐃⵠⲆΔ": Δᐃ++,
		"ⲆⵠΔⲆᐃ": Δᐃ++,
		"ΔⲆⲆⵠᐃ": Δᐃ++,
		"ⲆⵠⵠⲆⲆ": Δᐃ++,
		"ΔⲆΔⵠⵠ": Δᐃ++,
		"ⵠⲆᐃᐃᐃ": Δᐃ++,
		"ᐃⲆⲆⵠⲆ": Δᐃ++,
		"ᐃᐃΔΔΔ": Δᐃ++,
		"ΔⵠᐃⲆⵠ": Δᐃ++,
		"ΔⵠΔⲆᐃ": Δᐃ++,
		"ⵠⵠᐃⵠᐃ": Δᐃ++,
		"ⵠⲆΔΔⵠ": Δᐃ++,
		"ⵠⵠΔᐃᐃ": Δᐃ++,
		"ⲆⲆⵠᐃᐃ": Δᐃ++,
		"ΔⲆⲆΔᐃ": Δᐃ++,
		"ΔⲆᐃⲆⵠ": Δᐃ++,
		"ΔⲆⵠⵠᐃ": Δᐃ++,
		"Δᐃⵠᐃⵠ": Δᐃ++,
		"ⵠΔⵠⵠⵠ": Δᐃ++,
		"ⵠⲆⵠᐃᐃ": Δᐃ++,
		"ᐃΔⵠⲆⵠ": Δᐃ++,
		"ⲆᐃⲆΔⵠ": Δᐃ++,
		"ⲆⲆⲆΔⲆ": Δᐃ++,
		"ⲆⲆΔⲆᐃ": Δᐃ++,
		"ⵠΔᐃΔΔ": Δᐃ++,
		"ΔⲆΔᐃⵠ": Δᐃ++,
		"ΔΔΔᐃᐃ": Δᐃ++,
		"Δⵠᐃᐃⵠ": Δᐃ++,
		"ᐃⲆⵠⵠΔ": Δᐃ++,
		"ⲆᐃᐃⵠΔ": Δᐃ++,
		"ⵠΔΔⵠ": Δᐃ++,
		"ΔΔⲆΔᐃ": Δᐃ++,
		"ⲆⵠⵠΔᐃ": Δᐃ++,
		"ⵠⲆⵠᐃⵠ": Δᐃ++,
		"ⲆΔⲆᐃΔ": Δᐃ++,
		"ΔⵠⲆΔᐃ": Δᐃ++,
		"ⲆΔᐃΔΔ": Δᐃ++,
		"ⵠΔⲆᐃⵠ": Δᐃ++,
		"ᐃᐃᐃⵠⵠ": Δᐃ++,
		"ⵠᐃⲆᐃᐃ": Δᐃ++,
		"ᐃⲆᐃᐃⵠ": Δᐃ++,
		"ⵠΔΔⲆⵠ": Δᐃ++,
		"ΔⵠᐃΔᐃΔⲆ": Δᐃ++,
		"ᐃⲆⲆΔΔᐃⵠ": Δᐃ++,
		"ⵠⵠⲆΔΔ": Δᐃ++,
		"ⲆΔⵠΔΔ": Δᐃ++,
		"ΔΔΔΔΔ": Δᐃ++,
		"ΔⲆᐃΔⲆ": Δᐃ++,
		"ⵠᐃΔⲆΔ": Δᐃ++,
		"ⵠⲆⵠⲆⲆ": Δᐃ++,
		"ᐃΔᐃⵠⲆ": Δᐃ++,
		"ⲆⲆᐃΔⵠ": Δᐃ++,
		"ⲆΔΔΔΔ": Δᐃ++,
		"ⲆⲆⵠⵠᐃ": Δᐃ++,
		"ΔⲆⲆΔⵠ": Δᐃ++,
		"ΔⲆⲆᐃⲆ": Δᐃ++,
		"ⵠᐃⲆΔᐃ": Δᐃ++,
		"ᐃᐃⵠⲆᐃ": Δᐃ++,
		"ᐃᐃⲆΔⵠ": Δᐃ++,
		"ᐃⲆΔΔⵠ": Δᐃ++,
		"ⲆᐃΔⲆⵠ": Δᐃ++,
		"ᐃΔⵠᐃⵠ": Δᐃ++,
		"ΔⵠᐃⲆⲆ": Δᐃ++,
		"ᐃⲆΔⵠΔ": Δᐃ++,
		"ΔⵠΔⲆⲆ": Δᐃ++,
		"ⲆⵠⲆΔⵠ": Δᐃ++,
		"ΔΔⵠⲆᐃ": Δᐃ++,
		"ⲆⲆΔⲆⲆ": Δᐃ++,
		"ⲆⲆΔΔⲆ": Δᐃ++,
		"ⲆⲆᐃⵠⵠ": Δᐃ++,
		"ΔΔᐃΔⵠ": Δᐃ++,
		"ⵠΔΔⵠΔ": Δᐃ++,
		"ⵠⲆᐃⲆⲆ": Δᐃ++,
		"ᐃᐃΔΔⲆ": Δᐃ++,
		"ⲆΔⵠⵠⵠ": Δᐃ++,
		"ⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠⵠΔⲆΔ": Δᐃ++,
		"ⵠΔⲆΔΔ": Δᐃ++,
		"ⵠΔΔⲆΔ": Δᐃ++,
		"ⲆⲆΔΔΔ": Δᐃ++,
		"ᐃⵠⵠⲆⵠ": Δᐃ++,
		"ᐃᐃⵠᐃⵠ": Δᐃ++,
		"ᐃⵠΔⵠⲆ": Δᐃ++,
		"ⵠᐃⵠᐃᐃ": Δᐃ++,
		"ᐃⲆΔᐃⵠ": Δᐃ++,
		"ΔΔᐃᐃΔ": Δᐃ++,
		"ᐃᐃΔΔⵠ": Δᐃ++,
		"ⲆΔⵠⲆⲆ": Δᐃ++,
		"ᐃⵠΔΔⵠ": Δᐃ++,
		"ⵠᐃᐃⵠᐃ": Δᐃ++,
		"ⲆΔⲆⵠⲆ": Δᐃ++,
		"ᐃᐃᐃⵠⲆ": Δᐃ++,
		"ⵠᐃᐃⲆⵠ": Δᐃ++,
		"ΔΔⲆᐃΔ": Δᐃ++,
		"ⵠᐃⲆⵠΔ": Δᐃ++,
		"ⵠᐃⲆᐃⲆ": Δᐃ++,
		"ⲆᐃΔⲆⲆ": Δᐃ++,
		"ΔΔⵠⲆⲆ": Δᐃ++,
		"ⲆⵠΔⵠᐃ": Δᐃ++,
		"ⲆΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠΔΔᐃ": Δᐃ++,
		"ⵠΔⵠⵠΔ": Δᐃ++,
		"ⲆⲆⵠΔΔ": Δᐃ++,
		"ΔΔⵠⵠᐃ": Δᐃ++,
		"ΔⲆᐃⵠⲆ": Δᐃ++,
		"ᐃΔⲆΔⲆ": Δᐃ++,
		"ΔᐃΔⵠⵠ": Δᐃ++
	};
	var Δᐃ = ⲆΔᐃ;
	const ᐃⲆⲆΔΔ = ΔΔᐃⵠⵠ;
	var ⵠⲆ = {
		"ⵠⲆⵠΔⲆ": Δᐃ++,
		"ᐃⵠᐃⲆΔ": Δᐃ++,
		"ⵠΔᐃⵠᐃ": Δᐃ++,
		"ᐃᐃΔⵠᐃ": Δᐃ++,
		"ᐃᐃΔᐃΔ": Δᐃ++,
		"ⲆᐃΔΔⲆ": Δᐃ++,
		"ΔⲆᐃⲆᐃ": Δᐃ++,
		"ΔΔᐃⵠᐃ": Δᐃ++,
		"ⵠᐃΔⵠᐃ": Δᐃ++,
		"ΔⲆⲆΔⲆ": Δᐃ++,
		"ⲆⲆⵠᐃᐃ": Δᐃ++,
		"ΔⲆⲆΔᐃ": Δᐃ++,
		"ΔΔΔⲆⵠ": Δᐃ++,
		"ⲆΔⵠᐃⵠ": Δᐃ++,
		"ⵠⲆΔᐃⲆ": Δᐃ++,
		"ΔⲆⲆᐃᐃ": Δᐃ++,
		"ⵠⵠΔᐃⵠ": Δᐃ++,
		"ᐃⵠⲆΔΔ": Δᐃ++,
		"ⵠⲆⲆⲆᐃ": Δᐃ++,
		"ⵠⲆⲆΔⲆ": Δᐃ++,
		"ΔⲆΔᐃⵠ": Δᐃ++,
		"ΔΔΔᐃᐃ": Δᐃ++,
		"Δⵠᐃᐃⵠ": Δᐃ++,
		"ⵠⵠᐃⵠᐃ": Δᐃ++,
		"ⵠⲆΔΔⵠ": Δᐃ++,
		"ⵠΔⵠⵠⵠ": Δᐃ++,
		"ⵠⲆⵠᐃᐃ": Δᐃ++,
		"ᐃΔⵠⲆⵠ": Δᐃ++,
		"ΔᐃⵠⲆΔ": Δᐃ++,
		"ⵠΔΔⵠ": Δᐃ++,
		"ΔᐃΔⲆⲆ": Δᐃ++,
		"ᐃΔΔᐃΔ": Δᐃ++,
		"ᐃΔᐃΔᐃ": Δᐃ++,
		"ᐃⲆⵠⲆᐃ": Δᐃ++,
		"ⲆⲆⲆⵠⲆ": Δᐃ++,
		"ΔⲆΔⲆᐃ": Δᐃ++,
		"ⲆⲆΔⲆⵠ": Δᐃ++,
		"ⲆᐃΔⵠᐃ": Δᐃ++,
		"ᐃΔⵠⵠᐃ": Δᐃ++,
		"ⲆⲆⵠᐃⵠ": Δᐃ++,
		"ΔⲆᐃⲆⵠ": Δᐃ++,
		"ᐃⵠᐃⲆⵠ": Δᐃ++,
		"ⵠⵠⲆΔⲆ": Δᐃ++,
		"ⲆᐃⲆΔⵠ": Δᐃ++,
		"ⲆⲆⲆΔⲆ": Δᐃ++,
		"ⵠΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠⲆᐃᐃ": Δᐃ++,
		"ⵠΔᐃΔΔ": Δᐃ++,
		"ⲆⲆΔⲆᐃ": Δᐃ++,
		"ᐃΔⲆΔⵠ": Δᐃ++,
		"ᐃᐃⲆᐃⲆ": Δᐃ++,
		"ᐃⵠΔⲆΔ": Δᐃ++,
		"ᐃⵠⵠⵠᐃ": Δᐃ++,
		"ⵠΔΔᐃⲆ": Δᐃ++,
		"ᐃᐃⲆΔᐃ": Δᐃ++,
		"ⲆΔΔΔΔ": Δᐃ++,
		"ⲆⲆⵠⵠᐃ": Δᐃ++,
		"Ⲇᐃⵠᐃⵠ": Δᐃ++,
		"Δᐃⵠᐃⵠ": Δᐃ++,
		"ⵠᐃⲆΔᐃ": Δᐃ++,
		"ᐃᐃⵠⲆᐃ": Δᐃ++,
		"ᐃᐃⲆΔⵠ": Δᐃ++,
		"ᐃⲆΔΔⵠ": Δᐃ++,
		"ⲆᐃΔⲆⵠ": Δᐃ++,
		"ᐃΔⵠᐃⵠ": Δᐃ++,
		"ᐃⲆΔⵠΔ": Δᐃ++,
		"ⲆⵠⲆΔⵠ": Δᐃ++,
		"ⲆⲆΔⲆⲆ": Δᐃ++,
		"ⲆⲆᐃⵠⵠ": Δᐃ++,
		"ⵠΔΔⵠΔ": Δᐃ++,
		"ᐃᐃΔΔⲆ": Δᐃ++,
		"ⲆⵠᐃⲆᐃ": Δᐃ++,
		"ⵠⵠΔⲆΔ": Δᐃ++,
		"ⵠΔⲆΔΔ": Δᐃ++,
		"ⵠΔΔⲆΔ": Δᐃ++,
		"ⲆⲆΔΔΔ": Δᐃ++,
		"ᐃⵠⵠⲆⵠ": Δᐃ++,
		"ᐃᐃⵠᐃⵠ": Δᐃ++,
		"ᐃⵠΔⵠⲆ": Δᐃ++,
		"ⵠᐃⵠᐃᐃ": Δᐃ++,
		"ᐃⲆⵠⵠΔ": Δᐃ++,
		"ⲆᐃᐃⵠΔ": Δᐃ++,
		"ⵠⵠΔᐃᐃ": Δᐃ++,
		"ᐃⲆΔᐃⵠ": Δᐃ++,
		"ΔΔᐃᐃΔ": Δᐃ++,
		"ᐃᐃΔΔⵠ": Δᐃ++,
		"ⲆΔⵠⲆⲆ": Δᐃ++,
		"ⵠᐃᐃⵠΔ": Δᐃ++,
		"ΔⲆⵠⵠᐃ": Δᐃ++,
		"ⵠᐃⲆᐃⲆ": Δᐃ++,
		"ΔΔⵠⵠᐃ": Δᐃ++,
		"ΔᐃΔⵠⵠ": Δᐃ++,
		"ΔⲆᐃⵠⲆ": Δᐃ++,
		"ᐃΔⲆΔⲆ": Δᐃ++,
		"ΔΔⵠⲆⲆ": Δᐃ++,
		"ⲆⵠΔⵠᐃ": Δᐃ++,
		"ⲆΔᐃⵠⵠ": Δᐃ++,
		"ⵠⵠΔΔᐃ": Δᐃ++,
		"ⵠΔⵠⵠΔ": Δᐃ++,
		"ⲆⲆⵠΔΔ": Δᐃ++,
		"ᐃΔᐃΔⵠ": Δᐃ++,
		"ΔⵠᐃⲆⲆ": Δᐃ++,
		"ΔⵠΔⲆⲆ": Δᐃ++,
		"ΔΔⵠⲆᐃ": Δᐃ++,
		"ⲆⲆΔΔⲆ": Δᐃ++,
		"ΔΔᐃΔⵠ": Δᐃ++,
		"ⵠⲆᐃⲆⲆ": Δᐃ++,
		"ⲆΔⵠⵠⵠ": Δᐃ++,
		"ⵠᐃΔⲆ": Δᐃ++,
		"ᐃⲆΔᐃ": Δᐃ++,
		"ⵠⵠᐃΔᐃ": Δᐃ++,
		"ⲆᐃⲆⵠ": Δᐃ++,
		"ⲆⵠⲆⵠ": Δᐃ++,
		"ⲆⵠΔⲆΔ": Δᐃ++,
		"ΔᐃΔⵠΔ": Δᐃ++,
		"ΔⲆΔⵠᐃ": Δᐃ++,
		"ⲆᐃⵠΔᐃ": Δᐃ++,
		"ⵠᐃᐃⵠⵠ": Δᐃ++,
		"ⵠᐃᐃΔΔ": Δᐃ++,
		"ⲆⲆᐃⲆⵠ": Δᐃ++,
		"ΔΔⲆΔᐃ": Δᐃ++,
		"ⲆⵠΔⵠ": Δᐃ++,
		"ΔΔⵠΔⲆ": Δᐃ++,
		"ⲆⵠΔⲆᐃ": Δᐃ++,
		"ΔⲆⵠᐃΔ": Δᐃ++,
		"ⲆΔᐃΔΔ": Δᐃ++,
		"ᐃⲆⵠⵠⵠ": Δᐃ++,
		"ⵠΔΔⲆⵠ": Δᐃ++,
		"ᐃⲆᐃᐃⵠ": Δᐃ++,
		"ΔᐃᐃⲆΔ": Δᐃ++,
		"ΔⵠⲆⲆΔ": Δᐃ++,
		"ⲆⲆⲆΔⵠ": Δᐃ++,
		"ⵠᐃⲆΔⲆ": Δᐃ++,
		"ΔⵠᐃⲆΔ": Δᐃ++,
		"ΔⲆⲆΔΔ": Δᐃ++,
		"ⵠⵠⲆΔΔ": Δᐃ++,
		"ⵠᐃⲆⲆΔ": Δᐃ++,
		"ᐃⵠⲆⵠΔ": Δᐃ++,
		"ΔΔᐃᐃᐃ": Δᐃ++,
		"ᐃᐃᐃⲆΔ": Δᐃ++,
		"ⲆⵠⵠΔⲆ": Δᐃ++,
		"ⵠᐃⲆᐃᐃ": Δᐃ++,
		"ⵠᐃⵠΔᐃ": Δᐃ++,
		"ⵠⲆΔⵠᐃ": Δᐃ++,
		"ΔⲆⲆΔⵠ": Δᐃ++,
		"ΔⲆⲆᐃⲆ": Δᐃ++,
		"ᐃⵠΔᐃⵠ": Δᐃ++,
		"ⲆⵠⵠΔᐃ": Δᐃ++,
		"ⵠⲆⵠᐃⵠ": Δᐃ++,
		"ΔⵠⵠⵠΔ": Δᐃ++,
		"ΔⵠⵠΔᐃ": Δᐃ++,
		"ⲆΔⵠΔΔ": Δᐃ++,
		"ΔΔΔΔΔ": Δᐃ++,
		"ΔⲆᐃΔⲆ": Δᐃ++,
		"ⵠᐃΔⲆΔ": Δᐃ++,
		"ⵠⲆⵠⲆⲆ": Δᐃ++,
		"ᐃΔᐃⵠⲆ": Δᐃ++,
		"ⲆⲆᐃΔⵠ": Δᐃ++,
		"ⲆΔⲆᐃΔ": Δᐃ++,
		"ΔⵠⲆΔᐃ": Δᐃ++,
		"Δᐃⵠⵠᐃ": Δᐃ++,
		"ᐃΔⵠᐃᐃ": Δᐃ++,
		"ⲆΔᐃⲆᐃ": Δᐃ++,
		"ᐃᐃᐃΔⲆ": Δᐃ++,
		"ΔΔⵠⵠⵠ": Δᐃ++,
		"ΔⲆΔΔᐃ": Δᐃ++,
		"ⲆΔᐃΔⵠ": Δᐃ++,
		"ΔⵠΔⲆᐃ": Δᐃ++,
		"ⲆΔⵠΔⵠ": Δᐃ++,
		"Δⵠⵠᐃⵠ": Δᐃ++,
		"ⲆᐃⵠⲆΔ": Δᐃ++,
		"ΔᐃᐃⲆⵠ": Δᐃ++,
		"ⲆⲆⲆⵠⵠ": Δᐃ++,
		"ⵠⲆᐃΔᐃ": Δᐃ++,
		"ᐃΔⲆᐃᐃ": Δᐃ++,
		"ΔⵠΔΔⲆ": Δᐃ++,
		"ᐃᐃⲆⵠΔ": Δᐃ++,
		"ⲆᐃⲆⵠⲆ": Δᐃ++,
		"ⵠⲆⲆⵠᐃ": Δᐃ++,
		"ΔⲆⲆⲆΔ": Δᐃ++,
		"ᐃⵠΔΔⵠ": Δᐃ++,
		"ⵠᐃᐃⵠᐃ": Δᐃ++,
		"ⲆΔⲆⵠⲆ": Δᐃ++,
		"ᐃᐃᐃⵠⲆ": Δᐃ++,
		"ⲆⵠᐃⵠⲆ": Δᐃ++,
		"ⲆΔⲆⲆΔ": Δᐃ++,
		"ᐃⵠⵠᐃⲆ": Δᐃ++,
		"ⲆⲆᐃᐃΔ": Δᐃ++,
		"ᐃΔⲆⵠΔ": Δᐃ++,
		"ΔⵠⵠΔⵠ": Δᐃ++,
		"ⵠΔⲆᐃⵠ": Δᐃ++,
		"ⵠⵠΔⵠᐃ": Δᐃ++,
		"ⵠΔΔⵠᐃ": Δᐃ++,
		"ⵠⵠᐃⵠⲆ": Δᐃ++,
		"ΔⵠⵠⲆᐃ": Δᐃ++,
		"ⵠⵠⵠᐃⲆ": Δᐃ++,
		"ΔᐃᐃΔΔ": Δᐃ++,
		"ᐃⲆᐃⲆⲆ": Δᐃ++,
		"ⵠᐃᐃⲆⵠ": Δᐃ++,
		"ΔᐃⲆΔΔ": Δᐃ++,
		"ᐃΔⲆⲆᐃ": Δᐃ++,
		"ᐃⵠΔᐃΔ": Δᐃ++,
		"ᐃΔⲆⲆ": Δᐃ++,
		"ⵠⲆⲆⵠⵠ": Δᐃ++,
		"ᐃⵠⲆᐃᐃ": Δᐃ++,
		"ⲆⵠⵠⲆᐃ": Δᐃ++,
		"ⵠⵠⲆⲆᐃ": Δᐃ++,
		"ⲆⵠⵠᐃΔ": Δᐃ++,
		"ⲆᐃⲆΔⲆ": Δᐃ++,
		"ᐃΔⲆΔᐃ": Δᐃ++,
		"ΔⵠᐃᐃΔ": Δᐃ++,
		"ⲆⵠᐃⲆΔ": Δᐃ++,
		"ⲆⵠⵠⲆⲆ": Δᐃ++,
		"ΔⲆΔⵠⵠ": Δᐃ++,
		"ⵠⲆᐃᐃᐃ": Δᐃ++,
		"ᐃⲆⲆⵠⲆ": Δᐃ++,
		"ᐃᐃΔΔΔ": Δᐃ++,
		"ᐃⵠⵠⲆⲆ": Δᐃ++,
		"ⲆᐃᐃⲆⵠ": Δᐃ++,
		"ΔⲆⲆⵠᐃ": Δᐃ++,
		"ΔⵠᐃⲆⵠ": Δᐃ++,
		"ᐃᐃᐃⵠⵠ": Δᐃ++,
		"Δᐃᐃᐃᐃ": Δᐃ++,
		"ΔΔⲆᐃΔ": Δᐃ++,
		"ⵠᐃⲆⵠΔ": Δᐃ++,
		"ᐃΔⵠⵠΔ": Δᐃ++,
		"ᐃᐃⵠΔΔ": Δᐃ++,
		"ᐃⲆⲆⲆⲆ": Δᐃ++,
		"ᐃⲆⲆᐃⲆ": Δᐃ++,
		"ΔᐃⲆⵠᐃ": Δᐃ++,
		"ⲆᐃΔⲆⲆ": Δᐃ++,
		"Δᐃⵠⵠⵠ": Δᐃ++,
		"ⵠⵠⵠΔⲆ": Δᐃ++,
		"ⲆΔⲆⵠᐃ": Δᐃ++,
		"ΔᐃᐃⲆᐃ": Δᐃ++,
		"ΔⲆΔⲆΔΔᐃ": Δᐃ++,
		"ⲆᐃᐃⲆⲆΔⲆ": Δᐃ++,
		"ⵠⵠⲆΔᐃ": Δᐃ++,
		"ᐃⲆΔⵠᐃ": Δᐃ++,
		"ⵠⵠᐃᐃᐃ": Δᐃ++,
		"ΔΔΔΔⲆ": Δᐃ++
	};
	var ᐃⵠⲆΔ = {
		"ⵠⵠⵠᐃⵠ": ⵠⵠⲆ,
		"ⲆⲆⲆᐃⵠ": 2,
		"ᐃⵠΔⲆⵠ": 5,
		"ΔⵠⲆᐃⵠ": 3,
		"ΔΔΔⲆΔ": Δⵠⵠ,
		"ⲆⵠⲆⲆΔ": ⲆⲆΔΔ
	};
	var ᐃΔᐃᐃ = [];
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆΔᐃ] = {
		name: "Wood",
		"ⵠⵠ": Δ.ΔⵠᐃΔⵠᐃᐃ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠᐃᐃⵠ = ᐃᐃΔⵠ;
	const ΔⲆᐃᐃⲆᐃΔΔΔ = ᐃⵠⲆᐃΔⲆᐃ;
	const ⵠᐃⵠⵠⵠ = ⲆΔⵠⵠⲆ;
	const ⲆⵠⲆᐃΔⵠᐃ = ᐃⲆⵠᐃⲆᐃⵠ;
	const ⲆⵠⲆⵠⵠⲆⲆ = ⲆⵠⲆᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃΔⲆ] = {
		name: "Stone",
		"ⵠⵠ": Δ.ⲆᐃΔⵠΔᐃᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ⲆⲆΔᐃ = ⵠⵠⲆ;
	const ⵠⲆΔⲆⵠ = ⲆⲆᐃⵠⲆ;
	const ΔᐃΔⲆΔΔⲆᐃΔ = Δⵠᐃᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⲆⵠ] = {
		name: "Gold",
		"ⵠⵠ": Δ.ⵠⵠⲆᐃⲆΔΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⲆⵠ] = {
		name: "Diamond",
		"ⵠⵠ": Δ.ᐃᐃⲆⲆⲆΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ΔⲆΔⵠⵠΔⲆ = ΔⲆⲆⲆⲆ;
	const ⲆⲆⵠⲆᐃᐃᐃⲆⲆ = ᐃⲆⵠⵠᐃⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠΔⵠ] = {
		name: "Amethyst",
		"ⵠⵠ": Δ.ⵠᐃⵠΔⲆⵠⲆ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔᐃⵠᐃ] = {
		name: "Rabbit fur",
		"ⵠⵠ": Δ.ⲆᐃΔᐃⲆΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆᐃᐃ] = {
		name: "Wolf fur",
		"ⵠⵠ": Δ.ᐃΔⵠⵠᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ⵠᐃⲆᐃ = ΔⲆⵠ;
	const ᐃⵠΔΔᐃ = ⵠⵠΔⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⲆΔᐃ] = {
		name: "Boar fur",
		"ⵠⵠ": Δ.ⵠⲆΔⵠᐃⵠⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔᐃΔⵠ] = {
		name: "Firefly",
		"ⵠⵠ": Δ.ΔᐃΔⵠⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": Δⵠⵠ,
		"ⲆⵠⲆΔ": ⲆⵠⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠᐃⲆⲆ] = {
		name: "Wood arrow",
		"ⵠⵠ": Δ.ⲆⲆᐃΔⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ⵠⵠΔⲆΔⵠᐃ = ΔⵠΔⲆᐃΔⵠ;
	const ⲆΔⲆⲆⲆⲆᐃ = ⵠⲆⲆᐃⲆ;
	const ⲆⵠΔⲆⲆΔⵠ = ΔΔᐃⲆⲆ;
	const ᐃⵠᐃⵠΔ = ⲆⵠΔΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠΔⲆⲆ] = {
		name: "Stone arrow",
		"ⵠⵠ": Δ.ⲆⵠΔⵠᐃΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⵠⲆᐃ] = {
		name: "Gold arrow",
		"ⵠⵠ": Δ.ᐃⲆΔⵠⵠⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆΔΔⲆ] = {
		name: "Diamond arrow",
		"ⵠⵠ": Δ.ⲆⲆⲆⲆⲆᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃᐃⵠᐃⲆᐃⵠ = ⵠⲆⲆᐃⲆ;
	const ⵠⵠⲆᐃⲆ = ΔΔⵠⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔᐃΔⵠ] = {
		name: "Amethyst arrow",
		"ⵠⵠ": Δ.ⲆᐃΔⵠΔᐃΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ᐃⵠⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆᐃⲆⲆ] = {
		name: "Reidite arrow",
		"ⵠⵠ": Δ.ΔΔᐃⲆΔΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠᐃΔᐃ = ⵠⲆⲆ;
	const ᐃⵠⲆⲆⲆ = ⵠᐃᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⵠⵠⵠ] = {
		name: "Dragon arrow",
		"ⵠⵠ": Δ.ⲆⵠⲆΔⵠⵠΔ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 0
	};
	const ΔᐃⵠⵠⲆΔⵠ = Ⲇⵠⵠⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠΔᐃⵠ] = {
		name: "Winter fur",
		"ⵠⵠ": Δ.ⵠⵠΔⵠⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃⵠⲆᐃⲆ = ΔΔⵠⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔΔΔⲆ] = {
		name: "Fur mammoth",
		"ⵠⵠ": Δ.ΔⵠᐃⵠᐃΔᐃ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	const ΔΔⲆⲆᐃ = Δᐃᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⵠᐃᐃ] = {
		name: "Web",
		"ⵠⵠ": Δ.ᐃΔⵠΔⵠⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⵠΔᐃ] = {
		name: "Meat",
		"ⵠⵠ": Δ.ⲆᐃΔⵠⵠⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⵠⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⲆⵠΔ] = {
		name: "Fish",
		"ⵠⵠ": Δ.ⵠΔⲆⵠⵠΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆΔᐃ
	};
	const ᐃΔⵠᐃΔΔΔ = ΔⲆⲆⵠⵠ;
	const ΔᐃΔⵠⲆΔⲆ = ⵠΔⲆⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃᐃⲆΔ] = {
		name: "Kraken skin",
		"ⵠⵠ": Δ.ⵠᐃᐃⲆⲆΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	const Ⲇⵠᐃⵠᐃ = ΔᐃΔᐃⵠ;
	const ⵠⲆⲆΔΔⵠⲆ = ⵠᐃⵠᐃⲆᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃᐃⲆΔ] = {
		name: "Piranha scales",
		"ⵠⵠ": Δ.ⲆⲆᐃΔⲆᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ΔᐃΔᐃᐃ = ⲆΔᐃⵠⲆ;
	const ᐃⵠᐃⲆⲆⲆᐃ = ⵠΔᐃᐃⲆ;
	const ᐃⵠΔⲆᐃⵠᐃ = ᐃᐃⲆⵠⵠⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⵠΔᐃ] = {
		name: "Ice",
		"ⵠⵠ": Δ.ᐃⲆᐃⲆⲆⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃᐃⲆⲆⵠ = ⵠⵠΔⵠ;
	const ΔᐃΔΔΔ = ΔΔᐃⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = {
		name: "Sand",
		"ⵠⵠ": Δ.ⲆᐃⲆΔⵠΔΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ΔⲆⵠ
	};
	const ΔΔⵠᐃᐃΔᐃ = String.fromCharCode;
	const ⲆᐃᐃΔⲆᐃΔⵠⵠ = 101;
	const ⵠΔΔᐃⲆᐃⲆ = 118;
	const ᐃΔΔⵠⵠᐃΔ = "ᐃᐃΔΔⵠⲆᐃΔᐃ";
	const ⲆⲆⵠᐃΔⵠⲆ = 97;
	const ΔⲆΔⵠΔⲆⵠΔΔ = 108;
	const ⲆᐃᐃⵠᐃᐃⲆⲆᐃ = ΔΔⵠᐃᐃΔᐃ(ⲆᐃᐃΔⲆᐃΔⵠⵠ);
	const ΔⲆᐃⲆⵠᐃΔ = ΔΔⵠᐃᐃΔᐃ(ⵠΔΔᐃⲆᐃⲆ);

	function ᐃᐃΔΔⵠⲆᐃΔᐃ() {
		ᐃⵠΔᐃⵠⲆⲆ = ᐃᐃΔΔⵠⲆᐃΔᐃ;
		return ᐃᐃΔΔⵠⲆᐃΔᐃ
	}
	const ⵠⲆⵠΔⲆⲆᐃ = ΔΔⵠᐃᐃΔᐃ(ⲆⲆⵠᐃΔⵠⲆ);
	const ΔⵠΔΔⵠᐃΔ = ΔΔⵠᐃᐃΔᐃ(ΔⲆΔⵠΔⲆⵠΔΔ);
	const ⵠⵠᐃⲆΔΔᐃ = ⲆᐃᐃⵠᐃᐃⲆⲆᐃ + ΔⲆᐃⲆⵠᐃΔ + ⵠⲆⵠΔⲆⲆᐃ + ΔⵠΔΔⵠᐃΔ;
	const ᐃⲆΔᐃᐃᐃⲆ = ⲆⲆⲆⲆᐃᐃᐃ[ⵠⵠᐃⲆΔΔᐃ];
	const ⲆⲆⵠᐃᐃΔⵠ = ᐃⲆΔᐃᐃᐃⲆ(ᐃᐃΔΔⵠⲆᐃΔᐃ + "try{" + ᐃΔΔⵠⵠᐃΔ + "();0;}catch(ⵠⲆⵠΔⲆⲆᐃ){1;}");
	if (ⲆⲆⵠᐃᐃΔⵠ) {
		const ΔΔⵠᐃᐃΔᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
				ΔΔⵠᐃᐃΔᐃ()
			}))
		};
		ΔΔⵠᐃᐃΔᐃ()
	}
	const ⵠⲆᐃⵠᐃ = ⵠᐃⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⵠΔⲆ] = {
		name: "Dirt",
		"ⵠⵠ": Δ.ᐃⵠⲆᐃⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠᐃΔᐃ] = {
		name: "Berrie",
		"ⵠⵠ": Δ.ΔᐃⲆⵠⲆⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⲆΔⵠ] = {
		name: "Flour",
		"ⵠⵠ": Δ.ⲆΔⵠⲆᐃⲆᐃ,
		"Ⲇᐃᐃᐃ": Δⵠⵠ,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆΔΔ] = {
		name: "Flour",
		"ⵠⵠ": Δ.ⲆΔᐃᐃΔⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ΔΔⵠⲆᐃⲆⲆ = ⵠⵠᐃᐃΔΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = {
		name: "Special fur peasant",
		"ⵠⵠ": Δ.ⲆΔⲆᐃⵠᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃⲆΔⲆⵠⵠⲆ = ⵠᐃᐃⵠⲆ;
	const ᐃⵠⲆⵠⲆ = ᐃⲆⵠᐃⲆ;
	const ΔⲆⵠⲆΔΔⲆ = ΔⵠᐃΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆⲆΔ] = {
		name: "Special fur hood",
		"ⵠⵠ": Δ.ᐃᐃⵠᐃᐃⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ⵠΔⵠᐃⵠΔⵠ = ⲆⵠΔᐃΔⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⵠΔⵠ] = {
		name: "Pumpkin",
		"ⵠⵠ": Δ.ᐃⵠⵠᐃⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔⵠᐃ] = {
		name: "Garlic",
		"ⵠⵠ": Δ.ΔᐃᐃⵠΔᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⵠⲆᐃ] = {
		name: "Thornbush",
		"ⵠⵠ": Δ.ⲆᐃⵠⲆⲆⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⵠⲆᐃ] = {
		name: "Carrot",
		"ⵠⵠ": Δ.ᐃⵠᐃΔⵠⵠᐃ,
		"Ⲇᐃᐃᐃ": Δⵠⵠ,
		"ⲆⵠⲆΔ": ΔⲆⵠ
	};
	const ᐃⲆⵠᐃ = ᐃⵠΔⲆ;
	const ΔᐃⵠⲆⵠ = ΔΔⲆⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⵠᐃΔ] = {
		name: "Tomato",
		"ⵠⵠ": Δ.ⲆⲆⵠⵠⵠⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃⲆᐃ
	};
	const ΔΔⵠΔΔ = ⵠⵠⲆᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆΔᐃ] = {
		name: "Watermelon",
		"ⵠⵠ": Δ.ᐃΔⲆⲆⲆΔⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠᐃⲆΔ] = {
		name: "Aloe Vera",
		"ⵠⵠ": Δ.ΔⵠⵠΔᐃΔᐃ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ⲆⲆⲆ
	};
	const ΔⵠᐃⵠΔⵠⲆ = ᐃᐃⲆⲆⵠ;
	const ⵠΔⲆᐃΔ = Δⵠⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.Δᐃᐃᐃᐃ] = {
		name: "Penguin Feather",
		"ⵠⵠ": Δ.ᐃⲆᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ᐃᐃⵠⵠⲆⵠᐃ = ᐃⲆᐃⵠᐃΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.Δᐃⵠⵠⵠ] = {
		name: "Hawk Feather",
		"ⵠⵠ": Δ.ᐃᐃⵠΔⵠ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⵠΔⲆ] = {
		name: "Vulture Feather",
		"ⵠⵠ": Δ.ΔᐃⵠΔᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ⲆⵠᐃⲆⲆ = ⵠⵠᐃᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⲆⵠᐃ] = {
		name: ⵠ[Δᐃᐃᐃ],
		"ⵠⵠ": Δ.ⵠⲆⵠⵠΔΔⲆ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ] = {
		name: ⵠ[3],
		"ⵠⵠ": Δ.ⲆⲆⲆⵠⲆΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ] = {
		name: "Pitchfork Part",
		"ⵠⵠ": Δ.ᐃᐃΔΔⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆΔⵠᐃ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ΔΔⲆΔⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 0
	};

	function ΔⵠⲆΔⵠⵠⲆ() {
		return 15939930
	}
	const ΔⵠⵠⵠΔⲆⲆ = 14588772;
	const ⵠⵠⵠᐃ = ΔⵠⲆΔⵠⵠⲆ + " let ⲆⵠᐃΔⲆⲆⵠ = ΔⵠⲆΔⵠⵠⲆ () * 4101017; return ⲆⵠᐃΔⲆⲆⵠ;";
	const ⵠΔⵠⵠⲆⲆⵠ = new Function(ⵠⵠⵠᐃ);
	try {
		ⵠΔⵠⵠⲆⲆⵠ(ΔⵠⵠⵠΔⲆⲆ)
	} catch (e) {
		const ΔⵠⵠⵠΔⲆⲆ = Math.random;
		const ⲆⵠᐃΔⲆⲆⵠ = [];
		const ⵠⵠⵠᐃ = function() {
			for (let ⵠΔⵠⵠⲆⲆⵠ = 0; ⵠΔⵠⵠⲆⲆⵠ < 9193; ⵠΔⵠⵠⲆⲆⵠ++) ⲆⵠᐃΔⲆⲆⵠ.push(ⵠΔⵠⵠⲆⲆⵠ);
			return ΔⵠⵠⵠΔⲆⲆ()
		};
		Math.random = ⵠⵠⵠᐃ
	}
	const ⲆⵠⲆⲆⲆΔⲆ = ⵠⵠΔⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃᐃⲆᐃ] = {
		name: "Emerald",
		"ⵠⵠ": Δ.ⲆⵠΔΔᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ⲆΔᐃⲆⲆ = ΔᐃⲆΔⲆ;
	const ΔΔⲆⵠⲆ = ⵠΔⵠⲆⲆ;
	const ΔᐃΔΔⲆ = ⲆΔᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = {
		name: "Christmas Hat",
		"ⵠⵠ": Δ.ⵠΔΔᐃⲆΔⲆ,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ΔᐃⲆⲆᐃⵠⲆ = ⲆⲆᐃΔΔ;
	const ⲆΔΔⲆⵠⵠⲆᐃⲆ = ΔⵠⵠⵠΔⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⲆΔⲆ] = {
		name: "Elf Hat",
		"ⵠⵠ": Δ.ⵠⵠΔⲆⵠⵠΔ,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠᐃⲆⵠΔᐃⵠ = ⵠⵠΔⲆΔⵠᐃ;
	const ⲆΔⲆΔⵠ = ΔᐃΔΔᐃ;
	const ⲆⵠⲆⲆⲆⲆⵠ = ⵠⲆᐃΔⲆ;
	const ⲆΔᐃᐃⲆ = ⵠⲆⵠⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠΔᐃΔ] = {
		name: "Garland",
		"ⵠⵠ": Δ.ⵠⲆⲆⲆᐃⵠΔ,
		"ⲆⵠⲆΔ": ΔⲆⵠ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆⲆᐃ] = {
		name: "Candy",
		"ⵠⵠ": Δ.ⲆⵠⵠᐃᐃᐃΔ,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠⲆⵠΔΔⲆⵠ = ⲆⵠⲆⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃⲆΔΔ] = {
		name: "Sugar Cane",
		"ⵠⵠ": Δ.ΔⲆᐃⲆᐃᐃΔ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆΔⲆ] = {
		name: "Pirate Sword",
		"ⵠⵠ": Δ.ⲆⲆΔᐃⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ΔⲆΔⲆΔ = ⲆΔᐃⵠᐃ;
	const ᐃⵠⲆⲆΔ = ⲆΔᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃᐃΔΔ] = {
		name: "Crab Stick",
		"ⵠⵠ": Δ.ⵠΔΔΔⵠΔᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆⲆ] = {
		name: "Reidite",
		"ⵠⵠ": Δ.ᐃΔᐃⲆⲆⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⲆⵠⵠ] = {
		name: "Flame",
		"ⵠⵠ": Δ.ⲆᐃⲆⲆΔᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	const ⵠⵠⲆⵠ = ⵠΔᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠΔⲆΔ] = {
		name: "Campfire",
		"ⵠⵠ": Δ.ΔΔⲆᐃᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = {
		name: ⵠ[301],
		"ⵠⵠ": Δ.ⵠⲆᐃⲆΔⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃΔⵠΔ] = {
		name: "Workbench",
		"ⵠⵠ": Δ.ⵠⲆⲆΔΔᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⵠΔⲆ] = {
		name: "Stone sword",
		"ⵠⵠ": Δ.ᐃⲆΔΔⲆΔΔ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	const ΔⲆᐃⲆ = ⲆⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠᐃⲆΔ] = {
		name: "Stone pick",
		"ⵠⵠ": Δ.ⵠᐃⵠⵠⵠΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ⲆⵠΔᐃⲆⲆⵠ = ΔΔⲆΔΔ;
	const ⲆᐃⲆᐃ = ⵠΔⵠᐃ;
	const ᐃᐃΔᐃ = ⵠᐃΔᐃ;
	const ⲆΔΔᐃⲆⲆᐃ = ⲆᐃᐃⵠΔΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔⵠᐃ] = {
		name: "Berries bush",
		"ⵠⵠ": Δ.ⵠⵠⵠⵠⵠⲆⵠ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃᐃⲆᐃⵠ = ΔⲆⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃΔⵠᐃ] = {
		name: "Gold pick",
		"ⵠⵠ": Δ.ᐃⵠΔⲆΔⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ᐃΔᐃⵠⵠ = ᐃⲆⵠΔΔ;
	const ⵠⵠⵠⵠΔⵠⲆ = ⲆΔᐃⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃΔᐃΔ] = {
		name: "Diamond pick",
		"ⵠⵠ": Δ.ⲆⵠⲆᐃⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ⵠⵠⵠΔᐃᐃⵠ = ⵠΔⲆⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = {
		name: "Wood sword",
		"ⵠⵠ": Δ.ΔᐃⵠⲆⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆΔΔⵠⲆ = ⲆⲆᐃⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃΔΔⲆ] = {
		name: "Gold sword",
		"ⵠⵠ": Δ.ᐃᐃΔⲆⲆⵠᐃ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆᐃⲆᐃ] = {
		name: "Diamond sword",
		"ⵠⵠ": Δ.ⵠⲆⲆΔᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆᐃⲆ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃΔⵠᐃ] = {
		name: "Wood pick",
		"ⵠⵠ": Δ.ⵠΔΔΔΔᐃᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔᐃⲆᐃ] = {
		name: "Wood wall",
		"ⵠⵠ": Δ.ⲆⵠⵠⲆΔⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆⵠⵠⵠⲆⲆΔᐃⲆ = 700496;
	const ⲆᐃΔᐃΔⲆⲆ = ⲆⵠⵠⵠⲆⲆΔᐃⲆ["ⲆΔΔΔⵠⲆⲆᐃΔ"];
	const ΔᐃⵠᐃⲆⲆⵠⵠΔ = `const ΔᐃΔⵠⵠⵠᐃ = (typeof ΔΔᐃᐃⲆᐃⲆ === "${ⲆᐃΔᐃΔⲆⲆ}") ? 1 : 0; return ΔᐃΔⵠⵠⵠᐃ;`;

	function ΔΔᐃᐃⲆᐃⲆ() {
		ⲆᐃΔᐃΔⲆⲆ;
		ⲆⵠⵠⵠⲆⲆΔᐃⲆ();
		return ΔᐃⵠᐃⲆⲆⵠⵠΔ
	}
	const ΔᐃΔⵠⵠⵠᐃ = 16521820;
	const ᐃΔⵠᐃΔⵠᐃΔᐃ = new Function(ΔΔᐃᐃⲆᐃⲆ + ΔᐃⵠᐃⲆⲆⵠⵠΔ);
	const ⵠⲆⲆⵠⵠⵠⵠ = 16246611;
	if (ᐃΔⵠᐃΔⵠᐃΔᐃ(ΔᐃΔⵠⵠⵠᐃ, ⵠⲆⲆⵠⵠⵠⵠ) === 1) {
		const ⲆⵠⵠⵠⲆⲆΔᐃⲆ = Math.floor;
		let ΔᐃⵠᐃⲆⲆⵠⵠΔ = 0;
		const ⲆᐃΔᐃΔⲆⲆ = function(ⲆᐃΔᐃΔⲆⲆ) {
			for (let ⲆΔΔΔⵠⲆⲆᐃΔ = 0; ⲆΔΔΔⵠⲆⲆᐃΔ < 5587; ⲆΔΔΔⵠⲆⲆᐃΔ++) ΔᐃⵠᐃⲆⲆⵠⵠΔ += ⲆΔΔΔⵠⲆⲆᐃΔ;
			return ⲆⵠⵠⵠⲆⲆΔᐃⲆ(ⲆᐃΔᐃΔⲆⲆ)
		};
		Math.floor = ⲆᐃΔᐃΔⲆⲆ
	}
	ᐃΔᐃᐃ[ⵠⲆ.Δᐃⵠⵠᐃ] = {
		name: "Wood spike",
		"ⵠⵠ": Δ.ⵠⵠΔⲆᐃⲆΔ,
		"Ⲇᐃᐃᐃ": Δⵠⵠ,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ⲆⵠΔᐃ = ⵠⵠⲆⵠ;
	const ᐃᐃΔⲆⵠᐃᐃ = 13750196;

	function ᐃⵠⵠⵠⵠᐃΔ(ΔⲆⵠⵠ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ΔⲆⵠⵠ)
	}

	function ΔⲆⵠⲆⵠ(ⲆᐃᐃⲆⲆⲆᐃ) {
		return ⲆᐃᐃⲆⲆⲆᐃ.map(ᐃⵠⵠⵠⵠᐃΔ).join("")
	}
	const ⵠⵠⲆᐃⲆⲆΔ = function() {
		const ⵠᐃΔΔΔⵠΔ = ΔⲆⵠⲆⵠ([5123, 5123, 916, 11398, 11616, 5123, 5123]);
		const ᐃⲆΔⵠᐃΔᐃ = {
			"ⵠᐃⵠᐃᐃⲆᐃ": 12421172,
			"ⲆⲆⵠᐃᐃⲆΔ": 2985304,
			"ᐃᐃΔⲆⵠᐃᐃ": 11021187,
			"ⲆⵠΔⲆᐃⵠⲆ": 167459
		};
		if (ᐃⲆΔⵠᐃΔᐃ[ⵠᐃΔΔΔⵠΔ] !== ᐃⲆΔⵠᐃΔᐃ.ᐃᐃΔⲆⵠᐃᐃ) {
			const ᐃᐃΔⲆⵠᐃᐃ = function() {
				ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
					ᐃᐃΔⲆⵠᐃᐃ()
				}))
			};
			ᐃᐃΔⲆⵠᐃᐃ()
		}
	};
	ⵠⵠⲆᐃⲆⲆΔ();
	const ᐃΔⵠⵠ = ΔⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = {
		name: "Cooked meat",
		"ⵠⵠ": Δ.ᐃⲆⵠⵠⲆΔΔ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃᐃΔΔ] = {
		name: "Big campfire",
		"ⵠⵠ": Δ.ΔΔΔⲆΔᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	const ΔⲆⵠᐃᐃ = ᐃᐃΔⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = {
		name: "Bandage",
		"ⵠⵠ": Δ.ⵠⲆᐃⵠⵠᐃᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃᐃΔⲆ] = {
		name: "Stone wall",
		"ⵠⵠ": Δ.ⵠΔᐃᐃᐃⵠⲆ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⵠⵠⵠ] = {
		name: "Gold wall",
		"ⵠⵠ": Δ.ΔⲆᐃᐃᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠΔⵠⲆᐃΔΔ = ᐃΔⵠᐃΔΔΔ;
	const ᐃΔⲆⵠⵠΔⵠ = ⵠΔⵠᐃⵠ;
	const ⲆᐃΔᐃᐃ = ⵠⲆⵠⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔΔᐃ] = {
		name: "Diamond wall",
		"ⵠⵠ": Δ.ᐃΔᐃᐃⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃᐃⲆⲆⲆⲆΔ = ΔⵠⵠⵠⵠⵠΔ;
	const ᐃΔⵠΔΔⵠⲆ = ΔⵠᐃΔΔ;
	const ⵠᐃⲆⲆΔΔⲆᐃⲆ = ΔⲆⲆΔⲆᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔᐃΔⵠ] = {
		name: "Wood door",
		"ⵠⵠ": Δ.ΔⵠΔΔⵠΔⲆ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ΔⵠᐃⲆᐃᐃΔ = ⲆⲆᐃΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠΔⲆᐃ] = {
		name: "Chest",
		"ⵠⵠ": Δ.ᐃⲆΔⲆᐃΔⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⵠΔⵠ] = {
		name: "Stone spike",
		"ⵠⵠ": Δ.ΔᐃΔⲆⵠᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.Δⵠⵠᐃⵠ] = {
		name: "Gold spike",
		"ⵠⵠ": Δ.ⲆⲆᐃᐃⲆΔΔ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⵠⲆΔ] = {
		name: "Diamond spike",
		"ⵠⵠ": Δ.ΔΔⲆΔⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃᐃⲆⵠ] = {
		name: "Stone door",
		"ⵠⵠ": Δ.ⲆᐃⵠⲆΔᐃΔ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = {
		name: "Gold door",
		"ⵠⵠ": Δ.ⲆⲆᐃΔΔⵠᐃ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ᐃᐃΔᐃ
	};
	const ΔΔⵠᐃ = ⲆⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆᐃΔᐃ] = {
		name: "Diamond door",
		"ⵠⵠ": Δ.ΔΔΔΔⲆΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃᐃΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = {
		name: ⵠ[416],
		"ⵠⵠ": Δ.ΔⲆⵠⲆᐃᐃⵠ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠⵠᐃᐃᐃΔΔ = ΔΔⲆⲆⲆⲆᐃ;
	const ᐃΔⲆᐃᐃᐃΔ = ⲆΔΔⵠΔⲆⵠ;
	const ⲆᐃᐃⲆⵠΔⲆ = ΔΔᐃΔⵠᐃⵠ;
	const ⵠΔᐃΔᐃ = ᐃᐃⲆᐃᐃ;
	const ⵠⲆⲆᐃⵠ = ᐃⵠⲆⲆΔ;
	const ΔⲆᐃⲆⲆΔⵠ = ΔⵠᐃⵠΔⵠⲆ;
	const ΔⵠΔⲆΔⲆΔ = ᐃⲆᐃⲆΔ;
	const Δᐃᐃᐃᐃᐃᐃ = ⵠⵠᐃᐃΔⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆΔᐃ] = {
		name: "Big Chapka",
		"ⵠⵠ": Δ.ΔᐃΔⵠⵠⵠΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ΔᐃᐃⵠⲆⲆᐃ = ⵠΔⲆⲆᐃ;
	const ΔⵠΔᐃⵠᐃΔ = ⵠⵠΔⵠΔ;
	const ⲆΔΔⵠΔ = ΔᐃΔΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔΔⲆⵠ] = {
		name: "Wood spear",
		"ⵠⵠ": Δ.ᐃⲆⲆᐃΔⵠⵠ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⵠᐃⵠ] = {
		name: "Stone spear",
		"ⵠⵠ": Δ.ⵠⵠⲆᐃⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	const ⵠⲆⵠΔⵠⵠⵠⵠᐃ = ΔⵠⵠⵠΔⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆΔᐃⲆ] = {
		name: "Gold spear",
		"ⵠⵠ": Δ.ⵠᐃΔⲆΔⵠᐃ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	const ΔᐃⲆⲆⵠΔᐃ = ᐃⲆΔⲆⵠⵠⲆ;
	const ΔᐃⵠᐃⵠᐃΔ = ᐃⵠΔⲆⲆ;
	const ΔᐃΔΔⵠⲆⲆ = ΔΔⵠᐃⵠⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆᐃᐃ] = {
		name: "Diamond spear",
		"ⵠⵠ": Δ.ⲆⲆⵠΔΔⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ⲆΔⵠΔᐃ = ⲆⵠΔΔⵠ;
	const ⵠΔΔᐃ = ΔⲆΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠΔᐃⵠ] = {
		name: "Dragon spear",
		"ⵠⵠ": Δ.ΔⵠⵠⵠᐃᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⲆΔΔ] = {
		name: "Dragon spear",
		"ⵠⵠ": Δ.ⲆⵠᐃⲆⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = {
		name: "Crab spear",
		"ⵠⵠ": Δ.ᐃᐃⵠⲆΔΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ΔᐃⲆⵠⲆ = ΔΔᐃⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = {
		name: "Crab loot",
		"ⵠⵠ": Δ.ⲆⲆΔΔⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃⲆ
	};
	const ⵠⲆⵠⵠⲆ = ⵠΔΔΔⲆ;
	const ⵠⲆᐃΔⲆΔΔᐃᐃ = ⵠⲆᐃΔΔⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = {
		name: "Furnace",
		"ⵠⵠ": Δ.ΔⵠⲆΔΔΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = {
		name: "Explorer hat",
		"ⵠⵠ": Δ.ⵠᐃᐃᐃΔⲆᐃ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	const ᐃⵠᐃⵠⲆ = ⵠⲆⵠⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆΔΔⵠ] = {
		name: "Pirate hat",
		"ⵠⵠ": Δ.ΔⵠⲆⵠⵠΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ΔᐃⲆΔⵠ = ⵠΔΔΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃᐃⵠΔ] = {
		name: "Flower hat",
		"ⵠⵠ": Δ.ΔΔⲆⵠⵠⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠⲆⲆΔⵠⵠⵠ = ᐃⵠᐃᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⵠⵠᐃ] = {
		name: "Fur hat",
		"ⵠⵠ": Δ.ΔⵠⲆⲆᐃⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ΔⲆᐃⲆΔ = ΔᐃΔΔΔ;
	const ⲆⲆΔΔᐃ = ΔΔⵠΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.Δᐃⵠᐃⵠ] = {
		name: "Wood helmet",
		"ⵠⵠ": Δ.ᐃⲆⲆⲆⲆΔᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	const ᐃᐃΔᐃΔⵠⲆ = ⵠΔⲆᐃⲆᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔⵠⵠⵠ] = {
		name: "Stone helmet",
		"ⵠⵠ": Δ.ᐃⵠᐃᐃⲆᐃᐃ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ΔⵠΔΔ = ⵠᐃⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = {
		name: "Gold helmet",
		"ⵠⵠ": Δ.ⲆⲆⲆᐃⲆⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⵠΔⲆⵠⲆⲆ = ΔΔⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⵠⲆⵠ] = {
		name: "Diamond helmet",
		"ⵠⵠ": Δ.ΔⵠⲆᐃⲆⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃⵠⲆΔ] = {
		name: "Book",
		"ⵠⵠ": Δ.ⲆⵠΔΔᐃΔᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆΔⲆᐃⵠᐃΔ = ⵠⲆⲆᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⲆΔᐃ] = {
		name: "Paper",
		"ⵠⵠ": Δ.ⲆΔᐃⲆⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔⵠ] = {
		name: "Bag",
		"ⵠⵠ": Δ.ᐃᐃⲆΔᐃⵠⵠ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃΔⲆⲆ] = {
		name: "Amethyst sword",
		"ⵠⵠ": Δ.ᐃᐃᐃⲆᐃᐃᐃ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔΔᐃΔ] = {
		name: "Amethyst pick",
		"ⵠⵠ": Δ.ΔΔᐃᐃᐃⵠⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃᐃΔᐃ
	};
	const ⲆⵠⵠⲆΔⲆⲆⵠᐃ = ΔΔⵠⲆᐃⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = {
		name: "Amethyst spear",
		"ⵠⵠ": Δ.ᐃⵠⲆⵠᐃⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ΔⵠΔⲆⲆⵠᐃ = "";

	function ⲆⲆᐃᐃⲆΔᐃ(ⲆΔΔᐃⵠⵠⲆ) {
		if (ⲆΔΔᐃⵠⵠⲆ > 0) return ⲆΔΔᐃⵠⵠⲆ * ⲆΔΔᐃⵠⵠⲆ;
		else return ⲆΔΔᐃⵠⵠⲆ
	}

	function ⵠᐃⵠⲆⵠⵠᐃ(ⲆΔⲆⲆᐃⵠⲆ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ⲆΔⲆⲆᐃⵠⲆ)
	}

	function ⵠⵠⲆⲆᐃⵠΔΔⲆ(ᐃⵠΔᐃᐃᐃΔΔΔ) {
		return ᐃⵠΔᐃᐃᐃΔΔΔ.map(ⵠᐃⵠⲆⵠⵠᐃ).join(ΔⵠΔⲆⲆⵠᐃ)
	}

	function ΔΔΔⵠΔᐃⲆ(ⲆⵠᐃᐃⲆΔᐃⲆᐃ) {
		const ΔⲆᐃΔⵠⲆⲆ = ⲆⲆᐃᐃⲆΔᐃ[ⲆⵠΔᐃᐃᐃΔ[274]]();
		const ⵠᐃᐃⲆⲆΔᐃ = ΔⲆᐃΔⵠⲆⲆ.indexOf(ⲆⵠᐃᐃⲆΔᐃⲆᐃ);
		return ⵠᐃᐃⲆⲆΔᐃ !== -1 ? 1 : 0
	}
	const ΔⲆᐃᐃΔⲆΔᐃᐃ = ΔΔΔⵠΔᐃⲆ(ⵠⵠⲆⲆᐃⵠΔΔⲆ([11398, 11398, 5123, 5123, 11398, 916, 5123]));
	if (ΔⲆᐃᐃΔⲆΔᐃᐃ === 0) {
		const ΔⲆᐃᐃΔⲆΔᐃᐃ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]];
		const ⵠᐃᐃⲆⲆΔᐃ = ΔⲆᐃᐃΔⲆΔᐃᐃ;
		const ⲆⲆᐃᐃⲆΔᐃ = function() {
			ΔⲆᐃᐃΔⲆΔᐃᐃ(ⲆⲆᐃᐃⲆΔᐃ, 6001);
			ⵠᐃᐃⲆⲆΔᐃ(ⲆⲆᐃᐃⲆΔᐃ, 5483)
		};
		ⲆⲆᐃᐃⲆΔᐃ()
	}
	const ⵠᐃΔΔⲆ = ΔⲆΔⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔⲆᐃ] = {
		name: "Stone hammer",
		"ⵠⵠ": Δ.ᐃⵠⲆΔⵠΔᐃ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆΔⲆⵠ] = {
		name: "Gold hammer",
		"ⵠⵠ": Δ.ᐃᐃⲆⵠΔⲆΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆⵠⵠⲆᐃⵠᐃ = ᐃΔⲆⵠⵠΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃΔⵠᐃ] = {
		name: "Diamond hammer",
		"ⵠⵠ": Δ.ⵠⵠΔⵠᐃⵠΔ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⵠⵠᐃ] = {
		name: "Amethyst hammer",
		"ⵠⵠ": Δ.ⵠⲆΔⵠⵠⲆⵠ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": ᐃⵠⵠ
	};
	const ΔⲆΔⵠⲆⵠⲆ = ⲆⵠΔᐃΔⲆᐃ;
	const ⲆⲆⲆⵠΔᐃΔΔⵠ = Δⵠᐃᐃᐃⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⵠᐃⵠ] = {
		name: "Reidite hammer",
		"ⵠⵠ": Δ.ⲆⲆΔᐃΔᐃᐃ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⵠΔⲆ] = {
		name: "Amethyst wall",
		"ⵠⵠ": Δ.ΔΔⵠⵠᐃⲆⵠ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ᐃⵠⵠ
	};
	var ⵠΔⵠⵠΔⵠⵠ = ⲆⲆⲆⲆᐃᐃᐃ.console;
	ⵠΔⵠⵠΔⵠⵠ.log = ⵠΔⵠⵠΔⵠⵠ.info = ⵠΔⵠⵠΔⵠⵠ.error = ⵠΔⵠⵠΔⵠⵠ.warn = ⵠΔⵠⵠΔⵠⵠ.debug = ⵠΔⵠⵠΔⵠⵠ.ΔΔΔⵠΔᐃΔΔΔ = ⵠΔⵠⵠΔⵠⵠ.trace = ⵠΔⵠⵠΔⵠⵠ.time = ⵠΔⵠⵠΔⵠⵠ.timeEnd = function() {};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠΔⲆᐃ] = {
		name: "Amethyst spike",
		"ⵠⵠ": Δ.ⵠΔⵠⵠᐃⲆΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃΔΔⲆⵠ = ⲆΔⲆᐃⲆ;
	const ΔⵠⵠΔᐃⲆᐃ = ⲆΔΔⲆΔ;
	const ⲆΔᐃⲆ = ⲆⲆΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⵠᐃΔ] = {
		name: "Amethyst door",
		"ⵠⵠ": Δ.ᐃᐃⵠΔⲆⵠΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆᐃⲆⵠ] = {
		name: "Cap & scarf",
		"ⵠⵠ": Δ.ⵠΔΔᐃⵠⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⵠΔᐃ] = {
		name: "Blue cord",
		"ⵠⵠ": Δ.ΔΔⲆΔᐃᐃᐃ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = {
		name: "Lock",
		"ⵠⵠ": Δ.ᐃⲆⵠΔⲆᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	const ⲆⲆⲆᐃⲆΔΔⵠⵠ = ⲆⲆΔᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⵠΔΔ] = {
		name: "Resurrection",
		"ⵠⵠ": Δ.ΔⲆΔⲆΔⵠᐃ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠᐃᐃΔᐃ = ᐃⵠⲆⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⲆᐃΔ] = {
		name: "Lockpick",
		"ⵠⵠ": Δ.ⲆᐃᐃⵠⲆΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⲆΔᐃ] = {
		name: ⵠ[330],
		"ⵠⵠ": Δ.ΔᐃⲆⲆⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⵠⲆΔⵠ = ⵠΔⲆᐃⲆ;
	const ᐃⲆᐃᐃΔⵠⵠ = ᐃⵠΔⲆᐃⵠᐃ;
	const ⲆΔᐃΔⲆⵠⲆ = ᐃΔⵠⲆΔᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⲆΔⵠ] = {
		name: "Amethyst helmet",
		"ⵠⵠ": Δ.ᐃⲆΔⲆᐃⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃᐃΔⵠⵠ = ⲆⲆᐃᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔᐃⵠⵠ] = {
		name: "Super hammer",
		"ⵠⵠ": Δ.ⲆᐃᐃⲆΔⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	const Δⵠⵠⵠⵠ = ΔᐃⲆΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔᐃΔΔ] = {
		name: "Bridge",
		"ⵠⵠ": Δ.ΔᐃᐃᐃⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": 1,
		"ⲆⵠⲆΔ": 1
	};
	const ΔⵠⲆⲆⵠⵠΔ = ⲆⲆΔᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃᐃⵠⵠ] = {
		name: "Wood Tower",
		"ⵠⵠ": Δ.ΔΔⵠΔᐃⲆΔ,
		"Ⲇᐃᐃᐃ": ΔⲆᐃ,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔⲆⵠ] = {
		name: "Bottle full",
		"ⵠⵠ": Δ.ᐃΔⵠⲆᐃⵠᐃ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = {
		name: "Bottle empty",
		"ⵠⵠ": Δ.ᐃΔᐃⵠΔΔⲆ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = {
		name: "Stone shovel",
		"ⵠⵠ": Δ.ⵠⲆⵠⵠᐃᐃᐃ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ᐃⵠⵠ
	};
	const ΔᐃᐃΔⲆΔᐃ = ᐃΔΔᐃⵠΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⲆⲆΔ] = {
		name: "Watering can",
		"ⵠⵠ": Δ.ⵠᐃᐃᐃᐃⵠⵠ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	const ⲆⵠΔⲆⲆ = ⲆΔⵠᐃⲆ;
	const ᐃΔᐃⲆ = {};
	const ᐃⵠⵠᐃΔᐃΔ = {};
	ᐃΔᐃⲆ["get"] = function(ᐃⲆΔⵠⲆᐃⲆⲆΔ, ⲆΔⲆⲆᐃΔⲆ) {
		if (ⲆΔⲆⲆᐃΔⲆ !== "ᐃΔᐃⲆ") {
			const ᐃΔᐃⲆ = function() {
				ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
					ᐃΔᐃⲆ()
				}))
			};
			ᐃΔᐃⲆ()
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ⲆⵠΔⲆΔᐃⲆ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ᐃⵠⵠᐃΔᐃΔ, ᐃΔᐃⲆ);
	const Δⵠᐃⵠ = ⲆⵠΔⲆΔᐃⲆ.ᐃΔᐃⲆ;
	const ᐃⵠⵠⲆΔΔⲆ = 2743551;

	function Ⲇᐃⵠᐃᐃⵠᐃ(ⵠΔΔⲆⲆᐃⲆ) {
		const ᐃⵠⵠⲆΔΔⲆ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]];
		const ᐃⵠⵠᐃⲆⵠⲆⵠⵠ = ᐃⵠⵠⲆΔΔⲆ;
		const ΔⲆᐃⵠΔΔᐃ = function() {
			ᐃⵠⵠⲆΔΔⲆ(ΔⲆᐃⵠΔΔᐃ, 3231);
			ᐃⵠⵠᐃⲆⵠⲆⵠⵠ(ΔⲆᐃⵠΔΔᐃ, 5846)
		};
		ΔⲆᐃⵠΔΔᐃ()
	}
	const ⵠΔΔⲆⲆᐃⲆ = Ⲇᐃⵠᐃᐃⵠᐃ + ";" + "let ⵠΔΔⲆⲆᐃⲆ = " + Ⲇᐃⵠᐃᐃⵠᐃ + ";";
	const ᐃⵠⵠᐃⲆⵠⲆⵠⵠ = ⵠΔΔⲆⲆᐃⲆ + "let ΔⲆᐃⵠΔΔᐃ = 14237353; try { ΔⲆᐃⵠΔΔᐃ = Ⲇᐃⵠᐃᐃⵠᐃ; } catch (ΔᐃΔⲆᐃⵠⲆ) { ⵠΔΔⲆⲆᐃⲆ (); };";
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃⵠⵠᐃⲆⵠⲆⵠⵠ, 0);
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆΔⲆ] = {
		name: "Wheat",
		"ⵠⵠ": Δ.ᐃⵠᐃⵠⵠᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⵠⲆ
	};
	const ⵠᐃⵠⵠΔⵠⲆ = ⲆⵠᐃᐃⲆ;
	const ᐃⲆⲆⵠΔⵠᐃ = ᐃⵠᐃⲆⵠΔᐃ;
	const ᐃⵠᐃⵠᐃ = ᐃⵠⲆΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠᐃⲆΔ] = {
		name: "Cookie",
		"ⵠⵠ": Δ.ΔᐃⲆᐃᐃⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⲆⲆ
	};
	const Ⲇᐃⵠⵠ = ΔⵠⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⲆΔΔ] = {
		name: "Windmill",
		"ⵠⵠ": Δ.ⲆⲆⲆΔᐃⵠᐃ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ᐃᐃᐃⵠΔⲆᐃ = ⲆⲆΔᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔᐃΔΔ] = {
		name: "Super diving suit",
		"ⵠⵠ": Δ.ⵠᐃⵠⵠⵠⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆΔⲆᐃ] = {
		name: "Diving mask",
		"ⵠⵠ": Δ.ΔᐃΔᐃⵠΔⵠ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	const ΔⵠᐃⵠᐃⲆⵠ = ΔΔᐃΔΔᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆΔⵠ] = {
		name: "Watering can full",
		"ⵠⵠ": Δ.ⵠΔⲆⲆⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠⲆᐃᐃ = ᐃⵠⲆⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆⲆΔ] = {
		name: "Cake",
		"ⵠⵠ": Δ.ΔᐃΔᐃⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": Δⵠⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔᐃᐃᐃ] = {
		name: "Foodfish cooked",
		"ⵠⵠ": Δ.ᐃΔⲆᐃⲆᐃΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ΔΔⵠᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = {
		name: "Plot",
		"ⵠⵠ": Δ.ᐃⵠⵠⲆᐃΔⵠ,
		"Ⲇᐃᐃᐃ": 1,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	const ⵠⵠⵠΔΔ = ⵠⲆⵠⵠⲆ;
	const ᐃⲆᐃᐃᐃ = ΔΔⵠΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆΔⵠᐃ] = {
		name: "Bread",
		"ⵠⵠ": Δ.ⲆⲆΔᐃⵠΔΔ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 0
	};
	const ⲆΔᐃⵠΔ = ΔᐃⵠⲆⵠ;
	const ᐃⵠⵠΔΔΔⲆ = ΔᐃᐃⵠⲆⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠᐃΔᐃΔⲆ] = {
		name: "Bottle full (with ice)",
		"ⵠⵠ": Δ.ⲆⵠΔⵠⵠᐃⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ⵠⵠᐃⲆⵠⲆΔ = ⲆⵠᐃΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⲆΔΔᐃⵠ] = {
		name: "Bottle full (with well)",
		"ⵠⵠ": Δ.ᐃΔⵠⵠⲆⵠΔⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ΔⲆⲆⵠⵠⲆⵠ = ΔΔᐃⲆⲆ;
	const ⲆᐃᐃΔᐃⲆᐃ = ⲆΔᐃⲆⵠ;
	const ᐃᐃⵠⲆᐃⲆΔ = ⲆⵠⲆⲆⲆⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = {
		name: "Gold shovel",
		"ⵠⵠ": Δ.ΔᐃⲆΔⲆᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠΔⲆΔ] = {
		name: "Diamond shovel",
		"ⵠⵠ": Δ.ΔⵠⲆΔΔᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆᐃⲆ,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠΔⲆⵠΔᐃⵠ = ΔⲆΔⵠⵠΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = {
		name: "Amethyst shovel",
		"ⵠⵠ": Δ.ΔⵠᐃⲆⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔΔΔΔ] = {
		name: "Spanner",
		"ⵠⵠ": Δ.ⵠᐃⲆⵠᐃⲆⲆ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	const ᐃⵠⲆⲆᐃⵠⲆ = ᐃᐃΔⲆΔⵠⵠ;
	const ⵠⲆΔⵠΔΔⲆ = ⵠΔⵠⲆᐃⵠᐃ;
	const ⲆⲆᐃΔᐃⵠⲆ = ᐃᐃᐃΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⵠⵠᐃ] = {
		name: "Machete",
		"ⵠⵠ": Δ.ΔⲆⵠⲆᐃⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆΔⵠ] = {
		name: "Bread oven",
		"ⵠⵠ": Δ.ᐃΔΔⵠⵠⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆᐃⵠⵠⵠΔΔ = ⵠⲆⵠⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆᐃⲆ] = {
		name: ⵠ[538],
		"ⵠⵠ": Δ.ΔᐃⵠΔΔⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⵠⲆ
	};
	const ⲆΔⲆᐃᐃⲆⵠ = ⵠⵠΔΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆΔᐃ] = {
		name: "Dragon helmet",
		"ⵠⵠ": Δ.ⲆⲆΔΔⵠᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⵠⲆᐃ] = {
		name: "Dragon helmet",
		"ⵠⵠ": Δ.ⲆⲆΔΔⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	const ΔⵠΔⲆⲆⲆⲆ = ⵠⵠΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⵠⵠᐃ] = {
		name: "Witch",
		"ⵠⵠ": Δ.ΔⲆΔᐃΔᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	const ΔΔⲆᐃ = ΔⲆᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃΔⵠⵠ] = {
		name: "Nimbus",
		"ⵠⵠ": Δ.ΔⲆΔⲆΔⲆΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ⵠᐃⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆᐃⵠⲆ] = {
		name: "Wand1",
		"ⵠⵠ": Δ.ΔΔᐃΔΔΔⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆΔⲆ] = {
		name: "Wand2",
		"ⵠⵠ": Δ.ᐃⵠⲆⵠᐃⲆᐃ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃᐃⲆΔΔΔᐃ = ⵠᐃⵠⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆΔΔⵠ] = {
		name: "Dragon sword",
		"ⵠⵠ": Δ.ᐃⵠⲆΔΔⵠⲆ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ΔⲆᐃⲆ
	};
	const ⵠΔᐃⲆⵠᐃᐃ = ΔΔⲆΔΔ;
	const ΔΔΔᐃⵠᐃⵠ = ΔᐃᐃΔⲆΔᐃ;
	const ⲆⵠΔΔΔⲆᐃ = ⵠⵠᐃᐃΔⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃΔⲆⵠ] = {
		name: "Dragon sword",
		"ⵠⵠ": Δ.ⵠᐃⵠⲆⵠΔⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠΔΔᐃᐃⲆⲆ = ᐃⵠΔΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠᐃⲆᐃ] = {
		name: "Wood shield",
		"ⵠⵠ": Δ.ΔⲆⵠⵠⲆⵠΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	const ΔᐃΔⵠⵠⲆᐃ = ᐃⲆᐃᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠΔⲆΔ] = {
		name: "Stone shield",
		"ⵠⵠ": Δ.ⵠΔⲆⲆᐃΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	const ⵠⵠΔⲆⵠᐃΔ = ΔⲆᐃⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔⲆΔΔ] = {
		name: "Gold shield",
		"ⵠⵠ": Δ.ⲆⵠᐃⵠΔΔⲆ,
		"Ⲇᐃᐃᐃ": ΔΔⲆᐃ,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔⲆΔ] = {
		name: "Diamond shield",
		"ⵠⵠ": Δ.ⵠⵠΔⲆⲆⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆΔΔΔ] = {
		name: "Amethyst shield",
		"ⵠⵠ": Δ.ᐃⵠⲆΔⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆⲆᐃΔⵠⲆᐃ = ᐃΔⵠⲆΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⵠⲆⵠ] = {
		name: "Reidite shield",
		"ⵠⵠ": Δ.ⲆⵠΔⵠⲆⵠⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃΔᐃⲆⵠΔⲆ = ΔⲆⲆⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⵠⲆⲆ] = {
		name: "Wood axe",
		"ⵠⵠ": Δ.ⵠΔⵠⵠⵠᐃΔ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠΔⵠᐃ] = {
		name: "Stone axe",
		"ⵠⵠ": Δ.ⵠⲆⲆⵠⲆⲆᐃ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ⵠⲆⲆ
	};
	const ⲆΔⲆⲆⵠᐃΔ = ᐃⲆΔⲆΔⲆᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔᐃⵠⵠ] = {
		name: "Gold axe",
		"ⵠⵠ": Δ.ⲆⲆΔΔᐃⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	const ᐃᐃΔᐃⵠΔᐃⵠⲆ = ⲆⲆΔⵠⲆΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠΔΔᐃ] = {
		name: "Diamond axe",
		"ⵠⵠ": Δ.ΔⵠⲆⲆᐃⲆⲆ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⲆⲆΔ = ΔⵠΔΔ;
	const ⲆᐃΔⵠᐃⲆΔ = ᐃⵠᐃⲆⵠΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔⵠⵠΔ] = {
		name: "Amethyst axe",
		"ⵠⵠ": Δ.ᐃᐃⵠⲆⲆⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃᐃΔᐃ
	};
	const ΔΔᐃΔᐃⵠⵠⵠⲆ = ⵠᐃⲆⵠΔᐃⵠ;
	const ⲆΔᐃⵠⲆⵠΔ = ᐃⲆᐃⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⵠΔΔ] = {
		name: "Reidite axe",
		"ⵠⵠ": Δ.ⲆⲆᐃⲆΔⲆᐃ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⵠᐃⵠ] = {
		name: "Wood bow",
		"ⵠⵠ": Δ.ⲆⲆⲆΔⵠⲆⵠ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆΔⵠⵠⲆᐃΔ = ᐃⲆᐃⵠⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆΔⵠΔ] = {
		name: "Stone bow",
		"ⵠⵠ": Δ.ᐃΔⲆⲆᐃᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃΔⲆⵠ = ⵠⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⲆΔⵠ] = {
		name: "Gold bow",
		"ⵠⵠ": Δ.ΔΔⲆⵠΔⲆⵠ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠⲆᐃⵠⵠ = ⲆΔⲆΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆΔⲆⲆ] = {
		name: "Diamond bow",
		"ⵠⵠ": Δ.ⵠⲆⵠⲆΔⵠΔ,
		"Ⲇᐃᐃᐃ": ΔⲆᐃⲆ,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆⵠᐃΔΔ = ΔᐃΔΔΔ;
	const ᐃᐃⲆᐃΔ = ⲆΔᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆᐃⵠⵠ] = {
		name: "Amethyst bow",
		"ⵠⵠ": Δ.ΔΔᐃⲆᐃⵠᐃ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔⵠΔ] = {
		name: "Reidite bow",
		"ⵠⵠ": Δ.ⲆΔᐃᐃᐃⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃΔΔⲆ] = {
		name: "Dragon bow",
		"ⵠⵠ": Δ.ⲆⲆⵠⵠⲆⵠᐃ,
		"Ⲇᐃᐃᐃ": ΔⲆᐃⲆ,
		"ⲆⵠⲆΔ": ⲆⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = {
		name: "Crown of life",
		"ⵠⵠ": Δ.ⵠᐃⲆΔⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠΔΔⲆ] = {
		name: "Gem of life",
		"ⵠⵠ": Δ.ⲆⵠᐃⲆΔⵠⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃΔⵠⵠ
	};
	const ᐃⲆⲆΔΔⲆΔ = ⵠΔⵠᐃⵠΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⲆⲆΔ] = {
		name: "Orb of the dragon",
		"ⵠⵠ": Δ.ᐃⵠⲆⲆΔᐃⵠ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ⲆᐃΔⵠⵠ = ⲆΔΔⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆᐃᐃΔ] = {
		name: "Orb of the dragon",
		"ⵠⵠ": Δ.ᐃᐃᐃⲆΔΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = {
		name: "Cube of the dragon",
		"ⵠⵠ": Δ.ⲆⵠⵠΔᐃⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⵠᐃⲆ] = {
		name: "Cube of the dragon",
		"ⵠⵠ": Δ.ⲆᐃⲆⲆⵠⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆᐃⲆ
	};
	const ⲆᐃᐃΔᐃ = ᐃᐃᐃⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠΔⵠⲆ] = {
		name: "Crown of luck",
		"ⵠⵠ": Δ.ᐃⲆⲆⵠᐃⲆᐃ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⲆⵠΔ] = {
		name: "Gem of luck",
		"ⵠⵠ": Δ.ΔⲆⵠⵠΔⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃⵠΔ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = {
		name: "Crown of the angel",
		"ⵠⵠ": Δ.ΔΔⵠᐃⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⲆⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = {
		name: "Gem of the angel",
		"ⵠⵠ": Δ.ⲆⵠⲆΔⲆΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⲆⲆ
	};
	const ⵠⵠΔⲆ = ⵠⲆΔΔ;
	const ᐃΔΔⲆⲆΔΔ = ᐃⲆⵠᐃⲆᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⵠⵠΔ] = {
		name: "Dragon heart",
		"ⵠⵠ": Δ.ΔΔᐃⵠⵠⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠⵠΔᐃ] = {
		name: "Lava heart",
		"ⵠⵠ": Δ.ᐃΔⵠΔⵠΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ΔⲆΔΔⵠ = ᐃⵠⲆⵠⵠ;
	const ⲆⲆᐃⵠⵠⵠⲆ = ᐃⲆΔᐃΔΔΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆΔᐃⵠ] = {
		name: "Hood",
		"ⵠⵠ": Δ.ⵠΔⲆΔⲆⵠⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ΔⵠᐃΔΔⵠⵠᐃⲆ = ⲆⲆᐃΔᐃⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔᐃᐃΔ] = {
		name: "Peasant",
		"ⵠⵠ": Δ.ⲆⲆᐃⲆⵠᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ⲆⲆΔⵠΔᐃΔ = ΔΔⲆⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⵠⲆⲆ] = {
		name: "Winter peasant",
		"ⵠⵠ": Δ.ᐃᐃⵠᐃΔⵠⵠ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃΔΔⵠ] = {
		name: "Winter hood",
		"ⵠⵠ": Δ.ᐃⵠΔⲆΔⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠΔΔⵠ] = {
		name: "Bucket full",
		"ⵠⵠ": Δ.ΔΔΔⲆⵠⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	const ⵠⵠⲆⵠΔ = ⲆⵠⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = {
		name: "Bucket empty",
		"ⵠⵠ": Δ.ⵠⲆⵠΔᐃΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⵠᐃⲆⲆⲆ = ⲆΔᐃⵠΔ;
	const ΔᐃΔⲆⵠⲆᐃ = ⲆΔᐃΔⲆ;
	const ᐃⵠⵠΔⵠ = ᐃⲆΔΔᐃ;
	const ⲆᐃⵠΔᐃⵠⲆ = ⵠΔⲆⵠΔᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆΔⲆⵠⲆ] = {
		name: "Well",
		"ⵠⵠ": Δ.ⵠᐃⵠᐃⵠᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ΔⲆΔᐃⲆΔⲆⵠⵠ = Ⲇᐃᐃᐃⵠᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = {
		name: "Sign",
		"ⵠⵠ": Δ.ᐃⵠⵠⵠⵠΔⵠ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⲆⵠΔ] = {
		name: "Pumpkin Seed",
		"ⵠⵠ": Δ.ΔΔⵠⵠᐃΔⲆ,
		"Ⲇᐃᐃᐃ": ΔΔⲆᐃ,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠΔⵠᐃ] = {
		name: "Garlic Seed",
		"ⵠⵠ": Δ.ᐃΔⵠⵠⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠⲆⵠᐃΔᐃΔ = ᐃᐃᐃΔᐃ;
	const ΔᐃᐃⵠΔ = ⲆⵠⲆⲆⲆΔⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = {
		name: "Thorbushes Seed",
		"ⵠⵠ": Δ.ⲆⵠⲆΔᐃⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ᐃⵠᐃᐃ = ⲆⵠⲆⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔⲆᐃⵠ] = {
		name: "Roof",
		"ⵠⵠ": Δ.ⵠⵠⲆⵠΔⵠⵠ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃⲆ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⲆΔⵠ] = {
		name: "Crab Crown",
		"ⵠⵠ": Δ.ΔᐃᐃᐃⲆⵠΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": 1
	};
	const Ⲇⵠⵠⵠⵠ = ⲆⵠⲆᐃᐃ;
	const ᐃⵠⲆⲆ = ⲆⵠΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⲆᐃᐃ] = {
		name: "Carrot Seed",
		"ⵠⵠ": Δ.ⵠⵠᐃⲆᐃᐃΔ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ⲆⵠⲆⵠᐃ = ΔΔⵠᐃⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠⲆⲆᐃ] = {
		name: "Tomato Seed",
		"ⵠⵠ": Δ.ΔΔᐃⲆΔⵠⵠ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃⲆΔⲆ] = {
		name: "Watermelon Seed",
		"ⵠⵠ": Δ.ⵠⵠΔᐃΔΔⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠᐃᐃΔ] = {
		name: "Aloe Vera Seed",
		"ⵠⵠ": Δ.ΔⵠΔΔⲆᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠⵠⲆΔΔⵠⵠᐃⲆ = ᐃⲆⵠⵠᐃⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⵠⵠΔ] = {
		name: "Cap",
		"ⵠⵠ": Δ.ᐃᐃᐃᐃⲆΔⲆ,
		"Ⲇᐃᐃᐃ": ΔⲆⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⲆΔΔᐃⵠΔ = ⵠⲆⲆΔΔⵠⲆ;
	const ⲆⲆⵠⲆⵠⵠΔⲆΔ = ⵠⲆᐃΔΔⲆᐃ;
	const ΔⲆⵠⲆⲆ = ⵠΔⵠⵠⲆ;
	const ΔΔⲆᐃᐃ = ⵠⲆⲆᐃⵠ;
	const ⲆⵠⲆΔⲆᐃⵠ = ⲆⲆΔᐃⵠ;
	var ΔⵠⲆⲆΔΔΔ = ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos;
	ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos = ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin;
	ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin = ΔⵠⲆⲆΔΔΔ;
	var ⲆⲆΔᐃᐃⵠΔ = ⲆⲆⲆⲆᐃᐃᐃ["Math"].cos;
	ⲆⲆⲆⲆᐃᐃᐃ["Math"].cos = ⲆⲆⲆⲆᐃᐃᐃ["Math"].sin;
	ⲆⲆⲆⲆᐃᐃᐃ["Math"].sin = ⲆⲆΔᐃᐃⵠΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃᐃⵠΔ] = {
		name: "Turban",
		"ⵠⵠ": Δ.ⵠⲆⲆⵠⵠΔΔ,
		"Ⲇᐃᐃᐃ": ᐃΔⵠⵠ,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⵠⵠΔⲆ = ⵠᐃⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠΔᐃᐃ] = {
		name: "Pilot Helmet",
		"ⵠⵠ": Δ.Δᐃᐃᐃⵠⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃᐃⲆΔΔΔⲆ = ⲆᐃⲆΔⵠᐃⵠ;
	var ΔⵠᐃᐃⲆⵠᐃ = 146;
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔΔΔΔ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⵠΔΔᐃⵠⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆⵠ
	};
	const ΔᐃⲆⲆᐃ = ⲆⲆᐃⵠⲆ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆᐃΔⲆ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⵠΔΔⲆΔΔⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃΔⲆΔ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⲆᐃⵠΔⲆⵠⵠ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⵠⲆⲆ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⵠⵠⵠⲆⵠⲆΔ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": ᐃΔⲆⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔᐃⵠⲆ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⲆⲆⵠΔⵠⵠΔ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆᐃΔⵠ] = {
		name: ⵠ[331],
		"ⵠⵠ": Δ.ⲆΔΔᐃⵠᐃᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠΔΔᐃⲆ] = {
		name: "Pitchfork",
		"ⵠⵠ": Δ.ᐃⲆΔⲆⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⵠⵠⲆⲆ] = {
		name: "Wood Door Spike",
		"ⵠⵠ": Δ.ᐃᐃᐃᐃΔⵠΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	const ⲆⵠΔⲆΔΔⵠ = ᐃⲆⵠᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔⵠⵠ] = {
		name: "Stone Door Spike",
		"ⵠⵠ": Δ.ᐃⵠΔⵠᐃⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆⲆΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆᐃᐃᐃ] = {
		name: "Gold Door Spike",
		"ⵠⵠ": Δ.ⵠᐃΔⵠΔᐃΔ,
		"Ⲇᐃᐃᐃ": ⲆΔᐃ,
		"ⲆⵠⲆΔ": ⵠᐃΔᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⲆⵠⲆ] = {
		name: "Diamond Door Spike",
		"ⵠⵠ": Δ.ⲆⵠⵠᐃⵠⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠⵠⲆ
	};
	const ᐃⲆⲆΔᐃⵠΔ = ΔᐃⵠⵠⲆΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃΔΔΔ] = {
		name: "Amethyst Door Spike",
		"ⵠⵠ": Δ.ᐃᐃᐃⵠᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": ΔΔⵠᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆΔᐃⵠ] = {
		name: "Diamond Fire Protection ",
		"ⵠⵠ": Δ.ⲆΔⲆⲆΔᐃΔ,
		"Ⲇᐃᐃᐃ": ⵠᐃⲆᐃ,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔΔᐃᐃ] = {
		name: "Amethyst Fire Protection ",
		"ⵠⵠ": Δ.ΔⲆΔⲆⵠⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ᐃᐃΔᐃ
	};
	const Ⲇᐃⵠᐃ = ⲆΔᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.Δⵠᐃᐃⵠ] = {
		name: "Amethyst Fire Protection ",
		"ⵠⵠ": Δ.ⵠᐃⲆΔΔⵠⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ⲆΔᐃⲆΔ = ΔⲆᐃᐃᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⲆⲆΔⲆ] = {
		name: "Reidite Sword",
		"ⵠⵠ": Δ.ⲆΔᐃᐃⲆⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃⵠⲆⲆⲆⵠⲆ = Ⲇᐃᐃⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⲆⵠⲆ] = {
		name: "Reidite Spear",
		"ⵠⵠ": Δ.ΔⲆⵠⲆᐃⵠᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆⲆⲆΔⲆ] = {
		name: "Reidite Helmet",
		"ⵠⵠ": Δ.ⲆⵠⲆⵠⲆΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔⵠᐃⲆⵠ] = {
		name: "Reidite Door Spike",
		"ⵠⵠ": Δ.ⵠᐃⵠⲆΔΔⵠ,
		"Ⲇᐃᐃᐃ": ⲆⵠⲆ,
		"ⲆⵠⲆΔ": ⲆΔᐃⲆ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃᐃⲆⵠ] = {
		name: "Reidite Door",
		"ⵠⵠ": Δ.ᐃⵠⲆᐃⵠΔⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ΔⲆᐃΔᐃⵠᐃΔⲆ = ⲆⵠᐃⲆᐃΔΔ;
	const ᐃⵠⲆᐃΔⲆΔᐃΔ = ᐃᐃⵠⵠⲆⵠᐃ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔⲆⲆⵠᐃ] = {
		name: "Reidite Spike",
		"ⵠⵠ": Δ.ⵠᐃΔⲆΔⲆⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⵠⵠⲆⲆ] = {
		name: "Reidite Wall",
		"ⵠⵠ": Δ.ᐃᐃᐃⲆⵠⲆᐃ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	const ᐃΔⲆᐃⲆᐃⵠ = ΔΔΔΔⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔᐃΔᐃ] = {
		name: "Reidite pick",
		"ⵠⵠ": Δ.ΔⲆᐃⲆΔⵠⲆ,
		"Ⲇᐃᐃᐃ": Ⲇᐃⵠᐃ,
		"ⲆⵠⲆΔ": ᐃⵠ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ΔΔⲆᐃΔ] = {
		name: "Boat",
		"ⵠⵠ": Δ.ⲆΔⲆⵠΔᐃᐃ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": ΔⲆᐃ
	};
	const ⲆⵠΔᐃᐃ = ᐃᐃⲆᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆⵠΔ] = {
		name: "Sled",
		"ⵠⵠ": Δ.ⵠⵠⵠⲆⵠᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠᐃⲆᐃⲆ] = {
		name: "Saddle",
		"ⵠⵠ": Δ.ᐃᐃⵠΔⵠΔΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 1
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃΔⵠⵠΔ] = {
		name: "Mount Boar",
		"ⵠⵠ": Δ.ⵠⵠⵠⲆΔᐃΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ⵠᐃⲆᐃ
	};
	const ⲆⵠΔΔⲆ = ᐃΔᐃΔ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⵠΔΔ] = {
		name: "Mount King Crab",
		"ⵠⵠ": Δ.ⵠⲆΔΔⲆⲆⲆ,
		"Ⲇᐃᐃᐃ": ᐃⵠΔ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⲆⲆⲆ] = {
		name: "Mount Baby Dragon",
		"ⵠⵠ": Δ.ⵠⵠⵠΔᐃⲆⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ᐃⲆⲆᐃⲆ] = {
		name: "Mount Baby Lava",
		"ⵠⵠ": Δ.ᐃⲆΔⵠΔⲆⵠ,
		"Ⲇᐃᐃᐃ": ΔΔᐃ,
		"ⲆⵠⲆΔ": 0
	};
	const ⵠⵠⲆΔ = ⲆΔᐃⲆ;
	const ᐃΔΔⲆΔⲆⲆ = ⵠΔⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ΔᐃⲆⵠᐃ] = {
		name: "Mount Hawk",
		"ⵠⵠ": Δ.ⲆⵠᐃΔΔΔⲆ,
		"Ⲇᐃᐃᐃ": ⲆⲆⲆ,
		"ⲆⵠⲆΔ": 0
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⲆᐃΔⲆⲆ] = {
		name: "Plane",
		"ⵠⵠ": Δ.ⲆⵠΔⲆᐃⲆΔ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔᐃ
	};
	const ᐃΔΔⲆⲆ = ⵠᐃⲆⵠ;
	ᐃΔᐃᐃ[ⵠⲆ.ᐃᐃⲆΔᐃ] = {
		name: "Pitchfork 2",
		"ⵠⵠ": Δ.ⵠΔᐃⲆᐃᐃⲆ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": ΔΔⵠᐃ
	};
	ᐃΔᐃᐃ[ⵠⲆ.ⵠⵠᐃᐃᐃ] = {
		name: "Baby Mammoth",
		"ⵠⵠ": Δ.ⵠⵠⵠⵠⲆᐃⵠ,
		"Ⲇᐃᐃᐃ": 0,
		"ⲆⵠⲆΔ": Ⲇᐃⵠᐃ
	};
	var ᐃⵠⵠⲆⵠⲆᐃ = ᐃⲆᐃᐃᐃ;
	const Ⲇⵠᐃᐃⵠⵠⵠ = ΔⲆⵠⲆΔΔⲆ;
	var ⲆᐃⲆⲆᐃ = [{
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 25],
			[ⵠⲆ.ⵠᐃΔⲆ, 5]
		],
		w: Ⲇᐃⵠᐃ,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆⵠΔⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠΔⲆΔ,
		time: ΔⲆᐃ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⲆΔ, 1],
			[ⵠⲆ.ᐃⲆΔᐃ, 35],
			[ⵠⲆ.ⵠᐃΔⲆ, 10]
		],
		w: 0,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃᐃΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃᐃΔΔ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 150],
			[ⵠⲆ.ⵠᐃΔⲆ, 50],
			[ⵠⲆ.ⲆᐃⲆⵠ, 15]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: Ⲇᐃⵠᐃ,
		id: ᐃΔᐃ.ⲆⲆᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆᐃⲆⵠ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ΔⵠΔⲆⲆⲆⲆ],
			[ⵠⲆ.ⵠᐃΔⲆ, ⵠΔᐃΔᐃ]
		],
		w: 0,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ΔᐃΔⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔᐃΔⵠΔ,
		time: ΔⲆᐃ / ⵠⲆⵠⵠᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 10]
		],
		w: 0,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃΔⵠᐃ,
		time: .3333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⵠᐃ, ᐃᐃΔᐃ],
			[ⵠⲆ.ᐃⲆΔᐃ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 15]
		],
		w: 1,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ᐃⵠᐃⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠᐃⲆΔ,
		time: ⲆΔᐃⲆ / ⵠΔΔᐃᐃⲆⲆ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, ᐃΔΔⲆΔⲆⲆ],
			[ⵠⲆ.ⵠᐃΔⲆ, 30],
			[ⵠⲆ.ᐃⵠᐃⲆΔ, ⵠⵠⲆ]
		],
		w: 1,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ᐃᐃΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃΔⵠᐃ,
		time: .08333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, ⲆᐃᐃΔᐃ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 80],
			[ⵠⲆ.ᐃᐃΔⵠᐃ, 1]
		],
		w: ᐃⵠ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃΔᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃΔᐃΔ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, 60],
			[ⵠⲆ.ⲆⵠΔⵠ, 30],
			[ⵠⲆ.ᐃᐃΔᐃΔ, ⲆⲆΔᐃ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ᐃΔΔᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔΔᐃΔ,
		time: ᐃΔⲆⵠ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 30],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ᐃΔⲆⲆ, 30],
			[ⵠⲆ.ᐃΔΔᐃΔ, 1]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: ᐃΔⵠⵠ,
		id: ᐃΔᐃ.ᐃΔᐃΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔᐃΔᐃ,
		time: .011111111111111112,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 90],
			[ⵠⲆ.ⵠᐃΔⲆ, 50]
		],
		w: ΔⲆᐃ,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ΔⲆΔⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆΔⲆᐃ,
		time: ⵠⵠⲆΔ / ⵠΔᐃΔⲆ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 160],
			[ⵠⲆ.ⵠᐃΔⲆ, 120],
			[ⵠⲆ.ⲆᐃⲆⵠ, 80],
			[ⵠⲆ.ΔⲆΔⲆᐃ, ⵠⲆⲆ]
		],
		w: ΔⲆᐃ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": ΔΔᐃ,
		e: ΔΔᐃ,
		id: ᐃΔᐃ.ⲆⲆΔⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆΔⲆⵠ,
		time: .06666666666666667,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 80],
			[ⵠⲆ.ⵠᐃΔⲆ, 200],
			[ⵠⲆ.ⲆᐃⲆⵠ, 150],
			[ⵠⲆ.ⲆⲆΔⲆⵠ, ᐃⵠⵠ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃΔⵠᐃ,
		time: 1 / ᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 160],
			[ⵠⲆ.ⲆⵠΔⵠ, 60],
			[ⵠⲆ.ⲆᐃⲆⵠ, 250],
			[ⵠⲆ.ⲆᐃΔⵠᐃ, 1]
		],
		w: 1,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ᐃΔⵠⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔⵠⵠᐃ,
		time: 1 / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 160],
			[ⵠⲆ.ᐃΔⲆⲆ, 60],
			[ⵠⲆ.ⲆⵠⲆⵠ, 250],
			[ⵠⲆ.ᐃΔⵠⵠᐃ, ⵠᐃΔᐃ]
		],
		w: ⵠᐃΔᐃ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": 0,
		e: ⲆΔᐃ,
		id: ᐃΔᐃ.ⲆⲆⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⵠᐃⵠ,
		time: ᐃⵠ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⵠᐃⵠ, ᐃᐃΔᐃ],
			[ⵠⲆ.ⵠΔΔⲆⵠ, 1],
			[ⵠⲆ.ΔᐃᐃⲆΔ, 1],
			[ⵠⲆ.ᐃᐃᐃⲆΔ, 10],
			[ⵠⲆ.ⲆⵠΔⵠ, ⲆᐃᐃΔᐃ]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: 0,
		id: ᐃΔᐃ.ⵠΔᐃⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔᐃⵠⵠ,
		time: ⵠⵠⲆ / 120,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 30],
			[ⵠⲆ.ⵠᐃΔⲆ, ᐃΔⵠⲆΔ]
		],
		w: 1,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ⵠⵠⲆᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠⲆᐃᐃ,
		time: 1 / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠⵠⲆᐃᐃ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 20],
			[ⵠⲆ.ⵠᐃΔⲆ, 30],
			[ⵠⲆ.ᐃⲆΔᐃ, 40]
		],
		w: ⵠⵠⲆΔ,
		f: ΔΔᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃⲆᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃⲆᐃⲆ,
		time: ᐃⵠ / 10,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃᐃⲆᐃⲆ, ᐃⵠⵠ],
			[ⵠⲆ.ⲆⵠⲆⵠ, ⵠΔⲆⵠ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 80]
		],
		w: ΔⲆᐃ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ᐃⵠΔⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠΔⲆΔ,
		time: 1 / ⵠΔΔΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⵠΔⲆΔ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 60],
			[ⵠⲆ.ⲆⵠΔⵠ, 30],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40]
		],
		w: 1,
		f: ᐃΔⵠⵠ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ᐃⵠⵠⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠⵠⵠᐃ,
		time: .025,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ⲆⵠⲆ,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ΔⵠⲆⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠⲆⲆΔ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ΔⵠⲆⲆΔ, 1]
		],
		w: 0,
		f: ΔΔⵠᐃ,
		"ⵠⲆⵠ": ⲆΔᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ᐃΔⲆΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔⲆΔⵠ,
		time: 1 / ⵠᐃᐃΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ⲆΔᐃⲆⵠ],
			[ⵠⲆ.ⵠᐃΔⲆ, 50]
		],
		w: ⵠⲆⲆ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ⵠΔΔᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔᐃⲆ,
		time: 1 / ᐃᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠΔΔᐃⲆ, ⵠⵠⲆΔ],
			[ⵠⲆ.ΔⲆΔⲆΔΔᐃ, 1]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ᐃᐃⲆΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃⲆΔᐃ,
		time: ⵠᐃΔᐃ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ΔΔⲆΔᐃ, ⵠⲆᐃᐃ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 4],
			[ⵠⲆ.ᐃΔⲆᐃᐃ, 4]
		],
		w: ⵠⵠⲆ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔᐃⵠⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔᐃⵠⲆΔ,
		time: ᐃⵠⵠ / ⲆⲆᐃΔⵠⲆᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 40]
		],
		w: ΔΔⵠᐃ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ΔΔΔⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔΔⲆⵠ,
		time: ᐃΔⲆⵠ / ⵠᐃᐃΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔΔⲆⵠ, ᐃⵠⵠ],
			[ⵠⲆ.ᐃⲆΔᐃ, 60],
			[ⵠⲆ.ⵠᐃΔⲆ, 10]
		],
		w: 1,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆΔⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⵠᐃⵠ,
		time: 1 / ᐃᐃⲆᐃᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 80],
			[ⵠⲆ.ⲆᐃⲆⵠ, 30],
			[ⵠⲆ.ⵠᐃΔⲆ, 30],
			[ⵠⲆ.ⲆΔⵠᐃⵠ, ⵠⲆⲆ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆΔᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆΔᐃⲆ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ,
		time: 1 / 20
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 200],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, 60],
			[ⵠⲆ.ⵠⲆΔᐃⲆ, 1]
		],
		w: ΔⲆᐃ,
		f: ΔΔᐃ,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔⲆⲆᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⲆᐃᐃ,
		time: .03333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 40],
			[ⵠⲆ.ⲆⵠⲆⵠ, 80],
			[ⵠⲆ.ⲆᐃⲆⵠ, 90],
			[ⵠⲆ.ΔⲆⲆᐃᐃ, 1]
		],
		w: ⲆΔᐃⲆ,
		f: ᐃΔⵠⵠ,
		"ⵠⲆⵠ": ⵠᐃⲆᐃ,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ᐃⲆⵠⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆⵠⲆᐃ,
		time: .016666666666666666,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆⲆ, 40],
			[ⵠⲆ.ⲆⵠΔⵠ, 80],
			[ⵠⲆ.ⲆⵠⲆⵠ, 90],
			[ⵠⲆ.ᐃⲆⵠⲆᐃ, 1]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ⲆⲆⲆⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⲆⵠⲆ,
		time: .011111111111111112,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⵠΔᐃ, ᐃⵠᐃΔ],
			[ⵠⲆ.ⲆΔⲆⲆΔ, ⵠᐃΔᐃ],
			[ⵠⲆ.ⲆⵠΔⵠ, ⲆΔᐃⲆⵠ],
			[ⵠⲆ.ΔⵠⵠⵠΔ, ΔⲆΔⵠ]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": ⲆΔᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠΔᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠΔᐃⵠ,
		time: 1 / 120,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⵠΔᐃⵠ, 1],
			[ⵠⲆ.ⲆⲆᐃᐃΔ, ⵠⵠⲆΔ],
			[ⵠⲆ.ᐃΔⲆⲆ, ⲆⲆΔⵠΔᐃΔ],
			[ⵠⲆ.ΔⵠⵠΔᐃ, 2]
		],
		w: ᐃⵠ,
		f: 1,
		"ⵠⲆⵠ": ᐃᐃΔᐃ,
		e: ⲆΔᐃ,
		id: ᐃΔᐃ.ᐃⵠⲆΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠⲆΔΔ,
		time: .005,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔΔⲆⵠ, ⵠᐃΔᐃ],
			[ⵠⲆ.ᐃⲆᐃⲆⲆ, ⲆΔΔⵠΔ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 6]
		],
		w: ⵠⲆⲆ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆⲆⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⲆⲆᐃ,
		time: 1 / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 30]
		],
		w: ᐃⵠΔ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.Ⲇᐃⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.Ⲇᐃⵠᐃⵠ,
		time: ⵠᐃΔᐃ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 25],
			[ⵠⲆ.Ⲇᐃⵠᐃⵠ, ⲆⲆΔᐃ]
		],
		w: 1,
		f: ΔⲆⵠ,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆⵠΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⵠΔⲆ,
		time: ΔⲆᐃ / ΔΔⵠᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 60],
			[ⵠⲆ.ⲆᐃⲆⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 50],
			[ⵠⲆ.ⵠⲆⵠΔⲆ, 1]
		],
		w: ⲆΔᐃⲆ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": 0,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ⲆᐃΔΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃΔΔⲆ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, 60],
			[ⵠⲆ.ⵠᐃΔⲆ, 80],
			[ⵠⲆ.ⲆᐃΔΔⲆ, ᐃᐃΔᐃ]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ΔⲆᐃⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆᐃⲆᐃ,
		time: ᐃⵠ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 60],
			[ⵠⲆ.ⲆᐃⲆⵠ, 100],
			[ⵠⲆ.ⲆⵠΔⵠ, 40],
			[ⵠⲆ.ΔⲆᐃⲆᐃ, ⵠⵠⲆ]
		],
		w: 1,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔᐃΔⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔᐃΔⲆⲆ,
		time: ᐃΔⲆⵠ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 100],
			[ⵠⲆ.ⲆⵠΔⵠ, 80],
			[ⵠⲆ.ᐃΔⲆⲆ, 40],
			[ⵠⲆ.ΔᐃΔⲆⲆ, 1]
		],
		w: 1,
		f: ⵠᐃⲆᐃ,
		"ⵠⲆⵠ": ΔΔᐃ,
		e: ΔⲆᐃⲆ,
		id: ᐃΔᐃ.ⵠⲆⲆΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⲆΔⲆ,
		time: 1 / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⵠᐃΔᐃ, ⲆⵠΔᐃ]
		],
		w: 0,
		f: ⵠᐃΔᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⲆΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆΔⵠᐃ,
		time: 1 / ᐃᐃⲆᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆⲆΔΔ, 3]
		],
		w: ΔΔᐃ,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃⲆΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆΔⲆ,
		time: ⵠⵠⲆ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⵠⵠΔⵠ, 8]
		],
		w: ᐃΔⵠⵠ,
		f: ᐃᐃΔᐃ,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ᐃΔⲆⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔⲆⵠΔ,
		time: ᐃᐃΔᐃ / ᐃᐃⲆᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔΔⵠᐃ, 8]
		],
		w: 0,
		f: 1,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠΔⵠᐃ,
		time: 1 / ᐃᐃⵠⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⵠⵠⲆᐃ, ᐃᐃΔⵠⵠ]
		],
		w: ΔΔᐃ,
		f: ⵠⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠᐃⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠᐃⵠⲆ,
		time: ⵠᐃΔᐃ / ⲆⵠΔᐃᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⵠⲆᐃ, 8]
		],
		w: ⵠᐃⲆᐃ,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: Ⲇᐃⵠᐃ,
		id: ᐃΔᐃ.ᐃⵠⲆᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠⲆᐃᐃ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⵠᐃΔ, ⲆⲆᐃᐃᐃ]
		],
		w: ΔⲆⵠ,
		f: 1,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠⲆⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠⲆⲆᐃ,
		time: ⲆⲆΔᐃ / ᐃᐃⲆᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆΔᐃ, 16]
		],
		w: 0,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃⲆΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃⲆΔⲆ,
		time: 1 / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠᐃⲆΔ, ⵠⲆⵠⵠΔ]
		],
		w: 0,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ΔⵠᐃᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠᐃᐃΔ,
		time: ⵠⵠⲆ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⵠΔᐃ, 1]
		],
		w: ⵠᐃⲆᐃ,
		f: ᐃⵠⵠ,
		"ⵠⲆⵠ": ⵠᐃⲆᐃ,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ⵠᐃᐃⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃᐃⵠⵠ,
		time: ᐃⵠ / ᐃᐃⵠⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⵠⲆⵠΔ, 1]
		],
		w: 0,
		f: 1,
		"ⵠⲆⵠ": ⲆⵠⲆ,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ΔΔᐃᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔᐃᐃᐃ,
		time: 1 / ⵠⵠⲆⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⲆΔⵠ, ⵠⲆⵠⵠ]
		],
		w: Δⵠⵠ,
		f: 1,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆΔⵠᐃ,
		time: ⵠᐃΔᐃ / ΔΔⲆⲆᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⲆΔⵠ, ⲆⵠΔᐃ],
			[ⵠⲆ.ⵠⵠᐃΔᐃ, ⵠⵠⲆ]
		],
		w: ⲆⲆⲆ,
		f: ⵠⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⵠᐃⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠᐃⲆΔ,
		time: .3333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⲆΔⵠ, 5],
			[ⵠⲆ.ⵠⵠᐃΔᐃ, 2],
			[ⵠⲆ.ⵠᐃⵠΔᐃ, ⵠᐃᐃⵠ]
		],
		w: Δⵠⵠ,
		f: 1,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ⵠᐃⲆⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆⲆΔ,
		time: ᐃΔⲆⵠ / ΔⲆⲆΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 2]
		],
		w: ᐃΔⲆⵠ,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠⵠᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠⵠᐃⲆ,
		time: 1 / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 20]
		],
		w: ᐃᐃΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⲆΔᐃⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔᐃⲆᐃ,
		time: ⲆⲆΔᐃ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆΔᐃⲆᐃ, ⲆΔᐃⲆ],
			[ⵠⲆ.ⵠᐃΔⲆ, ⲆⵠⲆⵠⲆ]
		],
		w: 1,
		f: ᐃΔⵠⵠ,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ᐃᐃᐃΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃᐃΔⲆ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃᐃᐃΔⲆ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, Ⲇⵠᐃᐃⵠⵠⵠ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ⲆΔᐃ,
		id: ᐃΔᐃ.ΔΔⵠⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⵠⵠⵠ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⵠⵠⵠ, 1],
			[ⵠⲆ.ⲆⵠⲆⵠ, 11]
		],
		w: ⲆⲆΔᐃ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ΔⲆΔΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆΔΔᐃ,
		time: ⲆΔᐃⲆ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆΔΔᐃ, ⵠᐃΔᐃ],
			[ⵠⲆ.ⲆⵠΔⵠ, ⲆΔᐃⲆΔ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔΔⵠΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⵠΔⲆ,
		time: ᐃⵠ / ⲆΔⵠᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⵠΔⲆ, 1],
			[ⵠⲆ.ᐃΔⲆⲆ, ⲆᐃᐃΔ]
		],
		w: ⵠⲆⲆ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ᐃⵠⵠⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠⵠⲆⲆ,
		time: ᐃⵠⵠ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 30]
		],
		w: ⵠⵠⲆΔ,
		f: ⵠᐃⲆᐃ,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆΔᐃΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔᐃΔⵠ,
		time: .125,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆΔᐃΔⵠ, ᐃⵠⵠ],
			[ⵠⲆ.ⵠᐃΔⲆ, 27]
		],
		w: ΔⲆᐃ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ᐃΔⵠⵠ,
		id: ᐃΔᐃ.ΔᐃᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔᐃᐃⲆⵠ,
		time: ᐃⵠ / ᐃᐃΔⵠⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔᐃᐃⲆⵠ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 24]
		],
		w: 1,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆⲆⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⲆⵠⵠ,
		time: 1 / ΔᐃᐃⵠΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⲆⵠⵠ, ᐃᐃΔᐃ],
			[ⵠⲆ.ⲆⵠⲆⵠ, 21]
		],
		w: ⵠⵠⲆΔ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆᐃΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆᐃΔᐃ,
		time: ⵠⲆⲆ / ΔⲆᐃᐃᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⲆᐃΔᐃ, ⵠⲆⲆ],
			[ⵠⲆ.ⲆⵠΔⵠ, 18]
		],
		w: ⵠⵠⲆΔ,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⲆⵠᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⵠᐃΔ,
		time: ᐃᐃΔᐃ / ⲆΔᐃⲆΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆⵠᐃΔ, ΔⲆᐃ],
			[ⵠⲆ.ᐃΔⲆⲆ, 15]
		],
		w: ⵠᐃΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃᐃⲆⵠ,
		time: ⵠⵠⲆ / 8,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆΔᐃⲆᐃ, 1],
			[ⵠⲆ.ᐃⲆΔᐃ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 30]
		],
		w: 1,
		f: Ⲇᐃⵠᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.Δᐃⵠⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.Δᐃⵠⵠᐃ,
		time: 1 / ⵠᐃⵠⲆ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃᐃᐃΔⲆ, ᐃΔⲆⵠ],
			[ⵠⲆ.ⵠᐃΔⲆ, 70]
		],
		w: ᐃᐃΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ⲆΔⵠΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⵠΔⵠ,
		time: ⵠᐃΔᐃ / ⲆᐃᐃΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⵠⵠⵠ, ⵠⲆⲆ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 30]
		],
		w: 1,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.Δⵠⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.Δⵠⵠᐃⵠ,
		time: ⲆⲆΔᐃ / 20,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆΔΔᐃ, ⵠⵠⲆ],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 30]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃⵠⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃⵠⲆΔ,
		time: ᐃΔⲆⵠ / 20,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⵠΔⲆ, ⵠⵠⲆΔ],
			[ⵠⲆ.ⲆⵠΔⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 30]
		],
		w: 1,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆⵠΔⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠΔⲆᐃ,
		time: ⲆΔᐃⲆ / ⵠⵠᐃᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⵠⵠⲆⲆ, 1],
			[ⵠⲆ.ᐃΔⲆⲆ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, 30]
		],
		w: ⵠⵠⲆΔ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": 0,
		e: ΔⲆᐃⲆ,
		id: ᐃΔᐃ.ΔⲆⲆⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⲆⵠᐃ,
		time: 1 / ⵠΔⲆⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆΔᐃΔⵠ, 1],
			[ⵠⲆ.ᐃⲆΔᐃ, 80],
			[ⵠⲆ.ⵠᐃΔⲆ, 60]
		],
		w: ΔⲆᐃ,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ⲆⵠⵠⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠⵠⲆⲆ,
		time: ᐃΔⲆⵠ / ᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔᐃᐃⲆⵠ, 1],
			[ⵠⲆ.ⵠᐃΔⲆ, 140]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": Δⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ΔⲆΔⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆΔⵠⵠ,
		time: ⵠᐃΔᐃ / 20,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⲆⵠⵠ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 80],
			[ⵠⲆ.ⵠᐃΔⲆ, 60]
		],
		w: ⵠᐃΔᐃ,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: ΔΔᐃ,
		id: ᐃΔᐃ.ⵠⲆᐃᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆᐃᐃᐃ,
		time: 1 / ΔⵠΔⲆ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⲆᐃΔᐃ, ᐃᐃΔᐃ],
			[ⵠⲆ.ⲆⵠⲆⵠ, 80],
			[ⵠⲆ.ⵠᐃΔⲆ, 60]
		],
		w: 1,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ᐃⲆⲆⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆⲆⵠⲆ,
		time: 1 / ᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆⵠᐃΔ, 1],
			[ⵠⲆ.ⲆⵠΔⵠ, 80],
			[ⵠⲆ.ⵠᐃΔⲆ, 60]
		],
		w: ᐃⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ᐃᐃΔΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃΔΔΔ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃᐃⲆⵠ, 1],
			[ⵠⲆ.ᐃΔⲆⲆ, 80],
			[ⵠⲆ.ⲆᐃⲆⵠ, 60]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": ⲆⵠⲆ,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ΔⵠᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠᐃⲆⵠ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 25],
			[ⵠⲆ.ⲆᐃⲆⵠ, ᐃᐃΔⵠ]
		],
		w: ⲆⲆΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: 0,
		id: ᐃΔᐃ.ΔⵠΔⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠΔⲆᐃ,
		time: ⵠⲆⲆ / Δᐃⵠⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ΔΔⲆΔᐃ, ⵠⵠⲆ],
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ⵠⲆⲆ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠⵠⲆᐃ]
		],
		w: ᐃᐃΔᐃ,
		f: ᐃΔⵠⵠ,
		"ⵠⲆⵠ": 0,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⵠⵠᐃⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠᐃⵠᐃ,
		time: ᐃⵠⵠ / ⲆⲆᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⲆΔᐃ, ΔΔⲆᐃᐃ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ΔⵠᐃⵠΔⵠⲆ],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 5],
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ᐃⵠⲆⲆΔ]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ⵠⲆΔΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆΔΔⵠ,
		time: ΔⲆᐃ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ, 1],
			[ⵠⲆ.Δᐃⵠⵠⵠ, ⵠⵠΔⵠΔ],
			[ⵠⲆ.ⵠⵠⵠΔⲆ, ΔⲆᐃᐃᐃ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ⲆΔⵠⵠⲆ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 6]
		],
		w: 1,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠΔᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠΔᐃᐃ,
		time: .016666666666666666,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ΔⲆᐃ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠᐃᐃⵠ]
		],
		w: ⲆⲆΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆⵠᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⵠᐃᐃ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆⵠᐃᐃ, 1],
			[ⵠⲆ.ᐃΔⲆᐃᐃ, ᐃᐃⵠⵠ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠⲆᐃᐃ]
		],
		w: ⵠⲆⲆ,
		f: Ⲇᐃⵠᐃ,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔⲆⲆΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⲆΔᐃ,
		time: 1 / ⲆΔⲆⲆⲆΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆⲆΔᐃ, ⵠᐃΔᐃ],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, ΔⲆⲆΔ],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 4]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ΔⲆᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆᐃⲆⵠ,
		time: ⵠⲆⲆ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆᐃⲆⵠ, ᐃᐃΔᐃ],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, 5],
			[ⵠⲆ.ΔΔΔΔⲆ, Ⲇⵠᐃⵠᐃ],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 4]
		],
		w: ⵠⵠⲆΔ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔⲆᐃⲆ,
		id: ᐃΔᐃ.ΔⲆⵠⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⵠⵠᐃ,
		time: ⲆΔᐃⲆ / 50,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: 0,
		f: 0,
		"ⵠⲆⵠ": ⵠᐃⲆᐃ,
		e: 0,
		id: ᐃΔᐃ.Δᐃⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.Δᐃⵠᐃⵠ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 75],
			[ⵠⲆ.ᐃⲆΔᐃ, 75],
			[ⵠⲆ.Δᐃⵠᐃⵠ, 1]
		],
		w: ⲆⲆΔᐃ,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": Ⲇᐃⵠᐃ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⵠΔⵠⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔⵠⵠⵠ,
		time: ⲆⲆΔᐃ / 10,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 90],
			[ⵠⲆ.ᐃⲆΔᐃ, 90],
			[ⵠⲆ.ⲆᐃⲆⵠ, 90],
			[ⵠⲆ.ⵠΔⵠⵠⵠ, 1]
		],
		w: ᐃᐃΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆⵠᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⵠᐃᐃ,
		time: ⵠᐃΔᐃ / ⵠⵠΔⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, ⵠΔᐃᐃⲆ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 100],
			[ⵠⲆ.ⲆⵠⲆⵠ, 100],
			[ⵠⲆ.ⵠⲆⵠᐃᐃ, 1]
		],
		w: ⵠⵠⲆΔ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃΔⵠⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔⵠⲆⵠ,
		time: ⵠᐃΔᐃ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 80],
			[ⵠⲆ.ⲆᐃⲆⵠ, 150],
			[ⵠⲆ.ⲆⵠⲆⵠ, 120],
			[ⵠⲆ.ᐃΔⵠⲆⵠ, 1]
		],
		w: 1,
		f: ΔⲆⵠ,
		"ⵠⲆⵠ": 0,
		e: Ⲇᐃⵠᐃ,
		id: ᐃΔᐃ.ⲆᐃⲆΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃⲆΔⵠ,
		time: ⲆΔᐃⲆ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆⲆ, 80],
			[ⵠⲆ.ⲆⵠⲆⵠ, 150],
			[ⵠⲆ.ⲆⵠΔⵠ, 120],
			[ⵠⲆ.ⲆᐃⲆΔⵠ, 1]
		],
		w: 1,
		f: ᐃⵠ,
		"ⵠⲆⵠ": ᐃⵠΔ,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆⲆΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⲆΔⲆ,
		time: .011111111111111112,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃᐃᐃⲆΔ, ΔⵠΔΔ],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⲆⵠΔΔⲆ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": Δⵠⵠ,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ⲆⲆΔⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆΔⲆᐃ,
		time: ⵠⵠⲆ / ⵠΔⲆⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆΔⲆᐃ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 80],
			[ⵠⲆ.ΔᐃᐃⲆΔ, 1],
			[ⵠⲆ.ⲆⵠΔⵠ, 20]
		],
		w: ⵠⵠⲆΔ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ⲆΔᐃ,
		id: ᐃΔᐃ.ⵠΔᐃΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔᐃΔΔ,
		time: ⲆⲆΔᐃ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⲆⲆⵠⵠ, ⲆΔᐃΔ],
			[ⵠⲆ.ⲆⵠⲆⵠ, 50],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, ⲆΔᐃΔ]
		],
		w: 1,
		f: ⵠⵠⲆΔ,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ΔⲆΔᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆΔᐃⵠ,
		time: 1 / ᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⲆΔᐃⵠ, ᐃΔⲆⵠ],
			[ⵠⲆ.ⵠⲆⲆⵠⵠ, ᐃᐃⲆᐃᐃ],
			[ⵠⲆ.ⲆⵠΔⵠ, 50]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ΔΔΔᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔΔᐃᐃ,
		time: ⵠⵠⲆΔ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔΔᐃᐃ, ⵠⲆⲆ],
			[ⵠⲆ.ⵠⲆⲆⵠⵠ, 15],
			[ⵠⲆ.ⲆⵠΔⵠ, 50],
			[ⵠⲆ.ᐃΔⲆⲆ, 50]
		],
		w: ᐃΔⲆⵠ,
		f: 1,
		"ⵠⲆⵠ": Ⲇᐃⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.Δⵠᐃᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.Δⵠᐃᐃⵠ,
		time: ⵠᐃΔᐃ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠᐃᐃⲆ],
			[ⵠⲆ.ⵠⵠⲆΔᐃ, 2]
		],
		w: 1,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": Δⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ᐃⲆⵠⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆⵠⵠΔ,
		time: ⵠⲆⲆ / ᐃⲆⲆΔⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆⵠⵠΔ, ⵠⵠⲆ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 6],
			[ⵠⲆ.ⵠⵠⲆΔᐃ, 4],
			[ⵠⲆ.ⵠⵠⵠΔⲆ, 12],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ⲆⲆΔΔ]
		],
		w: ⵠᐃΔᐃ,
		f: ΔΔⵠᐃ,
		"ⵠⲆⵠ": Δⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃᐃⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃᐃⵠΔ,
		time: ⵠⵠⲆΔ / 150,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ᐃΔΔⲆⲆ],
			[ⵠⲆ.ᐃΔⲆᐃᐃ, 5]
		],
		w: 1,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠΔΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⵠ,
		time: 1 / 15,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ᐃᐃᐃⲆ]
		],
		w: ᐃΔⵠⵠ,
		f: ⲆΔᐃⲆ,
		"ⵠⲆⵠ": 0,
		e: ΔⲆⵠ,
		id: ᐃΔᐃ.ΔΔⲆΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⲆΔᐃ,
		time: 1 / Δᐃᐃᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 1],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ᐃⵠ]
		],
		w: ⵠⲆⲆ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ⲆⵠⵠΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠⵠΔᐃ,
		time: 1 / ΔⲆΔⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠ, 10]
		],
		w: ᐃΔⲆⵠ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⵠᐃⵠ,
		time: ᐃΔⲆⵠ / ᐃⵠⲆⲆΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠ, 250]
		],
		w: ⲆΔᐃⲆ,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⲆΔⲆᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⲆᐃΔ,
		time: .016666666666666666,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: ⲆⲆΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ⲆⵠⲆ,
		e: 0,
		id: ᐃΔᐃ.ΔⵠⲆΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠⲆΔᐃ,
		time: .1,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ⲆΔΔᐃᐃ]
		],
		w: ΔⲆᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆΔᐃΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔᐃΔΔ,
		time: ᐃΔⲆⵠ / ⲆⲆᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 30]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠΔⲆᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔⲆᐃⵠ,
		time: 1 / ⲆΔΔⵠΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 120]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃᐃⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃᐃⵠⵠ,
		time: .06666666666666667,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ᐃⵠᐃΔ],
			[ⵠⲆ.ⲆⵠⵠΔⲆ, 15]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃⲆᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆᐃᐃ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆⵠⵠⵠ, 25]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: ᐃⵠΔ,
		id: ᐃΔᐃ.ᐃⲆᐃᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆᐃᐃⵠ,
		time: ΔⲆᐃ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆᐃᐃⵠ, 1]
		],
		w: ΔΔⲆᐃ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": 1,
		e: 0,
		id: ᐃΔᐃ.ⵠΔΔⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⲆⵠ,
		time: ᐃⵠ / ⲆΔᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃⵠΔᐃ, 20],
			[ⵠⲆ.ᐃⲆᐃᐃⵠ, ᐃⵠ]
		],
		w: ΔΔⵠᐃ,
		f: 1,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⵠᐃΔᐃΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⲆⵠ,
		time: ΔⲆᐃ / ᐃᐃⵠᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆᐃᐃⵠ, ⵠⵠⲆΔ]
		],
		w: ᐃΔⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ᐃΔⲆⵠ,
		id: ᐃΔᐃ.ᐃⲆⲆΔΔᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⲆⵠ,
		time: .3333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 60],
			[ⵠⲆ.ⵠᐃΔⲆ, 20],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠΔⵠᐃ]
		],
		w: ⲆΔᐃⲆ,
		f: ΔⲆⵠ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠⲆΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠⲆΔΔ,
		time: ᐃᐃΔᐃ / 10,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 45]
		],
		w: ⲆⲆΔᐃ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: ΔΔᐃ,
		id: ᐃΔᐃ.ⲆΔⵠΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⵠΔΔ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆΔⵠΔΔ, ᐃΔⲆⵠ],
			[ⵠⲆ.ΔᐃᐃⲆᐃ, 40],
			[ⵠⲆ.ᐃⲆΔⵠᐃ, 1]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": 1,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ΔΔΔΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔΔΔΔ,
		time: ΔⲆᐃ / 200,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, ᐃⵠΔⲆⲆ]
		],
		w: ⲆΔᐃⲆ,
		f: ΔΔᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⲆᐃΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆᐃΔⲆ,
		time: .011111111111111112,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 60],
			[ⵠⲆ.ⲆᐃⲆⵠ, 120]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ⵠᐃΔⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃΔⲆΔ,
		time: ⲆⲆΔᐃ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠ, 70],
			[ⵠⲆ.ⲆⵠⲆⵠ, 140]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆⵠⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆⵠⲆⲆ,
		time: ⲆΔᐃⲆ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 80],
			[ⵠⲆ.ⲆⵠΔⵠ, 160]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ᐃΔᐃⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔᐃⵠⲆ,
		time: ⵠᐃΔᐃ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 90],
			[ⵠⲆ.ᐃΔⲆⲆ, 180]
		],
		w: 1,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆᐃΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆᐃΔⵠ,
		time: 1 / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 70]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⲆΔΔΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔΔΔΔ,
		time: 1 / ΔΔⵠᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 70],
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ⲆⲆⵠⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⵠⵠᐃ,
		time: ᐃⵠ / ΔⲆⵠΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 40]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔᐃ,
		e: ᐃΔⵠⵠ,
		id: ᐃΔᐃ.ΔⲆⲆΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⲆΔⵠ,
		time: .1,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠⲆΔⵠᐃ, ⵠⵠⲆ],
			[ⵠⲆ.ⵠᐃᐃⵠⵠ, ⲆΔᐃⲆ]
		],
		w: ⵠᐃⲆᐃ,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔⲆⲆᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⲆⲆᐃⲆ,
		time: ⵠⵠⲆ / ⲆⵠⵠΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 30],
			[ⵠⲆ.ⲆⵠᐃⵠⲆ, ⵠⵠⲆ],
			[ⵠⲆ.ⲆⵠΔⵠ, 150],
			[ⵠⲆ.ΔⵠⵠⵠΔ, Ⲇᐃⵠⵠ]
		],
		w: ⲆΔᐃⲆ,
		f: ᐃᐃΔᐃ,
		"ⵠⲆⵠ": 1,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃⲆΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆΔᐃ,
		time: ⲆΔᐃⲆ / 120,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃⲆΔᐃ, 1],
			[ⵠⲆ.ᐃⵠⵠᐃⲆ, ᐃΔⲆⵠ],
			[ⵠⲆ.ᐃΔⲆⲆ, 150],
			[ⵠⲆ.ΔⵠⵠΔᐃ, 2]
		],
		w: 1,
		f: ⲆΔᐃⲆ,
		"ⵠⲆⵠ": ⵠⵠⲆΔ,
		e: Ⲇᐃⵠᐃ,
		id: ᐃΔᐃ.ᐃᐃⵠⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃⵠⲆᐃ,
		time: .005555555555555556,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⲆⵠᐃᐃ, 1],
			[ⵠⲆ.ᐃⲆᐃⲆⲆ, 10],
			[ⵠⲆ.ΔᐃᐃΔΔ, 10],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 10]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃⲆΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃⲆΔⵠ,
		time: ⵠᐃΔᐃ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⵠΔᐃ, ⵠⵠᐃᐃ],
			[ⵠⲆ.ⲆΔⲆⲆΔ, ᐃᐃΔᐃ],
			[ⵠⲆ.ⲆⵠΔⵠ, 150],
			[ⵠⲆ.ΔⵠⵠⵠΔ, 3]
		],
		w: 1,
		f: ᐃᐃΔᐃ,
		"ⵠⲆⵠ": 1,
		e: Ⲇᐃⵠᐃ,
		id: ᐃΔᐃ.ᐃⲆΔΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆΔΔⵠ,
		time: .008333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔΔⵠ, ᐃΔⲆⵠ],
			[ⵠⲆ.ⲆⲆᐃᐃΔ, ⵠᐃΔᐃ],
			[ⵠⲆ.ᐃΔⲆⲆ, 150],
			[ⵠⲆ.ΔⵠⵠΔᐃ, 2]
		],
		w: 1,
		f: 1,
		"ⵠⲆⵠ": 1,
		e: ⲆⵠⲆ,
		id: ᐃΔᐃ.ⲆᐃΔⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃΔⲆⵠ,
		time: ΔⲆᐃ / 180,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ⵠΔᐃᐃⲆ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 4]
		],
		w: ᐃᐃΔᐃ,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃΔⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃΔⵠᐃⵠ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 30]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔⵠᐃⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠᐃⲆⲆ,
		time: ᐃⵠ / ΔⲆⲆΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, 200],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ᐃⵠΔΔᐃ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, 4],
			[ⵠⲆ.ᐃΔⵠᐃⵠ, ᐃᐃΔᐃ]
		],
		w: ᐃΔⲆⵠ,
		f: ΔΔⲆᐃ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ᐃⲆΔⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆΔⵠΔ,
		time: .04,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, ᐃᐃᐃⲆ],
			[ⵠⲆ.Δᐃⵠⵠⵠ, 1]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": Ⲇᐃⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔⵠΔⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔⵠΔⲆⲆ,
		time: 1 / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠ, 200],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 12],
			[ⵠⲆ.Δᐃⵠⵠⵠ, ⵠΔⲆᐃΔ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ᐃΔⲆΔ],
			[ⵠⲆ.ᐃⲆΔⵠΔ, ᐃⵠ]
		],
		w: ⵠᐃΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ⵠᐃⲆᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆⵠⲆΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠⲆΔⵠ,
		time: ⲆⲆΔᐃ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠ, ⵠⲆΔⵠ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, 1]
		],
		w: ⵠᐃΔᐃ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔΔⵠⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⵠⲆᐃ,
		time: .1,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, 200],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 10],
			[ⵠⲆ.Δᐃⵠⵠⵠ, 8],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ᐃᐃΔⵠⵠ],
			[ⵠⲆ.ⲆⵠⲆΔⵠ, 1]
		],
		w: 1,
		f: Ⲇᐃⵠᐃ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: ΔΔᐃ,
		id: ᐃΔᐃ.ⲆⲆΔⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆΔⲆⲆ,
		time: ⲆⲆΔᐃ / 35,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠⲆⵠ, Ⲇⵠᐃⵠᐃ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, 1]
		],
		w: ⲆⲆΔᐃ,
		f: 0,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆΔΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆΔΔⲆ,
		time: ⵠⵠⲆΔ / ΔᐃΔᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 200],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, ᐃᐃⵠᐃΔ],
			[ⵠⲆ.Δᐃᐃᐃᐃ, 8],
			[ⵠⲆ.ⵠⵠⵠΔⲆ, 8],
			[ⵠⲆ.ⲆⲆΔⲆⲆ, 1]
		],
		w: ⵠⲆⲆ,
		f: ΔΔⵠᐃ,
		"ⵠⲆⵠ": ΔⲆⵠ,
		e: ⲆⵠⲆ,
		id: ᐃΔᐃ.ⲆⲆᐃⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆᐃⵠⵠ,
		time: .025,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠ, 10],
			[ⵠⲆ.ⵠⵠⵠΔⲆ, ᐃⵠⵠ]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ΔΔᐃΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔᐃΔⵠ,
		time: ⲆⲆΔᐃ / 15,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆⲆ, 200],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 10],
			[ⵠⲆ.ΔᐃᐃⲆΔ, ⵠᐃΔᐃ],
			[ⵠⲆ.ⲆⲆᐃⵠⵠ, ⵠⲆⲆ]
		],
		w: ᐃΔⲆⵠ,
		f: ⲆΔᐃ,
		"ⵠⲆⵠ": 0,
		e: ⲆⵠⲆ,
		id: ᐃΔᐃ.ⵠΔΔⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⵠΔ,
		time: .022222222222222223,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆⲆ, 10],
			[ⵠⲆ.ⵠⵠⵠΔⲆ, 1],
			[ⵠⲆ.ⵠⲆⲆⵠⵠ, ᐃΔⲆⵠ]
		],
		w: ⲆΔᐃⲆ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⲆᐃⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⲆᐃⲆⲆ,
		time: 1 / ⲆⲆᐃΔⵠⲆᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔᐃᐃⲆᐃ, 200],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, ⲆⵠΔⲆⲆ],
			[ⵠⲆ.ⲆΔⲆⲆΔ, 1],
			[ⵠⲆ.ⵠΔΔⵠΔ, 1]
		],
		w: ΔⲆᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃΔΔⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃΔΔⲆ,
		time: 1 / 50,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔᐃᐃⲆᐃ, 10],
			[ⵠⲆ.ᐃⲆΔⵠᐃ, 1]
		],
		w: ΔⲆᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⲆᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆΔⵠⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⵠⵠⵠ,
		time: ⲆⲆΔᐃ / 20,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ⲆᐃᐃΔᐃⲆᐃ]
		],
		w: ΔⲆᐃ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆⵠᐃⲆᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠᐃⲆᐃ,
		time: .04,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠᐃⲆᐃ, ᐃᐃΔᐃ],
			[ⵠⲆ.ⵠᐃΔⲆ, ᐃⵠᐃⲆⲆⲆᐃ],
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: ⲆΔᐃⲆ,
		f: 0,
		"ⵠⲆⵠ": ⵠᐃⲆᐃ,
		e: ΔΔⲆᐃ,
		id: ᐃΔᐃ.ⵠⵠΔⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠΔⲆΔ,
		time: ⵠⲆⲆ / 40,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⵠΔⲆΔ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 50],
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: 0,
		id: ᐃΔᐃ.ⵠΔⲆΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔⲆΔΔ,
		time: ⲆΔᐃⲆ / 50,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔⲆΔΔ, 1],
			[ⵠⲆ.ⲆⵠⲆⵠ, 50],
			[ⵠⲆ.ⲆᐃⲆⵠ, 50],
			[ⵠⲆ.ⵠᐃΔⲆ, 50]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ΔΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ⵠΔΔⲆΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔΔⲆΔ,
		time: .014285714285714285,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔΔⲆΔ, ΔⲆᐃ],
			[ⵠⲆ.ⲆⵠΔⵠ, 50],
			[ⵠⲆ.ⲆⵠⲆⵠ, 50],
			[ⵠⲆ.ⲆᐃⲆⵠ, 50]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ΔΔᐃ,
		id: ᐃΔᐃ.ⲆⲆΔΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆΔΔΔ,
		time: .011111111111111112,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⲆΔΔΔ, 1],
			[ⵠⲆ.ᐃΔⲆⲆ, 50],
			[ⵠⲆ.ⲆⵠΔⵠ, 50],
			[ⵠⲆ.ⲆⵠⲆⵠ, 50]
		],
		w: ⵠⲆⲆ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: 0,
		id: ᐃΔᐃ.ᐃⵠⵠⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠⵠⲆⵠ,
		time: .008333333333333333,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔⵠΔΔⲆ, ᐃⵠ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 200]
		],
		w: ᐃΔⲆⵠ,
		f: ΔⲆᐃ,
		"ⵠⲆⵠ": ᐃᐃΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ᐃᐃⵠᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃⵠᐃⵠ,
		time: ⵠⵠⲆ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃᐃⲆⵠΔ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 200]
		],
		w: ⲆⲆΔᐃ,
		f: ᐃⵠⵠ,
		"ⵠⲆⵠ": 1,
		e: 0,
		id: ᐃΔᐃ.ᐃⵠΔⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠΔⵠⲆ,
		time: ΔⲆᐃ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆᐃⲆⵠⲆ, 1],
			[ⵠⲆ.ⲆᐃⲆⵠ, 200],
			[ⵠⲆ.ΔⵠⵠⵠΔ, 1]
		],
		w: ᐃⵠ,
		f: ᐃⵠⵠ,
		"ⵠⲆⵠ": ⵠⵠⲆ,
		e: ⲆⵠⲆ,
		id: ᐃΔᐃ.ⵠᐃⵠᐃᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⵠᐃᐃ,
		time: ⵠⲆⲆ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⲆᐃᐃ, 10],
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ⲆΔΔⵠΔ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 6]
		],
		w: 1,
		f: ΔΔⵠᐃ,
		"ⵠⲆⵠ": 0,
		e: ⲆⵠⲆ,
		id: ᐃΔᐃ.ᐃⲆΔᐃⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⲆΔᐃⵠ,
		time: 1 / 10,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ⵠΔᐃⲆ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 2]
		],
		w: 1,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ΔΔᐃᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔᐃᐃΔ,
		time: 1 / ΔⲆⵠΔᐃ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃⵠ, 1],
			[ⵠⲆ.ΔⲆⲆⲆΔ, ⵠⵠⲆΔ],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, ⲆΔⲆᐃⵠᐃΔ],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 5],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ⵠⵠΔⵠΔ]
		],
		w: ΔⲆᐃ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: ᐃⵠΔ,
		id: ᐃΔᐃ.ᐃᐃΔΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃΔΔⵠ,
		time: ᐃᐃΔᐃ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔᐃᐃΔ, 1],
			[ⵠⲆ.ⵠⲆⲆⵠᐃ, 1],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, ⲆⵠΔⲆⲆ],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 5],
			[ⵠⲆ.Δᐃᐃᐃᐃ, ⵠᐃⵠⵠⵠ]
		],
		w: ⲆΔᐃⲆ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⲆΔⵠⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⵠⲆⲆ,
		time: ⲆΔᐃⲆ / 60,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃᐃⵠᐃ, ᐃΔⲆⵠ]
		],
		w: Δⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 1,
		e: ΔⲆᐃⲆ,
		id: ᐃΔᐃ.ᐃⵠΔΔⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃⵠΔΔⵠ,
		time: ᐃⵠ / 5,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ᐃⵠᐃΔ],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠⵠⲆΔ]
		],
		w: 1,
		f: ΔⲆᐃⲆ,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃᐃⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃᐃⵠᐃ,
		time: 1 / ᐃᐃⵠⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ΔΔΔⲆΔ
	}, {
		r: [
			[ⵠⲆ.ⵠᐃΔⲆ, ⲆΔⲆᐃᐃⲆⵠ],
			[ⵠⲆ.ⲆⵠⵠΔⲆ, 30]
		],
		w: ⲆⲆΔᐃ,
		f: 1,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: ⲆⲆⲆ,
		id: ᐃΔᐃ.ⲆΔⲆⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔⲆⵠⲆ,
		time: ⵠⲆⲆ / ΔᐃΔᐃⵠ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 20]
		],
		w: 1,
		f: 0,
		"ⵠⲆⵠ": ᐃΔⵠⵠ,
		e: Δⵠⵠ,
		id: ᐃΔᐃ.ᐃᐃᐃⵠⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ᐃᐃᐃⵠⲆ,
		time: .2,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, ⲆΔᐃⲆⵠ],
			[ⵠⲆ.ⵠᐃΔⲆ, 50],
			[ⵠⲆ.ⵠΔᐃⵠᐃ, 5],
			[ⵠⲆ.ᐃΔⲆᐃᐃ, 5],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, 6]
		],
		w: ᐃⵠⵠ,
		f: 0,
		"ⵠⲆⵠ": 0,
		e: ⵠᐃⲆᐃ,
		id: ᐃΔᐃ.ⵠᐃᐃⲆⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃᐃⲆⵠ,
		time: .05,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 250],
			[ⵠⲆ.ⲆⵠⵠΔᐃ, 10],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, 2],
			[ⵠⲆ.ᐃᐃᐃⲆΔ, 2]
		],
		w: 1,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": 0,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ΔΔⲆᐃΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⲆᐃΔ,
		time: .02,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 250],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ΔΔⵠᐃⵠ],
			[ⵠⲆ.ᐃⵠΔᐃⵠ, 2],
			[ⵠⲆ.Δᐃᐃᐃᐃ, 8]
		],
		w: ᐃⵠ,
		f: ΔΔⵠᐃ,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃⲆⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆⵠΔ,
		time: 1 / 50,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ⵠΔᐃΔⲆ],
			[ⵠⲆ.ᐃΔⲆᐃᐃ, 6],
			[ⵠⲆ.ⵠΔᐃⵠᐃ, ⵠⲆᐃᐃ],
			[ⵠⲆ.ᐃⲆⵠⵠⵠ, 50]
		],
		w: ⲆⲆΔᐃ,
		f: ᐃⵠΔ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠᐃⲆᐃⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠᐃⲆᐃⲆ,
		time: ΔⲆᐃ / ⵠᐃⲆΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 250],
			[ⵠⲆ.ᐃΔⵠᐃᐃ, ᐃᐃⲆᐃᐃ],
			[ⵠⲆ.ΔΔⲆΔᐃ, 10],
			[ⵠⲆ.Δᐃⵠⵠⵠ, ⵠⵠΔⵠΔ]
		],
		w: ᐃΔⲆⵠ,
		f: 0,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆᐃΔⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆᐃΔⲆⲆ,
		time: ΔⲆᐃ / 50,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ
	}, {
		r: [
			[ⵠⲆ.ᐃⲆΔᐃ, 40]
		],
		w: ᐃΔⲆⵠ,
		f: ⲆⲆⲆ,
		"ⵠⲆⵠ": ΔⲆᐃⲆ,
		e: ⲆΔᐃ,
		id: ᐃΔᐃ.ΔΔⵠⲆⲆ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ΔΔⵠⲆⲆ,
		time: ᐃᐃΔᐃ / ⲆΔᐃΔ,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ΔΔⵠⲆⲆ, ⵠⲆⲆ],
			[ⵠⲆ.ⵠᐃΔⲆ, 40],
			[ⵠⲆ.ᐃⲆΔᐃ, 50]
		],
		w: ⵠⵠⲆΔ,
		f: 0,
		"ⵠⲆⵠ": ΔΔⵠᐃ,
		e: ΔΔⵠᐃ,
		id: ᐃΔᐃ.ⲆⵠΔⵠᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⵠΔⵠᐃ,
		time: ᐃⵠⵠ / 10,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆⵠΔⵠᐃ, ΔⲆᐃ],
			[ⵠⲆ.ⲆᐃⲆⵠ, 40],
			[ⵠⲆ.ⵠᐃΔⲆ, 50],
			[ⵠⲆ.ᐃⲆΔᐃ, 60]
		],
		w: 1,
		f: ΔΔᐃ,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: 0,
		id: ᐃΔᐃ.ⲆΔᐃⵠⵠ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆΔᐃⵠⵠ,
		time: ᐃⵠ / 20,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⲆΔᐃⵠⵠ, 1],
			[ⵠⲆ.ⲆⵠⲆⵠ, 40],
			[ⵠⲆ.ⲆᐃⲆⵠ, 70],
			[ⵠⲆ.ⵠᐃΔⲆ, 80]
		],
		w: ⵠⲆⲆ,
		f: Δⵠⵠ,
		"ⵠⲆⵠ": 0,
		e: 0,
		id: ᐃΔᐃ.ⵠⵠΔΔᐃ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠⵠΔΔᐃ,
		time: ⵠⲆⲆ / 30,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠⵠΔΔᐃ, ⲆΔᐃⲆ],
			[ⵠⲆ.ⲆⵠΔⵠ, 40],
			[ⵠⲆ.ⲆⵠⲆⵠ, 70],
			[ⵠⲆ.ⲆᐃⲆⵠ, 110]
		],
		w: 1,
		f: Ⲇᐃⵠᐃ,
		"ⵠⲆⵠ": ⲆΔᐃ,
		e: ᐃΔⵠⵠ,
		id: ᐃΔᐃ.ⵠΔⵠⵠΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⵠΔⵠⵠΔ,
		time: .016666666666666666,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}, {
		r: [
			[ⵠⲆ.ⵠΔⵠⵠΔ, 1],
			[ⵠⲆ.ᐃΔⲆⲆ, 50],
			[ⵠⲆ.ⲆⵠΔⵠ, 80],
			[ⵠⲆ.ⲆⵠⲆⵠ, 110]
		],
		w: ⵠᐃΔᐃ,
		f: ⲆⵠⲆ,
		"ⵠⲆⵠ": ⲆⲆⲆ,
		e: 0,
		id: ᐃΔᐃ.ⲆⲆⵠΔΔ,
		"ᐃⵠⲆᐃ": ⵠⲆ.ⲆⲆⵠΔΔ,
		time: ⵠᐃΔᐃ / 90,
		"ᐃⲆⵠ": ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ
	}];
	const ΔⲆⵠΔΔ = ΔΔⲆᐃᐃ;

	function ⲆᐃⵠΔⵠⵠΔ(ⲆᐃΔⵠⵠΔᐃ, ⲆⵠᐃΔᐃᐃⵠ) {
		const ⵠΔⵠΔΔᐃⵠ = (22695477 * (ⲆᐃΔⵠⵠΔᐃ + 50334) + ΔⲆᐃ) % 4294967296;
		const ΔΔᐃⲆΔΔⲆ = 43357 ^ ⲆⵠᐃΔᐃᐃⵠ;
		const ᐃᐃⵠΔΔΔΔ = ⲆⵠⲆᐃᐃⵠΔ(ⵠΔⵠΔΔᐃⵠ, ΔΔᐃⲆΔΔⲆ, ⵠΔⵠΔΔᐃⵠ);
		const ᐃⲆΔⲆⵠⲆᐃΔⵠ = ⵠⵠᐃΔⵠⲆⵠ(ΔΔᐃⲆΔΔⲆ, ⵠΔⵠΔΔᐃⵠ, ΔΔᐃⲆΔΔⲆ, ⵠΔⵠΔΔᐃⵠ, ΔΔᐃⲆΔΔⲆ, ⵠΔⵠΔΔᐃⵠ);
		const ᐃⵠⲆΔⵠΔΔ = 10010 ^ ᐃᐃⵠΔΔΔΔ;
		return ᐃⵠⲆΔⵠΔΔ
	}

	function Ⲇᐃⵠⵠⵠⵠᐃ(ⲆⵠⲆⲆⲆ, ᐃᐃⵠΔᐃⲆᐃ, ⵠΔΔᐃⵠᐃΔ, ΔΔⵠΔΔᐃΔ) {
		const ΔΔⵠΔΔᐃᐃ = (8 << (ⲆⵠⲆⲆⲆ >> 16 & 255)) + (16 << (ⲆⵠⲆⲆⲆ >> 0 & 255)) + (24 << (ⲆⵠⲆⲆⲆ >> 8 & 255)) + (0 << (ⲆⵠⲆⲆⲆ >> 24 & ⲆⵠΔΔΔ));
		const ᐃⵠⲆⵠᐃⵠᐃ = ᐃᐃⵠΔᐃⲆᐃ ^ 33111;
		const ᐃΔᐃⲆΔⲆΔ = (0 << (ⵠΔΔᐃⵠᐃΔ >> 24 & 255)) + (8 << (ⵠΔΔᐃⵠᐃΔ >> 16 & ΔⵠⵠΔΔⲆΔ)) + (16 << (ⵠΔΔᐃⵠᐃΔ >> 8 & 255)) + (24 << (ⵠΔΔᐃⵠᐃΔ >> 0 & 255));
		const ᐃᐃᐃⲆΔⲆᐃ = 49438 ^ ΔΔⵠΔΔᐃΔ;
		const ΔᐃᐃΔΔⵠᐃ = ⵠⵠᐃΔⵠⲆⵠ(ΔΔⵠΔΔᐃᐃ, ᐃⵠⲆⵠᐃⵠᐃ, ᐃΔᐃⲆΔⲆΔ, ᐃᐃᐃⲆΔⲆᐃ, ΔΔⵠΔΔᐃᐃ, ᐃⵠⲆⵠᐃⵠᐃ);
		const ᐃΔᐃᐃⵠⲆⵠ = ⲆⵠᐃⵠΔΔⵠ(ᐃΔᐃⲆΔⲆΔ, ᐃᐃᐃⲆΔⲆᐃ, ΔΔⵠΔΔᐃᐃ, ᐃⵠⲆⵠᐃⵠᐃ, ᐃΔᐃⲆΔⲆΔ);
		const ⵠΔᐃⵠⵠⲆⵠ = (0 << ((ΔᐃᐃΔΔⵠᐃ ^ ᐃΔᐃᐃⵠⲆⵠ) >> 0 & 255)) + (ⵠⵠΔⵠΔ << ((ΔᐃᐃΔΔⵠᐃ ^ ᐃΔᐃᐃⵠⲆⵠ) >> ⲆⵠⵠⲆᐃⵠᐃ & 255)) + (24 << ((ΔᐃᐃΔΔⵠᐃ ^ ᐃΔᐃᐃⵠⲆⵠ) >> 8 & 255)) + (ᐃⲆⵠᐃⲆᐃⵠ << ((ΔᐃᐃΔΔⵠᐃ ^ ᐃΔᐃᐃⵠⲆⵠ) >> 24 & ΔΔΔⵠⲆΔᐃ));
		return ⵠΔᐃⵠⵠⲆⵠ
	}
	var Δᐃ = 300;
	ⵠⲆΔ = {
		"ΔΔᐃⲆᐃᐃΔ": Δᐃ++,
		"ΔⲆⵠΔᐃⲆᐃ": Δᐃ++,
		"ⵠᐃᐃⵠΔⵠᐃ": Δᐃ++,
		"ⵠⵠΔᐃᐃⵠᐃ": Δᐃ++,
		"ⲆⵠΔⲆᐃⲆⵠ": Δᐃ++,
		"ⵠⵠⵠΔΔᐃⵠ": Δᐃ++,
		"ⵠⵠᐃᐃᐃᐃᐃ": Δᐃ++,
		"ⲆⲆᐃⲆᐃⲆΔ": Δᐃ++,
		"ⲆⲆΔᐃΔΔⲆ": Δᐃ++,
		"ΔᐃⵠⲆⵠⵠⲆ": Δᐃ++,
		"ᐃⵠⲆᐃⵠΔᐃ": Δᐃ++,
		"ᐃΔᐃᐃΔᐃⵠ": Δᐃ++,
		EMPTY: Δᐃ++,
		"ⲆᐃΔΔⵠⵠΔ": Δᐃ++,
		"ⲆᐃᐃⲆᐃⲆΔ": Δᐃ++,
		"ΔᐃⵠᐃⵠⲆᐃ": Δᐃ++,
		"ⲆΔⵠⵠᐃⲆⲆ": Δᐃ++,
		"ⵠᐃᐃⲆⵠⲆΔ": Δᐃ++,
		"ᐃᐃⲆⵠᐃᐃⵠ": Δᐃ++,
		"ⵠᐃΔΔⵠⵠⲆ": Δᐃ++,
		"ΔⵠΔⲆⲆⲆⵠ": Δᐃ++,
		"ᐃⲆᐃΔⵠΔⲆ": Δᐃ++,
		"ΔⵠΔᐃⲆ": Δᐃ++,
		"ⲆⲆⵠᐃⵠⲆⵠ": Δᐃ++,
		"ⲆᐃᐃⵠⲆ": Δᐃ++,
		"ΔᐃⲆᐃᐃⵠᐃ": Δᐃ++,
		"ⲆⵠᐃΔⵠⲆⵠ": Δᐃ++,
		"ΔⵠΔⵠΔⵠⵠ": Δᐃ++,
		"ᐃᐃΔⲆⵠᐃΔ": Δᐃ++,
		"ΔᐃⲆΔᐃΔΔ": Δᐃ++,
		"ⲆᐃᐃᐃⲆᐃΔ": Δᐃ++,
		"ⵠⲆⲆⲆⵠⵠⵠ": Δᐃ++,
		POINTS: Δᐃ++,
		"ΔΔΔⵠᐃᐃⲆ": Δᐃ++,
		"ⵠᐃΔⵠⵠᐃΔ": Δᐃ++,
		"ᐃⵠᐃᐃΔΔᐃ": Δᐃ++,
		"ᐃⵠᐃⲆΔᐃΔ": Δᐃ++,
		"ᐃⵠⲆⲆⲆᐃⲆ": Δᐃ++,
		"ⲆⵠⲆᐃᐃⲆⵠ": Δᐃ++,
		"ⲆᐃⵠⲆᐃΔᐃ": Δᐃ++,
		"ⵠⲆΔΔⵠⵠΔ": Δᐃ++,
		"ⵠᐃᐃᐃᐃᐃΔ": Δᐃ++,
		"ΔⲆⲆⲆⲆⲆΔ": Δᐃ++,
		"ΔⵠᐃⵠⲆΔᐃ": Δᐃ++
	};
	const ⲆⲆΔΔⵠ = ΔᐃⵠⲆⵠ;

	function ⵠⵠⲆΔⲆᐃⵠ(ᐃⲆⲆΔⵠᐃⲆ, ⲆⲆᐃᐃᐃⵠᐃ, ⲆᐃΔΔᐃⵠΔ, ⵠⵠⲆⵠΔᐃᐃ, ΔⵠⲆᐃⲆⵠⵠ, ᐃᐃⵠⲆⵠⲆᐃ) {
		ᐃᐃΔᐃᐃⲆᐃ(ᐃΔΔΔⲆ, ᐃⲆⲆΔⵠᐃⲆ, ⲆⲆᐃᐃᐃⵠᐃ, ⲆᐃΔΔᐃⵠΔ, ⵠⵠⲆⵠΔᐃᐃ, ΔⵠⲆᐃⲆⵠⵠ, ᐃᐃⵠⲆⵠⲆᐃ);
		const ΔΔⵠᐃΔⲆΔ = ⵠⲆᐃⵠⵠΔⲆ(ⲆᐃΔⲆ[ⲆⵠⲆ], ⲆᐃΔⲆ[ᐃⵠ], ⲆᐃΔⲆ[ⵠⵠΔⲆ], ⲆᐃΔⲆ[ⵠⲆⲆΔ], ⲆᐃΔⲆ[4]);
		const ⵠⲆⲆⲆΔᐃᐃ = ᐃⵠᐃᐃΔⲆⲆ(ⲆᐃΔⲆ[5], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2]);
		const ⵠᐃΔᐃᐃᐃᐃ = (8121 * (78 + (ΔΔⵠᐃΔⲆΔ ^ ⵠⲆⲆⲆΔᐃᐃ)) + 28411) % 134456;
		return ⵠᐃΔᐃᐃᐃᐃ
	}

	function ⲆⲆᐃⲆⵠⵠⵠ(ᐃⲆᐃⲆΔⵠᐃ, ⲆⲆⲆᐃⲆⲆⲆ, ⲆΔⵠⵠⵠⵠΔ, ⵠⵠⵠΔΔⲆⵠ, ΔⵠⲆⵠᐃΔΔ) {
		const ⵠΔⵠᐃΔᐃᐃ = (28080 + ᐃⲆᐃⲆΔⵠᐃ) % 65521;
		const ⵠΔΔΔⲆΔΔ = (0 << (ⲆⲆⲆᐃⲆⲆⲆ >> 0 & 255)) + (24 << (ⲆⲆⲆᐃⲆⲆⲆ >> 24 & 255)) + (ΔᐃᐃⵠΔ << (ⲆⲆⲆᐃⲆⲆⲆ >> 8 & 255)) + (16 << (ⲆⲆⲆᐃⲆⲆⲆ >> 16 & 255));
		const ⲆⲆⵠᐃⲆΔΔ = ⲆΔⵠⵠⵠⵠΔ ^ 18573;
		const ᐃⵠⵠΔΔⲆᐃ = ((11283 + ⵠⵠⵠΔΔⲆⵠ) * 1664525 + 1013904223) % 4294967296;
		const ⵠᐃⲆᐃⲆᐃᐃ = (16 << (ΔⵠⲆⵠᐃΔΔ >> 8 & 255)) + (8 << (ΔⵠⲆⵠᐃΔΔ >> 0 & 255)) + (0 << (ΔⵠⲆⵠᐃΔΔ >> 16 & 255)) + (24 << (ΔⵠⲆⵠᐃΔΔ >> 24 & 255));
		const ᐃⵠΔΔⲆⲆΔ = ΔΔⵠᐃⵠΔᐃ(ⵠΔⵠᐃΔᐃᐃ, ⵠΔΔΔⲆΔΔ, ⲆⲆⵠᐃⲆΔΔ, ᐃⵠⵠΔΔⲆᐃ);
		const ΔΔⲆᐃᐃΔⲆⲆΔ = ⲆᐃⲆⵠⵠⲆⵠ(ⵠᐃⲆᐃⲆᐃᐃ, ⵠΔⵠᐃΔᐃᐃ, ⵠΔΔΔⲆΔΔ, ⲆⲆⵠᐃⲆΔΔ, ᐃⵠⵠΔΔⲆᐃ, ⵠᐃⲆᐃⲆᐃᐃ);
		const ΔⲆΔᐃΔⲆⵠ = (ᐃⵠΔΔⲆⲆΔ | 48254) & ~(48254 & ᐃⵠΔΔⲆⲆΔ);
		return ΔⲆΔᐃΔⲆⵠ
	}

	function ΔΔΔΔⵠⵠⲆ(ⵠΔᐃⵠⲆ) {
		return ΔΔΔᐃⵠⲆᐃ(ⵠΔᐃⵠⲆ, 44058, 44716, 17616, 39112, 56964)
	}
	const ⲆⵠⵠⲆΔ = ⵠΔΔᐃ;
	const ⲆᐃⲆⵠⲆΔΔ = ⵠⵠΔⲆⵠᐃΔ;
	const ᐃᐃⲆΔ = ⲆᐃⲆᐃ;

	function ΔⵠⲆΔⲆΔⵠ(ΔΔⵠᐃΔᐃⵠ, ⵠⵠⵠᐃΔⲆⵠ, ᐃᐃᐃⲆΔⲆⲆ, ᐃΔⲆⲆⲆᐃΔ) {
		ΔΔⲆⵠⵠⲆⵠ(ᐃΔΔΔⲆ, ΔΔⵠᐃΔᐃⵠ, ⵠⵠⵠᐃΔⲆⵠ, ᐃᐃᐃⲆΔⲆⲆ, ᐃΔⲆⲆⲆᐃΔ);
		const ⵠᐃⲆⵠⵠΔΔ = ⲆΔᐃᐃⲆΔΔ(ⲆᐃΔⲆ[ΔⲆᐃⲆ], ⲆᐃΔⲆ[ᐃᐃΔᐃ]);
		const ΔᐃᐃⵠΔⵠⵠᐃΔ = ⲆⲆⲆⵠⲆⲆⵠ(ⲆᐃΔⲆ[ⵠΔⲆΔ], ⲆᐃΔⲆ[Ⲇᐃⵠⵠ], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2]);
		const ΔⲆᐃᐃᐃⵠᐃ = ~(ⵠᐃⲆⵠⵠΔΔ & 49222) & 49222 | ~(49222 & ⵠᐃⲆⵠⵠΔΔ) & ⵠᐃⲆⵠⵠΔΔ;
		return ΔⲆᐃᐃᐃⵠᐃ
	}
	const ΔⵠᐃᐃⲆΔⲆ = ᐃΔⵠΔΔ;

	function ΔⵠᐃⵠⵠⲆΔ(ⵠⵠᐃᐃᐃΔᐃ, ⵠΔΔΔᐃΔⲆ) {
		const ΔᐃⲆⲆⲆⲆⲆ = 13711 ^ ⵠⵠᐃᐃᐃΔᐃ;
		const ᐃΔΔⵠΔᐃⲆ = (24 << (ⵠΔΔΔᐃΔⲆ >> 0 & 255)) + (16 << (ⵠΔΔΔᐃΔⲆ >> 24 & ΔⲆᐃⵠΔΔΔ)) + (8 << (ⵠΔΔΔᐃΔⲆ >> 16 & 255)) + (0 << (ⵠΔΔΔᐃΔⲆ >> 8 & 255));
		const ᐃⵠⵠⲆᐃⵠᐃ = ⵠᐃΔᐃⲆΔⵠ(ΔᐃⲆⲆⲆⲆⲆ, ᐃΔΔⵠΔᐃⲆ, ΔᐃⲆⲆⲆⲆⲆ, ᐃΔΔⵠΔᐃⲆ);
		const ᐃⲆᐃᐃᐃⲆⵠ = ⲆⲆᐃᐃⲆⲆᐃ(ΔᐃⲆⲆⲆⲆⲆ, ᐃΔΔⵠΔᐃⲆ);
		const ⲆΔᐃⲆΔⵠΔ = (29609 + (ᐃⵠⵠⲆᐃⵠᐃ ^ ᐃⲆᐃᐃᐃⲆⵠ)) % 65302;
		return ⲆΔᐃⲆΔⵠΔ
	}
	const ⵠⵠⲆⲆⵠΔΔ = ⵠⵠᐃᐃΔⵠⵠ;
	var ᐃΔⵠΔᐃⵠⲆ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠΔΔ] = ["Reidite Axe", "Legendary and lethal", "Damage: 33", "Shield Penetration: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠΔ] = ["Amethyst Axe", "Purple and powerful", ⵠ[125], "Shield Penetration: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔΔᐃ] = ["Diamond Axe", "Sparkle and slice", "Damage: 27", "Shield Penetration: 4"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⵠⵠ] = ["Gold Axe", "Chop 'til it drops!", ⵠ[ᐃᐃᐃΔᐃ], "Shield Penetration: 3"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠᐃ] = ["Stone Axe", "Rock your logs", "Damage: 21", "Shield Penetration: 2"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⲆⲆ] = ["Wood Axe", "Eco-friendly deforestation!", ⵠ[195], "Shield Penetration: 1"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃΔⲆ] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆΔ] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠⲆⲆ] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ᐃΔᐃⵠⲆ] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃΔⵠ] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⲆⵠ] = ["Reidite Shield", "A must for the pros of the getaway", ⵠ[316], "Damage: 6", "Players Defense: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔΔΔ] = ["Amethyst Shield", "Because you know how to run away in style", ⵠ[316], ⵠ[254], "Players Defense: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆΔ] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", ⵠ[316], ⵠ[355], ⵠ[502]];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆΔΔ] = ["Gold Shield", "When it's golden, it's always better.", ⵠ[316], ⵠ[429], "Players Defense: 3"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⲆΔ] = ["Stone Shield", "Protects you a bit more", ⵠ[316], ⵠ[145], "Players Defense: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⲆᐃ] = ["Wood Shield", "Protects you a bit", ⵠ[316], ⵠ[278], "Players Defense: 1"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠⵠᐃ] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⵠ] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⵠⵠ] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⲆ] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃⲆⲆ] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠΔ] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃΔⵠ] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⵠⵠ] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔΔⲆ] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", ⵠ[125], "Mobs Damage: 300", "Building Damage: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⲆ] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⲆᐃ] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆΔⵠ] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆⲆ] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", ⵠ[18], "Mobs Damage: 100", "Building Damage: 20"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔⵠΔ] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆⲆ] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃⵠ] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔΔΔ] = [ⵠ[331], "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔᐃ] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔΔⲆ] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠΔⲆ] = ["Vulture Feather", "From a deadly vulture"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆᐃ] = ["Emerald", "How many golden breads can you get from it?"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔⵠᐃ] = ["Sand Worm Juice", "I don't want to know how you got this."];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠΔ] = ["Turban", "Useful to survive in the desert."];
		ᐃΔΔ[ⵠⲆ.ⲆᐃᐃⵠΔ] = ["Ninja outfit", "Essential to survive in the desert"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃᐃ] = ["Pilot Hat", "Take off and land with flying objects much faster."];
		ᐃΔΔ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ] = ["Pilot Glasses"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠΔ] = ["Tamed Boar", "Fast on lands and slow on water."];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃᐃᐃ] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠΔΔ] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⲆⲆⲆ] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", ⵠ[178], ⵠ[286]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⲆᐃⲆ] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", ⵠ[178], ⵠ[286]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆⵠᐃ] = ["Tamed Hawk", "You can fly with it.", ⵠ[178], ⵠ[286]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃⲆ] = ["Saddle", "Hit a boar with it to tame it."];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠᐃ] = ["Witch Hat", "You're a wizard Starvy!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠⵠ] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⵠⲆ] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⲆ] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
		ᐃΔΔ[ⵠⲆ.ᐃΔᐃΔⵠ] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔΔⵠ] = ["Pirate hat", "You are faster with it in a boat", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⵠΔ] = ["Sled", "You are faster with it in the snow"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆᐃΔ] = ["Boat", "You are faster with it in the water"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⲆⲆ] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", ⵠ[178], ⵠ[286]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃⵠ] = ["Reidite Hammer", ⵠ[466], "Damage: 6", "Building Damage: 60"];
		ᐃΔΔ[ⵠⲆ.Δᐃᐃᐃᐃ] = ["Penguin Feather", "From a deadly cute penguin."];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠⵠ] = ["Hawk Feather", "From a deadly hawk."];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠᐃ] = [ⵠ[ⲆⵠΔᐃ], "Food : 20", "Water : 10"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⲆΔ] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃᐃΔ] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔᐃ] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⲆ] = ["Watermelon Seed", "Grows into Watermelon", ⵠ[96], "Growth: 180s", "Need water: 3min 20s", ⵠ[415], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ⲆᐃᐃⲆⵠ] = ["Reidite Door", "Noboby can destroy it. Except very reckless", ⵠ[254], "On-Hit Damage: 1", "Durability: 4000"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⲆⲆ] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⵠᐃ] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆⵠ] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ᐃΔᐃΔᐃ] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", ⵠ[40]];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠⲆⲆ] = ["Wood Door Spike", "Can be opened or closed by you or your friends", ⵠ[254], "On-Hit Damage: 1", "Durability: 100"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠⵠ] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃᐃᐃ] = ["Gold Door Spike", 'Are you rebuilding the "el dorado?"', "Damage: 15", "On-Hit Damage: 2", ⵠ[415]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⲆⵠⲆ] = ["Diamond Door Spike", "For a shining house", "Damage: 25", ⵠ[222], "Durability: 800"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔΔ] = ["Amethyst Door Spike", "Is your house a locked safe?", ⵠ[125], ⵠ[222], "Durability: 1600"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠⲆᐃ] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠᐃΔ] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆᐃᐃ] = ["Carrot Seed", "Grows into Carrot", ⵠ[96], "Growth: 30s", "Need water: 1min 40s", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆⲆᐃ] = ["Tomato Seed", "Grows into Tomato", ⵠ[96], "Growth: 30s", "Need water: 1min 40s", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔᐃⲆ] = ["Pitchfork", "Perfect for gathering"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔᐃ] = ["Golden Pitchfork", "Essential for a real farmer."];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ] = [ⵠ[317], "Eat it or sell it in exchange for wood or stone", "Food : 12"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔⲆΔ] = [ⵠ[317], "Eat it or sell it in exchange for gold", "Food : 25"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ] = [ⵠ[317], "Eat it or sell it in exchange for diamond", "Food : 50"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆᐃⵠΔ] = [ⵠ[317], "Eat it or sell it in exchange for amethyst", "Food : 75"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔΔΔΔ] = [ⵠ[317], "Eat it or sell it in exchange for reidite", "Food : 100"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠᐃⲆ] = ["Lava Cube", "You feel an immense power emanating from this cube"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃᐃΔ] = ["Lava Orb", "You feel an immense power emanating from this orb"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⲆⵠ] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆΔΔ] = ["Lava Spear", "Doing good or doing evil", ⵠ[255], "Building Damage: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔᐃ] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠⲆᐃ] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⲆ] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆΔⲆ] = ["Reidite Sword", "Really useful against Lava Monsters", ⵠ[125], "Building Damage: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠⵠ] = ["Flame", "It's hot!"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔᐃⵠ] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔᐃᐃ] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
		ᐃΔΔ[ⵠⲆ.Δⵠᐃᐃⵠ] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆ] = ["Reidite", "The ultimate ore"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = ["Dragon Cube", "You feel a great power emanating from this cube"];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃⲆΔⵠ[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
		ᐃⲆΔⵠ[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
		ᐃⲆΔⵠ[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
		ᐃⲆΔⵠ[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
		ᐃⲆΔⵠ[27] = ['You were trampled by that boar. From now on, your new nickname is "the doormat".'];
		ᐃⲆΔⵠ[28] = ['With a force of 3300 newtons, the shock wave from the closing of the crab king\'s claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the "crab rave"'];
		ᐃⲆΔⵠ[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
		ᐃⲆΔⵠ[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
		ᐃⲆΔⵠ[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
		ᐃⲆΔⵠ[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
		ᐃⲆΔⵠ[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
		ᐃⲆΔⵠ[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
		ᐃⲆΔⵠ[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
		ᐃⲆΔⵠ[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
		ᐃⲆΔⵠ[37] = ['You hear "Avada Kedavra!" before you turn to ashes.'];
		ᐃⲆΔⵠ[38] = ["You died crushed by an angry baby mammoth."];
		ᐃⲆΔⵠ[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
		ᐃⲆΔⵠ[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃᐃᐃᐃΔ] = "A sandstorm is approaching in a few seconds.";
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆΔΔⵠⵠΔ] = "The sandstorm will soon stop.";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠᐃⵠⲆΔᐃ] = "A blizzard is approaching in a few seconds.";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⲆⲆⲆⲆΔ] = "The blizzard will soon stop.";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[ΔⲆᐃⵠΔ];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], "Players Defense: 5", "Animals Defense: 19"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[13])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[ⵠΔΔᐃᐃⲆⲆ];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[17])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Collect 1 dragon heart inside the cave";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = "100 bread in winter, alone, without come back";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = 0; ᐃⲆⵠⲆⲆ > ᐃⲆ; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Hand"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Dirt", "Dirty!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Sand", "I got it in my eyes!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Wood", "You can't get enough of it!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Stone", "Also called a rock"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Gold", "Be generous, give it to others"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Diamond", "What will you make with it?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Amethyst", "It's Mauve like Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Flour", "Used in cooking"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["Cooked meat", "A rare steak, please", "Food: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = [ⵠ[538], "Tastes like Krabby Patty", "Food: 100"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Candies", "Only for children!", ⵠ[414]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Garland", "Perfect decoration for roofs"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Berry", "Berry tasty!", ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Garlic Seed", "Very dangerous for vampires", ⵠ[18], ⵠ[96], "Growth: 1min 10s", "Need water: 1min 40s", ⵠ[59], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Thorn bush Seed", "Can damage your enemies", ⵠ[ΔⵠΔⵠᐃⵠⲆ], ⵠ[96], "Growth: 15s", "Need water: 3min", ⵠ[78], ⵠ[325]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Thorn bush", "It stings!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Ice", "Useful for making cakes and water"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Wrench", "To repair doors, walls and spike", ⵠ[145]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Rabbit Fur", "That rabbit was so cute..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Pure Fur", "You're a bread factory"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Dark Fur", "You get ready to do something wrong"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Winter Fur", "These animals just wanted a hug..."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Scales", "It smells like fish!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Kraken Skin", "Weren't you too scared?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Big Firecamp", "Warm you up more time!", ⵠ[415], "Lifetime: 6min"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Workbench", "Very useful to craft all kinds of objects"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Cord", "Used in crafting Hats and Bag"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Diamond Cord", "Used in crafting Special Hats"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Chest", "Allows you to store items", "Durability: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Wood Sword", "Does that work?", "Damage: 12", ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Diamond Sword", "You can feel the power", ⵠ[ΔΔΔⵠᐃⵠⵠ], "Building Damage: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", ⵠ[ᐃΔᐃⲆΔ], "Building Damage: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Dragon Sword", "No mercy!", ⵠ[125], "Building Damage: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Wood Pickaxe", "Can harvest only stone and wood", ⵠ[278]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Stone Pickaxe", "Can harvest wood, stone and gold", ⵠ[145]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Gold Pickaxe", "Can also harvest diamond", ⵠ[429], ⵠ[40]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Diamond Pickaxe", "Can also harvest amethyst", ⵠ[355], ⵠ[40]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", ⵠ[254], ⵠ[40]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Stone Hammer", ⵠ[466], "Doesn't work well on diamond or amethyst", ⵠ[145], "Building Damage: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Gold Hammer", ⵠ[466], "Doesn't work well on amethyst", ⵠ[429], "Building Damage: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Diamond Hammer", ⵠ[466], ⵠ[355], "Building Damage: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Amethyst Hammer", ⵠ[466], ⵠ[254], "Building Damage: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Stone Spear", "The beginning of evolution!", ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Stone Shovel", ⵠ[219], ⵠ[192], ⵠ[145]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Gold Shovel", ⵠ[219], ⵠ[192], ⵠ[429], "Buildings Damage: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Diamond Shovel", ⵠ[219], ⵠ[192], ⵠ[355], "Buildings Damage: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Amethyst Shovel", ⵠ[219], ⵠ[192], ⵠ[254], "Buildings Damage: 1"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Gold Helmet", "AKA the helmet of the savages", ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⲆ] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", ⵠ[171], "You also calm down aggressive monsters twice as fast"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Earmuffs", "Some kind of little chapka.", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = [ⵠ[416], "Also called a coat.", "Warmer outside water and in winter"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠⵠᐃ] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Peasant", "Your plants grow faster", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Winter Peasant", "Your plants grow faster", ⵠ[171]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", ⵠ[311]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Dragon Orb", ⵠ[147]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Green Gemstone", "You didn't cheat, promise?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Orange Gemstone", "Only a real pirate can find it!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Blue Gemstone", "For too kind people"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", ⵠ[311]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Orange Crown", "You suddenly feel very lucky", ⵠ[311]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", ⵠ[311]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Empty Bucket", "You need to fill this bucket near a water source"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Empty Bottle", "You can fill this bottle near a water source"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Empty Watering Can", "You must fill it with a water source to use it"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Watering Can", "Allows watering of plants", ⵠ[278]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Bag", "More space for your items!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Paper", "Used in book-crafting"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", ⵠ[278]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Lock", "Allow you to lock your chest"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Lock-pick", "Allows you to unlock one chest"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = [ⵠ[330], "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Sign", "Leave a message to others", "Durability: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Well", "Allows bottle filling", ⵠ[78]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Wood Wall", "It's just a wall", ⵠ[78]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Stone Spike", "I wouldn't want to be your enemy.", ⵠ[18], ⵠ[222], "Durability: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Gold Spike", "You're so cruel.", ⵠ[125], ⵠ[222], "Durability: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Wood Door", "Can be opened or closed by you or your friends", ⵠ[78]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Gold Door", 'Are you rebuilding the "el dorado?"', ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Diamond Door", "For a shining house", "Durability: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", ⵠ[78]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", ⵠ[119]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "You cannot join this server";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Kicked: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Your key is already used by someone else";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Your key is wrong";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "You have an old version, you need to clear your cache";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠⲆᐃᐃⲆⵠ] = "Your client version is too recent for this server. The server is being updated";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃⵠⲆᐃΔᐃ] = "Wrong password! To enter a password: https://starve.io/?password=...";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "There are no more new resources";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "You survived 1 day";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "You survived ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " days";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "You are dead ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "Server cannot find spawn location! Spam the play button!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "Server is full! Spam the play button!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Resource is empty";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "Inventory is full (right-click to empty items)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " is dead";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "This is not the right tool";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "You joined a team";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "You are dead";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " joined the team";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Your team was destroyed";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "You left the team";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " left the team";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Someone stole your token :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Choose a server";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "players";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "total players";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "players on this mode";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Coming soon...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Nickname";
		ᐃⲆΔⵠ[0] = ["You were killed for no reason"];
		ᐃⲆΔⵠ[ΔⲆᐃ] = ["You starved to death, as the name of the game implies"];
		ᐃⲆΔⵠ[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
		ᐃⲆΔⵠ[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
		ᐃⲆΔⵠ[ⵠΔⲆᐃΔ] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
		ᐃⲆΔⵠ[ⵠᐃᐃΔᐃ] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
		ᐃⲆΔⵠ[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
		ᐃⲆΔⵠ[ⵠᐃⲆⲆⲆ] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
		ᐃⲆΔⵠ[ⲆⲆᐃᐃᐃ] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
		ᐃⲆΔⵠ[ΔᐃΔᐃⲆΔⵠ] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
		ᐃⲆΔⵠ[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
		ᐃⲆΔⵠ[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
		ᐃⲆΔⵠ[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
		ᐃⲆΔⵠ[ⲆⲆⵠᐃⵠⵠⲆ] = ["You died of thirst. Better drink your own piss."];
		ᐃⲆΔⵠ[ⵠΔΔΔΔΔᐃ] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
		ᐃⲆΔⵠ[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
		ᐃⲆΔⵠ[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
		ᐃⲆΔⵠ[17] = ["Your skin's falling apart, the sun killed you."];
		ᐃⲆΔⵠ[ⵠⵠⲆΔᐃⵠⲆ] = ["Garlic stored in your pockets boiled your brain."];
		ᐃⲆΔⵠ[ⲆⲆᐃΔᐃⵠⲆ] = ["As a vampire, don't stand near the garlic cloves."];
		ᐃⲆΔⵠ[20] = ["You ate garlic as a vampire, what did you expect?"];
		ᐃⲆΔⵠ[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", ⵠ[303], "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"]
	};

	function ΔΔⵠᐃⵠΔᐃ(ⲆΔⵠΔΔᐃⵠ, ⲆⲆⵠᐃᐃᐃΔ, ⵠᐃⲆⲆᐃⲆΔ, ᐃΔΔⵠⲆΔⵠ) {
		const ⵠΔⵠΔⵠⵠⲆ = (2147483629 * (21461 + ⲆΔⵠΔΔᐃⵠ) + 2147483587) % 2147483647;
		const ⵠΔΔⵠⵠΔᐃ = ((19046 + ⲆⲆⵠᐃᐃᐃΔ) * 1664525 + 1013904223) % 4294967296;
		const ᐃΔⵠᐃᐃᐃⲆ = ~(32326 & ⵠᐃⲆⲆᐃⲆΔ) & (32326 | ⵠᐃⲆⲆᐃⲆΔ);
		const ⲆᐃΔᐃΔⲆᐃ = (17680 | ᐃΔΔⵠⲆΔⵠ) & ~(17680 & ᐃΔΔⵠⲆΔⵠ);
		const ᐃᐃⵠᐃⵠⵠΔ = ⵠⲆⵠΔⲆⲆⵠ(ⵠΔⵠΔⵠⵠⲆ, ⵠΔΔⵠⵠΔᐃ, ᐃΔⵠᐃᐃᐃⲆ, ⲆᐃΔᐃΔⲆᐃ, ⵠΔⵠΔⵠⵠⲆ, ⵠΔΔⵠⵠΔᐃ);
		const ⲆᐃᐃᐃⵠᐃⵠΔⵠ = ΔᐃΔⲆᐃΔⵠ(ᐃΔⵠᐃᐃᐃⲆ, ⲆᐃΔᐃΔⲆᐃ);
		const ⵠᐃᐃⵠⵠᐃᐃ = ᐃᐃⵠᐃⵠⵠΔ ^ 18384;
		return ⵠᐃᐃⵠⵠᐃᐃ
	}

	function ⲆᐃᐃᐃⵠᐃΔ(ΔⵠᐃᐃΔΔΔ, ΔⵠⵠᐃΔΔᐃ) {
		ⲆⵠΔΔΔⵠⵠ(ᐃΔΔΔⲆ, ΔⵠᐃᐃΔΔΔ, ΔⵠⵠᐃΔΔᐃ);
		const ⵠᐃΔᐃⵠΔⲆ = ⲆⵠⵠⵠΔᐃⲆ(ⲆᐃΔⲆ[ΔΔⲆᐃ], ⲆᐃΔⲆ[ⵠⲆⲆ], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ᐃᐃΔᐃ]);
		const ⵠⵠΔΔⵠⵠΔΔⲆ = ⲆⲆⲆⵠⲆⲆⵠ(ⲆᐃΔⲆ[ΔⲆᐃⲆ], ⲆᐃΔⲆ[ⵠⲆⲆ], ⲆᐃΔⲆ[ᐃΔⵠⵠ], ⲆᐃΔⲆ[ᐃᐃΔᐃ], ⲆᐃΔⲆ[Ⲇᐃⵠᐃ]);
		const ΔΔᐃᐃᐃⵠᐃ = ~(ⵠᐃΔᐃⵠΔⲆ & 1096) & 1096 | ~(1096 & ⵠᐃΔᐃⵠΔⲆ) & ⵠᐃΔᐃⵠΔⲆ;
		return ΔΔᐃᐃᐃⵠᐃ
	}

	function ᐃⲆᐃⵠΔⲆⵠ(ⵠΔᐃⵠⲆ) {
		return ⲆᐃᐃᐃⵠᐃΔ(ⵠΔᐃⵠⲆ, 7342, 50549, 51710, 44289, 11762)
	}

	function ⲆⲆⵠᐃᐃⵠΔ(ᐃΔⵠⵠⲆⲆⵠ, ᐃᐃᐃᐃΔⵠⲆ, ⵠⲆᐃᐃΔᐃⵠ, ⵠᐃΔⵠⵠⲆᐃ, ΔⲆᐃᐃⵠⲆᐃ) {
		const ⲆᐃⵠⲆⵠΔⲆ = ((ᐃΔⵠⵠⲆⲆⵠ + 5390) * 2147483629 + 2147483587) % 2147483647;
		const ⲆⵠⵠⵠⲆΔᐃ = (2147483587 + (ᐃᐃᐃᐃΔⵠⲆ + 6675) * 2147483629) % 2147483647;
		const ⲆᐃⵠⵠΔⵠⲆ = 36277 ^ ⵠⲆᐃᐃΔᐃⵠ;
		const ᐃΔᐃΔΔΔⲆ = ~(ⵠᐃΔⵠⵠⲆᐃ & 58201) & (ⵠᐃΔⵠⵠⲆᐃ | 58201);
		const ⲆΔⲆⵠⵠⵠⲆ = (2147483587 + 2147483629 * (9521 + ΔⲆᐃᐃⵠⲆᐃ)) % 2147483647;
		const ⵠⵠᐃⵠⲆⵠⲆ = ⵠᐃⲆⲆⲆΔΔ(ⲆᐃⵠⲆⵠΔⲆ, ⲆⵠⵠⵠⲆΔᐃ, ⲆᐃⵠⵠΔⵠⲆ, ᐃΔᐃΔΔΔⲆ, ⲆΔⲆⵠⵠⵠⲆ);
		const ⵠΔⵠⵠᐃΔΔⲆᐃ = ⲆⵠⲆΔⵠᐃᐃ(ⲆᐃⵠⲆⵠΔⲆ, ⲆⵠⵠⵠⲆΔᐃ, ⲆᐃⵠⵠΔⵠⲆ, ᐃΔᐃΔΔΔⲆ);
		const ⲆⲆⲆⲆⵠⵠⲆ = 55905 ^ ⵠⵠᐃⵠⲆⵠⲆ;
		return ⲆⲆⲆⲆⵠⵠⲆ
	}
	const ⵠⲆᐃᐃⵠᐃᐃ = ⲆⵠⲆⵠⵠⲆⲆ;
	const ⲆⲆⵠᐃΔᐃΔ = ΔⲆᐃⵠΔ;
	var ΔⵠⲆᐃΔᐃⵠ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[ⲆΔΔⲆΔ];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ⲆⵠⲆΔⲆᐃⵠ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[ᐃᐃΔⵠⵠ];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ⲆⲆᐃⲆⲆ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[346];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[182];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = Δⵠⵠ; ΔΔⲆᐃⵠ > ᐃⲆ; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Рука"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Земля", "Грязно!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Песок", "Он в моих глазах!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Дерево", "Постоянно нужно больше!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Камень", "Твердый"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Золото", "Будьте щедры, давайте его другим"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Алмаз", "Что вы создадите с помощью него?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Аметист", "Он сиреневый, как Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Мука", "Используется в готовке"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Конфеты", "Только для детей!", "Еда: 20"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Гирлянда", "Прекрасная декорация для крыши"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", ⵠ[514], ⵠ[72]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", ⵠ[514], ⵠ[72]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", ⵠ[514], ⵠ[72]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", ⵠ[514], ⵠ[72]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", ⵠ[106], ⵠ[72]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Колючий Куст", "Это больно!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", ⵠ[131]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Лёд", "Используется для изготовления тортов и воды"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", ⵠ[548]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Шкура Зайца", "Этот кролик был таким милым..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Чистая Шкура", "Вы - фабрика хлеба"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Чёрная Шкура", "Вы готовы делать зло."];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Чешуя", "Она пахнет рыбой!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Шкура Кракена", "Вы не испугались?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Верстак", "Необходим для создания многих предметов"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Каменная Кирка", "Может добывать дерево, камень и золото", ⵠ[548]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", ⵠ[133]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", ⵠ[133]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", ⵠ[133]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Каменный молот", ⵠ[428], "Плохо разрушает алмазные и аметистовые здания", ⵠ[548], "Урон по строениям: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Золотой Молот", ⵠ[428], "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Алмазный Молот", ⵠ[428], "Урон: 4", "Урон по строениям: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Аметистовый Молот", ⵠ[428], "Урон: 5", "Урон по строениям: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Каменная Лопата", ⵠ[569], ⵠ[534], ⵠ[548]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Золотая Лопата", ⵠ[569], ⵠ[534], "Урон: 3", ⵠ[133]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Алмазная Лопата", ⵠ[569], ⵠ[534], "Урон: 4", ⵠ[133]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Аметистовая Лопата", ⵠ[569], ⵠ[534], "Урон: 5", "Урон по стреониям: 1"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Теплые Наушники", "Какая-то маленькая шапка.", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = ["Шапка", "Так же называется пальтом.", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Крестьянская Туника", "Ваши растения растут быстрее", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", ⵠ[350]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", ⵠ[206]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Шар Дракона", "Даётся за квест"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", ⵠ[206]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Оранжевая Корона", "Вам очень повезло", ⵠ[206]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", ⵠ[206]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Рюкзак", "Больше места для ваших предметов!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Бумага", "Используется при создании книги"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Замок", "Позволяет вам закрыть ваш сундук"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Ключ", "Даёт вам открыть один запертый сундук"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Крыша", "Немного скрывает вас и согревает!"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Колодец", "Позволяет заполнить бутылку", ⵠ[106]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Деревянная Стена", "Это просто стена", ⵠ[106]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", ⵠ[131]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", ⵠ[106]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Золотая Дверь", 'Вы перестраиваете "Эль Дорадо?"', ⵠ[131]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", ⵠ[106]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", ⵠ[131]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", ⵠ[131]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "Вы не можете зайти на этот сервер";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Выгнаны: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Ваш ключ уже используется кем-то";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Ваш ключ неправильный";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "У вас старая версия, вам нужно очистить кеш";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "Ресурсов больше нет";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "Вы выжили 1 день";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "Вы выжили ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " дней";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "Вы умерли ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "Сервер заполнен! Спамьте кнопку играть!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Ресурсы закончились";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " умер";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "Это не тот инструмент";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "Вы вошли в команду";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "Вы умерли";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " вошёл в команду";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Ваша команда была разрушена";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "Вы покинули команду";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " покинул команду";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Кто-то использует ваш токен :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Выберите сервер";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "игроков";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "игроков всего";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "игроков в этом режиме";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Скоро...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Имя";
		ᐃⲆΔⵠ[ΔΔᐃ] = ["Вы были убиты без причины"];
		ᐃⲆΔⵠ[ⵠᐃΔᐃ] = ["Вы умерли от голода, как название игры подразумевает это"];
		ᐃⲆΔⵠ[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
		ᐃⲆΔⵠ[ⵠⲆⲆΔ] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
		ᐃⲆΔⵠ[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
		ᐃⲆΔⵠ[ⲆΔᐃΔ] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
		ᐃⲆΔⵠ[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
		ᐃⲆΔⵠ[ᐃⵠᐃⵠΔ] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
		ᐃⲆΔⵠ[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
		ᐃⲆΔⵠ[ᐃΔⵠΔΔ] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
		ᐃⲆΔⵠ[ⲆᐃΔⵠⵠ] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
		ᐃⲆΔⵠ[ΔⲆΔⵠⲆⵠⲆ] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
		ᐃⲆΔⵠ[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
		ᐃⲆΔⵠ[ΔΔⲆΔΔ] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
		ᐃⲆΔⵠ[ΔⲆⵠⲆΔΔⲆ] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
		ᐃⲆΔⵠ[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
		ᐃⲆΔⵠ[ⲆⲆᐃΔΔ] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
		ᐃⲆΔⵠ[17] = ["Твоя кожа разваливается, солнце убило тебя"];
		ᐃⲆΔⵠ[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
		ᐃⲆΔⵠ[ΔᐃⵠΔΔ] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
		ᐃⲆΔⵠ[ⵠᐃⲆΔ] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
		ᐃⲆΔⵠ[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", ⵠ[303], "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"]
	};
	const ⲆⲆᐃᐃ = {};
	const ⵠⵠⵠΔ = {};
	ⲆⲆᐃᐃ["get"] = function(ᐃΔᐃⲆᐃΔⲆ, ᐃᐃᐃᐃΔ) {
		if (ᐃᐃᐃᐃΔ !== "ⲆⲆᐃᐃ") {
			const ⲆⲆᐃᐃ = Math.floor;
			let ⵠⲆᐃᐃΔΔΔ = 0;
			const ᐃΔᐃⲆᐃΔⲆ = function(ᐃΔᐃⲆᐃΔⲆ) {
				for (let ᐃᐃᐃᐃΔ = 0; ᐃᐃᐃᐃΔ < 6765; ᐃᐃᐃᐃΔ++) ⵠⲆᐃᐃΔΔΔ += ᐃᐃᐃᐃΔ;
				return ⲆⲆᐃᐃ(ᐃΔᐃⲆᐃΔⲆ)
			};
			Math.floor = ᐃΔᐃⲆᐃΔⲆ
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ⵠⲆᐃᐃΔΔΔ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ⵠⵠⵠΔ, ⲆⲆᐃᐃ);
	const ΔΔⵠΔΔΔⵠ = ⵠⲆᐃᐃΔΔΔ.ⲆⲆᐃᐃ;
	var ΔΔᐃᐃⲆⲆⲆ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[19];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ΔⵠⲆⲆⵠⵠΔ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[8];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ᐃᐃΔⲆΔⵠⵠ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[346];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[182];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < 7; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["mão"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["terra", "está sujo!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["areia", "entrou nos meus olhos!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["madeira", "você não pode pegar o suficiente disso!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["pedra", "também chamado rocha"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["ouro", "seja generoso, dê para outros"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["diamante", "o que você irá fazer com isso?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["ametista", "é mauve como lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["farinha", "usada na cozinha"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["biscoito", "biscoito da vovó", "comida: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["bolo", "bolo dos sonhos para gourmets", ⵠ[249]];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["carne assada", "um mal passado, por favor", "comida: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["peixe assado", "com limão é perfeito", "comida: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ["sanduíche", "saboroso com rissol de krabby", ⵠ[249]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["doces", "apenas para crianças!", ⵠ[249]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["cana-de-açúcar", "prove, é delicioso!", ⵠ[249]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["pisca-pisca", "decoração perfeita de telhado"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", ⵠ[270], "tempo de vida: 8 dias"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["berry", "Berry saborosa!", "comida: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", ⵠ[270], "tempo de vida: 8 days"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", ⵠ[270], "tempo de vida: 8 dias"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", ⵠ[270], "tempo de vida: 8 dias"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", ⵠ[487], "tempo de vida: 8 days"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["mato de espinhos", "pica!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", ⵠ[149]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["gelo", "útil para fazer bolo e água"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["chave inglesa", "para reparar portas, muros e muros com espinho", ⵠ[88]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["pele de coelho", "o coelho era tão fofo..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["pele pura", "você é uma fábrica de pão"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["pele negra", "você está pronto para fazer algo errado"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["pele de inverno", "ele só queria um abraço"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["escala", "é pequeno como peixe!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["pele do kraken", "você não está com medo?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["linha", "usada para fazer chapéus e mochila"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["linha de diamante", "usada para fazer chapéus especiais"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠΔⲆⲆⵠ] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", ⵠ[88]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["picareta de ouro", "pode coletar diamante", "dano: 3", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["picareta de diamante", "pode coletar tudo", "dano: 4", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["martelo de pedra", ⵠ[372], "não funciona bem no diamante e na ametista", ⵠ[88], "dano em construções: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["martelo de ouro", ⵠ[372], "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["martelo de diamante", ⵠ[372], "dano: 4", "dano em construções: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["martelo de ametista", ⵠ[372], "dano: 5", "dano em construções: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["pá de pedral", ⵠ[520], ⵠ[505], ⵠ[88]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["pá de ouro", ⵠ[520], ⵠ[505], "dano: 3", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["pá de diamante", ⵠ[520], ⵠ[505], "dano: 4", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["pá de ametista", ⵠ[520], ⵠ[505], "dano: 5", ⵠ[494]];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = [ⵠ[416], "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", ⵠ[250]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["esfera do dragão", "dado na questt"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["pedra verde", "você não vai trapacear, promete?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["pedra azul", "para pessoas muito gentis"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", ⵠ[250]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["coroa laranja", "de repente você se sente muito sortudo", ⵠ[250]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", ⵠ[250]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["regador", "permite regar as plantas", "dano: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["mochila", "mais espaço para seus itens!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["papel", "usado para fazer o livro"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["fechadura", "permite você trancar seu baú"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["chave", "permite destrancar um baú"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = [ⵠ[330], "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["telhado", "esconde você um pouco e te esquenta!"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["poço", "permite encher garrafas", ⵠ[487]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["muro de madeira", "você sabia que o muro dança?", ⵠ[487]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", ⵠ[149]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", ⵠ[487]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["porta de ouro", "você está re-construindo o el dorado?", ⵠ[149]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", ⵠ[487]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", ⵠ[149]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", ⵠ[149]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "você não pode entrar no servidor";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "kickado: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "sua chave está em uso por outra pessoa";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "sua chave está errada";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "você tem uma versão velha, limpe seu cache";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "não tem mais recursos";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "você sobreviveu 1 dia";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "você sobreviveu ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " dias";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "você está morto ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "servidor não pôde achar um local de spawn! spam o botão de play!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "servidor está cheio! spam o botão de play!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "não tem recursos";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "inventário está cheio (botão direito para deletar itens)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " está morto";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "essa não é a ferramenta certa";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "você entrou no time";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "você está morto";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = "entrou no time";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "seu time foi destruido";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "você saiu do time";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " saiu do time";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "alguém roubou sua ficha :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "escolha um servidor";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "jogadores";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "jogadores totais";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "jogadores nesse modo";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Coming soon...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Apelido";
		ᐃⲆΔⵠ[0] = ["você morreu sem motivo"];
		ᐃⲆΔⵠ[1] = ["você morreu de fome, como o jogo diz"];
		ᐃⲆΔⵠ[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
		ᐃⲆΔⵠ[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
		ᐃⲆΔⵠ[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
		ᐃⲆΔⵠ[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
		ᐃⲆΔⵠ[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
		ᐃⲆΔⵠ[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
		ᐃⲆΔⵠ[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
		ᐃⲆΔⵠ[ᐃᐃⲆⲆⲆ] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
		ᐃⲆΔⵠ[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
		ᐃⲆΔⵠ[ΔΔᐃΔΔᐃᐃ] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
		ᐃⲆΔⵠ[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
		ᐃⲆΔⵠ[13] = ["você morreu de sede. melhor beber sua própria urina."];
		ᐃⲆΔⵠ[Ⲇⵠᐃᐃⵠⵠⵠ] = ["você sabia que você morre afogado? agora você sabe."];
		ᐃⲆΔⵠ[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
		ᐃⲆΔⵠ[ⵠⲆⵠⵠΔ] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
		ᐃⲆΔⵠ[17] = ["sua pele caindo aos pedaços, o sol te matou."];
		ᐃⲆΔⵠ[ΔᐃΔⵠⲆ] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
		ᐃⲆΔⵠ[ⵠⵠΔⲆⵠᐃΔ] = ["como vampiro, não chegue perto do alho."];
		ᐃⲆΔⵠ[20] = ["você comeu alho como vampiro, o que você esperava?"];
		ᐃⲆΔⵠ[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", ⵠ[303], "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"]
	};
	const ΔⲆΔⲆⵠ = ᐃᐃΔⵠⵠ;

	function ⵠᐃⲆΔⵠᐃΔ(ⲆᐃΔⵠⵠΔᐃ, ⲆⵠᐃΔᐃᐃⵠ, ᐃⲆᐃᐃⵠΔᐃ, ᐃᐃⵠⲆᐃⵠᐃ, ᐃΔⵠΔⲆΔΔ, ᐃᐃΔΔᐃⵠⲆ) {
		ᐃᐃΔⲆᐃⲆΔ(ᐃΔΔΔⲆ, ⲆᐃΔⵠⵠΔᐃ, ⲆⵠᐃΔᐃᐃⵠ, ᐃⲆᐃᐃⵠΔᐃ, ᐃᐃⵠⲆᐃⵠᐃ, ᐃΔⵠΔⲆΔΔ, ᐃᐃΔΔᐃⵠⲆ);
		const ⲆΔⵠΔⵠⲆⲆ = ΔⵠᐃΔⵠᐃⲆ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1]);
		const ⲆΔᐃΔⵠᐃⲆ = ΔⲆⵠΔⲆⲆᐃ(ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[ⵠⵠⲆⵠ], ⲆᐃΔⲆ[4]);
		const ⵠᐃⵠΔⵠΔΔ = ((240 + (ⲆΔⵠΔⵠⲆⲆ ^ ⲆΔᐃΔⵠᐃⲆ)) * 16807 + 0) % 2147483647;
		return ⵠᐃⵠΔⵠΔΔ
	}
	var ᐃΔⲆΔΔⵠᐃ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[ⵠΔⵠⲆᐃΔΔ];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ΔⲆΔᐃΔ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[8];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ᐃⲆᐃⲆΔ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[346];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[182];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = 0; 7 > ᐃⲆ; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Mano"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Tierra", "¡Tan limpia como mis manos!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Arena", "¡Tengo arena en mis ojos!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Madera", "¡Nunca hay suficiente!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Piedra", "También llamada roca."];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Oro", "Sé generoso, compártelo con los otros"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Diamante", "¿Que vas a hacer con él?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Amatista", "Es Mauve como Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Harina", "Usada para cocinar."];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["Tarta", "¡Cumpleaños Feliz!", ⵠ[581]];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ["Bocadillo", "Sabe como un Krabby Patty", ⵠ[581]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Caramelos", "¡Solo para niños/as!", ⵠ[581]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Caña de Azúcar", "Pruébala, es deliciosa", ⵠ[581]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Guirnalda", "Perfecta para decorar el techo"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", ⵠ[498], "Tiempo de vida: 8 Días"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Baya", "No es venenosa.", "Comida: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", ⵠ[498], "Tiempo de vida: 8 Días"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", ⵠ[498], "Tiempo de vida: 8 Días"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", ⵠ[498], "Tiempo de Vida: 8 Días"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", ⵠ[87], "Tiempo de Vida: 8 Días"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Planta de Espinas", "¡Te daña!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", ⵠ[267]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Hielo", "Bueno para hacer tartas y agua"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", ⵠ[585]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Escamas", "¡Huele a pescado!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Hilo", "Usado para craftear ropa y mochila"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Pico de Piedra", "Puede minar hasta oro", ⵠ[585]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Martillo de Piedra", ⵠ[172], "No funciona bien con diamante y amatista", ⵠ[585], "Daño para estructuras: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Martillo de Oro", ⵠ[172], "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Martillo de Diamante", ⵠ[172], "Daño: 4", "Daño para estructuras: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Martillo de Amatista", ⵠ[172], "Daño: 5", "Daño para estructuras: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Pala de Piedra", ⵠ[381], ⵠ[173], ⵠ[585]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Pala de Oro", ⵠ[381], ⵠ[173], "Daño: 3", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Pala de Diamante", ⵠ[381], ⵠ[173], "Daño: 4", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Pala de Amatista", ⵠ[381], ⵠ[173], "Daño: 5", ⵠ[135]];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", ⵠ[583]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Orejeras", "Como un abrigo pequeño.", ⵠ[583]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = [ⵠ[416], "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", ⵠ[583]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", ⵠ[583]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Esfera del Dragón", "Dada en la misión"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Gema Azul", "Para gente muy amable"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Botella Vacia", "La puedes llenar de agua"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Regadera Vacía", "La tienes que llenar de agua"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Mochila", "¡Mas espacio para tus cosas!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Hoja", "Usada para hacer un libro"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Cerradura", "Te permite cerrar tu cofre"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Llave", "Te permite abrir un cofre cerrado"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Techo", "Te esconde un poco y te protege del frío"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Fuente", "Permite rellenar botellas", ⵠ[87]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Pared de Madera", "Es solo una pared.", ⵠ[87]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", ⵠ[267]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Puerta de Madera", "Puedes abrir y cerrarla ", ⵠ[87]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", ⵠ[267]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", ⵠ[87]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", ⵠ[267]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", ⵠ[267]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "No puedes unirte a este servidor";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Expulsado: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Tu llave ya está usada";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Tu llave está mal";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "Tienes una versión antigua, limpia tu cache";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "No hay mas recursos";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "Has sobrevivido 1 día";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "Has sobrevivido ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " días";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "Estás muerto ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "El servidor esta lleno, ¡spamea el botón de jugar!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Recurso vacio";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " está muerto";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "Esta no es la herramienta correcta";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "Te has unido a un equipo";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "Estás muerto";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " se unió al equipo";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Tu equipo ha sido destruido";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "Has dejado el equipo";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " dejo el equipo ";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Alguien te robó tu token :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Elige un servidor";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "jugadores";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "total de jugadores";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "Jugadores en este modo de juego";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Próximamente...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Apodo";
		ᐃⲆΔⵠ[ⲆΔᐃ] = ["Has muerto por ninguna razón"];
		ᐃⲆΔⵠ[ⵠⵠⲆΔ] = ["Has muerto de hambre, como implica el nombre del juego dice"];
		ᐃⲆΔⵠ[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
		ᐃⲆΔⵠ[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
		ᐃⲆΔⵠ[ⲆⵠⲆⲆ] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
		ᐃⲆΔⵠ[ⵠᐃᐃΔᐃ] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
		ᐃⲆΔⵠ[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
		ᐃⲆΔⵠ[ⵠᐃⵠⲆᐃ] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
		ᐃⲆΔⵠ[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
		ᐃⲆΔⵠ[ⵠⵠⵠΔᐃᐃⵠ] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
		ᐃⲆΔⵠ[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
		ᐃⲆΔⵠ[ᐃΔᐃⵠΔ] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
		ᐃⲆΔⵠ[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
		ᐃⲆΔⵠ[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
		ᐃⲆΔⵠ[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
		ᐃⲆΔⵠ[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
		ᐃⲆΔⵠ[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
		ᐃⲆΔⵠ[ⲆⲆᐃⵠⵠⵠⲆ] = ["Tu piel se cayó, el sol te quemó."];
		ᐃⲆΔⵠ[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
		ᐃⲆΔⵠ[ⲆⲆⵠᐃΔᐃΔ] = ["Eres un vampiro, no te quedes cerca del ajo."];
		ᐃⲆΔⵠ[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
		ᐃⲆΔⵠ[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", ⵠ[303], "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"]
	};
	var ᐃⵠᐃᐃΔⲆᐃ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[ⵠΔⵠⲆᐃΔΔ];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ΔᐃⵠⵠⲆΔⵠ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[8];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ⲆⵠⲆⵠⲆ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[346];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[182];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < 7; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Hand"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Boden", "Dreckig!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Sand", "Ich habe es in meine Augen bekommen!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Holz", "Du kannst niemals zu viel haben!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Stein", "Auch Fels gennant"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Diamant", "Was wirst du daraus machen?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Mehl", "wird fürs Backen gebraucht"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", ⵠ[307]];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = [ⵠ[538], "Schmeckt wie Krabbenburger", ⵠ[307]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Süßigkeiten", "Nur für Kinder!", ⵠ[307]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", ⵠ[307]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Girlande", "perfekter Schmuck für Dächer"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", ⵠ[391], ⵠ[275]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Beere", "Beeren lecker!", "Essen: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", ⵠ[391], ⵠ[275]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", ⵠ[391], ⵠ[275]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", ⵠ[391], ⵠ[275]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", ⵠ[77], ⵠ[275]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Dornenbusch", "Es sticht!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", ⵠ[22]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", ⵠ[97]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Hasenfell", "Der Hase war so süß..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Klares Fell", "Du bist eine Brotfabrik"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Schuppen", "Es riecht wie Fisch!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", ⵠ[97]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Steinhammer", ⵠ[434], "Funktioniert nicht gut gegen Diamant oder Amethyst", ⵠ[97], "Schaden an Gebäuden: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Goldhammer", ⵠ[434], "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Diamanthammer", ⵠ[434], "Schaden: 4", "Schaden an Gebäuden: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Amethysthammer", ⵠ[434], "Schaden: 5", "Schaden an Gebäuden: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Steinschaufel", ⵠ[64], ⵠ[215], ⵠ[97]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Goldschaufel", ⵠ[64], ⵠ[215], "Schaden: 3", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Diamantschaufel", ⵠ[64], ⵠ[215], "Schaden: 4", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Amethystschaufel", ⵠ[64], ⵠ[215], "Schaden: 5", ⵠ[432]];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", ⵠ[ΔΔⲆⵠⲆ]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", ⵠ[ᐃΔⵠΔᐃ]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Ohrwärmer", "Eine Art kleiner chapka.", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = [ⵠ[416], "Auch Mantel genannt.", ⵠ[ΔΔⲆⵠⲆ]];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Bauer", "Deine Pflanzen wachsen schneller", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", ⵠ[100]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", ⵠ[60]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Blauer Edelstein", "Für sehr nette Leute"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", ⵠ[60]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", ⵠ[60]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", ⵠ[60]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Rucksack", "Mehr Platz im Inventar!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Papier", "Wird fürs Büchermachen verwendet"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = [ⵠ[330], "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", ⵠ[77]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Holzwand", "Kennst du den Wandtanz?", ⵠ[77]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", ⵠ[22]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", ⵠ[77]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Goldtür", "Baust du el dorado?", ⵠ[22]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", ⵠ[77]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", ⵠ[22]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", ⵠ[22]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "Du kannst diesem Server nicht beitreten";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Gekickt: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Dein Schlüssel ist falsch";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "Deine Version ist veraltet, säubere dein Cache";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "Es gibt keine neuen Ressourcen";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "Du hast einen Tag überlebt";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "Du hast überlebt ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " Tage";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "Du bist gestorben ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "Server ist voll! Drücke immer wieder auf spielen!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Ressource ist leer";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " ist gestorben";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "Das ist nicht das richtige Werkzeug";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "Du bist einem Team beigetreten";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "Du bist gestorben";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " ist dem Team beigetreten";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Dein Team wurde zerstört";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "Du hast das Team verlassen";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " hat das Team verlassen";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Jemand hat dein Token gestohlen :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Suche dir ein Server aus";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "Spieler";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "alle Spieler";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "Spieler in diesem Modus";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Bald verfügbar...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Spitzname";
		ᐃⲆΔⵠ[Δⵠⵠ] = ["Du wurdest ohne Grund getötet"];
		ᐃⲆΔⵠ[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
		ᐃⲆΔⵠ[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
		ᐃⲆΔⵠ[ⲆⵠΔᐃ] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
		ᐃⲆΔⵠ[ⲆⵠⵠⲆΔ] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
		ᐃⲆΔⵠ[ᐃᐃⲆᐃΔ] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
		ᐃⲆΔⵠ[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
		ᐃⲆΔⵠ[Ⲇⵠᐃᐃᐃ] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
		ᐃⲆΔⵠ[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
		ᐃⲆΔⵠ[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
		ᐃⲆΔⵠ[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
		ᐃⲆΔⵠ[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
		ᐃⲆΔⵠ[ΔΔᐃⲆᐃ] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
		ᐃⲆΔⵠ[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
		ᐃⲆΔⵠ[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
		ᐃⲆΔⵠ[ⵠⲆⲆᐃⲆ] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
		ᐃⲆΔⵠ[ᐃⲆⵠᐃⲆᐃⵠ] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
		ᐃⲆΔⵠ[ᐃΔⲆⲆᐃⵠⵠ] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
		ᐃⲆΔⵠ[ΔⵠⵠⵠⵠⵠΔ] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
		ᐃⲆΔⵠ[ᐃΔⵠᐃΔΔΔ] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
		ᐃⲆΔⵠ[ΔΔⵠΔ] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
		ᐃⲆΔⵠ[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", ⵠ[303], "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"]
	};
	const ᐃᐃᐃΔᐃⲆΔ = ΔⵠⲆⲆⵠⵠΔ;
	const ⵠⵠΔⲆᐃ = ⵠΔᐃΔᐃ;

	function ⲆⲆⲆⵠᐃΔΔ(ⲆⵠΔΔᐃᐃⲆ, ᐃᐃΔᐃⲆᐃⲆ, ⵠᐃⵠᐃᐃᐃⲆ) {
		ⲆᐃᐃΔΔΔⲆ(ᐃΔΔΔⲆ, ⲆⵠΔΔᐃᐃⲆ, ᐃᐃΔᐃⲆᐃⲆ, ⵠᐃⵠᐃᐃᐃⲆ);
		const ⵠⲆⲆᐃⲆⵠⵠ = ᐃⵠᐃᐃΔⲆⲆ(ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[ᐃΔⲆⵠ], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[Ⲇᐃⵠᐃ]);
		const ⵠᐃⵠᐃⲆⵠᐃⲆⲆ = ⲆⲆⲆⲆⵠΔᐃ(ⲆᐃΔⲆ[ᐃᐃΔᐃ], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[0]);
		const ⵠᐃⵠᐃⵠⲆᐃ = 34630 ^ ⵠⲆⲆᐃⲆⵠⵠ;
		return ⵠᐃⵠᐃⵠⲆᐃ
	}
	var ΔⲆⲆᐃΔⵠⲆ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = ⵠ[549];
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = ⵠ[ΔⲆᐃⵠΔ];
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = ⵠ[134];
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = ⵠ[547];
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = ⵠ[577];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = ⵠ[54];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = ⵠ[561];
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = ⵠ[204];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = [ⵠ[389], ⵠ[27], ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = [ⵠ[332], ⵠ[294], ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = [ⵠ[103], ⵠ[95], ⵠ[484], ⵠ[420], ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = [ⵠ[301], ⵠ[546], ⵠ[107], ⵠ[56], ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[453];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ⲆⲆΔᐃⵠ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[144];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[ΔⲆᐃᐃᐃ];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[ΔΔΔⲆⲆΔᐃ])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[38];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[156];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[346];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[533];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[120];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[79];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[247];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[182];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[223];
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < 7; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[186];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠ[154];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Ręka"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Ziemia", "Brudna!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Piasek", "Mam go w oczach!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Kamień", "Także nazywany skałą"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Złoto", "Bądź hojny, daj trochę innym"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Diament", "Co z nim zrobisz?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Mąka", "Używana w gotowaniu"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["Ciasto", "Raj dla smakoszy", ⵠ[263]];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ["Kanapka", "Smakuje jak kraboburger", ⵠ[263]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Cukierki", "Tylko dla dzieci!", ⵠ[263]];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Laska cukrowa", "Spróbuj, jest przepyszna", ⵠ[263]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Girlanda", "Idealna do dekorowania dachów"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", ⵠ[181], ⵠ[399]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", ⵠ[181], ⵠ[399]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", ⵠ[181], ⵠ[399]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", ⵠ[181], ⵠ[399]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", ⵠ[499], ⵠ[399]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Kolczasty krzew", "Kłuje!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", ⵠ[81]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Lód", "Użyteczny do robienia ciast i wody"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Skóra królika", "Ten królik był taki słodziutki..."];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Skóra", "Jesteś fabryką chleba"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Łuski", "Pachnie jak ryba!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Kamienny młot", ⵠ[468], "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Złoty młot", ⵠ[468], "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Diamentowy młot", ⵠ[468], "Obrażenia: 4", "Obrażenia do budowli: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Ametystowy młot", ⵠ[468], "Obrażenia: 5", "Obrażenia do budowli: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Kamienna łopata", ⵠ[93], ⵠ[519], "Obrażenia: 2"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Złota łopata", ⵠ[93], ⵠ[519], "Obrażenia: 3", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Diamentowa łopata", ⵠ[93], ⵠ[519], "Obrażenia: 4", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Ametystowa łopata", ⵠ[93], ⵠ[519], "Obrażenia: 5", ⵠ[39]];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", ⵠ[105]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", ⵠ[105]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", ⵠ[105]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", ⵠ[105]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", ⵠ[105]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", ⵠ[41]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Smocza kula", "Zdobyta podczas zadania"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", ⵠ[41]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", ⵠ[41]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", ⵠ[41]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Papier", "Używany w tworzeniu książki"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = [ⵠ[330], "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Dach", "Trochę cie ogrzewa i chowa!"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Studnia", "Umożliwia napełnienie butelki", ⵠ[499]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Drewniany mur", "Znasz taniec ścian?", ⵠ[499]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", ⵠ[81]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", ⵠ[499]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", ⵠ[81]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", ⵠ[499]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", ⵠ[81]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", ⵠ[81]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "Nie możesz dołączyć do tego serwera";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Wyrzucony: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Twój klucz jest aktualnie używany przez innego gracza";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Twój klucz jest nieprawidłowy";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "Przeżyłeś 1 dzień";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "Przeżyłeś ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " dni";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "Jesteś martwy ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "Serwer jest pełny! Spamuj przycisk zagraj!";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Źródło jest puste";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " jest martwy";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "To nie jest właściwe narzędzie";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "Dołączyłeś do drużyny";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "Jesteś martwy";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " dołączył do drużyny";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Twoja drużyna została zniszczona";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = " Opuściłeś drużynę";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " opuścił drużynę";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Ktoś ukradł twój żeton :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Wybierz serwer";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "graczy";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "wszystkich graczy";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "graczy w tym trybie";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Już wkrótce...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Przydomek";
		ᐃⲆΔⵠ[ΔΔᐃ] = ["Zostałeś zabity bez powodu"];
		ᐃⲆΔⵠ[ᐃⵠ] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
		ᐃⲆΔⵠ[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
		ᐃⲆΔⵠ[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
		ᐃⲆΔⵠ[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
		ᐃⲆΔⵠ[ⲆΔⵠᐃ] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
		ᐃⲆΔⵠ[ᐃΔΔⲆⲆ] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
		ᐃⲆΔⵠ[ᐃⲆⵠΔᐃ] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
		ᐃⲆΔⵠ[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
		ᐃⲆΔⵠ[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
		ᐃⲆΔⵠ[ⲆᐃΔⵠⵠ] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
		ᐃⲆΔⵠ[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
		ᐃⲆΔⵠ[ⲆⵠⲆⵠⵠⲆⲆ] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
		ᐃⲆΔⵠ[ⲆⵠΔᐃⲆⲆⵠ] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
		ᐃⲆΔⵠ[ᐃⲆⲆⵠΔⵠᐃ] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
		ᐃⲆΔⵠ[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
		ᐃⲆΔⵠ[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
		ᐃⲆΔⵠ[ⵠᐃⵠⲆⵠ] = ["Twoja skóra odpada, słońce cię zabija."];
		ᐃⲆΔⵠ[ᐃΔⲆᐃᐃᐃΔ] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
		ᐃⲆΔⵠ[ⲆᐃⲆⵠⲆΔΔ] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
		ᐃⲆΔⵠ[ⵠᐃⲆΔ] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
		ᐃⲆΔⵠ[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", ⵠ[303], "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"]
	};
	const ᐃᐃΔⵠⵠᐃᐃ = ᐃⲆⵠⲆⲆ;

	function ᐃⵠⲆΔⲆⵠⲆ(ⲆⵠⲆᐃᐃⵠⲆ, ᐃΔᐃⵠⲆΔⲆ, ᐃᐃⲆⵠᐃΔᐃ, ⲆᐃⲆⵠⲆⵠⲆ, ΔⵠΔΔᐃⵠΔ, ᐃⵠΔᐃⵠΔⵠ) {
		const ⲆⲆΔΔΔⲆΔ = ~(ⲆⵠⲆᐃᐃⵠⲆ & 57623) & 57623 | ~(57623 & ⲆⵠⲆᐃᐃⵠⲆ) & ⲆⵠⲆᐃᐃⵠⲆ;
		const ⲆⲆᐃᐃⲆΔⲆ = (8 << (ᐃΔᐃⵠⲆΔⲆ >> 0 & ΔᐃⲆⲆⵠΔᐃ)) + (16 << (ᐃΔᐃⵠⲆΔⲆ >> 16 & 255)) + (24 << (ᐃΔᐃⵠⲆΔⲆ >> 8 & 255)) + (0 << (ᐃΔᐃⵠⲆΔⲆ >> 24 & ΔᐃᐃΔⲆΔᐃ));
		const ΔᐃΔᐃᐃⲆᐃ = 55984 ^ ᐃᐃⲆⵠᐃΔᐃ;
		const ⲆᐃⵠⲆⵠⵠΔ = (1664525 * (56477 + ⲆᐃⲆⵠⲆⵠⲆ) + 1013904223) % 4294967296;
		const ᐃⲆᐃⲆᐃΔΔ = (8 << (ΔⵠΔΔᐃⵠΔ >> 16 & 255)) + (24 << (ΔⵠΔΔᐃⵠΔ >> 0 & 255)) + (16 << (ΔⵠΔΔᐃⵠΔ >> 24 & 255)) + (0 << (ΔⵠΔΔᐃⵠΔ >> 8 & ΔΔᐃᐃΔΔⵠ));
		const ⲆⵠᐃᐃⲆᐃⲆ = (Δⵠⵠ << (ᐃⵠΔᐃⵠΔⵠ >> 8 & ᐃΔᐃⲆΔ)) + (ᐃⵠΔΔᐃ << (ᐃⵠΔᐃⵠΔⵠ >> 16 & 255)) + (16 << (ᐃⵠΔᐃⵠΔⵠ >> 0 & 255)) + (24 << (ᐃⵠΔᐃⵠΔⵠ >> 24 & 255));
		const ᐃᐃⲆⲆᐃⲆⵠ = ᐃⵠⵠᐃⲆΔⵠ(ⲆⲆΔΔΔⲆΔ, ⲆⲆᐃᐃⲆΔⲆ, ΔᐃΔᐃᐃⲆᐃ, ⲆᐃⵠⲆⵠⵠΔ);
		const ⵠᐃⲆΔⵠⵠⲆ = ⵠⵠⲆΔᐃⵠᐃ(ᐃⲆᐃⲆᐃΔΔ, ⲆⵠᐃᐃⲆᐃⲆ, ⲆⲆΔΔΔⲆΔ);
		const ⲆⵠⲆⵠΔⵠⲆ = (0 << ((ᐃᐃⲆⲆᐃⲆⵠ ^ ⵠᐃⲆΔⵠⵠⲆ) >> 24 & ⵠᐃᐃⵠⲆ)) + (16 << ((ᐃᐃⲆⲆᐃⲆⵠ ^ ⵠᐃⲆΔⵠⵠⲆ) >> 8 & ᐃⲆΔⲆⵠⵠⲆ)) + (24 << ((ᐃᐃⲆⲆᐃⲆⵠ ^ ⵠᐃⲆΔⵠⵠⲆ) >> ᐃΔⵠⵠ & 255)) + (8 << ((ᐃᐃⲆⲆᐃⲆⵠ ^ ⵠᐃⲆΔⵠⵠⲆ) >> 16 & 255));
		return ⲆⵠⲆⵠΔⵠⲆ
	}
	var ⵠⵠⵠⵠⲆⵠΔ = function() {
		ᐃΔΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = [ⵠ[147]];
		ᐃⲆΔⵠ[22] = [ⵠ[179]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃΔΔ] = [ⵠ[474], ⵠ[84], ⵠ[414]];
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] = " RETOUR AU JEU";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] = " Partage sur Twitter";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] = " Partage sur Facebook";
		ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
		ᐃΔΔ[ⵠⲆΔ.POINTS] = ⵠ[312];
		ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] = ⵠ[459];
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] = "Tués";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] = "Jours survécus";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ] = "Mode de construction: Libre. Appuie sur G pour changer";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ] = "Mode de construction: Grille. Appuie sur G pour changer";
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", ⵠ[351]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", ⵠ[195], ⵠ[273]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", ⵠ[502], ⵠ[545]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", ⵠ[415]];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[161])[ⲆⵠΔᐃᐃᐃΔ[359]] = "Chrono Quêtes";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[13])[ⲆⵠΔᐃᐃᐃΔ[359]] = "Temps Restant";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[445])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Contraintes";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[17])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Résultat";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[365])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Récompenses";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[575])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Collecte 1 Cœur de dragon dans la cave";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[231])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Récolte 1 améthyste";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[313])[ⲆⵠΔᐃᐃᐃΔ[359]] = "Survis sans perdre de vie";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[132])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Ouvre 5 coffres au trésor";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[152])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Sois pacifique";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[438])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[35])[ⲆⵠΔᐃᐃᐃΔ[359]] = " Après 1 jour, survis en hiver";
		for (var ᐃⲆ = ⲆⲆⲆ; ᐃⲆ < 7; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "RÉCOMPENSE!";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[359]] = " QUITTER";
		ᐃΔΔ[ⵠⲆ.ΔΔᐃⵠᐃ] = ["Main"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ["Terre", "C'est sale!"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ["Sable", "J'en ai dans les yeux"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃ] = ["Bois", "Tu n'en auras jamais trop!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⲆ] = ["Pierre", "Aussi appelée roche"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ["Or", "Sois généreux, donne en aux autres"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ["Diamant", "Comme tes yeux! wesh"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⵠ] = ["Améthyste", "C'est Mauve comme Lapa"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ["Farine", "Utile pour la cuisine"];
		ᐃΔΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = [ⵠ[538], "Le Jambon Beurre vaincra", "Nourriture: 100"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ["Guirlandes", "Utilisable sur les toits"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", ⵠ[45], ⵠ[245]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", ⵠ[45], ⵠ[245]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ["Blé", "Peut être transformé en farine dans les moulins"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", ⵠ[45], ⵠ[245]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", ⵠ[45], ⵠ[245]];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", ⵠ[50], ⵠ[245]];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ["Ronces", "Ça pique!"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", ⵠ[216]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
		ᐃΔΔ[ⵠⲆ.ⲆΔΔΔΔ] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", ⵠ[571]];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ["Peau de loup", "Il était où le gentil ti Youki?"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ["Peau de lapin", "Vous êtes un monstre"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ["Fourrure blanche", "Tu es une usine à pain"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ["Fourrure d'hiver", "Il voulait juste un calin"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ["Écailles", "Ça sent le poisson!"];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ["Fil", "Utile pour faire des chapeaux et un sac"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ["Fil de diamant", "Utile pour faire des chapeaux"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
		ᐃΔΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
		ᐃΔΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ["Pioche en pierre", "Peut aussi récolter de l'or", ⵠ[571]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ["Marteau en pierre", ⵠ[556], "Ne marche pas bien sur du diamant et améthyste", ⵠ[571], "Démolition: 20"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ["Marteau en or", ⵠ[556], "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ["Marteau en diamant", ⵠ[556], "Dégâts: 4", "Démolition: 40"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ["Marteau en améthyste", ⵠ[556], "Dégâts: 5", "Démolition: 50"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
		ᐃΔΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ["Pelle en pierre", ⵠ[304], ⵠ[443], ⵠ[571]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ["Pelle en or", ⵠ[304], ⵠ[443], "Dégâts: 3", "Buildings Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ["Pelle en diamant", ⵠ[304], ⵠ[443], "Dégâts: 4", "Buildings Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ["Pelle en améthyste", ⵠ[304], ⵠ[443], "Dégâts: 5", "Buildings Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ["Cache-oreilles", "Une sorte de petite chapka.", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = [ⵠ[416], "Comment ça va, camarade?", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
		ᐃΔΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ["Tunique", "Les plantes poussent plus vite", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ["Tunique d'hiver", "Tes plantes poussent plus vite", ⵠ[338]];
		ᐃΔΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
		ᐃΔΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", ⵠ[277]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ["Orbe du Dragon", "Donné en Quête"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
		ᐃΔΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ["Gemme verte", "Tu n'as pas triché, promis?"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ["Gemme bleue", "Pour les gens trop gentils"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", ⵠ[277]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ["Couronne orange", "Tu te sens soudainement très chanceux", ⵠ[277]];
		ᐃΔΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", ⵠ[277]];
		ᐃΔΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
		ᐃΔΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
		ᐃΔΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
		ᐃΔΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠΔΔⵠ] = ["Sac", "Plus de place dans ton inventaire!"];
		ᐃΔΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ["Papier", "Pour fabriquer toute sorte d'objets"];
		ᐃΔΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
		ᐃΔΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ["Cadenas", "Pour verrouiller un coffre"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ["Clé", "Pour déverrouiller un coffre"];
		ᐃΔΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = [ⵠ[330], "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
		ᐃΔΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ["Toit", "Te cache un peu et te réchauffe"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ["Puit", "Permet de remplir des bouteilles", ⵠ[50]];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ["Mur en bois", "Tu connais la danse des murs?", ⵠ[50]];
		ᐃΔΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", ⵠ[216]];
		ᐃΔΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
		ᐃΔΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
		ᐃΔΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
		ᐃΔΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
		ᐃΔΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
		ᐃΔΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", ⵠ[50]];
		ᐃΔΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ["Porte en or", "Tu reconstruis l'el dorado?", ⵠ[216]];
		ᐃΔΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
		ᐃΔΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
		ᐃΔΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", ⵠ[50]];
		ᐃΔΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", ⵠ[216]];
		ᐃΔΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", ⵠ[216]];
		ᐃΔΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
		ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ] = "Tu ne peux pas rejoindre le serveur";
		ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] = "Expulsé: ";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ] = "Ta clé est déjà utilisée par quelqu'un d'autre";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠΔᐃᐃⵠᐃ] = "Ta clé est fausse";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ] = "Tu as une vieille version, rafraichis tes caches";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ] = "Il n'y a plus de nouvelles ressources";
		ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] = "Tu as survécu 1 jour";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] = "Tu as survécu ";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ] = " jours";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ] = "Tu es mort ;-;";
		ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
		ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ] = "Le serveur est complet! Spam le bouton jouer";
		ᐃΔΔ[ⵠⲆΔ.EMPTY] = "Cette ressource est vide";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ] = " est mort";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ] = "Ce n'est pas le bon outil";
		ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ] = "Tu as rejoins une équipe";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ] = "Tu es mort";
		ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ] = " a rejoint l'équipe";
		ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ] = "Ton équipe a été détruite";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ] = "Tu as quitté l'équipe";
		ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ] = " a quitté l'équipe";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ] = "Quelqu'un a volé ton token :>";
		ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] = "Choisis un serveur";
		ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] = "joueurs";
		ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] = "joueurs";
		ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] = "joueurs dans ce mode";
		ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ] = "Bientôt...";
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]).placeholder = "Surnom";
		ᐃⲆΔⵠ[ⵠᐃⲆᐃ] = ["Tu as été tué sans raison particulière, juste comme ça"];
		ᐃⲆΔⵠ[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
		ᐃⲆΔⵠ[ᐃΔⵠᐃ] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
		ᐃⲆΔⵠ[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
		ᐃⲆΔⵠ[ᐃΔᐃΔ] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
		ᐃⲆΔⵠ[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
		ᐃⲆΔⵠ[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
		ᐃⲆΔⵠ[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
		ᐃⲆΔⵠ[ⲆΔᐃⲆΔ] = ["Cet ours voulait juste un câlin."];
		ᐃⲆΔⵠ[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
		ᐃⲆΔⵠ[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
		ᐃⲆΔⵠ[ⲆⵠΔΔΔⲆᐃ] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
		ᐃⲆΔⵠ[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
		ᐃⲆΔⵠ[ᐃⲆⲆΔᐃⵠΔ] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
		ᐃⲆΔⵠ[Δⵠᐃⵠⵠ] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
		ᐃⲆΔⵠ[ⲆⵠⲆⲆⲆⲆⵠ] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
		ᐃⲆΔⵠ[16] = ["Un kraken a 'kraké' tes os."];
		ᐃⲆΔⵠ[ᐃⲆᐃⲆΔ] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
		ᐃⲆΔⵠ[ΔⵠⵠⵠⵠⵠΔ] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
		ᐃⲆΔⵠ[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
		ᐃⲆΔⵠ[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
		ᐃⲆΔⵠ[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
		ᐃᐃⵠΔⲆ = ⵠ[292];
		ⲆⵠⵠᐃⲆᐃⵠ = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", ⵠ[303], "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"]
	};
	var ᐃΔΔ = [];
	for (var ᐃⲆ = ΔΔⲆᐃ; Δᐃ > ᐃⲆ; ᐃⲆ++) ᐃΔΔ[ᐃⲆ] = "";
	var ᐃⲆΔⵠ = [];
	const ᐃⵠⵠⵠ = ⲆⵠⵠΔ;
	const ΔᐃⵠΔ = ᐃΔⲆⵠ;
	$(".md-languages").on(ⵠ[543], (function() {
		$(this).toggleClass(ⵠ[155])
	}));
	$(".md-languages ul li").on(ⵠ[543], (function() {
		var ⵠⵠΔ = $(this).text();
		if ("English" === ⵠⵠΔ) ᐃΔⵠΔᐃⵠⲆ();
		else if (ⵠⵠΔ === "Français") ⵠⵠⵠⵠⲆⵠΔ();
		else if ("Deutsch" === ⵠⵠΔ) ᐃⵠᐃᐃΔⲆᐃ();
		else if (ⵠⵠΔ === "Español") ᐃΔⲆΔΔⵠᐃ();
		else if (ⵠⵠΔ === "Português") ΔΔᐃᐃⲆⲆⲆ();
		else if ("Русский" === ⵠⵠΔ) ΔⵠⲆᐃΔᐃⵠ();
		else ⵠⵠΔ === "Polski" && ΔⲆⲆᐃΔⵠⲆ();
		ⲆΔᐃΔᐃ = [];
		ⲆΔⲆ.ᐃΔⵠΔ.label = [];
		$(".md-languages ul li").removeClass(ⵠ[155]);
		$(this).addClass(ⵠ[155]);
		$(ⵠ[436]).text(ⵠⵠΔ)
	}));
	var ⵠᐃⲆⵠᐃ = "EN";
	const ⵠᐃΔᐃⲆᐃΔ = ⵠⲆⲆᐃⲆ;
	var ᐃᐃᐃΔΔⵠⵠ = navigator.language || navigator.userLanguage;
	const ⲆΔⵠᐃⲆⲆⲆΔΔ = ⵠⲆΔⵠΔΔⲆ;
	switch (ᐃᐃᐃΔΔⵠⵠ) {
		case "ru":
			ⵠᐃⲆⵠᐃ = "RU";
			break;
		case "en":
			ⵠᐃⲆⵠᐃ = "EN";
			break;
		case "es":
			ⵠᐃⲆⵠᐃ = "SP";
			break;
		case "fr":
			ⵠᐃⲆⵠᐃ = "FR";
			break;
		case "pl":
			ⵠᐃⲆⵠᐃ = "PL";
			break;
		case "de":
			ⵠᐃⲆⵠᐃ = "DE";
			break;
		case "pt":
			ⵠᐃⲆⵠᐃ = "PT";
			break
	}
	var ⵠᐃᐃⵠΔΔΔ;
	const ᐃⲆⵠΔⲆⲆⵠ = ⵠΔⲆᐃⲆᐃⵠ;
	const ⵠΔⲆⲆΔ = ᐃᐃⲆᐃⵠ;
	if (ⵠᐃⲆⵠᐃ === "FR") {
		$(ⵠ[436]).text("Français");
		ⵠᐃᐃⵠΔΔΔ = ⵠⵠⵠⵠⲆⵠΔ
	} else if (ⵠᐃⲆⵠᐃ === "PL") {
		$(ⵠ[436]).text("Polski");
		ⵠᐃᐃⵠΔΔΔ = ΔⲆⲆᐃΔⵠⲆ
	} else if (ⵠᐃⲆⵠᐃ === "PT") {
		$(ⵠ[436]).text("Português");
		ⵠᐃᐃⵠΔΔΔ = ΔΔᐃᐃⲆⲆⲆ
	} else if ("SP" === ⵠᐃⲆⵠᐃ) {
		$(ⵠ[436]).text("Español");
		ⵠᐃᐃⵠΔΔΔ = ᐃΔⲆΔΔⵠᐃ
	} else if ("RU" === ⵠᐃⲆⵠᐃ) {
		$(ⵠ[436]).text("Русский");
		ⵠᐃᐃⵠΔΔΔ = ΔⵠⲆᐃΔᐃⵠ
	} else "DE" === ⵠᐃⲆⵠᐃ ? ($(ⵠ[436]).text("Deutsch"), ⵠᐃᐃⵠΔΔΔ = ᐃⵠᐃᐃΔⲆᐃ) : ($(ⵠ[436]).text("English"), ⵠᐃᐃⵠΔΔΔ = ᐃΔⵠΔᐃⵠⲆ);
	const ⲆⲆΔᐃⵠΔᐃ = ⵠⲆⵠⵠΔ;

	function ⵠⵠᐃΔⵠⲆⵠ(ⲆΔⵠᐃⵠⲆᐃ, ᐃΔⵠΔⲆ, ⵠᐃⵠⵠΔⲆⵠ, ⵠⲆⲆᐃⲆⲆⵠ, ⲆΔᐃⵠⵠᐃⲆ, ΔⲆⵠⵠⲆⵠᐃ) {
		const ⵠᐃᐃᐃΔᐃᐃ = (214013 * (ⲆΔⵠᐃⵠⲆᐃ + 51787) + 2531011) % 4294967296;
		const ᐃΔᐃⲆⲆᐃⲆ = ~(ᐃΔⵠΔⲆ & 29116) & ᐃΔⵠΔⲆ | ~(ᐃΔⵠΔⲆ & 29116) & 29116;
		const ⲆΔᐃⲆᐃⲆⲆ = ~(ⵠᐃⵠⵠΔⲆⵠ & 23428) & ⵠᐃⵠⵠΔⲆⵠ | ~(ⵠᐃⵠⵠΔⲆⵠ & 23428) & 23428;
		const ⲆⵠⲆΔΔᐃᐃ = (16 << (ⵠⲆⲆᐃⲆⲆⵠ >> 0 & ΔⲆᐃᐃⲆΔⵠ)) + (8 << (ⵠⲆⲆᐃⲆⲆⵠ >> 24 & 255)) + (0 << (ⵠⲆⲆᐃⲆⲆⵠ >> 8 & ΔΔᐃΔⵠᐃⵠ)) + (24 << (ⵠⲆⲆᐃⲆⲆⵠ >> 16 & ΔⲆᐃᐃⲆΔⵠ));
		const ᐃⵠⵠⵠᐃⵠⲆ = (1 + 22695477 * (ⲆΔᐃⵠⵠᐃⲆ + 52068)) % 4294967296;
		const ⵠⲆᐃⲆⲆⵠΔ = (ΔⲆⵠⵠⲆⵠᐃ | 36833) & ~(36833 & ΔⲆⵠⵠⲆⵠᐃ);
		const ⵠⲆᐃⲆⲆⲆⲆ = ⵠⲆⵠⲆᐃⲆΔ(ⵠᐃᐃᐃΔᐃᐃ, ᐃΔᐃⲆⲆᐃⲆ, ⲆΔᐃⲆᐃⲆⲆ, ⲆⵠⲆΔΔᐃᐃ, ᐃⵠⵠⵠᐃⵠⲆ);
		const ⵠᐃᐃᐃⲆⵠΔⲆᐃ = ⲆⵠⲆⵠΔⲆⵠ(ⵠⲆᐃⲆⲆⵠΔ, ⵠᐃᐃᐃΔᐃᐃ, ᐃΔᐃⲆⲆᐃⲆ, ⲆΔᐃⲆᐃⲆⲆ, ⲆⵠⲆΔΔᐃᐃ);
		const ⲆΔᐃⵠⲆⵠⵠ = (50616 | ⵠⲆᐃⲆⲆⲆⲆ) & ~(ⵠⲆᐃⲆⲆⲆⲆ & 50616);
		return ⲆΔᐃⵠⲆⵠⵠ
	}

	function ⵠᐃΔᐃⲆΔⵠ(ΔΔⲆΔⲆᐃΔ, ⲆᐃᐃΔⵠᐃᐃ, ⵠΔⲆΔⲆᐃⲆ, ⵠⲆⵠᐃⲆⵠⵠ) {
		const ⲆΔⵠⵠⵠᐃⵠ = (2531011 + (ΔΔⲆΔⲆᐃΔ + 49426) * 214013) % 4294967296;
		const ᐃⲆⵠⵠⵠᐃⵠ = (ΔⲆⲆⲆᐃ << (ⲆᐃᐃΔⵠᐃᐃ >> 16 & 255)) + (8 << (ⲆᐃᐃΔⵠᐃᐃ >> 8 & 255)) + (0 << (ⲆᐃᐃΔⵠᐃᐃ >> 24 & 255)) + (24 << (ⲆᐃᐃΔⵠᐃᐃ >> ΔⲆᐃⲆ & ΔᐃⲆⲆⵠΔᐃ));
		const ᐃⵠΔΔⵠᐃⵠ = ((ⵠΔⲆΔⲆᐃⲆ + 23205) * 2147483629 + 2147483587) % 2147483647;
		const ΔⵠΔⵠⵠᐃᐃ = 40004 ^ ⵠⲆⵠᐃⲆⵠⵠ;
		const ᐃⲆΔⵠⵠⵠⵠ = ⲆⲆᐃᐃⲆⲆᐃ(ⲆΔⵠⵠⵠᐃⵠ, ᐃⲆⵠⵠⵠᐃⵠ);
		const ΔᐃᐃΔᐃⵠⲆ = ᐃⵠⵠᐃᐃᐃΔ(ᐃⵠΔΔⵠᐃⵠ, ΔⵠΔⵠⵠᐃᐃ, ⲆΔⵠⵠⵠᐃⵠ, ᐃⲆⵠⵠⵠᐃⵠ, ᐃⵠΔΔⵠᐃⵠ);
		const ΔΔᐃΔⵠΔᐃ = ((36387 + (ᐃⲆΔⵠⵠⵠⵠ ^ ΔᐃᐃΔᐃⵠⲆ)) * 2147483629 + 2147483587) % 2147483647;
		return ΔΔᐃΔⵠΔᐃ
	}
	const ⲆⵠⵠⵠⲆᐃⵠ = ⲆⵠᐃⲆⲆ;

	function ᐃⵠⵠᐃᐃᐃΔ(ⵠⵠΔᐃⵠⲆΔ, ᐃⲆᐃⲆⲆⵠΔ, ⲆⵠⵠⵠΔⵠᐃ, ⲆⲆⲆⲆΔⵠⲆ, ⵠΔⲆΔⵠᐃᐃ) {
		const ΔⲆΔᐃⵠⲆⵠ = ~(ⵠⵠΔᐃⵠⲆΔ & 49511) & ⵠⵠΔᐃⵠⲆΔ | ~(ⵠⵠΔᐃⵠⲆΔ & 49511) & 49511;
		const ᐃⲆᐃⵠΔⵠᐃ = ~(ᐃⲆᐃⲆⲆⵠΔ & 11979) & (11979 | ᐃⲆᐃⲆⲆⵠΔ);
		const ⵠΔⵠᐃⲆⲆΔ = (214013 * (ⲆⵠⵠⵠΔⵠᐃ + 2190) + 2531011) % 4294967296;
		const ΔⵠⲆᐃⵠᐃⵠ = (24 << (ⲆⲆⲆⲆΔⵠⲆ >> ΔⲆΔⲆⵠ & 255)) + (0 << (ⲆⲆⲆⲆΔⵠⲆ >> 24 & 255)) + (8 << (ⲆⲆⲆⲆΔⵠⲆ >> 0 & 255)) + (16 << (ⲆⲆⲆⲆΔⵠⲆ >> 16 & 255));
		const ᐃⵠⵠΔⲆⲆⵠ = ~(ⵠΔⲆΔⵠᐃᐃ & 40989) & ⵠΔⲆΔⵠᐃᐃ | ~(ⵠΔⲆΔⵠᐃᐃ & 40989) & 40989;
		const ΔᐃΔΔⲆᐃⵠ = ⲆⵠᐃⵠΔΔⵠ(ΔⲆΔᐃⵠⲆⵠ, ᐃⲆᐃⵠΔⵠᐃ, ⵠΔⵠᐃⲆⲆΔ, ΔⵠⲆᐃⵠᐃⵠ, ᐃⵠⵠΔⲆⲆⵠ);
		const ᐃᐃᐃᐃΔΔᐃᐃⵠ = ⵠⲆⵠΔⲆⲆⵠ(ΔⲆΔᐃⵠⲆⵠ, ᐃⲆᐃⵠΔⵠᐃ, ⵠΔⵠᐃⲆⲆΔ, ΔⵠⲆᐃⵠᐃⵠ, ᐃⵠⵠΔⲆⲆⵠ, ΔⲆΔᐃⵠⲆⵠ);
		const ᐃⵠᐃΔΔΔⲆ = ~(40287 & ΔᐃΔΔⲆᐃⵠ) & (40287 | ΔᐃΔΔⲆᐃⵠ);
		return ᐃⵠᐃΔΔΔⲆ
	}

	function ΔΔΔⲆⵠΔΔ(ΔΔⲆⵠⵠΔⵠ, ΔᐃⵠⲆⲆᐃᐃ, ⵠⲆⲆⵠⵠⵠⲆ, ΔΔⲆΔⵠⲆᐃ, ᐃⲆⲆΔᐃⲆⲆ) {
		const ⵠⵠⲆⵠΔᐃⵠ = (0 << (ΔΔⲆⵠⵠΔⵠ >> 24 & 255)) + (8 << (ΔΔⲆⵠⵠΔⵠ >> 8 & 255)) + (24 << (ΔΔⲆⵠⵠΔⵠ >> 16 & 255)) + (16 << (ΔΔⲆⵠⵠΔⵠ >> ⲆⵠⲆ & ΔⲆᐃᐃⲆΔⵠ));
		const ᐃᐃᐃΔᐃⲆⲆ = 41934 ^ ΔᐃⵠⲆⲆᐃᐃ;
		const ⲆᐃΔⲆΔⵠⲆ = ⵠⲆⲆⵠⵠⵠⲆ ^ 49985;
		const ᐃⵠⵠⲆⲆΔΔ = (2531011 + 214013 * (ΔΔⲆΔⵠⲆᐃ + 61562)) % 4294967296;
		const ⲆⲆΔⵠᐃⵠᐃ = ~(ᐃⲆⲆΔᐃⲆⲆ & 58630) & 58630 | ~(58630 & ᐃⲆⲆΔᐃⲆⲆ) & ᐃⲆⲆΔᐃⲆⲆ;
		const ᐃΔΔⲆᐃⲆⵠ = ᐃΔΔᐃⵠⵠΔ(ⵠⵠⲆⵠΔᐃⵠ, ᐃᐃᐃΔᐃⲆⲆ, ⲆᐃΔⲆΔⵠⲆ);
		const ⵠΔΔᐃⲆⵠᐃ = ᐃΔΔᐃⵠⵠΔ(ᐃⵠⵠⲆⲆΔΔ, ⲆⲆΔⵠᐃⵠᐃ, ⵠⵠⲆⵠΔᐃⵠ);
		const ⵠⵠᐃᐃⵠⵠᐃ = (1013904223 + ((ᐃΔΔⲆᐃⲆⵠ ^ ⵠΔΔᐃⲆⵠᐃ) + 42265) * 1664525) % 4294967296;
		return ⵠⵠᐃᐃⵠⵠᐃ
	}

	function ⲆⲆⲆᐃⵠⲆΔ(ⲆⵠΔⲆΔᐃⵠ, ⲆΔᐃΔᐃᐃΔ, ᐃⵠΔΔΔΔΔ, ⵠᐃᐃᐃΔΔᐃ) {
		const ⲆⲆⵠⵠⲆⵠΔ = (1013904223 + 1664525 * (ⲆⵠΔⲆΔᐃⵠ + 30063)) % 4294967296;
		const ΔᐃⲆⵠⵠΔΔ = ⲆΔᐃΔᐃᐃΔ ^ 19026;
		const ᐃΔⵠⲆᐃⵠᐃⲆⲆ = (24 << (ᐃⵠΔΔΔΔΔ >> 16 & 255)) + (8 << (ᐃⵠΔΔΔΔΔ >> 8 & 255)) + (16 << (ᐃⵠΔΔΔΔΔ >> 0 & 255)) + (0 << (ᐃⵠΔΔΔΔΔ >> 24 & 255));
		const ⵠΔᐃⵠⲆᐃΔⵠΔ = ~(47782 & ⵠᐃᐃᐃΔΔᐃ) & 47782 | ~(47782 & ⵠᐃᐃᐃΔΔᐃ) & ⵠᐃᐃᐃΔΔᐃ;
		const ᐃⲆⵠᐃᐃᐃᐃ = (26491 + (ⲆⲆⵠⵠⲆⵠΔ ^ ΔᐃⲆⵠⵠΔΔ)) % 65436;
		const ⲆⵠⵠΔⵠⲆⲆ = (ᐃⲆⵠᐃᐃᐃᐃ | 26153) & ~(26153 & ᐃⲆⵠᐃᐃᐃᐃ);
		const ⲆⵠΔⲆΔⲆᐃ = ~(24022 & ⲆⵠⵠΔⵠⲆⲆ) & (ⲆⵠⵠΔⵠⲆⲆ | 24022);
		return ⲆⵠΔⲆΔⲆᐃ
	}
	ⵠᐃ = {
		"ⵠⲆᐃΔⲆⵠᐃΔᐃ": "img/logo.png",
		"ᐃΔⲆᐃΔΔᐃ": "img/mapday.png",
		"ⲆⵠΔᐃⵠⵠΔ": "img/mapnight.png",
		"ᐃᐃΔⵠᐃΔᐃᐃⵠ": "img/bigzday.png",
		"ⵠᐃⲆⵠⲆⲆⵠⲆΔ": "img/bigznight.png",
		"ΔⵠⵠᐃΔⲆᐃ": "img/bigday-river1.png",
		"ⲆΔΔⲆⵠΔⲆⵠⲆ": "img/bigday-lake.png",
		"ⵠᐃⲆᐃΔⲆⵠ": "img/bigday-berry.png",
		"ⵠⲆⵠⵠΔᐃᐃ": "img/bigday-stone1.png",
		"ⲆΔΔⲆΔⲆΔ": "img/bigday-stone2.png",
		"ⲆⵠΔⲆᐃᐃⵠ": "img/bigday-gold1.png",
		"ΔⵠⲆⲆΔᐃᐃ": "img/bigday-gold2.png",
		"ⵠΔᐃΔⵠΔΔ": "img/bigday-emerald1.png",
		"ⵠΔΔⵠΔᐃⲆ": "img/bigday-emerald2.png",
		"ⵠΔᐃᐃⵠⲆΔ": "img/bigday-amethyst.png",
		"ⲆΔΔⲆⲆⲆΔ": "img/bigday-bear.png",
		"ΔⲆⲆⵠⲆΔⵠ": "img/bigday-cave.png",
		"ᐃⵠΔⲆⵠⵠᐃ": "img/bigday-diamond.png",
		"ᐃᐃᐃⲆᐃⵠᐃ": "img/bigday-island.png",
		"ⵠⵠⵠΔᐃⵠⵠ": "img/bigday-reidite.png",
		"ⲆⲆᐃΔⲆⵠⵠ": "img/bigday-spider.png",
		"ΔᐃΔΔΔⲆⲆ": "img/bigday-wolf.png",
		"ᐃⲆΔᐃΔⲆⲆ": "img/bigday-fir-tree.png",
		"ᐃΔⵠΔᐃⵠⵠ": "img/bigday-fox.png",
		"ⲆᐃⲆᐃᐃΔⵠ": "img/bigday-kraken.png",
		"ⵠᐃΔᐃΔⵠⵠ": "img/bigday-piranha.png",
		"ΔⵠⲆⵠⵠᐃⵠ": "img/bigday-cactus.png",
		"ⵠᐃΔⵠⵠΔⵠ": "img/bigday-magma.png",
		"ⵠᐃΔᐃⲆΔⲆ": "img/bigday-river1.png",
		"ᐃⲆⵠᐃⲆⲆΔΔΔ": "img/bignight-lake.png",
		"ⵠᐃᐃᐃⵠⲆⲆⲆΔ": "img/bignight-berry.png",
		"ᐃΔⵠΔᐃⵠᐃ": "img/bignight-stone1.png",
		"ⲆⵠⵠΔⵠΔⲆ": "img/bignight-stone2.png",
		"ΔⵠⲆⵠⵠⲆᐃ": "img/bignight-gold1.png",
		"ⵠᐃⲆⲆᐃᐃΔ": "img/bignight-gold2.png",
		"ⵠⵠᐃΔⲆⵠⲆ": "img/bignight-emerald1.png",
		"ᐃᐃᐃⵠΔⲆⵠ": "img/bignight-emerald2.png",
		"ᐃΔᐃᐃⵠᐃᐃ": "img/bignight-amethyst.png",
		"ⵠΔᐃΔᐃΔⵠ": "img/bignight-bear.png",
		"ⵠΔᐃⲆΔᐃΔ": "img/bignight-cave.png",
		"ΔΔⲆΔᐃΔΔ": "img/bignight-diamond.png",
		"ⵠΔΔⲆᐃΔᐃ": "img/bignight-island.png",
		"ⵠⵠΔⵠⵠⲆⲆ": "img/bignight-reidite.png",
		"ⵠⲆⵠⲆΔⲆᐃ": "img/bignight-spider.png",
		"ΔᐃΔΔᐃⲆᐃ": "img/bignight-wolf.png",
		"ᐃⲆⵠⲆⵠⲆᐃ": "img/bignight-fir-tree.png",
		"ⵠΔΔⵠΔⲆⲆ": "img/bignight-fox.png",
		"ⵠⲆΔᐃᐃᐃⵠ": "img/bignight-kraken.png",
		"ⵠᐃⲆⲆᐃⲆᐃ": "img/bignight-piranha.png",
		"ⲆⲆΔⵠⵠΔᐃ": "img/bignight-cactus.png",
		"ⲆⵠⲆΔᐃΔᐃ": "img/bignight-magma.png",
		"ΔⲆΔⵠΔΔΔ": "img/bigday-desert.png",
		"ΔΔⲆᐃⵠᐃⲆ": "img/bigday-winter.png",
		"ⲆΔⲆΔᐃᐃⲆ": "img/bigday-lava.png",
		"ᐃⲆΔΔΔⵠᐃ": "img/bigday-forest.png",
		"ⲆΔΔᐃⲆΔⲆ": "img/bignight-desert.png",
		"ᐃΔⵠᐃⲆᐃΔ": "img/bignight-winter.png",
		"ⵠᐃᐃᐃΔΔⵠ": "img/bignight-lava.png",
		"ⵠᐃᐃᐃⵠᐃΔ": "img/bignight-forest.png",
		"ⵠⲆΔⲆΔⵠΔ": "img/day-river-wave.png",
		"ᐃΔⵠᐃⲆⲆⵠ": "img/night-river-wave.png",
		"ⲆⲆΔᐃⵠᐃⵠ": "img/day-fog0.png",
		"ⲆᐃΔⵠΔⵠⵠ": "img/day-fog1.png",
		"ⲆΔᐃΔᐃᐃⵠ": "img/day-fog2.png",
		"ⲆΔᐃⵠⲆᐃᐃ": "img/night-fog0.png",
		"ᐃⲆⲆⵠᐃⲆⲆ": "img/night-fog1.png",
		"ΔⵠΔⵠⵠΔΔ": "img/night-fog2.png",
		"ⵠᐃⲆΔⲆⵠⵠ": "img/day-fogdesert0.png",
		"ΔⵠⵠⲆⲆΔᐃ": "img/day-fogdesert1.png",
		"ⵠⵠᐃᐃⵠΔᐃ": "img/day-fogdesert2.png",
		"ΔⵠΔᐃⵠΔⵠ": "img/night-fogdesert0.png",
		"ⲆⲆΔⵠᐃᐃⲆ": "img/night-fogdesert1.png",
		"ΔᐃⵠᐃΔⲆᐃ": "img/night-fogdesert2.png",
		"ᐃΔⵠⵠΔΔⵠ": "img/day-cross-server.png",
		"ⲆΔⲆⲆΔⲆᐃ": "img/day-here-server.png",
		"ᐃᐃⵠⲆⲆΔⲆ": "img/day-finish-server.png",
		"ⲆⲆᐃΔΔⲆⵠ": "img/day-item-server.png",
		"ᐃΔΔⲆⵠⵠΔ": "img/day-skull-server.png",
		"ᐃⵠⵠⵠΔΔΔ": "img/night-cross-server.png",
		"ΔⵠᐃᐃⵠⵠΔ": "img/night-here-server.png",
		"ΔᐃⵠΔⲆᐃⲆ": "img/night-finish-server.png",
		"ΔᐃΔᐃΔⲆⲆ": "img/night-item-server.png",
		"ⲆΔⲆΔⵠⵠⲆ": "img/night-skull-server.png",
		"ΔΔⲆⵠⲆᐃΔ": "img/day-reidite0.png",
		"ΔᐃⵠᐃᐃᐃΔ": "img/night-reidite0.png",
		"ⲆⲆΔⲆᐃⵠΔ": "img/day-reidite1.png",
		"ⲆⵠᐃⲆⵠᐃΔ": "img/night-reidite1.png",
		"ⵠΔΔΔᐃⲆΔ": "img/day-reidite2.png",
		"ᐃΔᐃᐃⵠᐃⲆ": "img/night-reidite2.png",
		"ⵠⲆᐃⲆΔⵠⵠ": "img/day-lava1.png",
		"ⲆᐃⵠᐃⵠⲆΔ": "img/night-lava1.png",
		"ΔⵠⵠⵠⲆΔΔ": "img/day-lava2.png",
		"ΔᐃⵠΔΔⲆⲆ": "img/night-lava2.png",
		"ᐃⵠΔᐃΔΔᐃ": "img/day-lava3.png",
		"ⵠᐃⲆⲆΔⲆⲆ": "img/night-lava3.png",
		"ⵠᐃΔⲆⵠΔⲆ": "img/day-lava4.png",
		"ⵠⲆⵠΔⵠⵠᐃ": "img/night-lava4.png",
		"ᐃⲆΔⵠΔⵠΔ": "img/day-lava5.png",
		"ⵠⲆᐃⲆΔⲆᐃ": "img/night-lava5.png",
		"ⲆⲆᐃⵠΔΔΔ": "img/day-lava6.png",
		"ⵠᐃΔΔⲆΔΔ": "img/night-lava6.png",
		"ⲆᐃΔᐃⲆⵠⵠ": "img/day-lava-ground1.png",
		"ⵠΔⵠᐃⵠⲆᐃ": "img/night-lava-ground1.png",
		"ΔⵠΔⵠΔᐃᐃ": "img/day-lava-ground2.png",
		"ΔⵠΔᐃᐃᐃⲆ": "img/night-lava-ground2.png",
		"ⲆᐃⵠⲆⲆⲆⵠ": "img/day-lava-ground3.png",
		"ⲆᐃⲆⲆᐃΔᐃ": "img/night-lava-ground3.png",
		"ⵠᐃⵠⲆⲆⲆⲆ": "img/day-lava-ground4.png",
		"ᐃᐃⵠᐃᐃΔⲆ": "img/night-lava-ground4.png",
		"ⲆⵠΔΔΔΔⲆ": "img/day-lava-ground5.png",
		"ΔΔⵠᐃⲆⵠᐃ": "img/night-lava-ground5.png",
		"ΔⵠᐃⵠΔᐃᐃ": "img/day-lava-ground6.png",
		"ᐃΔΔⵠᐃΔᐃ": "img/night-lava-ground6.png",
		"ΔᐃᐃⵠᐃΔᐃ": "img/day-fire-mob.png",
		"Ⲇᐃᐃᐃⵠᐃᐃ": "img/night-fire-mob.png",
		"ⵠⲆΔⲆᐃⵠⵠ": "img/hurt-fire-mob.png",
		"ⵠⵠᐃᐃⵠⲆᐃ": "img/day-diamond-protection.png",
		"ⵠⵠᐃⵠᐃⵠᐃ": "img/night-diamond-protection.png",
		"ⵠᐃⵠⵠⲆⵠΔ": "img/day-hand-diamond-protection.png",
		"ΔᐃΔΔᐃⵠⲆ": "img/night-hand-diamond-protection.png",
		"ᐃⲆⵠⵠΔⵠⵠ": "img/inv-diamond-protection-out.png",
		"ᐃᐃⵠΔⵠᐃΔ": "img/inv-diamond-protection-in.png",
		"ᐃΔΔΔⵠΔᐃ": "img/inv-diamond-protection-click.png",
		"ᐃⵠΔⲆⲆⵠᐃ": "img/day-amethyst-protection.png",
		"ⲆᐃⲆᐃΔⲆΔ": "img/night-amethyst-protection.png",
		"ΔⵠⵠΔⵠᐃᐃᐃΔ": "img/day-hand-amethyst-protection.png",
		"ⵠΔⵠΔΔᐃⲆΔᐃ": "img/night-hand-amethyst-protection.png",
		"ΔᐃⲆᐃᐃⲆⲆ": "img/inv-amethyst-protection-out.png",
		"ⲆᐃⵠⵠⵠΔⵠ": "img/inv-amethyst-protection-in.png",
		"ⲆⲆᐃⵠᐃΔⵠ": "img/inv-amethyst-protection-click.png",
		"ΔᐃⵠᐃΔⵠΔ": "img/day-reidite-sword.png",
		"ⵠⵠⲆⵠⲆⵠᐃ": "img/night-reidite-sword.png",
		"ΔⲆΔⲆᐃᐃΔ": "img/inv-reidite-sword-out.png",
		"ΔᐃΔⵠᐃΔⲆ": "img/inv-reidite-sword-in.png",
		"ⵠᐃᐃⲆⵠᐃᐃ": "img/inv-reidite-sword-click.png",
		"ᐃᐃⲆⵠⵠⲆⵠ": "img/inv-reidite-out.png",
		"ⲆᐃΔΔᐃΔⲆ": "img/inv-reidite-in.png",
		"ᐃⲆᐃⲆⵠⲆⵠ": "img/inv-reidite-click.png",
		"ⲆⲆΔΔⵠⵠᐃ": "img/inv-flame-out.png",
		"ⵠΔᐃΔⲆΔᐃ": "img/inv-flame-in.png",
		"ⵠΔΔΔΔᐃΔ": "img/inv-flame-click.png",
		"ⵠᐃⵠᐃΔᐃᐃ": "img/day-magma-buble0.png",
		"ⵠᐃⲆΔᐃᐃⲆ": "img/night-magma-buble0.png",
		"ΔΔⲆⲆᐃΔⲆ": "img/day-magma-buble1.png",
		"ΔΔⲆⲆⵠᐃᐃ": "img/night-magma-buble1.png",
		"ᐃⵠᐃᐃⵠⲆⲆ": "img/day-magma-buble2.png",
		"ⵠᐃᐃᐃΔⲆⲆ": "img/night-magma-buble2.png",
		"ⲆᐃΔⲆⲆᐃⵠ": "img/day-lava-dragon.png",
		"ᐃᐃⵠⲆᐃΔⲆ": "img/night-lava-dragon.png",
		"ⵠⵠⵠⲆᐃΔⲆⲆΔ": "img/day-fire-dragon.png",
		"ⲆᐃⲆΔⵠⵠΔᐃⲆ": "img/night-fire-dragon.png",
		"ᐃⲆⲆⲆⲆⵠᐃ": "img/hurt-lava-dragon.png",
		"ᐃᐃⵠⲆΔᐃⵠ": "img/day-lava-wing-left.png",
		"ⲆᐃΔᐃΔⵠᐃ": "img/night-lava-wing-left.png",
		"ⲆᐃᐃⲆⲆⲆΔ": "img/day-lava-wing-right.png",
		"ⵠᐃᐃᐃⵠΔⲆ": "img/night-lava-wing-right.png",
		"ⲆᐃΔⵠⲆΔΔ": "img/hurt-lava-wing-left.png",
		"ⵠⵠⵠΔᐃⵠⲆ": "img/hurt-lava-wing-right.png",
		"ᐃΔᐃᐃⲆΔⵠ": "img/day-reidite-spear.png",
		"ⵠΔᐃⵠⲆΔᐃ": "img/night-reidite-spear.png",
		"ᐃⵠⲆⵠΔⲆᐃ": "img/inv-reidite-spear-out.png",
		"ΔⲆⲆᐃΔⲆΔ": "img/inv-reidite-spear-in.png",
		"ᐃΔΔⵠΔⲆΔ": "img/inv-reidite-spear-click.png",
		"ⵠΔᐃⵠᐃⲆΔ": "img/day-reidite-helmet.png",
		"ΔⲆⵠᐃⲆⵠΔ": "img/night-reidite-helmet.png",
		"Δⵠᐃⵠⵠᐃᐃ": "img/inv-reidite-helmet-out.png",
		"ΔⵠⵠⵠΔⵠΔ": "img/inv-reidite-helmet-in.png",
		"ⲆⵠⲆⵠᐃⵠⲆ": "img/inv-reidite-helmet-click.png",
		"ΔᐃᐃΔΔᐃⲆ": "img/day-hand-reidite-protection.png",
		"ⵠⲆⲆᐃⵠΔΔ": "img/night-hand-reidite-protection.png",
		"ⲆⲆⲆⲆⵠⲆΔ": "img/day-reidite-protection.png",
		"ⵠᐃⵠⵠᐃⵠⵠ": "img/night-reidite-protection.png",
		"ᐃᐃΔⲆⵠⵠᐃ": "img/inv-reidite-protection-out.png",
		"ᐃⲆΔᐃⵠⵠⲆ": "img/inv-reidite-protection-in.png",
		"ⲆⲆⲆΔⲆⵠⲆ": "img/inv-reidite-protection-click.png",
		"ⵠⵠᐃΔⲆᐃⲆ": "img/day-lava-dragon-sword.png",
		"ᐃᐃⵠᐃᐃᐃⵠ": "img/night-lava-dragon-sword.png",
		"ⵠⵠΔⵠᐃᐃⲆ": "img/inv-lava-dragon-sword-out.png",
		"ΔⵠⵠⲆΔᐃΔ": "img/inv-lava-dragon-sword-in.png",
		"ⵠⲆΔᐃⲆᐃΔ": "img/inv-lava-dragon-sword-click.png",
		"ⲆⲆΔᐃᐃᐃᐃ": "img/day-lava-spear.png",
		"ΔᐃⵠⲆΔⲆⵠ": "img/night-lava-spear.png",
		"ⲆΔΔΔᐃⲆΔ": "img/inv-lava-spear-out.png",
		"ΔⵠᐃⲆΔΔᐃ": "img/inv-lava-spear-in.png",
		"ᐃΔΔⲆᐃΔΔ": "img/inv-lava-spear-click.png",
		"ⲆⲆᐃᐃΔΔΔ": "img/day-lava-helmet.png",
		"ⵠΔᐃⲆⵠⲆᐃ": "img/night-lava-helmet.png",
		"ⵠⵠⲆⵠⲆᐃᐃ": "img/inv-lava-helmet-out.png",
		"ΔⲆⵠΔΔᐃΔ": "img/inv-lava-helmet-in.png",
		"ⲆᐃⲆⵠⲆᐃⵠ": "img/inv-lava-helmet-click.png",
		"ᐃⲆᐃⵠⲆΔⲆ": "img/day-witch-hat.png",
		"ΔⲆΔΔΔᐃΔ": "img/night-witch-hat.png",
		"ⲆᐃⲆΔᐃᐃⵠ": "img/inv-witch-hat-out.png",
		"ⵠᐃⵠⵠΔⵠⵠ": "img/inv-witch-hat-in.png",
		"ⲆΔⵠⲆᐃⲆΔ": "img/inv-witch-hat-click.png",
		"ⲆᐃᐃⲆⲆΔᐃ": "img/day-nimbus2000.png",
		"ⵠᐃⵠΔⵠᐃⵠ": "img/night-nimbus2000.png",
		"ⵠΔⲆⵠⲆⵠΔ": "img/inv-nimbus2000-out.png",
		"ⲆⵠⲆⲆᐃᐃᐃ": "img/inv-nimbus2000-in.png",
		"ᐃⲆⲆⵠᐃΔⵠ": "img/inv-nimbus2000-click.png",
		"ⲆᐃᐃⲆᐃⵠΔ": "img/day-accessory1-pacques.png",
		"ᐃΔᐃΔⲆⲆᐃ": "img/night-accessory1-pacques.png",
		"ᐃΔⵠⵠⵠⵠⲆ": "img/day-accessory2-pacques.png",
		"ΔⲆΔᐃⲆⲆΔ": "img/night-accessory2-pacques.png",
		"ᐃᐃΔⲆⵠⵠΔ": "img/day-accessory3-pacques.png",
		"ΔΔⲆⵠⵠⲆⲆ": "img/night-accessory3-pacques.png",
		"ⲆⲆΔΔⲆⵠⲆ": "img/day-accessory5-pacques.png",
		"ⲆⲆⵠⵠⵠⵠⲆ": "img/night-accessory5-pacques.png",
		"ΔⲆᐃΔⲆΔᐃ": "img/day-accessory6-pacques.png",
		"ⲆᐃᐃⲆⵠⵠⵠ": "img/night-accessory6-pacques.png",
		"ᐃⲆⲆⵠᐃᐃΔ": "img/day-accessory7-pacques.png",
		"ΔᐃⲆᐃᐃⵠⵠ": "img/night-accessory7-pacques.png",
		"ⲆⵠⲆⵠⵠᐃⲆ": "img/day-accessory8-pacques.png",
		"ⲆⲆⲆΔⵠΔⲆ": "img/night-accessory8-pacques.png",
		"ᐃΔⵠΔⲆᐃΔ": "img/day-bag-pacques.png",
		"ⵠⲆᐃΔⵠΔΔ": "img/night-bag-pacques.png",
		"ⵠⵠⲆⲆΔᐃΔ": "img/day-carrot.png",
		"ΔΔⵠⲆᐃⲆΔ": "img/night-carrot.png",
		"ᐃΔⵠⵠⲆⲆᐃ": "img/day-carrot-dried.png",
		"ΔΔⲆⵠⵠΔⲆ": "img/night-carrot-dried.png",
		"ΔΔⲆⲆᐃᐃΔ": "img/day-tomato-herb.png",
		"ΔⲆΔⵠᐃΔⵠ": "img/night-tomato-herb.png",
		"ΔⵠᐃⵠⲆΔΔ": "img/day-tomato-herb-dried.png",
		"ⵠᐃⵠΔΔᐃⵠ": "img/night-tomato-herb-dried.png",
		"ΔⵠⲆᐃΔⵠⵠ": "img/day-tomato.png",
		"ⲆⵠⲆⵠⵠΔⲆ": "img/night-tomato.png",
		"ⵠⲆⵠᐃΔⵠᐃ": "img/inv-carrot-out.png",
		"ⵠᐃⵠᐃᐃΔⲆ": "img/inv-carrot-in.png",
		"ᐃⲆΔᐃΔᐃΔ": "img/inv-carrot-click.png",
		"ΔΔᐃΔⵠⲆΔ": "img/inv-tomato-out.png",
		"ⲆΔⲆΔᐃᐃᐃ": "img/inv-tomato-in.png",
		"ΔⲆⵠⵠᐃᐃΔ": "img/inv-tomato-click.png",
		"ⵠⵠᐃⲆⲆⲆⲆ": "img/day-player0.png",
		"ⲆⵠⲆΔⲆⵠⵠ": "img/night-player0.png",
		"ᐃⲆΔⲆⵠⵠⵠ": "img/day-player1.png",
		"ΔⲆΔⵠΔΔⲆ": "img/night-player1.png",
		"ⲆⲆΔⵠⵠⲆΔ": "img/day-player2.png",
		"ᐃΔⲆⵠᐃⲆⵠ": "img/night-player22.png",
		"ΔΔΔΔⵠⲆᐃ": "img/day-player3.png",
		"ⲆᐃⲆⵠΔΔΔ": "img/night-player33.png",
		"ⲆⵠᐃΔⲆᐃⲆ": "img/day-player4.png",
		"ᐃᐃᐃⵠⵠΔΔ": "img/night-player4.png",
		"ⵠⵠΔΔΔᐃⲆ": "img/day-player5.png",
		"ᐃΔᐃᐃⵠΔΔ": "img/night-player5.png",
		"ᐃⵠⵠⲆⲆΔᐃ": "img/day-player6.png",
		"ⵠⲆⵠΔⲆⵠⵠ": "img/night-player6.png",
		"ⵠᐃⲆⵠⲆᐃᐃ": "img/day-player7.png",
		"ⵠᐃᐃⵠΔΔⵠ": "img/night-player7.png",
		"ᐃΔΔᐃᐃⲆⲆ": "img/day-player8.png",
		"ⲆΔⲆᐃⲆⲆⲆ": "img/night-player8.png",
		"ⵠⲆⵠⵠΔΔⵠ": "img/day-player9.png",
		"ⲆⵠΔΔᐃⵠᐃ": "img/night-player9.png",
		"ΔΔⵠⵠⲆΔᐃ": "img/day-player10.png",
		"ΔᐃⲆᐃΔΔᐃ": "img/night-player10.png",
		"ⲆⵠᐃᐃⵠᐃΔ": "img/day-player11.png",
		"ⵠΔᐃᐃᐃΔⲆ": "img/night-player11.png",
		"ⲆᐃⵠᐃⵠΔᐃ": "img/day-player12.png",
		"ⲆⲆᐃΔⵠᐃΔ": "img/night-player12.png",
		"ⲆᐃⲆⲆΔΔⵠ": "img/day-player13.png",
		"ⵠⵠⵠⵠⵠΔⲆ": "img/night-player13.png",
		"ᐃⲆⲆⲆᐃⲆⲆ": "img/day-player14.png",
		"ⵠᐃΔⵠΔⵠΔ": "img/night-player14.png",
		"ⲆⲆⵠⵠᐃⵠⲆ": "img/day-player15.png",
		"ⲆᐃⲆⲆⲆΔⲆ": "img/night-player15.png",
		"ᐃᐃⲆⲆᐃⵠΔ": "img/day-player16.png",
		"ΔⵠᐃⵠΔΔᐃ": "img/night-player16.png",
		"ⲆΔΔᐃΔⵠⲆ": "img/day-player17.png",
		"ⲆᐃⲆⲆⲆΔⵠ": "img/night-player17.png",
		"ᐃᐃΔΔⲆᐃⲆ": "img/day-player18.png",
		"ⲆᐃΔⲆⵠⲆΔ": "img/night-player18.png",
		"ⵠⲆⵠⲆⲆⲆⵠ": "img/day-player19.png",
		"ⲆᐃᐃⵠⲆⲆᐃ": "img/night-player19.png",
		"ⵠⵠᐃΔΔⵠᐃ": "img/day-hand-player0.png",
		"ᐃⲆΔⵠⵠᐃⲆ": "img/night-hand-player0.png",
		"ⲆⲆⲆᐃΔᐃⲆ": "img/day-hand-player1.png",
		"ΔⲆⵠΔⲆᐃⲆ": "img/night-hand-player1.png",
		"ᐃⵠⲆⲆⲆᐃᐃ": "img/day-hand-player2.png",
		"Δⵠᐃᐃⵠⵠⵠ": "img/night-hand-player22.png",
		"ΔᐃΔΔᐃΔⵠ": "img/day-hand-player3.png",
		"ⲆᐃⲆⵠⲆⲆᐃ": "img/night-hand-player33.png",
		"ΔⵠⵠⲆⲆⲆⵠ": "img/day-hand-player4.png",
		"ⵠⲆⵠΔⲆⵠΔ": "img/night-hand-player4.png",
		"ᐃᐃⲆΔⵠΔⲆ": "img/day-hand-player5.png",
		"ⲆᐃⲆⲆⵠΔᐃ": "img/night-hand-player5.png",
		"ⲆᐃΔⵠⲆⵠⲆ": "img/day-hand-player6.png",
		"ᐃⲆⵠⵠⲆⲆⲆ": "img/night-hand-player6.png",
		"ⲆΔⵠⵠΔⵠΔ": "img/day-hand-player7.png",
		"ΔⲆᐃⲆⵠᐃⲆ": "img/night-hand-player7.png",
		"ΔⲆⵠⲆⲆΔⵠ": "img/day-hand-player8.png",
		"ΔⲆᐃΔᐃᐃⲆ": "img/night-hand-player8.png",
		"ᐃⲆⵠΔⵠΔⵠ": "img/day-hand-player9.png",
		"ΔⵠΔᐃⵠⵠⵠ": "img/night-hand-player9.png",
		"ⵠⵠΔⲆΔⵠⵠ": "img/day-hand-player10.png",
		"ΔⲆⵠⵠᐃⲆⵠ": "img/night-hand-player10.png",
		"ⵠΔΔⲆΔⲆⲆ": "img/day-hand-player11.png",
		"ᐃΔΔᐃΔⲆⵠ": "img/night-hand-player11.png",
		"ⵠᐃⲆⵠΔⲆΔ": "img/day-hand-player12.png",
		"ⲆΔⵠⲆⵠᐃⵠ": "img/night-hand-player12.png",
		"ⵠᐃΔᐃΔᐃΔ": "img/day-hand-player13.png",
		"ᐃⵠᐃⵠᐃΔⵠ": "img/night-hand-player13.png",
		"ⵠΔΔⲆⲆΔⵠ": "img/day-hand-player14.png",
		"ᐃᐃⵠⲆᐃⵠⲆ": "img/night-hand-player14.png",
		"ⲆᐃⲆⵠᐃᐃⲆ": "img/day-hand-player15.png",
		"ΔΔΔᐃⲆᐃⵠ": "img/night-hand-player15.png",
		"ⵠⲆⲆΔⲆΔᐃ": "img/day-hand-player16.png",
		"ⵠΔⲆⲆΔΔΔ": "img/night-hand-player16.png",
		"ⲆⵠΔⲆΔⵠⲆ": "img/day-hand-player17.png",
		"ΔⲆⵠΔᐃⲆⲆ": "img/night-hand-player17.png",
		"ΔⲆⲆᐃᐃᐃⵠ": "img/day-hand-player18.png",
		"ᐃᐃⲆⲆΔᐃⵠ": "img/night-hand-player18.png",
		"ⲆᐃⲆᐃᐃⵠΔ": "img/day-hand-player19.png",
		"ⵠΔᐃⲆΔⲆΔ": "img/night-hand-player19.png",
		"ΔᐃⵠⲆᐃⲆⵠ": "img/day-accessory4.png",
		"ΔΔⲆᐃᐃⲆⲆ": "img/night-accessory4.png",
		"ᐃⲆΔΔⵠΔΔ": "img/day-accessory9.png",
		"ΔⲆⲆⲆΔΔΔ": "img/night-accessory9.png",
		"ⲆⲆᐃⲆⵠΔⵠ": "img/day-accessory10.png",
		"ΔΔⲆⲆᐃΔⵠ": "img/night-accessory10.png",
		"ⵠΔⲆᐃⵠⲆΔ": "img/day-accessory11.png",
		"ⵠᐃᐃᐃᐃΔᐃ": "img/night-accessory11.png",
		"ⲆᐃⲆⵠⲆᐃᐃ": "img/day-accessory12.png",
		"ᐃⵠⲆΔᐃᐃⲆ": "img/night-accessory12.png",
		"ΔΔⲆᐃⵠᐃΔ": "img/day-bag.png",
		"ΔΔΔⵠΔᐃⵠ": "img/night-bag.png",
		"ⵠΔΔⵠⲆΔⵠ": "img/inv-bag-out.png",
		"ᐃΔᐃⲆⵠΔᐃ": "img/inv-bag-in.png",
		"ᐃΔᐃΔⲆᐃΔ": "img/inv-bag-click.png",
		"ΔΔⲆⵠΔⵠⵠ": "img/day-pitchfork.png",
		"ᐃⵠΔⵠⲆⲆⲆ": "img/night-pitchfork.png",
		"ⵠΔⲆⲆⵠⵠΔ": "img/inv-pitchfork-out.png",
		"ⲆⲆᐃΔⲆᐃⲆ": "img/inv-pitchfork-in.png",
		"ᐃⵠᐃⵠΔΔᐃ": "img/inv-pitchfork-click.png",
		"ΔᐃΔᐃⲆΔᐃ": "img/inv-wood-spike-door-out.png",
		"ΔΔᐃᐃᐃⲆᐃ": "img/inv-wood-spike-door-in.png",
		"ⵠⲆⵠᐃⲆⲆⵠ": "img/inv-wood-spike-door-click.png",
		"ⲆᐃΔᐃΔΔᐃ": "img/inv-stone-spike-door-out.png",
		"ᐃᐃⵠⲆᐃᐃⵠ": "img/inv-stone-spike-door-in.png",
		"ⵠⲆⵠΔΔⵠᐃ": "img/inv-stone-spike-door-click.png",
		"ᐃΔⵠᐃΔⲆⲆ": "img/inv-gold-spike-door-out.png",
		"ⲆⵠᐃᐃΔⵠᐃ": "img/inv-gold-spike-door-in.png",
		"ⲆΔⵠⵠᐃΔⵠ": "img/inv-gold-spike-door-click.png",
		"ⵠΔΔⲆⲆⵠΔ": "img/inv-diamond-spike-door-out.png",
		"ⵠᐃⵠⵠⵠᐃⵠ": "img/inv-diamond-spike-door-in.png",
		"ᐃΔᐃΔΔΔⵠ": "img/inv-diamond-spike-door-click.png",
		"ⲆⵠᐃΔⲆΔⵠ": "img/inv-amethyst-spike-door-out.png",
		"ⵠᐃⲆⵠᐃΔΔ": "img/inv-amethyst-spike-door-in.png",
		"ΔⲆᐃΔΔⲆᐃ": "img/inv-amethyst-spike-door-click.png",
		"ⲆΔⲆᐃΔⲆΔ": "img/day-wood-spike-door.png",
		"ⲆⲆⵠⵠΔᐃᐃ": "img/night-wood-spike-door.png",
		"ⵠΔⲆⵠΔΔΔ": "img/day-stone-spike-door.png",
		"ΔᐃΔⵠⵠΔᐃ": "img/night-stone-spike-door.png",
		"ᐃΔⵠⵠᐃΔΔ": "img/day-gold-spike-door.png",
		"ⵠⲆᐃᐃΔⵠΔ": "img/night-gold-spike-door.png",
		"ⲆΔⵠᐃⲆΔⲆ": "img/day-diamond-spike-door.png",
		"ⵠᐃⵠⲆⲆᐃⲆ": "img/night-diamond-spike-door.png",
		"ΔΔⵠᐃⲆᐃⲆ": "img/day-amethyst-spike-door.png",
		"ⲆⵠⲆⲆΔᐃᐃ": "img/night-amethyst-spike-door.png",
		"ⲆⲆⵠᐃⵠᐃᐃ": "img/inv-reidite-spike-door-out.png",
		"ᐃⲆᐃⲆᐃⲆⲆ": "img/inv-reidite-spike-door-in.png",
		"ᐃⲆΔⲆᐃᐃᐃ": "img/inv-reidite-spike-door-click.png",
		"ΔᐃΔⲆΔᐃΔ": "img/inv-reidite-door-out.png",
		"ΔΔⲆⲆⵠⵠⵠ": "img/inv-reidite-door-in.png",
		"ΔᐃⵠⵠᐃΔⵠ": "img/inv-reidite-door-click.png",
		"ᐃⵠΔᐃᐃⵠᐃ": "img/inv-reidite-spike-out.png",
		"ᐃⵠΔΔⵠⵠᐃ": "img/inv-reidite-spike-in.png",
		"ⲆᐃᐃΔΔΔᐃ": "img/inv-reidite-spike-click.png",
		"ᐃΔΔΔⲆᐃᐃ": "img/inv-reidite-wall-out.png",
		"ΔΔⵠⲆᐃΔΔ": "img/inv-reidite-wall-in.png",
		"ΔⵠⵠⲆⲆΔⵠ": "img/inv-reidite-wall-click.png",
		"ΔᐃᐃⲆΔΔⵠ": "img/day-reidite-wall.png",
		"ⲆΔᐃⵠᐃᐃᐃ": "img/night-reidite-wall.png",
		"ΔΔΔᐃⵠⲆⲆ": "img/day-reidite-door.png",
		"ⲆᐃⲆᐃᐃⵠᐃ": "img/night-reidite-door.png",
		"ᐃᐃΔⵠΔⵠⵠ": "img/day-reidite-spike.png",
		"ΔⵠΔⲆⲆᐃΔ": "img/night-reidite-spike.png",
		"ⵠⵠⲆᐃᐃⲆⲆ": "img/day-reidite-spike-door.png",
		"ΔⵠᐃⵠΔⵠⵠ": "img/night-reidite-spike-door.png",
		"ⲆΔΔⵠᐃⲆⲆ": "img/inv-reidite-pickaxe-out.png",
		"ᐃⵠⵠⵠᐃᐃⵠ": "img/inv-reidite-pickaxe-in.png",
		"ⵠⵠⲆⲆΔⲆΔ": "img/inv-reidite-pickaxe-click.png",
		"ⲆΔᐃⲆⲆⵠⲆ": "img/day-reidite-pickaxe.png",
		"ⲆⵠⵠⲆⵠⲆⲆ": "img/night-reidite-pickaxe.png",
		"ⲆⲆⲆⲆⵠⲆⵠ": "img/inv-reidite-hammer-out.png",
		"ⵠΔᐃⵠⲆᐃⵠ": "img/inv-reidite-hammer-in.png",
		"ⲆⲆⲆᐃⵠⵠΔ": "img/inv-reidite-hammer-click.png",
		"ΔⲆᐃⲆⲆᐃᐃ": "img/day-reidite-hammer.png",
		"ᐃⲆⵠᐃᐃⵠⵠ": "img/night-reidite-hammer.png",
		"ΔΔᐃᐃⵠⲆᐃ": "img/day-watermelon1.png",
		"ⲆⲆΔⵠⵠⲆⵠ": "img/night-watermelon1.png",
		"ΔᐃΔⵠᐃΔΔ": "img/day-watermelon-dried1.png",
		"ⵠᐃⵠᐃΔⲆᐃ": "img/night-watermelon-dried1.png",
		"ᐃⵠⵠᐃᐃᐃᐃ": "img/inv-watermelon-out.png",
		"ⲆΔΔⲆⵠⲆⵠ": "img/inv-watermelon-in.png",
		"ΔⲆΔᐃΔⵠⵠ": "img/inv-watermelon-click.png",
		"ΔΔᐃΔⵠⲆⵠ": "img/day-boat.png",
		"ΔΔⲆⲆⵠⵠⲆ": "img/night-boat.png",
		"ⵠᐃᐃᐃΔⵠΔ": "img/day-boat-wave.png",
		"ᐃⵠΔᐃⵠᐃᐃ": "img/night-boat-wave.png",
		"ⵠΔΔⲆⵠΔΔ": "img/inv-boat-out.png",
		"ⲆΔᐃΔᐃⵠⲆ": "img/inv-boat-in.png",
		"ᐃᐃΔᐃⵠⵠᐃ": "img/inv-boat-click.png",
		"ᐃⵠⵠᐃᐃⵠΔ": "img/day-plane.png",
		"ⵠᐃΔΔⲆᐃⲆ": "img/night-plane.png",
		"ⲆᐃⲆᐃᐃⲆⲆ": "img/inv-plane-out.png",
		"ⲆΔⵠⲆⵠⵠⵠ": "img/inv-plane-in.png",
		"ΔⲆᐃⵠᐃᐃᐃ": "img/inv-plane-click.png",
		"ⵠⵠᐃᐃⲆᐃΔ": "img/day-sled.png",
		"ⲆⵠⲆΔΔΔΔ": "img/night-sled.png",
		"ΔⲆⵠⲆΔⵠΔ": "img/day-sled-wave.png",
		"ⲆⲆᐃⵠⵠΔⲆ": "img/night-sled-wave.png",
		"ΔⵠᐃΔΔΔΔ": "img/inv-sled-out.png",
		"ⲆᐃΔΔΔᐃⵠ": "img/inv-sled-in.png",
		"ᐃⵠΔⲆΔᐃΔ": "img/inv-sled-click.png",
		"ⲆⲆⵠᐃᐃⵠⲆ": "img/day-pirate-hat.png",
		"ΔⲆΔⲆᐃⵠⵠ": "img/night-pirate-hat.png",
		"ᐃⵠΔⲆⵠᐃⲆ": "img/inv-pirate-hat-out.png",
		"ⲆⲆᐃΔⵠⲆΔ": "img/inv-pirate-hat-in.png",
		"ⲆΔⵠⲆΔΔᐃ": "img/inv-pirate-hat-click.png",
		"ΔΔⲆΔⵠΔⲆ": "img/day-penguin.png",
		"ᐃⲆⵠⲆᐃΔΔ": "img/night-penguin.png",
		"ⵠⲆⵠΔⲆΔⵠ": "img/hurt-penguin.png",
		"ᐃⲆᐃᐃⲆ": "img/inv-penguin-feather-click.png",
		"ᐃᐃⵠΔⵠ": "img/inv-hawk-feather-click.png",
		"ⵠΔᐃⲆⲆⵠᐃ": "img/day-boar1.png",
		"ⲆΔⲆⲆᐃⲆᐃ": "img/day-boar1-tamed.png",
		"ΔΔᐃⲆⲆⵠⵠ": "img/day-boar1-angry.png",
		"ΔⲆⲆΔⲆᐃⲆ": "img/night-boar1.png",
		"ᐃΔᐃΔⵠΔⵠ": "img/night-boar1-tamed.png",
		"ΔⲆΔᐃⲆᐃΔ": "img/night-boar1-angry.png",
		"ΔᐃΔᐃΔΔᐃ": "img/inv-mount-boar-out.png",
		"ᐃⲆΔⲆⵠⲆΔ": "img/inv-mount-boar-in.png",
		"ⵠⲆⵠⵠⲆᐃⵠ": "img/inv-mount-boar-click.png",
		"ᐃⵠΔⵠⵠᐃᐃ": "img/day-hurt-boar1.png",
		"ΔⲆⵠᐃΔⵠⵠ": "img/boar1-step.png",
		"ⵠⵠⵠΔΔⵠᐃ": "img/day-saddle1.png",
		"ᐃΔⲆᐃΔⵠⲆ": "img/night-saddle1.png",
		"ⵠⵠⲆⵠᐃⲆΔ": "img/inv-saddle-out.png",
		"ⵠⲆⵠΔΔⵠΔ": "img/inv-saddle-in.png",
		"ᐃᐃⲆΔⲆⲆΔ": "img/inv-saddle-click.png",
		"ⲆᐃᐃⲆⵠᐃⵠ": "img/day-magic-wand0.png",
		"ⵠⲆᐃⵠᐃΔⵠ": "img/night-magic-wand0.png",
		"ⲆᐃΔΔⵠᐃⵠ": "img/day-light-wand1.png",
		"ⵠⲆΔⵠᐃⵠᐃ": "img/night-light-wand1.png",
		"ΔⲆᐃⵠⵠᐃⵠ": "img/inv-magic-wand0-out.png",
		"ᐃᐃⲆⲆᐃⲆΔ": "img/inv-magic-wand0-in.png",
		"ⵠⲆᐃⵠⲆᐃᐃ": "img/inv-magic-wand0-click.png",
		"ⵠⵠΔⲆⵠΔⵠ": "img/day-magic-wand1.png",
		"ⵠⲆⲆΔΔⲆⲆ": "img/night-magic-wand1.png",
		"ᐃⲆⲆΔⲆⵠⲆ": "img/day-light-wand0.png",
		"ⲆⵠⵠⲆᐃⵠΔ": "img/night-light-wand0.png",
		"ΔⲆΔⲆⲆⲆⵠ": "img/inv-magic-wand1-out.png",
		"ⲆⵠΔᐃⵠⵠⲆ": "img/inv-magic-wand1-in.png",
		"ⵠⲆⲆΔⵠⵠᐃ": "img/inv-magic-wand1-click.png",
		"ⵠΔⲆⲆⵠᐃⵠ": "img/day-firefly.png",
		"ⲆᐃᐃᐃᐃᐃⲆ": "img/night-firefly.png",
		"ΔⵠⲆΔᐃΔⲆ": "img/hurt-firefly.png",
		"ⵠΔⲆᐃᐃⲆᐃ": "img/inv-firefly-out.png",
		"ΔᐃⵠⲆⵠⲆⵠ": "img/inv-firefly-in.png",
		"ᐃᐃᐃΔⵠⵠΔ": "img/inv-firefly-click.png",
		"ΔⲆⵠⲆⵠᐃⲆ": "img/day-baby-dragon.png",
		"ᐃⲆΔᐃⲆⲆᐃ": "img/night-baby-dragon.png",
		"ᐃⲆⵠⲆⵠⲆΔ": "img/day-baby-dragon-angry.png",
		"ⲆᐃΔᐃΔⲆΔ": "img/night-baby-dragon-angry.png",
		"ⵠⲆΔⲆⵠΔᐃ": "img/day-baby-dragon-tamed.png",
		"ⵠᐃΔᐃⵠⲆⲆ": "img/night-baby-dragon-tamed.png",
		"ΔᐃᐃⲆⲆⲆⵠ": "img/day-wing-dragon-left-angry.png",
		"ᐃⲆᐃⵠⵠⲆⵠ": "img/night-dragon-wing-left-angry.png",
		"ⵠⵠΔⲆᐃᐃⲆ": "img/day-wing-dragon-right-angry.png",
		"ᐃⵠΔⲆᐃΔᐃ": "img/night-dragon-wing-right-angry.png",
		"ⵠⲆⵠᐃᐃᐃΔ": "img/day-wing-dragon-left-tamed.png",
		"ᐃⲆⵠΔⵠΔΔ": "img/night-dragon-wing-left-tamed.png",
		"ᐃⲆᐃⲆⵠⲆΔ": "img/day-wing-dragon-right-tamed.png",
		"ᐃⵠΔⲆⵠⵠⲆ": "img/night-wing-dragon-right-tamed.png",
		"ᐃⲆΔᐃΔⵠⲆ": "img/day-wing-dragon-left.png",
		"ⲆᐃⲆⲆᐃΔΔ": "img/night-dragon-wing-left.png",
		"ᐃⲆⵠⲆⵠⵠΔ": "img/day-wing-dragon-right.png",
		"ⵠⲆΔⲆΔᐃⵠ": "img/night-wing-dragon-right.png",
		"ΔⵠᐃᐃΔᐃᐃ": "img/hurt-baby-dragon.png",
		"ⵠⵠᐃΔⵠⵠⵠ": "img/hurt-baby-dragon-wing-left.png",
		"ΔΔⵠⲆⲆΔᐃ": "img/hurt-baby-dragon-wing-right.png",
		"ᐃᐃⲆⵠⲆΔⲆ": "img/inv-baby-dragon-out.png",
		"ᐃⲆⵠⲆⲆⵠᐃ": "img/inv-baby-dragon-in.png",
		"ⵠΔⵠⵠⲆⲆᐃ": "img/inv-baby-dragon-click.png",
		"ⵠΔⵠⲆⲆⲆⲆ": "img/day-baby-lava.png",
		"ⵠᐃⲆⵠⵠⵠⵠ": "img/night-baby-lava.png",
		"ⵠⲆⲆᐃᐃΔⵠ": "img/day-baby-lava-angry.png",
		"ΔΔⵠΔⵠⲆⲆ": "img/night-baby-lava-angry.png",
		"ΔᐃΔⲆᐃⵠᐃ": "img/day-baby-lava-tamed.png",
		"ⲆᐃᐃΔⵠⲆⲆ": "img/night-baby-lava-tamed.png",
		"ⵠⵠΔΔΔᐃⵠ": "img/day-wing-lava-left-angry.png",
		"Ⲇⵠᐃⵠⵠⵠᐃ": "img/night-wing-lava-left-angry.png",
		"ᐃΔᐃΔΔᐃⲆ": "img/day-wing-lava-right-angry.png",
		"ⲆΔᐃⵠᐃΔⵠ": "img/night-wing-lava-right-angry.png",
		"ΔᐃΔᐃⵠᐃᐃ": "img/day-wing-lava-left-tamed.png",
		"ⵠⲆᐃⲆⵠⵠⵠ": "img/night-wing-lava-left-tamed.png",
		"ΔⵠΔⲆⵠⵠᐃ": "img/day-wing-lava-right-tamed.png",
		"ⲆΔΔᐃᐃΔⲆ": "img/night-wing-lava-right-tamed.png",
		"ᐃⵠⲆⵠⵠΔΔ": "img/day-wing-lava-left.png",
		"ⵠΔᐃΔⲆⲆᐃ": "img/night-wing-lava-left.png",
		"ΔⲆᐃᐃᐃⵠⵠ": "img/day-wing-lava-right.png",
		"ⵠⵠⵠΔΔᐃᐃ": "img/night-wing-lava-right.png",
		"ⲆⲆⵠΔᐃΔⵠ": "img/hurt-baby-lava.png",
		"ᐃᐃᐃⵠΔᐃⵠ": "img/hurt-baby-lava-wing-left.png",
		"ᐃΔᐃΔᐃⲆΔ": "img/hurt-baby-lava-wing-right.png",
		"ⵠⲆΔΔᐃΔᐃ": "img/inv-baby-lava-out.png",
		"ΔⵠⲆⲆᐃⵠΔ": "img/inv-baby-lava-in.png",
		"ΔⲆⵠⵠⵠΔⵠ": "img/inv-baby-lava-click.png",
		"ⲆᐃᐃΔⲆΔᐃ": "img/day-falcon.png",
		"ⵠΔΔᐃᐃⵠᐃ": "img/night-falcon.png",
		"ᐃⲆΔΔⲆⵠⵠ": "img/day-falcon-angry.png",
		"ⵠⵠΔΔⵠᐃΔ": "img/night-falcon-angry.png",
		"ᐃΔΔⵠΔⵠᐃ": "img/day-falcon-ground.png",
		"ᐃᐃΔⵠᐃⵠⲆ": "img/night-falcon-ground.png",
		"ⲆᐃⵠᐃΔᐃᐃ": "img/day-falcon-ground-angry.png",
		"ᐃᐃⲆᐃⲆⲆⲆ": "img/night-falcon-ground-angry.png",
		"ⲆΔᐃΔⲆⵠΔ": "img/day-falcon-wings-left.png",
		"ⵠⲆⵠⵠⵠΔΔ": "img/night-falcon-wings-left.png",
		"ΔⲆᐃⲆΔⲆⲆ": "img/day-falcon-wings-right.png",
		"ᐃΔⲆⲆΔΔⲆ": "img/night-falcon-wings-right.png",
		"ⵠⵠᐃΔᐃⵠⲆ": "img/day-falcon-angry-wings-left.png",
		"ᐃᐃⲆᐃΔⲆⵠ": "img/night-falcon-angry-wings-left.png",
		"ᐃᐃⲆⵠⵠΔᐃ": "img/day-falcon-angry-wings-right.png",
		"ΔΔᐃΔΔⲆΔ": "img/night-falcon-angry-wings-right.png",
		"ᐃΔᐃⲆᐃᐃⵠ": "img/day-falcon-wings-left-tamed.png",
		"ⲆⲆΔΔΔᐃⲆ": "img/night-falcon-wings-left-tamed.png",
		"ⲆΔᐃⵠᐃⵠᐃ": "img/day-falcon-wings-right-tamed.png",
		"ⲆᐃⵠⲆⲆΔⵠ": "img/night-falcon-wings-right-tamed.png",
		"ᐃⲆⵠⲆⲆⲆⵠ": "img/day-falcon-tamed.png",
		"ᐃᐃⲆⵠⵠⲆΔ": "img/night-falcon-tamed.png",
		"ⵠᐃᐃΔΔΔⲆ": "img/hurt-falcon-ground.png",
		"ᐃⲆᐃΔᐃΔΔ": "img/hurt-falcon.png",
		"ⲆΔᐃᐃⲆⵠⲆ": "img/hurt-falcon-wings-left.png",
		"ΔᐃⲆⵠⲆⵠᐃ": "img/hurt-falcon-wings-right.png",
		"ⵠⲆᐃΔⲆᐃᐃ": "img/inv-falcon-out.png",
		"ᐃᐃᐃᐃᐃᐃᐃ": "img/inv-falcon-in.png",
		"ⵠᐃⵠⵠⲆⲆⲆ": "img/inv-falcon-click.png",
		"ⲆΔⵠᐃⲆⲆⲆ": "img/day-crab-boss.png",
		"ⲆⵠᐃΔΔΔⵠ": "img/night-crab-boss.png",
		"ΔΔᐃⵠⵠᐃⲆ": "img/day-crab-boss-angry.png",
		"ⵠΔᐃⵠᐃᐃᐃ": "img/night-crab-boss-angry.png",
		"ΔⲆᐃᐃⵠᐃⵠ": "img/day-crab-boss-tamed.png",
		"ΔⵠⲆⲆⵠⲆᐃ": "img/night-crab-boss-tamed.png",
		"ⲆΔⲆΔᐃⵠⲆ": "img/day-crab-boss-claw-left-attack.png",
		"ⵠⲆⵠΔΔᐃⵠ": "img/night-crab-boss-claw-left-attack.png",
		"ᐃⲆⲆΔᐃⵠⵠ": "img/day-crab-boss-claw-right-attack.png",
		"ⵠⲆⵠⲆᐃⲆⲆ": "img/night-crab-boss-claw-right-attack.png",
		"ⲆⲆⲆᐃᐃⵠᐃΔᐃ": "img/day-crab-boss-claw-left-tamed.png",
		"ΔⵠⵠⲆᐃᐃᐃⲆᐃ": "img/night-crab-boss-claw-left-tamed.png",
		"ᐃⵠΔⵠΔⵠᐃⲆᐃ": "img/day-crab-boss-claw-right-tamed.png",
		"ⲆⲆᐃⲆΔᐃΔᐃⲆ": "img/night-crab-boss-claw-right-tamed.png",
		"ᐃⲆΔⲆⵠⵠΔ": "img/day-crab-boss-claw-left.png",
		"ⲆⵠⵠᐃΔᐃᐃ": "img/night-crab-boss-claw-left.png",
		"ΔΔᐃΔᐃᐃⵠ": "img/day-crab-boss-claw-right.png",
		"ⲆⲆᐃⲆⲆΔΔ": "img/night-crab-boss-claw-right.png",
		"ΔⲆⲆⲆⵠⵠᐃ": "img/hurt-crab-boss.png",
		"ΔΔᐃⵠᐃᐃΔ": "img/hurt-crab-boss-claw-left.png",
		"ᐃⵠᐃⵠᐃΔᐃ": "img/hurt-crab-boss-claw-right.png",
		"ᐃⲆⵠⵠΔⲆⵠ": "img/heal-crab-boss.png",
		"ⲆⲆⵠᐃⲆᐃⲆ": "img/heal-crab-boss-claw-left.png",
		"ᐃΔⲆᐃΔΔⵠ": "img/heal-crab-boss-claw-right.png",
		"ⲆⵠⲆⲆⲆΔⵠ": "img/crab-step.png",
		"ᐃΔΔΔᐃᐃᐃ": "img/inv-crab-boss-out.png",
		"ΔᐃⲆⵠᐃⲆᐃ": "img/inv-crab-boss-in.png",
		"ΔΔΔⵠᐃⵠⲆ": "img/inv-crab-boss-click.png",
		"ᐃⲆⲆⲆⲆⲆᐃ": "img/day-cactus10.png",
		"ΔⵠΔΔⲆᐃⲆ": "img/night-cactus10.png",
		"ᐃᐃⵠⵠᐃⲆⵠ": "img/inv-cactus-out.png",
		"ⲆⲆⲆΔⵠᐃΔ": "img/inv-cactus-in.png",
		"ᐃᐃΔΔⲆⵠΔ": "img/inv-cactus-click.png",
		"ⵠᐃᐃⵠⵠᐃⲆ": "img/day-scorpion.png",
		"ᐃⵠᐃΔⵠⲆΔ": "img/night-scorpion.png",
		"ΔⲆᐃⲆⵠᐃⵠ": "img/day-scorpion-hand-left.png",
		"ⵠⵠⲆΔⵠᐃⲆ": "img/night-scorpion-hand-left.png",
		"ΔᐃⵠᐃⲆⲆⵠ": "img/day-scorpion-hand-right.png",
		"ΔⵠᐃⲆΔⲆⲆ": "img/night-scorpion-hand-right.png",
		"ⲆΔⲆᐃⲆᐃΔ": "img/hurt-scorpion.png",
		"ᐃⵠΔⲆⵠᐃᐃ": "img/hurt-scorpion-hand-left.png",
		"ΔⵠᐃᐃΔⲆᐃ": "img/hurt-scorpion-hand-right.png",
		"ⵠⲆᐃⲆᐃⲆⵠ": "img/day-vulture.png",
		"ΔⲆⲆⵠᐃΔⵠ": "img/night-vulture.png",
		"ⲆⵠΔⲆⲆⲆⵠ": "img/day-vulture-angry.png",
		"ΔⲆΔⲆΔⲆⲆ": "img/night-vulture-angry.png",
		"ᐃⲆⲆⲆⵠᐃⵠ": "img/day-vulture-ground.png",
		"ΔⵠΔⵠⲆᐃΔ": "img/night-vulture-ground.png",
		"ⵠᐃᐃⲆⵠⵠⵠ": "img/day-vulture-ground-angry.png",
		"ⲆⵠᐃⲆⲆⵠΔ": "img/night-vulture-ground-angry.png",
		"ⲆⵠᐃⲆⵠᐃⵠ": "img/day-vulture-wings-left.png",
		"ⲆΔⵠⵠᐃⵠⵠ": "img/night-vulture-wings-left.png",
		"ⲆΔⵠⲆᐃⲆⵠ": "img/day-vulture-wings-right.png",
		"ⲆΔΔΔⵠΔⵠ": "img/night-vulture-wings-right.png",
		"ⲆⲆⲆⲆᐃᐃⵠ": "img/day-vulture-angry-wings-left.png",
		"ΔᐃᐃⲆⲆⲆⲆ": "img/night-vulture-angry-wings-left.png",
		"ΔᐃᐃⲆΔⲆᐃ": "img/day-vulture-angry-wings-right.png",
		"ⵠⵠⲆⲆᐃΔΔ": "img/night-vulture-angry-wings-right.png",
		"ᐃΔⲆΔᐃᐃⲆ": "img/day-vulture-wings-left-tamed.png",
		"ΔⵠᐃΔΔⵠⵠ": "img/night-vulture-wings-left-tamed.png",
		"ⵠᐃⵠΔᐃΔᐃ": "img/day-vulture-wings-right-tamed.png",
		"ᐃᐃⲆᐃⵠᐃΔ": "img/night-vulture-wings-right-tamed.png",
		"ⵠⲆᐃΔᐃⲆⵠ": "img/day-vulture-tamed.png",
		"ΔⲆⲆᐃΔΔᐃ": "img/night-vulture-tamed.png",
		"ⵠⲆⲆᐃΔⲆΔ": "img/hurt-vulture-ground.png",
		"ⵠⲆⵠᐃⵠⲆⵠ": "img/hurt-vulture.png",
		"ⲆⲆⵠᐃⵠⵠΔ": "img/hurt-vulture-wings-left.png",
		"ᐃⲆⵠᐃⵠⲆΔ": "img/hurt-vulture-wings-right.png",
		"ⲆΔⵠᐃΔᐃΔ": "img/day-aloe-vera.png",
		"ⲆⵠᐃΔⲆΔᐃ": "img/night-aloe-vera.png",
		"ⵠⵠᐃⲆΔᐃⲆ": "img/inv-aloe-vera-out.png",
		"ⵠᐃΔⲆⲆⵠΔ": "img/inv-aloe-vera-in.png",
		"ᐃⲆⲆΔⵠⲆⲆ": "img/inv-aloe-vera-click.png",
		"ⲆΔΔⵠⲆⵠⵠ": "img/day-aloe-vera-grown.png",
		"ᐃⲆⲆⲆΔΔᐃ": "img/night-aloe-vera-grown.png",
		"ⲆᐃᐃⲆΔⵠⵠ": "img/day-aloe-vera-dried.png",
		"ⵠΔᐃⵠⲆᐃⲆ": "img/night-aloe-vera-dried.png",
		"ⵠⵠⵠⲆΔⲆⲆ": "img/day-turban1.png",
		"ᐃΔΔⲆⵠⵠⵠ": "img/night-turban1.png",
		"ΔΔᐃⲆᐃⲆⲆ": "img/day-turban2.png",
		"ΔΔᐃᐃⲆᐃⵠ": "img/night-turban2.png",
		"ΔᐃⵠⵠΔⵠΔ": "img/inv-turban2-out.png",
		"ⵠᐃⵠⵠⵠⵠΔ": "img/inv-turban2-in.png",
		"ⲆΔⲆⲆΔⵠⵠ": "img/inv-turban2-click.png",
		"ⲆⲆΔΔᐃΔᐃ": "img/inv-turban1-out.png",
		"ΔⵠᐃⲆⵠᐃⲆ": "img/inv-turban1-in.png",
		"ΔⵠΔΔᐃⲆⵠ": "img/inv-turban1-click.png",
		"ΔᐃⲆⲆⵠⵠⵠ": "img/day-pitchfork2.png",
		"ΔⲆᐃΔⵠᐃⲆ": "img/night-pitchfork2.png",
		"ⲆᐃΔᐃΔᐃΔ": "img/inv-pitchfork2-out.png",
		"ΔᐃⲆⵠⵠⵠΔ": "img/inv-pitchfork2-in.png",
		"ᐃΔᐃⵠΔⵠΔ": "img/inv-pitchfork2-click.png",
		"ᐃᐃⲆⲆᐃᐃᐃ": "img/inv-gold-fork-click.png",
		"ΔΔⵠᐃΔⵠᐃ": "img/inv-pilot-glasses-click.png",
		"ⵠⲆⲆΔΔΔⵠ": "img/day-pilot-helmet.png",
		"ᐃⲆΔⲆᐃΔᐃ": "img/night-pilot-helmet.png",
		"ⵠΔⵠⲆᐃᐃΔ": "img/inv-pilot-helmet-out.png",
		"ᐃⵠⲆᐃᐃΔⲆ": "img/inv-pilot-helmet-in.png",
		"ⵠᐃⵠᐃᐃⲆⵠ": "img/inv-pilot-helmet-click.png",
		"ᐃΔΔᐃΔᐃΔⵠⵠ": "img/day-sandworm0.png",
		"ⲆⵠⵠᐃⵠΔᐃ": "img/day-sandworm1.png",
		"ⲆᐃᐃⵠⲆΔⲆ": "img/day-sandworm2.png",
		"ⵠΔᐃᐃΔⲆⲆⲆⲆ": "img/night-sandworm0.png",
		"ⵠΔⲆΔΔᐃΔ": "img/night-sandworm1.png",
		"ᐃΔⲆΔⲆᐃⵠ": "img/night-sandworm2.png",
		"ⲆⵠΔⵠΔⲆⲆ": "img/hurt-sandworm0.png",
		"ᐃⵠΔⲆᐃᐃᐃ": "img/hurt-sandworm1.png",
		"ᐃⲆⵠⲆⵠⵠⵠ": "img/hurt-sandworm2.png",
		"ΔᐃⵠΔᐃ": "img/inv-vulture-feather-click.png",
		"ⲆᐃⵠⵠⲆⵠᐃ": "img/day-emerald0.png",
		"ⲆⲆⲆⵠⲆⵠⵠ": "img/night-emerald0.png",
		"ⲆΔⲆⵠΔⵠⲆ": "img/day-emerald1.png",
		"ⵠⲆΔⲆΔⲆΔ": "img/night-emerald1.png",
		"ⵠΔⵠᐃΔⵠΔ": "img/day-emerald2.png",
		"ⵠⵠⲆⵠⲆⲆΔ": "img/night-emerald2.png",
		"ⲆⵠΔΔᐃ": "img/inv-emerald-click.png",
		"ⲆᐃⲆᐃⵠⵠⲆ": "img/inv-sworm-juice-out.png",
		"ᐃΔⲆΔᐃᐃΔ": "img/inv-sworm-juice-in.png",
		"ⵠⵠⲆΔⲆΔⲆ": "img/inv-sworm-juice-click.png",
		"ΔⲆᐃⵠⵠⵠΔ": "img/day-point-machine.png",
		"ΔⵠΔⲆΔᐃΔ": "img/night-point-machine.png",
		"ⵠⵠᐃᐃΔᐃⵠ": "img/day-point-machine-hole.png",
		"ᐃⲆᐃⵠⵠΔⲆ": "img/night-point-machine-hole.png",
		"ⵠⲆⲆⲆᐃⵠᐃ": "img/day-point-machine-ground.png",
		"ᐃⲆⵠⲆⵠᐃᐃ": "img/night-point-machine-ground.png",
		"ⲆⲆΔⲆΔᐃΔ": "img/day-point-machine-rotate.png",
		"ΔⵠⵠⲆⵠⲆⲆ": "img/night-point-machine-rotate.png",
		"ⵠΔⵠⲆⲆⵠⵠ": "img/inv-point-machine-out.png",
		"ΔⲆⵠΔⲆⵠΔ": "img/inv-point-machine-in.png",
		"ⲆᐃΔⲆᐃΔΔ": "img/inv-point-machine-click.png",
		"ᐃᐃᐃᐃⲆᐃⵠ": "img/day-extractor-machine0-stone.png",
		"ΔⲆΔⵠⲆⵠᐃ": "img/night-extractor-machine0-stone.png",
		"ⲆΔⲆⲆΔᐃⲆ": "img/day-extractor-machine-stone.png",
		"ΔΔⲆᐃᐃⵠᐃ": "img/night-extractor-machine-stone.png",
		"ᐃᐃⵠⲆΔᐃᐃ": "img/inv-extractor-machine-stone-out.png",
		"ΔΔᐃΔⲆᐃⲆ": "img/inv-extractor-machine-stone-in.png",
		"ᐃΔΔⲆΔⲆΔ": "img/inv-extractor-machine-stone-click.png",
		"ᐃΔⵠᐃΔⲆᐃ": "img/day-extractor-machine0-gold.png",
		"ⵠᐃⵠᐃⲆⲆᐃ": "img/night-extractor-machine0-gold.png",
		"ΔⲆᐃΔΔΔᐃ": "img/day-extractor-machine-gold.png",
		"ⵠᐃⲆᐃⲆΔⲆ": "img/night-extractor-machine-gold.png",
		"ⲆⲆᐃᐃⵠⲆᐃ": "img/inv-extractor-machine-gold-out.png",
		"ΔⲆⵠⲆⵠᐃⵠ": "img/inv-extractor-machine-gold-in.png",
		"ΔᐃΔΔΔΔΔ": "img/inv-extractor-machine-gold-click.png",
		"ⵠᐃⲆᐃΔⵠᐃ": "img/day-extractor-machine0-diamond.png",
		"ⵠⵠⵠΔΔΔᐃ": "img/night-extractor-machine0-diamond.png",
		"ΔΔⲆᐃⲆⲆᐃ": "img/day-extractor-machine-diamond.png",
		"ΔⲆᐃⲆⵠⵠⲆ": "img/night-extractor-machine-diamond.png",
		"ⲆⲆⵠⵠⵠΔⵠ": "img/inv-extractor-machine-diamond-out.png",
		"ΔΔⲆΔᐃⲆⲆ": "img/inv-extractor-machine-diamond-in.png",
		"ΔΔⲆⵠⲆⲆⲆ": "img/inv-extractor-machine-diamond-click.png",
		"ᐃΔⲆⲆⵠⵠΔ": "img/day-extractor-machine0-amethyst.png",
		"ᐃᐃⲆΔᐃⲆⲆ": "img/night-extractor-machine0-amethyst.png",
		"ⵠᐃᐃᐃⲆᐃⲆ": "img/day-extractor-machine-amethyst.png",
		"ⵠΔΔⲆΔᐃⲆ": "img/night-extractor-machine-amethyst.png",
		"ᐃⵠΔΔᐃⲆΔ": "img/inv-extractor-machine-amethyst-out.png",
		"ⲆᐃᐃⵠᐃⲆΔ": "img/inv-extractor-machine-amethyst-in.png",
		"ΔⲆⲆⲆᐃΔⲆ": "img/inv-extractor-machine-amethyst-click.png",
		"ⲆⲆⵠⵠⲆᐃΔ": "img/day-extractor-machine0-reidite.png",
		"ⵠⵠᐃⵠᐃΔΔ": "img/night-extractor-machine0-reidite.png",
		"ΔⲆᐃΔⵠⲆᐃ": "img/day-extractor-machine-reidite.png",
		"ᐃᐃⵠⲆΔΔΔ": "img/night-extractor-machine-reidite.png",
		"ⲆᐃΔΔᐃⵠⲆ": "img/inv-extractor-machine-reidite-out.png",
		"ⲆⲆᐃⵠᐃᐃⲆ": "img/inv-extractor-machine-reidite-in.png",
		"ᐃᐃⲆΔΔⲆⵠ": "img/inv-extractor-machine-reidite-click.png",
		"ⵠΔⵠᐃⵠᐃᐃ": "img/extractor-cases.png",
		"ᐃΔΔⲆⵠΔⵠ": "img/day-golden-hen.png",
		"ⲆᐃⲆⵠᐃⲆΔ": "img/night-golden-hen.png",
		"ᐃΔⵠⵠⲆΔⲆ": "img/day-golden-chicken.png",
		"ΔΔΔΔᐃⵠⲆ": "img/night-golden-chicken.png",
		"ΔᐃᐃΔⵠⵠⲆ": "img/hurt-golden-hen.png",
		"ⲆᐃⵠⵠᐃⲆᐃ": "img/hurt-golden-chicken.png",
		"ⲆΔᐃⵠΔᐃΔ": "img/logo-interface.png",
		"ⵠⵠⲆΔᐃΔⵠ": "img/forest-mode-hover.png",
		"ⲆΔᐃⲆΔᐃΔ": "img/normal-mode-hover.png",
		"ΔᐃᐃᐃΔᐃⲆ": "img/vampire-mode-hover.png",
		"ΔⵠⲆⵠΔⲆΔ": "img/zombie-mode-hover.png",
		"ΔⲆΔⵠⵠⲆᐃ": "img/community-mode-hover2.png",
		"ΔΔΔΔⵠⲆⲆ": "img/experimental-mode-hover.png",
		"ⵠΔᐃᐃᐃΔᐃ": "img/zombie-mode-out.png",
		"ⲆⵠⵠΔΔⲆᐃ": "img/zombie-mode-in.png",
		"ᐃⲆᐃᐃᐃᐃⵠ": "img/zombie-mode-click.png",
		"ΔⵠⲆⲆⲆΔΔ": "img/vampire-mode-out.png",
		"Ⲇⵠⵠⵠⵠᐃⵠ": "img/vampire-mode-in.png",
		"ᐃᐃᐃⵠΔⵠⲆ": "img/vampire-mode-click.png",
		"ΔⵠᐃⲆᐃⵠΔ": "img/normal-mode-out.png",
		"ᐃⵠⵠΔᐃⲆⲆ": "img/normal-mode-in.png",
		"ⵠᐃΔⲆΔⵠⲆ": "img/normal-mode-click.png",
		"ⵠᐃⲆⲆⵠᐃΔ": "img/forest-mode-out.png",
		"ⵠΔΔⲆΔᐃⵠ": "img/forest-mode-in.png",
		"ᐃΔᐃΔⲆᐃⵠ": "img/forest-mode-click.png",
		"ΔΔΔⲆⵠᐃⲆ": "img/community-mode-out.png",
		"ⲆΔΔⵠᐃΔΔ": "img/community-mode-in.png",
		"ⲆᐃⲆΔΔᐃᐃ": "img/community-mode-click.png",
		"ⲆᐃᐃⲆΔⲆⲆ": "img/experimental-modes-out.png",
		"ᐃᐃⵠⲆᐃⲆᐃ": "img/experimental-modes-in.png",
		"ΔⲆᐃⵠⲆⵠⲆ": "img/experimental-modes-click.png",
		"ⲆⲆⲆᐃⲆΔⵠ": "img/youtube-button-out.png",
		"ΔⲆᐃᐃⲆⲆᐃ": "img/youtube-button-in.png",
		"ΔⲆⵠΔΔⵠᐃ": "img/youtube-button-click.png",
		"ΔⲆⲆⵠⲆΔΔ": "img/wiki-button-out.png",
		"ⵠⵠⵠⲆⲆⵠΔ": "img/wiki-button-in.png",
		"ⲆⲆⲆⲆⲆΔⵠ": "img/wiki-button-click.png",
		"ᐃⵠᐃⵠᐃᐃⲆ": "img/twitter-button-out.png",
		"ⵠⵠⵠᐃⵠᐃⲆ": "img/twitter-button-in.png",
		"ⲆⲆⲆⲆⵠΔⲆ": "img/twitter-button-click.png",
		"ᐃΔΔⵠΔⵠⲆ": "img/facebook-button-out.png",
		"ⲆⲆᐃⲆΔⵠⵠ": "img/facebook-button-in.png",
		"ᐃⵠᐃΔⲆΔⵠ": "img/facebook-button-click.png",
		"ⵠⵠⵠⲆᐃᐃᐃ": "img/reddit-button-out.png",
		"ᐃᐃⵠⲆⲆᐃⲆ": "img/reddit-button-in.png",
		"ⵠᐃⵠⲆᐃⲆⵠ": "img/reddit-button-click.png",
		"ᐃⲆⵠⵠⲆⲆᐃ": "img/discord-button-out.png",
		"ⵠΔᐃΔⲆᐃΔ": "img/discord-button-in.png",
		"ᐃⲆΔⵠᐃⵠⵠ": "img/discord-button-click.png",
		"ΔᐃᐃΔⲆᐃΔ": "img/merch-button-out.png",
		"ᐃⵠΔᐃⵠⵠΔ": "img/merch-button-in.png",
		"ⲆΔΔᐃΔᐃⵠ": "img/merch-button-click.png",
		"ⵠᐃⵠᐃᐃΔⲆⵠᐃ": "img/terminal-button-out.png",
		"ⵠᐃⲆⵠⵠⵠᐃⵠⲆ": "img/terminal-button-in.png",
		"ⲆⵠⵠΔᐃΔᐃΔⲆ": "img/terminal-button-click.png",
		"ⵠⵠΔᐃᐃⲆⵠ": "img/restart-out.png",
		"ⲆⲆⵠΔⵠΔᐃ": "img/restart-in.png",
		"ᐃΔΔⲆⲆᐃᐃ": "img/restart-click.png",
		"ⵠⵠᐃⲆᐃΔⵠ": "img/guide-out.png",
		"ⵠΔΔⲆΔΔⵠ": "img/guide-in.png",
		"ⵠΔΔⵠᐃⲆΔ": "img/guide-click.png",
		"ⵠᐃⵠΔⵠΔⵠ": "img/copy-paste-out.png",
		"ⲆⵠⲆᐃⲆⵠΔ": "img/copy-paste-in.png",
		"ᐃΔΔⵠⵠⲆⲆ": "img/copy-paste-click.png",
		"ⲆᐃΔΔⲆⵠⲆ": "img/link-buttons-bg.png",
		"ⲆᐃⵠⲆⲆΔΔ": "img/changelog-box2.png",
		"ᐃᐃⵠΔᐃⲆΔ": "img/changelog_31.png",
		"Δᐃⵠⵠⵠⵠᐃ": "img/banner-taming.png",
		"ⲆΔᐃΔΔᐃᐃ": "img/profile-button-out.png",
		"ⲆᐃΔᐃⲆⲆⵠ": "img/profile-button-in.png",
		"ⵠΔΔᐃΔᐃΔ": "img/profile-button-click.png",
		"ᐃᐃⵠΔᐃΔⵠ": "img/login-button-out.png",
		"ⲆⲆᐃⲆᐃⵠⲆ": "img/login-button-in.png",
		"ⲆⵠⲆᐃⵠΔᐃ": "img/login-button-click.png",
		"ᐃⵠᐃΔᐃⲆᐃ": "img/login-google-out.png",
		"ⵠⵠⲆΔⵠⲆΔ": "img/login-google-in.png",
		"ⲆⵠⵠⵠΔⲆᐃ": "img/login-google-click.png",
		"ⲆΔⲆⲆᐃᐃΔ": "img/login-facebook-out.png",
		"ⵠᐃⲆᐃⵠΔⵠ": "img/login-facebook-in.png",
		"ⵠⲆⲆⲆⵠᐃΔ": "img/login-facebook-click.png",
		"ᐃⵠΔⲆᐃⵠΔ": "img/account-box.png",
		"ᐃⵠᐃⲆᐃⵠΔⵠⲆ": "img/account-under-maintenance.png",
		"ⲆᐃᐃⲆᐃᐃᐃ": "img/close-button-account-out.png",
		"ᐃᐃᐃⲆᐃⲆⵠ": "img/close-button-account-in.png",
		"ᐃⵠΔΔⵠⲆⵠ": "img/close-button-account-click.png",
		"ΔⲆⲆⵠΔᐃΔ": "img/play-button-out.png",
		"ⲆⲆΔᐃⲆⲆΔ": "img/play-button-in.png",
		"ᐃⵠΔⲆⲆΔⵠ": "img/play-button-click.png",
		"ⵠⵠⵠⵠⲆᐃⵠΔᐃ": "img/app-store-badge.png",
		"ⲆⲆΔⲆⵠΔΔΔΔ": "img/play-store-badge.png",
		"ΔⲆΔⲆⵠⲆᐃΔΔ": "img/mobile-boxad.png",
		"ⲆⵠⲆΔᐃᐃⲆ": "img/modify-name-out.png",
		"ΔⵠΔΔⵠᐃⲆ": "img/modify-name-in.png",
		"ⵠᐃⵠΔᐃΔⵠ": "img/modify-name-click.png",
		"ᐃΔⲆⲆΔᐃⲆ": "img/copy-id-button-out.png",
		"ⲆᐃⲆΔⵠⵠᐃ": "img/copy-id-button-hover.png",
		"ⲆⵠᐃΔᐃΔⲆ": "img/copy-id-button-active.png",
		"ΔᐃⵠΔΔⵠⵠ": "img/yes-button-out.png",
		"ΔⵠⲆⵠΔⲆⵠ": "img/yes-button-in.png",
		"ⵠⵠⵠΔΔⲆⲆ": "img/yes-button-click.png",
		"ΔΔⲆΔⵠᐃⵠ": "img/yes-300-button-out.png",
		"ⵠⵠⲆᐃⵠⲆⵠ": "img/yes-300-button-in.png",
		"ⲆᐃΔΔΔⲆⲆ": "img/yes-300-button-click.png",
		"ΔΔⲆⲆΔᐃⲆ": "img/no-button-out.png",
		"ᐃⵠⲆΔΔΔⲆ": "img/no-button-in.png",
		"ᐃᐃⲆᐃⵠⵠⵠ": "img/no-button-click.png",
		"ΔᐃⵠᐃⵠΔⵠ": "img/no-thanks-button-out.png",
		"ⵠᐃΔⲆᐃᐃΔ": "img/no-thanks-button-in.png",
		"ⵠΔⵠⵠᐃΔΔ": "img/no-thanks-button-click.png",
		"ΔᐃⵠⵠⵠΔⲆ": "img/shop-button-out.png",
		"ⲆᐃᐃΔΔΔⵠ": "img/shop-button-in.png",
		"ᐃΔᐃΔⲆⲆΔ": "img/shop-button-click.png",
		"ⲆᐃⵠⵠⲆΔᐃ": "img/logout-out.png",
		"ᐃⵠᐃⵠᐃᐃΔ": "img/logout-in.png",
		"ⲆΔᐃⲆⵠⲆᐃ": "img/logout-click.png",
		"ⲆᐃΔᐃⲆΔΔ": "img/terms-button-out.png",
		"ⲆΔᐃⵠⵠΔᐃ": "img/terms-button-in.png",
		"ⲆⲆⵠΔᐃΔⲆ": "img/terms-button-click.png",
		"ΔΔᐃΔⵠⲆⲆ": "img/tutorial-icon.png",
		"ᐃᐃᐃΔΔΔⵠ": "img/skins-icon.png",
		"ⲆΔΔᐃⵠⵠⵠ": "img/shop-icon.png",
		"ΔⲆᐃⲆⵠΔⵠⲆᐃ": "img/paint-icon.png",
		"ⲆⲆΔΔⲆᐃΔ": "img/leaderboard-icon.png",
		"ⲆⲆᐃⵠᐃⵠⵠ": "img/start-icon.png",
		"ⵠⲆⲆᐃΔⲆᐃ": "img/profile-icon.png",
		"ⲆΔΔⲆΔΔᐃ": "img/server-access-icon2.png",
		"ᐃΔΔᐃⵠΔΔ": "img/button-homepage-bg-out.png",
		"ΔⲆⲆⵠⲆᐃⲆ": "img/button-homepage-bg-in.png",
		"ⵠΔΔΔⵠⵠᐃ": "img/button-homepage-bg-click.png",
		"ΔΔⲆᐃⲆᐃΔ": "img/button-bottom-homepage-bg-out.png",
		"ᐃⲆΔΔᐃΔᐃ": "img/button-bottom-homepage-bg-in.png",
		"ⲆⲆᐃⲆⲆΔⲆ": "img/button-bottom-homepage-bg-click.png",
		"ΔⵠⵠⲆΔⵠΔ": "img/lvl-player.png",
		"ᐃⲆⲆΔⵠΔⲆ": "img/avatar-player.png",
		"ᐃΔᐃⲆᐃⵠⵠ": "img/avatar-player1.png",
		"ⲆⲆᐃΔⵠᐃᐃ": "img/avatar-player2.png",
		"ΔⲆΔⲆΔΔⲆ": "img/avatar-player3.png",
		"ᐃᐃⵠⵠΔΔᐃ": "img/avatar-player4.png",
		"ⵠΔΔΔⲆᐃⵠ": "img/avatar-player5.png",
		"ᐃᐃΔᐃⵠᐃᐃ": "img/avatar-player6.png",
		"ⲆⵠΔΔⲆΔᐃ": "img/avatar-player7.png",
		"ⵠΔⵠⲆΔⲆᐃ": "img/avatar-player8.png",
		"ⲆⵠⵠⲆΔⵠⵠ": "img/avatar-player9.png",
		"ⵠᐃⵠᐃⲆⵠᐃ": "img/avatar-player10.png",
		"ⲆⲆⵠⲆΔⵠΔ": "img/avatar-player11.png",
		"ΔᐃⲆᐃⵠⲆⵠ": "img/avatar-player12.png",
		"ⵠⵠΔΔⲆⵠⲆ": "img/avatar-player13.png",
		"ΔᐃⵠⵠⲆⵠᐃ": ⵠ[560],
		"ΔⵠᐃⵠΔᐃⵠ": ⵠ[560],
		"ⲆⵠⲆΔΔⵠⵠ": ⵠ[560],
		"ΔᐃⵠΔⵠΔᐃ": ⵠ[560],
		"ᐃΔΔⵠΔᐃⲆᐃΔ": "img/golden-bread.png",
		"ᐃΔⵠΔΔᐃΔ": "img/buy-bread-out.png",
		"ΔΔⲆⵠᐃᐃⲆ": "img/buy-bread-in.png",
		"ⵠⵠᐃΔΔⲆⲆ": "img/buy-bread-click.png",
		"ΔᐃⵠⵠⵠⲆᐃ": "img/gauge.png",
		"ᐃⲆⵠⲆⲆⵠⲆⲆⲆ": "img/season-4-out.png",
		"ⲆⵠⵠᐃΔⵠⲆⵠᐃ": "img/season-4-in.png",
		"ⵠᐃⵠᐃⲆⲆⲆⵠⲆ": "img/season-4-click.png",
		"ⵠᐃⲆᐃⵠᐃⵠΔᐃ": "img/season4-box.png",
		"ΔⵠᐃⵠⲆⵠᐃⵠⵠ": "img/season-5-out.png",
		"ⲆΔᐃⲆᐃⲆⵠⵠᐃ": "img/season-5-in.png",
		"ᐃΔⲆⵠΔᐃⲆΔⵠ": "img/season-5-click.png",
		"ᐃⵠΔⲆΔⵠΔᐃΔ": "img/season5-box.png",
		"ΔΔΔΔΔΔΔ": "img/season-6-out.png",
		"ᐃⵠΔΔⲆᐃⵠ": "img/season-6-in.png",
		"ⵠΔⲆⵠⲆᐃᐃ": "img/season-6-click.png",
		"ⲆⲆᐃΔΔⵠⵠ": "img/season6-box.png",
		"ΔⲆⵠⲆⲆᐃⲆ": "img/profile3-box.png",
		"ⵠⵠΔⲆΔΔⲆ": "img/skins-box.png",
		"ᐃΔⵠΔᐃᐃΔ": "img/shop-box.png",
		"ⵠᐃⲆⲆᐃᐃⵠⲆⵠ": "img/private-server-box.png",
		"ΔⲆⲆᐃᐃⲆⵠ": "img/location-box.png",
		"ᐃΔΔΔᐃⲆᐃ": "img/server-duration-box.png",
		"ⲆⲆⵠⵠⲆⲆΔ": "img/tutorial-box.png",
		"ᐃΔⵠⵠⲆΔⵠ": "img/leaderboard2-box.png",
		"ⲆⲆΔⵠⵠᐃⵠ": "img/buy-breads-box.png",
		"ᐃⲆᐃᐃΔⵠΔ": "img/bag-box.png",
		"ⵠⵠΔⲆᐃΔⵠ": "img/deadbox-box.png",
		"ΔⵠᐃΔᐃⲆΔ": "img/book-box.png",
		"ᐃⵠⵠΔⲆⵠΔ": "img/accessories-box.png",
		"ⵠⲆΔⲆᐃᐃⲆ": "img/customskin-box.png",
		"ΔⵠⵠΔᐃΔⵠ": "img/bag-lasts.png",
		"ΔᐃΔⵠᐃⵠᐃ": "img/server-lasts.png",
		"ᐃⵠⲆⵠᐃΔΔ": "img/server-access-box3.png",
		"ⲆΔⵠⲆΔᐃⵠ": "img/lootbox-box.png",
		"ⵠΔⲆⲆⲆⵠⵠ": "img/change-nickname0.png",
		"ΔⲆⵠᐃΔᐃⲆ": "img/change-nickname1.png",
		"ΔΔⵠⲆⲆᐃᐃ": "img/cheating-box.png",
		"ⵠᐃⵠⵠᐃᐃⵠⵠⵠ": "img/daily-quest-box.png",
		"ⵠⵠⲆΔΔⵠⲆⲆᐃ": "img/daily-5-bread.png",
		"ⲆⵠᐃΔⵠᐃⲆⲆΔ": "img/daily-10-bread.png",
		"ᐃⵠⵠᐃⲆⲆⲆⵠⲆ": "img/daily-valid.png",
		"ⲆⲆΔᐃⲆⵠⵠ": "img/normal-profile-out.png",
		"ᐃΔᐃⵠⵠΔᐃ": "img/normal-profile-in.png",
		"ⲆΔΔᐃΔⵠᐃ": "img/normal-profile-click.png",
		"ⵠⵠⲆⲆⵠΔⲆ": "img/forest-profile-out.png",
		"ⵠⵠⵠᐃⲆⵠⲆ": "img/forest-profile-in.png",
		"ⵠᐃⲆΔᐃΔΔ": "img/forest-profile-click.png",
		"ⲆΔⵠⵠⵠΔᐃ": "img/zombie-profile-out.png",
		"ⵠᐃⲆⲆᐃᐃᐃ": "img/zombie-profile-in.png",
		"ᐃⲆΔΔⲆⵠⲆ": "img/zombie-profile-click.png",
		"ᐃΔᐃᐃᐃⵠⲆ": "img/vampire-profile-out.png",
		"ⲆᐃⵠⲆⲆⲆⲆ": "img/vampire-profile-in.png",
		"ΔᐃⵠⲆⵠⲆⲆ": "img/vampire-profile-click.png",
		"ⲆⲆⲆᐃΔⵠᐃ": "img/total-profile-out.png",
		"ⲆⵠᐃⵠΔΔΔ": "img/total-profile-in.png",
		"ⵠᐃⵠᐃⵠⵠᐃ": "img/total-profile-click.png",
		"ⲆⵠⵠᐃⲆⲆⵠ": "img/season1-out.png",
		"ΔᐃΔᐃⲆⲆⲆ": "img/season1-in.png",
		"ΔΔΔΔⵠΔᐃ": "img/season1-click.png",
		"ⵠᐃⲆⲆⵠⲆΔ": "img/season2-out.png",
		"ΔᐃΔᐃᐃⵠⲆ": "img/season2-in.png",
		"ⵠⵠΔⲆⵠⲆⲆ": "img/season2-click.png",
		"ⲆΔⵠᐃᐃᐃᐃ": "img/season3-out.png",
		"ΔⲆᐃⵠΔᐃᐃ": "img/season3-in.png",
		"ᐃⵠΔᐃΔΔⵠ": "img/season3-click.png",
		"ⲆΔⲆᐃⵠⲆᐃ": "img/season4-out.png",
		"ΔᐃᐃΔΔΔⲆ": "img/season4-in.png",
		"ⲆⲆⵠΔⲆⲆⲆ": "img/season4-click.png",
		"ᐃΔⲆᐃⲆⵠᐃ": "img/season5-out.png",
		"ⵠⲆⲆΔΔⲆΔ": "img/season5-in.png",
		"ⲆΔⲆΔⲆⵠⲆ": "img/season5-click.png",
		"ᐃΔᐃⵠⲆᐃⲆ": "img/season6-out.png",
		"ᐃΔⵠⲆᐃΔΔ": "img/season6-in.png",
		"ΔΔᐃⲆΔⲆⵠ": "img/season6-click.png",
		"ⲆΔᐃΔΔΔⲆ": "img/locked-skin-alert.png",
		"ⲆⲆⲆΔⵠⵠⲆ": "img/locked-custom-alert.png",
		"ⵠⵠⵠᐃⵠᐃΔ": "img/bg-red-locked.png",
		"ᐃⵠⵠᐃΔⲆᐃ": "img/skin-button-out.png",
		"ΔⵠΔᐃⵠⲆⵠ": "img/skin-button-in.png",
		"ᐃΔᐃⵠⲆⲆⲆ": "img/skin-button-click.png",
		"ⵠΔᐃᐃΔᐃΔ": "img/accessory-button-out.png",
		"ΔⲆΔⲆΔⵠⲆ": "img/accessory-button-in.png",
		"ⵠᐃⵠΔᐃⵠᐃ": "img/accessory-button-click.png",
		"ΔⵠⲆΔⵠᐃⵠ": "img/bag-button-out.png",
		"ⵠᐃΔᐃⲆΔΔ": "img/bag-button-in.png",
		"ⵠΔⵠΔᐃᐃⲆ": "img/bag-button-click.png",
		"ⲆΔⲆⲆⲆΔⲆ": "img/book-button-out.png",
		"ⵠⲆΔΔΔΔⵠ": "img/book-button-in.png",
		"ΔⵠⲆΔⲆΔΔ": "img/book-button-click.png",
		"Ⲇⵠᐃᐃᐃⵠᐃ": "img/deadbox-button-out.png",
		"ⲆᐃΔⵠⲆⲆΔ": "img/deadbox-button-in.png",
		"ΔⵠⵠⵠᐃⲆᐃ": "img/deadbox-button-click.png",
		"ᐃᐃΔᐃⲆⵠᐃ": "img/loot-button-out.png",
		"ᐃᐃᐃΔⵠΔᐃ": "img/loot-button-in.png",
		"ᐃᐃⵠᐃᐃⲆᐃ": "img/loot-button-click.png",
		"ⲆⵠⲆᐃᐃⵠᐃ": "img/free-item-out.png",
		"ΔΔⲆᐃᐃΔⵠ": "img/free-item-in.png",
		"ⵠΔⵠⵠⲆΔΔ": "img/free-item-click.png",
		"ⲆΔⲆΔ": "img/wood-item-out.png",
		"ⵠⲆⲆⲆ": "img/wood-item-in.png",
		"ⵠⲆᐃⲆ": "img/wood-item-click.png",
		"ΔⲆΔⲆΔᐃΔ": "img/stone-item.png",
		"ⵠⵠⲆΔⲆⲆⲆ": "img/stone-item-in.png",
		"ΔⵠⲆᐃⲆᐃᐃ": "img/stone-item-click.png",
		"ᐃΔⲆⵠⵠⵠΔ": "img/gold-item.png",
		"ⲆⵠⲆⲆᐃΔᐃ": "img/gold-item-in.png",
		"ΔΔⵠᐃⲆⲆᐃ": "img/gold-item-click.png",
		"ᐃⵠⲆⵠⵠᐃⲆ": "img/diamond-item.png",
		"ΔⵠᐃᐃⲆΔΔ": "img/diamond-item-in.png",
		"ⲆⲆᐃΔⲆⵠΔ": "img/diamond-item-click.png",
		"ⲆᐃⲆⲆΔⵠᐃ": "img/amethyst-item.png",
		"ⲆⵠⲆΔⵠᐃⵠ": "img/amethyst-item-in.png",
		"ⲆΔⵠⵠⲆⵠΔ": "img/amethyst-item-click.png",
		"ⲆⵠᐃⲆΔⵠᐃ": "img/reidite-item.png",
		"ᐃⵠΔⵠᐃΔⲆ": "img/reidite-item-in.png",
		"ⲆⲆΔΔⵠⵠⵠ": "img/reidite-item-click.png",
		"ᐃΔⵠᐃΔⲆΔ": "img/special-item-out.png",
		"ⲆᐃⵠⵠΔΔΔ": "img/special-item-in.png",
		"ᐃⵠᐃⲆΔΔⵠ": "img/special-item-click.png",
		"ⲆᐃᐃⲆΔᐃᐃ": "img/level-item-out.png",
		"ⲆⵠᐃⲆⲆΔⵠ": "img/level-item-in.png",
		"ᐃⲆᐃᐃⲆⵠᐃ": "img/level-item-click.png",
		"ⲆⵠΔⵠΔᐃᐃ": "img/skin-previous-out.png",
		"ⵠᐃⵠⲆΔⵠⵠ": "img/skin-previous-in.png",
		"ⲆⲆᐃΔᐃΔⲆ": "img/skin-previous-click.png",
		"ⵠΔⲆᐃΔⵠⵠ": "img/skin-next-out.png",
		"ΔᐃΔⵠⵠᐃⵠ": "img/skin-next-in.png",
		"ΔⵠⵠΔᐃⵠⲆ": "img/skin-next-click.png",
		"ⲆᐃᐃΔΔ": "img/back-button-out.png",
		"ⵠᐃⵠᐃⵠ": "img/back-button-in.png",
		"ΔⵠΔᐃΔ": "img/back-button-click.png",
		"ⲆΔΔΔⲆⲆⵠ": "img/get-more-button-out.png",
		"ᐃⲆΔⵠᐃᐃΔ": "img/get-more-button-in.png",
		"ⵠᐃⵠΔΔᐃᐃ": "img/get-more-button-click.png",
		"ΔⲆᐃᐃᐃⲆⵠ": "img/currency1-out.png",
		"ⵠΔΔⵠΔᐃⵠ": "img/currency1-in.png",
		"ⵠⵠΔⲆᐃΔΔ": "img/currency1-click.png",
		"ⲆⵠΔᐃΔⲆⲆ": "img/currency2-out.png",
		"ⲆΔⲆΔⵠᐃᐃ": "img/currency2-in.png",
		"ⵠⲆⲆᐃᐃⵠⲆ": "img/currency2-click.png",
		"ⵠΔᐃⵠᐃⲆⲆ": "img/currency3-out.png",
		"ⲆⲆΔᐃⲆΔⵠ": "img/currency3-in.png",
		"ΔⲆᐃⵠⲆᐃΔ": "img/currency3-click.png",
		"ⵠΔΔⵠⲆⵠᐃ": "img/currency4-out.png",
		"ΔⵠΔⲆΔΔᐃ": "img/currency4-in.png",
		"ⵠⵠⵠⲆᐃⲆⵠ": "img/currency4-click.png",
		"ΔᐃΔⲆΔᐃⲆ": "img/currency5-out.png",
		"ᐃΔⲆⵠᐃᐃⲆ": "img/currency5-in.png",
		"ΔⲆⵠⵠⲆᐃⲆ": "img/currency5-click.png",
		"ⲆᐃⲆⵠⲆΔⲆ": "img/price1-out.png",
		"ᐃᐃΔⵠⵠⲆΔ": "img/price1-in.png",
		"ᐃⲆⵠⲆᐃᐃΔ": "img/price1-click.png",
		"ⵠⵠⵠΔⲆⵠᐃ": "img/price2-out.png",
		"ⲆΔⵠⲆⵠⵠᐃ": "img/price2-in.png",
		"ᐃΔΔΔΔⲆΔ": "img/price2-click.png",
		"ⵠⵠⲆᐃΔⵠΔ": "img/price3-out.png",
		"ⵠΔᐃΔⲆⵠⲆ": "img/price3-in.png",
		"ΔⲆᐃΔⵠᐃⵠ": "img/price3-click.png",
		"Δⵠⵠⵠᐃⵠᐃ": "img/price4-out.png",
		"ⵠⵠᐃⵠΔⵠⵠ": "img/price4-in.png",
		"ΔΔⲆᐃΔⵠΔ": "img/price4-click.png",
		"ᐃΔΔᐃᐃᐃᐃ": "img/price5-out.png",
		"ΔΔᐃΔⵠⵠⵠ": "img/price5-in.png",
		"ΔᐃᐃⲆⲆᐃᐃ": "img/price5-click.png",
		"ᐃⲆᐃⲆⲆᐃⵠΔⵠ": "img/buy-private-server-out.png",
		"ᐃⲆΔⲆΔΔΔⵠᐃ": "img/buy-private-server-in.png",
		"ⲆᐃᐃΔΔΔⲆᐃΔ": "img/buy-private-server-click.png",
		"ⲆᐃΔⵠⲆⵠⵠ": "img/atlanta-button-out.png",
		"ΔΔΔⵠᐃⲆΔ": "img/atlanta-button-in.png",
		"ᐃⲆΔΔⵠⲆᐃ": "img/atlanta-button-click.png",
		"ΔᐃⵠⲆⲆΔΔ": "img/los-angeles-button-out.png",
		"ⵠᐃᐃⲆΔΔⵠ": "img/los-angeles-button-in.png",
		"ᐃᐃⲆΔᐃΔΔ": "img/los-angeles-button-click.png",
		"ᐃᐃⵠᐃⵠΔⵠ": "img/sydney-button-out.png",
		"ΔⵠⲆΔᐃⵠⲆ": "img/sydney-button-in.png",
		"ΔᐃᐃⵠΔΔΔ": "img/sydney-button-click.png",
		"ⲆⲆΔⲆⲆΔⲆ": "img/frankfurt-button-out.png",
		"ⲆⲆⲆⵠΔᐃⲆ": "img/frankfurt-button-in.png",
		"ΔΔⲆΔⲆⲆᐃ": "img/frankfurt-button-click.png",
		"ΔⵠⵠⲆᐃⲆΔ": "img/osaka-button-out.png",
		"ⵠᐃⵠⵠⵠᐃⲆ": "img/osaka-button-in.png",
		"ⵠⵠⲆΔᐃᐃΔ": "img/osaka-button-click.png",
		"ⵠᐃⲆⵠⵠᐃᐃΔⵠ": "img/yes-location-out.png",
		"ΔⵠⲆⵠᐃΔΔΔⲆ": "img/yes-location-in.png",
		"ⵠᐃΔΔⲆⵠⵠⵠⵠ": "img/yes-location-click.png",
		"ΔⵠΔᐃᐃⲆⲆ": "img/3days-button-out.png",
		"ΔⵠΔⵠᐃΔΔ": "img/3days-button-in.png",
		"ΔΔᐃⲆΔΔⵠ": "img/3days-button-click.png",
		"ᐃᐃⲆⵠⲆᐃⲆ": "img/7days-button-out.png",
		"ΔⲆΔΔᐃⲆᐃ": "img/7days-button-in.png",
		"ᐃᐃᐃⵠⲆⵠⵠ": "img/7days-button-click.png",
		"ΔⲆⲆⵠⲆⲆⲆ": "img/30days-button-out.png",
		"ⲆΔⵠΔᐃⵠᐃ": "img/30days-button-in.png",
		"ΔⲆⲆΔⵠⲆᐃ": "img/30days-button-click.png",
		"ⵠᐃΔΔΔᐃᐃ": "img/90days-button-out.png",
		"ᐃΔᐃⵠΔⵠⵠ": "img/90days-button-in.png",
		"ᐃΔᐃⵠⵠᐃᐃ": "img/90days-button-click.png",
		"ᐃⵠΔᐃⲆΔᐃ": "img/spin1.png",
		"ΔᐃᐃⵠⵠⲆᐃ": "img/spin2.png",
		"ⵠⲆᐃⵠⵠΔⵠ": "img/spin3.png",
		"ⵠΔΔⲆᐃᐃΔ": "img/spin4.png",
		"ⲆⲆᐃⵠΔᐃⵠ": "img/spin5.png",
		"ⵠᐃΔⲆΔᐃⲆ": "img/spin6.png",
		"ⵠⲆⵠΔΔΔⵠ": "img/arrow-spin.png",
		"ᐃⵠⵠⲆΔⵠΔ": "img/spin-button-1-out.png",
		"ΔΔᐃᐃⵠⲆⲆ": "img/spin-button-1-in.png",
		"ᐃΔⵠΔⵠⲆⲆ": "img/spin-button-1-click.png",
		"ᐃⵠᐃⲆⲆⲆⵠ": "img/spin-button-2-out.png",
		"ⵠⲆΔᐃᐃⵠⲆ": "img/spin-button-2-in.png",
		"ΔΔΔΔⲆᐃⵠ": "img/spin-button-2-click.png",
		"ᐃΔΔⵠⵠⵠⲆ": "img/spin-button-3-out.png",
		"ⲆΔΔΔᐃᐃᐃ": "img/spin-button-3-in.png",
		"ᐃΔⵠΔΔΔⲆ": "img/spin-button-3-click.png",
		"ⵠᐃᐃⲆⲆᐃⲆ": "img/spin-button-4-out.png",
		"ΔᐃΔⲆᐃⵠⵠ": "img/spin-button-4-in.png",
		"ⵠⲆⵠᐃΔⵠⲆ": "img/spin-button-4-click.png",
		"ᐃᐃᐃⲆᐃΔᐃ": "img/spin-button-5-out.png",
		"ⲆΔᐃΔⲆⲆⲆ": "img/spin-button-5-in.png",
		"ΔⲆᐃⲆⵠⵠⵠ": "img/spin-button-5-click.png",
		"ⵠΔⲆᐃⵠΔΔ": "img/spin-light.png",
		"Δᐃⵠᐃⵠᐃᐃ": "img/tuto-wiki-out.png",
		"ⲆⲆΔᐃⲆΔΔ": "img/tuto-wiki-in.png",
		"ᐃᐃⵠⵠᐃⵠᐃ": "img/tuto-wiki-click.png",
		"ᐃⵠᐃⲆᐃᐃΔ": "img/tuto-previous-out.png",
		"ⲆΔᐃⵠᐃⲆⲆ": "img/tuto-previous-in.png",
		"ᐃΔⲆⲆⲆΔΔ": "img/tuto-previous-click.png",
		"ⲆΔᐃⵠΔᐃᐃ": "img/tuto-next-out.png",
		"ᐃⵠΔΔᐃⵠΔ": "img/tuto-next-in.png",
		"ᐃΔⲆⵠΔΔⵠ": "img/tuto-next-click.png",
		"ⲆᐃⲆΔⵠⵠⵠ": "img/time-leaderboard-out.png",
		"ᐃⵠⵠᐃΔᐃᐃ": "img/time-leaderboard-in.png",
		"ΔⲆⵠᐃΔΔᐃ": "img/time-leaderboard-click.png",
		"ΔΔᐃⲆⵠⵠⲆ": "img/score-leaderboard-out.png",
		"ⵠΔΔᐃⲆᐃΔ": "img/score-leaderboard-in.png",
		"ΔΔΔⵠΔΔᐃ": "img/score-leaderboard-click.png",
		"ΔᐃΔⵠⲆⲆᐃ": "img/lvl-leaderboard-out.png",
		"ΔⲆⵠᐃⲆΔᐃ": "img/lvl-leaderboard-in.png",
		"ⲆᐃⲆⵠⵠΔᐃ": "img/lvl-leaderboard-click.png",
		"ⲆⲆⵠΔⲆᐃⲆ": "img/kill-leaderboard-out.png",
		"ΔⲆᐃΔⲆΔⲆ": "img/kill-leaderboard-in.png",
		"ᐃⵠΔⲆⲆᐃᐃ": "img/kill-leaderboard-click.png",
		"ΔⵠΔⲆΔⵠΔ": "img/all-leaderboard-out.png",
		"ᐃᐃᐃΔⲆⲆᐃ": "img/all-leaderboard-in.png",
		"ⵠⲆΔⲆⵠΔⵠ": "img/all-leaderboard-click.png",
		"ᐃᐃⲆⲆⵠⲆΔ": "img/today-leaderboard-out.png",
		"ⲆⲆⲆⵠⵠⵠⲆ": "img/today-leaderboard-in.png",
		"ᐃΔⵠⵠⵠⲆΔ": "img/today-leaderboard-click.png",
		"ⲆΔⵠⵠᐃⵠΔ": "img/week-leaderboard-out.png",
		"ΔᐃⵠⲆⲆΔⵠ": "img/week-leaderboard-in.png",
		"ᐃⵠᐃᐃΔΔⲆ": "img/week-leaderboard-click.png",
		"ⲆⲆⲆᐃⵠᐃⲆ": "img/season1-out.png",
		"ⲆⲆΔᐃⵠⵠⵠ": "img/season1-in.png",
		"ⲆⵠΔΔᐃⵠΔ": "img/season1-click.png",
		"ⲆΔⵠΔᐃⲆᐃ": "img/season2-out.png",
		"ⵠᐃᐃᐃⲆⵠⲆ": "img/season2-in.png",
		"ⵠⵠΔᐃΔΔΔ": "img/season2-click.png",
		"ΔᐃⲆΔⵠⵠⵠ": "img/season3-out.png",
		"ΔⲆⲆⵠᐃᐃΔ": "img/season3-in.png",
		"ⵠᐃᐃⵠⲆⲆΔ": "img/season3-click.png",
		"ΔᐃⲆⲆΔⵠᐃ": "img/season4-out.png",
		"ⵠⵠⲆΔⲆΔⵠ": "img/season4-in.png",
		"ᐃⲆᐃⲆᐃⲆᐃ": "img/season4-click.png",
		"ⵠΔⲆⲆΔΔⲆ": "img/season5-out.png",
		"ᐃⲆⲆᐃᐃᐃⲆ": "img/season5-in.png",
		"ⵠΔᐃⲆΔΔⲆ": "img/season5-click.png",
		"ΔⵠⵠΔᐃΔⲆ": "img/season6-out.png",
		"ⲆΔⵠᐃⵠⲆⵠ": "img/season6-in.png",
		"ᐃⲆⵠⵠᐃⵠΔ": "img/season6-click.png",
		"ⲆΔⵠⲆᐃⵠⲆ": "img/total-lead-out.png",
		"ᐃⲆΔᐃⵠⵠᐃ": "img/total-lead-in.png",
		"ᐃⲆⲆΔⲆΔⵠ": "img/total-lead-click.png",
		"ⵠᐃⲆⵠⵠΔᐃ": "img/normal-lead-out.png",
		"ⵠᐃᐃⲆⵠΔⵠ": "img/normal-lead-in.png",
		"ΔⵠⵠᐃⵠᐃΔ": "img/normal-lead-click.png",
		"ᐃᐃⲆⵠⲆⵠᐃ": "img/forest-lead-out.png",
		"ᐃⵠⲆⲆⲆΔᐃ": "img/forest-lead-in.png",
		"ᐃⵠⵠΔⵠⲆᐃ": "img/forest-lead-click.png",
		"ᐃᐃⲆⲆΔⲆΔ": "img/vampire-lead-out.png",
		"ⲆⵠᐃΔᐃᐃᐃ": "img/vampire-lead-in.png",
		"ⲆᐃᐃᐃᐃⲆⵠ": "img/vampire-lead-click.png",
		"ᐃᐃΔⵠⲆⵠⲆ": "img/zombie-lead-out.png",
		"ΔΔΔⵠᐃⲆᐃ": "img/zombie-lead-in.png",
		"ⵠΔⲆΔᐃΔΔ": "img/zombie-lead-click.png",
		"ᐃᐃⲆᐃᐃⲆΔ": "img/day-level5.png",
		"ᐃⲆⲆⲆⵠⵠΔ": "img/night-level5.png",
		"ⲆΔⲆⵠⲆⲆⵠ": "img/day-level10.png",
		"ᐃΔᐃΔΔⵠⵠ": "img/night-level10.png",
		"ᐃⵠΔᐃΔⵠΔ": "img/day-level15.png",
		"ᐃΔⲆᐃⲆᐃⲆ": "img/night-level15.png",
		"ⲆΔⲆⵠⲆⵠⲆ": "img/day-level20.png",
		"ⲆΔⵠΔⲆⲆⲆ": "img/night-level20.png",
		"ΔΔⵠᐃΔⲆᐃ": "img/day-level25.png",
		"ᐃⲆᐃᐃⲆΔΔ": "img/night-level25.png",
		"ⲆᐃⵠᐃⲆᐃΔ": "img/day-level30.png",
		"ⲆⲆⲆΔⵠΔΔ": "img/night-level30.png",
		"ΔΔᐃⲆⲆᐃⵠ": "img/day-level35.png",
		"ΔᐃⵠⲆⲆⵠᐃ": "img/night-level35.png",
		"ⵠΔⵠⵠⵠⲆⲆ": "img/day-level40.png",
		"ⲆⵠⵠⵠⵠⲆᐃ": "img/night-level40.png",
		"ⲆⵠᐃⲆⲆⵠⵠ": "img/day-level45.png",
		"ⵠᐃⲆΔⲆⲆΔ": "img/night-level45.png",
		"ᐃⲆΔΔⲆΔᐃ": "img/day-level50.png",
		"ᐃⲆᐃⵠᐃᐃΔ": "img/night-level50.png",
		"ⵠΔⲆⲆⵠΔᐃ": "img/day-level55.png",
		"ΔΔΔᐃΔⲆⵠ": "img/night-level55.png",
		"ᐃⵠΔⲆΔⲆⵠ": "img/day-level60.png",
		"ⵠⵠⲆᐃⲆⲆᐃ": "img/night-level60.png",
		"ⲆΔⲆᐃⲆᐃᐃ": "img/day-skin-devast0.png",
		"ⵠΔᐃⲆᐃΔⲆ": "img/night-skin-devast0.png",
		"ΔΔⵠⵠΔⲆⲆ": "img/day-hand-devaster.png",
		"ᐃΔⵠᐃΔⲆⵠ": "img/night-hand-devaster.png",
		"ⲆᐃᐃⵠᐃⵠⲆ": "img/day-skin-star0.png",
		"ⲆⵠⵠᐃⲆΔΔ": "img/night-skin-star0.png",
		"ⵠⵠΔΔⵠⵠⲆ": "img/day-hand-star0.png",
		"ᐃⲆⵠΔⲆΔΔ": "img/night-hand-star0.png",
		"ΔΔⲆᐃⵠⲆⵠ": "img/day-vampire.png",
		"ⲆᐃΔᐃᐃⵠΔ": "img/night-vampire.png",
		"ᐃΔⲆⵠⲆⲆⲆ": "img/day-hand-vampire.png",
		"ᐃΔⲆⵠΔᐃΔ": "img/night-hand-vampire.png",
		"ΔⲆΔΔΔΔᐃ": "img/day-zombie.png",
		"ⵠᐃⵠⲆⵠⵠΔ": "img/night-zombie.png",
		"ᐃⲆⲆΔΔⵠΔ": "img/day-hand-zombie.png",
		"ΔⵠⵠⲆⲆⲆᐃ": "img/night-hand-zombie.png",
		"ᐃΔᐃⵠᐃᐃΔ": "img/day-skin113.png",
		"ΔⵠⲆⵠΔΔⲆ": "img/night-skin113.png",
		"ⲆΔᐃⵠⵠΔⵠ": "img/day-hand-skin113.png",
		"ⵠⲆᐃⲆⲆᐃⵠ": "img/night-hand-skin113.png",
		"ⵠΔⵠⲆΔᐃᐃ": "img/day-skin0.png",
		"ⲆⲆᐃΔΔⲆΔ": "img/night-skin0.png",
		"ΔᐃⲆΔⵠⵠΔ": "img/day-skin1.png",
		"ΔᐃⵠⲆᐃΔᐃ": "img/night-skin1.png",
		"ⲆⲆⵠᐃⲆⵠΔ": "img/day-skin2.png",
		"ⵠⵠΔⵠΔᐃᐃ": "img/night-skin2.png",
		"ᐃᐃᐃⲆᐃⲆᐃ": "img/day-skin3.png",
		"ⲆⲆⲆⲆⲆⲆⲆ": "img/night-skin3.png",
		"ⲆⵠΔΔΔⵠΔ": "img/day-skin4.png",
		"ⵠⲆᐃᐃⲆΔⲆ": "img/night-skin4.png",
		"ᐃᐃᐃⲆⵠⵠᐃ": "img/day-skin5.png",
		"ⵠΔⵠⲆⲆⵠΔ": "img/night-skin5.png",
		"ΔΔⵠᐃⵠᐃΔ": "img/day-skin6.png",
		"ᐃⲆⵠΔⵠⲆⲆ": "img/night-skin6.png",
		"ᐃⲆⲆᐃⵠΔⵠ": "img/day-skin7.png",
		"ᐃⲆⵠⲆᐃⵠⲆ": "img/night-skin7.png",
		"ΔΔᐃΔᐃⵠⲆ": "img/day-skin8.png",
		"ᐃΔᐃΔΔⲆΔ": "img/night-skin8.png",
		"ᐃᐃⲆᐃⲆΔᐃ": "img/day-skin9.png",
		"ΔⲆᐃΔΔⵠΔ": "img/night-skin9.png",
		"ⵠΔⲆΔᐃⵠΔ": "img/day-skin10.png",
		"ⵠᐃΔⵠⲆᐃⵠ": "img/night-skin10.png",
		"ᐃⵠᐃΔⲆⲆᐃ": "img/day-skin11.png",
		"ΔⲆⲆᐃΔᐃᐃ": "img/night-skin11.png",
		"ᐃΔᐃᐃᐃⵠᐃ": "img/day-skin12.png",
		"ⵠⵠᐃᐃⲆⲆⵠ": "img/night-skin12.png",
		"ΔⵠⵠΔᐃᐃⲆ": "img/day-skin13.png",
		"ᐃΔΔᐃΔⵠΔ": "img/night-skin13.png",
		"ⵠⲆΔΔⵠⵠⲆ": "img/day-skin14.png",
		"ᐃⲆⲆⵠᐃⲆⵠ": "img/night-skin14.png",
		"ⵠΔⵠᐃΔⲆⲆ": "img/day-skin15.png",
		"ⲆΔⵠⲆⲆᐃⵠ": "img/night-skin15.png",
		"ⲆΔΔΔΔΔⲆ": "img/day-skin16.png",
		"ⲆΔᐃⲆⵠⲆⵠ": "img/night-skin16.png",
		"ⲆⲆⲆᐃΔᐃⵠ": "img/day-skin17.png",
		"ⲆᐃᐃⲆΔΔᐃ": "img/night-skin17.png",
		"ᐃᐃΔᐃⵠⲆⵠ": "img/day-skin18.png",
		"ΔⲆᐃᐃΔΔΔ": "img/night-skin18.png",
		"ⵠⲆⲆᐃᐃⲆⵠ": "img/day-skin19.png",
		"ΔⵠⲆΔⵠᐃΔ": "img/night-skin19.png",
		"ΔΔᐃᐃⲆⵠᐃ": "img/day-skin20.png",
		"ΔⵠⲆᐃΔⵠᐃ": "img/night-skin20.png",
		"ⲆΔⲆⲆⲆⲆⵠ": "img/day-skin21.png",
		"ⲆΔⵠⵠⵠⵠᐃ": "img/night-skin21.png",
		"ⵠᐃⵠΔⵠᐃΔ": "img/day-skin22.png",
		"ΔΔᐃⵠⵠⲆΔ": "img/night-skin22.png",
		"ᐃⵠᐃΔⲆⵠΔ": "img/day-skin23.png",
		"ΔⲆⲆⵠΔᐃⲆ": "img/night-skin23.png",
		"ⲆⵠᐃⵠⵠⲆΔ": "img/day-skin24.png",
		"ⲆⲆⲆⵠΔΔΔ": "img/night-skin24.png",
		"ⵠⵠΔⲆⵠΔᐃ": "img/day-skin25.png",
		"ⲆⲆⲆΔᐃⵠⵠ": "img/night-skin25.png",
		"ᐃⲆⲆⲆΔⲆⲆ": "img/day-skin26.png",
		"ΔⲆᐃΔᐃⵠΔ": "img/night-skin26.png",
		"ⵠⵠⵠᐃⲆᐃⲆ": "img/day-skin27.png",
		"ⵠⵠⵠⲆⲆⲆⲆ": "img/night-skin27.png",
		"ⵠᐃΔⵠⲆΔΔ": "img/day-skin28.png",
		"ⵠⵠⲆⵠᐃᐃΔ": "img/night-skin28.png",
		"ΔⲆᐃⵠⵠΔⲆ": "img/day-skin29.png",
		"ΔⵠΔⲆᐃΔΔ": "img/night-skin29.png",
		"ⲆᐃⵠΔΔΔᐃ": "img/day-skin30.png",
		"ⵠⲆⲆᐃⲆᐃⲆ": "img/night-skin30.png",
		"ⵠⲆᐃⵠᐃΔΔ": "img/day-skin31.png",
		"ⵠᐃᐃᐃΔⵠⵠ": "img/night-skin31.png",
		"ᐃⵠⵠⵠΔᐃᐃ": "img/day-skin32.png",
		"ⵠᐃⵠⵠⲆⲆᐃ": "img/night-skin32.png",
		"ⵠᐃᐃΔᐃΔⵠ": "img/day-skin33.png",
		"ᐃΔΔⲆⲆⵠⲆ": "img/night-skin33.png",
		"ᐃΔⵠΔᐃΔⵠ": "img/day-skin34.png",
		"ΔᐃᐃΔⲆᐃⵠ": "img/night-skin34.png",
		"ΔⲆᐃⵠΔⲆⵠ": "img/day-skin35.png",
		"ⲆΔⵠⵠⵠᐃΔ": "img/night-skin35.png",
		"ⵠⲆΔᐃⲆᐃᐃ": "img/day-skin36.png",
		"ΔⵠⵠⵠᐃᐃⲆ": "img/night-skin36.png",
		"ⵠⲆᐃΔᐃΔᐃ": "img/day-skin37.png",
		"ⵠΔᐃΔΔΔⲆ": "img/night-skin37.png",
		"ΔΔΔΔᐃⲆΔ": "img/day-skin38.png",
		"ⵠΔⵠᐃᐃᐃΔ": "img/night-skin38.png",
		"ΔⲆⵠΔΔΔⵠ": "img/day-skin39.png",
		"ΔⲆΔᐃΔΔⲆ": "img/night-skin39.png",
		"ⲆᐃΔⵠⲆΔᐃ": "img/day-skin40.png",
		"ᐃᐃΔᐃⵠⵠⵠ": "img/night-skin40.png",
		"ⲆⲆⲆᐃⵠᐃᐃ": "img/day-skin41.png",
		"ᐃΔⵠᐃⲆⵠⵠ": "img/night-skin41.png",
		"ΔⵠᐃⵠΔᐃⲆ": "img/day-skin42.png",
		"ᐃⲆⲆⵠΔᐃᐃ": "img/night-skin42.png",
		"ⵠⲆⵠΔⵠⲆΔ": "img/day-skin43.png",
		"ⵠⵠⲆΔᐃΔⲆ": "img/night-skin43.png",
		"ᐃⲆᐃΔᐃᐃⵠ": "img/day-skin44.png",
		"ΔᐃⲆⵠΔⵠⵠ": "img/night-skin44.png",
		"ⲆΔΔⵠΔⵠΔ": "img/day-skin45.png",
		"ΔⲆⲆⲆⵠⵠⲆ": "img/night-skin45.png",
		"ⲆⵠⲆⵠΔᐃⲆ": "img/day-skin46.png",
		"ᐃⵠΔⵠᐃΔΔ": "img/night-skin46.png",
		"ⵠΔᐃᐃΔⲆᐃ": "img/day-skin47.png",
		"ΔᐃⲆⲆⲆᐃᐃ": "img/night-skin47.png",
		"ⲆⵠⵠⲆⲆⲆⵠ": "img/day-skin48.png",
		"ΔⵠΔⲆΔⵠᐃ": "img/night-skin48.png",
		"ⲆᐃⲆΔΔⵠΔ": "img/day-skin49.png",
		"ⲆⵠⵠⵠΔⲆⲆ": "img/night-skin49.png",
		"ⲆΔᐃⵠᐃΔⲆ": "img/day-skin50.png",
		"ᐃᐃΔᐃⲆⵠΔ": "img/night-skin50.png",
		"ΔᐃᐃᐃᐃⵠⲆ": "img/day-skin51.png",
		"ᐃΔᐃᐃⲆⲆΔ": "img/night-skin51.png",
		"ΔΔᐃⵠⵠΔⵠ": "img/day-skin52.png",
		"ⲆⲆΔΔⵠΔⵠ": "img/night-skin52.png",
		"ⲆΔᐃΔΔⲆΔ": "img/day-skin53.png",
		"ΔⵠᐃⲆⲆΔⲆ": "img/night-skin53.png",
		"ΔⲆⲆⲆᐃⲆⵠ": "img/day-skin54.png",
		"ⲆⵠΔⵠᐃⵠⵠ": "img/night-skin54.png",
		"ΔⲆⲆΔⵠᐃⲆ": "img/day-skin55.png",
		"ᐃᐃᐃⲆᐃΔⲆ": "img/night-skin55.png",
		"ⵠᐃⲆⲆⵠⵠⵠ": "img/day-skin56.png",
		"ᐃᐃⲆᐃΔΔⲆ": "img/night-skin56.png",
		"ⲆᐃⵠⲆΔΔⵠ": "img/day-skin57.png",
		"ᐃⲆⵠⲆΔΔⲆ": "img/night-skin57.png",
		"ΔΔⵠⲆᐃΔⲆ": "img/day-skin58.png",
		"ⲆⵠᐃⵠⲆΔⵠ": "img/night-skin58.png",
		"ᐃΔΔⵠᐃΔΔ": "img/day-skin59.png",
		"ⲆⵠΔᐃⵠⲆⲆ": "img/night-skin59.png",
		"ΔᐃⵠΔᐃᐃⲆ": "img/day-skin60.png",
		"ⲆΔⵠᐃⲆⲆⵠ": "img/night-skin60.png",
		"ΔΔⲆΔΔΔΔ": "img/day-skin61.png",
		"ⵠⲆⲆᐃⲆⲆΔ": "img/night-skin61.png",
		"ᐃΔⵠⲆⲆⲆΔ": "img/day-skin62.png",
		"ⲆᐃΔᐃⵠⵠΔ": "img/night-skin62.png",
		"ΔⵠᐃΔⲆⲆⵠ": "img/day-skin63.png",
		"ΔᐃⵠⲆΔⲆΔ": "img/night-skin63.png",
		"ᐃΔⲆⵠⲆⵠᐃ": "img/day-skin64.png",
		"ⲆΔᐃΔⵠᐃΔ": "img/night-skin64.png",
		"ᐃⲆⵠⵠⲆΔⵠ": "img/day-skin65.png",
		"ⵠⵠΔΔΔⲆⵠ": "img/night-skin65.png",
		"ᐃⵠᐃᐃⲆⵠⵠ": "img/day-skin66.png",
		"ΔᐃᐃⵠⵠⲆΔ": "img/night-skin66.png",
		"ⲆΔᐃΔᐃΔᐃ": "img/day-skin67.png",
		"ΔⵠⲆⵠΔΔⵠ": "img/night-skin67.png",
		"ΔⲆΔΔΔⲆⵠ": "img/day-skin68.png",
		"ⵠΔⵠⲆⵠΔⵠ": "img/night-skin68.png",
		"ᐃⲆᐃⵠΔᐃⲆ": "img/day-skin69.png",
		"ΔⵠⵠⲆᐃᐃⵠ": "img/night-skin69.png",
		"ⵠⲆΔⲆᐃⲆΔ": "img/day-skin70.png",
		"ⲆⲆΔΔⵠⲆⲆ": "img/night-skin70.png",
		"ΔⵠᐃᐃⵠⲆΔ": "img/day-skin71.png",
		"ⲆᐃΔⲆᐃᐃⲆ": "img/night-skin71.png",
		"ᐃⲆᐃⲆⵠΔⵠ": "img/day-skin72.png",
		"ⵠⵠΔⲆⲆⲆⵠ": "img/night-skin72.png",
		"ᐃⲆΔᐃᐃᐃᐃ": "img/day-skin73.png",
		"ΔⵠᐃΔΔᐃΔ": "img/night-skin73.png",
		"ⲆⲆΔⵠⵠΔⵠ": "img/day-skin74.png",
		"Δⵠⵠⵠⵠⵠᐃ": "img/night-skin74.png",
		"ᐃⵠⵠΔⲆΔⲆ": "img/day-skin75.png",
		"ΔⵠⲆᐃᐃᐃⲆ": "img/night-skin75.png",
		"ᐃᐃⵠⵠΔⲆⵠ": "img/day-skin76.png",
		"ⵠⲆⵠᐃᐃⲆⲆ": "img/night-skin76.png",
		"ⲆⲆⵠᐃⵠΔᐃ": "img/day-skin77.png",
		"ⵠᐃⵠⲆΔⵠᐃ": "img/night-skin77.png",
		"ΔᐃΔΔᐃΔⲆ": "img/day-skin78.png",
		"ⵠᐃⲆⲆⲆⲆⵠ": "img/night-skin78.png",
		"ΔⲆⵠᐃᐃⲆⵠ": "img/day-skin79.png",
		"ΔΔᐃΔᐃΔᐃ": "img/night-skin79.png",
		"ΔⵠⵠᐃⲆᐃᐃ": "img/day-skin80.png",
		"ΔᐃΔᐃΔⵠⵠ": "img/night-skin80.png",
		"ⵠᐃΔᐃΔⲆᐃ": "img/day-skin81.png",
		"ΔᐃⵠⵠⲆᐃᐃ": "img/night-skin81.png",
		"ΔΔⵠΔΔᐃⵠ": "img/day-skin82.png",
		"ⵠΔⵠᐃⵠⲆⲆ": "img/night-skin82.png",
		"ⲆᐃⲆⵠΔⵠⲆ": "img/day-skin83.png",
		"ΔⵠᐃⵠⵠΔΔ": "img/night-skin83.png",
		"ⲆᐃⵠⵠΔⲆᐃ": "img/day-skin84.png",
		"ⵠⲆⵠⲆᐃⵠΔ": "img/night-skin84.png",
		"ⵠⵠΔΔᐃⲆⲆ": "img/day-skin85.png",
		"ᐃⲆⲆⵠⵠⲆᐃ": "img/night-skin85.png",
		"ΔⲆᐃᐃⵠΔᐃ": "img/day-skin86.png",
		"ⲆⲆᐃΔΔᐃⲆ": "img/night-skin86.png",
		"Ⲇᐃⵠⵠⵠᐃⵠ": "img/day-skin87.png",
		"ΔᐃⲆᐃⵠⲆΔ": "img/night-skin87.png",
		"ⵠΔΔⲆΔⲆᐃ": "img/day-skin88.png",
		"ᐃᐃⲆⲆⵠⲆⵠ": "img/night-skin88.png",
		"ᐃⵠΔⵠⲆⲆᐃ": "img/day-skin89.png",
		"ᐃΔΔⲆΔⵠⵠ": "img/night-skin89.png",
		"ᐃⵠⲆⲆΔᐃΔ": "img/day-skin90.png",
		"ⵠⲆⲆⲆⵠΔⵠ": "img/night-skin90.png",
		"ᐃⲆΔⵠⲆΔⲆ": "img/day-skin91.png",
		"ⲆᐃⲆᐃⲆΔᐃ": "img/night-skin91.png",
		"ᐃᐃΔᐃᐃΔⵠ": "img/day-skin92.png",
		"ⵠΔΔⵠⵠⲆⵠ": "img/night-skin92.png",
		"ΔⵠᐃⲆᐃᐃⲆ": "img/day-skin93.png",
		"ΔⵠⵠΔᐃᐃΔ": "img/night-skin93.png",
		"ᐃⲆⲆᐃⵠᐃⲆ": "img/day-skin94.png",
		"ⵠΔⵠⲆᐃⲆΔ": "img/night-skin94.png",
		"ᐃⵠΔᐃⲆΔⵠ": "img/day-skin95.png",
		"ᐃⵠΔΔⲆᐃΔ": "img/night-skin95.png",
		"ⵠⵠⲆⵠΔᐃⲆ": "img/day-skin96.png",
		"ΔΔⲆᐃᐃᐃⵠ": "img/night-skin96.png",
		"ΔⲆΔⵠᐃⵠⲆ": "img/day-skin97.png",
		"ⲆΔⵠᐃᐃⲆⵠ": "img/night-skin97.png",
		"ⲆΔⲆΔΔᐃΔ": "img/day-skin98.png",
		"ⵠⲆΔΔΔⵠᐃ": "img/night-skin98.png",
		"ᐃᐃᐃⲆΔᐃΔ": "img/day-skin99.png",
		"ⵠΔⲆⵠⵠⲆᐃ": "img/night-skin99.png",
		"ΔᐃΔᐃᐃΔⲆ": "img/day-skin100.png",
		"ᐃᐃΔⵠᐃⲆⵠ": "img/night-skin100.png",
		"ΔⲆⵠΔⵠΔⵠ": "img/day-skin101.png",
		"ⲆⵠΔⲆⲆⵠⲆ": "img/night-skin101.png",
		"ΔᐃⵠⵠⵠΔᐃ": "img/day-skin102.png",
		"ΔⲆΔⲆⲆⲆΔ": "img/night-skin102.png",
		"ⵠᐃᐃᐃᐃΔΔ": "img/day-skin103.png",
		"ⵠᐃΔᐃⲆⲆΔ": "img/night-skin103.png",
		"ⲆΔⵠⵠⵠΔⲆ": "img/day-skin104.png",
		"ΔⲆⲆᐃⵠⵠᐃ": "img/night-skin104.png",
		"ΔᐃⵠⵠⲆᐃΔ": "img/day-skin105.png",
		"ᐃⵠⵠⵠΔᐃⲆ": "img/night-skin105.png",
		"ΔᐃⵠΔᐃΔΔ": "img/day-skin106.png",
		"ΔⲆⲆᐃᐃΔᐃ": "img/night-skin106.png",
		"ΔⵠᐃΔᐃΔᐃ": "img/day-skin107.png",
		"ⲆᐃΔⲆⲆⵠΔ": "img/night-skin107.png",
		"ᐃΔΔⵠⲆⵠΔ": "img/day-skin108.png",
		"ⲆⲆⵠΔᐃᐃⲆ": "img/night-skin108.png",
		"ⵠⲆᐃΔΔⲆΔ": "img/day-skin109.png",
		"ⵠΔⵠΔΔⵠⵠ": "img/night-skin109.png",
		"ⲆᐃᐃᐃΔⵠⲆ": "img/day-skin110.png",
		"ⲆⲆⵠΔᐃⲆᐃ": "img/night-skin110.png",
		"ᐃⵠΔΔᐃᐃⲆ": "img/day-skin111.png",
		"ΔⵠᐃᐃΔᐃⲆ": "img/night-skin111.png",
		"ΔⲆⵠⲆΔⵠᐃ": "img/day-skin112.png",
		"ᐃⵠⲆᐃᐃᐃΔ": "img/night-skin112.png",
		"ᐃⲆⵠⲆΔΔⵠᐃⵠ": "img/day-skin113.png",
		"ΔΔΔΔΔⲆΔⵠΔ": "img/night-skin113.png",
		"Δᐃⵠⵠⵠᐃⵠ": "img/day-skin114.png",
		"ΔΔⲆⵠΔⵠⲆ": "img/night-skin114.png",
		"ΔᐃᐃⲆⲆⵠⲆ": "img/day-skin115.png",
		"ᐃΔⵠⵠⲆⵠⵠ": "img/night-skin115.png",
		"ⵠⵠΔⲆⲆⲆⲆ": "img/day-skin116.png",
		"ᐃⵠⵠᐃᐃⲆⵠ": "img/night-skin116.png",
		"ᐃᐃᐃⵠⵠⵠⵠ": "img/day-skin117.png",
		"ΔᐃⵠᐃΔⵠⵠ": "img/night-skin117.png",
		"ⵠΔΔΔⵠⵠⲆ": "img/day-skin118.png",
		"ᐃᐃΔᐃΔΔⲆ": "img/night-skin118.png",
		"ᐃΔⲆⲆⲆᐃⲆ": "img/day-skin119.png",
		"ᐃΔⵠⵠⲆΔᐃ": "img/night-skin119.png",
		"ΔⵠⵠΔΔⲆᐃ": "img/day-skin120.png",
		"ⵠᐃⵠⵠᐃⵠⲆ": "img/night-skin120.png",
		"ⲆⲆΔⲆᐃᐃᐃ": "img/day-skin121.png",
		"ᐃⲆᐃⲆᐃᐃᐃ": "img/night-skin121.png",
		"ⵠⲆⲆᐃᐃⵠⵠ": "img/day-skin122.png",
		"ⲆⵠⵠᐃᐃⵠⲆ": "img/night-skin122.png",
		"ⵠΔⵠⲆΔⵠⲆ": "img/day-skin123.png",
		"ΔᐃⵠⵠᐃΔⲆ": "img/night-skin123.png",
		"ⲆⵠΔⵠⵠⵠⲆ": "img/day-skin124.png",
		"ᐃᐃⲆⵠΔⲆᐃ": "img/night-skin124.png",
		"ΔⵠΔᐃΔΔⵠ": "img/day-skin125.png",
		"ⵠⵠᐃΔΔⲆΔ": "img/night-skin125.png",
		"ⵠΔⵠⲆᐃⵠⵠ": "img/day-skin126.png",
		"ⲆΔⲆⲆⵠΔᐃ": "img/night-skin126.png",
		"ᐃᐃΔⵠΔⲆΔ": "img/day-skin127.png",
		"ⲆⵠᐃⲆΔΔᐃ": "img/night-skin127.png",
		"ᐃⲆᐃⲆᐃⵠⵠ": "img/day-skin128.png",
		"ΔⲆⵠⵠᐃⵠⲆ": "img/night-skin128.png",
		"ⵠΔⲆⲆᐃᐃⲆ": "img/day-skin129.png",
		"ⵠⲆⲆⵠᐃⲆᐃ": "img/night-skin129.png",
		"ⲆⲆⵠᐃΔΔⵠ": "img/day-skin130-1.png",
		"ⲆⲆΔΔΔΔΔ": "img/night-skin130-1.png",
		"ΔⲆΔⵠᐃⲆⲆ": "img/day-skin131.png",
		"ⵠⲆⲆΔΔΔᐃ": "img/night-skin131.png",
		"ΔᐃᐃⵠΔⵠⵠ": "img/day-skin132.png",
		"ⲆΔⵠⲆⲆᐃⲆ": "img/night-skin132.png",
		"ⵠΔΔⲆᐃⲆⲆ": "img/day-skin133.png",
		"ᐃⵠᐃⲆⲆᐃΔ": "img/night-skin133.png",
		"ᐃⵠΔᐃΔⵠⵠ": "img/day-skin134.png",
		"ΔΔⵠⵠⲆᐃⵠ": "img/night-skin134.png",
		"ⲆᐃⵠᐃⲆΔᐃ": "img/day-skin135.png",
		"ⵠΔΔⲆⵠⲆⵠ": "img/night-skin135.png",
		"ⲆΔⵠᐃᐃΔⵠ": "img/day-skin136.png",
		"Δⵠⵠⵠᐃᐃᐃ": "img/night-skin136.png",
		"ΔⲆⵠⲆⲆᐃᐃ": "img/day-skin137.png",
		"ΔⵠⵠᐃΔⵠⵠ": "img/night-skin137.png",
		"ⵠⵠΔⲆΔᐃⲆ": "img/day-skin138.png",
		"ⲆⵠⲆⲆᐃᐃΔ": "img/night-skin138.png",
		"ⲆⵠⲆᐃⵠⵠⵠ": "img/day-skin139.png",
		"ⵠⲆᐃᐃⵠΔⵠ": "img/night-skin139.png",
		"ΔΔⵠᐃΔΔⲆ": "img/day-skin140.png",
		"ⵠⵠⲆᐃⲆᐃΔ": "img/night-skin140.png",
		"ⲆⲆᐃᐃⲆᐃⲆ": "img/day-skin141.png",
		"ⲆⲆᐃᐃⵠⵠΔ": "img/night-skin141.png",
		"ΔⲆⵠΔᐃΔᐃ": "img/day-skin142.png",
		"ᐃⲆᐃⵠᐃⵠΔ": "img/night-skin142.png",
		"ⲆⵠⲆᐃⲆⲆⵠ": "img/day-skin143.png",
		"ⵠΔᐃΔⲆΔⵠ": "img/night-skin143.png",
		"ⲆΔⲆΔⵠᐃⵠ": "img/day-skin144.png",
		"ΔⵠⵠᐃΔⵠⲆ": "img/night-skin144.png",
		"ⵠⲆΔΔⵠΔⵠ": "img/day-skin145.png",
		"ⲆⲆⵠᐃⵠΔⵠ": "img/night-skin145.png",
		"ⲆΔᐃᐃⵠᐃⲆ": "img/day-skin146.png",
		"ⵠΔⵠⲆΔⲆⲆ": "img/night-skin146.png",
		"ⵠΔᐃΔⵠⲆⵠ": "img/day-skin147.png",
		"ⲆⲆΔᐃⲆⲆⲆ": "img/night-skin147.png",
		"ᐃᐃᐃΔᐃΔΔ": "img/day-skin148.png",
		"ΔΔᐃᐃᐃⵠΔ": "img/night-skin148.png",
		"ⵠⵠᐃᐃᐃⵠⲆ": "img/day-skin149.png",
		"ᐃⲆᐃΔⵠᐃⵠ": "img/night-skin149.png",
		"ⵠΔⲆΔᐃΔⲆ": "img/day-skin150.png",
		"ΔⲆᐃⵠⲆΔᐃ": "img/night-skin150.png",
		"ⵠᐃΔΔΔⵠⵠ": "img/day-skin151.png",
		"ᐃΔⵠΔΔᐃᐃ": "img/night-skin151.png",
		"ⵠΔⵠᐃᐃⲆΔ": "img/day-skin152.png",
		"ⲆⲆⲆΔΔⵠⲆ": "img/night-skin152.png",
		"ᐃⵠᐃᐃΔᐃⲆ": "img/day-skin153.png",
		"ⵠᐃΔᐃΔΔᐃ": "img/night-skin153.png",
		"ᐃⲆⵠᐃⵠᐃΔ": "img/day-skin154.png",
		"ⲆᐃⵠΔᐃΔⵠ": "img/night-skin154.png",
		"ⲆⵠΔⲆᐃᐃΔ": "img/day-skin155.png",
		"ⲆᐃᐃᐃᐃⵠⲆ": "img/night-skin155.png",
		"ⵠΔᐃⵠΔᐃΔ": "img/day-skin156.png",
		"ⲆⵠⲆⲆΔⲆⵠ": "img/night-skin156.png",
		"ⵠΔΔⲆΔΔᐃ": "img/day-skin157.png",
		"ⵠⲆᐃⲆⵠΔⲆ": "img/night-skin157.png",
		"ᐃⲆΔⲆⲆⲆΔ": "img/day-skin158.png",
		"ΔⲆᐃΔΔⵠⲆ": "img/night-skin158.png",
		"ᐃⵠⵠᐃⲆᐃΔ": "img/day-skin159.png",
		"ⲆΔⲆΔΔΔΔ": "img/night-skin159.png",
		"ⵠᐃΔⵠᐃΔⲆ": "img/day-skin160.png",
		"ΔⲆⲆΔⲆᐃⵠ": "img/night-skin160.png",
		"ⵠΔⲆⲆⲆⲆΔ": "img/day-skin161.png",
		"ⲆⲆⵠⵠⵠᐃΔ": "img/night-skin161.png",
		"ⵠⵠⲆⵠⲆΔⲆ": "img/day-skin162.png",
		"ⵠⲆⵠΔᐃΔΔ": "img/night-skin162.png",
		"ⲆⵠⲆᐃᐃΔΔ": "img/day-skin163.png",
		"ⲆⵠΔΔᐃᐃΔ": "img/night-skin163.png",
		"ᐃᐃⵠⵠⵠΔᐃ": "img/day-skin164.png",
		"ⲆΔΔⵠᐃΔⲆ": "img/night-skin164.png",
		"ⲆΔΔᐃⲆᐃΔ": "img/day-skin165.png",
		"ⵠΔⲆΔᐃⲆⵠ": "img/night-skin165.png",
		"ⲆⵠᐃΔᐃᐃⲆ": "img/day-skin166.png",
		"ⵠⲆΔⵠⵠⲆⲆ": "img/night-skin166.png",
		"ΔᐃΔΔⲆΔⲆ": "img/day-skin167.png",
		"ⲆᐃⵠⲆᐃΔΔ": "img/night-skin167.png",
		"ᐃⵠᐃⲆΔⲆⵠ": "img/day-skin168.png",
		"ⵠⵠⵠΔⵠΔΔ": "img/night-skin168.png",
		"ΔⲆⲆⲆΔⵠΔ": "img/day-skin169.png",
		"ⲆⲆᐃⵠⵠᐃᐃ": "img/night-skin169.png",
		"ⲆⵠΔΔΔᐃΔ": "img/day-skin170.png",
		"ΔⲆΔΔⲆⲆᐃ": "img/night-skin170.png",
		"ᐃⵠⲆⵠⲆⲆΔ": "img/day-skin171.png",
		"ΔⵠⲆΔΔΔⵠ": "img/night-skin171.png",
		"ᐃⲆΔⲆΔᐃⲆ": "img/day-skin172.png",
		"ⲆΔΔᐃᐃΔᐃ": "img/night-skin172.png",
		"ΔⵠⲆΔᐃⲆΔ": "img/day-skin173.png",
		"ⵠⲆⵠΔᐃⵠⲆ": "img/night-skin173.png",
		"ΔⲆΔᐃⲆΔⲆ": "img/day-skin174.png",
		"ᐃΔᐃΔᐃⵠⵠ": "img/night-skin174.png",
		"ᐃⲆᐃⵠⵠⵠⵠ": "img/day-skin175.png",
		"ⵠᐃⵠⲆΔⵠⲆ": "img/night-skin175.png",
		"ᐃᐃᐃᐃⲆΔᐃ": "img/day-skin176.png",
		"ⵠⵠⲆⲆⲆΔΔ": "img/night-skin176.png",
		"ΔᐃΔᐃΔΔΔ": "img/day-skin177.png",
		"ⲆᐃⲆᐃᐃᐃᐃ": "img/night-skin177.png",
		"ᐃⲆΔᐃⲆᐃΔ": "img/day-skin178.png",
		"ᐃⵠⵠᐃΔⲆⵠ": "img/night-skin178.png",
		"ⲆΔΔΔⲆᐃᐃ": "img/day-skin179.png",
		"ⵠᐃⲆᐃⵠᐃⵠ": "img/night-skin179.png",
		"ⲆⲆΔΔΔᐃᐃ": "img/day-skin180.png",
		"ⵠⲆᐃΔⲆΔᐃ": "img/night-skin180.png",
		"ΔⵠⲆΔΔᐃᐃ": "img/day-skin181.png",
		"ⵠⵠΔⵠⵠⵠΔ": "img/night-skin181.png",
		"ⵠᐃΔⲆⲆΔⲆ": "img/day-skin182.png",
		"ⲆⵠᐃᐃΔᐃⲆ": "img/night-skin182.png",
		"ⵠⵠⲆΔⲆᐃⲆ": "img/day-skin183.png",
		"ⵠΔΔⲆⲆΔΔ": "img/night-skin183.png",
		"ⵠⵠⲆⵠᐃᐃⵠ": "img/day-skin184.png",
		"ΔⵠᐃΔᐃᐃⵠ": "img/night-skin184.png",
		"ΔⵠⲆΔᐃᐃᐃ": "img/day-skin185.png",
		"ᐃⵠᐃΔΔΔᐃ": "img/night-skin185.png",
		"ⲆⵠⵠⲆᐃⵠⲆ": "img/day-skin186.png",
		"ⲆⵠᐃⲆΔⲆᐃ": "img/night-skin186.png",
		"ΔΔΔᐃⲆΔⵠ": "img/day-skin187.png",
		"ⲆΔΔᐃⵠⲆⵠ": "img/night-skin187.png",
		"ᐃⲆⵠⵠᐃᐃᐃ": "img/day-skin188.png",
		"ΔⵠΔΔⵠⲆⲆ": "img/night-skin188.png",
		"ⵠⲆᐃⵠⲆᐃΔ": "img/day-skin189.png",
		"ⲆΔⲆⵠⵠΔⲆ": "img/night-skin189.png",
		"ⲆⲆᐃⵠΔⵠΔ": "img/day-skin190.png",
		"ᐃⲆΔⵠⲆⲆᐃ": "img/night-skin190.png",
		"ΔᐃⵠΔⲆᐃΔ": "img/day-skin191.png",
		"ⲆⲆⵠᐃⲆΔⵠ": "img/night-skin191.png",
		"ⲆᐃΔᐃⵠⵠⲆ": "img/day-skin192.png",
		"ΔΔⲆⵠΔⵠΔ": "img/night-skin192.png",
		"ⵠⲆᐃΔⲆⲆⵠ": "img/day-skin193.png",
		"Ⲇᐃⵠᐃⵠᐃⵠ": "img/night-skin193.png",
		"ᐃⵠⵠⵠⵠⵠⲆ": "img/day-skin194.png",
		"ΔᐃΔⲆⵠΔⲆ": "img/night-skin194.png",
		"ⵠⵠΔΔᐃᐃⲆ": "img/day-skin195.png",
		"ⲆⲆⲆⵠⲆⵠΔ": "img/night-skin195.png",
		"ⵠᐃΔᐃⵠᐃΔ": "img/day-skin196.png",
		"ⲆᐃⵠⲆΔⵠΔ": "img/night-skin196.png",
		"ᐃΔΔᐃⵠΔⵠ": "img/day-skin197.png",
		"ΔᐃⲆⵠᐃⵠⲆ": "img/night-skin197.png",
		"ᐃᐃΔΔΔᐃΔ": "img/day-skin198.png",
		"ΔⵠΔⵠⲆᐃⵠ": "img/night-skin198.png",
		"ⵠᐃⵠⲆᐃᐃⲆ": "img/day-skin199.png",
		"Ⲇⵠⵠⵠᐃᐃᐃ": "img/night-skin199.png",
		"ⲆΔⲆᐃΔᐃⲆ": "img/day-skin200.png",
		"ⵠⲆᐃΔⲆᐃⲆ": "img/night-skin200.png",
		"ᐃⲆᐃⲆⲆᐃⲆ": "img/day-skin201.png",
		"ᐃⲆΔΔⵠⵠⵠ": "img/night-skin201.png",
		"ⲆᐃᐃᐃⲆⵠⲆ": "img/day-skin202.png",
		"ⵠᐃΔⲆΔΔⲆ": "img/night-skin202.png",
		"ΔⲆᐃᐃⵠΔⲆ": "img/day-skin203.png",
		"ⵠᐃΔⲆⵠᐃΔ": "img/night-skin203.png",
		"ⲆⲆⲆⲆⵠⵠᐃ": "img/day-skin204.png",
		"ⵠⵠⲆⵠᐃⵠᐃ": "img/night-skin204.png",
		"ΔⲆⲆⲆΔⲆᐃ": "img/day-skin205.png",
		"ΔⵠΔᐃⵠᐃⵠ": "img/night-skin205.png",
		"ⲆⲆΔⵠⲆᐃⲆ": "img/day-skin206.png",
		"ᐃⵠᐃᐃⲆᐃΔ": "img/night-skin206.png",
		"ⲆᐃⲆⲆᐃⲆⲆ": "img/day-skin207.png",
		"ᐃΔⲆΔⲆᐃΔ": "img/night-skin207.png",
		"ⵠᐃⵠΔⲆᐃⲆ": "img/day-skin208.png",
		"ΔⲆⲆⲆᐃᐃⲆ": "img/night-skin208.png",
		"ⲆⲆⵠᐃᐃⲆᐃ": "img/day-skin209.png",
		"ᐃⲆⵠⲆⵠΔᐃ": "img/night-skin209.png",
		"ⵠΔΔⲆᐃⵠⲆ": "img/day-skin210.png",
		"ΔᐃᐃΔΔΔⵠ": "img/night-skin210.png",
		"ⵠⲆΔⵠⲆⵠΔ": "img/day-skin211.png",
		"ᐃⲆⵠⲆⵠⵠⲆ": "img/night-skin211.png",
		"ΔⵠᐃⵠⵠⲆᐃ": "img/day-skin212.png",
		"ⲆⵠⲆⲆΔⲆΔ": "img/night-skin212.png",
		"ⲆⲆΔΔⵠΔⲆ": "img/day-hand-skin0.png",
		"ⵠⲆⵠⵠΔⲆΔ": "img/night-hand-skin0.png",
		"ⲆΔⲆⲆΔΔᐃ": "img/day-hand-skin1.png",
		"ΔᐃΔΔⲆⲆⵠ": "img/night-hand-skin1.png",
		"ᐃᐃᐃΔⵠΔⵠ": "img/day-hand-skin2.png",
		"ᐃΔΔΔⲆᐃⲆ": "img/night-hand-skin2.png",
		"ᐃΔᐃΔⵠΔΔ": "img/day-hand-skin3.png",
		"ⲆᐃⲆⲆⲆΔΔ": "img/night-hand-skin3.png",
		"ᐃᐃⵠⵠΔⵠⵠ": "img/day-hand-skin4.png",
		"ΔΔᐃⵠᐃⲆᐃ": "img/night-hand-skin4.png",
		"ᐃⵠⲆΔⵠⲆᐃ": "img/day-hand-skin5.png",
		"ⵠᐃΔⲆⲆⲆᐃ": "img/night-hand-skin5.png",
		"ᐃΔⲆⲆΔΔⵠ": "img/day-hand-skin6.png",
		"ⲆⵠᐃⵠΔⵠᐃΔᐃ": "img/night-hand-skin6.png",
		"ᐃᐃᐃᐃᐃΔᐃ": "img/day-hand-skin6.png",
		"ΔᐃΔⵠᐃᐃⵠ": "img/night-hand-skin6.png",
		"ⵠⵠΔΔⵠⲆⵠ": "img/day-hand-skin8.png",
		"ᐃⵠΔΔⵠΔΔ": "img/night-hand-skin8.png",
		"ᐃΔⵠⵠᐃᐃᐃ": "img/day-hand-skin9.png",
		"ΔᐃΔΔⵠⲆⵠ": "img/night-hand-skin9.png",
		"ⵠΔΔᐃⵠΔⵠ": "img/day-hand-skin10.png",
		"ⲆⲆⲆⲆⵠⵠΔ": "img/night-hand-skin10.png",
		"ⲆΔΔⲆⲆᐃⵠ": "img/day-hand-skin11.png",
		"ⲆⲆⵠⲆᐃᐃⲆ": "img/night-hand-skin11.png",
		"ⵠⵠⵠᐃⲆⵠᐃ": "img/day-hand-skin12.png",
		"ⲆⵠⲆΔΔΔⲆ": "img/night-hand-skin12.png",
		"ⲆΔᐃⵠⲆⲆⲆ": "img/day-hand-skin13.png",
		"ⲆΔΔⲆᐃⲆΔ": "img/night-hand-skin13.png",
		"ᐃΔⵠⵠΔΔΔ": "img/day-hand-skin14.png",
		"ⲆⲆᐃΔᐃΔΔ": "img/night-hand-skin14.png",
		"ⲆⲆⲆᐃⵠᐃΔ": "img/day-hand-skin15.png",
		"ΔᐃⲆΔⲆⲆⲆ": "img/night-hand-skin15.png",
		"ⵠⵠΔᐃⲆⵠⵠ": "img/day-hand-skin16.png",
		"ᐃⵠᐃΔⵠⵠⲆ": "img/night-hand-skin16.png",
		"ΔⵠⲆⲆΔⵠΔ": "img/day-hand-skin17.png",
		"ΔᐃᐃᐃⲆⲆΔ": "img/night-hand-skin17.png",
		"ⲆⵠⲆⵠⵠⵠΔ": "img/day-hand-skin18.png",
		"ⲆⵠⵠⲆⵠΔⲆ": "img/night-hand-skin18.png",
		"ⵠⵠⲆⵠⵠᐃᐃ": "img/day-hand-skin19.png",
		"ΔⵠⵠⲆΔⲆⵠ": "img/night-hand-skin19.png",
		"ᐃⵠᐃΔᐃᐃⲆ": "img/day-hand-skin20.png",
		"ᐃⲆⲆΔⵠⲆⵠ": "img/night-hand-skin20.png",
		"ⲆΔᐃᐃᐃⵠᐃ": "img/day-hand-skin21.png",
		"ⵠⲆΔⲆⵠⲆᐃ": "img/night-hand-skin21.png",
		"ⲆⵠⵠᐃⲆⵠⵠ": "img/day-hand-skin22.png",
		"ᐃΔⵠᐃᐃⵠⲆ": "img/night-hand-skin22.png",
		"ⵠΔᐃⵠΔⵠⵠ": "img/day-hand-skin23.png",
		"ᐃΔⵠΔⵠᐃⵠ": "img/night-hand-skin23.png",
		"ⵠⵠⵠⵠⵠⵠⵠ": "img/day-hand-skin24.png",
		"ⵠⵠᐃⵠⵠᐃⵠ": "img/night-hand-skin24.png",
		"ⲆΔᐃᐃᐃⲆⵠ": "img/day-hand-skin25.png",
		"ᐃⲆⵠᐃⲆⲆΔ": "img/night-hand-skin25.png",
		"ΔⵠᐃΔΔⲆⲆ": "img/day-hand-skin26.png",
		"ᐃⵠⵠⵠⲆᐃΔ": "img/night-hand-skin26.png",
		"ⵠΔᐃᐃᐃᐃΔ": "img/day-hand-skin27.png",
		"ΔᐃΔⲆᐃⲆΔ": "img/night-hand-skin27.png",
		"ⵠᐃⵠΔᐃΔⲆ": "img/day-hand-skin28.png",
		"ⲆᐃᐃΔᐃᐃᐃ": "img/night-hand-skin28.png",
		"ΔⵠⲆⵠⵠᐃᐃ": "img/day-hand-skin29.png",
		"ⵠⵠⵠⵠΔᐃⵠ": "img/night-hand-skin29.png",
		"ⲆⲆΔΔΔΔᐃ": "img/day-hand-skin30.png",
		"ⵠⵠⵠⵠΔΔⵠ": "img/night-hand-skin30.png",
		"ΔⵠⲆᐃⵠΔΔ": "img/day-hand-skin31.png",
		"ⵠⲆⲆⵠΔⲆⲆ": "img/night-hand-skin31.png",
		"ⲆⵠⵠⲆᐃⲆΔ": "img/day-hand-skin32.png",
		"ΔᐃΔᐃᐃⲆΔ": "img/night-hand-skin32.png",
		"ⵠⲆⵠⲆᐃⵠᐃ": "img/day-hand-skin33.png",
		"ᐃᐃΔᐃᐃᐃⲆ": "img/night-hand-skin33.png",
		"ᐃΔⲆⲆᐃⵠΔ": "img/day-hand-skin34.png",
		"ᐃⵠᐃΔⲆⵠⲆ": "img/night-hand-skin34.png",
		"ΔᐃⲆᐃⲆⲆⵠ": "img/day-hand-skin35.png",
		"ΔΔⲆΔᐃⲆᐃ": "img/night-hand-skin35.png",
		"ᐃⲆⲆΔΔⲆⵠ": "img/day-hand-skin36.png",
		"ⵠⲆⲆⲆⵠᐃᐃ": "img/night-hand-skin36.png",
		"ᐃᐃⵠⵠⵠᐃᐃ": "img/day-hand-skin37.png",
		"ᐃⲆᐃⵠᐃᐃⲆ": "img/night-hand-skin37.png",
		"ΔⵠΔⵠⵠⲆⲆ": "img/day-hand-skin38.png",
		"ΔⵠⵠⲆⵠΔⵠ": "img/night-hand-skin38.png",
		"ΔⲆΔⵠᐃⵠΔ": "img/day-hand-skin39.png",
		"ΔΔᐃᐃΔⵠΔ": "img/night-hand-skin39.png",
		"ᐃⲆᐃⲆⲆⲆⵠ": "img/day-hand-skin40.png",
		"ⵠⵠᐃⵠΔΔⲆ": "img/night-hand-skin40.png",
		"ΔᐃⵠⵠᐃᐃⲆ": "img/day-hand-skin41.png",
		"ᐃⲆΔΔΔⵠΔ": "img/night-hand-skin41.png",
		"ΔᐃΔΔⵠΔΔ": "img/day-hand-skin42.png",
		"ᐃⵠᐃⵠⵠΔΔ": "img/night-hand-skin42.png",
		"ᐃᐃⲆⵠⵠᐃⵠ": "img/day-hand-skin43.png",
		"ⲆᐃⲆⵠⲆⵠⵠ": "img/night-hand-skin43.png",
		"ⵠΔⲆᐃᐃᐃⵠ": "img/day-hand-skin16.png",
		"ⲆᐃΔᐃⲆⵠᐃ": "img/night-hand-skin16.png",
		"ᐃᐃΔⵠᐃⲆΔ": "img/day-hand-skin45.png",
		"ⵠⵠᐃᐃⲆⵠΔ": "img/night-hand-skin45.png",
		"ⵠⵠᐃⵠⵠⵠᐃ": "img/day-hand-skin46.png",
		"ᐃⲆΔⲆᐃⵠⵠ": "img/night-hand-skin46.png",
		"ΔⵠΔΔⲆΔᐃ": "img/day-hand-skin47.png",
		"ᐃᐃⵠⲆΔⵠΔ": "img/night-hand-skin47.png",
		"ⵠΔⵠⲆⲆᐃᐃ": "img/day-hand-skin48.png",
		"ⲆᐃᐃⲆᐃⵠⵠ": "img/night-hand-skin48.png",
		"ⲆΔᐃⵠΔΔⲆ": "img/day-hand-skin49.png",
		"ⲆΔⵠᐃᐃⲆⲆ": "img/night-hand-skin49.png",
		"ᐃⵠᐃⵠⲆᐃΔ": "img/day-hand-skin49.png",
		"ᐃⲆⵠᐃΔⵠⵠ": "img/night-hand-skin49.png",
		"ⲆᐃΔᐃΔⲆⵠ": "img/day-hand-skin51.png",
		"ΔᐃᐃᐃΔⵠᐃ": "img/night-hand-skin51.png",
		"ⲆⲆᐃⲆᐃⵠⵠ": "img/day-hand-skin52.png",
		"ΔᐃⵠⲆⵠⵠΔ": "img/night-hand-skin52.png",
		"ⵠΔⲆΔᐃᐃᐃ": "img/day-hand-skin53.png",
		"ⲆⵠⲆᐃᐃΔᐃ": "img/night-hand-skin53.png",
		"ᐃⵠⲆⲆⲆΔⵠ": "img/day-hand-skin53.png",
		"ⵠⲆᐃⵠⲆΔⲆ": "img/night-hand-skin53.png",
		"ⵠᐃᐃΔΔⵠⲆ": "img/day-hand-skin55.png",
		"ⵠᐃⵠⲆᐃⲆⲆ": "img/night-hand-skin55.png",
		"ΔⵠⵠᐃⵠⲆᐃ": "img/day-hand-skin56.png",
		"ⲆᐃⵠⲆⵠᐃⵠ": "img/night-hand-skin56.png",
		"ᐃᐃⲆΔⲆⲆⵠ": "img/day-hand-skin57.png",
		"ⵠⵠⲆⲆⲆⲆᐃ": "img/night-hand-skin57.png",
		"ⵠΔⵠΔⵠⲆΔ": "img/day-hand-skin58.png",
		"ᐃⲆΔⵠΔⲆΔ": "img/night-hand-skin58.png",
		"ⵠᐃⲆᐃᐃᐃΔ": "img/day-hand-skin59.png",
		"ⵠⲆΔⵠⲆᐃΔ": "img/night-hand-skin59.png",
		"ⲆⵠⲆⲆΔᐃⵠ": "img/day-hand-skin61.png",
		"ⲆⲆⲆΔᐃⲆⲆ": "img/night-hand-skin61.png",
		"ⵠᐃⵠᐃΔⲆⵠ": "img/day-hand-skin61.png",
		"ⲆⲆⲆⵠⵠⵠΔ": "img/night-hand-skin61.png",
		"Δᐃᐃⵠᐃᐃⵠ": "img/day-hand-skin62.png",
		"ⵠⵠΔᐃᐃᐃΔ": "img/night-hand-skin62.png",
		"ⵠᐃⲆᐃᐃⲆⵠ": "img/day-hand-skin63.png",
		"ⵠⲆΔᐃᐃᐃᐃ": "img/night-hand-skin63.png",
		"ᐃΔⵠᐃΔⵠᐃ": "img/day-hand-skin64.png",
		"ⵠᐃᐃᐃⲆⲆᐃ": "img/night-hand-skin64.png",
		"ᐃᐃⲆᐃⲆⲆᐃ": "img/day-hand-skin65.png",
		"ᐃⵠΔⵠⲆᐃⵠ": "img/night-hand-skin65.png",
		"ⵠⵠᐃᐃΔΔⲆ": "img/day-hand-skin66.png",
		"ⵠⲆⵠⲆⲆⵠⵠ": "img/night-hand-skin66.png",
		"ΔᐃⵠⲆΔᐃΔ": "img/day-hand-skin67.png",
		"ΔΔⵠⵠᐃΔⵠ": "img/night-hand-skin67.png",
		"ΔⵠΔᐃⵠⵠⲆ": "img/day-hand-skin68.png",
		"ΔΔⲆΔΔⵠⵠ": "img/night-hand-skin68.png",
		"ⲆΔⵠᐃⲆΔⵠ": "img/day-hand-skin69.png",
		"ⲆⵠᐃⵠᐃⲆⲆ": "img/night-hand-skin69.png",
		"ⲆΔᐃⲆᐃⲆᐃ": "img/day-hand-skin70.png",
		"ΔⲆᐃⲆᐃΔᐃ": "img/night-hand-skin70.png",
		"ᐃⲆⲆᐃⲆⵠⵠ": "img/day-hand-skin71.png",
		"ᐃΔᐃᐃᐃⵠΔ": "img/night-hand-skin71.png",
		"ⵠΔΔᐃΔΔΔ": "img/day-hand-skin72.png",
		"ⵠΔⵠΔⵠⵠⵠ": "img/night-hand-skin72.png",
		"ⲆᐃⵠᐃΔΔⵠ": "img/day-hand-skin73.png",
		"ΔΔᐃⲆⲆᐃΔ": "img/night-hand-skin73.png",
		"ⵠⲆΔΔᐃΔⵠ": "img/day-hand-skin74.png",
		"ᐃΔⲆⵠⲆⲆΔ": "img/night-hand-skin74.png",
		"ⲆⲆᐃⲆΔᐃᐃ": "img/day-hand-skin75.png",
		"ⵠⲆⵠⵠⲆΔⲆ": "img/night-hand-skin75.png",
		"ᐃⵠⵠⲆⵠᐃΔ": "img/day-hand-skin76.png",
		"ⲆⵠᐃᐃΔⵠⵠ": "img/night-hand-skin76.png",
		"ⲆᐃⲆⲆⵠΔΔ": "img/day-hand-skin77.png",
		"ΔᐃⲆᐃⲆⵠᐃ": "img/night-hand-skin77.png",
		"ⵠⵠⵠΔⵠⵠᐃ": "img/day-hand-skin78.png",
		"ⲆᐃⲆⲆΔⲆᐃ": "img/night-hand-skin78.png",
		"ⵠΔΔΔᐃΔⵠ": "img/day-hand-skin79.png",
		"ᐃⵠᐃⵠᐃᐃᐃ": "img/night-hand-skin79.png",
		"ⵠᐃᐃΔᐃᐃⵠ": "img/day-hand-skin80.png",
		"ᐃⵠⵠΔⲆⲆᐃ": "img/night-hand-skin80.png",
		"ⵠΔᐃᐃΔΔⵠ": "img/day-hand-skin81.png",
		"ΔᐃⵠⵠΔΔⵠ": "img/night-hand-skin81.png",
		"ΔⲆⲆΔⵠⵠⲆ": "img/day-hand-skin82.png",
		"ⵠΔⲆᐃΔΔΔ": "img/night-hand-skin82.png",
		"ⲆᐃⲆⲆⵠⲆΔ": "img/day-hand-skin83.png",
		"ⲆᐃⲆᐃΔⵠⵠ": "img/night-hand-skin83.png",
		"ᐃᐃⵠⵠᐃΔΔ": "img/day-hand-skin84.png",
		"ⵠᐃᐃᐃⲆΔⵠ": "img/night-hand-skin84.png",
		"ⲆΔᐃⵠⵠⲆⲆ": "img/day-hand-skin85.png",
		"ΔᐃⵠⵠⲆⲆᐃ": "img/night-hand-skin85.png",
		"ᐃⵠⵠⲆⵠⲆΔ": "img/day-hand-skin86.png",
		"ⵠΔⲆᐃΔᐃⵠ": "img/night-hand-skin86.png",
		"ᐃᐃⲆⲆⵠⲆⲆ": "img/day-hand-skin87.png",
		"ⵠⲆᐃⵠΔΔᐃ": "img/night-hand-skin87.png",
		"ⲆⲆⵠⲆᐃⵠΔ": "img/day-hand-skin88.png",
		"ⵠᐃΔⲆⵠΔᐃ": "img/night-hand-skin88.png",
		"ⵠⵠᐃΔΔΔⵠ": "img/day-hand-skin89.png",
		"ΔⲆⲆⲆᐃΔΔ": "img/night-hand-skin89.png",
		"ΔᐃⵠᐃⵠΔΔ": "img/day-hand-skin90.png",
		"ᐃΔⲆⲆⵠⵠᐃ": "img/night-hand-skin90.png",
		"ⲆⲆⲆᐃΔΔⵠ": "img/day-hand-skin91.png",
		"ΔⲆⵠⵠⵠᐃⵠ": "img/night-hand-skin91.png",
		"ᐃΔⲆΔΔⲆΔ": "img/day-hand-skin92.png",
		"ⵠⵠⵠⵠⵠⲆⲆ": "img/night-hand-skin92.png",
		"ⲆΔΔᐃⲆⵠᐃ": "img/day-hand-skin93.png",
		"ᐃᐃⵠⵠⵠⲆᐃ": "img/night-hand-skin93.png",
		"ⲆΔⲆᐃⵠⲆⲆ": "img/day-hand-skin94.png",
		"ᐃⵠⵠⵠΔⵠⵠ": "img/night-hand-skin94.png",
		"ΔᐃⵠᐃᐃⲆⵠ": "img/day-hand-skin95.png",
		"ⵠΔⲆΔΔⲆⵠ": "img/night-hand-skin95.png",
		"ⲆⵠᐃⵠⲆⵠⵠ": "img/day-hand-skin96.png",
		"ᐃⵠⵠᐃⵠⲆⲆ": "img/night-hand-skin96.png",
		"ᐃⲆΔΔⲆⲆᐃ": "img/day-hand-skin97.png",
		"ᐃΔᐃⵠⲆᐃⵠ": "img/night-hand-skin97.png",
		"ⲆⲆᐃⵠⵠᐃΔ": "img/day-hand-skin98.png",
		"ⲆⵠΔΔⲆⵠᐃ": "img/night-hand-skin98.png",
		"ⵠᐃⵠⲆΔⲆᐃ": "img/day-hand-skin99.png",
		"ΔΔⲆᐃⵠⲆⲆ": "img/night-hand-skin99.png",
		"ⵠΔⵠΔᐃⲆⲆ": "img/day-hand-skin100.png",
		"ᐃᐃΔᐃⵠΔⵠ": "img/night-hand-skin100.png",
		"ᐃᐃⵠᐃᐃⵠΔ": "img/day-hand-skin101.png",
		"ⲆⲆⵠⵠⲆⲆⲆ": "img/night-hand-skin101.png",
		"ⲆΔΔᐃⲆⵠⲆ": "img/day-hand-skin102.png",
		"ᐃΔⲆᐃⲆΔⲆ": "img/night-hand-skin102.png",
		"ᐃⲆΔⵠⵠⲆᐃ": "img/day-hand-skin103.png",
		"ᐃⵠⵠⵠⵠⵠᐃ": "img/night-hand-skin103.png",
		"ⲆⵠᐃⲆᐃᐃΔ": "img/day-hand-skin104.png",
		"ΔⲆΔᐃΔⲆΔ": "img/night-hand-skin104.png",
		"ⲆᐃⲆⲆⵠΔⵠ": "img/day-hand-skin105.png",
		"ⵠΔⵠⲆⲆΔΔ": "img/night-hand-skin105.png",
		"ΔⲆⵠΔᐃⲆΔ": "img/day-hand-skin106.png",
		"ⲆᐃΔᐃⲆΔⲆ": "img/night-hand-skin106.png",
		"ⲆΔⵠⵠⲆΔⲆ": "img/day-hand-skin107.png",
		"ᐃⲆᐃΔᐃⵠⵠ": "img/night-hand-skin107.png",
		"ⵠⲆⵠᐃⲆⵠⲆ": "img/day-hand-skin108.png",
		"ⲆⵠⵠΔⵠΔᐃ": "img/night-hand-skin108.png",
		"ⲆⵠᐃΔᐃⲆᐃ": "img/day-hand-skin109.png",
		"ΔᐃᐃᐃᐃⲆᐃ": "img/night-hand-skin109.png",
		"ΔΔᐃᐃⵠᐃⵠ": "img/day-hand-skin110.png",
		"ΔⵠⲆⵠᐃⵠΔ": "img/night-hand-skin110.png",
		"ⵠΔⵠⵠᐃⵠⲆ": "img/day-hand-skin111.png",
		"ΔΔᐃΔᐃᐃᐃ": "img/night-hand-skin111.png",
		"ⲆⵠⵠⵠΔᐃΔ": "img/day-hand-skin112.png",
		"ΔⲆΔⵠⵠⵠΔ": "img/night-hand-skin112.png",
		"ᐃΔⵠⲆⵠⲆⵠᐃⲆ": "img/day-hand-skin113.png",
		"ⲆⵠΔᐃᐃⲆⲆᐃⲆ": "img/night-hand-skin113.png",
		"ᐃΔΔⲆⲆΔⲆ": "img/day-hand-skin114.png",
		"ᐃΔⲆᐃᐃⵠᐃ": "img/night-hand-skin114.png",
		"ΔⵠᐃΔᐃⵠᐃ": "img/day-hand-skin115.png",
		"ᐃᐃΔᐃΔΔΔ": "img/night-hand-skin115.png",
		"ᐃⵠⲆⵠⵠⲆⵠ": "img/day-hand-skin116.png",
		"ΔΔΔᐃⵠⵠΔ": "img/night-hand-skin116.png",
		"ⵠⵠⵠᐃΔΔΔ": "img/day-hand-skin117.png",
		"ΔΔⵠⵠᐃⲆᐃ": "img/night-hand-skin117.png",
		"ᐃⵠⵠΔΔᐃΔ": "img/day-hand-skin118.png",
		"ⲆⵠΔⵠΔⲆᐃ": "img/night-hand-skin118.png",
		"ⵠᐃΔᐃⲆᐃᐃ": "img/day-hand-skin119.png",
		"ⲆΔᐃⲆⵠⲆⲆ": "img/night-hand-skin119.png",
		"ⲆⵠΔⲆⵠᐃΔ": "img/day-hand-skin120.png",
		"ᐃᐃⲆΔΔⲆΔ": "img/night-hand-skin120.png",
		"ᐃᐃⵠᐃΔⲆⵠ": "img/day-hand-skin122.png",
		"ⲆⵠᐃⵠⵠⲆⵠ": "img/night-hand-skin122.png",
		"ⲆⵠΔᐃᐃⵠⲆ": "img/day-hand-skin122.png",
		"ⲆᐃΔⵠᐃⵠⵠ": "img/night-hand-skin122.png",
		"ΔⵠᐃΔⲆⵠΔ": "img/day-hand-skin122.png",
		"ᐃⲆΔΔⵠⵠⲆ": "img/night-hand-skin122.png",
		"ⵠᐃΔⲆᐃΔᐃ": "img/day-hand-skin124.png",
		"ⵠΔᐃᐃΔⲆⲆ": "img/night-hand-skin124.png",
		"ΔⵠⵠⲆΔⵠⵠ": "img/day-hand-skin125.png",
		"ΔⵠΔΔⲆⵠⵠ": "img/night-hand-skin125.png",
		"ᐃᐃᐃⲆⲆⲆⲆ": "img/day-hand-skin126.png",
		"ΔᐃᐃΔⲆΔⵠ": "img/night-hand-skin126.png",
		"ΔⲆΔⵠΔᐃΔ": "img/day-hand-skin127.png",
		"ᐃᐃⲆⲆΔⲆⵠ": "img/night-hand-skin127.png",
		"ᐃⲆΔⲆⲆΔⲆ": "img/day-hand-skin128.png",
		"ⵠᐃⵠⲆⵠΔΔ": "img/night-hand-skin128.png",
		"ᐃᐃⵠΔⲆΔᐃ": "img/day-hand-skin129.png",
		"ⵠΔⲆⲆᐃᐃⵠ": "img/night-hand-skin129.png",
		"ⵠⵠⵠΔᐃᐃⲆ": "img/day-hand-skin130.png",
		"ᐃⵠⲆᐃᐃⵠΔ": "img/night-hand-skin130.png",
		"ΔΔᐃᐃⵠᐃᐃ": "img/day-hand-skin131.png",
		"ⵠⵠᐃⵠΔⵠⲆ": "img/night-hand-skin131.png",
		"ⵠΔΔⲆᐃΔⲆ": "img/day-hand-skin130.png",
		"ΔⲆⵠⵠⲆΔΔ": "img/night-hand-skin130.png",
		"ΔⵠΔⵠⲆΔᐃ": "img/day-hand-skin133.png",
		"ⵠᐃΔⲆⲆⵠᐃ": "img/night-hand-skin133.png",
		"ⲆⵠⲆᐃⲆΔᐃ": "img/day-hand-skin134.png",
		"ΔᐃᐃⵠΔⲆⵠ": "img/night-hand-skin134.png",
		"ΔⲆⵠⵠⲆᐃΔ": "img/day-hand-skin135.png",
		"ΔⵠΔⵠᐃΔᐃ": "img/night-hand-skin135.png",
		"ΔⲆΔⵠⲆᐃⵠ": "img/day-hand-skin136.png",
		"ᐃᐃⵠⲆⵠⲆⵠ": "img/night-hand-skin136.png",
		"ᐃⲆⲆΔⵠᐃᐃ": "img/day-hand-skin137.png",
		"ᐃⵠΔⲆᐃⲆⲆ": "img/night-hand-skin137.png",
		"ΔᐃᐃΔⵠⲆᐃ": "img/day-hand-skin138.png",
		"ΔⲆⵠᐃᐃⲆΔ": "img/night-hand-skin138.png",
		"ⵠⲆⵠΔⲆⲆⲆ": "img/day-hand-skin139.png",
		"ⵠⵠⵠⵠᐃΔΔ": "img/night-hand-skin139.png",
		"ΔᐃⵠⲆⵠⲆᐃ": "img/day-hand-skin140.png",
		"ΔᐃⲆⵠⵠⵠⵠ": "img/night-hand-skin140.png",
		"ΔᐃΔᐃΔᐃⵠ": "img/day-hand-skin141.png",
		"ΔⵠⲆⵠⵠⵠΔ": "img/night-hand-skin141.png",
		"ᐃΔΔᐃΔⲆⲆ": "img/day-hand-skin142.png",
		"ⲆⵠᐃᐃᐃΔΔ": "img/night-hand-skin142.png",
		"ΔⵠΔΔⲆΔΔ": "img/day-hand-skin143.png",
		"ᐃΔΔΔⲆΔⵠ": "img/night-hand-skin143.png",
		"ᐃⲆⲆⲆⵠⲆᐃ": "img/day-hand-skin144.png",
		"ⲆⲆⵠⲆᐃᐃⵠ": "img/night-hand-skin144.png",
		"ⵠᐃΔⵠⵠⵠᐃ": "img/day-hand-skin145.png",
		"ΔⲆⲆⲆᐃⵠⲆ": "img/night-hand-skin145.png",
		"ᐃᐃᐃᐃΔᐃΔ": "img/day-hand-skin146.png",
		"ⲆᐃⲆΔⵠΔⵠ": "img/night-hand-skin146.png",
		"ⲆⵠᐃⲆⲆⲆᐃ": "img/day-hand-skin147.png",
		"ⲆΔⲆⲆⲆⵠΔ": "img/night-hand-skin147.png",
		"ᐃⲆⵠⲆΔᐃᐃ": "img/day-hand-skin148.png",
		"ᐃΔΔⲆⵠᐃⵠ": "img/night-hand-skin148.png",
		"ⵠᐃᐃᐃⲆⵠᐃ": "img/day-hand-skin149.png",
		"ⲆΔᐃⵠΔᐃⵠ": "img/night-hand-skin149.png",
		"ΔᐃⵠⵠⵠᐃΔ": "img/day-hand-skin150.png",
		"ᐃⲆⲆⵠⵠⵠⲆ": "img/night-hand-skin150.png",
		"ᐃᐃΔᐃΔᐃᐃ": "img/day-hand-skin151.png",
		"ⵠᐃⲆᐃᐃⵠⲆ": "img/night-hand-skin151.png",
		"ⲆᐃⵠΔΔⲆᐃ": "img/day-hand-skin152.png",
		"ΔⲆΔᐃⲆⵠⲆ": "img/night-hand-skin152.png",
		"ⵠᐃⵠⵠⵠΔⲆ": "img/day-hand-skin153.png",
		"ΔᐃⵠⵠⲆⲆΔ": "img/night-hand-skin153.png",
		"ⲆΔΔⵠⲆⲆΔ": "img/day-hand-skin154.png",
		"ΔᐃⲆⵠⵠΔⲆ": "img/night-hand-skin154.png",
		"ᐃᐃΔΔⵠⲆⵠ": "img/day-hand-skin155.png",
		"ⵠΔⲆᐃⲆᐃΔ": "img/night-hand-skin155.png",
		"ᐃⲆⵠΔΔⲆⲆ": "img/day-hand-skin156.png",
		"ΔᐃᐃᐃᐃΔΔ": "img/night-hand-skin156.png",
		"ⵠⲆⲆᐃⵠⲆᐃ": "img/day-hand-skin157.png",
		"ⵠⵠΔⲆⲆΔᐃ": "img/night-hand-skin157.png",
		"ᐃⲆⲆⵠΔⲆᐃ": "img/day-hand-skin158.png",
		"ⵠⲆⵠⵠⲆΔΔ": "img/night-hand-skin158.png",
		"ΔⵠⲆⲆⵠⵠⲆ": "img/day-hand-skin159.png",
		"ⵠᐃⲆᐃⲆⲆⵠ": "img/night-hand-skin159.png",
		"ⵠⵠⲆᐃⲆⲆⵠ": "img/day-hand-skin160.png",
		"ᐃᐃⵠⵠᐃΔⲆ": "img/night-hand-skin160.png",
		"ᐃᐃⲆᐃΔⲆⲆ": "img/day-hand-skin161.png",
		"ᐃⲆΔΔΔᐃⲆ": "img/night-hand-skin161.png",
		"ᐃΔΔᐃᐃΔΔ": "img/day-hand-skin162.png",
		"ᐃⵠΔΔΔΔⵠ": "img/night-hand-skin162.png",
		"ⲆᐃⵠⵠⵠᐃⲆ": "img/day-hand-skin163.png",
		"ΔⵠΔΔΔᐃΔ": "img/night-hand-skin163.png",
		"ᐃⵠΔⲆΔⲆⲆ": "img/day-hand-skin164.png",
		"ⲆⵠΔᐃⵠⲆΔ": "img/night-hand-skin164.png",
		"ⲆΔᐃΔⵠⵠΔ": "img/day-hand-skin165.png",
		"ΔᐃⲆⲆΔⲆⲆ": "img/night-hand-skin165.png",
		"ⵠᐃΔΔⲆᐃⵠ": "img/day-hand-skin166.png",
		"ᐃᐃΔⵠⵠΔΔ": "img/night-hand-skin166.png",
		"ΔⲆΔΔᐃⲆΔ": "img/day-hand-skin167.png",
		"ᐃΔⵠⲆΔᐃⲆ": "img/night-hand-skin167.png",
		"ᐃⲆᐃΔΔⵠΔ": "img/day-hand-skin168.png",
		"ᐃⵠΔⵠΔΔΔ": "img/night-hand-skin168.png",
		"ΔΔⲆⲆⲆΔⲆ": "img/day-hand-skin169.png",
		"ⵠⲆΔΔΔⵠΔ": "img/night-hand-skin169.png",
		"ᐃᐃᐃΔⵠⵠᐃ": "img/day-hand-skin170.png",
		"ᐃᐃᐃΔⵠⵠⵠ": "img/night-hand-skin170.png",
		"ᐃΔᐃΔⲆΔⵠ": "img/day-hand-skin171.png",
		"ᐃⲆⵠΔⲆⵠΔ": "img/night-hand-skin171.png",
		"ΔᐃΔⵠᐃⲆᐃ": "img/day-hand-skin172.png",
		"ΔᐃⵠⵠᐃᐃΔ": "img/night-hand-skin172.png",
		"ᐃᐃⲆⲆΔⲆⲆ": "img/day-hand-skin173.png",
		"ⵠⲆᐃⲆᐃⵠⲆ": "img/night-hand-skin173.png",
		"ⲆΔⲆΔⲆᐃⲆ": "img/day-hand-skin174.png",
		"ⵠⲆΔⵠⵠΔⵠ": "img/night-hand-skin174.png",
		"ⵠᐃⵠΔᐃⵠⲆ": "img/day-hand-skin175.png",
		"ᐃᐃⲆΔΔΔΔ": "img/night-hand-skin175.png",
		"ᐃΔΔᐃⵠⲆᐃ": "img/day-hand-skin176.png",
		"ΔⲆᐃⵠⲆᐃⲆ": "img/night-hand-skin176.png",
		"ⵠⵠΔⲆⲆᐃᐃ": "img/day-hand-skin177.png",
		"ⲆⵠⵠⲆⲆⵠⲆ": "img/night-hand-skin177.png",
		"ᐃⵠᐃⲆⵠⵠⲆ": "img/day-hand-skin178.png",
		"ⲆⲆⵠⵠⲆΔᐃ": "img/night-hand-skin178.png",
		"ⲆΔΔΔᐃⵠᐃ": "img/day-hand-skin179.png",
		"ⲆΔⵠΔⲆᐃⲆ": "img/night-hand-skin179.png",
		"ⵠⲆⵠᐃⲆᐃⵠ": "img/day-hand-skin180.png",
		"ᐃⵠᐃᐃⲆᐃⲆ": "img/night-hand-skin180.png",
		"ΔⵠΔⲆⵠΔⵠ": "img/day-hand-skin181.png",
		"ⲆΔⵠΔΔΔᐃ": "img/night-hand-skin181.png",
		"ⵠΔΔⵠⵠᐃΔ": "img/day-hand-skin182.png",
		"ᐃᐃⲆΔΔⵠΔ": "img/night-hand-skin182.png",
		"ᐃΔⲆⲆⲆⲆᐃ": "img/day-hand-skin183.png",
		"ⵠⲆⲆᐃⵠᐃⲆ": "img/night-hand-skin183.png",
		"ⲆⵠⲆⲆⲆᐃⵠ": "img/day-hand-skin184.png",
		"ΔⲆΔⲆΔⵠⵠ": "img/night-hand-skin184.png",
		"ᐃΔⲆΔᐃᐃᐃ": "img/day-hand-skin185.png",
		"ΔⵠⲆΔⵠᐃⲆ": "img/night-hand-skin185.png",
		"ⲆⲆⲆΔᐃΔⵠ": "img/day-hand-skin186.png",
		"ⲆⵠⲆⵠᐃⵠⵠ": "img/night-hand-skin186.png",
		"ᐃⵠΔΔΔᐃⲆ": "img/day-hand-skin187.png",
		"ᐃⲆⲆΔⲆⵠᐃ": "img/night-hand-skin187.png",
		"ⲆⵠᐃⵠⵠⵠΔ": "img/day-hand-skin188.png",
		"ⵠΔⲆⲆⲆᐃᐃ": "img/night-hand-skin188.png",
		"ΔΔᐃᐃΔⲆⵠ": "img/day-hand-skin189.png",
		"ᐃΔΔΔⲆⲆⲆ": "img/night-hand-skin189.png",
		"ⵠΔⲆΔⲆⵠᐃ": "img/day-hand-skin190.png",
		"ⵠΔᐃⲆᐃⵠΔ": "img/night-hand-skin190.png",
		"ᐃᐃΔⵠⲆΔΔ": "img/day-hand-skin191.png",
		"ⵠⲆⲆⵠⵠⵠΔ": "img/night-hand-skin191.png",
		"ⲆᐃΔⵠᐃᐃⲆ": "img/day-hand-skin192.png",
		"ⵠΔᐃⵠⵠⵠᐃ": "img/night-hand-skin192.png",
		"ᐃᐃᐃᐃᐃⲆⲆ": "img/day-hand-skin193.png",
		"ᐃⵠᐃⵠᐃᐃⵠ": "img/night-hand-skin193.png",
		"ⲆⲆᐃⲆΔΔⵠ": "img/day-hand-skin194.png",
		"ⵠⲆⵠᐃⲆΔΔ": "img/night-hand-skin194.png",
		"ⵠⵠⲆⵠⵠⵠᐃ": "img/day-hand-skin195.png",
		"ⲆⵠΔⲆⲆⲆᐃ": "img/night-hand-skin195.png",
		"ⵠΔⵠⵠΔⵠᐃ": "img/day-hand-skin196.png",
		"ᐃᐃΔⲆⵠⵠⲆ": "img/night-hand-skin196.png",
		"ᐃΔⲆⵠΔⲆᐃ": "img/day-hand-skin197.png",
		"ⲆΔⵠΔⲆⵠᐃ": "img/night-hand-skin197.png",
		"ⲆΔⵠΔᐃⵠΔ": "img/day-hand-skin198.png",
		"ⵠΔⵠⵠⲆᐃΔ": "img/night-hand-skin198.png",
		"ⵠᐃⲆⲆⵠΔΔ": "img/day-hand-skin199.png",
		"ᐃⲆΔⵠᐃⲆᐃ": "img/night-hand-skin199.png",
		"ⵠⲆΔᐃΔⲆΔ": "img/day-hand-skin200.png",
		"ΔᐃΔᐃⵠᐃⵠ": "img/night-hand-skin200.png",
		"ᐃᐃⵠᐃΔᐃᐃ": "img/day-hand-skin201.png",
		"ᐃⵠᐃᐃⲆΔⲆ": "img/night-hand-skin201.png",
		"ⵠⲆⵠⵠⲆⲆⲆ": "img/day-hand-skin202.png",
		"ΔᐃⲆΔⲆⵠΔ": "img/night-hand-skin202.png",
		"ⵠᐃⵠⵠⲆⵠⲆ": "img/day-hand-skin203.png",
		"ⵠᐃᐃⲆᐃᐃᐃ": "img/night-hand-skin203.png",
		"ΔⲆΔⲆΔⲆⵠ": "img/day-hand-skin204.png",
		"ΔΔⵠⲆⵠΔⵠ": "img/night-hand-skin204.png",
		"ⲆᐃΔΔᐃᐃⵠ": "img/day-hand-skin205.png",
		"ᐃΔΔⲆⵠΔᐃ": "img/night-hand-skin205.png",
		"ΔⲆⲆⵠΔⵠⵠ": "img/day-hand-skin206.png",
		"ΔⵠⵠΔⵠΔΔ": "img/night-hand-skin206.png",
		"ΔⵠⲆⲆᐃΔⲆ": "img/day-hand-skin207.png",
		"ΔΔΔΔⵠᐃΔ": "img/night-hand-skin207.png",
		"ΔᐃⲆΔⵠⲆᐃ": "img/day-hand-skin208.png",
		"ᐃᐃⵠΔᐃⲆⵠ": "img/night-hand-skin208.png",
		"ΔⲆΔᐃᐃⲆⲆ": "img/day-hand-skin209.png",
		"ᐃⵠΔΔΔⲆΔ": "img/night-hand-skin209.png",
		"ⲆⵠⲆⲆⲆⵠⲆ": "img/day-hand-skin210.png",
		"ᐃᐃΔⲆⵠΔᐃ": "img/night-hand-skin210.png",
		"ⲆΔⲆⵠΔⲆᐃ": "img/day-hand-skin211.png",
		"ᐃⵠᐃᐃⵠⲆΔ": "img/night-hand-skin211.png",
		"ᐃΔⲆΔΔⵠⲆ": "img/day-hand-skin212.png",
		"ⵠⵠΔᐃⲆᐃⵠ": "img/night-hand-skin212.png",
		"ΔΔⲆⲆⵠΔⲆ": "img/day-bag-star0.png",
		"ᐃⵠᐃΔⵠΔⲆ": "img/night-bag-star0.png",
		"ⲆᐃⲆⲆⲆⵠᐃ": "img/day-bag0.png",
		"ΔΔΔⵠᐃⲆⵠ": "img/night-bag0.png",
		"ⲆᐃᐃᐃⵠⵠⲆ": "img/day-bag1.png",
		"ΔΔⵠΔⵠᐃⵠ": "img/night-bag1.png",
		"ᐃⵠΔⵠⵠⲆⲆ": "img/day-bag2.png",
		"ΔᐃᐃΔⲆΔΔ": "img/night-bag2.png",
		"ΔⲆᐃᐃᐃᐃΔ": "img/day-bag3.png",
		"ⵠᐃᐃΔΔⵠΔ": "img/night-bag3.png",
		"ΔΔⲆΔⲆΔⲆ": "img/day-bag4.png",
		"ⵠΔⵠⲆⵠΔⲆ": "img/night-bag4.png",
		"ΔⲆⲆΔΔⵠᐃ": "img/day-bag5.png",
		"ⲆⲆⵠⲆⲆᐃⵠ": "img/night-bag5.png",
		"ⵠⵠᐃⲆⲆᐃⲆ": "img/day-bag6.png",
		"ᐃⵠΔΔⵠᐃⲆ": "img/night-bag6.png",
		"ⲆᐃⲆⲆᐃΔⵠ": "img/day-bag7.png",
		"ΔⲆᐃⲆᐃΔⵠ": "img/night-bag7.png",
		"ᐃᐃⲆᐃⵠΔΔ": "img/day-bag8.png",
		"ΔⵠⵠⲆᐃΔⲆ": "img/night-bag8.png",
		"ⲆᐃⵠΔⲆΔⵠ": "img/day-bag9.png",
		"ΔΔⲆⵠΔΔΔ": "img/night-bag9.png",
		"ᐃⵠⵠᐃᐃΔΔ": "img/day-bag10.png",
		"ⵠᐃΔⵠΔᐃᐃ": "img/night-bag10.png",
		"ⵠΔᐃᐃΔⵠⵠ": "img/day-bag11.png",
		"ⵠⵠⵠᐃΔⲆᐃ": "img/night-bag11.png",
		"ᐃᐃᐃᐃⵠⵠⵠ": "img/day-bag13.png",
		"ⲆⲆᐃᐃⵠᐃΔ": "img/night-bag13.png",
		"ⲆⲆᐃᐃⵠⵠⵠ": "img/day-bag14.png",
		"ⵠΔⵠΔⲆⵠᐃ": "img/night-bag14.png",
		"ⵠⲆᐃᐃᐃᐃᐃ": "img/day-bag16.png",
		"ⵠᐃΔⲆᐃⲆⲆ": "img/night-bag16.png",
		"ᐃΔⵠⲆᐃⲆΔ": "img/day-bag17.png",
		"ⲆⵠⵠᐃΔⵠⵠ": "img/night-bag17.png",
		"ᐃᐃΔⲆΔⲆⲆ": "img/day-bag18.png",
		"ᐃⵠⲆⵠⲆⵠΔ": "img/night-bag18.png",
		"ᐃΔⵠΔᐃⵠΔ": "img/day-bag19.png",
		"ⲆΔΔΔΔⲆⲆ": "img/night-bag19.png",
		"ᐃⲆⵠⲆΔⵠⵠ": "img/day-bag20.png",
		"ΔᐃΔΔⵠⲆᐃ": "img/night-bag20.png",
		"ⲆⵠᐃⵠⵠⲆᐃ": "img/day-bag21.png",
		"ΔΔⵠΔΔⲆⵠ": "img/night-bag21.png",
		"ⲆᐃΔⲆⵠⵠⲆ": "img/day-bag22.png",
		"ΔᐃᐃᐃᐃᐃⲆ": "img/night-bag22.png",
		"ᐃᐃⲆⵠᐃΔⵠ": "img/day-bag23.png",
		"ⵠᐃⵠᐃΔΔⵠ": "img/night-bag23.png",
		"ⵠⲆⵠΔⵠΔᐃ": "img/day-bag24.png",
		"ᐃⵠᐃΔᐃⲆⵠ": "img/night-bag24.png",
		"ΔΔΔⵠᐃᐃΔ": "img/day-bag25.png",
		"ᐃΔⲆᐃⵠⲆⵠ": "img/night-bag25.png",
		"ⵠΔᐃΔⵠⵠᐃ": "img/day-bag26.png",
		"ⲆⲆᐃᐃᐃᐃⲆ": "img/night-bag26.png",
		"ⵠΔΔⵠΔⲆᐃ": "img/day-bag27.png",
		"ΔΔΔⲆᐃⵠᐃ": "img/night-bag27.png",
		"ᐃⲆΔᐃᐃⲆⵠ": "img/day-bag28.png",
		"ΔᐃᐃⲆᐃⲆⲆ": "img/night-bag28.png",
		"ⵠΔᐃΔΔⲆⲆ": "img/day-bag29.png",
		"ⲆᐃⵠᐃⲆⲆⵠ": "img/night-bag29.png",
		"ⵠΔⵠΔΔᐃΔ": "img/day-bag30.png",
		"ᐃᐃΔⲆΔᐃⲆ": "img/night-bag30.png",
		"ⵠΔⲆΔⲆⵠΔ": "img/day-bag31.png",
		"ᐃΔⵠΔⵠᐃⲆ": "img/night-bag31.png",
		"ⲆⵠΔΔΔᐃᐃ": "img/day-bag32.png",
		"ⵠⵠⲆⵠⵠⲆⵠ": "img/night-bag32.png",
		"ᐃⲆᐃΔⲆᐃⲆ": "img/day-bag33.png",
		"ⲆΔⵠᐃΔⵠⲆ": "img/night-bag33.png",
		"ⲆᐃⲆⲆΔⲆⲆ": "img/day-bag34.png",
		"ᐃᐃΔᐃΔᐃⵠ": "img/night-bag34.png",
		"ⵠΔΔΔⲆⲆⵠ": "img/day-bag35.png",
		"ᐃΔⲆᐃᐃⲆΔ": "img/night-bag35.png",
		"ⲆⲆⵠΔΔᐃΔ": "img/day-bag36.png",
		"ⵠΔΔΔᐃⵠⵠ": "img/night-bag36.png",
		"ΔⲆⵠⵠΔΔᐃ": "img/day-bag37.png",
		"ᐃᐃΔᐃⵠⲆΔ": "img/night-bag37.png",
		"ⲆⲆⲆΔᐃΔΔ": "img/day-bag38.png",
		"ΔΔⵠⵠⵠΔⲆ": "img/night-bag38.png",
		"ⲆⲆΔⵠᐃⲆⵠ": "img/day-bag39.png",
		"ⲆⵠΔⵠⲆΔᐃ": "img/night-bag39.png",
		"ⲆΔⵠⵠᐃᐃⲆ": "img/day-bag40.png",
		"ⲆᐃᐃⲆⵠⵠⲆ": "img/night-bag40.png",
		"ᐃⵠⲆⵠⵠⵠⲆ": "img/day-bag41.png",
		"ΔᐃᐃΔΔⵠⲆ": "img/night-bag41.png",
		"ⵠᐃⵠᐃⵠᐃⲆ": "img/day-bag42.png",
		"ΔᐃⲆⲆⲆⵠΔ": "img/night-bag42.png",
		"ⵠⲆⲆⲆⵠⲆⲆ": "img/day-bag43.png",
		"ⵠΔᐃⲆᐃΔᐃ": "img/night-bag43.png",
		"ⲆⵠΔⲆⵠΔⲆ": "img/day-bag44.png",
		"ⲆⲆᐃΔⵠΔⲆ": "img/night-bag44.png",
		"ⲆⵠᐃⵠᐃΔΔ": "img/day-bag45.png",
		"ΔᐃⲆΔΔᐃΔ": "img/night-bag45.png",
		"ᐃΔΔᐃⲆΔᐃ": "img/day-bag46.png",
		"ⵠᐃᐃⵠⲆΔᐃ": "img/night-bag46.png",
		"ᐃⵠΔⵠᐃⲆⵠ": "img/day-bag47.png",
		"ⲆΔΔⵠΔΔΔ": "img/night-bag47.png",
		"ΔΔⲆᐃᐃᐃᐃ": "img/day-bag48.png",
		"ᐃⲆⲆΔⵠᐃⵠ": "img/night-bag48.png",
		"ⲆΔᐃΔᐃⵠⵠ": "img/day-bag49.png",
		"ⲆΔΔᐃⲆᐃⵠ": "img/night-bag49.png",
		"ⵠⲆⵠᐃᐃᐃᐃ": "img/day-bag50.png",
		"ᐃᐃⲆΔΔⲆⲆ": "img/night-bag50.png",
		"ⲆⲆΔⲆᐃⵠⲆ": "img/day-bag51.png",
		"ᐃⲆⵠᐃⵠⵠⵠ": "img/night-bag51.png",
		"ⵠΔᐃⵠⲆΔΔ": "img/day-bag52.png",
		"ᐃᐃⵠⲆⲆⲆᐃ": "img/night-bag52.png",
		"ᐃᐃᐃΔⲆⵠᐃ": "img/day-bag53.png",
		"ⵠΔΔⲆⵠⵠⵠ": "img/night-bag53.png",
		"ⲆΔⲆⲆⲆᐃⵠ": "img/day-bag54.png",
		"ΔᐃⲆⵠΔᐃⵠ": "img/night-bag54.png",
		"ᐃⲆⲆΔⲆᐃⵠ": "img/day-bag55.png",
		"ⲆΔᐃᐃⲆΔᐃ": "img/night-bag55.png",
		"ⵠᐃⲆᐃᐃΔⵠ": "img/day-bag56.png",
		"ΔΔⲆⵠⲆⲆⵠ": "img/night-bag56.png",
		"ΔΔᐃⲆᐃⲆᐃ": "img/day-bag57.png",
		"ⵠᐃᐃⲆⲆⵠⲆ": "img/night-bag57.png",
		"ΔΔⵠᐃΔⵠⵠ": "img/day-bag58.png",
		"ᐃΔⲆΔΔⲆᐃ": "img/night-bag58.png",
		"ΔⲆⵠⵠᐃᐃⵠ": "img/day-bag59.png",
		"ΔⲆᐃⵠⵠⲆΔ": "img/night-bag59.png",
		"ᐃⵠⵠΔᐃᐃΔ": "img/day-bag60.png",
		"ⲆᐃᐃⵠΔⵠⵠ": "img/night-bag60.png",
		"ᐃⵠⵠΔᐃΔᐃ": "img/day-bag61.png",
		"ⵠΔⲆᐃΔᐃᐃ": "img/night-bag61.png",
		"ΔᐃⲆᐃΔᐃΔ": "img/day-bag62.png",
		"Δᐃⵠᐃⵠⵠᐃ": "img/night-bag62.png",
		"ΔᐃⵠⲆᐃⵠᐃ": "img/day-bag63.png",
		"ⲆΔΔⲆᐃᐃΔ": "img/night-bag63.png",
		"ᐃΔΔᐃⵠⵠᐃ": "img/day-bag64.png",
		"ᐃᐃᐃΔᐃΔⲆ": "img/night-bag64.png",
		"ⲆᐃⲆᐃⲆΔΔ": "img/day-bag65.png",
		"ⵠᐃⲆⲆⲆⲆΔ": "img/night-bag65.png",
		"ᐃΔΔⵠⲆΔⲆ": "img/day-bag66.png",
		"ⲆⵠᐃⲆΔΔⵠ": "img/night-bag66.png",
		"ᐃⵠⲆᐃᐃΔᐃ": "img/day-bag67.png",
		"ΔⵠⲆΔⵠⲆᐃ": "img/night-bag67.png",
		"ᐃⲆΔⵠⲆⲆⲆ": "img/day-bag68.png",
		"ᐃⵠⲆⲆⵠΔᐃ": "img/night-bag68.png",
		"ⵠⵠⵠΔⲆΔⲆ": "img/day-bag69.png",
		"ᐃⵠΔᐃⲆᐃⲆ": "img/night-bag69.png",
		"ⵠᐃΔᐃᐃΔΔ": "img/day-bag70.png",
		"ΔΔⲆⲆⲆᐃΔ": "img/night-bag70.png",
		"ⵠΔΔⲆΔⲆΔ": "img/day-bag71.png",
		"ⵠⵠᐃΔΔⵠΔ": "img/night-bag71.png",
		"ⵠΔⵠⲆⵠᐃᐃ": "img/day-bag72.png",
		"ⲆᐃᐃᐃⵠᐃⲆ": "img/night-bag72.png",
		"ⲆⲆΔΔΔⵠⵠ": "img/day-bag73.png",
		"ΔⲆⲆⲆⵠΔᐃ": "img/night-bag73.png",
		"ⵠᐃⲆΔΔⲆΔ": "img/day-bag74.png",
		"ⵠΔᐃⵠᐃΔᐃ": "img/night-bag74.png",
		"ΔⵠⲆⵠᐃΔⵠ": "img/day-bag75.png",
		"ⲆΔᐃΔᐃⲆⵠ": "img/night-bag75.png",
		"ᐃᐃⲆᐃⵠⵠⲆ": "img/day-bag76.png",
		"ⵠΔΔᐃⲆⲆΔ": "img/night-bag76.png",
		"ΔⲆΔⵠⵠⲆΔ": "img/day-bag77.png",
		"ᐃⲆⲆⲆΔᐃⲆ": "img/night-bag77.png",
		"ΔⲆⲆⵠⲆⵠⵠ": "img/day-bag78.png",
		"ⵠᐃΔⵠⲆⲆⵠ": "img/night-bag78.png",
		"ΔⵠΔᐃⲆΔᐃ": "img/day-bag79.png",
		"ᐃⲆⲆⲆΔᐃΔ": "img/night-bag79.png",
		"ᐃⵠⵠⲆΔⵠⵠ": "img/day-bag80.png",
		"ⲆⵠΔᐃⵠᐃⵠ": "img/night-bag80.png",
		"ⲆᐃΔⲆᐃΔⲆ": "img/day-accessory0.png",
		"ᐃΔⵠΔⲆⵠΔ": "img/day-accessory0-pacques.png",
		"ᐃᐃⵠΔᐃⵠᐃ": "img/night-accessory0-pacques.png",
		"ⵠΔᐃᐃΔᐃᐃ": "img/day-accessory13.png",
		"ⲆⲆⵠⲆⵠᐃᐃ": "img/night-accessory13.png",
		"ᐃⲆΔᐃᐃⲆⲆ": "img/day-accessory14.png",
		"ΔⵠⲆᐃⲆⲆⵠ": "img/night-accessory14.png",
		"ⵠⵠᐃⵠⲆΔΔ": "img/day-accessory15.png",
		"ⵠᐃⵠΔΔΔᐃ": "img/night-accessory15.png",
		"ΔᐃΔΔᐃᐃⲆ": "img/day-accessory16.png",
		"ⵠⲆⲆⲆⲆⵠΔ": "img/night-accessory16.png",
		"ΔⵠⲆⵠⵠⵠⲆ": "img/day-accessory17.png",
		"ⲆΔΔᐃⲆⵠΔ": "img/day-accessory17.png",
		"ⵠᐃᐃΔⲆΔΔ": "img/day-accessory19.png",
		"ᐃᐃΔᐃᐃⲆⲆ": "img/night-accessory19.png",
		"ⲆΔΔΔⲆᐃΔ": "img/day-accessory20.png",
		"ᐃΔΔⲆΔᐃᐃ": "img/night-accessory20.png",
		"ⲆᐃᐃΔⲆΔΔ": "img/day-accessory21.png",
		"ⲆⵠΔᐃⲆᐃⲆ": "img/night-accessory21.png",
		"ⲆⵠᐃΔᐃⵠⵠ": "img/day-accessory22.png",
		"ⲆⲆⲆⵠⲆᐃⲆ": "img/night-accessory22.png",
		"ⲆⵠⵠⵠᐃᐃΔ": "img/day-accessory23.png",
		"ΔⵠⲆⵠⲆⵠᐃ": "img/night-accessory23.png",
		"ⵠⲆⵠⲆᐃΔⵠ": "img/day-accessory24.png",
		"ᐃⲆⲆΔᐃΔⲆ": "img/night-accessory24.png",
		"ᐃⵠⵠⲆⲆⲆⵠ": "img/day-accessory25.png",
		"ⵠᐃΔⲆᐃΔⲆ": "img/night-accessory25.png",
		"ⲆᐃΔᐃᐃⲆᐃ": "img/day-accessory26.png",
		"ᐃⵠΔᐃᐃᐃⲆ": "img/night-accessory26.png",
		"ⲆⵠⲆᐃᐃᐃᐃ": "img/day-accessory27.png",
		"ⵠᐃⲆⲆⵠⵠⲆ": "img/night-accessory27.png",
		"ⵠⵠᐃⵠⲆᐃᐃ": "img/day-accessory18.png",
		"ⲆⵠⲆΔⵠᐃⲆ": "img/night-accessory18.png",
		"ΔⵠⵠⲆᐃᐃΔ": "img/day-accessory29.png",
		"ᐃⵠᐃΔΔΔⵠ": "img/night-accessory29.png",
		"ⵠᐃΔΔⲆΔᐃ": "img/day-accessory30.png",
		"ᐃΔⵠΔΔΔΔ": "img/night-accessory30.png",
		"ⵠΔᐃΔᐃΔᐃ": "img/day-accessory31.png",
		"ᐃᐃⵠⵠᐃᐃᐃ": "img/night-accessory31.png",
		"ⲆⵠᐃⵠⵠᐃΔ": "img/day-accessory32.png",
		"ᐃⵠΔⲆⲆⵠⵠ": "img/night-accessory32.png",
		"ⵠⵠⲆⵠⵠΔΔ": "img/day-accessory33.png",
		"ⵠⲆΔᐃⵠΔΔ": "img/night-accessory33.png",
		"ᐃⲆᐃⵠⵠⵠᐃ": "img/day-accessory34.png",
		"ᐃΔⲆⵠⲆⵠΔ": "img/night-accessory34.png",
		"ⵠⵠΔⵠᐃⲆΔ": "img/day-accessory35.png",
		"ⲆΔⵠΔᐃⵠⲆ": "img/night-accessory35.png",
		"ᐃⵠᐃΔⲆⲆⲆ": "img/day-accessory28.png",
		"ⵠᐃⲆⲆΔᐃⲆ": "img/night-accessory28.png",
		"ΔᐃⲆΔⵠⲆⵠ": "img/day-accessory36.png",
		"ᐃⲆᐃΔΔⲆᐃ": "img/night-accessory36.png",
		"ⲆⵠΔⲆⵠⵠⲆ": "img/day-accessory37.png",
		"ᐃⵠΔⲆΔᐃⵠ": "img/night-accessory37.png",
		"ⲆᐃⲆⵠⵠΔΔ": "img/day-accessory39.png",
		"ΔΔᐃΔᐃΔⲆ": "img/night-accessory39.png",
		"ΔⵠᐃⵠᐃⲆᐃ": "img/day-accessory40.png",
		"ᐃⵠⵠΔΔⲆⵠ": "img/night-accessory40.png",
		"ᐃᐃⲆᐃΔᐃᐃ": "img/day-accessory41.png",
		"ⵠΔⲆΔΔⵠⲆ": "img/night-accessory41.png",
		"ᐃΔΔᐃΔᐃᐃ": "img/day-accessory42.png",
		"ᐃᐃⲆΔⵠΔᐃ": "img/night-accessory42.png",
		"ⲆⲆᐃⲆᐃⲆⵠ": "img/day-accessory43.png",
		"ᐃΔⵠⲆⲆⵠⵠ": "img/night-accessory43.png",
		"ⵠᐃⲆⵠⲆⲆΔ": "img/day-accessory44.png",
		"ΔⲆⵠΔⵠⵠⵠ": "img/night-accessory44.png",
		"ᐃᐃⵠⵠᐃΔⵠ": "img/day-accessory38.png",
		"ᐃᐃⵠᐃⲆⲆᐃ": "img/night-accessory38.png",
		"ᐃⲆⵠⵠᐃⲆⵠ": "img/day-accessory46.png",
		"ᐃΔⲆΔΔᐃᐃ": "img/night-accessory46.png",
		"ᐃᐃᐃΔⲆᐃᐃ": "img/day-accessory47.png",
		"ⲆⵠΔΔⵠⲆⲆ": "img/night-accessory47.png",
		"ⲆⲆⲆΔⲆΔⲆ": "img/day-accessory48.png",
		"ᐃⵠⲆΔⲆⵠΔ": "img/night-accessory48.png",
		"ⵠⵠᐃΔᐃᐃⵠ": "img/day-accessory49.png",
		"ᐃᐃΔΔΔⵠᐃ": "img/night-accessory49.png",
		"ᐃⲆΔⵠΔᐃᐃ": "img/day-accessory45.png",
		"ⵠⲆⲆⵠᐃᐃⲆ": "img/night-accessory45.png",
		"ΔᐃΔΔⵠΔᐃ": "img/day-accessory50.png",
		"ᐃΔⵠⲆⲆⵠⲆ": "img/night-accessory50.png",
		"ⵠᐃⲆΔⲆΔⲆ": "img/day-accessory51.png",
		"ΔⲆᐃΔⵠᐃΔ": "img/night-accessory51.png",
		"ⵠⵠⵠᐃᐃΔᐃ": "img/day-accessory52.png",
		"ⲆΔᐃΔⲆΔⲆ": "img/night-accessory52.png",
		"ⲆΔᐃⲆΔΔⲆ": "img/day-accessory53.png",
		"ΔⵠᐃⵠᐃᐃΔ": "img/night-accessory53.png",
		"ⵠⲆΔⲆΔᐃᐃ": "img/day-accessory54.png",
		"ᐃⵠⵠᐃⲆᐃᐃ": "img/night-accessory54.png",
		"ⲆΔΔⵠⲆⵠⲆ": "img/day-accessory55.png",
		"ⵠⵠⲆⲆⵠΔⵠ": "img/night-accessory55.png",
		"ΔⲆᐃⲆⵠΔΔ": "img/day-accessory56.png",
		"ᐃΔⵠΔΔⵠΔ": "img/night-accessory56.png",
		"ᐃⲆⵠᐃᐃΔⲆ": "img/day-accessory57.png",
		"ⲆΔⲆⵠᐃᐃⵠ": "img/night-accessory57.png",
		"ⲆΔⵠⲆΔᐃᐃ": "img/day-accessory58.png",
		"ΔᐃⲆⲆⵠⲆᐃ": "img/night-accessory58.png",
		"ⵠⵠΔᐃᐃΔⵠ": "img/day-accessory59.png",
		"ᐃⲆⲆⵠⵠⵠΔ": "img/night-accessory59.png",
		"ᐃⵠⲆⲆⲆΔⲆ": "img/day-accessory60.png",
		"ΔⲆΔΔⵠⵠⲆ": "img/night-accessory60.png",
		"ᐃⲆᐃᐃΔⲆΔ": "img/day-accessory61.png",
		"ⲆⲆⵠΔᐃⵠⵠ": "img/night-accessory61.png",
		"ᐃⵠⲆΔΔⵠⵠ": "img/day-accessory62.png",
		"ᐃΔⵠΔΔⲆⲆ": "img/night-accessory62.png",
		"ᐃⲆᐃᐃⲆᐃΔ": "img/day-accessory63.png",
		"ⵠⲆᐃⲆΔⵠᐃ": "img/night-accessory63.png",
		"ᐃΔΔⲆⲆⵠΔ": "img/day-accessory64.png",
		"ⲆΔᐃⵠΔΔⵠ": "img/night-accessory64.png",
		"ⵠᐃᐃᐃᐃᐃⵠ": "img/day-accessory65.png",
		"ᐃΔΔΔᐃⵠΔ": "img/night-accessory65.png",
		"ᐃΔⲆⲆⲆⵠⲆ": "img/day-accessory66.png",
		"ⵠⲆⵠⲆⵠᐃⲆ": "img/night-accessory66.png",
		"ΔᐃⲆᐃΔΔⲆ": "img/day-accessory67.png",
		"ⵠⲆΔΔⲆⲆᐃ": "img/night-accessory67.png",
		"ⲆΔⲆⵠᐃⲆⵠ": "img/day-accessory68.png",
		"ⲆΔΔⲆΔⵠᐃ": "img/night-accessory68.png",
		"ᐃⵠᐃⵠΔⵠⲆ": "img/day-accessory69.png",
		"ᐃⲆⵠΔⲆᐃΔ": "img/night-accessory69.png",
		"ᐃⵠΔΔⲆΔᐃ": "img/day-accessory70.png",
		"ᐃⵠⲆᐃᐃⵠⲆ": "img/night-accessory70.png",
		"ᐃⲆⲆᐃᐃⵠΔ": "img/day-accessory71.png",
		"ⲆⵠΔⲆⵠⲆΔ": "img/night-accessory71.png",
		"ΔΔⵠⵠⵠⲆΔ": "img/day-accessory72.png",
		"ΔᐃⲆⵠᐃΔᐃ": "img/night-accessory72.png",
		"ⵠⲆⲆⲆⲆⲆΔ": "img/day-accessory73.png",
		"ΔᐃⵠΔᐃⲆⲆ": "img/night-accessory73.png",
		"ⵠⲆᐃⲆⲆΔᐃ": "img/day-accessory74.png",
		"ᐃⲆᐃΔᐃΔᐃ": "img/night-accessory74.png",
		"ΔΔⵠⲆᐃᐃᐃ": "img/day-accessory75.png",
		"ⲆⵠᐃⲆᐃᐃᐃ": "img/night-accessory75.png",
		"ⲆⵠⲆⲆΔΔᐃ": "img/day-accessory76.png",
		"ᐃᐃᐃΔⵠⲆⲆ": "img/night-accessory76.png",
		"ⲆᐃᐃⲆⵠⲆⲆ": "img/day-accessory77.png",
		"ⵠⲆΔⲆΔⲆᐃ": "img/night-accessory77.png",
		"ΔᐃⵠⲆᐃᐃᐃ": "img/day-accessory78.png",
		"ΔⲆⵠⵠᐃΔΔ": "img/night-accessory78.png",
		"ⲆⲆΔⲆⵠᐃⲆ": "img/day-accessory79.png",
		"ⲆⵠᐃᐃΔᐃᐃ": "img/night-accessory79.png",
		"ⵠΔᐃᐃⵠⲆⵠ": "img/day-accessory80.png",
		"ᐃᐃⲆⲆⲆᐃᐃ": "img/night-accessory80.png",
		"ⵠⲆΔⲆᐃᐃᐃ": "img/day-accessory81.png",
		"ᐃΔᐃᐃΔᐃᐃ": "img/night-accessory81.png",
		"ⵠⲆΔⲆⵠΔⲆ": "img/day-accessory83.png",
		"ΔⲆⲆⵠⲆⲆΔ": "img/night-accessory83.png",
		"ΔΔᐃᐃⲆΔΔ": "img/day-accessory84.png",
		"ΔⲆΔⵠᐃᐃⲆ": "img/night-accessory84.png",
		"ᐃΔΔⲆⲆΔᐃ": "img/day-accessory85.png",
		"ⲆΔᐃⵠⲆⵠⲆ": "img/night-accessory85.png",
		"ⲆⵠⲆΔⲆⲆⲆ": "img/day-accessory86.png",
		"ΔⲆⲆΔⲆⲆⵠ": "img/night-accessory86.png",
		"ⲆⵠⵠⲆᐃⵠⵠ": "img/day-accessory87.png",
		"ⲆᐃᐃⵠΔⲆᐃ": "img/night-accessory87.png",
		"ΔⲆⵠⲆⲆⵠⵠ": "img/day-accessory88.png",
		"ᐃᐃⲆⲆΔⵠⲆ": "img/night-accessory88.png",
		"ⵠΔⲆᐃᐃΔΔ": "img/day-accessory89.png",
		"ᐃᐃᐃⲆⵠⲆⲆ": "img/night-accessory89.png",
		"ᐃⲆΔⲆⵠⵠᐃ": "img/day-accessory90.png",
		"ⲆΔⲆΔᐃΔᐃ": "img/night-accessory90.png",
		"ᐃⵠΔⲆⵠᐃΔ": "img/day-accessory91.png",
		"ⵠⵠⵠⵠᐃⵠᐃ": "img/night-accessory91.png",
		"ΔΔⵠᐃΔᐃΔ": "img/day-accessory92.png",
		"ⲆΔΔΔⵠⲆᐃ": "img/night-accessory92.png",
		"ᐃⲆⵠᐃⲆⵠᐃ": "img/day-accessory93.png",
		"ᐃΔⵠⵠⲆᐃΔ": "img/night-accessory93.png",
		"ᐃⲆΔⵠᐃⲆⵠ": "img/day-accessory94.png",
		"ⵠᐃΔⵠⵠⵠⵠ": "img/night-accessory94.png",
		"ΔΔᐃⵠΔⲆᐃ": "img/day-accessory95.png",
		"ⲆᐃᐃⲆᐃⲆᐃ": "img/night-accessory95.png",
		"ⲆⵠⲆΔᐃᐃᐃ": "img/day-accessory96.png",
		"ⵠΔᐃᐃⲆⵠⲆ": "img/night-accessory96.png",
		"ⲆⲆΔΔΔⲆⵠ": "img/day-accessory97.png",
		"ΔΔΔⵠᐃᐃᐃ": "img/night-accessory97.png",
		"ⵠᐃᐃΔⲆⲆᐃ": "img/day-accessory98.png",
		"ΔΔⲆⵠⲆᐃⵠ": "img/night-accessory98.png",
		"ΔⵠⲆⲆΔⵠⵠ": "img/day-accessory99.png",
		"ⲆΔⲆⵠΔⵠΔ": "img/night-accessory99.png",
		"ᐃΔⵠⲆⵠⵠⵠ": "img/day-accessory100.png",
		"ⵠⲆᐃⵠⵠⲆᐃ": "img/night-accessory100.png",
		"ΔⵠᐃᐃᐃⲆΔ": "img/day-accessory101.png",
		"ⵠᐃᐃΔⵠᐃⵠ": "img/night-accessory101.png",
		"ΔⵠⲆⲆⵠⲆⵠ": "img/day-accessory102.png",
		"ΔΔⲆⲆⲆⵠᐃ": "img/night-accessory102.png",
		"ⵠⵠΔⵠⲆⲆᐃ": "img/day-accessory103.png",
		"ᐃΔΔᐃᐃⲆᐃ": "img/night-accessory103.png",
		"ⵠΔⵠᐃΔΔⲆ": "img/day-accessory104.png",
		"ⲆᐃᐃΔᐃΔⲆ": "img/night-accessory104.png",
		"ⵠᐃⲆⲆᐃΔⵠ": "img/day-accessory105.png",
		"ⲆⲆΔⲆΔⲆⲆ": "img/night-accessory105.png",
		"ⵠⲆⲆⵠᐃⵠᐃⲆⵠ": "img/day-accessory106.png",
		"ᐃΔΔⵠΔⲆⵠᐃΔ": "img/night-accessory106.png",
		"ⲆⵠΔΔᐃⲆⵠᐃⵠ": "img/day-accessory107.png",
		"ᐃΔᐃᐃᐃⲆⵠΔⲆ": "img/night-accessory107.png",
		"ⵠⵠΔⲆΔⲆⲆ": "img/day-accessory82.png",
		"ⵠⵠⵠⵠⲆΔⲆ": "img/night-accessory82.png",
		"ⲆⵠⲆΔΔᐃΔ": "img/day-book0.png",
		"ⵠⵠᐃⲆⲆⲆΔ": "img/night-book0.png",
		"Δⵠᐃⵠᐃⵠⵠ": "img/day-book1.png",
		"ᐃΔΔᐃⵠⵠⵠ": "img/night-book1.png",
		"ᐃᐃⵠΔΔⲆΔ": "img/day-book2.png",
		"ⲆⵠⵠΔΔⲆⲆ": "img/night-book2.png",
		"ⲆΔⲆΔΔᐃⲆ": "img/day-book3.png",
		"ᐃⲆⲆⵠⲆⵠΔ": "img/night-book3.png",
		"ΔⵠⲆΔⵠⲆΔ": "img/day-book4.png",
		"ⵠΔⲆⲆΔⵠΔ": "img/night-book4.png",
		"ⵠΔⲆΔⵠᐃΔ": "img/day-book5.png",
		"ⲆⵠΔᐃΔⵠⲆ": "img/night-book5.png",
		"ΔⲆⵠᐃΔⵠΔ": "img/day-book6.png",
		"ⲆΔΔⵠΔⲆᐃ": "img/night-book6.png",
		"ⲆΔΔⲆⵠⲆⲆ": "img/day-book7.png",
		"ⵠΔᐃⵠⵠⲆᐃ": "img/night-book7.png",
		"ΔⵠⲆΔⵠᐃᐃ": "img/day-book8.png",
		"ⲆⵠΔⲆΔⲆΔ": "img/night-book8.png",
		"ⵠⲆᐃᐃΔⵠᐃ": "img/day-book9.png",
		"ΔⲆⵠⲆᐃᐃΔ": "img/night-book9.png",
		"ᐃΔΔᐃⲆᐃᐃ": "img/day-book10.png",
		"ΔΔⵠΔΔⲆⲆ": "img/night-book10.png",
		"ⲆⵠᐃⵠΔⲆⲆ": "img/day-book11.png",
		"ΔⲆΔⵠᐃΔᐃ": "img/night-book11.png",
		"ΔⲆⵠⲆΔᐃᐃ": "img/day-book12.png",
		"ΔⲆⲆⲆᐃⲆⲆ": "img/night-book12.png",
		"ⵠΔΔⵠⲆΔⲆ": "img/day-book13.png",
		"ⵠΔΔⵠΔΔⵠ": "img/night-book13.png",
		"ⲆⲆⲆⵠᐃΔᐃ": "img/day-book14.png",
		"ⵠⵠΔᐃⲆⲆᐃ": "img/night-book14.png",
		"ⲆΔΔᐃᐃⵠᐃ": "img/day-book15.png",
		"ⲆⲆⵠⲆⵠⲆⵠ": "img/night-book15.png",
		"ΔⲆⲆΔΔΔᐃ": "img/day-book16.png",
		"ΔⵠΔᐃᐃΔⲆ": "img/night-book16.png",
		"ᐃⲆᐃᐃΔΔⵠ": "img/day-book17.png",
		"ΔⲆΔⲆⵠⲆⵠ": "img/night-book17.png",
		"ΔⵠⲆΔⵠⲆⵠ": "img/day-book18.png",
		"ΔᐃΔᐃΔᐃⲆ": "img/night-book18.png",
		"ⵠΔΔⵠⵠⲆᐃ": "img/day-book19.png",
		"ⲆⵠΔᐃⵠΔⲆ": "img/night-book19.png",
		"ᐃᐃᐃΔΔⵠⲆ": "img/day-book20.png",
		"ᐃᐃΔᐃⲆⵠⲆ": "img/night-book20.png",
		"ΔᐃΔᐃⵠⵠⵠ": "img/day-book21.png",
		"ᐃⵠⵠⵠᐃΔΔ": "img/night-book21.png",
		"ⲆᐃⵠᐃⲆⵠᐃ": "img/day-book22.png",
		"ⲆΔᐃⵠⵠⵠⵠ": "img/night-book22.png",
		"ⲆⲆᐃⵠⵠΔΔ": "img/day-book23.png",
		"ⲆⲆⵠΔⵠᐃᐃ": "img/night-book23.png",
		"ᐃΔᐃⲆⲆᐃⵠ": "img/day-book24.png",
		"ⵠⲆⵠⵠⵠΔᐃ": "img/night-book24.png",
		"ⵠⲆᐃⲆⵠⲆΔ": "img/day-book25.png",
		"ⲆΔᐃⵠΔⵠᐃ": "img/night-book25.png",
		"ⲆⲆⲆΔⲆⲆᐃ": "img/day-book26.png",
		"ᐃⵠΔⵠⲆⵠⵠ": "img/night-book26.png",
		"ⲆⵠⲆΔᐃⲆⵠ": "img/day-book27.png",
		"ⵠⵠⲆⵠᐃᐃᐃ": "img/night-book27.png",
		"ᐃᐃᐃΔΔᐃΔ": "img/day-book28.png",
		"ΔΔⵠⲆΔⲆⵠ": "img/night-book28.png",
		"ᐃⵠΔΔⵠᐃΔ": "img/day-book29.png",
		"ΔΔΔⵠΔⵠⵠ": "img/night-book29.png",
		"ΔⵠᐃⲆΔΔΔ": "img/day-book30.png",
		"ⲆⵠᐃΔᐃΔΔ": "img/night-book30.png",
		"ⲆⲆⲆⵠᐃⲆΔ": "img/day-book31.png",
		"ΔᐃⲆⵠᐃΔⲆ": "img/night-book31.png",
		"ΔᐃⵠⲆⲆⵠⵠ": "img/day-book32.png",
		"ⲆᐃⲆᐃⵠᐃⵠ": "img/night-book32.png",
		"ΔΔᐃΔΔΔᐃ": "img/day-book33.png",
		"ᐃⵠΔⵠᐃᐃⲆ": "img/night-book33.png",
		"ᐃΔⵠᐃΔⵠΔ": "img/day-book34.png",
		"ⲆⵠⲆᐃⲆΔⲆ": "img/night-book34.png",
		"ΔΔᐃⵠᐃΔⵠ": "img/day-book35.png",
		"ΔᐃⲆᐃᐃᐃᐃ": "img/night-book35.png",
		"ⲆΔΔΔΔΔΔ": "img/day-book36.png",
		"ᐃⵠⲆΔΔᐃΔ": "img/night-book36.png",
		"ΔⲆᐃⵠⲆⲆᐃⲆᐃ": "img/day-book37.png",
		"ᐃⵠᐃᐃᐃΔᐃΔΔ": "img/night-book37.png",
		"ΔⵠⵠΔⵠⲆᐃ": "img/day-book38.png",
		"ᐃΔⲆΔⲆⵠⵠ": "img/night-book38.png",
		"ᐃⲆⵠⵠⵠⵠⵠ": "img/day-book39.png",
		"ΔⲆⲆᐃᐃⵠⵠ": "img/night-book39.png",
		"ᐃᐃⲆⲆᐃΔᐃ": "img/day-book40.png",
		"ᐃΔⵠⲆⲆΔᐃ": "img/night-book40.png",
		"ⲆᐃⲆΔᐃΔⵠ": "img/day-book41.png",
		"ΔΔⵠᐃΔⵠⲆ": "img/night-book41.png",
		"ᐃⲆⲆⵠᐃⵠᐃ": "img/day-book42.png",
		"ΔΔΔⲆᐃⵠΔ": "img/night-book42.png",
		"ΔⵠΔᐃΔⵠⲆ": "img/day-book43.png",
		"ⵠⵠᐃᐃᐃᐃⲆ": "img/night-book43.png",
		"ΔᐃᐃΔⲆᐃⲆ": "img/day-book44.png",
		"ᐃⵠΔⵠⲆᐃⲆ": "img/night-book44.png",
		"ᐃᐃΔⲆΔΔⵠ": "img/day-book45.png",
		"ⵠΔΔᐃⵠⲆᐃ": "img/night-book45.png",
		"ⲆⲆΔⵠᐃᐃᐃ": "img/day-book46.png",
		"ᐃⲆⵠⵠᐃⲆΔ": "img/night-book46.png",
		"ΔⵠⲆΔᐃΔᐃ": "img/day-book47.png",
		"ⲆᐃⲆΔΔΔᐃ": "img/night-book47.png",
		"ᐃᐃⲆⵠΔᐃⵠ": "img/day-book48.png",
		"ᐃⲆⲆⵠⲆⲆΔ": "img/night-book48.png",
		"ΔΔΔⵠΔΔΔ": "img/day-book49.png",
		"ΔΔᐃᐃΔΔΔ": "img/night-book49.png",
		"ⵠᐃⵠᐃΔⲆⲆ": "img/day-book50.png",
		"ᐃⵠⵠⲆᐃΔΔ": "img/night-book50.png",
		"ᐃⲆⵠΔⵠΔⲆ": "img/day-crate1.png",
		"ΔᐃⲆⲆⲆΔⵠ": "img/night-crate1.png",
		"ΔΔΔⵠⵠⵠⲆ": "img/day-crate2.png",
		"ⲆⵠⲆΔⲆⲆᐃ": "img/night-crate2.png",
		"ⲆΔⵠⵠⵠᐃᐃ": "img/day-crate3.png",
		"ⲆⲆⵠᐃᐃΔⲆ": "img/night-crate3.png",
		"ᐃΔᐃᐃᐃΔⲆ": "img/day-crate4.png",
		"ΔΔⲆΔⵠΔᐃ": "img/night-crate4.png",
		"ΔⵠᐃⲆΔⲆⵠ": "img/day-crate5.png",
		"ΔᐃᐃᐃⲆΔΔ": "img/night-crate5.png",
		"ⵠᐃⵠⲆⵠΔⵠ": "img/day-crate6.png",
		"ⵠᐃΔΔⵠⲆᐃ": "img/night-crate6.png",
		"ΔⵠⲆⲆⵠⲆΔ": "img/day-crate7.png",
		"ΔΔⵠΔᐃⲆⲆ": "img/night-crate7.png",
		"ΔⲆⲆⵠⵠⵠᐃ": "img/day-crate8.png",
		"ⲆⵠⲆⲆⵠⵠⲆ": "img/night-crate8.png",
		"ΔⵠⲆⵠⲆᐃⲆ": "img/day-crate9.png",
		"ⵠᐃⵠⲆΔΔΔ": "img/night-crate9.png",
		"ⲆΔΔΔΔⵠⵠ": "img/day-crate10.png",
		"ᐃΔΔⲆⵠᐃΔ": "img/night-crate10.png",
		"ΔᐃΔᐃⵠⲆΔ": "img/day-crate11.png",
		"ᐃᐃⵠΔᐃᐃⲆ": "img/night-crate11.png",
		"ⵠⲆᐃⵠᐃⲆⵠ": "img/day-crate12.png",
		"ⵠΔᐃⵠΔᐃᐃ": "img/night-crate12.png",
		"ᐃⵠᐃΔⲆᐃᐃ": "img/day-crate13.png",
		"ⵠⲆⲆΔΔΔΔ": "img/night-crate13.png",
		"ᐃᐃⵠⵠⵠⲆΔ": "img/day-crate14.png",
		"ᐃⲆᐃᐃⲆΔⵠ": "img/night-crate14.png",
		"ⲆⲆᐃⵠΔΔⵠ": "img/day-crate15.png",
		"ᐃⲆⵠᐃᐃⲆⵠ": "img/night-crate15.png",
		"ᐃⲆⲆⵠΔᐃⲆ": "img/day-crate16.png",
		"ΔᐃᐃᐃⲆᐃⲆ": "img/night-crate16.png",
		"ᐃⵠⲆΔⵠΔⵠ": "img/day-crate17.png",
		"ᐃᐃⵠⵠᐃⵠⵠ": "img/night-crate17.png",
		"ΔΔⲆᐃⵠΔΔ": "img/day-crate18.png",
		"ⵠⵠᐃⲆᐃᐃⲆ": "img/night-crate18.png",
		"ⲆⲆΔⵠᐃⲆⲆ": "img/day-crate19.png",
		"ⵠⵠⲆᐃΔᐃⲆ": "img/night-crate19.png",
		"ⵠⵠΔᐃᐃᐃⵠ": "img/day-crate20.png",
		"ⵠⵠΔᐃⵠⵠⵠ": "img/night-crate20.png",
		"ΔΔᐃΔⲆⵠⵠ": "img/day-crate21.png",
		"ΔⲆⵠⵠΔΔⵠ": "img/night-crate21.png",
		"ᐃⲆΔⵠⵠᐃᐃ": "img/day-crate22.png",
		"ᐃΔⵠⲆᐃΔⵠ": "img/night-crate22.png",
		"ⵠᐃᐃⲆᐃᐃΔ": "img/day-crate23.png",
		"ᐃⲆΔⵠᐃᐃⲆ": "img/night-crate23.png",
		"ΔⲆⵠⲆᐃⲆⵠ": "img/day-crate24.png",
		"ⵠᐃⵠⲆⵠⲆⵠ": "img/night-crate24.png",
		"ⵠⲆⵠΔᐃΔⲆ": "img/day-crate25.png",
		"ⲆΔΔᐃΔΔΔ": "img/night-crate25.png",
		"ΔⲆΔⲆⵠΔⲆ": "img/day-crate26.png",
		"ⵠΔⲆᐃⵠᐃᐃ": "img/night-crate26.png",
		"ⵠᐃⵠⲆᐃΔᐃ": "img/day-crate27.png",
		"ⲆΔⲆᐃᐃᐃΔ": "img/night-crate27.png",
		"ⲆⵠᐃᐃΔᐃΔ": "img/day-crate28.png",
		"ⵠⵠⵠΔⵠᐃᐃ": "img/night-crate28.png",
		"ᐃⲆⲆⲆΔⵠⲆ": "img/day-crate29.png",
		"ⵠᐃᐃⲆᐃⲆΔ": "img/night-crate29.png",
		"ᐃᐃⵠⵠᐃⵠΔ": "img/day-crate30.png",
		"ⲆⲆⲆΔΔᐃᐃ": "img/night-crate30.png",
		"ΔⵠⲆⲆᐃᐃᐃ": "img/day-crate31.png",
		"ᐃⵠⵠΔᐃΔⵠ": "img/night-crate31.png",
		"ⵠΔⵠⵠⵠⵠΔ": "img/day-crate32.png",
		"ⲆᐃΔᐃΔΔΔ": "img/night-crate32.png",
		"ΔⲆᐃⲆᐃΔΔ": "img/day-crate33.png",
		"ΔⲆⵠΔᐃⵠⲆ": "img/night-crate33.png",
		"ⲆᐃⵠᐃⵠⲆᐃ": "img/day-crate34.png",
		"ⵠᐃᐃⲆⲆᐃᐃ": "img/night-crate34.png",
		"ⲆⲆΔΔΔⲆᐃ": "img/day-crate35.png",
		"ⵠⲆⵠⵠΔⵠⵠ": "img/night-crate35.png",
		"ᐃⲆᐃΔᐃΔⲆ": "img/day-crate36.png",
		"ⵠΔᐃⵠⲆΔⲆ": "img/night-crate36.png",
		"ΔΔᐃⲆᐃᐃⲆ": "img/day-crate37.png",
		"ΔⵠΔΔΔΔᐃ": "img/night-crate37.png",
		"ⲆⵠᐃⲆΔΔΔ": "img/day-crate38.png",
		"ΔᐃᐃᐃⵠᐃΔ": "img/night-crate38.png",
		"ᐃᐃΔⲆᐃᐃⲆ": "img/day-crate39.png",
		"ᐃᐃΔⲆᐃΔⵠ": "img/night-crate39.png",
		"ⲆⵠⵠΔⲆⲆⲆ": "img/day-crate40.png",
		"ⵠⵠⲆⵠⵠΔⵠ": "img/night-crate40.png",
		"ᐃΔΔᐃΔᐃⲆ": "img/day-crate41.png",
		"ⵠᐃⵠΔΔΔⲆ": "img/night-crate41.png",
		"ⲆⲆᐃⵠⵠⵠᐃ": "img/day-crate42.png",
		"ⲆΔⲆⵠⲆΔⵠ": "img/night-crate42.png",
		"Ⲇⵠᐃᐃⵠⵠᐃ": "img/day-crate43.png",
		"ΔⲆᐃᐃΔⵠⲆ": "img/night-crate43.png",
		"ᐃΔⲆΔΔᐃΔ": "img/day-crate44.png",
		"ⲆΔᐃΔⵠⲆΔ": "img/night-crate44.png",
		"ⲆⲆⲆⵠⵠⵠⵠ": "img/day-crate45.png",
		"ⵠΔᐃⲆⵠΔΔ": "img/night-crate45.png",
		"ΔⲆᐃᐃⵠΔΔ": "img/day-crate46.png",
		"ᐃⵠΔᐃᐃⵠⵠ": "img/night-crate46.png",
		"ⲆⵠΔΔⵠᐃΔ": "img/day-crate47.png",
		"ᐃᐃΔᐃᐃᐃᐃ": "img/night-crate47.png",
		"ᐃᐃᐃΔΔΔⲆ": "img/day-crate48.png",
		"Ⲇⵠᐃᐃᐃᐃⵠ": "img/night-crate48.png",
		"ᐃΔΔᐃⲆᐃⲆ": "img/day-crate49.png",
		"ΔΔΔⵠΔᐃᐃ": "img/night-crate49.png",
		"ⵠᐃⲆᐃΔΔⵠ": "img/day-crate50.png",
		"ⵠⲆᐃⵠⲆΔᐃ": "img/night-crate50.png",
		"ᐃΔᐃΔᐃΔᐃ": "img/day-crate51.png",
		"ΔΔᐃⵠⲆⵠⲆ": "img/night-crate51.png",
		"ⵠᐃΔⵠᐃᐃⵠ": "img/day-crate52.png",
		"ΔΔᐃⵠⵠᐃⵠ": "img/night-crate52.png",
		"ᐃⲆΔᐃᐃⵠⲆ": "img/day-crate53.png",
		"ᐃⵠᐃⵠⵠΔⲆ": "img/night-crate53.png",
		"ΔⲆΔᐃⵠⵠⵠ": "img/day-crate54.png",
		"ᐃᐃⲆᐃᐃᐃⵠ": "img/night-crate54.png",
		"ⲆΔⲆᐃⵠⲆⵠ": "img/day-crate55.png",
		"ᐃᐃᐃᐃⲆⵠⵠ": "img/night-crate55.png",
		"ΔⲆᐃᐃⲆⵠⲆ": "img/day-crate56.png",
		"ⵠⲆΔᐃⲆΔⲆ": "img/night-crate56.png",
		"ΔᐃⵠⲆⲆᐃΔ": "img/day-crate57.png",
		"ᐃⲆⵠⵠⲆⲆΔ": "img/night-crate57.png",
		"ΔᐃΔᐃᐃᐃΔ": "img/day-crate58.png",
		"ᐃᐃΔᐃΔΔᐃ": "img/night-crate58.png",
		"ⵠⲆᐃⲆⲆᐃΔ": "img/day-crate59.png",
		"ⲆΔᐃᐃᐃᐃⲆ": "img/night-crate59.png",
		"ΔᐃᐃⵠᐃⲆΔ": "img/day-crate60.png",
		"ⵠⲆⵠΔᐃⵠⵠ": "img/night-crate60.png",
		"ⲆΔⵠⲆᐃⵠᐃ": "img/day-crate61.png",
		"ⲆⲆⵠⲆⲆΔⲆ": "img/night-crate61.png",
		"ΔΔᐃᐃⵠⲆΔ": "img/day-crate62.png",
		"ᐃⲆᐃⲆⵠᐃⵠ": "img/night-crate62.png",
		"ⲆᐃⵠⲆᐃᐃᐃ": "img/day-crate63.png",
		"ⲆⵠⲆⵠΔⵠᐃ": "img/night-crate63.png",
		"ⵠΔⵠⲆᐃⵠⲆ": "img/day-crate64.png",
		"ᐃⵠⵠΔΔⵠΔ": "img/night-crate64.png",
		"ⲆⲆⵠΔΔΔΔ": "img/day-crate65.png",
		"ⵠⲆⲆⵠᐃⵠΔ": "img/night-crate65.png",
		"ⲆⵠΔΔᐃⵠⲆ": "img/day-crate66.png",
		"ⵠⲆΔΔΔΔᐃ": "img/night-crate66.png",
		"ᐃΔⲆⲆⲆⲆΔ": "img/day-crate67.png",
		"ⵠⲆΔⲆᐃᐃⵠ": "img/night-crate67.png",
		"ⲆᐃΔΔⵠⵠᐃ": "img/day-crate68.png",
		"ΔⵠᐃⲆⲆᐃᐃ": "img/night-crate68.png",
		"ᐃⵠΔᐃⲆⲆⵠ": "img/day-crate69.png",
		"ⵠΔⲆⲆᐃᐃΔ": "img/night-crate69.png",
		"ᐃΔⵠⲆⲆⵠΔ": "img/day-crate70.png",
		"ⵠⲆⵠᐃᐃⵠⵠ": "img/night-crate70.png",
		"ⵠΔΔᐃⲆᐃᐃ": "img/day-crate71.png",
		"ᐃⵠⵠⵠⲆᐃᐃ": "img/night-crate71.png",
		"ⲆᐃⲆⲆᐃᐃᐃ": "img/day-crate72.png",
		"ⲆⲆⵠᐃΔⲆᐃ": "img/night-crate72.png",
		"ⵠⲆⲆᐃⲆᐃᐃ": "img/day-crate73.png",
		"ⲆⲆᐃᐃⵠᐃᐃ": "img/night-crate73.png",
		"ΔΔⲆⵠⲆΔⵠ": "img/day-crate74.png",
		"ⲆⲆⵠᐃΔΔᐃ": "img/night-crate74.png",
		"ⵠᐃΔΔΔⲆⵠ": "img/day-crate75.png",
		"ⲆΔⵠⲆⲆΔΔ": "img/night-crate75.png",
		"ⲆⲆⵠΔΔΔᐃ": "img/day-crate76.png",
		"ᐃᐃⵠⵠⲆⵠΔ": "img/night-crate76.png",
		"ⲆΔᐃⲆⲆᐃⲆ": "img/day-crate77.png",
		"ᐃΔⲆⵠⵠⲆⵠ": "img/night-crate77.png",
		"ΔⲆΔΔΔⲆⲆ": "img/day-crate78.png",
		"ⵠᐃΔⵠΔⵠⲆ": "img/night-crate78.png",
		"ⵠⵠⵠᐃⵠⵠⲆ": "img/day-crate79.png",
		"ΔΔⲆⵠᐃⵠΔ": "img/night-crate79.png",
		"ᐃⲆΔᐃⲆⵠⵠ": "img/day-herb0.png",
		"ⵠΔⲆⲆΔⵠⵠ": "img/day-herb1.png",
		"ⲆⲆⵠΔΔΔⲆ": "img/day-herb2.png",
		"ᐃⵠⲆᐃᐃⲆΔ": "img/day-herb3.png",
		"ᐃΔΔⲆΔΔⲆ": "img/day-herb4.png",
		"ᐃⵠⵠⵠΔⵠΔ": "img/day-herb5.png",
		"ⲆΔΔⵠᐃⵠᐃ": "img/day-herb6.png",
		"ᐃⵠᐃᐃⲆΔᐃ": "img/day-herb7.png",
		"ⵠΔᐃΔΔⵠΔ": "img/day-herb8.png",
		"ΔΔⲆΔⲆᐃᐃ": "img/day-herb9.png",
		"ⵠⵠⵠⲆⵠⲆⲆ": "img/day-herb10.png",
		"ⲆΔⵠΔⲆΔⲆ": "img/day-herb11.png",
		"ⲆⵠΔⵠΔΔⵠ": "img/day-herb12.png",
		"ⵠⲆᐃⵠᐃᐃⲆ": "img/day-herb13.png",
		"ΔΔⲆⲆⵠΔᐃ": "img/day-herb14.png",
		"ⵠΔΔⲆΔⵠΔ": "img/day-herb15.png",
		"ΔⵠⲆⲆⲆᐃⲆ": "img/day-shell0.png",
		"ΔⲆⵠⲆⲆⵠⲆ": "img/day-shell1.png",
		"ᐃΔⵠⵠⲆⵠᐃ": "img/day-shell2.png",
		"ⲆΔⵠᐃᐃⵠⲆ": "img/day-leaf1.png",
		"ⵠⲆⲆᐃⵠⵠᐃ": "img/day-leaf2.png",
		"ΔⲆⵠⲆⲆᐃⵠ": "img/day-leaf3.png",
		"ᐃⲆⵠΔΔᐃᐃ": "img/day-leaf4.png",
		"ᐃⲆⵠⲆᐃⲆΔ": "img/day-leaf5.png",
		"ΔΔᐃⲆⲆⲆᐃ": "img/day-leaf6.png",
		"ⲆⲆΔⲆⵠᐃΔ": "img/day-leaf7.png",
		"ΔᐃⲆⲆΔΔⵠ": "img/day-leaf8.png",
		"ⵠⲆΔⵠᐃΔΔ": "img/day-rock0.png",
		"ⲆⵠⲆᐃΔⲆΔ": "img/day-rock1.png",
		"ⵠⵠⵠⲆᐃⵠⲆ": "img/day-rock2.png",
		"ⲆⵠⵠΔᐃᐃⲆ": "img/day-rock3.png",
		"ΔⲆⲆΔΔᐃⵠ": "img/day-rock4.png",
		"ΔΔΔⵠΔΔⵠ": "img/day-rock5.png",
		"ΔᐃᐃⲆΔᐃⵠ": "img/day-rock6.png",
		"ⵠΔⵠΔⲆⲆᐃ": "img/day-rock7.png",
		"ⵠᐃⵠΔⲆΔⵠ": "img/day-rock8.png",
		"ⵠΔⲆᐃΔΔⵠ": "img/day-rock9.png",
		"ⵠᐃⲆΔⵠΔᐃ": "img/day-rock10.png",
		"ⲆΔⲆⵠⲆⵠᐃ": "img/day-rock11.png",
		"ᐃⲆⵠⲆⲆΔᐃ": "img/day-rock12.png",
		"ⲆᐃᐃⵠⵠⲆⲆ": "img/day-rock13.png",
		"ⵠⵠΔᐃⲆΔΔ": "img/day-flower1.png",
		"ΔⲆⵠⲆⵠⲆⲆ": "img/day-flower2.png",
		"ⲆⵠᐃΔᐃⵠΔ": "img/day-flower3.png",
		"ΔΔⵠΔⲆⵠⵠ": "img/day-flower4.png",
		"ⲆᐃΔⵠΔⵠⲆ": "img/day-flower5.png",
		"Ⲇⵠᐃᐃᐃᐃᐃ": "img/day-flower6.png",
		"ⵠᐃᐃᐃⵠΔᐃ": "img/day-flower7.png",
		"ⵠⲆⲆⲆⲆⵠᐃ": "img/day-flower8.png",
		"ⲆⵠⲆΔⵠⲆⲆ": "img/day-flower9.png",
		"ΔⲆⵠⵠᐃΔⵠ": "img/day-herb16.png",
		"ⲆⵠΔᐃΔᐃΔ": "img/day-herb17.png",
		"ᐃᐃⲆⵠⵠⲆⲆ": "img/day-herb18.png",
		"ᐃΔΔᐃⵠᐃΔ": "img/day-herb19.png",
		"ΔⲆⲆᐃⵠⲆⲆ": "img/day-herb20.png",
		"ΔᐃᐃᐃⲆᐃᐃ": "img/day-herb21.png",
		"ⲆΔⲆᐃⲆⲆΔ": "img/night-herb0.png",
		"ᐃⵠⵠᐃΔⵠⲆ": "img/night-herb1.png",
		"ᐃᐃΔΔⲆᐃᐃ": "img/night-herb2.png",
		"ΔΔⲆⵠΔⵠᐃ": "img/night-herb3.png",
		"ⲆⲆⲆΔⵠⲆᐃ": "img/night-herb4.png",
		"ⲆⵠⵠᐃΔᐃⵠ": "img/night-herb5.png",
		"ᐃᐃΔΔΔΔΔ": "img/night-herb6.png",
		"ᐃⵠᐃΔⵠᐃⲆ": "img/night-herb7.png",
		"ⵠΔΔⵠᐃⲆᐃ": "img/night-herb8.png",
		"ᐃᐃᐃⵠᐃⵠⲆ": "img/night-herb9.png",
		"ᐃΔᐃᐃᐃΔΔ": "img/night-herb10.png",
		"ⵠᐃⵠΔⲆΔᐃ": "img/night-herb11.png",
		"ⵠⵠᐃᐃⵠⲆⵠ": "img/night-herb12.png",
		"ΔⵠⲆⲆᐃΔⵠ": "img/night-herb13.png",
		"ⲆⲆⲆⵠⵠᐃⲆ": "img/night-herb14.png",
		"ⲆΔᐃΔⵠΔⲆ": "img/night-herb15.png",
		"ⲆΔΔⵠⲆⲆᐃ": "img/night-shell0.png",
		"ⵠⲆⲆⵠⲆΔΔ": "img/night-shell1.png",
		"ⲆⲆⲆⵠᐃⲆᐃ": "img/night-shell2.png",
		"ⵠⲆⲆⲆΔⵠΔ": "img/night-leaf1.png",
		"ⵠⲆᐃΔⲆⲆᐃ": "img/night-leaf2.png",
		"ⵠᐃᐃⲆⲆᐃⵠ": "img/night-leaf3.png",
		"ΔΔᐃⵠᐃΔⲆ": "img/night-leaf4.png",
		"ΔⵠⲆΔⲆⲆⲆ": "img/night-leaf5.png",
		"ᐃᐃΔΔᐃⲆⲆ": "img/night-leaf6.png",
		"ⲆᐃⲆⲆⵠᐃⵠ": "img/night-leaf7.png",
		"ᐃⲆᐃΔⲆᐃΔ": "img/night-leaf8.png",
		"ⵠⲆⵠΔᐃᐃΔ": "img/night-rock0.png",
		"ᐃΔⲆΔΔⲆⵠ": "img/night-rock1.png",
		"ⵠⵠΔᐃⵠⵠᐃ": "img/night-rock2.png",
		"ⵠΔΔⲆᐃⲆΔ": "img/night-rock3.png",
		"ΔⲆⲆⲆΔⲆⲆ": "img/night-rock4.png",
		"ⲆⲆⲆⵠᐃⵠΔ": "img/night-rock5.png",
		"ᐃⲆᐃⵠⲆΔΔ": "img/night-rock6.png",
		"ᐃΔΔⲆᐃΔⲆ": "img/night-rock7.png",
		"ΔᐃᐃⲆᐃΔΔ": "img/night-rock8.png",
		"ᐃⵠΔᐃⵠⵠⵠ": "img/night-rock9.png",
		"ᐃΔⲆⵠᐃΔᐃ": "img/night-rock10.png",
		"ᐃⲆⵠᐃᐃⵠᐃ": "img/night-rock11.png",
		"ⲆᐃΔⲆⵠΔⲆ": "img/night-rock12.png",
		"ᐃⵠᐃⵠΔⲆᐃ": "img/night-rock13.png",
		"ⲆⲆΔⲆᐃᐃⲆ": "img/night-flower1.png",
		"ⲆⵠⵠΔⵠΔⵠ": "img/night-flower2.png",
		"ⲆᐃⵠᐃᐃΔⵠ": "img/night-flower3.png",
		"ⲆΔᐃⵠΔⵠΔ": "img/night-flower4.png",
		"ΔⵠΔᐃᐃᐃᐃ": "img/night-flower5.png",
		"ΔΔᐃᐃⲆΔⵠ": "img/night-flower6.png",
		"ΔⲆⵠⲆⵠΔΔ": "img/night-flower7.png",
		"ⵠᐃⲆⵠΔⲆⵠ": "img/night-flower8.png",
		"ⵠⵠⵠᐃᐃᐃⵠ": "img/night-flower9.png",
		"ᐃⵠⲆᐃⲆᐃΔ": "img/night-herb16.png",
		"ⲆⵠΔⵠⵠΔⲆ": "img/night-herb17.png",
		"ᐃⵠⵠᐃⲆΔᐃ": "img/night-herb18.png",
		"ᐃΔⲆⲆⲆⲆⲆ": "img/night-herb19.png",
		"ᐃᐃⲆⵠⲆᐃΔ": "img/night-herb20.png",
		"ⲆΔⲆⵠᐃᐃⲆ": "img/night-herb21.png",
		"ᐃⲆᐃⵠⲆᐃⲆ": "img/day-river000-010-000.png",
		"ⵠⲆᐃⵠⲆⵠΔ": "img/day-river000-010-010.png",
		"ᐃⵠᐃⵠΔᐃΔ": "img/day-river000-011-000.png",
		"ⲆᐃΔⲆⲆⲆᐃ": "img/day-river000-011-010.png",
		"ΔᐃⵠⵠⵠⵠⲆ": "img/day-river000-011-011.png",
		"ᐃᐃᐃⲆⲆⵠᐃ": "img/day-river000-110-000.png",
		"ᐃΔⲆⵠⲆᐃⲆ": "img/day-river000-110-010.png",
		"ΔⵠΔᐃᐃΔΔ": "img/day-river000-110-110.png",
		"ⲆⲆⵠᐃⲆⲆⲆ": "img/day-river000-111-000.png",
		"ᐃⲆΔᐃⵠⵠΔ": "img/day-river000-111-010.png",
		"ⵠΔⵠᐃⲆᐃΔ": "img/day-river000-111-011.png",
		"ⵠΔⲆⵠⵠⲆⲆ": "img/day-river000-111-110.png",
		"ΔⵠⲆᐃⲆⵠᐃ": "img/day-river000-111-111.png",
		"ⵠᐃⵠⵠⵠⵠⵠ": "img/day-river010-010-000.png",
		"ⲆⵠΔⲆⲆᐃⵠ": "img/day-river010-010-010.png",
		"ΔⵠᐃΔⵠⵠᐃ": "img/day-river010-011-000.png",
		"ΔⵠⲆᐃᐃΔΔ": "img/day-river010-011-010.png",
		"ⵠᐃⲆⲆⲆⵠΔ": "img/day-river010-011-011.png",
		"ᐃΔⵠⵠⵠΔΔ": "img/day-river010-110-000.png",
		"ⵠᐃᐃΔΔⵠⵠ": "img/day-river010-110-010.png",
		"ⵠᐃᐃⵠⲆΔⵠ": "img/day-river010-110-110.png",
		"ΔⲆΔΔⲆΔⲆ": "img/day-river010-111-000.png",
		"ⲆΔⲆⵠⵠⲆⵠ": "img/day-river010-111-010.png",
		"ᐃⵠⵠⵠⵠΔΔ": "img/day-river010-111-011.png",
		"ΔⲆᐃⲆⵠⵠᐃ": "img/day-river010-111-110.png",
		"ⲆΔⵠΔⵠⲆᐃ": "img/day-river010-111-111.png",
		"ⲆⵠⲆⲆΔΔⲆ": "img/day-river011-011-000.png",
		"ΔΔⵠΔⲆⵠΔ": "img/day-river011-011-010.png",
		"ᐃⵠΔᐃᐃⲆᐃ": "img/day-river011-011-011.png",
		"ⲆΔⲆᐃⲆΔⵠ": "img/day-river011-111-000.png",
		"ⵠᐃᐃⵠΔΔⲆ": "img/day-river011-111-010.png",
		"ⲆΔΔⲆΔⵠⵠ": "img/day-river011-111-011.png",
		"ⵠⲆᐃⲆΔΔⲆ": "img/day-river011-111-110.png",
		"ⲆⵠΔⲆⵠᐃⵠ": "img/day-river011-111-111.png",
		"ΔⵠⲆⲆⲆᐃⵠ": "img/day-river110-110-000.png",
		"ᐃⲆΔⵠΔⵠⲆ": "img/day-river110-110-010.png",
		"ᐃⲆΔⵠΔᐃⵠ": "img/day-river110-110-110.png",
		"ⲆΔΔⲆⲆⲆⵠ": "img/day-river110-111-000.png",
		"ᐃⵠⵠΔⲆΔᐃⲆᐃ": "img/day-river110-111-010.png",
		"ⲆΔᐃΔΔⵠΔⵠⵠ": "img/day-river110-111-011.png",
		"ⲆΔⵠᐃᐃⲆⲆᐃᐃ": "img/day-river110-111-110.png",
		"ΔⵠᐃⲆⵠΔⵠⵠᐃ": "img/day-river110-111-111.png",
		"ⲆⵠᐃᐃΔΔⵠ": "img/day-river111-111-011.png",
		"ᐃⲆΔⵠᐃⵠᐃⲆΔ": "img/day-river111-111-110.png",
		"ⲆⵠᐃᐃΔΔⵠ": "img/day-river111-111-011.png",
		"ΔⲆᐃⵠⵠⵠᐃΔᐃ": "img/day-river111-111-000.png",
		"ΔΔⲆⵠⵠⵠⲆΔⲆ": "img/day-river111-111-111.png",
		"ΔᐃΔⵠⲆⵠᐃᐃⵠ": "img/day-river111-111-010.png",
		"ΔⲆᐃⲆᐃⵠⵠⲆᐃ": "img/night-river000-010-000.png",
		"ΔᐃⵠⵠⲆᐃⵠΔⵠ": "img/night-river000-010-010.png",
		"ΔⵠᐃⲆΔᐃΔΔᐃ": "img/night-river000-011-000.png",
		"ᐃᐃᐃΔⲆΔⲆΔᐃ": "img/night-river000-011-010.png",
		"ᐃΔⵠⵠⵠⵠᐃⲆᐃ": "img/night-river000-011-011.png",
		"ⲆⵠΔᐃⵠⲆⵠⵠⲆ": "img/night-river000-110-000.png",
		"ΔⵠⵠΔᐃΔΔᐃᐃ": "img/night-river000-110-010.png",
		"ΔᐃᐃⵠⵠⲆΔΔⵠ": "img/night-river000-110-110.png",
		"ⲆΔΔⲆⵠⵠⵠᐃᐃ": "img/night-river000-111-000.png",
		"ⵠᐃⲆᐃⲆⲆᐃᐃⵠ": "img/night-river000-111-010.png",
		"ⲆΔᐃⵠⲆⵠΔⲆⲆ": "img/night-river000-111-011.png",
		"ⵠᐃᐃᐃⲆΔⲆⵠⲆ": "img/night-river000-111-110.png",
		"ⲆⵠᐃΔΔΔᐃΔΔ": "img/night-river000-111-111.png",
		"ⵠΔᐃᐃᐃᐃΔⲆᐃ": "img/night-river010-010-000.png",
		"ΔⵠⵠⲆΔᐃⲆⲆⵠ": "img/night-river010-010-010.png",
		"ⵠΔΔΔΔⵠⵠᐃᐃ": "img/night-river010-011-000.png",
		"ᐃΔⵠΔⵠⵠⲆⲆΔ": "img/night-river010-011-010.png",
		"ᐃᐃⵠᐃᐃΔΔⵠⲆ": "img/night-river010-011-011.png",
		"ᐃⲆΔⵠⲆⲆⲆⵠⲆ": "img/night-river010-110-000.png",
		"ᐃΔⲆⲆⵠⲆᐃⵠⵠ": "img/night-river010-110-010.png",
		"ⲆⵠⲆⵠⵠⲆⲆᐃᐃ": "img/night-river010-110-110.png",
		"ΔΔΔⲆⵠⲆΔΔⲆ": "img/night-river010-111-000.png",
		"ᐃⵠⵠⵠΔⲆᐃᐃᐃ": "img/night-river010-111-010.png",
		"ⵠⵠᐃΔΔᐃⵠΔᐃ": "img/night-river010-111-011.png",
		"ΔⲆᐃᐃᐃⵠⲆⵠΔ": "img/night-river010-111-110.png",
		"ⵠΔᐃⲆⲆⲆᐃⵠΔ": "img/night-river010-111-111.png",
		"ⲆΔᐃⵠⵠⵠⲆΔᐃ": "img/night-river011-011-000.png",
		"ᐃᐃΔᐃⲆΔⲆⵠⵠ": "img/night-river011-011-010.png",
		"ⲆᐃΔⵠΔᐃᐃΔⵠ": "img/night-river011-011-011.png",
		"ᐃⵠΔⲆⵠΔΔⵠⲆ": "img/night-river011-111-000.png",
		"ⲆᐃⲆΔᐃⲆⲆⵠᐃ": "img/night-river011-111-010.png",
		"ⲆᐃᐃᐃΔⲆⲆⵠᐃ": "img/night-river011-111-011.png",
		"ⲆⲆⵠᐃᐃᐃΔᐃⵠ": "img/night-river011-111-110.png",
		"ⲆΔᐃΔⵠⲆⵠᐃΔ": "img/night-river011-111-111.png",
		"ΔⵠⲆⵠᐃⲆᐃⵠⲆ": "img/night-river110-110-000.png",
		"ⵠⲆⲆᐃᐃⵠⲆᐃᐃ": "img/night-river110-110-010.png",
		"ᐃⵠⲆΔΔᐃⵠⵠⲆ": "img/night-river110-110-110.png",
		"ⲆΔⵠⲆⲆⵠᐃΔⲆ": "img/night-river110-111-000.png",
		"ⲆΔᐃΔⲆᐃⵠᐃⲆ": "img/night-river110-111-010.png",
		"ᐃⲆΔⵠΔⲆⵠⲆⵠ": "img/night-river110-111-011.png",
		"ΔΔΔⲆᐃᐃᐃΔⵠ": "img/night-river110-111-110.png",
		"ᐃⲆⵠΔΔⲆⲆᐃᐃ": "img/night-river110-111-111.png",
		"ⵠⲆⵠΔᐃⲆⲆ": "img/night-river111-111-011.png",
		"ᐃᐃΔΔⲆᐃⲆⵠⵠ": "img/night-river111-111-110.png",
		"ⵠⲆⵠΔᐃⲆⲆ": "img/night-river111-111-011.png",
		"ⲆΔᐃΔᐃⵠⲆᐃᐃ": "img/night-river111-111-000.png",
		"ⵠᐃⲆΔΔᐃⵠⵠⲆ": "img/night-river111-111-111.png",
		"ᐃᐃΔᐃⵠᐃΔΔᐃ": "img/night-river111-111-010.png",
		"ΔⲆⲆΔⲆⵠⲆ": "img/day-pebblecompo1.png",
		"ⵠΔΔΔᐃ": "img/day-pebblecompo2.png",
		"ⵠᐃΔⲆⵠ": "img/day-pebblecompo3.png",
		"ⲆᐃⲆΔⲆΔⲆ": "img/day-pebblecompo4.png",
		"ⲆΔΔΔⵠ": "img/day-pebblecompo5.png",
		"ΔⵠΔᐃᐃ": "img/day-pebblecompo6.png",
		"ΔⵠⲆᐃᐃ": "img/day-pebblecompo7.png",
		"ⵠⲆᐃΔᐃΔᐃᐃΔ": "img/day-pebblecompo8.png",
		"ΔⲆΔⵠⲆⲆΔ": "img/day-pebblecompo9.png",
		"ΔⲆⲆᐃⲆΔᐃ": "img/day-pebblecompo10.png",
		"ᐃᐃΔᐃⵠ": "img/day-pebblecompo11.png",
		"ΔⲆⵠΔⲆⲆΔ": "img/day-pebblecompo12.png",
		"ⵠᐃᐃΔᐃᐃΔ": "img/day-pebblecompo13.png",
		"ᐃᐃⵠⵠⲆΔᐃ": "img/day-pebblecompo14.png",
		"ⲆⵠⲆⲆΔⵠΔ": "img/day-pebblecompo15.png",
		"ⵠⵠᐃΔⵠⲆΔ": "img/day-pebblecompo16.png",
		"ⲆⵠⵠⵠΔ": "img/day-pebblecompo17.png",
		"ᐃⵠⲆⵠⲆΔⵠ": "img/day-pebblecompo18.png",
		"ΔᐃᐃⵠᐃΔΔ": "img/day-pebblecompo19.png",
		"ⵠⵠΔⵠⲆ": "img/day-pebblecompo20.png",
		"ⵠⲆⲆⲆⲆ": "img/day-pebblecompo21.png",
		"ⵠⲆⵠⲆᐃⲆⵠ": "img/day-pebblecompo22.png",
		"ⲆᐃᐃⲆΔᐃΔ": "img/day-pebblecompo23.png",
		"ⵠⲆⵠⵠⵠⵠⲆ": "img/day-pebblecompo24.png",
		"ⵠᐃᐃⲆᐃ": "img/day-pebblecompo25.png",
		"ⲆΔΔᐃⲆ": "img/day-pebblecompo26.png",
		"ᐃΔᐃⲆΔⵠⵠ": "img/day-pebblecompo27.png",
		"ΔΔΔᐃΔ": "img/day-pebblecompo28.png",
		"ᐃΔΔᐃⲆⲆΔ": "img/night-pebblecompo1.png",
		"ᐃᐃΔΔᐃ": "img/night-pebblecompo2.png",
		"ᐃᐃᐃⲆᐃ": "img/night-pebblecompo3.png",
		"ⲆⲆⲆᐃⵠΔⲆ": "img/night-pebblecompo4.png",
		"ΔⵠΔⵠⲆ": "img/night-pebblecompo5.png",
		"ⵠᐃⲆⲆᐃ": "img/night-pebblecompo6.png",
		"Δᐃᐃᐃⵠ": "img/night-pebblecompo7.png",
		"ⵠΔΔⲆⵠΔᐃⵠⲆ": "img/night-pebblecompo8.png",
		"ᐃⲆΔΔΔΔΔ": "img/night-pebblecompo9.png",
		"ⵠᐃᐃΔⲆᐃΔ": "img/night-pebblecompo10.png",
		"ᐃΔⵠᐃΔ": "img/night-pebblecompo11.png",
		"ΔⵠⵠᐃᐃᐃⲆ": "img/night-pebblecompo12.png",
		"ΔᐃΔΔΔᐃΔ": "img/night-pebblecompo13.png",
		"ⲆΔⵠⲆᐃΔᐃ": "img/night-pebblecompo14.png",
		"ᐃΔⲆⵠⵠΔΔ": "img/night-pebblecompo15.png",
		"ᐃᐃⵠᐃⲆᐃᐃ": "img/night-pebblecompo16.png",
		"ΔⲆⵠⵠⵠ": "img/night-pebblecompo17.png",
		"ⵠᐃᐃⲆⵠΔᐃ": "img/night-pebblecompo18.png",
		"ⵠΔⲆᐃⲆⲆᐃ": "img/night-pebblecompo19.png",
		"ᐃⵠⵠⵠΔ": "img/night-pebblecompo20.png",
		"ᐃⵠⵠⲆΔ": "img/night-pebblecompo21.png",
		"ΔⲆⲆⲆⲆᐃᐃ": "img/night-pebblecompo22.png",
		"ΔᐃΔⵠΔⲆⵠ": "img/night-pebblecompo23.png",
		"ⵠⵠΔⵠⵠⵠⲆ": "img/night-pebblecompo24.png",
		"ᐃΔⲆᐃΔ": "img/night-pebblecompo25.png",
		"ᐃⲆΔⵠⵠ": "img/night-pebblecompo26.png",
		"ᐃᐃⵠⲆΔⵠᐃ": "img/night-pebblecompo27.png",
		"ⲆⵠⲆⵠΔ": "img/night-pebblecompo28.png",
		"ΔᐃᐃⵠΔΔⲆⲆΔ": "img/day-baby-mammoth.png",
		"ⵠΔΔⵠᐃΔᐃᐃⵠ": "img/day-baby-mammoth-tamed.png",
		"ⲆⵠΔⵠⲆⲆΔⵠⵠ": "img/day-baby-mammoth-angry.png",
		"ΔᐃⵠᐃΔᐃⲆⲆⵠ": "img/night-baby-mammoth.png",
		"ᐃⲆΔᐃⲆᐃⲆⲆᐃ": "img/night-baby-mammoth-tamed.png",
		"ⵠⵠΔΔⲆᐃⵠΔⲆ": "img/night-baby-mammoth-angry.png",
		"ᐃᐃⵠᐃⵠⲆⲆⲆᐃ": "img/inv-mammoth-out.png",
		"ΔⲆΔⵠⲆⲆⲆΔΔ": "img/inv-mammoth-in.png",
		"ΔΔⲆΔᐃⵠᐃΔΔ": "img/inv-mammoth-click.png",
		"ⲆⲆⲆⵠⵠⲆⵠ": "img/hurt-baby-mammoth.png",
		"ⲆⵠᐃΔΔᐃⲆ": "img/baby-mammoth-step.png",
		"ⵠⲆΔΔΔⵠⵠᐃΔ": "img/day-flower-hat.png",
		"ᐃΔⲆⲆᐃⲆᐃⲆᐃ": "img/night-flower-hat.png",
		"ΔᐃΔᐃΔΔᐃⵠΔ": "img/inv-flower-hat-out.png",
		"ᐃΔⵠᐃᐃΔⵠⲆⲆ": "img/inv-flower-hat-in.png",
		"ⲆᐃᐃⲆⲆΔⲆᐃⵠ": "img/inv-flower-hat-click.png",
		"ΔΔⵠⵠⲆᐃΔΔⵠ": "img/day-fur-hat.png",
		"ⵠⵠⲆᐃΔⲆⲆᐃⵠ": "img/night-fur-hat.png",
		"ΔⲆⵠΔΔᐃⵠⲆᐃ": "img/inv-fur-hat-out.png",
		"ΔⲆᐃⲆⲆᐃΔΔΔ": "img/inv-fur-hat-in.png",
		"ⲆᐃᐃΔΔⵠΔⵠᐃ": "img/inv-fur-hat-click.png",
		"ΔᐃΔᐃᐃⲆⵠΔⲆ": "img/day-mammoth.png",
		"ⲆⲆⲆⵠⲆⵠᐃⵠΔ": "img/night-mammoth.png",
		"ⵠⵠΔⲆΔⲆⵠ": "img/hurt-mammoth.png",
		"ᐃⵠⵠᐃⲆᐃΔΔⵠ": "img/inv-mammoth-fur-out.png",
		"ΔⲆᐃᐃⵠᐃΔⵠⵠ": "img/inv-mammoth-fur-in.png",
		"ⵠⵠΔⲆⲆⵠⲆᐃᐃ": "img/inv-mammoth-fur-click.png",
		"ⲆΔⲆⲆΔⲆᐃⲆᐃ": "img/inv-wood-bow-out.png",
		"ᐃᐃᐃᐃΔⲆΔⵠᐃ": "img/inv-wood-bow-in.png",
		"ⵠⵠⵠᐃⵠᐃᐃΔⵠ": "img/inv-wood-bow-click.png",
		"ⲆⵠΔⵠΔⲆⵠΔᐃ": "img/inv-wood-arrow-out.png",
		"ᐃᐃΔⵠⵠⲆᐃΔΔ": "img/inv-wood-arrow-in.png",
		"ⵠᐃⲆᐃΔΔᐃⲆⵠ": "img/inv-wood-arrow-click.png",
		"ⵠΔⵠΔΔⵠⵠᐃᐃ": "img/day-wood-bow2.png",
		"ⲆᐃΔⲆᐃⲆⲆᐃⲆ": "img/night-wood-bow2.png",
		"ⲆⵠΔᐃΔᐃᐃ": "img/day-wood-arrow.png",
		"ᐃΔᐃⵠᐃⲆΔ": "img/night-wood-arrow.png",
		"ⲆᐃΔⵠᐃⲆΔⲆΔ": "img/inv-stone-bow-out.png",
		"ᐃⵠΔⲆᐃⵠⲆⵠⵠ": "img/inv-stone-bow-in.png",
		"ᐃⵠⲆᐃᐃⲆⲆᐃⵠ": "img/inv-stone-bow-click.png",
		"ⵠⲆⲆⵠΔᐃⵠⲆΔ": "img/inv-stone-arrow-out.png",
		"Δᐃᐃᐃᐃᐃⵠᐃᐃ": "img/inv-stone-arrow-in.png",
		"ΔΔⲆⲆΔⲆⵠⲆⵠ": "img/inv-stone-arrow-click.png",
		"ⲆᐃⵠᐃⲆⵠᐃⵠᐃ": "img/day-stone-bow.png",
		"ⵠΔᐃⵠⵠⲆⲆΔⵠ": "img/night-stone-bow.png",
		"ᐃⵠⵠⵠⲆⲆⲆ": "img/day-stone-arrow.png",
		"ᐃⵠᐃᐃᐃⲆᐃ": "img/night-stone-arrow.png",
		"ᐃⵠΔᐃⲆⵠΔⵠᐃ": "img/inv-gold-bow-out.png",
		"ᐃᐃᐃⵠⲆⵠᐃⵠΔ": "img/inv-gold-bow-in.png",
		"ᐃⲆᐃⵠΔⵠΔᐃᐃ": "img/inv-gold-bow-click.png",
		"ⲆΔⵠⵠⵠᐃⵠⲆᐃ": "img/inv-gold-arrow-out.png",
		"ᐃⵠΔⵠΔΔⲆⲆⲆ": "img/inv-gold-arrow-in.png",
		"ⲆⵠᐃⲆΔⲆΔⵠⵠ": "img/inv-gold-arrow-click.png",
		"ΔⲆᐃΔΔⵠΔΔᐃ": "img/day-gold-bow.png",
		"ⵠᐃⵠⵠⲆⲆΔΔⲆ": "img/night-gold-bow.png",
		"ⲆⲆⵠΔΔΔⵠ": "img/day-gold-arrow.png",
		"ⵠᐃᐃΔΔᐃⵠ": "img/night-gold-arrow.png",
		"ⲆⵠΔⵠⲆᐃᐃΔΔ": "img/inv-diamond-bow-out.png",
		"ⵠΔⲆⵠᐃⲆΔΔΔ": "img/inv-diamond-bow-in.png",
		"ⲆⲆⲆΔᐃⵠⲆⵠⵠ": "img/inv-diamond-bow-click.png",
		"ᐃᐃⵠΔΔⲆΔᐃⲆ": "img/inv-diamond-arrow-out.png",
		"ⲆᐃΔΔⵠᐃⵠᐃⲆ": "img/inv-diamond-arrow-in.png",
		"ⵠΔⲆᐃᐃᐃⲆΔΔ": "img/inv-diamond-arrow-click.png",
		"ᐃᐃⲆᐃᐃⵠⵠΔⲆ": "img/day-diamond-bow.png",
		"ⲆⵠΔΔᐃⵠⵠⲆⵠ": "img/night-diamond-bow.png",
		"ⲆⵠⲆᐃⲆᐃᐃ": "img/day-diamond-arrow.png",
		"ⲆⲆⲆⲆᐃⲆΔ": "img/night-diamond-arrow.png",
		"ⲆⲆⵠΔᐃⵠᐃⲆⲆ": "img/inv-amethyst-bow-out.png",
		"ᐃⵠᐃⲆⵠⵠⲆⲆⲆ": "img/inv-amethyst-bow-in.png",
		"ⲆΔΔΔⵠΔⲆⵠⵠ": "img/inv-amethyst-bow-click.png",
		"ᐃⵠᐃⵠΔΔᐃᐃᐃ": "img/inv-amethyst-arrow-out.png",
		"ⵠΔᐃⲆᐃΔⵠⲆᐃ": "img/inv-amethyst-arrow-in.png",
		"ᐃΔⵠⲆᐃⵠΔⵠΔ": "img/inv-amethyst-arrow-click.png",
		"ⵠⵠᐃᐃⲆΔⲆⵠΔ": "img/day-amethyst-bow.png",
		"ⵠⲆᐃⵠᐃΔⲆΔΔ": "img/night-amethyst-bow.png",
		"ΔⲆⵠⵠΔⲆᐃ": "img/day-amethyst-arrow.png",
		"ⲆⵠΔΔⲆⲆΔ": "img/night-amethyst-arrow.png",
		"ΔᐃᐃΔⲆᐃⲆΔⵠ": "img/inv-dragon-bow-out.png",
		"ⲆΔᐃⲆᐃⲆⲆⲆⵠ": "img/inv-dragon-bow-in.png",
		"ᐃⵠⵠᐃⵠⵠᐃⲆⲆ": "img/inv-dragon-bow-click.png",
		"ᐃΔⲆⵠⵠⲆⲆᐃⵠ": "img/inv-dragon-arrow-out.png",
		"ⲆΔᐃⵠⲆⲆΔΔⲆ": "img/inv-dragon-arrow-in.png",
		"ⵠᐃⵠᐃΔⵠΔⵠᐃ": "img/inv-dragon-arrow-click.png",
		"ⲆᐃΔᐃΔⲆᐃⵠΔ": "img/day-dragon-bow.png",
		"ᐃΔⵠⲆΔᐃΔⲆⵠ": "img/night-dragon-bow.png",
		"ⲆⵠⲆⲆᐃⲆⵠ": "img/day-dragon-arrow.png",
		"ΔΔⵠᐃᐃΔⲆ": "img/night-dragon-arrow.png",
		"ᐃⵠⲆⵠⲆⲆⵠΔΔ": "img/inv-reidite-bow-out.png",
		"ⵠΔᐃΔⲆⲆᐃΔⲆ": "img/inv-reidite-bow-in.png",
		"ⲆᐃᐃⲆΔᐃΔⵠΔ": "img/inv-reidite-bow-click.png",
		"ⲆᐃᐃΔⵠⵠᐃᐃⲆ": "img/inv-reidite-arrow-out.png",
		"ᐃⲆⵠⲆⲆⵠⲆⲆⵠ": "img/inv-reidite-arrow-in.png",
		"ᐃⲆⲆⲆⵠⲆᐃᐃᐃ": "img/inv-reidite-arrow-click.png",
		"ΔⲆⵠᐃΔᐃⲆⵠΔ": "img/day-reidite-bow.png",
		"ΔⵠⵠΔⵠᐃᐃⲆⵠ": "img/night-reidite-bow.png",
		"ⵠΔⲆⵠᐃᐃᐃ": "img/day-reidite-arrow.png",
		"ⲆᐃⵠⵠⵠΔⵠᐃᐃ": "img/night-reidite-arrow.png",
		"ⵠⵠᐃⵠᐃⲆⲆᐃᐃ": "img/inv-wooden-axe-out.png",
		"ΔᐃΔⵠᐃⵠΔⵠᐃ": "img/inv-wooden-axe-in.png",
		"ΔⲆⵠᐃⵠⲆᐃᐃᐃ": "img/inv-wooden-axe-click.png",
		"ⲆᐃⵠΔΔⲆⵠⵠΔ": "img/day-wooden-axe.png",
		"ᐃΔᐃⵠⲆΔᐃΔᐃ": "img/night-wooden-axe.png",
		"ⲆⵠᐃᐃᐃΔΔᐃΔ": "img/inv-stone-axe-out.png",
		"ᐃΔⵠⵠΔΔⲆΔΔ": "img/inv-stone-axe-in.png",
		"ⵠᐃᐃⲆⵠᐃᐃᐃΔ": "img/inv-stone-axe-click.png",
		"ΔⵠⲆᐃᐃΔⵠᐃΔ": "img/day-stone-axe.png",
		"ᐃⵠΔᐃⵠᐃⵠⵠⲆ": "img/night-stone-axe.png",
		"ᐃⲆⵠⲆᐃⵠΔⵠⲆ": "img/inv-golden-axe-out.png",
		"ΔⲆΔᐃᐃᐃᐃΔⲆ": "img/inv-golden-axe-in.png",
		"ᐃΔΔⵠΔⵠⵠⵠⵠ": "img/inv-golden-axe-click.png",
		"ⵠⵠΔᐃⵠⲆⲆⵠᐃ": "img/day-golden-axe.png",
		"ΔⵠⵠΔΔⲆⲆⵠΔ": "img/night-golden-axe.png",
		"ⲆᐃⵠΔΔⵠⲆⵠⲆ": "img/inv-diamond-axe-out.png",
		"ⵠᐃᐃⵠΔⲆΔⲆΔ": "img/inv-diamond-axe-in.png",
		"ᐃΔⲆᐃⲆΔⲆΔᐃ": "img/inv-diamond-axe-click.png",
		"ᐃⲆΔⵠΔⵠΔⵠⲆ": "img/day-diamond-axe.png",
		"ⵠᐃᐃΔⲆΔⵠΔΔ": "img/night-diamond-axe.png",
		"ⵠᐃⵠᐃᐃΔᐃᐃΔ": "img/inv-amethyst-axe-out.png",
		"ⵠⵠᐃᐃⲆⲆΔᐃΔ": "img/inv-amethyst-axe-in.png",
		"ⲆⲆⲆᐃΔΔⵠᐃᐃ": "img/inv-amethyst-axe-click.png",
		"ⵠⵠΔⵠᐃⲆΔΔⵠ": "img/day-amethyst-axe.png",
		"ⵠΔΔⲆΔΔᐃΔⲆ": "img/night-amethyst-axe.png",
		"ⲆⲆⲆΔⵠⲆⲆⲆΔ": "img/inv-reidite-axe-out.png",
		"ⲆᐃΔⵠⲆⵠⲆᐃⵠ": "img/inv-reidite-axe-in.png",
		"ᐃⲆᐃⲆΔⵠⵠⲆⲆ": "img/inv-reidite-axe-click.png",
		"ᐃⵠᐃⲆⵠΔⵠⵠⵠ": "img/day-reidite-axe.png",
		"ΔᐃⲆΔΔΔⵠΔΔ": "img/night-reidite-axe.png",
		"ⲆΔⵠΔᐃᐃⲆ": "img/bandage-activated.png",
		"ⲆⲆΔᐃᐃΔΔ": "img/auto-feed.png",
		"ᐃᐃⵠᐃΔᐃⵠ": "img/stop-regeneration.png",
		"ᐃⲆⲆⵠᐃⲆΔ": "img/stop-regeneration2.png",
		"ᐃⲆᐃⵠΔΔⲆⲆᐃ": "img/day-wood-platform.png",
		"ⲆΔΔΔᐃⵠᐃⲆⵠ": "img/night-wood-platform.png",
		"ⲆⲆᐃΔⵠⵠᐃⲆⵠ": "img/inv-wood-platform-in.png",
		"ⵠⲆᐃⵠΔⲆⲆᐃⲆ": "img/inv-wood-platform-out.png",
		"ⲆᐃᐃΔΔⵠⲆᐃΔ": "img/inv-wood-platform-click.png",
		"ᐃΔΔⲆΔⲆⲆⵠⵠ": "img/day-wood-shield.png",
		"ΔᐃⵠᐃᐃᐃᐃΔⲆ": "img/night-wood-shield.png",
		"ⲆⲆⵠⲆⲆⲆⵠⲆⲆ": "img/day-stone-shield.png",
		"ΔΔⲆᐃⵠᐃΔΔΔ": "img/night-stone-shield.png",
		"ᐃᐃⲆⲆⲆΔⵠⵠᐃ": "img/day-gold-shield.png",
		"ΔⵠⵠⲆᐃΔᐃΔᐃ": "img/night-gold-shield.png",
		"ΔⲆⵠⵠΔⲆΔᐃᐃ": "img/day-diamond-shield.png",
		"ΔⲆⵠⵠⵠΔⵠⲆΔ": "img/night-diamond-shield.png",
		"ⵠⲆⵠᐃⵠᐃⵠᐃΔ": "img/day-amethyst-shield.png",
		"ΔᐃⵠⵠⵠⲆΔⲆΔ": "img/night-amethyst-shield.png",
		"ΔᐃΔⲆⵠⲆᐃΔΔ": "img/day-reidite-shield.png",
		"Δᐃᐃⵠᐃⵠⵠᐃᐃ": "img/night-reidite-shield.png",
		"ⵠⲆⲆⵠΔⲆΔⲆⲆ": "img/inv-wood-shield-in.png",
		"ΔᐃΔⲆⵠΔᐃⲆⲆ": "img/inv-wood-shield-out.png",
		"ⲆᐃᐃⵠΔⲆΔⲆⵠ": "img/inv-wood-shield-click.png",
		"ᐃⵠΔΔⵠᐃΔᐃⵠ": "img/inv-stone-shield-in.png",
		"ᐃⵠⲆⲆᐃⲆΔᐃΔ": "img/inv-stone-shield-out.png",
		"ᐃᐃᐃⵠᐃⵠΔⲆⲆ": "img/inv-stone-shield-click.png",
		"ᐃⲆᐃΔΔⵠΔΔⵠ": "img/inv-gold-shield-in.png",
		"ᐃᐃⵠΔⵠΔΔΔᐃ": "img/inv-gold-shield-out.png",
		"ⵠⵠⵠⵠΔⲆⲆΔⵠ": "img/inv-gold-shield-click.png",
		"ⵠᐃⵠⲆⲆⵠⲆΔᐃ": "img/inv-diamond-shield-in.png",
		"ⵠⵠⵠⲆⲆⵠⲆᐃⵠ": "img/inv-diamond-shield-out.png",
		"ᐃⲆᐃⵠⲆᐃⲆⲆⲆ": "img/inv-diamond-shield-click.png",
		"ⲆⲆᐃⵠᐃⵠⵠⲆⵠ": "img/inv-amethyst-shield-in.png",
		"ΔⲆⲆⲆᐃΔⲆᐃⲆ": "img/inv-amethyst-shield-out.png",
		"ⵠⵠΔⵠⵠⲆⲆⵠⵠ": "img/inv-amethyst-shield-click.png",
		"ⲆⲆΔΔⲆΔᐃⲆΔ": "img/inv-reidite-shield-in.png",
		"ⵠⲆᐃΔⲆⲆⲆΔΔ": "img/inv-reidite-shield-out.png",
		"ᐃΔⲆᐃⵠΔΔᐃⵠ": "img/inv-reidite-shield-click.png",
		"ᐃⲆⲆΔΔⲆⲆΔΔ": "img/day-machete.png",
		"ΔᐃⲆⲆΔΔᐃⲆⲆ": "img/night-machete.png",
		"ⲆᐃⵠⵠΔⲆⲆΔⲆ": "img/inv-machete-in.png",
		"ᐃⲆΔⵠᐃᐃᐃᐃⲆ": "img/inv-machete-out.png",
		"Ⲇⵠᐃᐃⵠⵠᐃᐃᐃ": "img/inv-machete-click.png"
	};
	ⲆⲆⵠᐃⵠΔⲆ = [{}];
	ⲆⲆⵠᐃⵠΔⲆ[ΔⲆⵠ].stringify = function(ᐃⲆⲆⲆⲆⲆΔ) {
		var ⲆᐃⲆᐃⲆⲆᐃ = new Uint8Array(new ArrayBuffer(ᐃⲆⲆⲆⲆⲆΔ.length));
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆⲆⲆⲆⲆΔ.length; ᐃⲆ++) ⲆᐃⲆᐃⲆⲆᐃ[ᐃⲆ] = ᐃⲆⲆⲆⲆⲆΔ[ᐃⲆ];
		return ⲆᐃⲆᐃⲆⲆᐃ
	};
	const ⵠⵠⲆⲆ = ΔⲆⵠ;
	ΔⵠⲆᐃⵠⲆᐃ = {};
	ᐃᐃⲆᐃΔΔΔΔⵠ = {};
	for (var ᐃⲆ in ⵠᐃ) ΔⵠⲆᐃⵠⲆᐃ[ᐃⲆ] = ⵠᐃ[ᐃⲆ];
	const ΔᐃⲆⵠΔⲆⲆ = ΔⲆⲆⲆⲆ;
	Ⲇᐃ = [];
	Ⲇᐃ[1e4] = [new Image];
	Ⲇᐃ[10001] = [new Image];
	Ⲇᐃ[10002] = [new Image];
	Ⲇᐃ[10003] = [new Image];
	Ⲇᐃ[10004] = [new Image];
	Ⲇᐃ[10005] = [new Image];
	Ⲇᐃ[10006] = [new Image];
	Ⲇᐃ[10007] = [new Image];
	Ⲇᐃ[10008] = [new Image];
	Ⲇᐃ[10009] = [new Image];
	Ⲇᐃ[10010] = [new Image];
	Ⲇᐃ[10011] = [new Image];
	Ⲇᐃ[10012] = [new Image];
	Ⲇᐃ[10013] = [new Image];
	Ⲇᐃ[10014] = [new Image];
	Ⲇᐃ[10015] = [new Image];
	Ⲇᐃ[10016] = [new Image];
	Ⲇᐃ[10017] = [new Image];
	Ⲇᐃ[10018] = [new Image];
	Ⲇᐃ[10019] = [new Image];
	Ⲇᐃ[10020] = [new Image];
	Ⲇᐃ[10021] = [new Image];
	Ⲇᐃ[10022] = [new Image];
	Ⲇᐃ[10023] = [new Image];
	Ⲇᐃ[10024] = [new Image];
	Ⲇᐃ[10025] = [new Image];
	Ⲇᐃ[10026] = [new Image];
	Ⲇᐃ[10027] = [new Image];
	Ⲇᐃ[10028] = [new Image];
	Ⲇᐃ[10029] = [new Image];
	Ⲇᐃ[10030] = [new Image];
	Ⲇᐃ[10031] = [new Image];
	Ⲇᐃ[10032] = [new Image];
	Ⲇᐃ[10033] = [new Image];
	Ⲇᐃ[10034] = [new Image];
	Ⲇᐃ[10035] = [new Image];
	Ⲇᐃ[1e4][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-ally.png";
	Ⲇᐃ[10001][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-enemy.png";
	Ⲇᐃ[10002][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-ally.png";
	Ⲇᐃ[10003][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-enemy.png";
	Ⲇᐃ[10004][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-ally.png";
	Ⲇᐃ[10005][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-enemy.png";
	Ⲇᐃ[10006][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-ally.png";
	Ⲇᐃ[10007][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-enemy.png";
	Ⲇᐃ[10008][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-ally.png";
	Ⲇᐃ[10009][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-enemy.png";
	Ⲇᐃ[10010][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-ally.png";
	Ⲇᐃ[10011][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-enemy.png";
	Ⲇᐃ[10012][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood2.png";
	Ⲇᐃ[10013][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_wood1.png";
	Ⲇᐃ[10014][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone1.png";
	Ⲇᐃ[10015][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_stone2.png";
	Ⲇᐃ[10016][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold2.png";
	Ⲇᐃ[10017][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_gold1.png";
	Ⲇᐃ[10018][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond2.png";
	Ⲇᐃ[10019][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_diamond1.png";
	Ⲇᐃ[10020][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst1.png";
	Ⲇᐃ[10021][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_amethyst2.png";
	Ⲇᐃ[10022][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite2.png";
	Ⲇᐃ[10023][0].src = "https://raw.githubusercontent.com/XmreLoux/weirdo/main/door_reidite1.png";
	Ⲇᐃ[10024][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-ally.png";
	Ⲇᐃ[10025][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-wood-spike-door-enemy.png";
	Ⲇᐃ[10026][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-ally.png";
	Ⲇᐃ[10027][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-stone-spike-door-enemy.png";
	Ⲇᐃ[10028][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-ally.png";
	Ⲇᐃ[10029][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-gold-spike-door-enemy.png";
	Ⲇᐃ[10030][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-ally.png";
	Ⲇᐃ[10031][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-diamond-spike-door-enemy.png";
	Ⲇᐃ[10032][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-ally.png";
	Ⲇᐃ[10033][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-amethyst-spike-door-enemy.png";
	Ⲇᐃ[10034][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-ally.png";
	Ⲇᐃ[10035][0].src = "https://raw.githubusercontent.com/XmreLoux/For_require/main/images/day-reidite-spike-door-enemy.png";
	Ⲇᐃ[1e4][1] = Ⲇᐃ[1e4][0];
	Ⲇᐃ[10001][1] = Ⲇᐃ[10001][0];
	Ⲇᐃ[10002][1] = Ⲇᐃ[10002][0];
	Ⲇᐃ[10003][1] = Ⲇᐃ[10003][0];
	Ⲇᐃ[10004][1] = Ⲇᐃ[10004][0];
	Ⲇᐃ[10005][1] = Ⲇᐃ[10005][0];
	Ⲇᐃ[10006][1] = Ⲇᐃ[10006][0];
	Ⲇᐃ[10007][1] = Ⲇᐃ[10007][0];
	Ⲇᐃ[10008][1] = Ⲇᐃ[10008][0];
	Ⲇᐃ[10009][1] = Ⲇᐃ[10009][0];
	Ⲇᐃ[10010][1] = Ⲇᐃ[10010][0];
	Ⲇᐃ[10011][1] = Ⲇᐃ[10011][0];
	Ⲇᐃ[10012][1] = Ⲇᐃ[10012][0];
	Ⲇᐃ[10013][1] = Ⲇᐃ[10013][0];
	Ⲇᐃ[10014][1] = Ⲇᐃ[10014][0];
	Ⲇᐃ[10015][1] = Ⲇᐃ[10015][0];
	Ⲇᐃ[10016][1] = Ⲇᐃ[10016][0];
	Ⲇᐃ[10017][1] = Ⲇᐃ[10017][0];
	Ⲇᐃ[10018][1] = Ⲇᐃ[10018][0];
	Ⲇᐃ[10019][1] = Ⲇᐃ[10019][0];
	Ⲇᐃ[10020][1] = Ⲇᐃ[10020][0];
	Ⲇᐃ[10021][1] = Ⲇᐃ[10021][0];
	Ⲇᐃ[10022][1] = Ⲇᐃ[10022][0];
	Ⲇᐃ[10023][1] = Ⲇᐃ[10023][0];
	Ⲇᐃ[10024][1] = Ⲇᐃ[10024][0];
	Ⲇᐃ[10025][1] = Ⲇᐃ[10025][0];
	Ⲇᐃ[10026][1] = Ⲇᐃ[10026][0];
	Ⲇᐃ[10027][1] = Ⲇᐃ[10027][0];
	Ⲇᐃ[10028][1] = Ⲇᐃ[10028][0];
	Ⲇᐃ[10029][1] = Ⲇᐃ[10029][0];
	Ⲇᐃ[10030][1] = Ⲇᐃ[10030][0];
	Ⲇᐃ[10031][1] = Ⲇᐃ[10031][0];
	Ⲇᐃ[10032][1] = Ⲇᐃ[10032][0];
	Ⲇᐃ[10033][1] = Ⲇᐃ[10033][0];
	Ⲇᐃ[10034][1] = Ⲇᐃ[10034][0];
	Ⲇᐃ[10035][1] = Ⲇᐃ[10035][0];
	ⵠⲆᐃ = {};
	ⵠⲆᐃ.ΔᐃΔᐃΔ = ᐃΔⵠⵠ;
	ⵠⲆᐃ.ᐃⲆΔᐃ = 1;
	ⵠⲆᐃ.ⵠᐃΔⲆ = 2;
	const ⲆᐃΔΔΔ = ᐃᐃⲆᐃΔ;
	const ⵠⲆⵠᐃ = ⵠᐃᐃⵠ;
	const ⵠᐃᐃᐃ = ⵠΔⵠⲆ;
	ⵠⲆᐃ.ⲆᐃⲆⵠ = 3;
	ⵠⲆᐃ.ⲆⵠⲆⵠ = 4;
	ⵠⲆᐃ.ⲆⵠΔⵠ = ΔᐃΔΔⲆ;
	const ⲆⲆⲆⵠᐃ = ⲆⵠⲆⲆ;
	ⵠⲆᐃ.ᐃΔⲆⲆ = 6;
	const ΔⵠᐃⵠⵠⵠⲆ = ⲆᐃΔⵠᐃⲆΔ;
	ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ = ⵠᐃⵠⲆᐃ;
	const ⲆⵠⵠⲆ = ⵠᐃᐃᐃ;
	ⵠⲆᐃ.ΔΔⲆⲆΔ = 8;
	ᐃᐃᐃⵠ = {};
	ΔⲆΔΔ = [];
	ⲆⵠⵠⵠΔⲆΔ = function(ⲆΔⵠΔΔⵠⵠ, ⲆΔ) {
		for (var ᐃⲆ = ᐃⵠΔ; ᐃⲆ < ⲆΔⵠΔΔⵠⵠ.length; ᐃⲆ++) {
			if (ⲆΔⵠΔΔⵠⵠ[ᐃⲆ].id === ⲆΔ) return ᐃⲆ
		}
		return -ⵠⲆⲆ
	};
	const ⵠⵠⲆΔⵠ = ΔⲆΔⲆΔ;
	const ⵠⲆᐃⵠⲆᐃⲆ = ΔᐃᐃⵠⲆⲆᐃ;
	var ᐃⲆⲆⲆᐃΔᐃ = [];

	function ⲆΔΔᐃⵠ(ⵠⲆᐃΔ, ⵠⵠⲆⵠⵠ) {
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆⲆⲆᐃΔᐃ.length; ᐃⲆ += ⵠⵠⲆⵠⵠ) {
			var Δᐃᐃ = ᐃⲆⲆⲆᐃΔᐃ[ᐃⲆ];
			if (ⵠⲆᐃΔ === Δᐃᐃ[0]) ⵠΔᐃΔΔⵠⵠⲆⵠ(Δᐃᐃ[0], Δᐃᐃ[ᐃⵠⵠ], Δᐃᐃ[ᐃΔⵠᐃ], Δᐃᐃ[ΔΔⲆⲆᐃ])
		}
	}
	const ⲆⵠΔΔⵠⵠΔ = ᐃⵠΔⲆᐃⵠᐃ;

	function ᐃᐃᐃᐃΔΔᐃΔⲆ(ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ᐃⲆ, ΔΔΔ) {
		ᐃⲆⲆⲆᐃΔᐃ.push([ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ᐃⲆ, ΔΔΔ])
	}

	function ⵠⲆⲆⲆⲆⵠⵠⲆΔ() {
		ⲆΔΔᐃⵠ(ⵠ[398], ⵠⵠⲆΔ);
		ⲆΔΔᐃⵠ(ⵠ[293], 20);
		ⲆΔΔᐃⵠ(ⵠ[220], 1);
		ⲆΔΔᐃⵠ("c", ᐃⵠ);
		ⲆΔΔᐃⵠ("s", ᐃⵠⵠ);
		ⲆΔΔᐃⵠ("f", ᐃΔⲆⵠ);
		ⲆΔΔᐃⵠ("p", 1);
		ⲆΔΔᐃⵠ("g", ⲆΔᐃⲆ);
		ⲆΔΔᐃⵠ("d", 1);
		ⲆΔΔᐃⵠ("a", 1);
		ⲆΔΔᐃⵠ(ⵠ[239], ⵠⲆⲆ);
		ⲆΔΔᐃⵠ("m", 1);
		ᐃⲆⲆⲆᐃΔᐃ = []
	}
	const ΔΔⲆΔ = ᐃᐃΔᐃ;

	function ⵠΔᐃΔΔⵠⵠⲆⵠ(ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ᐃⲆ, ΔΔΔ) {
		var ΔⵠΔⵠⲆΔΔ = ΔⲆΔΔ[ⵠⲆᐃΔ];
		if (undefined === ΔⵠΔⵠⲆΔΔ) return;
		for (var ΔᐃⲆᐃ = ⵠᐃⲆᐃ; ΔᐃⲆᐃ < ᐃⲆⲆΔ; ΔᐃⲆᐃ++) {
			var ⵠⵠ = ΔⵠΔⵠⲆΔΔ[ᐃᐃⵠⵠⲆ][ΔᐃⲆᐃ];
			var ᐃᐃΔ = ΔΔΔ * 193 / ⲆΔΔ.Δᐃᐃⵠⵠ;
			var ᐃⲆᐃ = ᐃⲆ * 193 / ⲆΔΔ.ΔⲆᐃⵠⵠ;
			var ᐃᐃⲆ = ⵠⵠ.width / 3.5;
			var ΔᐃⲆ = ⵠⵠ.height / 3.5;
			Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ΔᐃⲆᐃ].drawImage(ⵠⵠ, ᐃᐃΔ - ᐃᐃⲆ / ΔⵠΔΔ, ᐃⲆᐃ - ΔᐃⲆ / ⵠΔⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
			ᐃᐃΔ = 600 * ΔΔΔ / ⲆΔΔ.Δᐃᐃⵠⵠ;
			ᐃⲆᐃ = ᐃⲆ * 600 / ⲆΔΔ.ΔⲆᐃⵠⵠ;
			ᐃᐃⲆ = ⵠⵠ.width / 1.5;
			ΔᐃⲆ = ⵠⵠ.height / 1.5;
			Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ΔᐃⲆᐃ].drawImage(ⵠⵠ, ᐃᐃΔ - ᐃᐃⲆ / 2, ᐃⲆᐃ - ΔᐃⲆ / ⵠⵠΔⲆ, ᐃᐃⲆ, ΔᐃⲆ)
		}
	}
	const ᐃΔᐃᐃⵠ = ⲆⵠΔⲆⲆ;
	ΔΔᐃⲆⵠⵠΔⵠᐃ = function() {
		for (var ᐃⲆ = 0; ᐃⲆ < 2; ᐃⲆ++) {
			Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].clearRect(ᐃⵠΔ, ΔΔᐃ, 193, 193);
			Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ["MAP"][ᐃⲆ], 0, ᐃΔⵠⵠ, 193, 193);
			Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].clearRect(0, 0, 600, 600);
			Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ["MAP"][ᐃⲆ], ᐃΔⵠⵠ, ᐃⵠΔ, 600, 600);
			for (var ΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ.length - ⲆⲆΔᐃ; ΔΔΔ >= ⲆⵠⲆ; ΔΔΔ--) {
				var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔΔΔ];
				var ᐃᐃΔ = ΔΔΔΔ.x1 * 193 / (100 * ⲆΔΔ.Δᐃᐃⵠⵠ);
				var ᐃⲆᐃ = ΔΔΔΔ.y1 * 193 / (ⲆΔΔ.ΔⲆᐃⵠⵠ * 100);
				var ᐃᐃⲆ = ΔΔΔΔ.w * 193 / (ⲆΔΔ.Δᐃᐃⵠⵠ * ⵠᐃⵠⵠΔ);
				var ΔᐃⲆ = 193 * ΔΔΔΔ.ΔᐃⲆ / (ⲆΔΔ.ΔⲆᐃⵠⵠ * ⲆΔᐃⲆⵠ);
				var ᐃᐃⵠⵠΔ = ΔΔΔΔ.x1 * 600 / (ⲆΔΔ.Δᐃᐃⵠⵠ * 100);
				var ⵠⵠⲆⲆⵠ = 600 * ΔΔΔΔ.y1 / (ᐃⵠⲆⵠⲆ * ⲆΔΔ.ΔⲆᐃⵠⵠ);
				var ΔⵠⲆⵠΔⵠⲆ = ΔΔΔΔ.w * 600 / (100 * ⲆΔΔ.Δᐃᐃⵠⵠ);
				var ΔΔᐃⵠᐃΔΔ = ΔΔΔΔ.ΔᐃⲆ * 600 / (ⲆΔΔ.ΔⲆᐃⵠⵠ * ⲆⲆΔⵠΔᐃΔ);
				if (ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃΔⲆ) {
					Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[262]][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
					Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[262]][ᐃⲆ], ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ, ΔⵠⲆⵠΔⵠⲆ, ΔΔᐃⵠᐃΔΔ)
				}
				ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ && (Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[ⵠⲆⲆᐃⵠΔⲆ]][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ), Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[ᐃᐃⲆΔΔΔⲆ]][ᐃⲆ], ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ, ΔⵠⲆⵠΔⵠⲆ, ΔΔᐃⵠᐃΔΔ));
				ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ && (Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[162]][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ), Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[162]][ᐃⲆ], ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ, ΔⵠⲆⵠΔⵠⲆ, ΔΔᐃⵠᐃΔΔ));
				ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ === ΔΔΔΔ.ᐃⲆⵠ && (Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ["CAVE"][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ), Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ["CAVE"][ᐃⲆ], ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ, ΔⵠⲆⵠΔⵠⲆ, ΔΔᐃⵠᐃΔΔ));
				if (ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ) {
					Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[552]][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
					Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ].drawImage(ΔⲆΔΔ[ⵠ[552]][ᐃⲆ], ᐃᐃⵠⵠΔ, ⵠⵠⲆⲆⵠ, ΔⵠⲆⵠΔⵠⲆ, ΔΔᐃⵠᐃΔΔ)
				}
			}
		}
	};
	const ⵠΔΔⲆᐃⵠⵠ = ⲆΔⵠΔᐃ;
	ⲆⵠⵠⵠᐃΔⲆⲆⲆ = function() {
		ᐃᐃᐃⵠ = {
			"ⲆᐃⵠⲆⲆ": [{
				id: ΔⲆᐃⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃⲆⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆΔⲆⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠᐃΔΔⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔⵠⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Starver"
			}, {
				id: ⵠⲆⵠⵠ,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔΔⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆⵠΔΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃΔΔᐃΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆⵠⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Angry"
			}, {
				id: ΔⵠΔΔ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆⵠᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⲆⲆⲆᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.Δⵠᐃᐃⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sad"
			}, {
				id: 9,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠⵠΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔΔᐃⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⵠΔⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠΔᐃⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Happy 1"
			}, {
				id: 1,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⲆⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔⵠΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆⲆᐃΔᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠΔⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "What?"
			}, {
				id: ⲆⵠⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃⵠⵠΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⵠⲆⲆⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠΔⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Suspicious"
			}, {
				id: ΔⲆⲆΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔΔΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃᐃⵠΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆΔⵠΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Scar"
			}, {
				id: 6,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠⲆⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠΔⲆⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃΔⵠⲆⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⵠⵠⲆⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "In Trouble"
			}, {
				id: 7,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆⵠⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃⵠΔΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⵠⵠΔⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆᐃⲆⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Cute"
			}, {
				id: ⲆⵠⲆⲆⲆΔⲆ,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆᐃⲆⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⵠⲆⲆΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆᐃΔᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bored 1"
			}, {
				id: 10,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠⵠⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆᐃΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠΔⲆΔⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠⵠᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Happy 2"
			}, {
				id: 11,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃᐃⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃᐃᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔⲆΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔᐃΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Crazy"
			}, {
				id: 12,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠᐃⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃΔⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⲆⵠΔⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⵠⲆⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Happy 3"
			}, {
				id: Ⲇⵠⵠⵠᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠⵠⵠΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃΔᐃΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃⵠᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Very Cute"
			}, {
				id: ᐃⵠΔⲆᐃⵠᐃ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⲆᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠΔⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔⲆⲆΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠⲆᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Curious"
			}, {
				id: ᐃᐃΔⲆⵠ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠⵠᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆⲆⲆΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⲆⵠᐃᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔΔᐃⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bored 2"
			}, {
				id: ᐃⵠⲆⲆⲆⵠⲆ,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆⲆᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃⵠΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⲆΔⲆΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆⲆΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Happy 4"
			}, {
				id: ⲆⵠⲆⵠⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔᐃΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆⲆⲆΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠΔⲆΔⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠΔᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Scar 2"
			}, {
				id: 18,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔⲆⵠⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⲆᐃᐃᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⲆⲆΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sick"
			}, {
				id: ⲆⲆⵠᐃΔᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠⲆⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⵠⲆⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⲆᐃᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔᐃⲆΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Somnambule"
			}, {
				id: 24,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆᐃⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⲆᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃᐃᐃΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔⵠᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[321],
				name: "Feel Bad"
			}, {
				id: 23,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⲆΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃΔΔⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆΔΔⵠΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠⵠΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[321],
				name: "Mmmh."
			}, {
				id: 103,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔΔᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆⲆⲆⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⵠΔⵠⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆⲆΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Panic"
			}, {
				id: 105,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⵠᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃΔᐃΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃᐃΔᐃᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⵠΔⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Hypnotic"
			}, {
				id: 106,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔᐃΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠⵠⲆᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔᐃᐃΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⵠⵠΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Stars in the eyes"
			}, {
				id: 220,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⵠᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆⵠΔⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⵠΔⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Seams"
			}, {
				id: 104,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠᐃᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃΔᐃΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔΔᐃΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃⵠᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Scared at night"
			}, {
				id: ᐃΔΔⲆΔⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆᐃⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔᐃᐃⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆⵠⲆⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⲆⵠΔᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Vampire"
			}, {
				id: 21,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔΔΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⲆⵠⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆΔΔⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⵠⲆⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Zombie"
			}, {
				id: 22,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⲆᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔΔⵠⵠΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⵠᐃΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[321],
				name: "Devaster"
			}, {
				id: 116,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⵠⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆᐃⲆΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆⲆᐃΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠⵠⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Fukss",
				name: "Dead Devaster"
			}, {
				id: 27,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⲆᐃᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆΔⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⲆⵠⵠᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⵠⲆΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: ⵠ[3]
			}, {
				id: 28,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃᐃⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆᐃΔⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠᐃΔᐃᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⲆΔⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Bee"
			}, {
				id: 49,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⵠⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆⵠΔΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⵠⵠⵠⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠᐃⵠⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[Δⵠⵠⵠ],
				name: "Camo Skin"
			}, {
				id: 58,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠΔᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃΔⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆⲆᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃΔⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Blue Limax Skin"
			}, {
				id: 59,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃΔᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔⲆⲆⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⵠⲆᐃⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Red Limax Skin"
			}, {
				id: 94,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⵠΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠⲆᐃᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⵠᐃⲆΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠᐃⵠᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[4],
				name: "Mr. Pumpkin"
			}, {
				id: 109,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠⵠΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠⲆᐃⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠⵠᐃΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃᐃᐃⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Wood"
			}, {
				id: 114,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔⵠⲆⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔⲆΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠᐃΔΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⲆⲆᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Zebra"
			}, {
				id: 120,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔᐃⲆΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔΔⲆᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠᐃᐃⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆΔΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[ⵠᐃⲆΔΔ],
				name: "Tiger"
			}, {
				id: 134,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃΔΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠΔΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠᐃΔᐃⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃᐃᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Franchestcreator",
				name: "Day or Night"
			}, {
				id: 135,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃᐃΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠΔᐃⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔΔᐃᐃⵠᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⲆⵠᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Poinet",
				name: "Square Starver"
			}, {
				id: 136,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃᐃΔᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⵠⵠᐃⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔᐃΔᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Voodoo Doll"
			}, {
				id: 137,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⲆΔⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆᐃᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⵠⵠΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆΔⵠⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Frankenstein"
			}, {
				id: 138,
				"ⲆⲆΔ": ⵠᐃ.Δᐃⵠⵠⵠᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠΔⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔΔⲆⲆΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⲆᐃᐃⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Mummy"
			}, {
				id: 139,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃᐃⲆⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⵠⲆⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠᐃΔᐃⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔᐃΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Werewolf"
			}, {
				id: 140,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⲆⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠᐃᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⲆⵠⵠⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔΔᐃⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Cthulhu"
			}, {
				id: 141,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃⵠⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠᐃΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⵠᐃΔΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⵠⵠᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sea Man"
			}, {
				id: 142,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔΔⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⵠΔΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠΔⵠΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Pumpkin"
			}, {
				id: 148,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆⵠΔⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃΔⲆᐃΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔᐃᐃΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Snowman"
			}, {
				id: 149,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠΔᐃΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃΔΔⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⵠⲆΔⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠΔΔⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Christmas Tree Man"
			}, {
				id: 150,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⲆᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆⲆⵠΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃⲆⲆⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃΔⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Mrs Bell"
			}, {
				id: 151,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔⵠΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃⲆΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔⵠΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⲆⲆΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Elfy"
			}, {
				id: 152,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⲆᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠⵠᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆΔⲆⲆΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃⵠⲆⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Mr Present"
			}, {
				id: 153,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆⲆᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆⵠᐃⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠΔⲆΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆⲆᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "My Dear Old Deer"
			}, {
				id: 154,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠᐃΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆΔΔΔΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⵠΔᐃᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⲆᐃᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr Angel"
			}, {
				id: 155,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔⵠᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆΔΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔΔᐃᐃⵠᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠᐃⵠΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr Ice Cube"
			}, {
				id: 156,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃᐃⵠΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠⲆⲆᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔⲆᐃΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠⵠⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr Snowman"
			}, {
				id: 159,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠᐃⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔⲆⵠⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⵠⵠⲆᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠΔⵠᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[ⲆⵠᐃⲆⲆ],
				name: "Crystal Sky Skin"
			}, {
				id: 167,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆᐃⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃΔⲆΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔΔⲆΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔΔⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Franchestcreator",
				name: "Radioactive Starver"
			}, {
				id: 169,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃᐃⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠⲆΔⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃᐃΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆΔⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "TheScaryBlaze",
				name: "Eaten Cookie"
			}, {
				id: 170,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃΔⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆΔᐃⲆⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠᐃⲆⲆⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⲆⲆⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[522],
				name: "Blob Thing"
			}, {
				id: 172,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃᐃᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃΔⵠᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃᐃᐃⲆⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔᐃⵠΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[522],
				name: "Machine Mask"
			}, {
				id: 184,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔⵠᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆΔⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⲆᐃⲆⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠⵠᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mad"
			}, {
				id: 206,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⲆΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔⲆⲆΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆⲆⲆⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⲆᐃⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Survivor"
			}, {
				id: 209,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⵠⲆᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃⲆΔⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆⲆΔᐃΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⲆⵠᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Starverator"
			}, {
				id: 230,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆΔⲆᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⲆⲆᐃΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔΔΔⵠᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: ⵠ[330]
			}, {
				id: 231,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⲆᐃᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⲆΔⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠΔᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Big Pile of Sand"
			}, {
				id: 232,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠᐃᐃⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⲆⵠΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔᐃᐃⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔΔΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Big Pile of Dirt"
			}, {
				id: 235,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⵠⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃΔΔΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⲆⲆⲆⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sandstone"
			}, {
				id: 29,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠᐃⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔⵠΔᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃΔⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔΔⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[321],
				name: "Lollipop 1"
			}, {
				id: 30,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃⲆᐃⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆⲆⲆⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔᐃΔⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆⲆⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lollipop 2"
			}, {
				id: 31,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔΔΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃᐃⲆΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠⵠΔⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔᐃⵠᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lollipop 3"
			}, {
				id: 32,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃⲆⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠⲆⲆⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⲆΔⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃΔⲆⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lollipop 4"
			}, {
				id: 33,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃΔᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃΔΔⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠΔΔⵠⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔΔⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[101],
				name: "Yellow Bird"
			}, {
				id: 34,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆᐃⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃΔΔⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⵠⵠᐃᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔΔⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[101],
				name: "Red Bird"
			}, {
				id: 35,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆΔᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔᐃⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⲆⲆⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[101],
				name: "Blue Bird"
			}, {
				id: 37,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆᐃΔᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⲆΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⲆⲆΔⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃᐃⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[441],
				name: "Owl"
			}, {
				id: 52,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⵠᐃⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠⲆⲆⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔᐃᐃᐃᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔⲆᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Nemo"
			}, {
				id: 53,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔⵠⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⵠᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠΔᐃΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃᐃΔᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Bread"
			}, {
				id: 74,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆΔΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠⵠΔⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃⵠΔΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⵠᐃᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Communist & Taco4Life",
				name: "Mr. Bread 2"
			}, {
				id: 75,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃⵠᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃⲆⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠᐃⵠⲆᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⵠᐃΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Communist & Taco4Life",
				name: "Mr. Bread 3"
			}, {
				id: 60,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃⵠΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠⵠⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⲆᐃⲆⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⲆΔᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Red Berry"
			}, {
				id: 61,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠⵠᐃᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆΔΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⲆⲆⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Berry"
			}, {
				id: 70,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔⵠΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⲆⵠⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃΔⵠᐃⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠᐃᐃⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Cake"
			}, {
				id: 71,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆⵠΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⵠᐃΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠᐃⵠⵠⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔⲆᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Christmas Cake"
			}, {
				id: 77,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⵠⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆΔΔⵠΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆᐃⲆᐃⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⵠⲆⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Pancakez",
				name: "Mr. Pancake"
			}, {
				id: 87,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠⲆⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔᐃⵠⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.Δᐃᐃⵠᐃᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠΔᐃᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ᐃⵠᐃᐃ],
				name: "Mr. Taco"
			}, {
				id: 78,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃΔΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃⲆⲆΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⲆΔᐃᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⲆᐃᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ᐃΔᐃΔ],
				name: "Mr. Bottle"
			}, {
				id: 79,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆⲆᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔⵠᐃⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⲆⲆⲆΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆᐃⵠⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ⲆⵠⵠⲆΔ],
				name: "Mr. Bottle 2"
			}, {
				id: 97,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃᐃⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔⲆᐃᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆᐃⲆⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔᐃᐃᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Pink Rabbit"
			}, {
				id: 102,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠᐃⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⲆΔⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⲆⲆⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆᐃⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Marshmallow"
			}, {
				id: 107,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠΔΔᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠᐃⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⲆΔⵠⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆᐃΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Fox"
			}, {
				id: 132,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔⲆⲆⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⵠⵠⲆΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆᐃΔᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Raccoon"
			}, {
				id: 111,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃᐃⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃΔΔᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⵠⲆⵠⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆᐃΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Cloud"
			}, {
				id: 113,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⲆΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆⲆⵠⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆⵠⲆᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃΔⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Moon"
			}, {
				id: 117,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔᐃᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔⵠⵠⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆΔΔⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠⵠⵠⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mr. Panda"
			}, {
				id: 118,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⲆᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠΔᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔΔᐃⲆⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠⵠⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mr. Strawberry"
			}, {
				id: 119,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆᐃⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠⲆᐃⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⲆᐃⵠⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⵠⵠΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "eogito & Sushuui",
				name: "Mummy"
			}, {
				id: 122,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔⵠᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠᐃᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆΔΔⲆⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔᐃⵠⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ⵠΔⲆᐃΔ],
				name: "Dino"
			}, {
				id: 127,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⵠⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔⲆⲆⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔΔᐃⲆⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⲆᐃⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Mr. Koala"
			}, {
				id: 160,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠᐃᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.Δⵠⵠⵠᐃᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔⵠⲆᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠⲆⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bottle Protection"
			}, {
				id: 162,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⲆΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆⲆᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃᐃΔⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⵠᐃᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ⲆⵠⲆᐃᐃ],
				name: "Leaf Man"
			}, {
				id: 166,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃⵠᐃⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔΔᐃΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠᐃᐃᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Bubble"
			}, {
				id: 174,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔΔⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠᐃⵠΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃΔⵠⵠⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆⲆⲆᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[397],
				name: "Potato"
			}, {
				id: 171,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃᐃᐃⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⵠⲆΔᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔⲆⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[522],
				name: "Axolotl"
			}, {
				id: 178,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠᐃⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⵠΔᐃΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔΔⵠⲆⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆⵠⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Rusted Machine"
			}, {
				id: 179,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔⲆᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃᐃᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃΔΔⵠⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆᐃⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Starving Machine"
			}, {
				id: 181,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⲆΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃⲆⵠΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⲆᐃⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠΔⲆⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Night Stars"
			}, {
				id: 191,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⵠⲆᐃΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔΔᐃⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⵠⲆΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Blue Jay"
			}, {
				id: 198,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔᐃⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃΔᐃⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⲆΔⲆᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆΔⵠⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "AWTP",
				name: "Dave"
			}, {
				id: 200,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃᐃⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⲆⲆΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔΔᐃⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆᐃⵠⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Jinty",
				name: "Smug"
			}, {
				id: 203,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔΔⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆᐃⵠᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔΔΔᐃⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⵠΔⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Reclaimed"
			}, {
				id: 204,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔΔΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃΔⲆΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⵠᐃⲆᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃᐃⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Legacy Wolf"
			}, {
				id: 211,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠⵠᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔΔⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠᐃⵠⵠⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⲆⲆⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Starver of the Seas"
			}, {
				id: 213,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⵠΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆΔⵠⲆⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⲆΔⲆⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔᐃⲆᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Ice"
			}, {
				id: 219,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔᐃⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⵠⲆΔⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⵠⵠΔⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔⲆⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Ramil",
				name: "Sandwich Cookie"
			}, {
				id: 221,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔⵠⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⵠΔᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⵠⵠⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Purple Geode"
			}, {
				id: 222,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠⲆᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.Ⲇⵠⵠⵠᐃᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⲆⲆⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔⵠᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Cyan Geode"
			}, {
				id: 223,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆᐃΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃΔⲆᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆΔᐃΔⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔᐃⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Yellow Geode"
			}, {
				id: 228,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆⲆΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔᐃⵠᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃΔΔᐃᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Furnace Head"
			}, {
				id: 229,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃᐃⲆᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⲆⵠΔⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⵠΔⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag"
			}, {
				id: 227,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆⲆⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⵠᐃⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔⲆΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⵠⲆⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lit Furnace Head"
			}, {
				id: 25,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠᐃⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠΔⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆⲆΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠⵠΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[321],
				name: "Test Dummy"
			}, {
				id: 41,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃⵠᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠᐃⲆΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠΔΔⵠⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⵠΔⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Star-ver"
			}, {
				id: 43,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃΔⲆⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆᐃΔᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔΔⲆⲆᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⵠⲆᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Starver Chest"
			}, {
				id: 88,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃΔⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠⲆΔⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⲆᐃᐃⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆΔᐃᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Starver Workbench"
			}, {
				id: 121,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⲆⵠΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆᐃᐃᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠᐃⵠⲆⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⵠᐃⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Fish"
			}, {
				id: 39,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠΔⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃⵠⵠⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⵠᐃⲆⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⵠᐃᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Negligent4Dia",
				name: "Crab"
			}, {
				id: 40,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃΔⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⵠΔᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔᐃⵠΔⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⵠΔⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Negligent4Dia",
				name: "Piranha"
			}, {
				id: 36,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔΔΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃⲆⵠⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠΔᐃⲆⵠⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃΔⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Fox"
			}, {
				id: 69,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃΔᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⵠΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⲆᐃᐃᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃΔᐃⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Zed",
				name: "Baby Foxy"
			}, {
				id: 51,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⲆΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃΔᐃⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠᐃΔΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⵠⵠⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "HOWI",
				name: "Winter Bear"
			}, {
				id: 133,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔⵠⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠΔᐃᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⵠᐃⲆⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⵠΔⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Hawk"
			}, {
				id: 55,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠΔΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆᐃⲆᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆΔΔΔΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠⵠⵠΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Nice Little Yuki"
			}, {
				id: 68,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠΔⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆΔᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆⵠⵠᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆⵠⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Baby Yuki"
			}, {
				id: 62,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃΔΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠⵠⵠᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆᐃⵠᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Carrot"
			}, {
				id: 56,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⵠᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃᐃΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⲆᐃⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⲆⵠΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bat Limax"
			}, {
				id: 72,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃᐃΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⲆⲆᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔΔⲆΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⵠⲆΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mr. Crate"
			}, {
				id: 73,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⵠⲆⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔⲆΔⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⵠⲆⲆᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃᐃⲆᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Taco4Life & eogito",
				name: "Mr. Spider"
			}, {
				id: 93,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔΔΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠⲆⵠΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔᐃⵠⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⲆΔΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[31],
				name: "Mr. Spider 2"
			}, {
				id: 82,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠⲆΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⲆΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆΔⲆⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠⲆⲆⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Blue Starfish"
			}, {
				id: 83,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠⲆᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃⵠⲆΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⵠΔⵠⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔⵠΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Orange Starfish"
			}, {
				id: 84,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔⵠᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔᐃⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⲆᐃᐃᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆΔⵠⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Pink Starfish"
			}, {
				id: 85,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠᐃⲆⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⲆⲆΔᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⲆΔᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. ShellMauve"
			}, {
				id: 86,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆΔΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆᐃⲆⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠᐃΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⲆⵠⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Shell Bead"
			}, {
				id: 96,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⲆⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔⲆⲆⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔᐃΔΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⵠΔⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Fukss",
				name: "Angry Crab"
			}, {
				id: 98,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔᐃᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃΔΔᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⵠᐃΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔᐃⲆⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Penguin"
			}, {
				id: 126,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠΔⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔⲆⲆⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠᐃᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⵠⵠⲆⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[31],
				name: "Mr. Boar"
			}, {
				id: 145,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃⲆᐃᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠᐃΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠᐃⵠⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "I saw you"
			}, {
				id: 146,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⲆᐃᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠᐃᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠΔᐃᐃⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃΔⵠᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "It was funny"
			}, {
				id: 147,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⲆΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠⵠᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠᐃΔⲆⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔΔⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "You can scream"
			}, {
				id: 158,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔᐃΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠⵠⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⲆᐃⲆΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃⵠΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mr. Book"
			}, {
				id: 163,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆᐃⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃᐃⵠΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⵠΔⲆⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠⵠⵠᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[31],
				name: "Mr. Mammoth"
			}, {
				id: 164,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠᐃΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆᐃⲆᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠⲆⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆⵠⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "SoOw",
				name: "Mr. Mammoth 2"
			}, {
				id: 161,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⲆⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠᐃΔⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆΔⵠᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔⲆᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Nightmare"
			}, {
				id: 168,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆΔⵠᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠᐃΔⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆⲆⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⵠⲆᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Shiny Crystal"
			}, {
				id: 173,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆΔᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃⵠⲆΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠⵠⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⲆⵠⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Water skin"
			}, {
				id: 175,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔΔΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠΔΔᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃΔᐃΔᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃⲆᐃᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Fall Berry Bush Starver"
			}, {
				id: 176,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠᐃᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆΔΔⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⵠΔΔⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆΔᐃⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Christmas Berry Bush Starver"
			}, {
				id: 177,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃᐃΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔᐃΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠⵠⵠΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⵠⵠⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Berry Bush Starver"
			}, {
				id: 182,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⲆⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃΔΔⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⲆⵠΔⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠⵠⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamer"
			}, {
				id: 185,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆⲆⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⵠⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆᐃΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔΔΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Wolf"
			}, {
				id: 186,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⲆⵠⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠΔᐃΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔΔᐃᐃΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔΔΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Snow Wolf"
			}, {
				id: 187,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆᐃᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔΔᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⵠⵠⵠᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠΔΔΔᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Rabbit"
			}, {
				id: 188,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠⵠⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔⵠᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠΔⲆΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠΔᐃⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Snow Rabbit"
			}, {
				id: 189,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔᐃⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆΔᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃΔⵠⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆⲆΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Bear"
			}, {
				id: 190,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔⵠⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃΔΔⲆᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔⵠⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Polar Bear"
			}, {
				id: 196,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⲆΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔᐃᐃΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃΔⵠᐃⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⵠⵠᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Crying Angel"
			}, {
				id: 202,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔᐃⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠᐃΔⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠᐃⲆⵠⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆⵠⵠⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Fennec"
			}, {
				id: 207,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⲆⵠᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃΔᐃᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⲆⲆⲆᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆΔⲆΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Decay"
			}, {
				id: 212,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⵠⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆⵠⵠΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔΔᐃᐃΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔΔΔⲆⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Pillow"
			}, {
				id: 218,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆⵠⲆⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⲆⵠⵠⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠΔⲆⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Exotic"
			}, {
				id: 224,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⲆⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆΔΔⵠⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⵠᐃΔᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃᐃⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Apple"
			}, {
				id: 225,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃᐃⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⲆΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆⵠⵠⲆⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆΔⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Golden Apple"
			}, {
				id: 233,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⲆᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆⲆΔⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆΔΔⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠΔᐃⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lava Cube"
			}, {
				id: 234,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔⵠⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⲆⵠⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⲆⵠΔⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃᐃⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Dragon Cube"
			}, {
				id: 42,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔΔⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⵠⵠΔΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⲆᐃΔᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[441],
				name: "Will-O'-The-Wisp"
			}, {
				id: 91,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃᐃⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃⵠⵠⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠᐃᐃΔΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠⲆⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": "ExpertyAnimations",
				name: "Flame"
			}, {
				id: 26,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠᐃΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠⲆⲆᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆⲆᐃⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⲆΔⲆⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Be a Tree"
			}, {
				id: 38,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔᐃⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃᐃΔΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⲆⵠⵠⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⵠⲆⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[441],
				name: "Toxic Mutant"
			}, {
				id: 50,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⲆⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆΔᐃⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃᐃᐃⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⵠᐃⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Mr. Tomato"
			}, {
				id: 54,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃⵠⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔⲆᐃΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⲆⵠⵠᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠⵠⵠΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Mauve, the Lapa"
			}, {
				id: 57,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠⵠΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⵠⲆⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠⵠⲆᐃⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔᐃᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Golden Fish"
			}, {
				id: 64,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠΔΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔᐃΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆΔⵠᐃⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔᐃᐃΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "LapaMauve"
			}, {
				id: 65,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔⵠⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃⵠⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆᐃⲆⲆⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⵠᐃⵠΔΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "LapaMauve "
			}, {
				id: 92,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆⵠΔΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠⲆΔᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⵠⵠᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Burger"
			}, {
				id: 66,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆᐃⵠᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠᐃⲆⵠⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠⵠᐃᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆΔΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Tropical Starver"
			}, {
				id: 80,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆΔⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃⲆᐃΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃᐃΔΔⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃⵠⲆᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. ShellPink"
			}, {
				id: 81,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆⲆⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆᐃΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⵠᐃⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⵠⲆⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. OranShell"
			}, {
				id: 99,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.Δⵠⵠⵠⵠⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⲆΔΔᐃΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⲆⵠⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Pepe"
			}, {
				id: 100,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆᐃᐃᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆᐃⲆΔᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠⵠⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": "fatant",
				name: "Mr. Ant"
			}, {
				id: 115,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆⲆΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆⲆⵠΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃⵠᐃⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃΔⲆⲆⵠⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Mr. Watermelon"
			}, {
				id: 101,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠⵠΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠᐃᐃⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠⵠⲆⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠᐃᐃΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⲆⵠⲆⲆ],
				name: "Mr. Thornbush"
			}, {
				id: 131,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠΔᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆᐃᐃΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⲆⵠΔᐃⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃΔᐃⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Cthulhu"
			}, {
				id: 143,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⲆⲆⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⵠⲆΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃΔᐃⲆᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔᐃⲆⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mr. Cactus"
			}, {
				id: 144,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⵠΔΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⵠᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠΔⲆⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⲆΔΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Momo"
			}, {
				id: 180,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃⵠΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆⲆΔⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆⵠΔΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃᐃᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Scream"
			}, {
				id: 193,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆⲆΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃⵠⵠᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔΔⲆⲆⲆΔⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆΔΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Dragon"
			}, {
				id: 195,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆⵠⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆΔΔΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔᐃΔⲆΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⵠΔⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Forest Spirit"
			}, {
				id: 197,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠΔᐃⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆⲆΔⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆᐃⲆᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Evil Goat"
			}, {
				id: 199,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⵠⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⲆΔⵠⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠΔᐃⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⲆΔΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Rotten"
			}, {
				id: 201,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔᐃΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆᐃᐃᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠΔⲆⲆᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⵠⲆⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Fossil"
			}, {
				id: 205,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔⵠⵠⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔⲆⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔⵠΔΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Spectrum"
			}, {
				id: 210,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔᐃⲆΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔᐃⵠⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⵠΔΔΔᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⲆⲆΔⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": "Helpy",
				name: "Black Cat"
			}, {
				id: 214,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠΔⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠᐃⲆΔⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃΔⵠⲆΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⲆⵠⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Lynx"
			}, {
				id: 215,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔᐃⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠΔⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃΔⵠᐃᐃⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔᐃⵠⵠⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Warg"
			}, {
				id: 217,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃΔⲆⵠΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆᐃⲆΔΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆⵠᐃⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Menhir"
			}, {
				id: 95,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔⲆᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆΔΔⵠⲆⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃⲆᐃⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆᐃⲆᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[4],
				name: "Mr. Garlic"
			}, {
				id: 76,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃᐃᐃᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃᐃⲆⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃΔᐃΔⲆⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃᐃᐃΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Robot Dragon"
			}, {
				id: 44,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⲆΔⵠⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠⲆᐃΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔⲆⲆΔΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃΔΔⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Lava Dragon Version 1"
			}, {
				id: 90,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠⵠⲆΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔΔΔⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆᐃⲆⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔⵠⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": "ExpertyAnimations",
				name: "Lava Dragon Version 2"
			}, {
				id: 124,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃⲆΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆⵠⵠⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠⲆΔⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔΔⲆᐃⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lava Dragon Version 3"
			}, {
				id: 45,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔᐃᐃᐃⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃᐃⲆⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠⵠⵠᐃⲆⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠⲆΔΔΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[101],
				name: "Ice Dragon Version 1"
			}, {
				id: 46,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⵠΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔᐃΔⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃⵠⲆⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆΔΔⲆᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Ice Dragon Version 2"
			}, {
				id: 108,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⵠΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃⵠⵠΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⲆⲆⵠⲆΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆᐃⲆᐃΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Ice Dragon Version 3"
			}, {
				id: 123,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔΔΔⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⲆᐃⵠⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⲆⵠΔΔⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Baby Dragon Version 1"
			}, {
				id: 128,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃᐃᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔᐃⲆⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆΔⵠⵠⲆᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠⵠⵠⵠⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[188],
				name: "Baby Dragon Version 2"
			}, {
				id: 125,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔᐃᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔⵠᐃⲆⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔⵠΔᐃⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃΔᐃⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Baby Lava"
			}, {
				id: 47,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆⲆⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠⵠⵠⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃᐃᐃⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆΔⲆⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[ΔⲆΔⲆ],
				name: "Kraken"
			}, {
				id: 129,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠⵠⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆᐃⵠⵠᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆⵠᐃⲆᐃᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⲆΔᐃΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[ⲆⲆΔΔ],
				name: "Sandworm"
			}, {
				id: 63,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔΔᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠᐃᐃᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔⵠⵠⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⵠⲆⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Golden Bread"
			}, {
				id: 67,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⵠΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠΔᐃᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃΔΔⵠΔΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃⵠⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": "ForgottenHeroe",
				name: "Starver Ores"
			}, {
				id: 130,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⵠⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠⵠΔᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆᐃⲆⲆⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠΔⵠⲆⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[4],
				name: "Poo"
			}, {
				id: 89,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⲆⵠⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃΔⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⵠᐃΔⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃᐃᐃⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": "Poinet",
				name: "Volcano Starver"
			}, {
				id: 112,
				"ⲆⲆΔ": ⵠᐃ.Ⲇᐃⵠⵠⵠᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆᐃⵠⲆΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃⲆⲆⵠⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆᐃⵠΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lava Starver"
			}, {
				id: 183,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠᐃⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆΔΔΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠⲆⲆⵠⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃⲆᐃⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Revaster"
			}, {
				id: 192,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃⲆΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠΔⵠΔΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃⲆᐃΔΔⵠΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠΔⵠΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Awakened"
			}, {
				id: 194,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔΔⲆⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃΔⵠⵠᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃᐃΔⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Ice Dragon"
			}, {
				id: 236,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔⲆⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃᐃΔᐃⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠΔΔⵠⵠᐃΔ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃᐃⲆΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Crystal Dragon"
			}, {
				id: 208,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃΔΔΔᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃΔⲆΔᐃᐃᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⲆΔⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bone Dragon"
			}, {
				id: 216,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃΔⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.Ⲇᐃⵠᐃⵠᐃⵠ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ᐃᐃᐃᐃᐃⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ᐃⵠᐃⵠᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Warg Ghost"
			}, {
				id: 226,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃᐃⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⲆⵠᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⵠᐃⵠⵠⲆⵠⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃᐃⲆᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Cursed"
			}, {
				id: 48,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔᐃⵠᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆⵠΔΔⲆ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃⵠⵠΔⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠⲆᐃⲆⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Robot"
			}, {
				id: 110,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔΔᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠⵠⲆᐃ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ⲆΔᐃⵠⵠⲆⲆ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔᐃⵠⵠⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Blue Butterfly"
			}, {
				id: 157,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⲆᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃⲆⲆᐃΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔⵠΔⵠⲆΔᐃ,
				"ⲆⵠΔⲆ": ⵠᐃ.ⵠᐃΔⲆⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Yrifox"
			}, {
				id: 165,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃᐃⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃᐃⵠⵠΔ,
				"ᐃᐃᐃᐃ": ⵠᐃ.ΔᐃΔᐃΔᐃⵠ,
				"ⲆⵠΔⲆ": ⵠᐃ.ΔⵠⲆⵠⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ,
				"ΔⵠΔ": "OmarJr13",
				name: "Blob Skin"
			}],
			"ⵠΔΔⵠ": [{
				id: 0,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆᐃⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⵠΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag 1"
			}, {
				id: 1,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⵠᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Bag"
			}, {
				id: ΔⵠΔΔ,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠⲆⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag 2"
			}, {
				id: ᐃⵠⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆΔΔⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⲆⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag 3"
			}, {
				id: 4,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃⲆⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔΔⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag 4"
			}, {
				id: ᐃᐃⲆᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃⲆᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag 5"
			}, {
				id: ᐃΔⲆᐃⲆᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆⵠᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠᐃΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wood Pickaxe Bag"
			}, {
				id: ⲆΔΔⲆΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃᐃᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⲆᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[184],
				name: "Wood Carrier"
			}, {
				id: 37,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔΔᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag 6"
			}, {
				id: 39,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆΔᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠⵠⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Wooden Swords"
			}, {
				id: 44,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⲆⲆⵠⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⲆᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[137],
				name: "Big Bag"
			}, {
				id: ⲆⵠΔΔⵠ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃᐃⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⵠΔⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[137],
				name: "Bag 6"
			}, {
				id: ΔⲆᐃᐃᐃ,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠΔⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃΔⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Easter Bag"
			}, {
				id: ᐃⵠⵠΔⵠ,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆⲆⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃΔⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Star Bag"
			}, {
				id: Ⲇⵠᐃⵠᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠΔⲆΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Bag"
			}, {
				id: 20,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠⲆᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠᐃΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[184],
				name: "Stone Carrier"
			}, {
				id: 24,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠΔⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃΔᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Stone Pickaxe Bag"
			}, {
				id: ΔⲆⵠⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃᐃⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃᐃⵠᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[137],
				name: "Bag Camouflage"
			}, {
				id: 38,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⵠΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Stone Swords"
			}, {
				id: 54,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔⲆⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Cow Bag"
			}, {
				id: 59,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠᐃΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆΔΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[ⲆᐃⵠⵠⵠΔΔ],
				name: "Starver Bag"
			}, {
				id: 62,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆᐃΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[12],
				name: "Crystal Sky Bag"
			}, {
				id: 71,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔᐃᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⲆⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Portable Furnace"
			}, {
				id: 78,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔⵠⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⲆΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Crate Bag"
			}, {
				id: 13,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠᐃᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Honey Pot"
			}, {
				id: 21,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔⲆΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆⵠⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[184],
				name: "Gold Carrier"
			}, {
				id: 30,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔⵠᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆᐃⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Gold Pickaxe Bag"
			}, {
				id: 29,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆΔⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠΔⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "Ariel",
				name: "Mr and Mrs Bakers"
			}, {
				id: 41,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠⵠᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⲆⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Golden Swords"
			}, {
				id: 47,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃⵠⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Explorer Bag"
			}, {
				id: 51,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠᐃᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆΔΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Bamboo Bag"
			}, {
				id: 53,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃⵠⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠⲆⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mummy Bag"
			}, {
				id: 58,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⲆᐃⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃⲆⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Watermelon Bag"
			}, {
				id: 60,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⵠᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⵠΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Garlic Bag"
			}, {
				id: 61,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠΔᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃⵠⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ᐃⵠⲆⲆⲆ],
				name: "Pumpkin Bag"
			}, {
				id: 64,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⲆᐃⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔⲆᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[397],
				name: "Oil Barel bag"
			}, {
				id: 67,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⵠⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Tree Bag"
			}, {
				id: 70,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⵠΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔᐃⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Lit Portable Furnace"
			}, {
				id: 72,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⲆΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Christmas Berry Bush Bag"
			}, {
				id: 73,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⲆⵠᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃᐃⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Berry Bush Bag"
			}, {
				id: 74,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔΔΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⲆⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Fall Berry Bush Bag"
			}, {
				id: 76,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⵠᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃΔᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Reclaimed Bag"
			}, {
				id: ⲆⵠΔΔⵠⵠΔ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃᐃⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠΔⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "a Rabbit in my Bag"
			}, {
				id: ᐃⲆⲆΔⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔⵠⵠⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃΔⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bird's nest"
			}, {
				id: 16,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃᐃᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "a Fish on your Back"
			}, {
				id: ⲆΔΔᐃⲆⲆᐃ,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆᐃⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⵠⲆᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "a Squirrel in my Bag"
			}, {
				id: 22,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠΔᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔΔΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[184],
				name: "Diamond Carrier"
			}, {
				id: ⲆⵠⲆᐃᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔⲆⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Resources Bag"
			}, {
				id: 32,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃΔⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Diamond Pickaxe Bag"
			}, {
				id: 40,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔⵠⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Diamond Swords"
			}, {
				id: 45,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔⲆⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃΔⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "My Cake Bag"
			}, {
				id: 46,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⵠᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆΔΔᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "My Christmas Cake Bag"
			}, {
				id: 52,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⲆᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠᐃⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Fish Bag"
			}, {
				id: 65,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃΔᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Cloud Bag"
			}, {
				id: 68,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔⵠⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃⲆΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Bee Bag"
			}, {
				id: 77,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆᐃⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔᐃⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bag and Bedroll"
			}, {
				id: 80,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠΔᐃⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⲆΔᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Peasant's Bag"
			}, {
				id: 81,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠⲆΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔᐃⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Probably Stolen Bag"
			}, {
				id: 48,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔⵠΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": "fatant",
				name: "Natural Bag"
			}, {
				id: 23,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠⲆΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃΔΔⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[184],
				name: "Amethyst Carrier"
			}, {
				id: 25,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⵠΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⲆᐃⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Amethyst Pickaxe Bag"
			}, {
				id: 28,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔⲆΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Your Baby"
			}, {
				id: 33,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔΔΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⵠⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Tropical Bag"
			}, {
				id: 43,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠᐃⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⲆⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Amethyst Swords"
			}, {
				id: 35,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Ice Bag"
			}, {
				id: 50,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃΔᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔᐃⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⵠΔΔᐃ],
				name: "Thornbush Bag"
			}, {
				id: 56,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆΔⲆᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃᐃⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Autumn Bag"
			}, {
				id: 57,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆᐃᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⵠΔⲆᐃΔ],
				name: "Dino Egg Bag"
			}, {
				id: 66,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆᐃⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆⲆⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Magic Cloud Bag"
			}, {
				id: 69,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆᐃᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆΔⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Chest Bag"
			}, {
				id: 75,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆΔΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⵠᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Spectum Bag"
			}, {
				id: 79,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆⵠⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Winter Peasant's Bag"
			}, {
				id: 31,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⵠⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠΔΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[184],
				name: "Reidite Carrier"
			}, {
				id: ᐃⲆΔΔᐃⵠΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃᐃΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠᐃΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Lava Bag"
			}, {
				id: 49,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆᐃᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆΔⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lava Bag 2"
			}, {
				id: 36,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔΔⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆᐃᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Dragon Bag"
			}, {
				id: 55,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆⲆⲆᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⵠΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Ice Bag"
			}, {
				id: 26,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔᐃᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃⲆᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Reidite Pickaxe Bag"
			}, {
				id: 27,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃΔΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⵠᐃⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Octopus Bowl"
			}, {
				id: 34,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠᐃΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[4],
				name: "Cave Bag"
			}, {
				id: 42,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃΔΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bag with Reidite Swords"
			}, {
				id: 63,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⲆᐃΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.Δᐃⵠᐃⵠⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Engineer Bag"
			}],
			"ΔΔⲆⵠᐃ": [{
				id: 0,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⲆⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠΔᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Dead Box"
			}, {
				id: 1,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠⲆⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔΔⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[588],
				name: "Hidden item"
			}, {
				id: ⲆⲆⵠΔ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠΔⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⲆⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box 1"
			}, {
				id: 3,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆΔⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box 2"
			}, {
				id: ⵠⲆᐃᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠⵠⵠᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠᐃᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box 3"
			}, {
				id: 5,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔᐃᐃᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆΔⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Broken Wooden Box"
			}, {
				id: ᐃⲆᐃᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⲆΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃᐃⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box"
			}, {
				id: 7,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆⵠⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆⲆⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Battle Box"
			}, {
				id: 8,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⵠⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⲆΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box with a Cross"
			}, {
				id: ⵠⵠⵠΔᐃᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔΔΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔⲆⵠᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box with Bubbles"
			}, {
				id: ΔΔⵠᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔᐃⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠΔᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden Box with Eyes"
			}, {
				id: ΔΔᐃΔΔᐃᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⵠΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Dark Wooden Box"
			}, {
				id: 38,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔⲆᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔⲆᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": "Weddlz",
				name: "Noob Box"
			}, {
				id: 12,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃΔⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆΔΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden and Stone Box"
			}, {
				id: 14,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆᐃΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Star Box 1"
			}, {
				id: 15,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔᐃᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔᐃⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Star Box 2"
			}, {
				id: 27,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⲆΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃⲆᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Flower Box"
			}, {
				id: 46,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔΔⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[188],
				name: "Blue Box"
			}, {
				id: 75,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠΔΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠⵠⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Night Stars Crate"
			}, {
				id: ⲆⲆⵠᐃΔᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃΔⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠⵠΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Beehive"
			}, {
				id: 13,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠⵠⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃᐃⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden and Golden Box"
			}, {
				id: 21,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⵠⵠᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⲆᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Gravestone"
			}, {
				id: 25,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔⲆⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆᐃⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Sky Box"
			}, {
				id: 29,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠⵠᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆΔΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[441],
				name: "Golden Box"
			}, {
				id: 34,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔΔΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠⵠΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Water Crate"
			}, {
				id: 35,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃΔᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⵠⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Glass Crate"
			}, {
				id: 70,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠⵠⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[Ⲇⵠⵠⵠⵠ],
				name: "Crystal Sky Box"
			}, {
				id: 74,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔΔΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠⲆⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Reclaimed Crate"
			}, {
				id: 77,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔΔΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Workplace Accident"
			}, {
				id: 16,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⵠΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠᐃᐃⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden and Diamond Box"
			}, {
				id: 18,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆᐃⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃⲆᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Don't Hit Me"
			}, {
				id: 26,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠⲆᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆᐃᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Underwater Box"
			}, {
				id: 31,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⵠⵠⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔᐃΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[137],
				name: "Items Pile"
			}, {
				id: 32,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃⲆᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠΔᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Cake Box"
			}, {
				id: 33,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠᐃⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃⲆⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Christmas Cake Box"
			}, {
				id: 36,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⲆᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔΔΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": "Fukss",
				name: "Crab Box"
			}, {
				id: 42,
				"ⲆⲆΔ": ⵠᐃ.Ⲇⵠᐃᐃⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃᐃΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Fishing Box"
			}, {
				id: 72,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⲆᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆᐃᐃⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Storage Machine"
			}, {
				id: 22,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃⲆᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆΔⵠᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Let me out of here"
			}, {
				id: ⲆᐃᐃⵠΔΔⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⵠΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃᐃⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Wooden and Amethyst Box"
			}, {
				id: 24,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠΔᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔᐃΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Aquarium"
			}, {
				id: 28,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃᐃΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠΔⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Gift Box"
			}, {
				id: 40,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠΔΔΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Open Watermelon Box"
			}, {
				id: 41,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⵠⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆⵠⲆΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Watermelon Box"
			}, {
				id: 39,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⵠΔⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⵠⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⲆⵠⵠⲆΔ],
				name: "Thornbush Box"
			}, {
				id: 43,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⲆΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃΔⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Rabbit in the Box"
			}, {
				id: 47,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.Ⲇⵠᐃᐃᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⵠΔⲆᐃΔ],
				name: "Garlic Plot"
			}, {
				id: 48,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⵠΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⲆⲆⲆⵠᐃ],
				name: "Pumpkin Plot"
			}, {
				id: 78,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⵠᐃⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Spectrum Portal"
			}, {
				id: 45,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃᐃⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔᐃᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Autumn Box"
			}, {
				id: 44,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆⵠⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⲆⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Box"
			}, {
				id: ᐃⵠΔⲆⵠⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆΔⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠⵠᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Metal and Reidite Box"
			}, {
				id: 23,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⲆᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠⲆⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Kraken Box"
			}, {
				id: 30,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠΔᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Lava Box"
			}, {
				id: 37,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⲆΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃᐃᐃⵠᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lava Box 2"
			}, {
				id: 49,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆᐃΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃⵠⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Rabbit"
			}, {
				id: 50,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔᐃΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃⵠⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Wolf"
			}, {
				id: 51,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔⵠᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃⵠⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Spider"
			}, {
				id: 52,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔᐃᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃⵠⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Hawk"
			}, {
				id: 53,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆΔᐃⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆᐃᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Bear"
			}, {
				id: 54,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆᐃⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃᐃⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Fox"
			}, {
				id: 55,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃᐃⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔᐃⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Baby Mammoth"
			}, {
				id: 56,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⲆⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⵠⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Mammoth"
			}, {
				id: 57,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔᐃᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Sandworm"
			}, {
				id: 58,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⲆⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Vulture"
			}, {
				id: 59,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃᐃⵠᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠΔᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Kraken"
			}, {
				id: 60,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠⲆᐃⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⲆⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Piranha"
			}, {
				id: 61,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃᐃⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃⲆⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Baby Dragon"
			}, {
				id: 62,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆⵠΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Baby Lava"
			}, {
				id: 63,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⲆᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Dragon"
			}, {
				id: 64,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⵠΔΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆⵠᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Penguin"
			}, {
				id: 65,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔΔᐃⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔΔΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Lava Dragon"
			}, {
				id: 66,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⲆⲆⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔⲆᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Boar"
			}, {
				id: 67,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔΔⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃⲆⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Fire mob"
			}, {
				id: 68,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔᐃⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆⲆᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the Crab"
			}, {
				id: 69,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠⲆⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠᐃᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Box of the King Crab"
			}, {
				id: 71,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠᐃΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Dragon Box"
			}, {
				id: 73,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⲆⵠⲆΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠᐃΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Rekt"
			}, {
				id: 76,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃⲆⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆⵠⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sleeping Tamon Dragon"
			}],
			"ΔᐃⵠⲆΔ": [{
				id: 0,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃⲆⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Book 1"
			}, {
				id: ΔᐃⵠΔ,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆΔΔᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Book 2"
			}, {
				id: 2,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆⲆΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Book 3"
			}, {
				id: 3,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆΔⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔᐃΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Book 4"
			}, {
				id: ᐃΔⲆΔ,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠᐃΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔⵠΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Damaged Book 1"
			}, {
				id: 18,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃΔᐃΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": "SeveR",
				name: "Damaged Book 2"
			}, {
				id: 5,
				"ⲆⲆΔ": ⵠᐃ.Δⵠᐃⵠᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔᐃⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Doctorpus",
				name: "Scroll"
			}, {
				id: 6,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠΔΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠΔΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Doctorpus",
				name: "Clipboard"
			}, {
				id: ᐃⲆⲆΔᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔⲆⵠⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃⵠⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Seed Book"
			}, {
				id: 20,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[ⲆⵠΔΔⲆ],
				name: "Camo Book"
			}, {
				id: 24,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔᐃⲆⲆᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠⵠⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[137],
				name: "Stone Tablet"
			}, {
				id: 47,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆⵠΔᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Reclaimed Book"
			}, {
				id: ᐃⵠⲆᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⵠⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔⵠΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Star Book"
			}, {
				id: 8,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃᐃΔⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠⲆᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Gold Book"
			}, {
				id: 15,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔᐃᐃⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⲆⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Old Mysterious Paper"
			}, {
				id: 17,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃᐃΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔⲆⵠⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Gold Engraving"
			}, {
				id: 25,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⲆⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃⵠΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": "fatant",
				name: "Ant Book"
			}, {
				id: 32,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⲆⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆᐃⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Mummy Book"
			}, {
				id: 37,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠⵠⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆᐃᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Garlic Book"
			}, {
				id: 38,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⵠΔⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆΔⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[ⲆⵠⵠⲆΔ],
				name: "Pumpkin Book"
			}, {
				id: 39,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆⲆᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⲆⲆΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Christmas Tree Book"
			}, {
				id: ⵠⵠᐃᐃΔⵠⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠΔΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Diamond Book"
			}, {
				id: 9,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔⵠᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔⲆΔⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Obscure Book"
			}, {
				id: 16,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⲆΔΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠΔᐃᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Rolled Parchment"
			}, {
				id: 22,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠᐃⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃⵠⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Cake Book"
			}, {
				id: 23,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⵠⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠΔⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Christmas Cake Book"
			}, {
				id: 30,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⲆΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃΔᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[188],
				name: "Fish Book"
			}, {
				id: 31,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆⵠᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⵠᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[12],
				name: "Once upon a time"
			}, {
				id: 48,
				"ⲆⲆΔ": ⵠᐃ.ΔΔΔⵠΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃᐃΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Chrono Clock"
			}, {
				id: 49,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⵠᐃΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠⲆᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Recipe Book"
			}, {
				id: ΔΔⲆΔΔ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⵠΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔⵠᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Amethyst Book"
			}, {
				id: 28,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠⲆΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Paint Pallet"
			}, {
				id: 29,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔΔⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⵠΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[12],
				name: "Watermelon Book"
			}, {
				id: 27,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆΔᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⵠᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Thornbush Book"
			}, {
				id: 35,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⵠᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆᐃᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⵠΔⲆᐃΔ],
				name: "Menu"
			}, {
				id: 36,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔΔΔΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆΔΔᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[ⲆΔᐃᐃⲆ],
				name: "Lover Letter"
			}, {
				id: 40,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆΔᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⵠᐃΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Fresh-Baked Cookies"
			}, {
				id: 41,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⵠᐃⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⲆᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Inside, there is just a book."
			}, {
				id: 45,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⵠᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠⵠᐃⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Crafting Machine"
			}, {
				id: 33,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃΔΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⵠᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Book"
			}, {
				id: 34,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠᐃΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆᐃⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Autumn Book"
			}, {
				id: 14,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⲆΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⲆᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Reidite Book"
			}, {
				id: ⲆΔⵠⵠⲆᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆⵠᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠΔᐃⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Lava Book"
			}, {
				id: 26,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆΔⲆⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⵠⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lava Book 2"
			}, {
				id: ΔⵠⵠΔᐃⲆᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔΔⵠⵠⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔᐃⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "Ocean Mystery"
			}, {
				id: 21,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔᐃⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠⵠᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Dragon Book"
			}, {
				id: 42,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠΔᐃΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠᐃᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Engineer Book"
			}, {
				id: 43,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃᐃΔⲆᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⵠⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Nightmare Book"
			}, {
				id: 44,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔⲆΔΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔΔᐃⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[522],
				name: "Mystery Book"
			}, {
				id: 46,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃⲆΔΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Cursed Book"
			}],
			"ⵠⲆΔᐃᐃ": [{
				id: 0,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔⲆᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃΔⲆᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Nothing"
			}, {
				id: 2,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⲆᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆᐃᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Pink Cheeks"
			}, {
				id: ⵠΔⵠⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔΔⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⵠⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Heart"
			}, {
				id: ⵠⵠⲆ,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃΔⲆⵠⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bandage 1"
			}, {
				id: ᐃΔᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃΔⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⲆⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔᐃΔᐃΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "Flower 1"
			}, {
				id: 5,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆⵠⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆΔⵠΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bow 1"
			}, {
				id: 6,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔΔⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⲆΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bandage 2"
			}, {
				id: ᐃⲆⵠⲆⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃⵠⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⵠΔΔΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[102],
				name: "Flower 2"
			}, {
				id: ⲆⲆᐃᐃᐃ,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⲆⵠΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⲆᐃΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Bandage 3"
			}, {
				id: 36,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃΔⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆⲆΔᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Foliage"
			}, {
				id: 59,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃᐃΔⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔΔⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[588],
				name: "Peaceful"
			}, {
				id: 67,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔⲆΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠᐃⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Sparkles"
			}, {
				id: 68,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔⵠⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆⲆⵠΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Luxury"
			}, {
				id: 69,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆᐃⲆⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠΔΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃⲆΔᐃ,
				"ΔⵠΔ": ⵠ[439],
				name: "Snow Flakes Crown"
			}, {
				id: 17,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠΔⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠΔᐃⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Glasses 1"
			}, {
				id: 10,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆⵠᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆᐃᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Bow 2"
			}, {
				id: ⵠᐃⲆⲆᐃΔⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃᐃΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠⲆⵠᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[439],
				name: "Little Stars"
			}, {
				id: ᐃⵠᐃᐃΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆᐃⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃᐃᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Pirate Eye Patch 1"
			}, {
				id: 44,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆⵠⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠΔⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[4],
				name: "Pirate Eye Patch 2"
			}, {
				id: 23,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⵠⵠᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆⵠⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Clown nose"
			}, {
				id: ᐃΔⲆⵠⵠΔⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔᐃⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Eye Patch"
			}, {
				id: 30,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃΔΔⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠΔΔΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Flower 3"
			}, {
				id: 38,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠΔⲆⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⲆΔᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[441],
				name: "False Nose"
			}, {
				id: 74,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃᐃΔⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⵠΔᐃⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Red Cloth"
			}, {
				id: 75,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆΔΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠΔΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Blue Cloth"
			}, {
				id: 79,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⲆⲆⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⵠⲆⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Transparent Mask"
			}, {
				id: 89,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆⲆΔΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃΔⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[31],
				name: "Starve.io Anime"
			}, {
				id: 94,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃⲆⵠⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔⲆΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": "Ant",
				name: "Hero Mask"
			}, {
				id: 100,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⵠⲆᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⵠΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "This starver is mad"
			}, {
				id: 104,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔⲆⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠⵠᐃⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Scars"
			}, {
				id: 106,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠᐃⲆⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⵠⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "In Search of Intelligence"
			}, {
				id: 109,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆΔᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔᐃᐃⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Reclaimed Bandage"
			}, {
				id: 111,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃΔⲆⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⵠⲆᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⵠᐃΔⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Unwrap Starver for Gift"
			}, {
				id: 15,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔΔᐃᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆⲆⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Star Glasses"
			}, {
				id: 21,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃΔⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔᐃⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Great-aunt's Glasses"
			}, {
				id: 24,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⵠⲆᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆΔᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Little Starver"
			}, {
				id: 22,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃΔᐃⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆⵠⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Little Glasses"
			}, {
				id: ⲆⵠⲆΔⲆᐃⵠ,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔᐃᐃⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠⲆᐃⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Flower Chain"
			}, {
				id: 29,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⵠⲆᐃᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠᐃΔΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Horns"
			}, {
				id: 31,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃΔᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠⵠᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Golden Flower"
			}, {
				id: 40,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃⵠᐃⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⵠΔΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Sleeping Mask"
			}, {
				id: 57,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⵠΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆⲆⵠᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[4],
				name: "Fish on your head"
			}, {
				id: 58,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆΔΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Rose"
			}, {
				id: 91,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔⲆⵠᐃⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃᐃΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[397],
				name: "Grey Scarf"
			}, {
				id: 92,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔᐃᐃⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆⲆⲆᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[397],
				name: "Black Scarf"
			}, {
				id: 93,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃᐃΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[397],
				name: "Skull Mask"
			}, {
				id: 95,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⲆΔⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⵠⵠⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Golden Monocle"
			}, {
				id: 96,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆΔⲆⵠΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆⵠⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "A simple instruction"
			}, {
				id: 102,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆᐃᐃΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃᐃⲆⵠⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Garland"
			}, {
				id: 103,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⲆⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆΔᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "The Doormat"
			}, {
				id: 108,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⵠΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃⲆᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Copium Tanks"
			}, {
				id: 117,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠᐃΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆᐃᐃΔᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Eyelashes"
			}, {
				id: 118,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆⲆᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆΔⲆΔⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆᐃⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Helmet Prototype"
			}, {
				id: ⲆⲆᐃΔⲆ,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃᐃⲆᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃΔⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Fancy Glasses"
			}, {
				id: 25,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⵠⲆⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⲆᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Medecin Mask"
			}, {
				id: 14,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⵠⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆΔᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mr. Mayor"
			}, {
				id: ⲆᐃⲆⵠⲆΔΔ,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃΔⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔᐃᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sunglasses 2"
			}, {
				id: 28,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃⵠⲆᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⲆΔⵠᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[439],
				name: "Starfish"
			}, {
				id: 37,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⲆΔⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃΔΔⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Berry"
			}, {
				id: 39,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⲆⵠⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔᐃΔᐃΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Flake"
			}, {
				id: 43,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆᐃⲆᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⲆⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Leaf "
			}, {
				id: 61,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠᐃΔᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃΔΔΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "A sword in your head"
			}, {
				id: 62,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃΔΔⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⵠⲆⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Winter Scarf"
			}, {
				id: 64,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⵠᐃᐃΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃΔⲆΔⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Scarf 2"
			}, {
				id: 66,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔᐃⲆΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⵠᐃⵠᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Winter Scarf 3"
			}, {
				id: 70,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⵠᐃᐃΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆⵠᐃᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mask with animal tracks"
			}, {
				id: 71,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⵠⲆΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⲆⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Spring Mask"
			}, {
				id: 72,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔᐃᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⵠⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Pink Mask"
			}, {
				id: 73,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠⲆⲆⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔΔⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Blue Mask"
			}, {
				id: 76,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃᐃⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃⲆΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Military Mask"
			}, {
				id: 77,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔⲆⲆⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃⵠΔΔⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Orange Mask"
			}, {
				id: 78,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃᐃᐃᐃᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔΔᐃⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "White and Red Points Mask"
			}, {
				id: 80,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⲆᐃΔΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔΔⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Stick out your tongue Mask"
			}, {
				id: 81,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔⲆΔⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Two Teeth Mask"
			}, {
				id: 82,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠᐃⵠΔⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⵠΔⲆᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Make-up Mask"
			}, {
				id: 83,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔΔⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆᐃᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sad Mask"
			}, {
				id: 84,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆⲆᐃᐃⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠΔⲆⵠⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Happy Mask"
			}, {
				id: 90,
				"ⲆⲆΔ": ⵠᐃ.ΔᐃⵠⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⵠⵠᐃΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[522],
				name: "Blood"
			}, {
				id: 101,
				"ⲆⲆΔ": ⵠᐃ.ΔⲆⵠⲆⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆⲆΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Axed Plans"
			}, {
				id: 105,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠᐃΔᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔΔⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Saddle"
			}, {
				id: 113,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔⵠⲆⵠⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆᐃⵠⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "I see"
			}, {
				id: 114,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠᐃᐃᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃᐃΔⵠᐃⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "I have no body and I must dress"
			}, {
				id: 115,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⲆⵠⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔⲆⲆⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠⲆⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Cursed Crown"
			}, {
				id: 27,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆᐃᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆⲆⵠⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Clown Face"
			}, {
				id: 20,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔΔΔⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔⲆΔᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Sunglasses 3"
			}, {
				id: 32,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⵠⵠᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔⲆⲆⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Engineer's Glasses"
			}, {
				id: 33,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠⲆⵠⵠΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⲆΔᐃⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Engineer's Monocle"
			}, {
				id: 34,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆᐃⵠⵠⵠᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆⵠⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mauve's butt"
			}, {
				id: 41,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆᐃΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⵠΔⲆΔΔⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lapa Head"
			}, {
				id: 42,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔᐃΔᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⲆΔⵠΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[588],
				name: "Lapa Head "
			}, {
				id: 85,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠⵠⵠⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⲆⵠᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Mask and Glasses"
			}, {
				id: 110,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆΔΔΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔⵠᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ⲆⵠΔⵠ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Spectrum Pet"
			}, {
				id: 60,
				"ⲆⲆΔ": ⵠᐃ.ⲆⲆⲆΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠⲆΔⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Jason"
			}, {
				id: 26,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃΔᐃᐃⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⵠΔᐃᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Devil Horns"
			}, {
				id: ⲆΔΔⵠΔⲆⵠ,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⵠⵠⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔΔᐃⲆⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Big Boss"
			}, {
				id: 35,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⵠᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠΔᐃⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Baby Kraken"
			}, {
				id: 63,
				"ⲆⲆΔ": ⵠᐃ.ⵠᐃⲆΔⲆΔⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆᐃΔⵠᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Deer Antlers"
			}, {
				id: 65,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⵠⵠᐃΔⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃᐃⵠᐃⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Baby Dragon on your head"
			}, {
				id: 86,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆⲆⲆⲆⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠΔᐃⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Gaz Mask and Glasses"
			}, {
				id: 87,
				"ⲆⲆΔ": ⵠᐃ.ⵠⲆᐃⲆⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃΔᐃΔᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Pink Gaz Mask and Glasses"
			}, {
				id: 88,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠⲆᐃᐃᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠᐃⲆᐃᐃᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[588],
				name: "Engineer Glasses"
			}, {
				id: 97,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃᐃⲆΔΔ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆΔⵠᐃᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Jarred Horns"
			}, {
				id: 98,
				"ⲆⲆΔ": ⵠᐃ.ᐃΔΔⲆⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔᐃⵠⲆⵠⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Curved Horns"
			}, {
				id: 99,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠⲆΔⲆⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ΔⲆⲆΔⲆⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Evil Goat Horns"
			}, {
				id: 107,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔⵠᐃⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃΔⵠⵠⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Decorative Earmuffs"
			}, {
				id: 112,
				"ⲆⲆΔ": ⵠᐃ.ΔⵠⲆⲆΔⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⲆⵠΔⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Tamon Dragon Pet"
			}, {
				id: 116,
				"ⲆⲆΔ": ⵠᐃ.ⵠⵠΔⵠⲆⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔΔᐃᐃⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ᐃΔⲆⲆ,
				"ΔⵠΔ": ⵠ[102],
				name: "Blanket"
			}, {
				id: 45,
				"ⲆⲆΔ": ⵠᐃ.ᐃᐃⲆᐃᐃⲆΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆⲆⲆⵠⵠΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 5",
				level: ΔᐃΔΔⲆ
			}, {
				id: 46,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆⵠⲆⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔᐃΔΔⵠⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 10",
				level: Ⲇⵠᐃⵠᐃ
			}, {
				id: 47,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔᐃΔⵠΔ,
				"ⲆΔⵠ": ⵠᐃ.ᐃΔⲆᐃⲆᐃⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 15",
				level: ⲆⲆᐃΔⵠⲆᐃ
			}, {
				id: 48,
				"ⲆⲆΔ": ⵠᐃ.ⲆΔⲆⵠⲆⵠⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆΔⵠΔⲆⲆⲆ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 20",
				level: ΔΔⵠΔ
			}, {
				id: 49,
				"ⲆⲆΔ": ⵠᐃ.ΔΔⵠᐃΔⲆᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃᐃⲆΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 25",
				level: 25
			}, {
				id: 50,
				"ⲆⲆΔ": ⵠᐃ.ⲆᐃⵠᐃⲆᐃΔ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⲆⲆΔⵠΔΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 30",
				level: 30
			}, {
				id: 51,
				"ⲆⲆΔ": ⵠᐃ.ΔΔᐃⲆⲆᐃⵠ,
				"ⲆΔⵠ": ⵠᐃ.ΔᐃⵠⲆⲆⵠᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 35",
				level: 35
			}, {
				id: 52,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⵠⵠⵠⲆⲆ,
				"ⲆΔⵠ": ⵠᐃ.ⲆⵠⵠⵠⵠⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 40",
				level: 40
			}, {
				id: 53,
				"ⲆⲆΔ": ⵠᐃ.ⲆⵠᐃⲆⲆⵠⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠᐃⲆΔⲆⲆΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 45",
				level: 45
			}, {
				id: 54,
				"ⲆⲆΔ": ⵠᐃ.ᐃⲆΔΔⲆΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ᐃⲆᐃⵠᐃᐃΔ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 50",
				level: 50
			}, {
				id: 55,
				"ⲆⲆΔ": ⵠᐃ.ⵠΔⲆⲆⵠΔᐃ,
				"ⲆΔⵠ": ⵠᐃ.ΔΔΔᐃΔⲆⵠ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 55",
				level: 55
			}, {
				id: 56,
				"ⲆⲆΔ": ⵠᐃ.ᐃⵠΔⲆΔⲆⵠ,
				"ⲆΔⵠ": ⵠᐃ.ⵠⵠⲆᐃⲆⲆᐃ,
				"ⵠΔⲆ": ⵠⲆᐃ.ΔΔⲆⲆΔ,
				"ΔⵠΔ": ⵠ[102],
				name: "More than Level 60",
				level: 60
			}]
		};
		ⲆⵠΔΔ.ΔΔⵠᐃΔᐃⲆ = ⲆⵠⵠⵠΔⲆΔ(ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ, 21);
		ⲆⵠΔΔ.ᐃᐃΔⵠΔⵠᐃ = ⲆⵠⵠⵠΔⲆΔ(ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ, 20);
		Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ] = [];
		Ⲇᐃ[Δ.ΔΔᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔΔⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔᐃᐃ] = [];
		for (var ᐃⲆ = 0; ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ.length > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][ᐃⲆ] = [ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ].ⲆⲆΔ, ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ].ⲆΔⵠ];
			Ⲇᐃ[Δ.ΔΔᐃⵠᐃ][ᐃⲆ] = [ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ].ᐃᐃᐃᐃ, ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ].ⲆⵠΔⲆ]
		}
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ.length; ᐃⲆ++) Ⲇᐃ[Δ.ΔᐃⵠⲆΔ][ᐃⲆ] = [ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ[ᐃⲆ].ⲆⲆΔ, ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ[ᐃⲆ].ⲆΔⵠ];
		for (var ᐃⲆ = 0; ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ.length > ᐃⲆ; ᐃⲆ++) Ⲇᐃ[Δ.ΔΔⲆⵠᐃ][ᐃⲆ] = [ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ[ᐃⲆ].ⲆⲆΔ, ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ[ᐃⲆ].ⲆΔⵠ];
		for (var ᐃⲆ = 0; ᐃᐃᐃⵠ.ⵠΔΔⵠ.length > ᐃⲆ; ᐃⲆ++) Ⲇᐃ[Δ.ⵠΔΔⵠ][ᐃⲆ] = [ᐃᐃᐃⵠ.ⵠΔΔⵠ[ᐃⲆ].ⲆⲆΔ, ᐃᐃᐃⵠ.ⵠΔΔⵠ[ᐃⲆ].ⲆΔⵠ];
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ.length; ᐃⲆ++) Ⲇᐃ[Δ.ⵠⲆΔᐃᐃ][ᐃⲆ] = [ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ[ᐃⲆ].ⲆⲆΔ, ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ[ᐃⲆ].ⲆΔⵠ]
	};

	function Δⵠ(Ⲇ, ΔⵠⵠⲆⲆ, ᐃᐃⲆⵠ, ᐃⲆⲆ) {
		ΔⵠⵠⲆⲆ && (Ⲇ.fillStyle = ΔⵠⵠⲆⲆ, Ⲇ.fill());
		ᐃᐃⲆⵠ && (Ⲇ.lineWidth = ᐃⲆⲆ, Ⲇ.strokeStyle = ᐃᐃⲆⵠ, Ⲇ.stroke())
	}
	const ΔⲆⲆⲆⵠ = ΔΔⲆᐃᐃ;

	function ⵠᐃⲆΔⵠΔⲆΔΔ(Ⲇ, ⵠⵠⵠ, ⲆΔⵠΔ, ⲆΔⲆᐃ, ᐃΔⵠⲆ, ΔΔⵠ) {
		ⲆΔⲆᐃ < ⵠΔⲆΔ * ΔΔⵠ && (ΔΔⵠ = ⲆΔⲆᐃ / ᐃⵠΔⲆ);
		ΔΔⵠ * 2 > ᐃΔⵠⲆ && (ΔΔⵠ = ᐃΔⵠⲆ / 2);
		ΔΔⵠ < ᐃΔⵠⵠ && (ΔΔⵠ = ΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.moveTo(ⵠⵠⵠ + ΔΔⵠ, ⲆΔⵠΔ);
		Ⲇ.arcTo(ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ, ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ + ᐃΔⵠⲆ, 0);
		Ⲇ.arcTo(ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ⵠⵠⵠ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ΔΔⵠ);
		Ⲇ.arcTo(ⵠⵠⵠ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ⵠⵠⵠ, ⲆΔⵠΔ, ⲆⲆⲆ);
		Ⲇ.arcTo(ⵠⵠⵠ, ⲆΔⵠΔ, ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ, ΔΔⵠ);
		Ⲇ.closePath()
	}

	function ⲆᐃⵠΔ(Ⲇ, ᐃⵠⲆ, Δᐃᐃ, ⲆⵠᐃΔ) {
		var ⵠⵠⵠ = Math.PI * ⵠⲆⵠᐃ / ᐃⵠⲆ;
		Ⲇ.beginPath();
		var ΔⲆⵠΔⲆᐃᐃ = [{
			x: Δᐃᐃ,
			y: 0
		}];
		var ⵠΔⵠΔᐃΔⲆ = [];
		for (var ᐃⲆ = 1; ᐃⵠⲆ > ᐃⲆ; ᐃⲆ++) {
			ΔⲆⵠΔⲆᐃᐃ.push({
				x: Math.sin(ᐃⲆ * ⵠⵠⵠ) * Δᐃᐃ,
				y: Math.cos(ᐃⲆ * ⵠⵠⵠ) * Δᐃᐃ
			});
			var ΔᐃᐃⵠⲆ = ΔⲆⵠΔⲆᐃᐃ.length;
			ⵠΔⵠΔᐃΔⲆ.push(Ⲇᐃⵠ.ΔⲆᐃⵠⲆⵠΔ(ΔⲆⵠΔⲆᐃᐃ[ΔᐃᐃⵠⲆ - 2], ΔⲆⵠΔⲆᐃᐃ[ΔᐃᐃⵠⲆ - ⵠⵠⲆΔ]))
		}
		ⵠΔⵠΔᐃΔⲆ.push(Ⲇᐃⵠ.ΔⲆᐃⵠⲆⵠΔ(ΔⲆⵠΔⲆᐃᐃ[ΔⲆⵠΔⲆᐃᐃ.length - 1], ΔⲆⵠΔⲆᐃᐃ[ΔⲆⵠ]));
		var ⵠⵠΔ = ⵠΔⵠΔᐃΔⲆ[ⵠΔⵠΔᐃΔⲆ.length - 1];
		Ⲇ.moveTo(ⵠⵠΔ.x, ⵠⵠΔ.y);
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠⲆ; ᐃⲆ++) Ⲇ.arcTo(ΔⲆⵠΔⲆᐃᐃ[ᐃⲆ].x, ΔⲆⵠΔⲆᐃᐃ[ᐃⲆ].y, ⵠΔⵠΔᐃΔⲆ[ᐃⲆ].x, ⵠΔⵠΔᐃΔⲆ[ᐃⲆ].y, ⲆⵠᐃΔ);
		Ⲇ.closePath()
	}

	function ΔⵠⲆ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, Δᐃᐃ) {
		Ⲇ.beginPath();
		Ⲇ.arc(ᐃᐃΔ, ᐃⲆᐃ, Δᐃᐃ, ᐃΔⵠⵠ, 2 * Math.PI)
	}

	function ⵠⲆⲆⵠ(Δᐃᐃ, ⵠⵠ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ⲆΔⲆᐃ = Math.sqrt(ⵠⵠ.width * ⵠⵠ.width + ⵠⵠ.height * ⵠⵠ.height);
		d2 = ⲆΔⲆᐃ / 2;
		ΔΔ.width = ⲆΔⲆᐃ;
		ΔΔ.height = ⲆΔⲆᐃ;
		Ⲇ.translate(d2, d2);
		Ⲇ.rotate(Δᐃᐃ);
		Ⲇ.drawImage(ⵠⵠ, -ⵠⵠ.width / ⵠᐃⵠΔ, -ⵠⵠ.height / ᐃᐃⲆΔ);
		return ΔΔ
	}

	function ᐃΔⵠ(Ⲇ, ⵠⵠⵠ, ⲆΔⵠΔ, ⲆΔⲆᐃ, ᐃΔⵠⲆ, ΔΔⵠ) {
		ⲆΔⲆᐃ < ⵠΔⵠᐃ * ΔΔⵠ && (ΔΔⵠ = ⲆΔⲆᐃ / ᐃᐃΔⵠ);
		ΔΔⵠ * ᐃΔⵠᐃ > ᐃΔⵠⲆ && (ΔΔⵠ = ᐃΔⵠⲆ / ⵠⲆΔΔ);
		ΔΔⵠ < 0 && (ΔΔⵠ = 0);
		Ⲇ.beginPath();
		Ⲇ.moveTo(ⵠⵠⵠ + ΔΔⵠ, ⲆΔⵠΔ);
		Ⲇ.arcTo(ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ, ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ΔΔⵠ);
		Ⲇ.arcTo(ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ⵠⵠⵠ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ΔΔⵠ);
		Ⲇ.arcTo(ⵠⵠⵠ, ⲆΔⵠΔ + ᐃΔⵠⲆ, ⵠⵠⵠ, ⲆΔⵠΔ, ΔΔⵠ);
		Ⲇ.arcTo(ⵠⵠⵠ, ⲆΔⵠΔ, ⵠⵠⵠ + ⲆΔⲆᐃ, ⲆΔⵠΔ, ΔΔⵠ);
		Ⲇ.closePath()
	}

	function ᐃⵠᐃΔΔΔΔ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, Δᐃᐃ, ⵠⵠⵠ) {
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.arc(ᐃᐃΔ, ᐃⲆᐃ, Δᐃᐃ, ⲆⲆⲆ, ⵠⵠⵠ * (ᐃⲆⵠᐃ * Math.PI))
	}
	const ⲆᐃΔΔⲆⵠᐃ = Δⵠᐃᐃᐃ;
	const ΔⵠⲆΔ = ᐃΔⵠⵠ;

	function ⵠΔⵠⵠΔΔⲆⲆⲆ(ᐃ, ᐃⲆΔΔ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ΔᐃⲆ = Math.floor(28 * ᐃ);
		var ᐃⲆⲆΔⲆ = Math.floor(ᐃ * ⲆᐃᐃΔᐃ);
		Ⲇ.font = ᐃⲆⲆΔⲆ + ⵠ[104];
		var ⵠⵠⲆⵠⵠ = 8 * ᐃ;
		var ᐃᐃⲆ = Ⲇ.measureText(ᐃⲆΔΔ).width + ⵠⵠⲆⵠⵠ * ᐃᐃΔⵠ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		ᐃΔⵠ(Ⲇ, Ⲇᐃⵠᐃ, 0, ᐃᐃⲆ, ΔᐃⲆ, Ⲇⵠᐃⵠᐃ * ᐃ);
		Ⲇ.globalAlpha = .5;
		Δⵠ(Ⲇ, ⵠ[151]);
		Ⲇ.globalAlpha = ΔΔⲆΔ;
		Ⲇ.textBaseline = ⵠ[230], Ⲇ.font = ᐃⲆⲆΔⲆ + ⵠ[104];
		Ⲇ.beginPath();
		Ⲇ.fillStyle = ⵠ[68];
		Ⲇ.fillText(ᐃⲆΔΔ, ⵠⵠⲆⵠⵠ, ΔᐃⲆ / 2);
		return ΔΔ
	}

	function ⵠⲆᐃΔⵠⵠⵠᐃΔ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 120;
		ΔΔ.height = 110 * ᐃ;
		if (ᐃⲆ == ΔⲆᐃ) {
			ΔⵠⲆ(Ⲇ, 35 * ᐃ, 75 * ᐃ, 19.72308292331602 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[Δⵠⵠ], 4 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(11 * ᐃ, ᐃ * 77);
			ᐃΔⵠ(Ⲇ, ᐃ * -4, ᐃ * -ᐃΔⲆΔ, ᐃ * 8, 8 * ᐃ, ᐃ * 10);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ΔΔⵠⲆⵠ, ᐃᐃ[0], ᐃ * ᐃⵠᐃᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * ΔⵠᐃⵠᐃⲆⵠ, 81 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 13, ᐃ * 105, ᐃ * 9, 106 * ᐃ, ᐃ * 8, ᐃ * 91);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ⵠΔΔᐃ * ᐃ)
		} else if (ᐃⲆⲆΔ == ᐃⲆ) {
			ΔⵠⲆ(Ⲇ, 85 * ᐃ, 75 * ᐃ, ΔᐃⲆⲆᐃⵠⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[0], ᐃ * Δⵠⵠⵠ);
			Ⲇ.scale(ᐃ * -1.7, 1.7 * ᐃ);
			Ⲇ.translate(-120 * ᐃ, 0 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(20 * ᐃ, 95 * ᐃ);
			Ⲇ.bezierCurveTo(56.5 * ᐃ, 54 * ᐃ, ᐃ * 56.5, ᐃ * 54, ᐃ * 93, ᐃ * 13);
			Ⲇ.bezierCurveTo(89 * ᐃ, ᐃ * ΔᐃⵠⵠⲆΔⵠ, 89 * ᐃ, 13 * ᐃ, ᐃ * 85, 13 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 49.5, 53 * ᐃ, ᐃ * 49.5, 53 * ᐃ, ᐃ * 14, 93 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 15, ᐃ * 94, ᐃⲆⲆΔⵠ * ᐃ, 94 * ᐃ, ΔᐃΔⲆⵠⲆᐃ * ᐃ, ᐃ * 95);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ], ᐃᐃ[0], 4 * ᐃ)
		} else if (ᐃⲆ == ΔΔⲆⲆᐃ) {
			Ⲇ.translate(-52 * ᐃ, ΔΔⵠᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 84.5, 36.5 * ᐃ);
			Ⲇ.rotate(-.96);
			ᐃΔⵠ(Ⲇ, -5.5 * ᐃ, ᐃ * -15.5, ᐃ * ΔΔΔΔⵠ, 31 * ᐃ, ᐃ * ᐃⵠᐃᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[ᐃᐃΔᐃ], ᐃ * ⲆⲆΔΔ);
			Ⲇ.save();
			Ⲇ.translate(84 * ᐃ, ᐃ * 36);
			Ⲇ.rotate(.64);
			ᐃΔⵠ(Ⲇ, -5 * ᐃ, ᐃ * -ᐃΔᐃⲆⵠΔⲆ, 10 * ᐃ, ᐃ * 32, 4 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[1], ΔⲆΔⲆ * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(83.5 * ᐃ, 36.5 * ᐃ);
			Ⲇ.rotate(.68);
			ᐃΔⵠ(Ⲇ, -2.5 * ᐃ, ᐃ * -6.5, ⵠⲆⲆᐃⵠ * ᐃ, ᐃ * 13, ᐃ * ⲆⲆⲆⵠᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ])
		} else if (ᐃⲆ == ⲆⲆⲆⵠᐃ) {
			ΔⵠⲆ(Ⲇ, ᐃ * 35, ᐃ * 85, ΔΔⲆᐃⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔΔᐃ], ᐃ * 3);
			ΔⵠⲆ(Ⲇ, ᐃ * 85, 85 * ᐃ, 17 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔᐃ], ᐃᐃ[ᐃⵠΔ], ᐃ * ᐃⵠⲆⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(53 * ᐃ, ᐃ * 86);
			Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 83, ᐃ * 63, ᐃ * 83, ᐃ * 67, ᐃ * 86);
			Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[ⲆⵠⲆ], ᐃ * 4)
		} else if (ⲆᐃᐃΔ == ᐃⲆ) {
			Ⲇ.scale(1.2, 1.2);
			Ⲇ.translate(ᐃ * -27, ᐃ * -ⲆⵠΔᐃⲆ);
			Ⲇ.scale(1.2, 1.2);
			Ⲇ.translate(ᐃ * -10, ΔΔᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 97, ᐃ * 23);
			Ⲇ.bezierCurveTo(ᐃ * 105, ᐃ * 24, ᐃ * 107, ᐃ * 37, 97 * ᐃ, ᐃ * 39);
			Ⲇ.bezierCurveTo(85 * ᐃ, ᐃ * 40, 84 * ᐃ, 22 * ᐃ, ᐃ * 97, 23 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[0], ᐃ * ⲆⵠΔᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(96 * ᐃ, 24 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 96, ᐃ * 30.5, ᐃ * 96, ᐃ * 30.5, 96 * ᐃ, ᐃ * 37);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, undefined, ᐃᐃ[0], 3 * ᐃ);
			Ⲇ.translate(ⲆⵠⲆ, ᐃ * -ⵠⵠⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(88 * ᐃ, ᐃ * 37);
			Ⲇ.bezierCurveTo(93 * ᐃ, 33 * ᐃ, 91.5 * ᐃ, ᐃ * 34.5, 95 * ᐃ, 32 * ᐃ);
			Ⲇ.bezierCurveTo(98.5 * ᐃ, ᐃ * 34, 98.5 * ᐃ, 34 * ᐃ, 102 * ᐃ, 36 * ᐃ);
			Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[ΔΔᐃ], ᐃ * 3)
		} else if (ᐃⲆ == 6) {
			ΔⵠⲆ(Ⲇ, 13 * ᐃ, 79 * ᐃ, ΔᐃΔΔⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
			ΔⵠⲆ(Ⲇ, 106 * ᐃ, ᐃ * 79, ᐃ * 5);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ])
		} else if (7 == ᐃⲆ) {
			Ⲇ.translate(ΔⲆᐃⲆ * ᐃ, ᐃ * ⵠⲆⲆᐃⵠ);
			Ⲇ.globalAlpha = .5;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 27, 14.399993896484375 * ᐃ);
			Ⲇ.bezierCurveTo(29 * ᐃ, 4.399993896484375 * ᐃ, ᐃ * 44, ᐃ * 16.399993896484375, ᐃ * 37, ᐃ * 21.399993896484375);
			Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 17.399993896484375, 45 * ᐃ, ᐃ * 36.399993896484375, ᐃ * 37, 32.399993896484375 * ᐃ);
			Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 40.399993896484375, 28 * ᐃ, ᐃ * 47.399993896484375, ᐃ * 26, ᐃ * 37.399993896484375);
			Ⲇ.bezierCurveTo(22 * ᐃ, 46.399993896484375 * ᐃ, ᐃⵠⵠΔⵠ * ᐃ, 37.399993896484375 * ᐃ, ᐃΔΔⲆⲆΔΔ * ᐃ, ᐃ * 30.399993896484375);
			Ⲇ.bezierCurveTo(ᐃ * ΔⲆⵠⲆⲆ, ᐃ * 34.399993896484375, ΔᐃⵠΔⵠ * ᐃ, 15.399993896484375 * ᐃ, ᐃ * 18, 19.399993896484375 * ᐃ);
			Ⲇ.bezierCurveTo(10 * ᐃ, ᐃ * 12.399993896484375, ᐃ * 26, 7.399993896484375 * ᐃ, 26 * ᐃ, 14.399993896484375 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠ]);
			Ⲇ.globalAlpha = ⲆⲆΔᐃ;
			Ⲇ.translate(ΔⲆᐃⲆ * ᐃ, ᐃ * -ΔⲆⲆΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(27 * ᐃ, ᐃ * 14.399993896484375);
			Ⲇ.bezierCurveTo(29 * ᐃ, ᐃ * 4.399993896484375, 44 * ᐃ, ᐃ * 16.399993896484375, 37 * ᐃ, 21.399993896484375 * ᐃ);
			Ⲇ.bezierCurveTo(47 * ᐃ, 17.399993896484375 * ᐃ, 45 * ᐃ, 36.399993896484375 * ᐃ, ᐃ * 37, 32.399993896484375 * ᐃ);
			Ⲇ.bezierCurveTo(44 * ᐃ, 40.399993896484375 * ᐃ, ᐃ * 28, 47.399993896484375 * ᐃ, ᐃ * 26, ᐃ * 37.399993896484375);
			Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 46.399993896484375, 9 * ᐃ, ᐃ * 37.399993896484375, ᐃ * ⵠⲆⵠⵠΔ, ᐃ * 30.399993896484375);
			Ⲇ.bezierCurveTo(ᐃ * 6, ᐃ * 34.399993896484375, ᐃ * ΔᐃΔᐃⲆΔⵠ, 15.399993896484375 * ᐃ, ⲆΔⲆⲆⵠᐃΔ * ᐃ, ᐃ * 19.399993896484375);
			Ⲇ.bezierCurveTo(10 * ᐃ, ᐃ * 12.399993896484375, ᐃ * 26, ᐃ * 7.399993896484375, ᐃ * 26, ᐃ * 14.399993896484375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⵠᐃ], ᐃ * 2);
			ΔⵠⲆ(Ⲇ, 27 * ᐃ, 26.800003051757812 * ᐃ, ᐃ * 5);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ])
		} else 8 == ᐃⲆ && (Ⲇ.translate(ᐃ * -32, ᐃ * -19), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(123 * ᐃ, 46 * ᐃ), Ⲇ.bezierCurveTo(132 * ᐃ, ᐃ * 46, 135 * ᐃ, ᐃ * 39, 134 * ᐃ, 33 * ᐃ), Ⲇ.bezierCurveTo(145 * ᐃ, 43 * ᐃ, ᐃ * 142, ᐃ * 65, 127 * ᐃ, 66 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 118, 61 * ᐃ, ᐃ * 119, 51 * ᐃ, 123 * ᐃ, ᐃ * 46), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[ᐃᐃΔᐃ], ⵠΔⲆᐃΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(49 * ᐃ, 32 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 44, 56 * ᐃ, 44 * ᐃ, 61 * ᐃ, 46 * ᐃ), Ⲇ.bezierCurveTo(67 * ᐃ, 52 * ᐃ, ᐃ * 65, ᐃ * 65, ᐃ * 55, ᐃ * 66), Ⲇ.bezierCurveTo(37 * ᐃ, 60 * ᐃ, ᐃ * 42, ᐃ * 38, 49 * ᐃ, 32 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃΔⲆⵠ], 4 * ᐃ));
		return ΔΔ
	}
	const ⲆᐃⲆᐃᐃ = ΔⲆᐃⵠᐃ;

	function ⵠᐃⲆⲆΔⵠⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 120 * ᐃ;
		var ΔᐃⲆ = 110 * ᐃ;
		var w2 = ᐃᐃⲆ / ᐃᐃⲆΔ;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / 2;
		var ⲆⵠᐃΔ = ᐃ * 20;
		var ⵠⵠᐃΔᐃⲆΔ = 112 * ᐃ;
		var ⵠⲆⲆⵠᐃⲆⲆ = 82 * ᐃ;
		var ᐃⲆΔΔⲆᐃⲆⵠᐃ = ⵠⵠᐃΔᐃⲆΔ / 2;
		var ⲆⲆᐃⲆΔΔΔᐃⵠ = ⵠⲆⲆⵠᐃⲆⲆ / ᐃᐃⲆΔ;
		var ᐃⲆⲆ = ᐃⵠᐃᐃ * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(w2, ⵠⵠᐃⵠⵠ);
		ᐃΔⵠ(Ⲇ, -ᐃⲆΔΔⲆᐃⲆⵠᐃ, -ⲆⲆᐃⲆΔΔΔᐃⵠ, ⵠⵠᐃΔᐃⲆΔ, ⵠⲆⲆⵠᐃⲆⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃⲆⲆ);
		return ΔΔ
	}

	function ΔⲆΔⲆⵠⵠⲆⲆⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 350 * ᐃ;
		ΔΔ.height = ᐃ * 350;
		Ⲇ.translate(0, 15 * ᐃ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(174 * ᐃ, 172 * ᐃ);
		ᐃΔⵠ(Ⲇ, -81 * ᐃ, ᐃ * -60, ᐃ * 162, 120 * ᐃ, ᐃ * 26);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		Ⲇ.translate(ΔⲆⵠ, ᐃ * -15);
		Ⲇ.globalAlpha = ⵠᐃΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(174 * ᐃ, 172 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -81, -60 * ᐃ, 162 * ᐃ, 120 * ᐃ, ᐃ * 26);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ΔΔⲆⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 179, 211 * ᐃ);
		Ⲇ.bezierCurveTo(183 * ᐃ, ᐃ * 204.5, ᐃ * 183, 204.5 * ᐃ, 187 * ᐃ, 198 * ᐃ);
		Ⲇ.bezierCurveTo(198.5 * ᐃ, 191.5 * ᐃ, 198.5 * ᐃ, 191.5 * ᐃ, 210 * ᐃ, ᐃ * 185);
		Ⲇ.bezierCurveTo(215 * ᐃ, 176.5 * ᐃ, 215 * ᐃ, 176.5 * ᐃ, ᐃ * 220, ᐃ * 168);
		Ⲇ.bezierCurveTo(213 * ᐃ, ᐃ * 173.5, 213 * ᐃ, 173.5 * ᐃ, 206 * ᐃ, ᐃ * 179);
		Ⲇ.bezierCurveTo(ᐃ * 195, ᐃ * 184, ᐃ * 195, 184 * ᐃ, ᐃ * 184, 189 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 167, 233 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 207, ᐃ * 167, 207 * ᐃ, ᐃ * 167, ᐃ * 181);
		Ⲇ.bezierCurveTo(167 * ᐃ, ᐃ * 166, 157 * ᐃ, ᐃ * 164, ᐃ * 148, 165 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120, ᐃ * 165, ᐃ * 120, ᐃ * 165, ᐃ * 92, 165 * ᐃ);
		Ⲇ.bezierCurveTo(92 * ᐃ, 186.5 * ᐃ, ᐃ * 92, ᐃ * 186.5, ᐃ * 92, 208 * ᐃ);
		Ⲇ.bezierCurveTo(93 * ᐃ, 222 * ᐃ, 102 * ᐃ, ᐃ * 234, 119 * ᐃ, ᐃ * 233);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], 7 * ᐃ);
		ΔⵠⲆ(Ⲇ, 152 * ᐃ, ᐃ * 179, Ⲇᐃᐃᐃⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆⲆ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 107, 179 * ᐃ, ΔⲆⵠⲆⲆ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 210, ᐃ * 200);
		Ⲇ.rotate(.2);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆᐃⵠᐃ, ᐃ * 32, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ], ᐃᐃ[ⲆᐃⲆᐃ], ΔΔⲆⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 210, 200 * ᐃ);
		Ⲇ.rotate(1.0471975511965976);
		ⲆᐃⵠΔ(Ⲇ, ⲆᐃΔᐃᐃ, ᐃ * ⵠⲆᐃᐃⲆ, ᐃ * 6);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ᐃⲆⵠΔᐃ], 7 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 205, ᐃ * 193);
		Ⲇ.rotate(ᐃΔⵠⵠ);
		ⲆᐃⵠΔ(Ⲇ, ⵠᐃⲆⵠ, 10 * ᐃ, ᐃ * 3);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃᐃᐃ]);
		Ⲇ.save();
		Ⲇ.translate(137 * ᐃ, ᐃ * 200);
		Ⲇ.rotate(-.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * ΔⲆᐃⲆⲆΔⵠ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ⲆⵠΔΔⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(131 * ᐃ, 194 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * ⲆⵠΔⲆⲆ, ⲆⵠΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150.5, 120 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -19.5 * ᐃ, -8 * ᐃ, ᐃ * 39, ᐃ * 16, ᐃ * 0);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ΔΔⵠⲆⵠ, ᐃᐃ[2], ᐃ * ᐃⲆⵠΔᐃ);
		return ΔΔ
	}
	const ⵠᐃᐃⵠⲆᐃⵠΔΔ = 14539480;

	function ⲆⲆᐃⵠⲆⲆⵠ(ⲆⲆⵠΔⵠᐃⵠΔⵠ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ⲆⲆⵠΔⵠᐃⵠΔⵠ)
	}

	function ᐃΔⲆᐃΔⵠΔᐃⲆ(ⵠᐃΔⲆΔΔⲆᐃᐃ) {
		return ⵠᐃΔⲆΔΔⲆᐃᐃ.map(ⲆⲆᐃⵠⲆⲆⵠ).join("")
	}
	const ⵠΔⵠΔᐃΔᐃ = function() {
		const ΔᐃΔⲆᐃᐃᐃ = ᐃΔⲆᐃΔⵠΔᐃⲆ([11616, 5123, 5123, 11616, 11398, 5123, 11616, 916, 916]);
		const ΔⲆⲆΔᐃΔΔ = {
			"ⵠⵠᐃΔᐃⲆΔΔⲆ": 12379550,
			"ⲆⲆⲆⵠᐃⵠᐃ": 12992732,
			"ⵠᐃᐃⵠⲆᐃⵠΔΔ": 11244672,
			"ⵠΔᐃⲆⲆΔᐃᐃⲆ": 10677796
		};
		if (ΔⲆⲆΔᐃΔΔ[ΔᐃΔⲆᐃᐃᐃ] !== ΔⲆⲆΔᐃΔΔ.ⵠᐃᐃⵠⲆᐃⵠΔΔ) {
			const ⵠᐃᐃⵠⲆᐃⵠΔΔ = function() {
				for (let ⲆⲆᐃⵠⲆⲆⵠ = 0; ⲆⲆᐃⵠⲆⲆⵠ < 5; ⲆⲆᐃⵠⲆⲆⵠ++) ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("click", (function() {
					ⵠᐃᐃⵠⲆᐃⵠΔΔ()
				}))
			};
			ⵠᐃᐃⵠⲆᐃⵠΔΔ()
		}
	};
	ⵠΔⵠΔᐃΔᐃ();

	function ΔⲆⵠⵠⲆⵠⲆⵠⲆ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 175 * ᐃ;
		ΔΔ.height = ᐃ * 150;
		if (0 == ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * -88, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -82, -46.5 * ᐃ, 164 * ᐃ, 93 * ᐃ, ᐃ * 30);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ΔᐃⵠΔ;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, ᐃ * 170.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, -59.5 * ᐃ, 162 * ᐃ, 119 * ᐃ, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, ᐃ * 200, ᐃ * 22.090722034374522);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 210, 200 * ᐃ, ᐃ * 22.20360331117452);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 131, ᐃ * 194, ᐃ * 7);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, 206 * ᐃ, ᐃ * 194, ᐃ * ⵠΔᐃⲆᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.translate(0, ᐃⵠⵠ * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(138.5 * ᐃ, 180.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, -22.5 * ᐃ, ᐃ * -11.5, ᐃ * 45, 23 * ᐃ, 0 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.save();
			Ⲇ.translate(207 * ᐃ, 177.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -31, -9.5 * ᐃ, ᐃ * 62, ᐃ * 19, ᐃ * 0);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
			Ⲇ.save();
			Ⲇ.translate(171.5 * ᐃ, 220 * ᐃ);
			ᐃΔⵠ(Ⲇ, -52.5 * ᐃ, -2 * ᐃ, 105 * ᐃ, ᐃ * 4, ᐃ * ⲆΔᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (ᐃⲆ == ⲆΔᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * -88, ᐃ * -95);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -82, ᐃ * -46.5, ᐃ * 164, 93 * ᐃ, 30 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 170.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, -59.5 * ᐃ, ᐃ * 162, 119 * ᐃ, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠᐃⵠΔ], 6.5 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 183, ᐃ * 223);
			Ⲇ.bezierCurveTo(ᐃ * 193, ᐃ * 187, 215 * ᐃ, 193 * ᐃ, 227 * ᐃ, ᐃ * 159);
			Ⲇ.bezierCurveTo(227 * ᐃ, 194 * ᐃ, 209 * ᐃ, 187 * ᐃ, 183 * ᐃ, 223 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃΔ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, ᐃ * 200, ᐃ * 22.090722034374522);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠⵠ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 210, 200 * ᐃ, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, ᐃ * 131, ᐃ * 190, 7 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, 204 * ᐃ, ᐃ * 190, ᐃ * ⲆΔᐃⵠΔ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 120, ᐃ * 154);
			Ⲇ.bezierCurveTo(125 * ᐃ, 146 * ᐃ, ᐃ * 131, ᐃ * 143, 147 * ᐃ, ᐃ * 137);
			Ⲇ.bezierCurveTo(ᐃ * 139, 147 * ᐃ, 129 * ᐃ, 152 * ᐃ, ᐃ * 121, 154 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 120, ᐃ * 162);
			Ⲇ.bezierCurveTo(134 * ᐃ, ᐃ * 153, 139 * ᐃ, ᐃ * 149, 150 * ᐃ, 144 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 143, 155 * ᐃ, ᐃ * 128, ᐃ * 163, 121 * ᐃ, 161 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(127 * ᐃ, 142 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 129, ᐃ * 151, 132 * ᐃ, 157 * ᐃ, ᐃ * 137, ᐃ * 162);
			Ⲇ.bezierCurveTo(ᐃ * 134, 152 * ᐃ, 132 * ᐃ, ᐃ * 146, ᐃ * 127, 142 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 135, 140 * ᐃ);
			Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 144, ᐃ * 143, 150 * ᐃ, 143 * ᐃ, ᐃ * 157);
			Ⲇ.bezierCurveTo(ᐃ * 138, ᐃ * 150, 136 * ᐃ, ᐃ * 145, ᐃ * 135, ᐃ * 140);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆΔ])
		} else if (ᐃⲆ == 2) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * -88, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -82, ᐃ * -46.5, ᐃ * 164, ᐃ * 93, 30 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, ᐃ * 170.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, -59.5 * ᐃ, 162 * ᐃ, 119 * ᐃ, ᐃ * 28);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 6.5);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, 200 * ᐃ, ᐃ * 22.090722034374522);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, 210 * ᐃ, 200 * ᐃ, ᐃ * 22.20360331117452);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, ᐃ * 130, ᐃ * 192, Ⲇⵠᐃᐃᐃ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, ᐃ * 203, 192 * ᐃ, ᐃ * ᐃⲆⵠⲆⲆ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃᐃ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(115 * ᐃ, ᐃ * 224);
			Ⲇ.bezierCurveTo(ᐃ * 173, ᐃ * 223.5, ᐃ * 173, ᐃ * 223.5, ᐃ * 231, 223 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 230, ᐃ * 222, ᐃ * 198, ᐃ * 223, 186 * ᐃ, 209 * ᐃ);
			Ⲇ.bezierCurveTo(173.5 * ᐃ, ᐃ * 209, ᐃ * 173.5, ᐃ * 209, ᐃ * 161, ᐃ * 209);
			Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 224, 114 * ᐃ, ᐃ * 223, 116 * ᐃ, 224 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(112 * ᐃ, 193 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 154, 182 * ᐃ, 194 * ᐃ, ᐃ * 183, 234 * ᐃ, ᐃ * 192);
			Ⲇ.bezierCurveTo(ᐃ * 217, ᐃ * 154, 148 * ᐃ, 127 * ᐃ, 112 * ᐃ, 192 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (ᐃⲆ == 3) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(-88 * ᐃ, ᐃ * -95);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -82, -46.5 * ᐃ, 164 * ᐃ, 93 * ᐃ, 30 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 170.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, -81 * ᐃ, ᐃ * -59.5, 162 * ᐃ, 119 * ᐃ, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔᐃ], ᐃᐃ[2], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, 137 * ᐃ, 200 * ᐃ, 22.090722034374522 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 210, 200 * ᐃ, ᐃ * 22.20360331117452);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, 130 * ᐃ, 192 * ᐃ, ⲆⵠΔΔⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ]);
			ΔⵠⲆ(Ⲇ, 203 * ᐃ, ᐃ * 192, ⲆΔᐃⵠΔ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 120, ᐃ * 176);
			Ⲇ.bezierCurveTo(175 * ᐃ, ᐃ * 193, 147.5 * ᐃ, ᐃ * 184.5, ᐃ * 175, 193 * ᐃ);
			Ⲇ.bezierCurveTo(200 * ᐃ, 184.5 * ᐃ, ᐃ * 200, ᐃ * 184.5, ᐃ * 225, ᐃ * 176);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(226 * ᐃ, ᐃ * 223);
			Ⲇ.bezierCurveTo(173.5 * ᐃ, 223 * ᐃ, ᐃ * 173.5, ᐃ * 223, ᐃ * 121, 223 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 218, 148 * ᐃ, ᐃ * 218, 175 * ᐃ, 213 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ])
		} else if (4 == ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(-88 * ᐃ, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, -82 * ᐃ, ᐃ * -46.5, 164 * ᐃ, 93 * ᐃ, 30 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 170.5 * ᐃ);
			Ⲇ.rotate(0);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, -59.5 * ᐃ, 162 * ᐃ, ᐃ * 119, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆΔΔ], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, 137 * ᐃ, ᐃ * 200, ᐃ * 22.090722034374522);
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 210, 200 * ᐃ, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, 137 * ᐃ, ᐃ * 203, 8 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⲆ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 209, 203 * ᐃ, ΔⲆΔⲆⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ]);
			Ⲇ.save();
			Ⲇ.translate(174.5 * ᐃ, ᐃ * 218);
			Ⲇ.rotate(ΔⲆᐃⲆ);
			ᐃΔⵠ(Ⲇ, ᐃ * -60.5, -5 * ᐃ, 121 * ᐃ, ᐃ * ⲆⵠⲆⵠᐃ, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 113, ᐃ * 190);
			Ⲇ.bezierCurveTo(ᐃ * 144, ᐃ * 181.5, 144 * ᐃ, ᐃ * 181.5, ᐃ * 175, 173 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 205, ᐃ * 182, ᐃ * 205, ᐃ * 182, 235 * ᐃ, ᐃ * 191);
			Ⲇ.bezierCurveTo(242 * ᐃ, 141 * ᐃ, ᐃ * 106, 119 * ᐃ, ᐃ * 112, ᐃ * 189);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (ᐃⲆ == 5) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * -88, ᐃ * -95);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, -82 * ᐃ, ᐃ * -46.5, ᐃ * 164, 93 * ᐃ, ᐃ * 30);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ⵠⵠⲆΔ;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 170.5 * ᐃ);
			Ⲇ.rotate(0);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, ᐃ * -59.5, 162 * ᐃ, ᐃ * 119, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 6.5);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, ᐃ * 200, 22.090722034374522 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, ᐃ * 210, ᐃ * 200, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ]);
			ΔⵠⲆ(Ⲇ, 140 * ᐃ, ᐃ * 196, 7 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, 213 * ᐃ, 196 * ᐃ, 7 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, ᐃ * 131, 206 * ᐃ, ᐃ * 3);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ]);
			ΔⵠⲆ(Ⲇ, 204 * ᐃ, 206 * ᐃ, ᐃ * 3);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⲆ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(113 * ᐃ, 181 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 204, 190 * ᐃ, 202 * ᐃ, 235 * ᐃ, 181 * ᐃ);
			Ⲇ.bezierCurveTo(241 * ᐃ, 137 * ᐃ, 109 * ᐃ, ᐃ * 130, ᐃ * 112, ᐃ * 180);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, ᐃ * 220);
			Ⲇ.rotate(ⵠᐃⲆᐃ);
			ᐃΔⵠ(Ⲇ, -56 * ᐃ, -ΔⲆⲆΔ * ᐃ, ᐃ * 112, 10 * ᐃ, 1 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (ⵠⲆΔⲆᐃ == ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(-88 * ᐃ, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 195.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -82, -46.5 * ᐃ, ᐃ * 164, ᐃ * 93, 30 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ᐃⵠ;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, 170.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, -59.5 * ᐃ, ᐃ * 162, ᐃ * 119, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ⵠⲆΔΔ], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, ᐃ * 200, 22.090722034374522 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
			ΔⵠⲆ(Ⲇ, 210 * ᐃ, 200 * ᐃ, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, ᐃ * 133, ᐃ * 188, ΔΔⲆⵠⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠΔΔᐃ]);
			ΔⵠⲆ(Ⲇ, 206 * ᐃ, ᐃ * 188, ᐃ * ⵠΔΔⲆᐃⵠⵠ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 110, ᐃ * 193);
			Ⲇ.bezierCurveTo(130 * ᐃ, 182 * ᐃ, ᐃ * 142, ᐃ * 183, 162 * ᐃ, ᐃ * 193);
			Ⲇ.bezierCurveTo(164 * ᐃ, ᐃ * 176.5, ᐃ * 164, 176.5 * ᐃ, ᐃ * 166, 160 * ᐃ);
			Ⲇ.bezierCurveTo(137 * ᐃ, ᐃ * 159, 137 * ᐃ, 159 * ᐃ, ᐃ * 108, ᐃ * 158);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 184, 192 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 205, ᐃ * 183, 216 * ᐃ, ᐃ * 183, 234 * ᐃ, 192 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 233.5, ᐃ * 177, 233.5 * ᐃ, ᐃ * 177, 233 * ᐃ, ᐃ * 162);
			Ⲇ.bezierCurveTo(209 * ᐃ, 161.5 * ᐃ, 186 * ᐃ, ᐃ * 162, 185 * ᐃ, 161 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (7 == ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * -88, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, ᐃ * 195.5);
			ᐃΔⵠ(Ⲇ, -82 * ᐃ, -46.5 * ᐃ, 164 * ᐃ, ᐃ * 93, ᐃ * 30);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ⵠᐃΔᐃ;
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, 170.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, ᐃ * -59.5, 162 * ᐃ, ᐃ * 119, 28 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[2], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, 137 * ᐃ, ᐃ * 200, 22.090722034374522 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ]);
			ΔⵠⲆ(Ⲇ, 210 * ᐃ, 200 * ᐃ, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, 130 * ᐃ, 206 * ᐃ, ᐃ * 7);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, 203 * ᐃ, 206 * ᐃ, 7 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃᐃ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(108 * ᐃ, 191 * ᐃ);
			Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 184, 141 * ᐃ, ᐃ * 184, ᐃ * 174, 177 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 207, 184 * ᐃ, 207 * ᐃ, 184 * ᐃ, ᐃ * 240, 191 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 244, 140 * ᐃ, ᐃ * 113, 121 * ᐃ, 108 * ᐃ, 191 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else if (8 == ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(-88 * ᐃ, -95 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(174 * ᐃ, ᐃ * 195.5);
			ᐃΔⵠ(Ⲇ, -82 * ᐃ, -46.5 * ᐃ, ᐃ * 164, ᐃ * 93, ᐃ * 30);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 174, ᐃ * 170.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -81, ᐃ * -59.5, 162 * ᐃ, 119 * ᐃ, ᐃ * 28);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 6.5 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 137, 200 * ᐃ, 22.090722034374522 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
			ΔⵠⲆ(Ⲇ, 210 * ᐃ, 200 * ᐃ, 22.20360331117452 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠⵠ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 127, ᐃ * 198, ⵠΔᐃⲆᐃ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, 200 * ᐃ, ᐃ * 198, ⲆⲆΔΔⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ]);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 175, ᐃ * 175.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -67, ᐃ * -13.5, 134 * ᐃ, ᐃ * 27, ᐃ * 0);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 172, ᐃ * 219);
			ᐃΔⵠ(Ⲇ, -60 * ᐃ, -4 * ᐃ, ᐃ * 120, ⲆΔΔΔᐃ * ᐃ, ⲆⵠⲆ * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ])
		} else 9 == ᐃⲆ && (Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * -88, ᐃ * -95), Ⲇ.save(), Ⲇ.translate(174 * ᐃ, 195.5 * ᐃ), ᐃΔⵠ(Ⲇ, ᐃ * -82, ᐃ * -46.5, 164 * ᐃ, 93 * ᐃ, 30 * ᐃ), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.save(), Ⲇ.translate(ᐃ * 174, ᐃ * 170.5), ᐃΔⵠ(Ⲇ, -81 * ᐃ, -59.5 * ᐃ, ᐃ * 162, ᐃ * 119, ᐃ * 28), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * 6.5), ΔⵠⲆ(Ⲇ, ᐃ * 137, ᐃ * 200, 22.090722034374522 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ]), ΔⵠⲆ(Ⲇ, ᐃ * 210, 200 * ᐃ, 22.090722034374522 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ]), ΔⵠⲆ(Ⲇ, 143 * ᐃ, ᐃ * 200, ΔΔⲆⵠⵠ * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆᐃΔ]), ΔⵠⲆ(Ⲇ, 204 * ᐃ, 200 * ᐃ, ⵠᐃⲆⲆⲆ * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆᐃΔ]));
		return ΔΔ
	}

	function ᐃⵠΔᐃⲆΔⲆⵠᐃ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 176 * ᐃ;
		ΔΔ.height = ᐃ * 127;
		if (ⵠΔΔᐃᐃⲆⲆ == ᐃⲆ) {
			Ⲇ.globalAlpha = .3;
			Ⲇ.save();
			Ⲇ.translate(87 * ᐃ, ᐃ * 64.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -56, -41.5 * ᐃ, ᐃ * 112, ᐃ * 83, ᐃⲆⵠⵠᐃ * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 4 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 82, ᐃ * 69.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -51, -36.5 * ᐃ, ᐃ * 102, 73 * ᐃ, ᐃ * 18);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ΔᐃⵠΔ], 4 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 55, ᐃ * 41);
			Ⲇ.bezierCurveTo(ᐃ * 38, 41 * ᐃ, 37 * ᐃ, ᐃ * 50, 38 * ᐃ, ᐃ * 61);
			Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 50, ᐃ * 46, ᐃ * 46, ᐃ * 55, 42 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * 26, ᐃ * 10);
			ΔⵠⲆ(Ⲇ, 35 * ᐃ, ᐃ * 75, 15 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃᐃ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 85, 75 * ᐃ, ⵠⲆⲆᐃⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ]);
			ΔⵠⲆ(Ⲇ, ᐃ * 32, 67 * ᐃ, ᐃ * 5);
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			ΔⵠⲆ(Ⲇ, ᐃ * 82, ᐃ * 67, 5 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[5])
		} else if (ΔᐃᐃⵠⲆⲆᐃ == ᐃⲆ) {
			var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var Ⲇ = ΔΔ.getContext(ⵠ[140]);
			ΔΔ.width = ᐃ * 332;
			ΔΔ.height = 127 * ᐃ;
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ΔⲆᐃⲆ, -36 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 165.25, ᐃ * 106.84375);
			ᐃΔⵠ(Ⲇ, -56.5 * ᐃ, -41.5 * ᐃ, 113 * ᐃ, 83 * ᐃ, ᐃ * 18);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(Δⵠⵠ, ᐃ * 20);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(210.75 * ᐃ, ᐃ * 72.84375);
			Ⲇ.bezierCurveTo(238.75 * ᐃ, ᐃ * 74.84375, ᐃ * 270.75, 85.84375 * ᐃ, ᐃ * 269.75, 90.84375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 268.75, 94.84375 * ᐃ, ᐃ * 221.75, ᐃ * 81.84375, ᐃ * 206.75, ᐃ * 85.84375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * ᐃⵠⲆⲆⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(208.75 * ᐃ, ᐃ * 69.84375);
			Ⲇ.bezierCurveTo(ᐃ * 241.75, 61.84375 * ᐃ, 265.75 * ᐃ, 65.84375 * ᐃ, 286.75 * ᐃ, 69.84375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 290.75, ᐃ * 75.84375, ᐃ * 225.75, ᐃ * 69.84375, 215.75 * ᐃ, 80.84375 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[2], 4 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 209.75, 69.84375 * ᐃ);
			Ⲇ.bezierCurveTo(228.75 * ᐃ, ᐃ * 51.84375, ᐃ * 265.75, 46.84375 * ᐃ, ᐃ * 294.75, 51.84375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 301.75, 55.84375 * ᐃ, ᐃ * 224.75, ᐃ * 60.84375, ᐃ * 216.75, ᐃ * 80.84375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠᐃᐃⵠ], ᐃ * 4);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 193.75, ᐃ * 72.84375);
			Ⲇ.bezierCurveTo(ᐃ * 206.75, ᐃ * 47.84375, 221.75 * ᐃ, ᐃ * 37.84375, ᐃ * 249.75, 35.84375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 264.75, 34.84375 * ᐃ, 305.75 * ᐃ, ᐃ * 16.84375, ᐃ * 300.75, ᐃ * 24.84375);
			Ⲇ.bezierCurveTo(273.75 * ᐃ, 45.84375 * ᐃ, 245.75 * ᐃ, 46.84375 * ᐃ, ᐃ * 235.75, ᐃ * 62.84375);
			Ⲇ.bezierCurveTo(218.75 * ᐃ, 82.84375 * ᐃ, 215.75 * ᐃ, ᐃ * 87.84375, 199.75 * ᐃ, 84.84375 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * ⵠΔⲆᐃΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(126.75 * ᐃ, ᐃ * 80.34375);
			Ⲇ.bezierCurveTo(ᐃ * 94.75, 88.34375 * ᐃ, ᐃ * 83.75, 88.34375 * ᐃ, ᐃ * 65.75, ᐃ * 90.34375);
			Ⲇ.bezierCurveTo(ᐃ * 61.75, ᐃ * 87.34375, 86.75 * ᐃ, 77.34375 * ᐃ, ᐃ * 129.75, ᐃ * 70.34375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[ⲆᐃⲆᐃ], ᐃ * ⲆⵠⵠⲆΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(120.75 * ᐃ, ᐃ * 72.34375);
			Ⲇ.bezierCurveTo(128.75 * ᐃ, ᐃ * 62.34375, ᐃ * 98.75, 64.34375 * ᐃ, ᐃ * 49.75, 68.34375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 34.75, 75.34375 * ᐃ, ᐃ * 101.75, 72.34375 * ᐃ, 124.75 * ᐃ, ᐃ * 78.34375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * ⲆⵠⲆⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 128.75, 76.34375 * ᐃ);
			Ⲇ.bezierCurveTo(111.75 * ᐃ, ᐃ * 54.34375, 69.75 * ᐃ, ᐃ * 48.34375, ᐃ * 39.75, 50.34375 * ᐃ);
			Ⲇ.bezierCurveTo(26.75 * ᐃ, 53.34375 * ᐃ, 86.75 * ᐃ, 59.34375 * ᐃ, 123.75 * ᐃ, ᐃ * 78.34375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * ⲆⵠⲆⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(143.75 * ᐃ, ᐃ * 74.34375);
			Ⲇ.bezierCurveTo(128.75 * ᐃ, ᐃ * 48.34375, 108.75 * ᐃ, 35.34375 * ᐃ, 81.75 * ᐃ, ᐃ * 35.34375);
			Ⲇ.bezierCurveTo(ᐃ * 63.75, 33.34375 * ᐃ, 26.75 * ᐃ, 15.34375 * ᐃ, ᐃ * 29.75, ᐃ * 25.34375);
			Ⲇ.bezierCurveTo(33.75 * ᐃ, ᐃ * 30.34375, 49.75 * ᐃ, 40.34375 * ᐃ, 70.75 * ᐃ, 49.34375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 94.75, 54.34375 * ᐃ, 104.75 * ᐃ, ᐃ * 72.34375, ᐃ * 128.75, 88.34375 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⲆⵠΔΔⲆ * ᐃ);
			Ⲇ.translate(0, ᐃ * -28);
			Ⲇ.save();
			Ⲇ.translate(165.25 * ᐃ, 106.84375 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -56.5, ᐃ * -41.5, ᐃ * 113, ᐃ * 83, 18 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ⵠᐃᐃⵠ], 4 * ᐃ);
			Ⲇ.translate(28 * ᐃ, 15 * ᐃ);
			Ⲇ.translate(0, ᐃᐃΔⵠⵠ * ᐃ);
			Ⲇ.globalAlpha = .5;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(83 * ᐃ, 52 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 65, 110 * ᐃ, 72 * ᐃ, 139 * ᐃ, 71 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 176, ᐃ * 71, ᐃ * 193, 61 * ᐃ, 191 * ᐃ, ᐃ * 54);
			Ⲇ.bezierCurveTo(ᐃ * 202, 58 * ᐃ, 198 * ᐃ, ᐃ * 72, ᐃ * 187, ᐃ * 75);
			Ⲇ.bezierCurveTo(ᐃ * 143, ᐃ * 87, 107 * ᐃ, 79 * ᐃ, ᐃ * 89, 75 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 72, ᐃ * 69, 74 * ᐃ, ᐃ * 58, 83 * ᐃ, ᐃ * 52);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * 0, -8 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 83, 52 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 65, ᐃ * 110, ᐃ * 72, ᐃ * 139, ᐃ * 71);
			Ⲇ.bezierCurveTo(176 * ᐃ, 71 * ᐃ, ᐃ * 193, 61 * ᐃ, ᐃ * 191, ᐃ * 54);
			Ⲇ.bezierCurveTo(202 * ᐃ, ᐃ * 58, 198 * ᐃ, 72 * ᐃ, ᐃ * 187, ᐃ * 75);
			Ⲇ.bezierCurveTo(ᐃ * 143, ᐃ * 87, 107 * ᐃ, ᐃ * 79, ᐃ * 89, ᐃ * 75);
			Ⲇ.bezierCurveTo(72 * ᐃ, ᐃ * 69, ᐃ * 74, ᐃ * 58, ᐃ * 83, 52 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], 4 * ᐃ);
			Ⲇ.translate(-28 * ᐃ, -15 * ᐃ);
			ΔⵠⲆ(Ⲇ, 141.75 * ᐃ, ᐃ * 127.34375, ᐃ * 15);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, 191.75 * ᐃ, ᐃ * 127.09375, ᐃ * ᐃᐃⵠⲆᐃⲆΔ);
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			ΔⵠⲆ(Ⲇ, ᐃ * 138.75, ᐃ * 119.34375, 5 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			ΔⵠⲆ(Ⲇ, ᐃ * 188.75, 119.34375 * ᐃ, ᐃ * ⲆᐃΔΔΔ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 125.75, ᐃ * 139.34375);
			Ⲇ.bezierCurveTo(ᐃ * 134.75, 134.34375 * ᐃ, ᐃ * 143.75, 134.34375 * ᐃ, 156.75 * ᐃ, ᐃ * 139.34375);
			Ⲇ.bezierCurveTo(153.25 * ᐃ, ᐃ * 141.84375, 153.25 * ᐃ, 141.84375 * ᐃ, 149.75 * ᐃ, 144.34375 * ᐃ);
			Ⲇ.bezierCurveTo(140.25 * ᐃ, ᐃ * 144.34375, 140.25 * ᐃ, ᐃ * 144.34375, ᐃ * 130.75, ᐃ * 144.34375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 176.75, 139.34375 * ᐃ);
			Ⲇ.bezierCurveTo(183.75 * ᐃ, 135.34375 * ᐃ, ᐃ * 199.75, 135.34375 * ᐃ, ᐃ * 205.75, ᐃ * 139.34375);
			Ⲇ.bezierCurveTo(ᐃ * 203.25, 141.34375 * ᐃ, 203.25 * ᐃ, 141.34375 * ᐃ, ᐃ * 200.75, 143.34375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 190.75, ᐃ * 143.84375, ᐃ * 190.75, ᐃ * 143.84375, 180.75 * ᐃ, ᐃ * 144.34375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1])
		} else {
			Ⲇ.globalAlpha = .75;
			Ⲇ.translate(0, ᐃ * ⲆΔᐃⲆΔ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 87, ᐃ * 64.5);
			ᐃΔⵠ(Ⲇ, ᐃ * -56, ᐃ * -41.5, ᐃ * 112, 83 * ᐃ, 18 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
			Ⲇ.globalAlpha = ΔΔⲆΔ;
			Ⲇ.translate(ΔΔⲆᐃ, ᐃ * -8);
			Ⲇ.save();
			Ⲇ.translate(87 * ᐃ, 64.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, -56 * ᐃ, -41.5 * ᐃ, ᐃ * 112, 83 * ᐃ, ᐃ * ⵠᐃⵠᐃⲆᐃΔ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[ⲆᐃⲆᐃ], 4 * ᐃ);
			if (ᐃⲆ == 0) {
				Ⲇ.translate(27 * ᐃ, ᐃ * ⲆΔⵠᐃⲆ);
				ΔⵠⲆ(Ⲇ, 35 * ᐃ, ᐃ * 75, ᐃ * ᐃΔⵠⲆΔ);
				Δⵠ(Ⲇ, ᐃᐃ[3]);
				ΔⵠⲆ(Ⲇ, 85 * ᐃ, 75 * ᐃ, ᐃᐃⵠⲆᐃⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ]);
				ΔⵠⲆ(Ⲇ, 32 * ᐃ, ᐃ * 67, ᐃ * 5);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, 82 * ᐃ, 67 * ᐃ, 5 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[4])
			} else if (ᐃⲆ == ᐃΔⲆⵠ) {
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 35, 73 * ᐃ);
				Ⲇ.bezierCurveTo(40 * ᐃ, 72 * ᐃ, 38 * ᐃ, ᐃ * 68, 35 * ᐃ, ᐃ * 67);
				Ⲇ.bezierCurveTo(ᐃ * 25, ᐃ * 67, 21 * ᐃ, ᐃ * 65, ᐃ * ⵠⲆⵠⵠΔ, ᐃ * 61);
				Ⲇ.bezierCurveTo(ᐃ * ᐃⵠⲆᐃⵠ, 60 * ᐃ, ᐃ * 16, 64 * ᐃ, 20 * ᐃ, 67 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * ⵠΔᐃⲆ, ᐃ * 70, ᐃ * 12, 68.5 * ᐃ, ⵠⲆᐃᐃ * ᐃ, 70 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 2, 71 * ᐃ, ᐃ * 6, ᐃ * 72, ᐃ * 13, ᐃ * 73);
				Ⲇ.bezierCurveTo(ᐃ * 12.5, ᐃ * 76.5, 12.5 * ᐃ, ᐃ * 76.5, ᐃ * ⵠⵠᐃᐃⵠ, 80 * ᐃ);
				Ⲇ.bezierCurveTo(ⵠⲆⵠⲆΔ * ᐃ, 83 * ᐃ, 15 * ᐃ, 80 * ᐃ, ᐃ * 18, ᐃ * 73);
				Ⲇ.bezierCurveTo(ᐃ * 26.5, 73.5 * ᐃ, 26.5 * ᐃ, 73.5 * ᐃ, ᐃ * 35, ᐃ * 74);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], ⵠⲆᐃᐃ * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 134, ᐃ * 64);
				Ⲇ.bezierCurveTo(ᐃ * 141.5, 64 * ᐃ, 141.5 * ᐃ, 64 * ᐃ, ᐃ * 149, ᐃ * 64);
				Ⲇ.bezierCurveTo(ᐃ * 153, ᐃ * 59, 156 * ᐃ, 56 * ᐃ, ᐃ * 159, 56 * ᐃ);
				Ⲇ.bezierCurveTo(161 * ᐃ, 57 * ᐃ, ᐃ * 160, ᐃ * 60, ᐃ * 155, 65 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 165, ᐃ * 71, ᐃ * 168, 72 * ᐃ, 169 * ᐃ, 74 * ᐃ);
				Ⲇ.bezierCurveTo(169 * ᐃ, ᐃ * 76, ᐃ * 159, ᐃ * 71, 156 * ᐃ, 72 * ᐃ);
				Ⲇ.bezierCurveTo(154 * ᐃ, ᐃ * 72, ᐃ * 155, 75 * ᐃ, ᐃ * 156, 79 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 155, ᐃ * 81, 153 * ᐃ, ᐃ * 78, 150 * ᐃ, ᐃ * 72);
				Ⲇ.bezierCurveTo(142 * ᐃ, 71.5 * ᐃ, 142 * ᐃ, 71.5 * ᐃ, ᐃ * 134, ᐃ * 71);
				Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 69, ᐃ * 131, 65 * ᐃ, 135 * ᐃ, ᐃ * 64);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], 4 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 80, 95 * ᐃ);
				Ⲇ.bezierCurveTo(83 * ᐃ, 88 * ᐃ, 89 * ᐃ, 88 * ᐃ, ᐃ * 92, ᐃ * 95);
				Ⲇ.bezierCurveTo(92 * ᐃ, 105 * ᐃ, ᐃ * 88, 110 * ᐃ, ᐃ * 86, 110 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 83, ᐃ * 107, ᐃ * 82, ᐃ * 104, 80 * ᐃ, 96 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠΔ], ᐃᐃ[8], ᐃ * 3);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 81, ᐃ * 100);
				Ⲇ.bezierCurveTo(82 * ᐃ, ᐃ * 97, 83 * ᐃ, 96 * ᐃ, 85 * ᐃ, ᐃ * 96);
				Ⲇ.bezierCurveTo(ᐃ * 82, ᐃ * ΔΔⲆⵠⲆ, 82 * ᐃ, ᐃ * 101, ᐃ * 83, ᐃ * 103);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⲆ]);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 83, 103 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 83, 102 * ᐃ, 84 * ᐃ, ᐃ * ⵠΔⵠⲆⲆ, 86 * ᐃ, ᐃ * 100);
				Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 103, ᐃ * 84, ᐃ * 105, 84 * ᐃ, 106 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[8]);
				Ⲇ.translate(27 * ᐃ, 10 * ᐃ);
				ΔⵠⲆ(Ⲇ, ᐃ * 35, 75 * ᐃ, 15 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[3]);
				ΔⵠⲆ(Ⲇ, ᐃ * 85, 75 * ᐃ, ᐃ * ᐃᐃⵠᐃⲆᐃⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ]);
				ΔⵠⲆ(Ⲇ, 32 * ᐃ, ᐃ * 67, 5 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, ᐃ * 82, 67 * ᐃ, ᐃ * 5);
				Δⵠ(Ⲇ, ᐃᐃ[4])
			} else if (2 == ᐃⲆ) {
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 48, ᐃ * 22);
				Ⲇ.bezierCurveTo(85.5 * ᐃ, ᐃ * 22, ᐃ * 85.5, 22 * ᐃ, 123 * ᐃ, ᐃ * 22);
				Ⲇ.bezierCurveTo(ᐃ * 138, ᐃ * 23, ᐃ * 147, 34 * ᐃ, ᐃ * 143, 62 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 142, 67 * ᐃ, 144 * ᐃ, ᐃ * 70, 149 * ᐃ, ᐃ * 73);
				Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 77, ᐃ * 145, 77 * ᐃ, 143 * ᐃ, 77 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 141, 85 * ᐃ, ᐃ * 145, 92 * ᐃ, 148 * ᐃ, ᐃ * 97);
				Ⲇ.bezierCurveTo(ᐃ * 142, 103 * ᐃ, 134 * ᐃ, ᐃ * 105, 121 * ᐃ, ᐃ * 106);
				Ⲇ.bezierCurveTo(85 * ᐃ, ᐃ * 106, 85 * ᐃ, 106 * ᐃ, ᐃ * 49, ᐃ * 106);
				Ⲇ.bezierCurveTo(ᐃ * 32, 104 * ᐃ, ᐃ * 29, 101 * ᐃ, 24 * ᐃ, 95 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 86, 31 * ᐃ, ᐃ * 85, ᐃ * 30, 78 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 27.5, 76 * ᐃ, ᐃ * 27.5, ᐃ * 76, ᐃ * 25, ᐃ * 74);
				Ⲇ.bezierCurveTo(31 * ᐃ, 68 * ᐃ, 31 * ᐃ, 60 * ᐃ, ᐃ * 30, 46 * ᐃ);
				Ⲇ.bezierCurveTo(31 * ᐃ, 31 * ᐃ, 37 * ᐃ, ᐃ * 23, 47 * ᐃ, 22 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[ᐃⵠΔⲆ], ᐃ * ᐃΔⲆΔ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 30, 44 * ᐃ);
				Ⲇ.bezierCurveTo(66 * ᐃ, 48 * ᐃ, 99 * ᐃ, 45 * ᐃ, 141 * ᐃ, 39 * ᐃ);
				Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[ΔⲆΔⵠ], 4 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(30 * ᐃ, ᐃ * 67);
				Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 44, ᐃ * 118, ᐃ * 43, ᐃ * 141, 60 * ᐃ);
				Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⵠⲆ], 4 * ᐃ);
				Ⲇ.globalAlpha = .4;
				ΔⵠⲆ(Ⲇ, ᐃ * 31, ᐃ * 44, ⲆⲆⵠⲆⵠ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⲆ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 42, 47 * ᐃ, 9 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[5]);
				ΔⵠⲆ(Ⲇ, ᐃ * 70, 42 * ᐃ, ⵠⲆᐃⵠⲆᐃⲆ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠᐃ]);
				ΔⵠⲆ(Ⲇ, 53 * ᐃ, ᐃ * 45, ᐃ * 9);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔⵠ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 103, ᐃ * 40, ᐃ * ⲆⵠΔᐃⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠⵠⵠ]);
				ΔⵠⲆ(Ⲇ, 116 * ᐃ, 41 * ᐃ, ⵠⲆᐃⵠⲆᐃⲆ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆΔ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 131, 41 * ᐃ, ΔᐃΔⵠⲆΔⲆ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆᐃΔ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 39, ᐃ * 64, 9 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				ΔⵠⲆ(Ⲇ, 51 * ᐃ, ᐃ * 60, ᐃ * ᐃᐃⲆⲆⲆ);
				Δⵠ(Ⲇ, ᐃᐃ[6]);
				ΔⵠⲆ(Ⲇ, 74 * ᐃ, ᐃ * 53, ᐃ * ΔⵠᐃᐃⲆΔⲆ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, ᐃ * 83, ᐃ * 51, ᐃ * 9);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⲆ]);
				ΔⵠⲆ(Ⲇ, 95 * ᐃ, ᐃ * 51, 9 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠᐃ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 107, ᐃ * 49, 9 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				ΔⵠⲆ(Ⲇ, 120 * ᐃ, ᐃ * 50, ΔⵠᐃⲆᐃᐃΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, 137 * ᐃ, ᐃ * 57, 9 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆΔ]);
				Ⲇ.globalAlpha = ⵠⲆⲆ;
				ΔⵠⲆ(Ⲇ, 31 * ᐃ, ᐃ * 44, ᐃ * 4);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, ᐃ * 42, ᐃ * 47, ⵠΔΔᐃ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔᐃ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 53, 45 * ᐃ, ᐃ * 4);
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				ΔⵠⲆ(Ⲇ, 70 * ᐃ, ᐃ * 43, ᐃ * ⲆⲆΔΔ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⵠⲆ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 50, ᐃ * 59, ᐃ * ⲆⲆΔΔ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠᐃ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 39, 64 * ᐃ, 4 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				ΔⵠⲆ(Ⲇ, 83 * ᐃ, 51 * ᐃ, ᐃΔⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, ᐃ * 74, ᐃ * 53, ⲆⵠⲆⲆ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⲆ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 95, 51 * ᐃ, ᐃΔⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[6]);
				ΔⵠⲆ(Ⲇ, ᐃ * 103, 41 * ᐃ, Δⵠⵠⵠ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔⲆ]);
				ΔⵠⲆ(Ⲇ, 107 * ᐃ, ᐃ * 49, ᐃⵠᐃᐃ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				ΔⵠⲆ(Ⲇ, ᐃ * 116, ᐃ * 41, ᐃ * ᐃΔⲆΔ);
				Δⵠ(Ⲇ, ᐃᐃ[5]);
				ΔⵠⲆ(Ⲇ, 131 * ᐃ, ᐃ * 41, 4 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⲆ]);
				ΔⵠⲆ(Ⲇ, 137 * ᐃ, ᐃ * 57, 4 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[5]);
				ΔⵠⲆ(Ⲇ, 120 * ᐃ, ᐃ * 50, ᐃ * 4);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				Ⲇ.translate(27 * ᐃ, ᐃ * ᐃΔᐃᐃⵠ);
				ΔⵠⲆ(Ⲇ, 35 * ᐃ, 75 * ᐃ, 15 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[9]);
				ΔⵠⲆ(Ⲇ, ᐃ * 85, ᐃ * 75, ᐃ * 15);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⵠΔᐃᐃⵠ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 32, ᐃ * 67, ᐃ * 5);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃΔⲆ]);
				ΔⵠⲆ(Ⲇ, 82 * ᐃ, ᐃ * 67, ᐃ * ⲆⲆᐃⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[10])
			} else if (ᐃⲆ == 3) {
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(23 * ᐃ, 95 * ᐃ);
				Ⲇ.bezierCurveTo(30 * ᐃ, 85 * ᐃ, 30 * ᐃ, ᐃ * 83, ᐃ * 30, ᐃ * 72);
				Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 61.5, ᐃ * 30, ᐃ * 61.5, ᐃ * 30, 51 * ᐃ);
				Ⲇ.bezierCurveTo(29 * ᐃ, 33 * ᐃ, 42 * ᐃ, ᐃ * 23, ᐃ * 54, 24 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 86.5, ᐃ * 24, ᐃ * 86.5, ᐃ * 24, 119 * ᐃ, ᐃ * 24);
				Ⲇ.bezierCurveTo(135 * ᐃ, 24 * ᐃ, ᐃ * 143, ᐃ * 33, ᐃ * 143, ᐃ * 47);
				Ⲇ.bezierCurveTo(ᐃ * 143, 63.5 * ᐃ, ᐃ * 143, 63.5 * ᐃ, ᐃ * 143, ᐃ * 80);
				Ⲇ.bezierCurveTo(142 * ᐃ, 86 * ᐃ, 147 * ᐃ, 93 * ᐃ, ᐃ * 150, 96 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 144, ᐃ * 107, ᐃ * 113, 112 * ᐃ, 84 * ᐃ, ᐃ * 111);
				Ⲇ.bezierCurveTo(52 * ᐃ, 112 * ᐃ, 34 * ᐃ, 106 * ᐃ, ᐃ * 23, ᐃ * 96);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆⵠᐃ], 4 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 30, 81 * ᐃ);
				Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 99, 104 * ᐃ, 98 * ᐃ, ᐃ * 142, ᐃ * 84);
				Ⲇ.bezierCurveTo(145.5 * ᐃ, ᐃ * 89.5, ᐃ * 145.5, 89.5 * ᐃ, 149 * ᐃ, 95 * ᐃ);
				Ⲇ.bezierCurveTo(142 * ᐃ, ᐃ * 106, 127 * ᐃ, ᐃ * 110, 81 * ᐃ, 110 * ᐃ);
				Ⲇ.bezierCurveTo(36 * ᐃ, 112 * ᐃ, ᐃ * 28, 99 * ᐃ, 23 * ᐃ, 95 * ᐃ);
				Ⲇ.bezierCurveTo(31 * ᐃ, 87 * ᐃ, 31 * ᐃ, 82 * ᐃ, 30 * ᐃ, ᐃ * 81);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[2], ᐃ * ᐃⵠᐃᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(23 * ᐃ, 95 * ᐃ);
				Ⲇ.bezierCurveTo(30 * ᐃ, ᐃ * 85, 30 * ᐃ, 83 * ᐃ, 30 * ᐃ, 72 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 61.5, ᐃ * 30, ᐃ * 61.5, 30 * ᐃ, ᐃ * 51);
				Ⲇ.bezierCurveTo(ᐃ * 29, 33 * ᐃ, 42 * ᐃ, ᐃ * 23, 54 * ᐃ, 24 * ᐃ);
				Ⲇ.bezierCurveTo(86.5 * ᐃ, ᐃ * 24, ᐃ * 86.5, 24 * ᐃ, ᐃ * 119, 24 * ᐃ);
				Ⲇ.bezierCurveTo(135 * ᐃ, ᐃ * 24, 143 * ᐃ, ᐃ * 33, ᐃ * 143, 47 * ᐃ);
				Ⲇ.bezierCurveTo(143 * ᐃ, 63.5 * ᐃ, ᐃ * 143, 63.5 * ᐃ, ᐃ * 143, 80 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 86, 147 * ᐃ, ᐃ * 93, ᐃ * 150, 96 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 144, 107 * ᐃ, ᐃ * 113, 112 * ᐃ, 84 * ᐃ, ᐃ * 111);
				Ⲇ.bezierCurveTo(52 * ᐃ, 112 * ᐃ, 34 * ᐃ, 106 * ᐃ, ᐃ * 23, 96 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ⲆⲆⲆⵠᐃ * ᐃ);
				Ⲇ.translate(ᐃ * 27, ⲆᐃΔⵠⵠ * ᐃ);
				ΔⵠⲆ(Ⲇ, 35 * ᐃ, 75 * ᐃ, 15 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔⵠ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 85, ᐃ * 75, ᐃ * ᐃⲆⲆΔⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠᐃ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 32, 67 * ᐃ, ᐃ * 5);
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃⵠΔ]);
				ΔⵠⲆ(Ⲇ, 82 * ᐃ, ᐃ * 67, ΔⲆⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔᐃ]);
				Ⲇ.translate(-96 * ᐃ, ᐃ * -25);
				Ⲇ.scale(1.8, 1.8);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 85, 21 * ᐃ);
				Ⲇ.bezierCurveTo(73 * ᐃ, ᐃ * 16, ᐃ * 70, 16 * ᐃ, 70 * ᐃ, 26 * ᐃ);
				Ⲇ.bezierCurveTo(72 * ᐃ, 34 * ᐃ, ᐃ * 75, 37 * ᐃ, 85 * ᐃ, ᐃ * 26);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃᐃ], ᐃᐃ[ⲆΔⵠᐃ], 3 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 89, 21 * ᐃ);
				Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 16, 105 * ᐃ, ᐃ * ᐃᐃᐃΔΔ, ᐃ * 106, 24 * ᐃ);
				Ⲇ.bezierCurveTo(105 * ᐃ, ᐃ * 36, ᐃ * 97, ᐃ * 36, 90 * ᐃ, 28 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆΔ], ᐃᐃ[5], ᐃⵠⵠⵠ * ᐃ);
				ΔⵠⲆ(Ⲇ, 87 * ᐃ, ᐃ * 23, ᐃ * 6.324555320336759);
				Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠΔⲆⲆΔ], ⵠⲆⵠⵠ * ᐃ)
			} else if (ᐃⲆ == 4) {
				Ⲇ.translate(ᐃ * 27, ᐃ * 8);
				ΔⵠⲆ(Ⲇ, 15 * ᐃ, 76 * ᐃ, ᐃ * 9.219544457292887);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
				ΔⵠⲆ(Ⲇ, 106 * ᐃ, ᐃ * 76, 9.219544457292887 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ]);
				Ⲇ.translate(-27 * ᐃ, ᐃ * -ⵠⵠΔⵠΔ);
				Ⲇ.translate(27 * ᐃ, 10 * ᐃ);
				ΔⵠⲆ(Ⲇ, ᐃ * 35, 75 * ᐃ, ᐃ * 15);
				Δⵠ(Ⲇ, ᐃᐃ[5]);
				ΔⵠⲆ(Ⲇ, ᐃ * 85, ᐃ * 75, ᐃ * 15);
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆΔ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 32, ᐃ * 67, ᐃⵠⲆⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔΔⲆ]);
				ΔⵠⲆ(Ⲇ, 82 * ᐃ, 67 * ᐃ, ⲆᐃΔΔΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[6]);
				Ⲇ.translate(ᐃ * -27, ᐃ * -10);
				Ⲇ.translate(27 * ᐃ, ᐃ * 8);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 52, ᐃ * 86);
				Ⲇ.bezierCurveTo(54 * ᐃ, ᐃ * 78, ᐃ * 65, 80 * ᐃ, ᐃ * 67, 85 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 69, 89 * ᐃ, 64 * ᐃ, ᐃ * 99, ᐃ * 71, 106 * ᐃ);
				Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 109, ᐃ * 61, 108 * ᐃ, ᐃ * 58, ᐃ * 102);
				Ⲇ.bezierCurveTo(ᐃ * 53, ᐃ * 97, ᐃ * 52, 91 * ᐃ, 52 * ᐃ, ᐃ * 86);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆⵠᐃ])
			} else if (6 == ᐃⲆ) {
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.translate(ᐃⲆⵠᐃ * ᐃ, ⵠⵠⲆⲆ);
				Ⲇ.moveTo(28 * ᐃ, ᐃ * 69);
				Ⲇ.bezierCurveTo(ᐃ * 26, 39 * ᐃ, ᐃ * 31, ᐃ * 25, ᐃ * 52, 24 * ᐃ);
				Ⲇ.bezierCurveTo(86 * ᐃ, 23.5 * ᐃ, 86 * ᐃ, 23.5 * ᐃ, 120 * ᐃ, ᐃ * 23);
				Ⲇ.bezierCurveTo(ᐃ * 137, 23 * ᐃ, 145 * ᐃ, 33 * ᐃ, ᐃ * 144, 53 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 144.5, ᐃ * 63, 144.5 * ᐃ, 63 * ᐃ, ᐃ * 145, ᐃ * 73);
				Ⲇ.bezierCurveTo(141 * ᐃ, 41 * ᐃ, 106 * ᐃ, ᐃ * 41, 98 * ᐃ, ᐃ * 59);
				Ⲇ.bezierCurveTo(ᐃ * 92, 69 * ᐃ, 94 * ᐃ, 98 * ᐃ, 90 * ᐃ, ᐃ * 95);
				Ⲇ.bezierCurveTo(ᐃ * 86, ᐃ * 95, ᐃ * 86, 95 * ᐃ, ᐃ * 82, ᐃ * 95);
				Ⲇ.bezierCurveTo(ᐃ * 79, 94 * ᐃ, 87 * ᐃ, ᐃ * 33, 48 * ᐃ, ᐃ * 47);
				Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 57, ᐃ * 30, ᐃ * 65, ᐃ * 28, ᐃ * 72);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ]);
				Ⲇ.save();
				Ⲇ.translate(87 * ᐃ, ᐃ * 64.5);
				ᐃΔⵠ(Ⲇ, -56 * ᐃ, -41.5 * ᐃ, 112 * ᐃ, 83 * ᐃ, ᐃ * 18);
				Ⲇ.restore();
				Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃᐃΔⵠ], ᐃ * ⲆⲆΔΔ);
				Ⲇ.translate(27 * ᐃ, ᐃ * ⲆⵠⲆⵠᐃ);
				ΔⵠⲆ(Ⲇ, 35 * ᐃ, ᐃ * 75, ᐃ * ⵠᐃΔᐃⲆᐃΔ);
				Δⵠ(Ⲇ, ᐃᐃ[3]);
				ΔⵠⲆ(Ⲇ, 85 * ᐃ, 75 * ᐃ, Ⲇⵠⵠⵠᐃⵠᐃ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[3]);
				ΔⵠⲆ(Ⲇ, ᐃ * 32, ᐃ * 67, ᐃᐃⲆᐃⵠ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				ΔⵠⲆ(Ⲇ, ᐃ * 82, ᐃ * 67, ᐃ * ΔᐃΔΔⲆ);
				Δⵠ(Ⲇ, ᐃᐃ[4]);
				Ⲇ.scale(1.4, 1.4);
				Ⲇ.translate(ᐃ * -43.5, ᐃ * -32);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(86 * ᐃ, 105 * ᐃ);
				Ⲇ.bezierCurveTo(89 * ᐃ, ᐃ * 103, 90 * ᐃ, ᐃ * 100, ᐃ * 92, 97 * ᐃ);
				Ⲇ.bezierCurveTo(93 * ᐃ, 91 * ᐃ, 85 * ᐃ, ᐃ * 90, 81 * ᐃ, ᐃ * 95);
				Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 97, ᐃ * 83, ᐃ * 101, 85 * ᐃ, 105 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃΔ], ᐃᐃ[6], ⵠⲆⲆΔ * ᐃ)
			} else if (7 == ᐃⲆ) {
				Ⲇ.save();
				Ⲇ.translate(86 * ᐃ, ᐃ * 64.5);
				ᐃΔⵠ(Ⲇ, -16 * ᐃ, ᐃ * -43.5, 32 * ᐃ, 87 * ᐃ, 5 * ᐃ);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ], ᐃᐃ[4], 4 * ᐃ);
				Ⲇ.translate(0, ᐃ * 6);
				Ⲇ.globalAlpha = .5;
				Ⲇ.save();
				Ⲇ.translate(85.5 * ᐃ, 47 * ᐃ);
				ᐃΔⵠ(Ⲇ, ᐃ * -58.5, ᐃ * -ⵠᐃᐃΔⲆ, ᐃ * 117, 16 * ᐃ, ᐃ * 5);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[0]);
				Ⲇ.translate(0, ᐃ * -6);
				Ⲇ.globalAlpha = ⵠⵠⲆ;
				Ⲇ.save();
				Ⲇ.translate(ᐃ * 85.5, 47 * ᐃ);
				ᐃΔⵠ(Ⲇ, ᐃ * -58.5, ᐃ * -ⵠᐃⵠⵠⵠ, ᐃ * 117, 16 * ᐃ, ᐃ * 5);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[4], ᐃ * 4);
				Ⲇ.translate(0, ᐃ * 7);
				Ⲇ.globalAlpha = .5;
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 84, 44 * ᐃ);
				Ⲇ.bezierCurveTo(85 * ᐃ, 26 * ᐃ, 96 * ᐃ, 23 * ᐃ, ᐃ * 103, ᐃ * 30);
				Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 36, 110 * ᐃ, ᐃ * 47, ᐃ * 92, ᐃ * 50);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 87, ᐃ * 44);
				Ⲇ.bezierCurveTo(ᐃ * 108, 47 * ᐃ, 109 * ᐃ, 54 * ᐃ, ᐃ * 102, ᐃ * 63);
				Ⲇ.bezierCurveTo(92 * ᐃ, 77 * ᐃ, ᐃ * 80, ᐃ * 61, ᐃ * 84, ᐃ * 49);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[0]);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(84 * ᐃ, 43 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 86, ᐃ * 24, 72 * ᐃ, ᐃ * 23, ᐃ * 68, 31 * ᐃ);
				Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 42, 70 * ᐃ, ᐃ * 49, ᐃ * 81, ᐃ * 47);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(78 * ᐃ, ᐃ * 45);
				Ⲇ.bezierCurveTo(ᐃ * 61, 49 * ᐃ, ᐃ * 60, 58 * ᐃ, ᐃ * 68, 64 * ᐃ);
				Ⲇ.bezierCurveTo(78 * ᐃ, ᐃ * 75, ᐃ * 84, 65 * ᐃ, ᐃ * 89, 54 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
				Ⲇ.translate(0, ᐃ * -ᐃⵠᐃⵠΔ);
				Ⲇ.globalAlpha = 1;
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 84, 44 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 26, 96 * ᐃ, 23 * ᐃ, ᐃ * 103, 30 * ᐃ);
				Ⲇ.bezierCurveTo(110 * ᐃ, ᐃ * 36, ᐃ * 110, 47 * ᐃ, 92 * ᐃ, 50 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], 4 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(87 * ᐃ, ᐃ * 44);
				Ⲇ.bezierCurveTo(ᐃ * 108, 47 * ᐃ, ᐃ * 109, 54 * ᐃ, 102 * ᐃ, 63 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 92, 77 * ᐃ, 80 * ᐃ, ᐃ * 61, ᐃ * 84, ᐃ * 49);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⲆᐃᐃ], 4 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(84 * ᐃ, 43 * ᐃ);
				Ⲇ.bezierCurveTo(86 * ᐃ, 24 * ᐃ, ᐃ * 72, ᐃ * 23, ᐃ * 68, ᐃ * 31);
				Ⲇ.bezierCurveTo(56 * ᐃ, 42 * ᐃ, ᐃ * 70, 49 * ᐃ, 81 * ᐃ, ᐃ * 47);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[4], ᐃ * 4);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 78, 45 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 49, ᐃ * 60, 58 * ᐃ, 68 * ᐃ, 64 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 78, 75 * ᐃ, ᐃ * 84, 65 * ᐃ, 89 * ᐃ, ᐃ * 54);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆΔΔ], ᐃ * ΔⲆΔⲆ);
				Ⲇ.translate(ⲆⲆⲆ, ᐃ * 6);
				Ⲇ.globalAlpha = .5;
				Ⲇ.save();
				Ⲇ.translate(85 * ᐃ, 47.5 * ᐃ);
				Ⲇ.rotate(ⲆⵠⲆ);
				ᐃΔⵠ(Ⲇ, -10 * ᐃ, ᐃ * -10.5, ᐃ * ᐃᐃᐃⲆ, ᐃ * 21, ᐃ * ⲆΔΔⵠΔ);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
				Ⲇ.translate(0, ᐃ * -6);
				Ⲇ.globalAlpha = ΔΔⲆΔ;
				Ⲇ.save();
				Ⲇ.translate(85 * ᐃ, ᐃ * 47.5);
				Ⲇ.rotate(0);
				ᐃΔⵠ(Ⲇ, -10 * ᐃ, ᐃ * -10.5, ᐃᐃⲆⲆⵠ * ᐃ, ᐃ * 21, ᐃ * 5);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔⲆᐃΔ], 4 * ᐃ);
				Ⲇ.translate(ᐃ * 27, 10 * ᐃ);
				ΔⵠⲆ(Ⲇ, 35 * ᐃ, ᐃ * 75, 15 * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
				ΔⵠⲆ(Ⲇ, ᐃ * 85, 75 * ᐃ, ᐃ * 15);
				Δⵠ(Ⲇ, ᐃᐃ[5]);
				ΔⵠⲆ(Ⲇ, ᐃ * 32, 67 * ᐃ, ⲆΔᐃΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔⵠ]);
				ΔⵠⲆ(Ⲇ, 82 * ᐃ, ᐃ * 67, ᐃⵠⲆⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠᐃ])
			} else if (5 == ᐃⲆ) {
				ΔΔ.width = 211 * ᐃ;
				ΔΔ.height = 152 * ᐃ;
				Ⲇ.globalAlpha = .5;
				Ⲇ.translate(ⵠⵠⲆⲆ, ᐃ * ᐃⵠΔΔᐃ);
				Ⲇ.save();
				Ⲇ.translate(ᐃ * 105.5, 76.5 * ᐃ);
				ᐃΔⵠ(Ⲇ, ᐃ * -56, ᐃ * -41.5, 112 * ᐃ, ᐃ * 83, ᐃ * ΔΔⵠⲆΔ);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[0]);
				Ⲇ.globalAlpha = ⵠⲆⲆ;
				Ⲇ.translate(ⵠⵠⲆⲆ, -8 * ᐃ);
				Ⲇ.save();
				Ⲇ.translate(105.5 * ᐃ, 76.5 * ᐃ);
				ᐃΔⵠ(Ⲇ, -56 * ᐃ, ᐃ * -41.5, 112 * ᐃ, 83 * ᐃ, ⵠⵠⲆΔᐃⵠⲆ * ᐃ);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], ᐃ * ᐃΔΔΔ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 68, 39 * ᐃ);
				Ⲇ.bezierCurveTo(48 * ᐃ, 37 * ᐃ, ᐃ * 43, 27 * ᐃ, 40 * ᐃ, ⲆⵠⵠⵠⲆᐃⵠ * ᐃ);
				Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 25, ᐃ * 20, ΔⲆᐃΔⵠ * ᐃ, ΔΔΔΔⵠ * ᐃ, ΔᐃΔⵠⲆΔⲆ * ᐃ);
				Ⲇ.bezierCurveTo(9 * ᐃ, ᐃ * 41, ᐃ * 40, ᐃ * 44, 62 * ᐃ, 45 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 4);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 143, 38 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 40, 169 * ᐃ, ᐃ * 24, 171 * ᐃ, ᐃ * ⵠⲆⲆⵠⲆᐃⵠ);
				Ⲇ.bezierCurveTo(181 * ᐃ, ᐃ * 23, ᐃ * 188, ᐃ * 20, ᐃ * 199, ΔⵠᐃⲆᐃᐃΔ * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 35, 182 * ᐃ, ᐃ * 44, ᐃ * 152, 45 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[ⵠⵠⲆᐃ], ⵠⲆᐃᐃ * ᐃ);
				Ⲇ.save();
				Ⲇ.translate(ᐃ * 105.5, 76.5 * ᐃ);
				ᐃΔⵠ(Ⲇ, ᐃ * -55, -40.5 * ᐃ, ᐃ * 106, 77 * ᐃ, ⲆⵠᐃᐃⲆ * ᐃ);
				Ⲇ.restore();
				Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 149, ᐃ * 45);
				Ⲇ.bezierCurveTo(155 * ᐃ, 37 * ᐃ, ᐃ * 158, 37 * ᐃ, 161 * ᐃ, ᐃ * 52);
				Ⲇ.bezierCurveTo(164 * ᐃ, 60 * ᐃ, ᐃ * 161, ᐃ * 65, ᐃ * 152, 58 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 51, 143 * ᐃ, ᐃ * 49, ᐃ * 149, 45 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠΔⲆΔ], ᐃ * ⵠΔⲆᐃΔ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 60, ᐃ * 43);
				Ⲇ.bezierCurveTo(ᐃ * 67, 47 * ᐃ, ᐃ * 67, ᐃ * 51, 57 * ᐃ, 59 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 50, 64 * ᐃ, ᐃ * 47, 64 * ᐃ, ᐃ * 49, 55 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 49, 42 * ᐃ, 51 * ᐃ, 38 * ᐃ, 59 * ᐃ, 42 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * ᐃΔᐃΔ);
				ΔⵠⲆ(Ⲇ, 105 * ᐃ, ᐃ * 107, ᐃ * 10.63014581273465);
				Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ], ᐃᐃ[6], ᐃ * ⲆⲆⲆⵠᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 105, ᐃ * 100);
				Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 101, 113 * ᐃ, ᐃ * 104, ᐃ * 112, ᐃ * 109);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃᐃ[7]);
				Ⲇ.translate(44.5 * ᐃ, ᐃ * 22);
				ΔⵠⲆ(Ⲇ, ᐃ * 35, ᐃ * 75, ᐃΔⵠⲆΔ * ᐃ);
				Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠⵠⲆ]);
				ΔⵠⲆ(Ⲇ, 85 * ᐃ, ᐃ * 75, ᐃ * ⲆⵠΔⲆΔΔⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[8]);
				ΔⵠⲆ(Ⲇ, 32 * ᐃ, ᐃ * 67, ᐃ * 5);
				Δⵠ(Ⲇ, ᐃᐃ[9]);
				ΔⵠⲆ(Ⲇ, ᐃ * 82, 67 * ᐃ, ᐃ * ᐃᐃⲆᐃⵠ);
				Δⵠ(Ⲇ, ᐃᐃ[9])
			} else ΔⵠᐃᐃⲆΔⲆ == ᐃⲆ && (Ⲇ.save(), Ⲇ.translate(110 * ᐃ, ᐃ * 22), ᐃΔⵠ(Ⲇ, -ⵠⵠᐃⲆⵠⲆΔ * ᐃ, -5 * ᐃ, 32 * ᐃ, ⵠΔᐃΔᐃ * ᐃ, ᐃᐃⲆᐃᐃ * ᐃ), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 3 * ᐃ), Ⲇ.save(), Ⲇ.translate(ᐃ * 109.5, ᐃΔⲆⲆᐃⵠⵠ * ᐃ), ᐃΔⵠ(Ⲇ, ᐃ * -18.5, ᐃ * -3, 37 * ᐃ, ᐃ * 6, ⲆⵠⲆⵠᐃ * ᐃ), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ⵠᐃᐃᐃ * ᐃ), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⲆⵠⲆ, ᐃ * ⲆΔᐃΔ), Ⲇ.save(), Ⲇ.translate(ᐃ * 86, 40 * ᐃ), ᐃΔⵠ(Ⲇ, -58 * ᐃ, -9 * ᐃ, ᐃ * 116, ᐃ * ᐃᐃⲆⲆⲆⲆΔ, ᐃ * ⵠⵠⲆΔⵠ), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ᐃⵠⵠ, Ⲇ.translate(ᐃⵠΔ, ᐃ * -ΔⲆⲆⲆⵠ), Ⲇ.save(), Ⲇ.translate(ᐃ * 86, 40 * ᐃ), ᐃΔⵠ(Ⲇ, -58 * ᐃ, ᐃ * -ⲆⵠΔᐃⵠ, 116 * ᐃ, ᐃ * ⵠΔΔᐃΔ, ᐃ * 6), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ⵠⲆⲆΔ * ᐃ), Ⲇ.globalAlpha = .75, Ⲇ.translate(0, ᐃ * 5), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(109 * ᐃ, 47 * ᐃ), Ⲇ.bezierCurveTo(110.5 * ᐃ, 45 * ᐃ, 110.5 * ᐃ, 45 * ᐃ, 112 * ᐃ, 43 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 114, 44 * ᐃ, 114 * ᐃ, ᐃ * 44, 116 * ᐃ, ᐃ * 45), Ⲇ.bezierCurveTo(ᐃ * 117.5, 43 * ᐃ, ᐃ * 117.5, ᐃ * 43, ᐃ * 119, 41 * ᐃ), Ⲇ.bezierCurveTo(121 * ᐃ, 41.5 * ᐃ, 121 * ᐃ, 41.5 * ᐃ, 123 * ᐃ, 42 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.beginPath(), Ⲇ.translate(0, 5 * ᐃ), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(54 * ᐃ, ᐃ * 35), Ⲇ.bezierCurveTo(ᐃ * 61.5, ᐃ * 35, ᐃ * 61.5, ᐃ * 35, 69 * ᐃ, ᐃ * 35), Ⲇ.bezierCurveTo(ᐃ * 70, 48 * ᐃ, ᐃ * 70, ᐃ * 60, 60 * ᐃ, 59 * ᐃ), Ⲇ.bezierCurveTo(45 * ᐃ, 61 * ᐃ, ᐃ * 44, 60 * ᐃ, 43 * ᐃ, 53 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 49, ᐃ * 55, ᐃ * 51, ᐃ * 55, ᐃ * 44), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ΔΔⲆᐃ, ᐃ * -5), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(105 * ᐃ, ᐃ * 38), Ⲇ.bezierCurveTo(ᐃ * 110, 48 * ᐃ, 110 * ᐃ, ᐃ * 50, 105 * ᐃ, 53 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 98, 62 * ᐃ, 107 * ᐃ, ᐃ * 66, ᐃ * 117, 60 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 128, 56 * ᐃ, ᐃ * 130, 56 * ᐃ, ᐃ * 126, ᐃ * 49), Ⲇ.bezierCurveTo(123.5 * ᐃ, 41.5 * ᐃ, 123.5 * ᐃ, 41.5 * ᐃ, ᐃ * 121, 34 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], ᐃ * ᐃⵠⲆⲆ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 109, ᐃ * 47), Ⲇ.bezierCurveTo(ᐃ * 110.5, ᐃ * 45, 110.5 * ᐃ, ᐃ * 45, ᐃ * 112, 43 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 44, 114 * ᐃ, ᐃ * 44, 116 * ᐃ, ᐃ * 45), Ⲇ.bezierCurveTo(117.5 * ᐃ, ᐃ * 43, ᐃ * 117.5, ᐃ * 43, ᐃ * 119, ᐃ * 41), Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * 41.5, 121 * ᐃ, 41.5 * ᐃ, ᐃ * 123, 42 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[6], ᐃ * ⵠⲆⵠⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 84, 33 * ᐃ), Ⲇ.bezierCurveTo(88.5 * ᐃ, ᐃ * 34.5, 88.5 * ᐃ, ᐃ * 34.5, 93 * ᐃ, 36 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 87, ᐃ * 43, 88 * ᐃ, ᐃ * 45, ᐃ * 91, 46 * ᐃ), Ⲇ.bezierCurveTo(98 * ᐃ, 56 * ᐃ, 91 * ᐃ, ᐃ * 57, ᐃ * 85, 53 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 80, ᐃ * 50, ᐃ * 78, ᐃ * 49, 82 * ᐃ, ᐃ * 43), Ⲇ.bezierCurveTo(83.5 * ᐃ, 38 * ᐃ, 83.5 * ᐃ, ᐃ * 38, 85 * ᐃ, 33 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃⵠ], ᐃᐃ[6], 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(54 * ᐃ, 35 * ᐃ), Ⲇ.bezierCurveTo(61.5 * ᐃ, 35 * ᐃ, ᐃ * 61.5, 35 * ᐃ, ᐃ * 69, ᐃ * 35), Ⲇ.bezierCurveTo(70 * ᐃ, ᐃ * 48, 70 * ᐃ, ᐃ * 60, ᐃ * 60, ᐃ * 59), Ⲇ.bezierCurveTo(ᐃ * 45, 61 * ᐃ, ᐃ * 44, 60 * ᐃ, ᐃ * 43, 53 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 49, ᐃ * 55, 51 * ᐃ, ᐃ * 55, ᐃ * 44), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃⵠ], ᐃᐃ[8], ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 48, 49 * ᐃ), Ⲇ.bezierCurveTo(50 * ᐃ, 50 * ᐃ, ᐃ * 50, 50 * ᐃ, ᐃ * 52, ᐃ * 51), Ⲇ.bezierCurveTo(50.5 * ᐃ, 52 * ᐃ, 50.5 * ᐃ, 52 * ᐃ, 49 * ᐃ, 53 * ᐃ), Ⲇ.bezierCurveTo(51 * ᐃ, 54.5 * ᐃ, 51 * ᐃ, ᐃ * 54.5, ᐃ * 53, 56 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 51, 57.5 * ᐃ, ᐃ * 51, 57.5 * ᐃ, 49 * ᐃ, 59 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆΔⲆᐃ], 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(54 * ᐃ, ᐃ * 39), Ⲇ.bezierCurveTo(61.5 * ᐃ, 39.5 * ᐃ, 61.5 * ᐃ, ᐃ * 39.5, ᐃ * 69, ᐃ * 40), Ⲇ.closePath(), Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * ΔΔⲆⲆᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 55, ᐃ * 43), Ⲇ.bezierCurveTo(61.5 * ᐃ, ᐃ * 43.5, 61.5 * ᐃ, ᐃ * 43.5, ᐃ * 68, 44 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[ᐃⵠΔⵠⵠ], ᐃ * ⲆⵠΔᐃ), Ⲇ.translate(ᐃ * 27, ᐃ * ᐃᐃⲆᐃⵠ), ΔⵠⲆ(Ⲇ, 35 * ᐃ, ᐃ * 75, 15 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[9]), ΔⵠⲆ(Ⲇ, ᐃ * 85, 75 * ᐃ, ⵠⲆᐃΔⲆ * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠΔⵠ]), ΔⵠⲆ(Ⲇ, ᐃ * 32, ᐃ * 67, ᐃ * 5), Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆᐃᐃ]), ΔⵠⲆ(Ⲇ, 82 * ᐃ, ᐃ * 67, 5 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃᐃᐃⲆ]))
		}
		return ΔΔ
	}

	function ⵠⵠΔⵠⲆΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 264 * ᐃ;
		ΔΔ.height = 246 * ᐃ;
		Ⲇ.translate(0, ⲆⵠΔⲆⲆ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆΔᐃⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 75, ᐃ * 54);
		Ⲇ.bezierCurveTo(ᐃ * 79, 21 * ᐃ, 131 * ᐃ, ⲆⲆΔᐃⵠ * ᐃ, ᐃ * 153, 36 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 204, 27 * ᐃ, 221 * ᐃ, ᐃ * 52, 216 * ᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 241, 103 * ᐃ, 232 * ᐃ, 138 * ᐃ, ᐃ * 214, ᐃ * 147);
		Ⲇ.bezierCurveTo(223 * ᐃ, ᐃ * 184, ᐃ * 201, 200 * ᐃ, 175 * ᐃ, ᐃ * 199);
		Ⲇ.bezierCurveTo(ᐃ * 156, ᐃ * 218, 135 * ᐃ, ᐃ * 222, 114 * ᐃ, ᐃ * 203);
		Ⲇ.bezierCurveTo(ᐃ * 62, ᐃ * 213, ᐃ * 66, ᐃ * 189, 59 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, ᐃ * 164, 31 * ᐃ, 134 * ᐃ, ᐃ * 38, ᐃ * 123);
		Ⲇ.bezierCurveTo(11 * ᐃ, ᐃ * 80, 51 * ᐃ, 52 * ᐃ, 75 * ᐃ, ᐃ * 54);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, ᐃ * -ᐃᐃⲆᐃᐃ);
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 75, ᐃ * 54);
		Ⲇ.bezierCurveTo(79 * ᐃ, ᐃ * 21, ᐃ * 131, 13 * ᐃ, 153 * ᐃ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(204 * ᐃ, ᐃ * 27, 221 * ᐃ, ᐃ * 52, 216 * ᐃ, ᐃ * 83);
		Ⲇ.bezierCurveTo(241 * ᐃ, 103 * ᐃ, 232 * ᐃ, ᐃ * 138, ᐃ * 214, 147 * ᐃ);
		Ⲇ.bezierCurveTo(223 * ᐃ, ᐃ * 184, 201 * ᐃ, 200 * ᐃ, ᐃ * 175, 199 * ᐃ);
		Ⲇ.bezierCurveTo(156 * ᐃ, ᐃ * 218, 135 * ᐃ, 222 * ᐃ, ᐃ * 114, ᐃ * 203);
		Ⲇ.bezierCurveTo(62 * ᐃ, 213 * ᐃ, 66 * ᐃ, ᐃ * 189, 59 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, ᐃ * 164, ᐃ * 31, ᐃ * 134, ᐃ * 38, 123 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃᐃΔᐃΔⵠⲆ, 80 * ᐃ, ᐃ * 51, 52 * ᐃ, ᐃ * 75, ᐃ * 54);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[ᐃᐃΔⵠ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(121 * ᐃ, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, ᐃ * 80, 110 * ᐃ, 66 * ᐃ, 108 * ᐃ, ᐃ * 51);
		Ⲇ.bezierCurveTo(119 * ᐃ, ᐃ * 65, 129 * ᐃ, 85 * ᐃ, ᐃ * 135, ᐃ * 99);
		Ⲇ.bezierCurveTo(ᐃ * 142, 67 * ᐃ, 146 * ᐃ, ᐃ * 60, ᐃ * 152, ᐃ * 50);
		Ⲇ.bezierCurveTo(154 * ᐃ, 71 * ᐃ, ᐃ * 152, 85 * ᐃ, 149 * ᐃ, ᐃ * 104);
		Ⲇ.bezierCurveTo(ᐃ * 166, ᐃ * 88, ᐃ * 175, 83 * ᐃ, ᐃ * 188, ᐃ * 78);
		Ⲇ.bezierCurveTo(ᐃ * 179, ᐃ * 91, ᐃ * 170, ᐃ * 103, ᐃ * 160, 112 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 186, 107 * ᐃ, ᐃ * 191, ᐃ * 107, 204 * ᐃ, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 195, 114 * ᐃ, ᐃ * 179, 120 * ᐃ, ᐃ * 163, ᐃ * 123);
		Ⲇ.bezierCurveTo(ᐃ * 183, 130 * ᐃ, 186 * ᐃ, 135 * ᐃ, 192 * ᐃ, 140 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 179, 141 * ᐃ, ᐃ * 164, ᐃ * 139, 153 * ᐃ, 135 * ᐃ);
		Ⲇ.bezierCurveTo(158 * ᐃ, 145 * ᐃ, 163 * ᐃ, ᐃ * 159, ᐃ * 165, ᐃ * 177);
		Ⲇ.bezierCurveTo(ᐃ * 154, 166 * ᐃ, ᐃ * 145, 153 * ᐃ, ᐃ * 138, 139 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, 155 * ᐃ, ᐃ * 125, 170 * ᐃ, ᐃ * 117, ᐃ * 182);
		Ⲇ.bezierCurveTo(116 * ᐃ, 160 * ᐃ, 119 * ᐃ, 151 * ᐃ, 124 * ᐃ, ᐃ * 138);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃ * 150, 95 * ᐃ, ᐃ * 156, 82 * ᐃ, ᐃ * 159);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 140, ᐃ * 101, ᐃ * 136, ᐃ * 113, 128 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 123 * ᐃ, ᐃ * 75, 121 * ᐃ, ᐃ * 67, ᐃ * 118);
		Ⲇ.bezierCurveTo(ᐃ * 85, 112 * ᐃ, ᐃ * 94, 112 * ᐃ, ᐃ * 111, ᐃ * 113);
		Ⲇ.bezierCurveTo(ᐃ * 89, 97 * ᐃ, ᐃ * 85, 93 * ᐃ, ᐃ * 78, ᐃ * 82);
		Ⲇ.bezierCurveTo(92 * ᐃ, 85 * ᐃ, 101 * ᐃ, ᐃ * 90, ᐃ * 121, 102 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(128 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, 112 * ᐃ, 117 * ᐃ, ᐃ * 136, 140 * ᐃ, ᐃ * 130);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 126, 156 * ᐃ, ᐃ * 115, 155 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 155, 96 * ᐃ, ᐃ * 154, ᐃ * 94, ᐃ * 148, 94 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141, ᐃ * 94, ᐃ * 146, ᐃ * 104, 136 * ᐃ, ᐃ * 104);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], 4 * ᐃ);
		return ΔΔ
	}
	const ΔᐃᐃⲆ = ᐃⵠⵠ;

	function ΔⲆⲆᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 22 * ᐃ;
		ΔΔ.height = ᐃ * 22;
		Ⲇ.globalAlpha = .4;
		ΔⵠⲆ(Ⲇ, ᐃ * 11, ᐃ * ᐃΔⲆᐃⲆᐃⵠ, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.globalAlpha = .7;
		ΔⵠⲆ(Ⲇ, ᐃ * ⵠΔⲆᐃⲆᐃⵠ, ᐃ * 11, ᐃ * ⵠᐃⵠⲆᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		ΔⵠⲆ(Ⲇ, ᐃ * 11, 11 * ᐃ, ᐃ * ᐃΔⲆΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		return ΔΔ
	}

	function ⵠΔᐃⵠⵠᐃⵠᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃⵠΔⲆⵠⲆⲆ * ᐃ;
		ΔΔ.height = ᐃ * 20;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 10, ᐃ * ΔⲆⵠΔᐃ, ᐃ * ⲆⲆᐃΔⲆ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		return ΔΔ
	}

	function ⵠⲆⵠᐃΔⵠΔⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 70 * ᐃ;
		ΔΔ.height = ᐃ * 70;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 26, ᐃ * 26, ⵠⵠⵠΔᐃᐃⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 56, 36 * ᐃ, ᐃ * ⲆⲆⵠⲆⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 40, ᐃ * 50, 9 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠΔⲆ]);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		ΔⵠⲆ(Ⲇ, 26 * ᐃ, 26 * ᐃ, ᐃ * Δᐃⵠⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, 56 * ᐃ, 36 * ᐃ, ᐃ * 5);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 40, ᐃ * 50, 5 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}
	const ⵠᐃⵠᐃⲆ = ᐃΔΔΔ;
	const ΔⵠΔⵠΔⲆⵠ = ᐃᐃⵠᐃⲆᐃⵠ;

	function ᐃΔΔⲆΔᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 248;
		ΔΔ.height = ᐃ * 247;
		Ⲇ.save();
		Ⲇ.translate(183 * ᐃ, 107 * ᐃ);
		ᐃΔⵠ(Ⲇ, -ΔⲆΔⲆⵠ * ᐃ, -70.5 * ᐃ, ᐃΔⲆⵠⵠΔⵠ * ᐃ, ᐃ * 141, ᐃ * ᐃⵠⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 69.5, ᐃ * 110);
		ᐃΔⵠ(Ⲇ, ᐃ * -8.5, -71 * ᐃ, ⲆⵠⲆⵠⲆ * ᐃ, 143 * ᐃ, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 123.5, ᐃ * 181);
		ᐃΔⵠ(Ⲇ, -84.5 * ᐃ, ᐃ * -26, ᐃ * 169, ᐃ * 52, ᐃ * ⵠΔⲆⲆΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ΔΔⲆΔ], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(41 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(105 * ᐃ, 96 * ᐃ, 113 * ᐃ, ᐃ * 99, ᐃ * 134, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 106, ᐃ * 173, 100 * ᐃ, 207 * ᐃ, 105 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 210, ᐃ * 105, ᐃ * 207, 140 * ᐃ, 207 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, ᐃ * 151.5, 123.5 * ᐃ, 151.5 * ᐃ, ᐃ * 40, 149 * ᐃ);
		Ⲇ.bezierCurveTo(37 * ᐃ, 145 * ᐃ, ᐃ * 39, 95 * ᐃ, 41 * ᐃ, 96 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠᐃΔᐃ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(68 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54, ᐃ * 72.5, ᐃ * 54, ᐃ * 72.5, 40 * ᐃ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 46, 40 * ᐃ, ᐃ * 46, 53 * ᐃ, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201, 41 * ᐃ, 201 * ᐃ, ᐃ * 41, 201 * ᐃ, ᐃ * 42);
		Ⲇ.bezierCurveTo(211 * ᐃ, 40 * ᐃ, ᐃ * 208, 53 * ᐃ, ᐃ * 208, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 209, ᐃ * 91, ᐃ * 210, 96 * ᐃ, ᐃ * 194, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * 119, 97 * ᐃ, ᐃ * 119, ᐃ * 97, ᐃ * 44, ᐃ * ᐃⲆⵠᐃⲆ);
		Ⲇ.bezierCurveTo(ᐃ * 39, 99 * ᐃ, 40 * ᐃ, ᐃ * 96, ᐃ * 40, ᐃ * 80);
		Ⲇ.bezierCurveTo(54 * ᐃ, ᐃ * 77.5, 54 * ᐃ, 77.5 * ᐃ, 68 * ᐃ, 75 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃΔᐃ], ᐃ * ⵠⲆᐃⵠᐃ);
		return ΔΔ
	}

	function ᐃΔΔΔᐃᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 248 * ᐃ;
		ΔΔ.height = ᐃ * 247;
		Ⲇ.save();
		Ⲇ.translate(69.5 * ᐃ, ᐃ * 145);
		ᐃΔⵠ(Ⲇ, -8.5 * ᐃ, -63 * ᐃ, ᐃ * 17, ᐃ * 127, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 183, ᐃ * 145);
		ᐃΔⵠ(Ⲇ, ᐃ * -ΔⲆᐃᐃᐃ, ᐃ * -63, ᐃ * 16, ᐃ * 126, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(123.5 * ᐃ, 62.5 * ᐃ);
		Ⲇ.rotate(6.28);
		ᐃΔⵠ(Ⲇ, -84.5 * ᐃ, -25.5 * ᐃ, ᐃ * 169, 51 * ᐃ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ], ᐃᐃ[1], ᐃ * ⵠᐃΔΔⲆ);
		Ⲇ.save();
		Ⲇ.translate(123.5 * ᐃ, 118 * ᐃ);
		Ⲇ.rotate(6.24);
		ᐃΔⵠ(Ⲇ, ᐃ * -85.5, ᐃ * -24, 169 * ᐃ, ᐃ * 48, ᐃ * ⵠⲆⲆᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[1], ᐃⵠΔⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(122 * ᐃ, 177.5 * ᐃ);
		Ⲇ.rotate(6.32);
		ᐃΔⵠ(Ⲇ, -84 * ᐃ, ᐃ * -23.5, ᐃ * 169, 47 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠΔⲆ], ᐃᐃ[1], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(37 * ᐃ, ᐃ * 157);
		Ⲇ.bezierCurveTo(49 * ᐃ, 160 * ᐃ, 49 * ᐃ, 160 * ᐃ, ᐃ * 61, ᐃ * 163);
		Ⲇ.bezierCurveTo(49.5 * ᐃ, ᐃ * 165.5, ᐃ * 49.5, 165.5 * ᐃ, ᐃ * 38, 168 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(205 * ᐃ, ᐃ * 175);
		Ⲇ.bezierCurveTo(ᐃ * 192.5, 180 * ᐃ, ᐃ * 192.5, 180 * ᐃ, 180 * ᐃ, 185 * ᐃ);
		Ⲇ.bezierCurveTo(193 * ᐃ, 188 * ᐃ, 193 * ᐃ, ᐃ * 188, 206 * ᐃ, ᐃ * 191);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		return ΔΔ
	}

	function ᐃⵠΔΔⵠⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 191 * ᐃ;
		ΔΔ.height = 153 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ΔΔᐃ, ᐃ * Ⲇⵠᐃⵠᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 96.49996948242188, 66.79510498046875 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -79.5 * ᐃ, ᐃ * -48.5, ᐃ * 159, 97 * ᐃ, ᐃ * 22);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[0], 4 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -10);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 96.49996948242188, 66.79510498046875 * ᐃ);
		Ⲇ.rotate(ΔⲆᐃⲆ);
		ᐃΔⵠ(Ⲇ, ᐃ * -79.5, -48.5 * ᐃ, ᐃ * 159, ᐃ * 97, ᐃ * 22);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.translate(ᐃ * ⵠΔⲆΔ, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(119 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 119, 22 * ᐃ, 119 * ᐃ, ᐃ * 20, 122 * ᐃ, ᐃΔᐃⲆⵠΔⲆ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 149, 39 * ᐃ, 149 * ᐃ, 39 * ᐃ, 176 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(ᐃ * 176, 75 * ᐃ, 176 * ᐃ, ᐃ * 75, ᐃ * 175, ᐃ * 88);
		Ⲇ.bezierCurveTo(ᐃ * 174, ᐃ * 90, ᐃ * 174, 90 * ᐃ, 172 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 171, 101 * ᐃ, ᐃ * 169, 109 * ᐃ, 164 * ᐃ, ᐃ * 113);
		Ⲇ.bezierCurveTo(163 * ᐃ, 104 * ᐃ, 163 * ᐃ, 104 * ᐃ, 162 * ᐃ, ᐃ * 95);
		Ⲇ.bezierCurveTo(155 * ᐃ, 105 * ᐃ, ᐃ * 155, 105 * ᐃ, ᐃ * 147, 116 * ᐃ);
		Ⲇ.bezierCurveTo(87 * ᐃ, ᐃ * 114, ᐃ * 87, ᐃ * 114, 26 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(ᐃ * 27, 106 * ᐃ, 27 * ᐃ, 106 * ᐃ, ᐃ * 27, ᐃ * 101);
		Ⲇ.bezierCurveTo(ᐃ * 24, 104 * ᐃ, ᐃ * 24, 104 * ᐃ, 20 * ᐃ, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 17, ᐃ * 103, ᐃ * ΔⵠᐃⵠΔⵠⲆ, 86 * ᐃ, 23 * ᐃ, ᐃ * 72);
		Ⲇ.bezierCurveTo(15 * ᐃ, 74 * ᐃ, ᐃⲆⲆⵠΔⵠᐃ * ᐃ, ᐃ * 78, ΔΔᐃⲆᐃ * ᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⵠᐃⲆⲆ, ᐃ * 65, ᐃ * ⵠⲆⲆΔⵠⵠⵠ, 54 * ᐃ, 16 * ᐃ, 42 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠΔΔΔΔΔᐃ * ᐃ, 39 * ᐃ, ΔⵠᐃⵠⵠⵠⲆ * ᐃ, 39 * ᐃ, ᐃ * ⲆΔⵠⵠⲆᐃΔ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16, 33 * ᐃ, ⲆⵠⲆᐃΔⵠᐃ * ᐃ, ᐃ * 33, ᐃ * 19, ᐃ * 30);
		Ⲇ.bezierCurveTo(ᐃ * ⲆΔΔⵠΔⲆⵠ, 27 * ᐃ, ᐃⲆΔΔᐃⵠΔ * ᐃ, 27 * ᐃ, ᐃ * ⵠⲆⵠΔΔⲆⵠ, 25 * ᐃ);
		Ⲇ.bezierCurveTo(24 * ᐃ, ᐃ * 24, 31 * ᐃ, ᐃ * 21, ᐃ * 29, ᐃ * ⵠⲆᐃᐃⲆ);
		Ⲇ.bezierCurveTo(37 * ᐃ, 25 * ᐃ, ᐃ * 37, ᐃ * 25, ᐃ * 45, ᐃ * 31);
		Ⲇ.bezierCurveTo(40 * ᐃ, 23 * ᐃ, ᐃ * 40, ᐃ * 21, ᐃ * 42, 16 * ᐃ);
		Ⲇ.bezierCurveTo(74 * ᐃ, 16 * ᐃ, 74 * ᐃ, 16 * ᐃ, ᐃ * 106, ᐃ * ᐃΔΔⲆⲆΔΔ);
		Ⲇ.bezierCurveTo(ᐃ * 113, ᐃ * 21, ᐃ * 113, ᐃ * 21, ᐃ * 119, ᐃ * 26);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 4);
		return ΔΔ
	}

	function ⵠᐃⲆᐃᐃⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 191;
		ΔΔ.height = 153 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⲆⵠⲆ, ᐃ * ⲆᐃᐃᐃⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 97.49996948242188, 95.12844848632812 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -62.5, ᐃ * -41.5, ᐃ * 125, ᐃ * 83, ᐃ * ΔⵠΔⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[ΔⵠⲆΔ], 4 * ᐃ);
		Ⲇ.globalAlpha = ᐃⵠ;
		Ⲇ.translate(ΔΔⵠᐃ, -ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 97.49996948242188, ᐃ * 95.12844848632812);
		ᐃΔⵠ(Ⲇ, -62.5 * ᐃ, -41.5 * ᐃ, 125 * ᐃ, ᐃ * 83, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * 4);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(26.999969482421875 * ᐃ, 50.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(46.499969482421875 * ᐃ, 64.85067749023438 * ᐃ, ᐃ * 46.499969482421875, 64.85067749023438 * ᐃ, 65.99996948242188 * ᐃ, ᐃ * 78.85067749023438);
		Ⲇ.bezierCurveTo(ᐃ * 80.99996948242188, 87.85067749023438 * ᐃ, ᐃ * 105.99996948242188, 82.85067749023438 * ᐃ, ᐃ * 114.99996948242188, 80.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130.99996948242188, ᐃ * 69.85067749023438, 152.99996948242188 * ᐃ, ᐃ * 70.85067749023438, 166.99996948242188 * ᐃ, 67.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(156.99996948242188 * ᐃ, 52.850677490234375 * ᐃ, ᐃ * 156.99996948242188, 52.850677490234375 * ᐃ, ᐃ * 146.99996948242188, 37.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(101.49996948242188 * ᐃ, 37.350677490234375 * ᐃ, 101.49996948242188 * ᐃ, ᐃ * 37.350677490234375, ᐃ * 55.999969482421875, ᐃ * 36.850677490234375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * ΔⲆΔⲆ);
		Ⲇ.globalCompositeOperation = ⵠ[190];
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(40.999969482421875 * ᐃ, ᐃ * 59.850677490234375);
		Ⲇ.bezierCurveTo(ᐃ * 41.999969482421875, 50.850677490234375 * ᐃ, ᐃ * 47.999969482421875, ᐃ * 47.850677490234375, 56.999969482421875 * ᐃ, 49.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65.99996948242188, 41.850677490234375 * ᐃ, ᐃ * 76.99996948242188, ᐃ * 42.850677490234375, ᐃ * 90.99996948242188, 47.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(94.99996948242188 * ᐃ, ᐃ * 42.850677490234375, ᐃ * 104.99996948242188, 42.850677490234375 * ᐃ, ᐃ * 114.99996948242188, ᐃ * 47.850677490234375);
		Ⲇ.bezierCurveTo(ᐃ * 131.99996948242188, 42.850677490234375 * ᐃ, 142.99996948242188 * ᐃ, ᐃ * 48.850677490234375, ᐃ * 145.99996948242188, ᐃ * 56.850677490234375);
		Ⲇ.bezierCurveTo(160.99996948242188 * ᐃ, ᐃ * 63.850677490234375, ᐃ * 154.99996948242188, 69.85067749023438 * ᐃ, 155.99996948242188 * ᐃ, ᐃ * 70.85067749023438);
		Ⲇ.bezierCurveTo(141.99996948242188 * ᐃ, ᐃ * 71.85067749023438, 141.99996948242188 * ᐃ, 71.85067749023438 * ᐃ, 127.99996948242188 * ᐃ, ᐃ * 72.85067749023438);
		Ⲇ.bezierCurveTo(ᐃ * 110.99996948242188, ᐃ * 83.85067749023438, 107.99996948242188 * ᐃ, 82.85067749023438 * ᐃ, 90.99996948242188 * ᐃ, 85.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70.99996948242188, 83.85067749023438 * ᐃ, 64.99996948242188 * ᐃ, 79.85067749023438 * ᐃ, ᐃ * 53.999969482421875, 70.85067749023438 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔΔᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 33.999969482421875, ᐃ * 65.85067749023438);
		Ⲇ.bezierCurveTo(ᐃ * 36.999969482421875, 59.850677490234375 * ᐃ, 34.999969482421875 * ᐃ, ᐃ * 60.850677490234375, ᐃ * 39.999969482421875, 59.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47.999969482421875, ᐃ * 61.850677490234375, 62.999969482421875 * ᐃ, ᐃ * 76.85067749023438, ᐃ * 74.99996948242188, ᐃ * 79.85067749023438);
		Ⲇ.bezierCurveTo(ᐃ * 93.99996948242188, ᐃ * 85.85067749023438, 111.99996948242188 * ᐃ, ᐃ * 83.85067749023438, ᐃ * 124.99996948242188, 70.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 129.99996948242188, 67.85067749023438 * ᐃ, ᐃ * 145.99996948242188, 65.85067749023438 * ᐃ, ᐃ * 159.99996948242188, 67.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159.99996948242188, ᐃ * 71.85067749023438, 159.99996948242188 * ᐃ, ᐃ * 71.85067749023438, 159.99996948242188 * ᐃ, 75.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146.99996948242188, ᐃ * 72.85067749023438, ᐃ * 144.99996948242188, ᐃ * 75.85067749023438, ᐃ * 143.99996948242188, 82.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(144.99996948242188 * ᐃ, ᐃ * 86.85067749023438, ᐃ * 140.99996948242188, 90.85067749023438 * ᐃ, ᐃ * 137.99996948242188, 86.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139.99996948242188, ᐃ * 72.85067749023438, ᐃ * 135.99996948242188, 72.85067749023438 * ᐃ, 133.99996948242188 * ᐃ, 82.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 127.99996948242188, 88.85067749023438 * ᐃ, ᐃ * 124.99996948242188, ᐃ * 70.85067749023438, 116.99996948242188 * ᐃ, 86.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(110.99996948242188 * ᐃ, 91.85067749023438 * ᐃ, 96.99996948242188 * ᐃ, ᐃ * 81.85067749023438, ᐃ * 89.99996948242188, ᐃ * 90.85067749023438);
		Ⲇ.bezierCurveTo(85.99996948242188 * ᐃ, ᐃ * 92.85067749023438, ᐃ * 81.99996948242188, 95.85067749023438 * ᐃ, 76.99996948242188 * ᐃ, 86.85067749023438 * ᐃ);
		Ⲇ.bezierCurveTo(67.99996948242188 * ᐃ, ᐃ * 93.85067749023438, 67.99996948242188 * ᐃ, 91.85067749023438 * ᐃ, ᐃ * 60.999969482421875, ᐃ * 79.85067749023438);
		Ⲇ.bezierCurveTo(53.999969482421875 * ᐃ, 71.85067749023438 * ᐃ, 52.999969482421875 * ᐃ, ᐃ * 72.85067749023438, 46.999969482421875 * ᐃ, ᐃ * 77.85067749023438);
		Ⲇ.bezierCurveTo(ᐃ * 41.999969482421875, ᐃ * 78.85067749023438, 42.999969482421875 * ᐃ, 69.85067749023438 * ᐃ, 33.999969482421875 * ᐃ, 65.85067749023438 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[Ⲇᐃᐃᐃⵠ], ΔⲆΔⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, 68 * ᐃ, 111.29513549804688 * ᐃ, 15 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔⵠ], ᐃᐃ[8], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 123 * ᐃ, ᐃ * 111.29510498046875, 15 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ΔᐃᐃⵠΔ], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 63, 106 * ᐃ, ΔⲆⲆΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		ΔⵠⲆ(Ⲇ, ᐃ * 118, 106 * ᐃ, ᐃⵠⲆⲆΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		return ΔΔ
	}

	function ᐃⵠᐃⵠΔΔⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 248 * ᐃ;
		ΔΔ.height = ᐃ * 247;
		Ⲇ.save();
		Ⲇ.translate(182 * ᐃ, 120 * ᐃ);
		ᐃΔⵠ(Ⲇ, -8 * ᐃ, ᐃ * -67, ⵠΔⵠᐃⵠ * ᐃ, 134 * ᐃ, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 68.5, 127.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -8.5 * ᐃ, -70.5 * ᐃ, ᐃ * ᐃⲆᐃⲆΔ, ᐃ * 141, 1 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(123.5 * ᐃ, ᐃ * 68);
		ᐃΔⵠ(Ⲇ, ᐃ * -82.5, ᐃ * -24, 165 * ᐃ, 48 * ᐃ, 4 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆᐃ], ᐃᐃ[ᐃⵠ], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(123 * ᐃ, 179.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -83, ᐃ * -24.5, ᐃ * 166, ᐃ * 49, ᐃ * 4);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ᐃ * ⲆΔᐃⵠᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 123.5, 123.5 * ᐃ);
		Ⲇ.rotate(6.24);
		ᐃΔⵠ(Ⲇ, -82.5 * ᐃ, -24.5 * ᐃ, ᐃ * 165, 49 * ᐃ, 4 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ], ᐃᐃ[ᐃⵠⵠ], ⵠⵠⲆΔⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(204 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(149 * ᐃ, 121.5 * ᐃ, ᐃ * 96, 130 * ᐃ, 94 * ᐃ, ᐃ * 131);
		Ⲇ.bezierCurveTo(149.5 * ᐃ, 127.5 * ᐃ, 149.5 * ᐃ, 127.5 * ᐃ, ᐃ * 205, ᐃ * 124);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		return ΔΔ
	}
	const ᐃⲆᐃΔⵠ = ⵠΔᐃⲆ;

	function ⲆΔⵠΔⵠⲆⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 100 * ᐃ;
		var ΔᐃⲆ = 100 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ΔᐃⲆ / ᐃⵠΔⲆ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⲆⲆΔᐃΔⵠⲆ = 5 * ᐃ;
		var ⵠΔᐃΔΔΔΔ = 28 * ᐃ;
		var ᐃⵠⵠΔᐃᐃⵠ = ⲆⲆΔᐃΔⵠⲆ / 2;
		var ⵠΔΔᐃⵠΔⲆ = ⵠΔᐃΔΔΔΔ / ⵠⵠⲆᐃ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃΔΔΔ; ᐃⲆ++) {
			ᐃΔⵠ(Ⲇ, -ᐃⵠⵠΔᐃᐃⵠ, -ⵠΔΔᐃⵠΔⲆ, ⲆⲆΔᐃΔⵠⲆ, ⵠΔᐃΔΔΔΔ, ᐃ * ᐃᐃΔⵠ);
			Ⲇ.rotate(Math.PI / 4);
			Δⵠ(Ⲇ, ᐃᐃ)
		}
		Ⲇ.arc(ⲆⵠⲆ, ⵠᐃⲆᐃ, 10 * ᐃ, Ⲇᐃⵠᐃ, ᐃⲆⲆΔ * Math.PI);
		Δⵠ(Ⲇ, ᐃᐃ);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		ΔⵠⲆ(Ⲇ, 0, 0, 4 * ᐃ);
		Ⲇ.fill();
		return ΔΔ
	}

	function ΔⲆⲆⲆᐃⲆᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 185 * ᐃ;
		ΔΔ.height = 240 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ᐃ * ΔⲆⵠΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 44, 137 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 87, 68 * ᐃ, 66 * ᐃ, ᐃ * 92, ᐃ * 67);
		Ⲇ.bezierCurveTo(115 * ᐃ, ᐃ * 64, 129 * ᐃ, 97 * ᐃ, 137 * ᐃ, 136 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 53, ᐃ * 181);
		Ⲇ.bezierCurveTo(30 * ᐃ, 164 * ᐃ, ΔᐃⵠᐃⲆ * ᐃ, 150 * ᐃ, ᐃ * ᐃΔᐃⵠΔ, ᐃ * 136);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 121, 38 * ᐃ, 132 * ᐃ, 48 * ᐃ, 150 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 63, 208 * ᐃ);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 224, 86 * ᐃ, 228 * ᐃ, ᐃ * 93, ᐃ * 228);
		Ⲇ.bezierCurveTo(104 * ᐃ, 229 * ᐃ, ᐃ * 116, ᐃ * 219, 122 * ᐃ, 205 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146, 125 * ᐃ, ᐃ * 156, ᐃ * 126, ᐃ * 173, 137 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 151, ᐃ * 143, 174 * ᐃ, ᐃ * 131, ᐃ * 183);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39 * ᐃ, ᐃ * 140);
		Ⲇ.bezierCurveTo(75 * ᐃ, 126 * ᐃ, ᐃ * 113, ᐃ * 127, 143 * ᐃ, 137 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, 186 * ᐃ, ᐃ * 130, ᐃ * 202, 113 * ᐃ, 214 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 228, 56 * ᐃ, 219 * ᐃ, ᐃ * 48, 173 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 40, 148 * ᐃ, ᐃ * 43, 145 * ᐃ, 39 * ᐃ, ᐃ * 140);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(Ⲇᐃⵠᐃ, -ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, 137 * ᐃ);
		Ⲇ.bezierCurveTo(60 * ᐃ, 87 * ᐃ, 68 * ᐃ, ᐃ * 66, ᐃ * 92, ᐃ * 67);
		Ⲇ.bezierCurveTo(ᐃ * 115, 64 * ᐃ, ᐃ * 129, ᐃ * 97, ᐃ * 137, 136 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(53 * ᐃ, 181 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30, 164 * ᐃ, ᐃ * 19, 150 * ᐃ, 11 * ᐃ, ᐃ * 136);
		Ⲇ.bezierCurveTo(28 * ᐃ, 121 * ᐃ, ᐃ * 38, 132 * ᐃ, 48 * ᐃ, 150 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠᐃᐃⵠ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(63 * ᐃ, 208 * ᐃ);
		Ⲇ.bezierCurveTo(75 * ᐃ, 224 * ᐃ, 86 * ᐃ, 228 * ᐃ, ᐃ * 93, ᐃ * 228);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 229, 116 * ᐃ, ᐃ * 219, ᐃ * 122, 205 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], ᐃ * ᐃⵠⲆⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 125, 156 * ᐃ, ᐃ * 126, 173 * ᐃ, ᐃ * 137);
		Ⲇ.bezierCurveTo(167 * ᐃ, 151 * ᐃ, 143 * ᐃ, 174 * ᐃ, 131 * ᐃ, 183 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39 * ᐃ, ᐃ * 140);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 126, ᐃ * 113, ᐃ * 127, ᐃ * 143, ᐃ * 137);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 186, 130 * ᐃ, 202 * ᐃ, ᐃ * 113, ᐃ * 214);
		Ⲇ.bezierCurveTo(ᐃ * 85, 228 * ᐃ, ᐃ * 56, ᐃ * 219, ᐃ * 48, ᐃ * 173);
		Ⲇ.bezierCurveTo(40 * ᐃ, 148 * ᐃ, ᐃ * 43, 145 * ᐃ, 39 * ᐃ, ᐃ * 140);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆⵠᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(59 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(71 * ᐃ, ᐃ * 68, ᐃ * 81, ᐃ * 68, 94 * ᐃ, 67 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 105, ᐃ * 66, ᐃ * 119, ᐃ * 75, 123 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 91, ᐃ * 101, ᐃ * 94, 94 * ᐃ, 97 * ᐃ);
		Ⲇ.bezierCurveTo(76 * ᐃ, 92 * ᐃ, 73 * ᐃ, ᐃ * 93, 60 * ᐃ, ᐃ * 99);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[ⵠΔⲆΔ], ᐃ * ⵠΔΔᐃ);
		if (ⵠᐃⲆᐃ === ᐃⲆ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 47, 149 * ᐃ);
			Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 140, ᐃ * 48, ᐃ * 130, 59 * ᐃ, 127 * ᐃ);
			Ⲇ.bezierCurveTo(77 * ᐃ, ᐃ * 126, 90 * ᐃ, ᐃ * 131, 131 * ᐃ, 127 * ᐃ);
			Ⲇ.bezierCurveTo(143 * ᐃ, ᐃ * 130, ᐃ * 144, 143 * ᐃ, 132 * ᐃ, 154 * ᐃ);
			Ⲇ.bezierCurveTo(90 * ᐃ, ᐃ * 152, ᐃ * 90, ᐃ * 152, ᐃ * 48, 150 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 40, ᐃ * 139);
			Ⲇ.bezierCurveTo(48 * ᐃ, 113 * ᐃ, ᐃ * 76, 119 * ᐃ, ᐃ * 91, ᐃ * 126);
			Ⲇ.bezierCurveTo(ᐃ * 117, ᐃ * 113, ᐃ * 135, ᐃ * 117, ᐃ * 144, ᐃ * 134);
			Ⲇ.bezierCurveTo(ᐃ * 144, ᐃ * 138, ᐃ * 144, 138 * ᐃ, ᐃ * 144, 142 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * 124, 108 * ᐃ, ᐃ * 124, ᐃ * 91, 136 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 124, 50 * ᐃ, ᐃ * 137, 42 * ᐃ, ᐃ * 148);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆⵠΔ], 4 * ᐃ)
		} else {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 41, 139 * ᐃ);
			Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 117, 69 * ᐃ, ᐃ * 118, ᐃ * 92, 127 * ᐃ);
			Ⲇ.bezierCurveTo(124 * ᐃ, ᐃ * 111, 136 * ᐃ, 121 * ᐃ, 143 * ᐃ, 136 * ᐃ);
			Ⲇ.bezierCurveTo(142 * ᐃ, 144 * ᐃ, ᐃ * 142, 144 * ᐃ, 141 * ᐃ, ᐃ * 152);
			Ⲇ.bezierCurveTo(128 * ᐃ, 131 * ᐃ, ᐃ * 113, ᐃ * 138, 92 * ᐃ, ᐃ * 145);
			Ⲇ.bezierCurveTo(ᐃ * 57, 133 * ᐃ, ᐃ * 57, 147 * ᐃ, 44 * ᐃ, ᐃ * 154);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ], ᐃᐃ[ⵠⲆⵠᐃ], 4 * ᐃ)
		}
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(90 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(99 * ᐃ, ᐃ * 82, 98 * ᐃ, 58 * ᐃ, 99 * ᐃ, 40 * ᐃ);
		Ⲇ.bezierCurveTo(90 * ᐃ, 38 * ᐃ, 89 * ᐃ, ᐃ * 34, ᐃ * 92, 17 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 5, ᐃ * 83, ᐃ * 16, 78 * ᐃ, ᐃ * 29);
		Ⲇ.bezierCurveTo(72 * ᐃ, ᐃ * 59, ᐃ * 87, 81 * ᐃ, ᐃ * 89, 87 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * ᐃⵠᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 90, ᐃ * 86);
		Ⲇ.bezierCurveTo(95 * ᐃ, 74 * ᐃ, 95 * ᐃ, 62 * ᐃ, 95 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(84 * ᐃ, ᐃ * 37, 86 * ᐃ, ᐃ * 34, 89 * ᐃ, 16 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 75, 29 * ᐃ, 80 * ᐃ, ᐃ * 58, ᐃ * 90, ᐃ * 85);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[3], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 92, 117 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 98, ᐃ * 87, 93 * ᐃ, 78 * ᐃ, ᐃ * 85, 76 * ᐃ);
		Ⲇ.bezierCurveTo(85.5 * ᐃ, ᐃ * 79.5, ᐃ * 85.5, ᐃ * 79.5, 86 * ᐃ, ᐃ * 83);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 85.5, 84 * ᐃ, ᐃ * 85.5, ᐃ * 82, ᐃ * 88);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 93, 89 * ᐃ, ᐃ * ᐃⵠⲆⵠⲆ, 92 * ᐃ, 117 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[3], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 92, 175 * ᐃ);
		Ⲇ.bezierCurveTo(95 * ᐃ, 135 * ᐃ, 98 * ᐃ, 125 * ᐃ, 109 * ᐃ, 121 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, 114 * ᐃ, ᐃ * 104, ᐃ * 114, 102 * ᐃ, 113 * ᐃ);
		Ⲇ.bezierCurveTo(103 * ᐃ, 106 * ᐃ, 104 * ᐃ, 103 * ᐃ, 107 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(74 * ᐃ, 108 * ᐃ, ᐃ * 86, 157 * ᐃ, ᐃ * 92, 174 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠΔⵠⲆ], ⲆⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(48 * ᐃ, ᐃ * 169);
		Ⲇ.bezierCurveTo(42 * ᐃ, 187 * ᐃ, ᐃ * 50, ᐃ * 193, 59 * ᐃ, 198 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ⵠΔⲆΔ], Δᐃⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 136, 171 * ᐃ);
		Ⲇ.bezierCurveTo(139 * ᐃ, ᐃ * 186, ᐃ * 138, 191 * ᐃ, ᐃ * 124, ᐃ * 199);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ᐃᐃ[ⵠⲆΔΔ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 63 * ᐃ, 180 * ᐃ, 15.231546211727817 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, 121 * ᐃ, ᐃ * 181, 15.652475842498529 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 58, ᐃ * 175, ᐃ * 5.656854249492381);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ]);
		ΔⵠⲆ(Ⲇ, 116 * ᐃ, 175 * ᐃ, ᐃ * 5.656854249492381);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠΔ]);
		return ΔΔ
	}

	function ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ, ᐃⲆⵠ, Δᐃᐃ, ⲆⲆΔⵠ, ΔⵠΔᐃ) {
		ΔⵠΔᐃ === undefined && (ΔⵠΔᐃ = ⲆⲆⲆ);
		for (var ΔᐃⲆᐃ = -ᐃⵠ == ⲆⲆΔⵠ ? ⲆⵠⲆ : ⲆⲆΔⵠ; ΔᐃⲆᐃ >= ΔⵠΔᐃ; ΔᐃⲆᐃ--) {
			for (var ᐃⲆ = 0; 200 > ᐃⲆ; ᐃⲆ++) {
				for (var ΔΔΔ = 0; 200 > ΔΔΔ; ΔΔΔ++) {
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ΔΔΔ][ᐃⲆ];
					if (!ⲆᐃⵠⲆ || !ⲆᐃⵠⲆ[ᐃⲆⵠ]) continue;
					if (ⲆⲆΔⵠ == -1) var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ];
					else var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ][ΔᐃⲆᐃ];
					for (var ⲆⲆⲆᐃ = ⲆΔᐃ; ⵠⲆⵠ && ⲆⲆⲆᐃ < ⵠⲆⵠ.length; ⲆⲆⲆᐃ++) {
						var ⵠⲆᐃⵠⲆ = ⵠⲆⵠ[ⲆⲆⲆᐃ];
						Ⲇ.fillStyle = ᐃᐃ;
						ΔⵠⲆ(Ⲇ, .0095 * (ᐃ * ⵠⲆᐃⵠⲆ.x), .0095 * (ᐃ * ⵠⲆᐃⵠⲆ.y), Δᐃᐃ * ᐃ);
						Ⲇ.fill()
					}
				}
			}
		}
	}

	function ᐃΔΔᐃⲆⵠΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 191;
		ΔΔ.height = ᐃ * 153;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 96.49996948242188, ᐃ * 66.79510498046875);
		ᐃΔⵠ(Ⲇ, -79.5 * ᐃ, ᐃ * -48.5, ᐃ * 159, 97 * ᐃ, ᐃ * 22);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⵠΔ], ᐃ * 4);
		Ⲇ.translate(2 * ᐃ, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 119, 28 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 119, 22 * ᐃ, ᐃ * 119, ᐃ * 20, ᐃ * 122, ᐃ * ΔⲆⲆⲆᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 149, 39 * ᐃ, 149 * ᐃ, ᐃ * 39, 176 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(ᐃ * 176, 75 * ᐃ, ᐃ * 176, ᐃ * 75, ᐃ * 175, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 174, 90 * ᐃ, ᐃ * 174, ᐃ * 90, ᐃ * 172, ᐃ * 93);
		Ⲇ.bezierCurveTo(171 * ᐃ, ᐃ * 101, ᐃ * 169, 109 * ᐃ, ᐃ * 164, 113 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 163, 104 * ᐃ, 163 * ᐃ, 104 * ᐃ, ᐃ * 162, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * 155, ᐃ * 105, 155 * ᐃ, 105 * ᐃ, ᐃ * 147, 116 * ᐃ);
		Ⲇ.bezierCurveTo(87 * ᐃ, ᐃ * 114, 87 * ᐃ, 114 * ᐃ, 26 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 106, 27 * ᐃ, 106 * ᐃ, ᐃ * 27, 101 * ᐃ);
		Ⲇ.bezierCurveTo(24 * ᐃ, ᐃ * 104, 24 * ᐃ, ᐃ * 104, ᐃ * ⵠΔⲆⵠ, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 17, 103 * ᐃ, ᐃ * 20, ᐃ * 86, 23 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * Ⲇⵠⵠⵠᐃⵠᐃ, ᐃ * 74, ΔⲆΔⵠⵠΔⲆ * ᐃ, ᐃ * 78, ᐃ * ⵠⲆᐃᐃⵠᐃᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 12, ᐃ * 65, ᐃ * 12, 54 * ᐃ, ᐃ * 16, 42 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14, 39 * ᐃ, 14 * ᐃ, 39 * ᐃ, ⵠⲆᐃᐃⵠᐃᐃ * ᐃ, ᐃ * 36);
		Ⲇ.bezierCurveTo(ᐃ * 16, ᐃ * 33, ⲆⲆⵠᐃⲆ * ᐃ, ᐃ * 33, ᐃ * ΔᐃⵠΔΔ, ᐃ * 30);
		Ⲇ.bezierCurveTo(ᐃ * 18, 27 * ᐃ, 18 * ᐃ, 27 * ᐃ, ⲆⲆᐃⲆⲆ * ᐃ, ᐃ * 25);
		Ⲇ.bezierCurveTo(24 * ᐃ, ᐃ * 24, ᐃ * 31, ᐃ * 21, 29 * ᐃ, ᐃ * ΔⲆᐃⵠΔ);
		Ⲇ.bezierCurveTo(ᐃ * 37, 25 * ᐃ, 37 * ᐃ, 25 * ᐃ, 45 * ᐃ, ᐃ * 31);
		Ⲇ.bezierCurveTo(40 * ᐃ, 23 * ᐃ, 40 * ᐃ, 21 * ᐃ, ᐃ * 42, ⲆⲆᐃΔΔ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, ⲆⲆⵠᐃⲆ * ᐃ, ᐃ * 74, ᐃΔⲆⵠⵠΔⵠ * ᐃ, ᐃ * 106, ⵠΔⵠᐃⵠ * ᐃ);
		Ⲇ.bezierCurveTo(113 * ᐃ, ᐃ * 21, 113 * ᐃ, ᐃ * 21, 119 * ᐃ, ᐃ * 26);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⲆⵠ], ᐃ * ᐃΔᐃΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 97.49996948242188, ᐃ * 95.12844848632812);
		ᐃΔⵠ(Ⲇ, -62.5 * ᐃ, ᐃ * -41.5, 125 * ᐃ, 83 * ᐃ, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[ΔⲆᐃⲆ], ᐃ * 4);
		return ΔΔ
	}

	function ⵠⲆⵠΔⲆⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 125 * ᐃ;
		var ΔᐃⲆ = ᐃ * 95;
		var w2 = ᐃᐃⲆ / ⲆᐃⲆᐃ;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / 2;
		var ⲆⵠᐃΔ = ᐃᐃⵠᐃΔ * ᐃ;
		var ΔⵠᐃΔ = ᐃ * ⲆΔΔΔᐃ;
		var ᐃᐃΔⲆⲆᐃΔ = ᐃ * 112;
		var ⲆⵠΔⵠⵠᐃΔ = ᐃ * 82;
		var ⲆᐃⲆⵠⲆⲆⲆ = ᐃᐃΔⲆⲆᐃΔ / ⵠⲆⵠᐃ;
		var ⲆⲆΔⲆΔΔΔ = ⲆⵠΔⵠⵠᐃΔ / ⵠΔⵠᐃ;
		var ᐃⲆⲆ = ᐃ * ⵠΔΔᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(w2 - ᐃ * 4, ⵠⵠᐃⵠⵠ + ᐃ * 4);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃᐃΔᐃ;
		ᐃΔⵠ(Ⲇ, -ⲆᐃⲆⵠⲆⲆⲆ, -ⲆⲆΔⲆΔΔΔ, ᐃᐃΔⲆⲆᐃΔ, ⲆⵠΔⵠⵠᐃΔ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.globalAlpha = ΔᐃⵠΔ;
		Ⲇ.translate(ⵠᐃⲆᐃ, -ΔⵠᐃΔ);
		ᐃΔⵠ(Ⲇ, -ⲆᐃⲆⵠⲆⲆⲆ, -ⲆⲆΔⲆΔΔΔ, ᐃᐃΔⲆⲆᐃΔ, ⲆⵠΔⵠⵠᐃΔ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃⲆⲆ);
		var ᐃᐃⲆ = 55 * ᐃ;
		var ΔᐃⲆ = 45 * ᐃ;
		var ⲆⵠᐃΔ = 5;
		Ⲇ.translate(ᐃ * -40, ᐃ * -30);
		ᐃΔⵠ(Ⲇ, 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		var ⵠⵠ = ⲆΔⵠΔⵠⲆⵠ(.7 * ᐃ, ᐃᐃ[ⵠᐃᐃᐃ]);
		Ⲇ.drawImage(ⵠⵠ, 45 * ᐃ, ᐃ * -25);
		var ⵠⵠ = ⲆΔⵠΔⵠⲆⵠ(.7 * ᐃ, ᐃᐃ[3]);
		Ⲇ.drawImage(ⵠⵠ, 45 * ᐃ, ᐃ * 15);
		var ⵠⵠ = ⲆΔⵠΔⵠⲆⵠ(1.2 * ᐃ, ᐃᐃ[ⵠΔᐃⲆ]);
		Ⲇ.drawImage(ⵠⵠ, 28 * ᐃ, -30 * ᐃ);
		var ᐃᐃⲆ = ᐃ * ΔⵠΔⵠΔⲆⵠ;
		var ΔᐃⲆ = 70 * ᐃ;
		var ⲆⵠᐃΔ = ⵠᐃᐃΔᐃ * ᐃ;
		Ⲇ.translate(78 * ᐃ, -5 * ᐃ);
		ᐃΔⵠ(Ⲇ, 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		var ᐃᐃⲆ = ΔⲆᐃᐃΔ * ᐃ;
		var ΔᐃⲆ = 50 * ᐃ;
		var ⲆⵠᐃΔ = 3 * ᐃ;
		Ⲇ.translate(-ⵠⵠΔⵠ * ᐃ, ᐃ * ᐃⵠΔⲆⵠⲆⲆ);
		Ⲇ.rotate(Math.PI / 5);
		Ⲇ.globalAlpha = .6;
		ᐃΔⵠ(Ⲇ, 0, ΔΔᐃ, ᐃᐃⲆ, ΔᐃⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.translate(-20 * ᐃ, ᐃ * 29);
		Ⲇ.rotate(Math.PI / ⵠΔⲆⲆΔ);
		Ⲇ.globalAlpha = .6;
		Ⲇ.beginPath();
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(0, 0);
		Ⲇ.lineTo(Δⵠⵠ, ᐃ * 30);
		Ⲇ.lineTo(ᐃ * 30, 30 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, null, ᐃᐃ[ΔⲆⲆⲆⵠ], ᐃ * ⵠⵠΔⵠΔ);
		return ΔΔ
	}

	function ⵠⲆⵠⵠⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 40;
		var ΔᐃⲆ = 40 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ᐃᐃΔ = ᐃ * ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ᐃ * ΔᐃⲆ / 2;
		var Δᐃᐃ = ᐃ * 15;
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 0, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		var Δᐃᐃ = ᐃ * 5;
		var ᐃᐃΔ = ⵠΔⵠᐃ * ᐃ;
		var ᐃⲆᐃ = 1 * ᐃ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 0, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ]);
		Ⲇ.restore();
		return ΔΔ
	}

	function ⵠⲆⵠᐃⲆᐃΔᐃᐃ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 200;
		var ΔᐃⲆ = ᐃ * 200;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⵠⵠ = ⲆΔᐃᐃΔ(.35, false, [ⵠ[246], "#0b8052", ⵠ[164]]);
		Ⲇ.drawImage(ⵠⵠ, ᐃΔᐃᐃⵠ, 10);
		var ⵠⵠ = ⵠⲆΔᐃⵠ(.9, false, [ⵠ[58], ⵠ[455]]);
		Ⲇ.drawImage(ⵠⵠ, 21, 20);
		var ⵠⵠ = ⵠⲆΔᐃⵠ(.9, false, [ⵠ[58], ⵠ[455]]);
		Ⲇ.drawImage(ⵠⵠ, 38, 28);
		var ⵠⵠ = ⵠⲆΔᐃⵠ(.9, ⵠⲆⲆⵠΔ, [ⵠ[58], ⵠ[455]]);
		Ⲇ.drawImage(ⵠⵠ, ᐃⲆⲆΔⵠ, 37);
		var ⵠⵠ = ⵠⲆΔᐃⵠ(.9, false, [ⵠ[58], ⵠ[455]]);
		Ⲇ.drawImage(ⵠⵠ, 32, 45);
		return ΔΔ
	}

	function ΔⵠᐃⲆⲆΔᐃᐃⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 185 * ᐃ;
		ΔΔ.height = 240 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, 205 * ᐃ);
		Ⲇ.bezierCurveTo(74 * ᐃ, 227 * ᐃ, 83 * ᐃ, 230 * ᐃ, 92 * ᐃ, 230 * ᐃ);
		Ⲇ.bezierCurveTo(101 * ᐃ, ᐃ * 232, ᐃ * 119, ᐃ * 219, ᐃ * 122, ᐃ * 205);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(46 * ᐃ, ᐃ * 151);
		Ⲇ.bezierCurveTo(34 * ᐃ, ᐃ * 126, ᐃ * 21, 130 * ᐃ, ᐃ * ⲆᐃΔⵠⵠ, 139 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, 168 * ᐃ, ᐃ * 48, ᐃ * 180, ᐃ * 53, ᐃ * 184);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(122 * ᐃ, 165 * ᐃ);
		Ⲇ.bezierCurveTo(143 * ᐃ, 140 * ᐃ, 154 * ᐃ, 123 * ᐃ, ᐃ * 172, ᐃ * 139);
		Ⲇ.bezierCurveTo(169 * ᐃ, 149 * ᐃ, 147 * ᐃ, ᐃ * 173, 126 * ᐃ, 192 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(47 * ᐃ, ᐃ * 129);
		Ⲇ.bezierCurveTo(55 * ᐃ, ᐃ * 90, 71 * ᐃ, 66 * ᐃ, 93 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(116 * ᐃ, 70 * ᐃ, ᐃ * 122, 88 * ᐃ, 136 * ᐃ, 127 * ᐃ);
		Ⲇ.bezierCurveTo(143 * ᐃ, ᐃ * 137, 144 * ᐃ, 137 * ᐃ, 144 * ᐃ, 142 * ᐃ);
		Ⲇ.bezierCurveTo(138 * ᐃ, ᐃ * 199, 128 * ᐃ, 206 * ᐃ, 108 * ᐃ, ᐃ * 219);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 228, ᐃ * 65, ᐃ * 224, ᐃ * 50, 191 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41, ᐃ * 161, ᐃ * 41, ᐃ * 157, 39 * ᐃ, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 40, ᐃ * 140, ᐃ * 42, ᐃ * 137, ᐃ * 47, 129 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 47, 133 * ᐃ);
		Ⲇ.bezierCurveTo(65 * ᐃ, ᐃ * 143, ᐃ * 74, ᐃ * 162, 70 * ᐃ, 186 * ᐃ);
		Ⲇ.bezierCurveTo(71 * ᐃ, ᐃ * 188.5, ᐃ * 71, ᐃ * 188.5, 72 * ᐃ, ᐃ * 191);
		Ⲇ.bezierCurveTo(ᐃ * 81, 185.5 * ᐃ, 81 * ᐃ, 185.5 * ᐃ, 90 * ᐃ, ᐃ * 180);
		Ⲇ.bezierCurveTo(99 * ᐃ, ᐃ * 185, ᐃ * 99, ᐃ * 185, ᐃ * 108, 190 * ᐃ);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 184.5, ᐃ * 110.5, 184.5 * ᐃ, 113 * ᐃ, 179 * ᐃ);
		Ⲇ.bezierCurveTo(110 * ᐃ, ᐃ * 156, ᐃ * 121, 156 * ᐃ, 142 * ᐃ, ᐃ * 141);
		Ⲇ.bezierCurveTo(ᐃ * 137.5, ᐃ * 133, 137.5 * ᐃ, 133 * ᐃ, 133 * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 78, 112 * ᐃ, ᐃ * 70, ᐃ * 91, ᐃ * 71);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 69, ᐃ * 59, 107 * ᐃ, 48 * ᐃ, ᐃ * 132);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, 86 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 101, ᐃ * 79, ᐃ * 99, 56 * ᐃ, ᐃ * 100, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 90, 34 * ᐃ, ᐃ * 90, 27 * ᐃ, 93 * ᐃ, ᐃ * ⲆⲆΔᐃᐃ);
		Ⲇ.bezierCurveTo(96 * ᐃ, 0 * ᐃ, 85 * ᐃ, ⲆⲆΔᐃⵠ * ᐃ, 82 * ᐃ, 26 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 43 * ᐃ, ᐃ * 89, 74 * ᐃ, ᐃ * 93, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔⲆΔ], ⵠΔⲆᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(94 * ᐃ, 86 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120, ᐃ * 88, ᐃ * 132, 109 * ᐃ, ᐃ * 122, ᐃ * 128);
		Ⲇ.bezierCurveTo(ᐃ * 118, ᐃ * 139, 101 * ᐃ, ᐃ * 146, 90 * ᐃ, 143 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 57, ᐃ * 141, 49 * ᐃ, ᐃ * 109, 68 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 85, ᐃ * 90, 86 * ᐃ, 95 * ᐃ, 86 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 91, ᐃ * 178);
		Ⲇ.bezierCurveTo(78 * ᐃ, 136 * ᐃ, ᐃ * 81, ᐃ * 88, ᐃ * 93, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 101, 84 * ᐃ, 94 * ᐃ, 97 * ᐃ, 94 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 91, 112 * ᐃ, ᐃ * 92, 117 * ᐃ, ᐃ * 94, 121 * ᐃ);
		Ⲇ.bezierCurveTo(98 * ᐃ, ᐃ * 126, ᐃ * 102, 128 * ᐃ, 97 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 92, 140 * ᐃ, ᐃ * 93, ᐃ * 160, 91 * ᐃ, 179 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠᐃ], ᐃᐃ[ⵠⵠⲆ], ⲆⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(20 * ᐃ, ᐃ * 151);
		Ⲇ.bezierCurveTo(ᐃ * 22, ᐃ * 147, 22 * ᐃ, ᐃ * 147, ᐃ * 24, ᐃ * 143);
		Ⲇ.bezierCurveTo(27 * ᐃ, 144.5 * ᐃ, 27 * ᐃ, 144.5 * ᐃ, ᐃ * 30, 146 * ᐃ);
		Ⲇ.bezierCurveTo(31 * ᐃ, 143 * ᐃ, 31 * ᐃ, ᐃ * 143, ᐃ * 32, 140 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 35, 140.5 * ᐃ, ᐃ * 35, ᐃ * 140.5, ᐃ * 38, ᐃ * 141);
		Ⲇ.bezierCurveTo(31 * ᐃ, 132 * ᐃ, ᐃ * 29, ᐃ * 131, 22 * ᐃ, 132 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14, 135 * ᐃ, ᐃ * 13, ᐃ * 135, ⵠⵠⲆⲆⵠΔΔ * ᐃ, ᐃ * 138);
		Ⲇ.bezierCurveTo(15.5 * ᐃ, ᐃ * 144.5, 15.5 * ᐃ, ᐃ * 144.5, ᐃ * ΔⲆᐃⲆⲆΔⵠ, 151 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		ΔⵠⲆ(Ⲇ, ᐃ * 61, ᐃ * 183, ᐃ * 16.15549442140351);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		ΔⵠⲆ(Ⲇ, 121 * ᐃ, ᐃ * 184, ᐃ * 14.866068747318506);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠΔ]);
		ΔⵠⲆ(Ⲇ, 57 * ᐃ, ᐃ * 178, ᐃ * 5.656854249492381);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 116, 177 * ᐃ, 5.830951894845301 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(162 * ᐃ, ᐃ * 152);
		Ⲇ.bezierCurveTo(161.5 * ᐃ, ᐃ * 148, ᐃ * 161.5, 148 * ᐃ, ᐃ * 161, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 157.5, ᐃ * 145, 157.5 * ᐃ, ᐃ * 145, ᐃ * 154, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 153.5, 143 * ᐃ, 153.5 * ᐃ, 143 * ᐃ, 153 * ᐃ, ᐃ * 140);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 140.5, ᐃ * 149, 140.5 * ᐃ, 145 * ᐃ, ᐃ * 141);
		Ⲇ.bezierCurveTo(150 * ᐃ, ᐃ * 132, 161 * ᐃ, ᐃ * 131, ᐃ * 170, ᐃ * 138);
		Ⲇ.bezierCurveTo(ᐃ * 173, 141 * ᐃ, 165 * ᐃ, ᐃ * 150, 162 * ᐃ, 150 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃᐃᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(106 * ᐃ, 110 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 104, 98 * ᐃ, 112 * ᐃ, 91 * ᐃ, ᐃ * 118, ᐃ * 101);
		Ⲇ.bezierCurveTo(122 * ᐃ, 115 * ᐃ, 121 * ᐃ, ᐃ * 119, 117 * ᐃ, 124 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 129 * ᐃ, ᐃ * 107, 124 * ᐃ, 106 * ᐃ, 112 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 64, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 66, ᐃ * 97, 72 * ᐃ, 89 * ᐃ, 76 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 106 * ᐃ, ᐃ * 79, 118 * ᐃ, ᐃ * 72, ᐃ * 126);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * 130, ᐃ * 63, 117 * ᐃ, ᐃ * 64, 108 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		return ΔΔ
	}

	function ⵠΔⲆⲆⵠⵠⲆ(ᐃ, ᐃᐃ, ᐃⲆⵠ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 32 * ᐃ;
		var ΔᐃⲆ = 32 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / ᐃΔⵠᐃ;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⲆⲆΔᐃΔⵠⲆ = ΔⲆⲆΔ * ᐃ;
		var ⵠΔᐃΔΔΔΔ = ᐃ * 28;
		var ᐃⵠⵠΔᐃᐃⵠ = ⲆⲆΔᐃΔⵠⲆ / ⵠⵠⲆᐃ;
		var ⵠΔΔᐃⵠΔⲆ = ⵠΔᐃΔΔΔΔ / ᐃⲆⵠᐃ;
		Ⲇ.translate(ᐃ * ΔⵠⲆΔ, ᐃ * 0);
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		if (ᐃⲆⵠ == 1) {
			ΔⵠⲆ(Ⲇ, 0, 0, ᐃ * ⲆΔΔⵠⲆ, 0);
			Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[2], 3 * ᐃ);
			for (var ᐃⲆ = ΔΔⲆᐃ; ⲆⵠΔΔⲆ > ᐃⲆ; ᐃⲆ++) {
				ᐃΔⵠ(Ⲇ, -ᐃⵠⵠΔᐃᐃⵠ, -ⵠΔΔᐃⵠΔⲆ, ⲆⲆΔᐃΔⵠⲆ, ⵠΔᐃΔΔΔΔ, ᐃ * ⵠⲆⵠᐃ);
				Ⲇ.rotate(Math.PI / ᐃΔⲆΔ);
				Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[ᐃⵠΔⲆ], ᐃ * ⲆⵠΔΔⲆ)
			}
		}
		ΔⵠⲆ(Ⲇ, 0, ⲆⵠⲆ, 10 * ᐃ, ΔⵠⲆΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 1.5 * ᐃ);
		for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < ⵠᐃⵠᐃⲆ; ᐃⲆ++) {
			ᐃΔⵠ(Ⲇ, -ᐃⵠⵠΔᐃᐃⵠ, -ⵠΔΔᐃⵠΔⲆ, ⲆⲆΔᐃΔⵠⲆ, ⵠΔᐃΔΔΔΔ, ᐃ * 2);
			Ⲇ.rotate(Math.PI / 4);
			Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 1.5 * ᐃ)
		}
		ΔⵠⲆ(Ⲇ, Δⵠⵠ, ΔΔⲆᐃ, ⵠΔᐃΔⲆ * ᐃ, ᐃⵠΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, 0, 0, ᐃ * ⵠⲆᐃᐃ, 0);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ᐃ * 1.5);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		ΔⵠⲆ(Ⲇ, Ⲇᐃⵠᐃ, 0, ᐃ * 4, 0);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃΔⲆⵠ], ⵠΔⲆΔ * ᐃ);
		Ⲇ.globalCompositeOperation = ⵠ[190];
		ΔⵠⲆ(Ⲇ, ⲆΔᐃ, 0, ᐃ * 4, 0);
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[1], ᐃ * 2);
		return ΔΔ
	}

	function ΔⵠⲆⲆⲆⵠΔⲆΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 200;
		ΔΔ.height = ᐃ * 200;
		Ⲇ.translate(ⵠΔⵠⲆⵠ * ᐃ, ᐃ * 12);
		Ⲇ.fillStyle = ᐃᐃ[0];
		Ⲇ.fillRect(-ⵠⲆⵠᐃ, -3, ΔΔ.width, ΔΔ.height);
		Ⲇ.fillStyle = ᐃᐃ[ᐃⵠⵠΔⵠ];
		Ⲇ.fillRect(0, 0, ΔΔ.width, ΔΔ.height);
		Ⲇ.fillStyle = ᐃᐃ[17];
		Ⲇ.fillRect(Δⵠⵠ, ΔΔⲆᐃ, ΔΔ.width, ΔΔ.height / 2.1);
		Ⲇ.fillStyle = ᐃᐃ[26];
		Ⲇ.fillRect(ΔΔ.width / 1.77, ΔΔ.height / 2.1, ΔΔ.width / 2.1, ΔΔ.height / 2.1);
		Ⲇ.fillStyle = ᐃᐃ[28];
		Ⲇ.fillRect(ΔΔ.width / 1.77, ΔΔ.height / 2.1, 5, ΔΔ.height / 2.1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[17], "so", ᐃⵠⵠⵠ, 6, Ⲇᐃⵠᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[28], ⵠ[398], 6, ⵠⲆΔΔ, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[28], ⵠ[398], ᐃⲆᐃᐃΔ, ᐃΔⲆⵠ, ᐃΔⲆⵠ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[28], ⵠ[398], 6, ΔΔⵠᐃ, ΔΔᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[5], ⵠ[153], 2, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[5], ⵠ[153], 2, ᐃᐃΔᐃ, 1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[5], ⵠ[153], ΔⵠΔΔ, ᐃΔⵠⵠ, ⲆⵠⲆ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[5], "t", ᐃⲆⵠᐃ, 5, 4);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[6], "t", ΔΔⲆⲆᐃ, Ⲇᐃⵠⵠ, ᐃⲆⵠᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⵠⲆⲆⵠⲆ], "t", ᐃⵠᐃᐃ, ⵠᐃΔᐃ, ⵠᐃⲆᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ΔᐃᐃⵠΔ], "b", 3, 3, ⵠᐃⵠΔ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[9], "b", 4, ᐃⵠ, ⲆⵠⲆ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⵠΔⵠᐃ], "s", ⲆⲆⵠΔ, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⵠⲆⵠⵠ], "s", ⵠⵠⲆⵠΔ, ΔⲆᐃ, ΔΔⲆΔ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⵠΔⲆᐃΔ], "s", ⲆⵠⵠⲆΔ, ⵠᐃⲆᐃ, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⲆΔⵠᐃⲆ], "g", ⵠⵠⲆᐃ, 2, ⵠⲆⵠᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[11], "g", ᐃⲆᐃΔⵠ, ΔᐃᐃⲆ, ⵠⵠⲆΔ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⲆⵠⲆᐃᐃ], "g", 4, ᐃⵠΔ, ΔⵠⲆΔ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ⲆⲆΔᐃ], "p", ⵠΔΔᐃ, -1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[25], "dg", ΔⲆΔⵠ, ΔᐃΔⵠⵠⲆᐃ, ⲆⲆⲆ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[27], ⵠ[370], 2, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[27], ⵠ[370], 2, ΔΔⲆΔ, ΔᐃⵠΔ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[27], ⵠ[370], 2, 0, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[ᐃᐃᐃΔΔ], "f", ᐃΔⵠᐃ, ᐃⲆⵠᐃ, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[20], "f", ᐃⵠⲆⲆ, 1, 1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[21], "f", ⵠΔΔᐃ, ΔΔᐃ, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[22], ⵠ[71], ⵠΔⵠᐃ, ⵠᐃᐃⵠ, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[22], ⵠ[71], 3, 1, ΔⲆᐃ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[22], ⵠ[71], ᐃΔⲆΔ, ᐃⵠΔ, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], ⵠ[352], ⵠⲆⲆΔ, ΔᐃⵠΔ, 1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], ⵠ[352], ᐃΔⲆΔ, 0, ⲆⵠⲆ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], ⵠ[352], ᐃΔⵠᐃ, ᐃᐃⲆΔ, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], "d", ⲆⵠⵠΔ, ΔᐃⵠΔ, 1);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], "d", 4, ΔⲆⵠ, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[23], "d", ⵠᐃᐃⵠ, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[24], "a", ⵠⵠⲆᐃ, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[24], "a", ⵠᐃᐃᐃ, 1, ᐃⵠⵠ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[24], "a", ᐃⵠᐃᐃ, 0, 0);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[30], "l", ᐃΔΔΔ, 2, 2);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[30], "l", ΔⲆΔⲆ, 1, ᐃⵠ);
		ⲆᐃΔⲆᐃ(Ⲇ, ᐃ, ᐃᐃ[30], "l", 4, 0, ΔΔⲆᐃ);
		ΔⵠⲆ(Ⲇ, ΔΔⵠᐃ, ΔΔᐃ, 0);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		Ⲇ.translate(-ⲆⲆᐃΔⲆ * ᐃ, ᐃ * -ᐃΔΔΔ);
		Ⲇ.rect(ΔⲆⵠΔΔ * ᐃ, ΔⵠⲆΔ, ᐃ * ΔΔ.width, ΔΔ.height * ᐃ, ᐃᐃⵠᐃΔ * ᐃ);
		Ⲇ.lineWidth = ᐃ * Ⲇⵠᐃᐃᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[16];
		Ⲇ.stroke();
		return ΔΔ
	}

	function ⲆΔΔⵠⵠΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 185;
		ΔΔ.height = 240 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 44, ᐃ * 137);
		Ⲇ.bezierCurveTo(60 * ᐃ, ᐃ * 87, ᐃ * 68, ᐃ * 66, ᐃ * 92, 67 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, ᐃ * 64, ᐃ * 129, ᐃ * 97, 137 * ᐃ, 136 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(53 * ᐃ, 181 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 164, 19 * ᐃ, 150 * ᐃ, ᐃ * 11, ᐃ * 136);
		Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 121, ᐃ * 38, 132 * ᐃ, ᐃ * 48, ᐃ * 150);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 63, ᐃ * 208);
		Ⲇ.bezierCurveTo(75 * ᐃ, 224 * ᐃ, 86 * ᐃ, ᐃ * 228, ᐃ * 93, ᐃ * 228);
		Ⲇ.bezierCurveTo(104 * ᐃ, 229 * ᐃ, 116 * ᐃ, 219 * ᐃ, ᐃ * 122, 205 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146, 125 * ᐃ, ᐃ * 156, 126 * ᐃ, ᐃ * 173, ᐃ * 137);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 151, 143 * ᐃ, ᐃ * 174, 131 * ᐃ, 183 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 39, ᐃ * 140);
		Ⲇ.bezierCurveTo(ᐃ * 75, 126 * ᐃ, ᐃ * 113, ᐃ * 127, 143 * ᐃ, ᐃ * 137);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 186, ᐃ * 130, ᐃ * 202, ᐃ * 113, 214 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, 228 * ᐃ, ᐃ * 56, 219 * ᐃ, ᐃ * 48, 173 * ᐃ);
		Ⲇ.bezierCurveTo(40 * ᐃ, 148 * ᐃ, ᐃ * 43, 145 * ᐃ, ᐃ * 39, 140 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 90, 95 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, 82 * ᐃ, 98 * ᐃ, 58 * ᐃ, ᐃ * 99, 40 * ᐃ);
		Ⲇ.bezierCurveTo(90 * ᐃ, ᐃ * 38, ᐃ * 89, 34 * ᐃ, 92 * ᐃ, ᐃ * ᐃΔⲆⲆᐃⵠⵠ);
		Ⲇ.bezierCurveTo(92 * ᐃ, ᐃ * ΔⲆⲆⲆⵠ, 83 * ᐃ, 16 * ᐃ, ᐃ * 78, ᐃ * 29);
		Ⲇ.bezierCurveTo(ᐃ * 72, 59 * ᐃ, 87 * ᐃ, ᐃ * 81, ᐃ * 89, ᐃ * 87);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(90 * ᐃ, 86 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95, 74 * ᐃ, ᐃ * 95, ᐃ * 62, ᐃ * 95, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 37, ᐃ * 86, 34 * ᐃ, ᐃ * 89, ᐃ * 16);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 29, 80 * ᐃ, ᐃ * 58, ᐃ * 90, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 92, 117 * ᐃ);
		Ⲇ.bezierCurveTo(98 * ᐃ, ᐃ * 87, 93 * ᐃ, ᐃ * 78, ᐃ * 85, 76 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 85.5, 79.5 * ᐃ, 85.5 * ᐃ, ᐃ * 79.5, ᐃ * 86, 83 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 84, 85.5 * ᐃ, ᐃ * 84, 85.5 * ᐃ, 82 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(90 * ᐃ, 93 * ᐃ, ᐃ * 89, ᐃ * ⲆᐃᐃΔᐃⲆᐃ, ᐃ * 92, ᐃ * 117);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 92, ᐃ * 175);
		Ⲇ.bezierCurveTo(95 * ᐃ, 135 * ᐃ, 98 * ᐃ, ᐃ * 125, 109 * ᐃ, ᐃ * 121);
		Ⲇ.bezierCurveTo(106 * ᐃ, 114 * ᐃ, ᐃ * 104, ᐃ * 114, 102 * ᐃ, 113 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 103, ᐃ * 106, 104 * ᐃ, ᐃ * 103, ᐃ * 107, ᐃ * 96);
		Ⲇ.bezierCurveTo(74 * ᐃ, 108 * ᐃ, 86 * ᐃ, ᐃ * 157, ᐃ * 92, 174 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		return ΔΔ
	}
	const ⵠΔⲆⵠᐃ = ᐃⵠⲆᐃⵠ;

	function ⵠΔⵠΔⲆᐃⲆ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 400;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, 147.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -96.5, ᐃ * -21.5, 193 * ᐃ, ᐃ * 193, ᐃ * ⲆⵠⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[ΔΔⲆΔ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, ᐃ * 190.5);
		ᐃΔⵠ(Ⲇ, ᐃ * 96.5, ᐃ * -21.5, ᐃ * -193, 43 * ᐃ, ᐃ * ΔΔᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ], ᐃᐃ[ΔΔⲆΔ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, ᐃ * 233.5);
		ᐃΔⵠ(Ⲇ, -96.5 * ᐃ, ᐃ * -20.5, 193 * ᐃ, ᐃ * 41, ᐃ * 0);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[1], ᐃ * ⲆᐃᐃⲆΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, ᐃ * 275);
		ᐃΔⵠ(Ⲇ, 96.5 * ᐃ, ᐃ * -21, ᐃ * -193, 42 * ᐃ, ᐃ * ΔⵠⲆΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⵠⲆ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 201, ᐃ * 212);
		Ⲇ.rotate(8.64);
		ᐃΔⵠ(Ⲇ, -116 * ᐃ, ᐃ * -22, 232 * ᐃ, ᐃ * 44, ⲆⵠⲆⵠᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⵠⲆΔ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(203.5 * ᐃ, ᐃ * 121.5);
		ᐃΔⵠ(Ⲇ, -115.5 * ᐃ, -20.5 * ᐃ, 231 * ᐃ, 41 * ᐃ, ⵠΔᐃΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[ⲆΔᐃⲆ], ⲆΔⵠⵠⲆᐃΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(203.5 * ᐃ, 299 * ᐃ);
		ᐃΔⵠ(Ⲇ, -115.5 * ᐃ, ᐃ * -ᐃⵠᐃΔ, 231 * ᐃ, ᐃ * 40, ⵠΔᐃΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ], ᐃᐃ[1], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(298.5 * ᐃ, 210 * ᐃ);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, ᐃ * -109, 41 * ᐃ, 218 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[1], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(108.5 * ᐃ, ᐃ * 210);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, ᐃ * -109, 41 * ᐃ, ᐃ * 218, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ΔΔⲆΔ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 204, ᐃ * 121.5);
		ᐃΔⵠ(Ⲇ, -92 * ᐃ, -9.5 * ᐃ, ᐃ * 184, ᐃ * 19, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ], ᐃᐃ[ⲆⵠⵠⲆ], ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(197 * ᐃ, 299 * ᐃ);
		ᐃΔⵠ(Ⲇ, 85 * ᐃ, -ΔⲆᐃᐃΔ * ᐃ, -170 * ᐃ, 18 * ᐃ, ᐃ * ᐃⵠⲆᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⵠⵠ], ᐃ * ΔⲆⵠΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 94, 317 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110.5, ᐃ * 299.5, 110.5 * ᐃ, 299.5 * ᐃ, 127 * ᐃ, 282 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[1], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 279, 142 * ᐃ);
		Ⲇ.bezierCurveTo(296.5 * ᐃ, 125.5 * ᐃ, ᐃ * 296.5, ᐃ * 125.5, 314 * ᐃ, 109 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ᐃᐃ[ᐃⵠ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 93, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 110.5, 124 * ᐃ, ᐃ * 110.5, 124 * ᐃ, ᐃ * 128, 142 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃⵠΔ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 281, 282 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 296, ᐃ * 297.5, 296 * ᐃ, 297.5 * ᐃ, 311 * ᐃ, ᐃ * 313);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[ᐃᐃΔᐃ], ᐃ * 12);
		if (ᐃⲆ == 0) {
			Ⲇ.scale(2, ΔⵠΔΔ);
			Ⲇ.translate(ᐃ * -ΔΔⲆᐃⵠ, ᐃ * 55);
			Ⲇ.rotate(-.5);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(60 * ᐃ, 47 * ᐃ);
			Ⲇ.bezierCurveTo(81 * ᐃ, 46 * ᐃ, ᐃ * 85, 47 * ᐃ, ᐃ * 83, ᐃ * 63);
			Ⲇ.bezierCurveTo(83 * ᐃ, 72 * ᐃ, ᐃ * 83, ᐃ * 75, ᐃ * 72, 73 * ᐃ);
			Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 80, 69 * ᐃ, ᐃ * 82, ᐃ * 66, 73 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 62, ᐃ * 81, ᐃ * 61, ᐃ * 82, 59 * ᐃ, 73 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 54, 81 * ᐃ, ᐃ * 55, ᐃ * 81, 52 * ᐃ, ᐃ * 74);
			Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 76, 41 * ᐃ, ᐃ * 74, ᐃ * 40, ᐃ * 66);
			Ⲇ.bezierCurveTo(38 * ᐃ, ᐃ * 45, ᐃ * 39, ᐃ * 49, ᐃ * 59, 47 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆⲆⲆⵠᐃ], ᐃⵠⲆⲆΔ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 68, 54 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 75, 54 * ᐃ, ᐃ * 77, ᐃ * 62, ᐃ * 71, ᐃ * 64);
			Ⲇ.bezierCurveTo(ᐃ * 62, 65 * ᐃ, 63 * ᐃ, ᐃ * 54, 68 * ᐃ, 54 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(50 * ᐃ, 55 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 57, ᐃ * 55, 58 * ᐃ, 65 * ᐃ, 52 * ᐃ, ᐃ * 65);
			Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * 66, ᐃ * 44, ᐃ * 54, ᐃ * 50, 55 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3])
		} else ᐃⲆ == 1 && (Ⲇ.scale(.6, .6), Ⲇ.translate(ᐃ * 185, 165 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(108 * ᐃ, 56 * ᐃ), Ⲇ.bezierCurveTo(136 * ᐃ, ᐃ * 58, ᐃ * 203, 69 * ᐃ, ᐃ * 234, 75 * ᐃ), Ⲇ.bezierCurveTo(246 * ᐃ, ᐃ * 77, ᐃ * 247, ᐃ * 78, ᐃ * 245, ᐃ * 90), Ⲇ.bezierCurveTo(ᐃ * 238, ᐃ * 143, ᐃ * 228, 197 * ᐃ, ᐃ * 214, 259 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 212, ᐃ * 267, ᐃ * 209, ᐃ * 270, 189 * ᐃ, 268 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 264, ᐃ * 106, ᐃ * 260, ᐃ * 75, ᐃ * 253), Ⲇ.bezierCurveTo(60 * ᐃ, ᐃ * 250, ᐃ * 64, 250 * ᐃ, ᐃ * 66, ᐃ * 221), Ⲇ.bezierCurveTo(ᐃ * 71, ᐃ * 168, 87 * ᐃ, 95 * ᐃ, ᐃ * 98, ᐃ * 67), Ⲇ.bezierCurveTo(101 * ᐃ, 57 * ᐃ, 103 * ᐃ, 56 * ᐃ, 106 * ᐃ, 56 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆⵠⵠⲆΔ], 20 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(112 * ᐃ, ᐃ * 72), Ⲇ.bezierCurveTo(ᐃ * 132, 73 * ᐃ, 227 * ᐃ, 85 * ᐃ, 226 * ᐃ, 91 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 231, ᐃ * 89, ᐃ * 217, ᐃ * 196, 200 * ᐃ, ᐃ * 250), Ⲇ.bezierCurveTo(ᐃ * 196, ᐃ * 254, 175 * ᐃ, 249 * ᐃ, 166 * ᐃ, 249 * ᐃ), Ⲇ.bezierCurveTo(91 * ᐃ, ᐃ * 241, ᐃ * 82, 236 * ᐃ, ᐃ * 83, ᐃ * 232), Ⲇ.bezierCurveTo(90 * ᐃ, ᐃ * 144, ᐃ * 108, ᐃ * 71, 111 * ᐃ, 72 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[0], 13 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 132, 117 * ᐃ), Ⲇ.bezierCurveTo(171 * ᐃ, ᐃ * 86, ᐃ * 191, ᐃ * 101, ᐃ * 188, 134 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 185, 154 * ᐃ, ᐃ * 170, 158 * ᐃ, ᐃ * 153, 158 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 143, 172 * ᐃ, 146 * ᐃ, ᐃ * 180, ᐃ * 147, 193 * ᐃ), Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[ᐃⵠΔ], ⵠΔΔΔ * ᐃ), ΔⵠⲆ(Ⲇ, 142 * ᐃ, ᐃ * 221, 16.1245154965971 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]));
		return ΔΔ
	}

	function ΔΔⲆᐃΔⲆᐃⲆⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 238;
		ΔΔ.height = ᐃ * 230;
		Ⲇ.translate(-93 * ᐃ, -110 * ᐃ);
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, 256.75 * ᐃ, ᐃ * 75);
		Δⵠ(Ⲇ, ᐃᐃ);
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, ᐃ * 175.75, ᐃ * 25);
		Δⵠ(Ⲇ, ᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(156.5 * ᐃ, 137.75 * ᐃ);
		Ⲇ.bezierCurveTo(170.5 * ᐃ, 173.75 * ᐃ, ᐃ * 195.5, 177.75 * ᐃ, ᐃ * 209.5, 177.75 * ᐃ);
		Ⲇ.lineWidth = ᐃⵠⲆⲆᐃⵠⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(217.5 * ᐃ, ᐃ * 178.75);
		Ⲇ.bezierCurveTo(251.5 * ᐃ, 177.75 * ᐃ, 263.5 * ᐃ, 153.75 * ᐃ, 270.5 * ᐃ, ᐃ * 140.75);
		Ⲇ.lineWidth = ᐃ * ΔⲆᐃΔⵠ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.5 * ᐃ, ᐃ * 124.75);
		Ⲇ.bezierCurveTo(153.5 * ᐃ, 185.75 * ᐃ, ᐃ * 198.5, 185.75 * ᐃ, ᐃ * 213.5, ᐃ * 185.75);
		Ⲇ.lineWidth = ᐃ * ⲆⵠⲆⵠⲆ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, 183.75 * ᐃ);
		Ⲇ.bezierCurveTo(265.5 * ᐃ, 192.75 * ᐃ, ᐃ * 293.5, 141.75 * ᐃ, ᐃ * 297.5, 124.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107.5 * ᐃ, 213.75 * ᐃ);
		Ⲇ.bezierCurveTo(151.5 * ᐃ, 190.75 * ᐃ, ᐃ * 198.5, ᐃ * 184.75, 210.5 * ᐃ, ᐃ * 184.75);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(212.5 * ᐃ, 187.75 * ᐃ);
		Ⲇ.bezierCurveTo(258.5 * ᐃ, ᐃ * 182.75, ᐃ * 286.5, ᐃ * 194.75, 314.5 * ᐃ, 206.75 * ᐃ);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102.5, ᐃ * 258.75);
		Ⲇ.bezierCurveTo(ᐃ * 142.5, 200.75 * ᐃ, ᐃ * 193.5, 194.75 * ᐃ, 211.5 * ᐃ, 185.75 * ᐃ);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 214.5, ᐃ * 192.75);
		Ⲇ.bezierCurveTo(ᐃ * 276.5, 194.75 * ᐃ, 306.5 * ᐃ, ᐃ * 233.75, 316.5 * ᐃ, 246.75 * ᐃ);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 219.5, ᐃ * 158.75);
		Ⲇ.bezierCurveTo(226.5 * ᐃ, 159.75 * ᐃ, 227.5 * ᐃ, 147.75 * ᐃ, 219.5 * ᐃ, ᐃ * 145.75);
		Ⲇ.closePath();
		Ⲇ.lineWidth = ᐃ * ⵠΔᐃΔᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(210.5 * ᐃ, 160.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203.5, ᐃ * 159.75, ᐃ * 199.5, 146.75 * ᐃ, ᐃ * 210.5, 145.75 * ᐃ);
		Ⲇ.closePath();
		Ⲇ.lineWidth = 10 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ;
		Ⲇ.stroke();
		return ΔΔ
	}

	function ᐃⲆΔᐃᐃᐃⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 238 * ᐃ;
		ΔΔ.height = 230 * ᐃ;
		Ⲇ.translate(-93 * ᐃ, -110 * ᐃ + ᐃ * 5);
		Ⲇ.globalAlpha = .3;
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, 256.75 * ᐃ, ᐃ * 75);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, 175.75 * ᐃ, 25 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 156.5, 137.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 170.5, ᐃ * 173.75, ᐃ * 195.5, 177.75 * ᐃ, ᐃ * 209.5, ᐃ * 177.75);
		Ⲇ.lineWidth = ΔΔᐃⲆⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[5];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(217.5 * ᐃ, ᐃ * 178.75);
		Ⲇ.bezierCurveTo(ᐃ * 251.5, 177.75 * ᐃ, ᐃ * 263.5, ᐃ * 153.75, ᐃ * 270.5, 140.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * ΔⲆⲆⵠⵠⲆⵠ;
		Ⲇ.strokeStyle = ᐃᐃ[5];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.5 * ᐃ, 124.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 153.5, ᐃ * 185.75, ᐃ * 198.5, ᐃ * 185.75, ᐃ * 213.5, ᐃ * 185.75);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ[5];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 214.5, ᐃ * 183.75);
		Ⲇ.bezierCurveTo(ᐃ * 265.5, ᐃ * 192.75, 293.5 * ᐃ, 141.75 * ᐃ, ᐃ * 297.5, ᐃ * 124.75);
		Ⲇ.lineWidth = ⲆⲆᐃⵠⵠⵠⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[5];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107.5 * ᐃ, 213.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151.5, ᐃ * 190.75, 198.5 * ᐃ, 184.75 * ᐃ, ᐃ * 210.5, ᐃ * 184.75);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ[ⵠⲆⲆᐃⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(212.5 * ᐃ, 187.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 258.5, 182.75 * ᐃ, ᐃ * 286.5, 194.75 * ᐃ, ᐃ * 314.5, ᐃ * 206.75);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ[ⵠⲆⲆᐃⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102.5 * ᐃ, 258.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 142.5, ᐃ * 200.75, 193.5 * ᐃ, 194.75 * ᐃ, ᐃ * 211.5, ᐃ * 185.75);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[5];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 214.5, ᐃ * 192.75);
		Ⲇ.bezierCurveTo(276.5 * ᐃ, ᐃ * 194.75, ᐃ * 306.5, 233.75 * ᐃ, 316.5 * ᐃ, ᐃ * 246.75);
		Ⲇ.lineWidth = ᐃⵠⲆⲆᐃⵠⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[ⲆᐃΔΔΔ];
		Ⲇ.stroke();
		Ⲇ.translate(0, -ΔⲆⲆⲆⵠ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, ᐃ * 213.5, 256.75 * ᐃ, ᐃ * 75);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, 175.75 * ᐃ, ᐃ * 25);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 219.5, 158.75 * ᐃ);
		Ⲇ.bezierCurveTo(226.5 * ᐃ, 159.75 * ᐃ, ᐃ * 227.5, ᐃ * 147.75, 219.5 * ᐃ, 145.75 * ᐃ);
		Ⲇ.closePath();
		Ⲇ.lineWidth = ᐃ * ᐃΔᐃᐃⵠ;
		Ⲇ.strokeStyle = ᐃᐃ[ᐃⲆᐃΔⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(210.5 * ᐃ, ᐃ * 160.75);
		Ⲇ.bezierCurveTo(ᐃ * 203.5, ᐃ * 159.75, 199.5 * ᐃ, ᐃ * 146.75, ᐃ * 210.5, 145.75 * ᐃ);
		Ⲇ.closePath();
		Ⲇ.lineWidth = ᐃⵠⲆᐃⵠ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(219.5 * ᐃ, ᐃ * 158.75);
		Ⲇ.bezierCurveTo(ᐃ * 226.5, 159.75 * ᐃ, 227.5 * ᐃ, 147.75 * ᐃ, 219.5 * ᐃ, ᐃ * 145.75);
		Ⲇ.closePath();
		Ⲇ.fillStyle = ᐃᐃ[ᐃⵠΔ];
		Ⲇ.fill();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 210.5, ᐃ * 160.75);
		Ⲇ.bezierCurveTo(203.5 * ᐃ, 159.75 * ᐃ, 199.5 * ᐃ, 146.75 * ᐃ, 210.5 * ᐃ, ᐃ * 145.75);
		Ⲇ.closePath();
		Ⲇ.fillStyle = ᐃᐃ[ΔΔⵠᐃ];
		Ⲇ.fill();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 156.5, ᐃ * 137.75);
		Ⲇ.bezierCurveTo(ᐃ * 170.5, 173.75 * ᐃ, ᐃ * 195.5, 177.75 * ᐃ, 209.5 * ᐃ, 177.75 * ᐃ);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 217.5, ᐃ * 178.75);
		Ⲇ.bezierCurveTo(ᐃ * 251.5, 177.75 * ᐃ, 263.5 * ᐃ, ᐃ * 153.75, ᐃ * 270.5, 140.75 * ᐃ);
		Ⲇ.lineWidth = ΔⲆⲆⵠⵠⲆⵠ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.5 * ᐃ, ᐃ * 124.75);
		Ⲇ.bezierCurveTo(ᐃ * 153.5, ᐃ * 185.75, ᐃ * 198.5, 185.75 * ᐃ, 213.5 * ᐃ, ᐃ * 185.75);
		Ⲇ.lineWidth = ⲆⲆᐃⲆⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 214.5, 183.75 * ᐃ);
		Ⲇ.bezierCurveTo(265.5 * ᐃ, 192.75 * ᐃ, ᐃ * 293.5, 141.75 * ᐃ, ᐃ * 297.5, ᐃ * 124.75);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ[ⵠⲆⵠⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 107.5, 213.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151.5, 190.75 * ᐃ, ᐃ * 198.5, ᐃ * 184.75, ᐃ * 210.5, 184.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * ᐃⵠⲆⲆᐃⵠⲆ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(212.5 * ᐃ, ᐃ * 187.75);
		Ⲇ.bezierCurveTo(ᐃ * 258.5, ᐃ * 182.75, ᐃ * 286.5, 194.75 * ᐃ, 314.5 * ᐃ, 206.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * 17;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102.5, ᐃ * 258.75);
		Ⲇ.bezierCurveTo(ᐃ * 142.5, ᐃ * 200.75, 193.5 * ᐃ, ᐃ * 194.75, ᐃ * 211.5, 185.75 * ᐃ);
		Ⲇ.lineWidth = 17 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[3];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, 192.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 276.5, 194.75 * ᐃ, 306.5 * ᐃ, 233.75 * ᐃ, 316.5 * ᐃ, 246.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * ΔⲆᐃΔⵠ;
		Ⲇ.strokeStyle = ᐃᐃ[Δᐃᐃᐃ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 156.5, 137.75 * ᐃ);
		Ⲇ.bezierCurveTo(170.5 * ᐃ, 173.75 * ᐃ, ᐃ * 195.5, ᐃ * 177.75, 209.5 * ᐃ, 177.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * 8;
		Ⲇ.strokeStyle = ᐃᐃ[ᐃΔⵠⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(217.5 * ᐃ, 178.75 * ᐃ);
		Ⲇ.bezierCurveTo(251.5 * ᐃ, 177.75 * ᐃ, ᐃ * 263.5, 153.75 * ᐃ, 270.5 * ᐃ, 140.75 * ᐃ);
		Ⲇ.lineWidth = 8 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[0];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.5 * ᐃ, ᐃ * 124.75);
		Ⲇ.bezierCurveTo(153.5 * ᐃ, 185.75 * ᐃ, ᐃ * 198.5, ᐃ * 185.75, ᐃ * 213.5, ᐃ * 185.75);
		Ⲇ.lineWidth = ⵠᐃᐃΔⲆ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[Δⵠⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, ᐃ * 183.75);
		Ⲇ.bezierCurveTo(265.5 * ᐃ, 192.75 * ᐃ, ᐃ * 293.5, 141.75 * ᐃ, ᐃ * 297.5, 124.75 * ᐃ);
		Ⲇ.lineWidth = ᐃ * ΔⲆᐃⵠᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[0];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 107.5, 213.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151.5, 190.75 * ᐃ, 198.5 * ᐃ, ᐃ * 184.75, 210.5 * ᐃ, 184.75 * ᐃ);
		Ⲇ.lineWidth = ΔⵠΔᐃⵠᐃΔ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[Δⵠⵠ];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(212.5 * ᐃ, 187.75 * ᐃ);
		Ⲇ.bezierCurveTo(258.5 * ᐃ, 182.75 * ᐃ, ᐃ * 286.5, ᐃ * 194.75, ᐃ * 314.5, 206.75 * ᐃ);
		Ⲇ.lineWidth = 8 * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[0];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102.5 * ᐃ, 258.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 142.5, 200.75 * ᐃ, 193.5 * ᐃ, 194.75 * ᐃ, ᐃ * 211.5, ᐃ * 185.75);
		Ⲇ.lineWidth = ᐃ * 8;
		Ⲇ.strokeStyle = ᐃᐃ[0];
		Ⲇ.stroke();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, 192.75 * ᐃ);
		Ⲇ.bezierCurveTo(276.5 * ᐃ, 194.75 * ᐃ, ᐃ * 306.5, ᐃ * 233.75, ᐃ * 316.5, ᐃ * 246.75);
		Ⲇ.lineWidth = ΔⲆᐃᐃᐃ * ᐃ;
		Ⲇ.strokeStyle = ᐃᐃ[ᐃΔⵠⵠ];
		Ⲇ.stroke();
		ΔⵠⲆ(Ⲇ, ᐃ * 213.5, 256.75 * ᐃ, 70 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		ΔⵠⲆ(Ⲇ, 213.5 * ᐃ, ᐃ * 175.75, 20 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ᐃ * 222, 166 * ᐃ, ᐃ * 5);
		Ⲇ.fillStyle = ᐃᐃ[2];
		Ⲇ.fill();
		ΔⵠⲆ(Ⲇ, ᐃ * 205, 166 * ᐃ, ᐃᐃⲆᐃⵠ * ᐃ);
		Ⲇ.fillStyle = ᐃᐃ[ⵠⲆΔΔ];
		Ⲇ.fill();
		ΔⵠⲆ(Ⲇ, ᐃ * 206.2, ᐃ * 167, 2.5 * ᐃ);
		Ⲇ.fillStyle = ᐃᐃ[ⲆⲆⲆⵠᐃ];
		Ⲇ.fill();
		ΔⵠⲆ(Ⲇ, 223.2 * ᐃ, 167 * ᐃ, ᐃ * 2.5);
		Ⲇ.fillStyle = ᐃᐃ[ⵠΔⲆᐃΔ];
		Ⲇ.fill();
		Ⲇ.save();
		Ⲇ.translate(213.5 * ᐃ, 293.75 * ᐃ);
		Ⲇ.rotate(.76);
		ᐃΔⵠ(Ⲇ, ᐃ * -22, -21 * ᐃ, 44 * ᐃ, 42 * ᐃ, ᐃ * 6);
		Ⲇ.restore();
		Ⲇ.fillStyle = ᐃᐃ[ΔΔⲆΔ];
		Ⲇ.fill();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 212.5, ᐃ * 258.25);
		Ⲇ.rotate(.8);
		ᐃΔⵠ(Ⲇ, -15 * ᐃ, -14.5 * ᐃ, ᐃ * 30, ᐃ * 29, 6 * ᐃ);
		Ⲇ.restore();
		Ⲇ.fillStyle = ᐃᐃ[1];
		Ⲇ.fill();
		return ΔΔ
	}

	function ⲆⲆΔΔΔᐃΔⲆΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 85 * ᐃ;
		var ΔᐃⲆ = 115 * ᐃ;
		var ΔⵠᐃΔ = ᐃ * ⵠⵠⲆΔⵠ;
		var ᐃⲆⲆ = ᐃ * ⲆⲆⲆⵠᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃ * -130, -60 * ᐃ);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 190, ᐃ * 87, ᐃ * 201, ᐃ * 59, ᐃ * 208, ᐃ * 64);
		Ⲇ.bezierCurveTo(213 * ᐃ, 68 * ᐃ, ᐃ * 204, 93 * ᐃ, ᐃ * 195, ᐃ * 109);
		Ⲇ.bezierCurveTo(ᐃ * 195, ᐃ * 109, ᐃ * 202, ᐃ * 124, ᐃ * 191, ᐃ * 141);
		Ⲇ.bezierCurveTo(ᐃ * 182, ᐃ * 151, 164 * ᐃ, 155 * ᐃ, ᐃ * 148, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136, ᐃ * 135, ᐃ * 138, ᐃ * 111, 145 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, 92 * ᐃ, ᐃ * 131, ᐃ * 67, 138 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 61, 153 * ᐃ, 82 * ᐃ, 155 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(167 * ᐃ, 91 * ᐃ, ᐃ * 178, ᐃ * 92, ᐃ * 187, ᐃ * 98);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃⲆⲆ);
		return ΔΔ
	}

	function ᐃⲆⵠΔⲆⲆⲆΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 450 * ᐃ;
		ΔΔ.height = ᐃ * 470;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 226.5, ᐃ * 91.546875);
		Ⲇ.bezierCurveTo(254.5 * ᐃ, ᐃ * 115.546875, 261.5 * ᐃ, ᐃ * 115.546875, 294.5 * ᐃ, ᐃ * 109.546875);
		Ⲇ.bezierCurveTo(299.5 * ᐃ, 141.546875 * ᐃ, ᐃ * 315.5, ᐃ * 151.546875, ᐃ * 344.5, ᐃ * 158.546875);
		Ⲇ.bezierCurveTo(ᐃ * 330.5, 195.546875 * ᐃ, 341.5 * ᐃ, ᐃ * 207.546875, 361.5 * ᐃ, 226.546875 * ᐃ);
		Ⲇ.bezierCurveTo(331.5 * ᐃ, 251.546875 * ᐃ, 335.5 * ᐃ, ᐃ * 270.546875, 342.5 * ᐃ, ᐃ * 295.546875);
		Ⲇ.bezierCurveTo(300.5 * ᐃ, 296.546875 * ᐃ, ᐃ * 293.5, 325.546875 * ᐃ, 292.5 * ᐃ, 344.546875 * ᐃ);
		Ⲇ.bezierCurveTo(257.5 * ᐃ, 326.546875 * ᐃ, 242.5 * ᐃ, ᐃ * 338.546875, ᐃ * 224.5, 361.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 329.546875 * ᐃ, 180.5 * ᐃ, ᐃ * 334.546875, ᐃ * 155.5, ᐃ * 341.546875);
		Ⲇ.bezierCurveTo(146.5 * ᐃ, 307.546875 * ᐃ, 140.5 * ᐃ, ᐃ * 302.546875, ᐃ * 107.5, ᐃ * 292.546875);
		Ⲇ.bezierCurveTo(117.5 * ᐃ, ᐃ * 253.546875, ᐃ * 109.5, 244.546875 * ᐃ, 89.5 * ᐃ, 224.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 118.5, 191.546875 * ᐃ, 114.5 * ᐃ, ᐃ * 182.546875, ᐃ * 108.5, 156.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 143.5, ᐃ * 149.546875, 150.5 * ᐃ, 136.546875 * ᐃ, ᐃ * 157.5, ᐃ * 106.546875);
		Ⲇ.bezierCurveTo(ᐃ * 202.5, ᐃ * 120.546875, ᐃ * 211.5, ᐃ * 103.546875, ᐃ * 228.5, 91.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆⵠⲆ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(224.5 * ᐃ, ᐃ * 129.546875);
		Ⲇ.bezierCurveTo(ᐃ * 247.5, ᐃ * 147.546875, 252.5 * ᐃ, ᐃ * 143.546875, 274.5 * ᐃ, 141.546875 * ᐃ);
		Ⲇ.bezierCurveTo(279.5 * ᐃ, 163.546875 * ᐃ, ᐃ * 289.5, 168.546875 * ᐃ, ᐃ * 311.5, ᐃ * 178.546875);
		Ⲇ.bezierCurveTo(ᐃ * 301.5, ᐃ * 199.546875, 307.5 * ᐃ, 213.546875 * ᐃ, 323.5 * ᐃ, 226.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 303.5, ᐃ * 240.546875, 303.5 * ᐃ, ᐃ * 255.546875, ᐃ * 312.5, ᐃ * 275.546875);
		Ⲇ.bezierCurveTo(281.5 * ᐃ, 278.546875 * ᐃ, 276.5 * ᐃ, 291.546875 * ᐃ, ᐃ * 272.5, ᐃ * 313.546875);
		Ⲇ.bezierCurveTo(248.5 * ᐃ, ᐃ * 301.546875, 239.5 * ᐃ, ᐃ * 310.546875, 224.5 * ᐃ, ᐃ * 324.546875);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, 304.546875 * ᐃ, ᐃ * 199.5, 301.546875 * ᐃ, ᐃ * 176.5, 309.546875 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, ᐃ * 276.546875, 159.5 * ᐃ, 275.546875 * ᐃ, 138.5 * ᐃ, 274.546875 * ᐃ);
		Ⲇ.bezierCurveTo(148.5 * ᐃ, ᐃ * 248.546875, 140.5 * ᐃ, 237.546875 * ᐃ, ᐃ * 125.5, 225.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145.5, 205.546875 * ᐃ, 146.5 * ᐃ, ᐃ * 195.546875, ᐃ * 142.5, 176.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 173.5, ᐃ * 164.546875, ᐃ * 173.5, ᐃ * 155.546875, ᐃ * 178.5, ᐃ * 140.546875);
		Ⲇ.bezierCurveTo(ᐃ * 214.5, ᐃ * 143.546875, 214.5 * ᐃ, 135.546875 * ᐃ, ᐃ * 226.5, ᐃ * 129.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[ᐃΔⵠⵠ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 224.5, 160.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 236.5, ᐃ * 168.546875, 239.5 * ᐃ, ᐃ * 168.546875, ᐃ * 258.5, ᐃ * 168.546875);
		Ⲇ.bezierCurveTo(ᐃ * 261.5, 185.546875 * ᐃ, 268.5 * ᐃ, 187.546875 * ᐃ, ᐃ * 282.5, ᐃ * 192.546875);
		Ⲇ.bezierCurveTo(ᐃ * 277.5, 208.546875 * ᐃ, 283.5 * ᐃ, 216.546875 * ᐃ, 289.5 * ᐃ, 228.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 277.5, ᐃ * 243.546875, ᐃ * 280.5, 253.546875 * ᐃ, 281.5 * ᐃ, 260.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 264.5, 260.546875 * ᐃ, 259.5 * ᐃ, 269.546875 * ᐃ, ᐃ * 256.5, ᐃ * 283.546875);
		Ⲇ.bezierCurveTo(244.5 * ᐃ, ᐃ * 276.546875, 232.5 * ᐃ, ᐃ * 283.546875, 223.5 * ᐃ, 291.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.5, 276.546875 * ᐃ, ᐃ * 205.5, 278.546875 * ᐃ, ᐃ * 190.5, ᐃ * 281.546875);
		Ⲇ.bezierCurveTo(181.5 * ᐃ, 262.546875 * ᐃ, ᐃ * 173.5, 259.546875 * ᐃ, ᐃ * 165.5, ᐃ * 258.546875);
		Ⲇ.bezierCurveTo(169.5 * ᐃ, 239.546875 * ᐃ, 167.5 * ᐃ, 233.546875 * ᐃ, 157.5 * ᐃ, 225.546875 * ᐃ);
		Ⲇ.bezierCurveTo(169.5 * ᐃ, 208.546875 * ᐃ, ᐃ * 170.5, 203.546875 * ᐃ, ᐃ * 168.5, ᐃ * 192.546875);
		Ⲇ.bezierCurveTo(ᐃ * 181.5, 187.546875 * ᐃ, ᐃ * 188.5, ᐃ * 179.546875, ᐃ * 192.5, ᐃ * 168.546875);
		Ⲇ.bezierCurveTo(ᐃ * 216.5, ᐃ * 170.546875, 218.5 * ᐃ, ᐃ * 163.546875, ᐃ * 225.5, 160.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ᐃⵠΔ], ⵠΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 205.5, 194.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 216.5, 192.546875 * ᐃ, 219.5 * ᐃ, 191.546875 * ᐃ, ᐃ * 225.5, 185.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 232.5, 193.546875 * ᐃ, 237.5 * ᐃ, ᐃ * 191.546875, 246.5 * ᐃ, 192.546875 * ᐃ);
		Ⲇ.bezierCurveTo(249.5 * ᐃ, ᐃ * 202.546875, 253.5 * ᐃ, 205.546875 * ᐃ, ᐃ * 258.5, 207.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 259.5, ᐃ * 222.546875, 256.5 * ᐃ, ᐃ * 223.546875, 265.5 * ᐃ, ᐃ * 226.546875);
		Ⲇ.bezierCurveTo(ᐃ * 256.5, 231.546875 * ᐃ, 255.5 * ᐃ, ᐃ * 241.546875, 259.5 * ᐃ, 248.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 250.5, 245.546875 * ᐃ, 245.5 * ᐃ, 252.546875 * ᐃ, ᐃ * 243.5, ᐃ * 260.546875);
		Ⲇ.bezierCurveTo(ᐃ * 234.5, 256.546875 * ᐃ, 229.5 * ᐃ, 258.546875 * ᐃ, 223.5 * ᐃ, 265.546875 * ᐃ);
		Ⲇ.bezierCurveTo(218.5 * ᐃ, ᐃ * 255.546875, ᐃ * 213.5, 257.546875 * ᐃ, ᐃ * 204.5, 261.546875 * ᐃ);
		Ⲇ.bezierCurveTo(203.5 * ᐃ, ᐃ * 251.546875, 198.5 * ᐃ, ᐃ * 248.546875, 189.5 * ᐃ, 244.546875 * ᐃ);
		Ⲇ.bezierCurveTo(194.5 * ᐃ, 237.546875 * ᐃ, 192.5 * ᐃ, ᐃ * 231.546875, ᐃ * 184.5, ᐃ * 225.546875);
		Ⲇ.bezierCurveTo(ᐃ * 191.5, ᐃ * 211.546875, ᐃ * 192.5, ᐃ * 209.546875, 190.5 * ᐃ, ᐃ * 204.546875);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, ᐃ * 204.546875, 204.5 * ᐃ, 198.546875 * ᐃ, ᐃ * 207.5, 194.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[Δⵠⵠ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 149.5, 93.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 287.5, 332.546875 * ᐃ, ᐃ * 226, ᐃ * 225.546875, 302.5 * ᐃ, 357.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[Ⲇᐃⵠᐃ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 224.5, 66.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 224.5, ᐃ * 223.546875, ᐃ * 224.5, ᐃ * 223.546875, ᐃ * 224.5, ᐃ * 380.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[ΔΔᐃ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(302.5 * ᐃ, 88.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 222.5, ᐃ * 227.546875, 222.5 * ᐃ, ᐃ * 227.546875, 142.5 * ᐃ, ᐃ * 366.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ⲆⲆⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 361.5, 147.546875 * ᐃ);
		Ⲇ.bezierCurveTo(223 * ᐃ, ᐃ * 226.546875, 223 * ᐃ, 226.546875 * ᐃ, 84.5 * ᐃ, ᐃ * 305.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[0], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(379.5 * ᐃ, ᐃ * 225.546875);
		Ⲇ.bezierCurveTo(ᐃ * 221, 225.546875 * ᐃ, ᐃ * 221, ᐃ * 225.546875, ᐃ * 62.5, 225.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[ᐃΔⵠⵠ], ᐃⵠᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(90.5 * ᐃ, ᐃ * 147.546875);
		Ⲇ.bezierCurveTo(ᐃ * 226.5, ᐃ * 226.546875, 226.5 * ᐃ, 226.546875 * ᐃ, 362.5 * ᐃ, 305.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⵠⲆΔ], ⵠⲆᐃᐃ);
		return ΔΔ
	}
	const ᐃⲆᐃΔⲆΔᐃ = 6705573;
	const ⲆᐃᐃΔⵠⵠΔ = ᐃⲆᐃΔⲆΔᐃ["ΔⲆⵠⵠⵠⵠⵠ"];
	const ΔᐃⲆᐃᐃᐃΔ = `const ⵠΔⵠΔⵠᐃⲆΔⲆ = (typeof ⵠᐃᐃⵠᐃⵠΔ === "${ⲆᐃᐃΔⵠⵠΔ}") ? 1 : 0; return ⵠΔⵠΔⵠᐃⲆΔⲆ;`;

	function ⵠᐃᐃⵠᐃⵠΔ() {
		ⲆᐃᐃΔⵠⵠΔ;
		ᐃⲆᐃΔⲆΔᐃ();
		return ΔᐃⲆᐃᐃᐃΔ
	}
	const ⵠΔⵠΔⵠᐃⲆΔⲆ = 12956966;
	const ⵠΔⵠⵠⵠⲆΔⲆΔ = new Function(ⵠᐃᐃⵠᐃⵠΔ + ΔᐃⲆᐃᐃᐃΔ);
	const ⵠΔΔΔⲆⲆⲆ = 222835;
	if (ⵠΔⵠⵠⵠⲆΔⲆΔ(ⵠΔⵠΔⵠᐃⲆΔⲆ, ⵠΔΔΔⲆⲆⲆ) === 1) {
		const ᐃⲆᐃΔⲆΔᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
				ᐃⲆᐃΔⲆΔᐃ()
			}))
		};
		ᐃⲆᐃΔⲆΔᐃ()
	}

	function ᐃⲆΔΔΔᐃⲆΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = 400 * ᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, 147.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -96.5, ᐃ * -21.5, 193 * ᐃ, 43 * ᐃ, ᐃ * ᐃΔⵠⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ], ᐃᐃ[Δⵠⵠ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(202.5 * ᐃ, 190.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * 96.5, ᐃ * -21.5, ᐃ * -193, ᐃ * 43, ᐃ * 0);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ], ᐃᐃ[ᐃⵠΔ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, 233.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -96.5 * ᐃ, ᐃ * -20.5, 193 * ᐃ, 41 * ᐃ, ᐃ * ⲆΔᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⲆᐃⲆ], ⵠᐃⲆΔΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, ᐃ * 275);
		ᐃΔⵠ(Ⲇ, ᐃ * 96.5, -21 * ᐃ, ᐃ * -193, ᐃ * 42, ᐃⵠΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ], ᐃᐃ[ⲆⵠⲆ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(203.5 * ᐃ, 121.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -115.5 * ᐃ, -20.5 * ᐃ, ᐃ * 231, ᐃ * 41, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠᐃⲆᐃ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 203.5, 299 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -115.5, ᐃ * -20, 231 * ᐃ, ᐃ * 40, ᐃ * ⵠΔᐃΔᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ], ᐃᐃ[ΔⵠⲆΔ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 298.5, ᐃ * 210);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, ᐃ * -109, 41 * ᐃ, ᐃ * 218, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[Ⲇᐃⵠᐃ], ⵠⲆᐃᐃⵠᐃᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(108.5 * ᐃ, 210 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -20.5, ᐃ * -109, 41 * ᐃ, ᐃ * 218, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ], ᐃᐃ[0], 12 * ᐃ);
		return ΔΔ
	}

	function ⲆΔΔⲆᐃᐃᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 55;
		var ΔᐃⲆ = 55 * ᐃ;
		var ΔⵠᐃΔ = ᐃ * 8;
		var ᐃⲆⲆ = ᐃ * ΔⲆΔⲆ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃ * -65, ᐃ * -55 + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.moveTo(95 * ᐃ, 60 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃ * 62, 110 * ᐃ, ᐃ * 73, 107 * ᐃ, ᐃ * 79);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 85, ᐃ * 85, 93 * ᐃ, 81 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, ᐃ * 80, 85 * ᐃ, ᐃ * 60, 95 * ᐃ, ᐃ * 60);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[1], ᐃⲆᐃΔⵠ);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.beginPath();
		Ⲇ.moveTo(ᐃ * 91, 70 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, 75 * ᐃ, 100 * ᐃ, 76 * ᐃ, ᐃ * ᐃΔᐃⵠⵠ, ᐃ * 73);
		Ⲇ.bezierCurveTo(100 * ᐃ, 69 * ᐃ, 89 * ᐃ, 65 * ᐃ, 91 * ᐃ, 70 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], Ⲇᐃⵠⵠ);
		return ΔΔ
	}

	function ᐃⲆⵠΔᐃᐃⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 188;
		ΔΔ.height = ᐃ * 190;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ᐃ * ᐃᐃⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 33.00567626953125, 95.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(42.00567626953125 * ᐃ, 87.44320678710938 * ᐃ, ᐃ * 48.00567626953125, 51.443206787109375 * ᐃ, ᐃ * 74.00567626953125, 47.443206787109375 * ᐃ);
		Ⲇ.bezierCurveTo(100.00567626953125 * ᐃ, ᐃ * 42.443206787109375, ᐃ * 118.00567626953125, 49.443206787109375 * ᐃ, 131.00567626953125 * ᐃ, ᐃ * 55.443206787109375);
		Ⲇ.bezierCurveTo(140.00567626953125 * ᐃ, 70.44320678710938 * ᐃ, 145.00567626953125 * ᐃ, 87.44320678710938 * ᐃ, ᐃ * 152.00567626953125, 94.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(149.00567626953125 * ᐃ, 99.44320678710938 * ᐃ, ᐃ * 147.00567626953125, ᐃ * 98.44320678710938, 141.00567626953125 * ᐃ, ᐃ * 101.44320678710938);
		Ⲇ.bezierCurveTo(147.00567626953125 * ᐃ, 108.44320678710938 * ᐃ, ᐃ * 147.00567626953125, ᐃ * 111.44320678710938, ᐃ * 147.00567626953125, ᐃ * 112.44320678710938);
		Ⲇ.bezierCurveTo(143.00567626953125 * ᐃ, ᐃ * 112.44320678710938, ᐃ * 141.00567626953125, 112.44320678710938 * ᐃ, ᐃ * 137.00567626953125, ᐃ * 111.44320678710938);
		Ⲇ.bezierCurveTo(138.00567626953125 * ᐃ, 117.44320678710938 * ᐃ, 138.00567626953125 * ᐃ, ᐃ * 120.44320678710938, 138.00567626953125 * ᐃ, 124.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 125.00567626953125, ᐃ * 107.44320678710938, ᐃ * 121.00567626953125, ᐃ * 124.44320678710938, 110.00567626953125 * ᐃ, ᐃ * 141.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 102.00567626953125, 158.44320678710938 * ᐃ, ᐃ * 89.00567626953125, ᐃ * 158.44320678710938, ᐃ * 80.00567626953125, 144.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(61.00567626953125 * ᐃ, 111.44320678710938 * ᐃ, 56.00567626953125 * ᐃ, ᐃ * 117.44320678710938, ᐃ * 48.00567626953125, ᐃ * 120.44320678710938);
		Ⲇ.bezierCurveTo(46.00567626953125 * ᐃ, ᐃ * 118.44320678710938, 47.00567626953125 * ᐃ, ᐃ * 112.44320678710938, 48.00567626953125 * ᐃ, ᐃ * 107.44320678710938);
		Ⲇ.bezierCurveTo(43.00567626953125 * ᐃ, 111.44320678710938 * ᐃ, 40.00567626953125 * ᐃ, 111.44320678710938 * ᐃ, ᐃ * 37.00567626953125, 110.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(39.50567626953125 * ᐃ, 104.94320678710938 * ᐃ, 39.50567626953125 * ᐃ, 104.94320678710938 * ᐃ, 42.00567626953125 * ᐃ, ᐃ * 99.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 33.00567626953125, 99.44320678710938 * ᐃ, ᐃ * 33.00567626953125, ᐃ * 98.44320678710938, 33.00567626953125 * ᐃ, ᐃ * 96.44320678710938);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ], ᐃᐃ[ΔΔⵠᐃ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 60.00567626953125, 99.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(70.00567626953125 * ᐃ, 82.35227966308594 * ᐃ, 85.00567626953125 * ᐃ, 86.35227966308594 * ᐃ, 87.00567626953125 * ᐃ, 97.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 89.00567626953125, 101.35227966308594 * ᐃ, ᐃ * 88.00567626953125, 105.35227966308594 * ᐃ, ᐃ * 87.00567626953125, ᐃ * 110.35227966308594);
		Ⲇ.bezierCurveTo(89.00567626953125 * ᐃ, ᐃ * 111.35227966308594, 91.00567626953125 * ᐃ, 112.35227966308594 * ᐃ, 93.00567626953125 * ᐃ, ᐃ * 115.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 96.00567626953125, 111.35227966308594 * ᐃ, 99.00567626953125 * ᐃ, ᐃ * 111.35227966308594, ᐃ * 100.00567626953125, ᐃ * 110.35227966308594);
		Ⲇ.bezierCurveTo(98.00567626953125 * ᐃ, 92.35227966308594 * ᐃ, ᐃ * 103.00567626953125, 86.35227966308594 * ᐃ, 113.00567626953125 * ᐃ, ᐃ * 89.35227966308594);
		Ⲇ.bezierCurveTo(122.00567626953125 * ᐃ, ᐃ * 92.35227966308594, ᐃ * 123.00567626953125, ᐃ * 94.35227966308594, ᐃ * 126.00567626953125, 98.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124.00567626953125, ᐃ * 102.35227966308594, 123.00567626953125 * ᐃ, ᐃ * 103.35227966308594, ᐃ * 121.00567626953125, ᐃ * 104.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 124.00567626953125, 105.35227966308594 * ᐃ, 126.00567626953125 * ᐃ, ᐃ * 107.35227966308594, 129.00567626953125 * ᐃ, ᐃ * 111.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 115.00567626953125, ᐃ * 122.35227966308594, 113.00567626953125 * ᐃ, ᐃ * 145.35227966308594, ᐃ * 100.00567626953125, 152.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(91.00567626953125 * ᐃ, 158.35227966308594 * ᐃ, 83.00567626953125 * ᐃ, 149.35227966308594 * ᐃ, ᐃ * 76.00567626953125, 138.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67.00567626953125, ᐃ * 114.35227966308594, 63.00567626953125 * ᐃ, 113.35227966308594 * ᐃ, ᐃ * 59.00567626953125, ᐃ * 111.35227966308594);
		Ⲇ.bezierCurveTo(62.00567626953125 * ᐃ, ᐃ * 107.35227966308594, 64.00567626953125 * ᐃ, 105.35227966308594 * ᐃ, ᐃ * 66.00567626953125, ᐃ * 104.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 63.00567626953125, 100.35227966308594 * ᐃ, 62.00567626953125 * ᐃ, 100.35227966308594 * ᐃ, 60.00567626953125 * ᐃ, ᐃ * 99.35227966308594);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 51.00567626953125, ᐃ * 72.53409576416016);
		Ⲇ.bezierCurveTo(ᐃ * 48.00567626953125, ᐃ * 56.534095764160156, ᐃ * 48.00567626953125, 49.534095764160156 * ᐃ, ᐃ * 54.00567626953125, 35.534095764160156 * ᐃ);
		Ⲇ.bezierCurveTo(58.00567626953125 * ᐃ, 26.534095764160156 * ᐃ, 65.00567626953125 * ᐃ, 27.534095764160156 * ᐃ, ᐃ * 73.00567626953125, ᐃ * 40.534095764160156);
		Ⲇ.bezierCurveTo(81.00567626953125 * ᐃ, 49.534095764160156 * ᐃ, ᐃ * 82.00567626953125, 50.534095764160156 * ᐃ, 83.00567626953125 * ᐃ, ᐃ * 51.534095764160156);
		Ⲇ.bezierCurveTo(ᐃ * 77.00567626953125, 71.53409576416016 * ᐃ, 64.00567626953125 * ᐃ, ᐃ * 75.53409576416016, ᐃ * 51.00567626953125, 72.53409576416016 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⵠⲆ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 105.00567626953125, 50.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112.00567626953125, 48.53410339355469 * ᐃ, 125.00567626953125 * ᐃ, ᐃ * 21.534103393554688, ᐃ * 132.00567626953125, 33.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(138.00567626953125 * ᐃ, 42.53410339355469 * ᐃ, 140.00567626953125 * ᐃ, 64.53410339355469 * ᐃ, 136.00567626953125 * ᐃ, 75.53410339355469 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔᐃ], ⵠΔⲆΔ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ⲆⲆⲆ, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 33.00567626953125, 95.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(42.00567626953125 * ᐃ, 87.44320678710938 * ᐃ, ᐃ * 48.00567626953125, 51.443206787109375 * ᐃ, 74.00567626953125 * ᐃ, ᐃ * 47.443206787109375);
		Ⲇ.bezierCurveTo(100.00567626953125 * ᐃ, ᐃ * 42.443206787109375, ᐃ * 118.00567626953125, ᐃ * 49.443206787109375, ᐃ * 131.00567626953125, 55.443206787109375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140.00567626953125, 70.44320678710938 * ᐃ, ᐃ * 145.00567626953125, 87.44320678710938 * ᐃ, ᐃ * 152.00567626953125, ᐃ * 94.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 149.00567626953125, ᐃ * 99.44320678710938, 147.00567626953125 * ᐃ, ᐃ * 98.44320678710938, 141.00567626953125 * ᐃ, ᐃ * 101.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 147.00567626953125, ᐃ * 108.44320678710938, ᐃ * 147.00567626953125, ᐃ * 111.44320678710938, 147.00567626953125 * ᐃ, ᐃ * 112.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 143.00567626953125, 112.44320678710938 * ᐃ, ᐃ * 141.00567626953125, ᐃ * 112.44320678710938, ᐃ * 137.00567626953125, 111.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138.00567626953125, 117.44320678710938 * ᐃ, ᐃ * 138.00567626953125, 120.44320678710938 * ᐃ, 138.00567626953125 * ᐃ, 124.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 125.00567626953125, 107.44320678710938 * ᐃ, 121.00567626953125 * ᐃ, ᐃ * 124.44320678710938, 110.00567626953125 * ᐃ, ᐃ * 141.44320678710938);
		Ⲇ.bezierCurveTo(102.00567626953125 * ᐃ, ᐃ * 158.44320678710938, ᐃ * 89.00567626953125, 158.44320678710938 * ᐃ, ᐃ * 80.00567626953125, 144.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(61.00567626953125 * ᐃ, 111.44320678710938 * ᐃ, ᐃ * 56.00567626953125, 117.44320678710938 * ᐃ, ᐃ * 48.00567626953125, 120.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 46.00567626953125, 118.44320678710938 * ᐃ, 47.00567626953125 * ᐃ, 112.44320678710938 * ᐃ, ᐃ * 48.00567626953125, 107.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(43.00567626953125 * ᐃ, ᐃ * 111.44320678710938, ᐃ * 40.00567626953125, ᐃ * 111.44320678710938, 37.00567626953125 * ᐃ, 110.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(39.50567626953125 * ᐃ, 104.94320678710938 * ᐃ, 39.50567626953125 * ᐃ, 104.94320678710938 * ᐃ, 42.00567626953125 * ᐃ, ᐃ * 99.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 33.00567626953125, ᐃ * 99.44320678710938, ᐃ * 33.00567626953125, 98.44320678710938 * ᐃ, 33.00567626953125 * ᐃ, ᐃ * 96.44320678710938);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], 3 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(60.00567626953125 * ᐃ, ᐃ * 99.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 70.00567626953125, ᐃ * 82.35227966308594, ᐃ * 85.00567626953125, 86.35227966308594 * ᐃ, ᐃ * 87.00567626953125, 97.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 89.00567626953125, 101.35227966308594 * ᐃ, ᐃ * 88.00567626953125, ᐃ * 105.35227966308594, ᐃ * 87.00567626953125, ᐃ * 110.35227966308594);
		Ⲇ.bezierCurveTo(89.00567626953125 * ᐃ, ᐃ * 111.35227966308594, ᐃ * 91.00567626953125, ᐃ * 112.35227966308594, 93.00567626953125 * ᐃ, 115.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 96.00567626953125, 111.35227966308594 * ᐃ, 99.00567626953125 * ᐃ, 111.35227966308594 * ᐃ, ᐃ * 100.00567626953125, ᐃ * 110.35227966308594);
		Ⲇ.bezierCurveTo(98.00567626953125 * ᐃ, ᐃ * 92.35227966308594, 103.00567626953125 * ᐃ, ᐃ * 86.35227966308594, 113.00567626953125 * ᐃ, ᐃ * 89.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 122.00567626953125, 92.35227966308594 * ᐃ, 123.00567626953125 * ᐃ, ᐃ * 94.35227966308594, ᐃ * 126.00567626953125, ᐃ * 98.35227966308594);
		Ⲇ.bezierCurveTo(124.00567626953125 * ᐃ, 102.35227966308594 * ᐃ, 123.00567626953125 * ᐃ, 103.35227966308594 * ᐃ, ᐃ * 121.00567626953125, 104.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124.00567626953125, 105.35227966308594 * ᐃ, 126.00567626953125 * ᐃ, 107.35227966308594 * ᐃ, 129.00567626953125 * ᐃ, ᐃ * 111.35227966308594);
		Ⲇ.bezierCurveTo(115.00567626953125 * ᐃ, 122.35227966308594 * ᐃ, 113.00567626953125 * ᐃ, 145.35227966308594 * ᐃ, 100.00567626953125 * ᐃ, 152.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91.00567626953125, 158.35227966308594 * ᐃ, 83.00567626953125 * ᐃ, ᐃ * 149.35227966308594, ᐃ * 76.00567626953125, 138.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(67.00567626953125 * ᐃ, ᐃ * 114.35227966308594, ᐃ * 63.00567626953125, 113.35227966308594 * ᐃ, ᐃ * 59.00567626953125, ᐃ * 111.35227966308594);
		Ⲇ.bezierCurveTo(ᐃ * 62.00567626953125, 107.35227966308594 * ᐃ, 64.00567626953125 * ᐃ, ᐃ * 105.35227966308594, 66.00567626953125 * ᐃ, 104.35227966308594 * ᐃ);
		Ⲇ.bezierCurveTo(63.00567626953125 * ᐃ, ᐃ * 100.35227966308594, ᐃ * 62.00567626953125, ᐃ * 100.35227966308594, ᐃ * 60.00567626953125, ᐃ * 99.35227966308594);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(33.00567626953125 * ᐃ, ᐃ * 95.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 42.00567626953125, ᐃ * 87.44320678710938, ᐃ * 48.00567626953125, 51.443206787109375 * ᐃ, 74.00567626953125 * ᐃ, ᐃ * 47.443206787109375);
		Ⲇ.bezierCurveTo(ᐃ * 100.00567626953125, ᐃ * 42.443206787109375, 118.00567626953125 * ᐃ, ᐃ * 49.443206787109375, 131.00567626953125 * ᐃ, 55.443206787109375 * ᐃ);
		Ⲇ.bezierCurveTo(140.00567626953125 * ᐃ, ᐃ * 70.44320678710938, ᐃ * 145.00567626953125, ᐃ * 87.44320678710938, ᐃ * 152.00567626953125, ᐃ * 94.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 149.00567626953125, 99.44320678710938 * ᐃ, ᐃ * 147.00567626953125, 98.44320678710938 * ᐃ, 141.00567626953125 * ᐃ, 101.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(147.00567626953125 * ᐃ, ᐃ * 108.44320678710938, ᐃ * 147.00567626953125, 111.44320678710938 * ᐃ, ᐃ * 147.00567626953125, ᐃ * 112.44320678710938);
		Ⲇ.bezierCurveTo(143.00567626953125 * ᐃ, 112.44320678710938 * ᐃ, 141.00567626953125 * ᐃ, 112.44320678710938 * ᐃ, ᐃ * 137.00567626953125, 111.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138.00567626953125, 117.44320678710938 * ᐃ, 138.00567626953125 * ᐃ, 120.44320678710938 * ᐃ, ᐃ * 138.00567626953125, 124.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 125.00567626953125, ᐃ * 107.44320678710938, 121.00567626953125 * ᐃ, ᐃ * 124.44320678710938, ᐃ * 110.00567626953125, ᐃ * 141.44320678710938);
		Ⲇ.bezierCurveTo(102.00567626953125 * ᐃ, ᐃ * 158.44320678710938, 89.00567626953125 * ᐃ, ᐃ * 158.44320678710938, 80.00567626953125 * ᐃ, ᐃ * 144.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 61.00567626953125, ᐃ * 111.44320678710938, ᐃ * 56.00567626953125, ᐃ * 117.44320678710938, ᐃ * 48.00567626953125, ᐃ * 120.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 46.00567626953125, ᐃ * 118.44320678710938, 47.00567626953125 * ᐃ, 112.44320678710938 * ᐃ, ᐃ * 48.00567626953125, ᐃ * 107.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 43.00567626953125, 111.44320678710938 * ᐃ, ᐃ * 40.00567626953125, ᐃ * 111.44320678710938, 37.00567626953125 * ᐃ, 110.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(39.50567626953125 * ᐃ, ᐃ * 104.94320678710938, 39.50567626953125 * ᐃ, 104.94320678710938 * ᐃ, ᐃ * 42.00567626953125, 99.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.00567626953125, ᐃ * 99.44320678710938, 33.00567626953125 * ᐃ, 98.44320678710938 * ᐃ, 33.00567626953125 * ᐃ, ᐃ * 96.44320678710938);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⵠΔⲆ], Δᐃᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(51.00567626953125 * ᐃ, 72.53409576416016 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48.00567626953125, 56.534095764160156 * ᐃ, 48.00567626953125 * ᐃ, ᐃ * 49.534095764160156, 54.00567626953125 * ᐃ, 35.534095764160156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 58.00567626953125, ᐃ * 26.534095764160156, 65.00567626953125 * ᐃ, 27.534095764160156 * ᐃ, ᐃ * 73.00567626953125, 40.534095764160156 * ᐃ);
		Ⲇ.bezierCurveTo(81.00567626953125 * ᐃ, ᐃ * 49.534095764160156, 82.00567626953125 * ᐃ, ᐃ * 50.534095764160156, 83.00567626953125 * ᐃ, 51.534095764160156 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[ⲆⲆⵠΔ], 3 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.00567626953125 * ᐃ, ᐃ * 50.53410339355469);
		Ⲇ.bezierCurveTo(ᐃ * 112.00567626953125, 48.53410339355469 * ᐃ, ᐃ * 125.00567626953125, ᐃ * 21.534103393554688, 132.00567626953125 * ᐃ, ᐃ * 33.53410339355469);
		Ⲇ.bezierCurveTo(ᐃ * 138.00567626953125, 42.53410339355469 * ᐃ, 140.00567626953125 * ᐃ, ᐃ * 64.53410339355469, ᐃ * 136.00567626953125, 75.53410339355469 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ], ᐃᐃ[2], ᐃ * ⵠⵠⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 57.00567626953125, 68.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(63.00567626953125 * ᐃ, ᐃ * 69.53410339355469, ᐃ * 69.00567626953125, 66.53410339355469 * ᐃ, 73.00567626953125 * ᐃ, 60.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66.00567626953125, ᐃ * 47.53410339355469, ᐃ * 61.00567626953125, ᐃ * 42.53410339355469, ᐃ * 58.00567626953125, ᐃ * 49.53410339355469);
		Ⲇ.bezierCurveTo(56.00567626953125 * ᐃ, 59.53410339355469 * ᐃ, ᐃ * 56.00567626953125, ᐃ * 64.53410339355469, 57.00567626953125 * ᐃ, 67.53410339355469 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115.00567626953125, 59.715911865234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 119.00567626953125, ᐃ * 48.715911865234375, 126.00567626953125 * ᐃ, 41.715911865234375 * ᐃ, ᐃ * 129.00567626953125, 48.715911865234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131.00567626953125, ᐃ * 56.715911865234375, ᐃ * 133.00567626953125, 71.71591186523438 * ᐃ, ᐃ * 127.00567626953125, 68.71591186523438 * ᐃ);
		Ⲇ.bezierCurveTo(120.00567626953125 * ᐃ, 67.71591186523438 * ᐃ, ᐃ * 114.00567626953125, ᐃ * 59.715911865234375, ᐃ * 116.00567626953125, ᐃ * 58.715911865234375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, ᐃ * 77, 107 * ᐃ, ⵠⵠⲆΔⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, 110 * ᐃ, ᐃ * 107, 6 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 75, 105 * ᐃ, ⵠⵠⲆⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃᐃ]);
		ΔⵠⲆ(Ⲇ, 108 * ᐃ, 105 * ᐃ, 3 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(88.00567626953125 * ᐃ, 141.4431915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93.00567626953125, 137.4431915283203 * ᐃ, 96.00567626953125 * ᐃ, 138.4431915283203 * ᐃ, 100.00567626953125 * ᐃ, ᐃ * 141.4431915283203);
		Ⲇ.bezierCurveTo(ᐃ * 103.00567626953125, ᐃ * 143.4431915283203, ᐃ * 101.00567626953125, ᐃ * 149.4431915283203, ᐃ * 95.00567626953125, 148.4431915283203 * ᐃ);
		Ⲇ.bezierCurveTo(85.00567626953125 * ᐃ, ᐃ * 148.4431915283203, 86.00567626953125 * ᐃ, 145.4431915283203 * ᐃ, 88.00567626953125 * ᐃ, 142.4431915283203 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
		return ΔΔ
	}

	function ΔⵠⲆΔⲆΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 85 * ᐃ;
		var ΔᐃⲆ = 115 * ᐃ;
		var ΔⵠᐃΔ = ⵠᐃⲆⵠ * ᐃ;
		var ᐃⲆⲆ = ᐃ * ᐃΔⲆΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(-130 * ᐃ, ᐃ * -60 + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(190 * ᐃ, 87 * ᐃ, ᐃ * 201, ᐃ * 59, ᐃ * 208, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213, 68 * ᐃ, 204 * ᐃ, 93 * ᐃ, ᐃ * 195, ᐃ * 109);
		Ⲇ.bezierCurveTo(195 * ᐃ, 109 * ᐃ, 202 * ᐃ, ᐃ * 124, 191 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182, 151 * ᐃ, 164 * ᐃ, ᐃ * 155, ᐃ * 148, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136, 135 * ᐃ, 138 * ᐃ, 111 * ᐃ, ᐃ * 145, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, ᐃ * 92, ᐃ * 131, 67 * ᐃ, 138 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 61, ᐃ * 153, ᐃ * 82, ᐃ * 155, ᐃ * 96);
		Ⲇ.bezierCurveTo(ᐃ * 167, 91 * ᐃ, ᐃ * 178, ᐃ * 92, ᐃ * 187, 98 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, -ΔⵠᐃΔ);
		Ⲇ.globalAlpha = ΔᐃᐃⲆ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(190 * ᐃ, ᐃ * 87, 201 * ᐃ, 59 * ᐃ, 208 * ᐃ, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213, 68 * ᐃ, ᐃ * 204, 93 * ᐃ, ᐃ * 195, ᐃ * 109);
		Ⲇ.bezierCurveTo(195 * ᐃ, 109 * ᐃ, ᐃ * 202, 124 * ᐃ, 191 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182, ᐃ * 151, 164 * ᐃ, ᐃ * 155, 148 * ᐃ, ᐃ * 144);
		Ⲇ.bezierCurveTo(ᐃ * 136, ᐃ * 135, ᐃ * 138, ᐃ * 111, 145 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, 92 * ᐃ, ᐃ * 131, 67 * ᐃ, 138 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 61, ᐃ * 153, 82 * ᐃ, ᐃ * 155, ᐃ * 96);
		Ⲇ.bezierCurveTo(167 * ᐃ, ᐃ * 91, 178 * ᐃ, ᐃ * 92, ᐃ * 187, ᐃ * 98);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[ΔⵠΔΔ], ⲆⵠΔΔⲆ);
		var ΔᐃⲆΔᐃⲆΔ = ᐃ * 155;
		var ᐃΔⲆΔⵠⲆⵠ = 133 * ᐃ;
		var ΔᐃΔⵠⲆᐃᐃ = ⲆΔⵠᐃⲆ * ᐃ;
		var ᐃΔⵠᐃⵠᐃᐃ = ᐃ * ⲆⵠⵠⲆ;
		var ΔΔᐃⵠⲆΔⲆ = ΔᐃⲆΔᐃⲆΔ + ᐃ * -3;
		var ΔⵠⲆᐃⲆᐃⵠ = ᐃΔⲆΔⵠⲆⵠ + -ΔⲆⵠΔΔ * ᐃ;
		Ⲇ.save();
		Ⲇ.translate(ΔᐃⲆΔᐃⲆΔ, ᐃΔⲆΔⵠⲆⵠ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, ΔⲆᐃⲆ, 0, ΔᐃΔⵠⲆᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ΔΔᐃⵠⲆΔⲆ, ΔⵠⲆᐃⲆᐃⵠ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 0, 0, ᐃΔⵠᐃⵠᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ΔᐃⲆΔᐃⲆΔ + 27 * ᐃ, ᐃΔⲆΔⵠⲆⵠ);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		ΔⵠⲆ(Ⲇ, 0, ΔⲆⵠ, ΔᐃΔⵠⲆᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 27 + ΔΔᐃⵠⲆΔⲆ, ΔⵠⲆᐃⲆᐃⵠ);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		ΔⵠⲆ(Ⲇ, 0, Δⵠⵠ, ᐃΔⵠᐃⵠᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ]);
		return ΔΔ
	}

	function ΔᐃⲆᐃΔΔⲆⲆⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 188 * ᐃ;
		ΔΔ.height = 190 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 33.00567626953125, 95.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(42.00567626953125 * ᐃ, ᐃ * 87.44320678710938, ᐃ * 48.00567626953125, 51.443206787109375 * ᐃ, 74.00567626953125 * ᐃ, ᐃ * 47.443206787109375);
		Ⲇ.bezierCurveTo(ᐃ * 100.00567626953125, 42.443206787109375 * ᐃ, 118.00567626953125 * ᐃ, ᐃ * 49.443206787109375, ᐃ * 131.00567626953125, 55.443206787109375 * ᐃ);
		Ⲇ.bezierCurveTo(140.00567626953125 * ᐃ, ᐃ * 70.44320678710938, 145.00567626953125 * ᐃ, ᐃ * 87.44320678710938, ᐃ * 152.00567626953125, 94.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 149.00567626953125, 99.44320678710938 * ᐃ, 147.00567626953125 * ᐃ, 98.44320678710938 * ᐃ, 141.00567626953125 * ᐃ, ᐃ * 101.44320678710938);
		Ⲇ.bezierCurveTo(147.00567626953125 * ᐃ, 108.44320678710938 * ᐃ, 147.00567626953125 * ᐃ, ᐃ * 111.44320678710938, 147.00567626953125 * ᐃ, 112.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(143.00567626953125 * ᐃ, ᐃ * 112.44320678710938, ᐃ * 141.00567626953125, ᐃ * 112.44320678710938, 137.00567626953125 * ᐃ, ᐃ * 111.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 138.00567626953125, ᐃ * 117.44320678710938, 138.00567626953125 * ᐃ, ᐃ * 120.44320678710938, ᐃ * 138.00567626953125, ᐃ * 124.44320678710938);
		Ⲇ.bezierCurveTo(125.00567626953125 * ᐃ, ᐃ * 107.44320678710938, ᐃ * 121.00567626953125, ᐃ * 124.44320678710938, 110.00567626953125 * ᐃ, ᐃ * 141.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 102.00567626953125, 158.44320678710938 * ᐃ, 89.00567626953125 * ᐃ, 158.44320678710938 * ᐃ, ᐃ * 80.00567626953125, ᐃ * 144.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 61.00567626953125, ᐃ * 111.44320678710938, ᐃ * 56.00567626953125, 117.44320678710938 * ᐃ, ᐃ * 48.00567626953125, ᐃ * 120.44320678710938);
		Ⲇ.bezierCurveTo(ᐃ * 46.00567626953125, 118.44320678710938 * ᐃ, 47.00567626953125 * ᐃ, ᐃ * 112.44320678710938, 48.00567626953125 * ᐃ, ᐃ * 107.44320678710938);
		Ⲇ.bezierCurveTo(43.00567626953125 * ᐃ, 111.44320678710938 * ᐃ, ᐃ * 40.00567626953125, 111.44320678710938 * ᐃ, ᐃ * 37.00567626953125, 110.44320678710938 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39.50567626953125, ᐃ * 104.94320678710938, ᐃ * 39.50567626953125, ᐃ * 104.94320678710938, 42.00567626953125 * ᐃ, ᐃ * 99.44320678710938);
		Ⲇ.bezierCurveTo(33.00567626953125 * ᐃ, ᐃ * 99.44320678710938, ᐃ * 33.00567626953125, 98.44320678710938 * ᐃ, ᐃ * 33.00567626953125, ᐃ * 96.44320678710938);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔᐃ], ⲆⵠΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 51.00567626953125, 72.53409576416016 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48.00567626953125, 56.534095764160156 * ᐃ, ᐃ * 48.00567626953125, ᐃ * 49.534095764160156, 54.00567626953125 * ᐃ, ᐃ * 35.534095764160156);
		Ⲇ.bezierCurveTo(ᐃ * 58.00567626953125, 26.534095764160156 * ᐃ, 65.00567626953125 * ᐃ, ᐃ * 27.534095764160156, 73.00567626953125 * ᐃ, ᐃ * 40.534095764160156);
		Ⲇ.bezierCurveTo(81.00567626953125 * ᐃ, 49.534095764160156 * ᐃ, 82.00567626953125 * ᐃ, 50.534095764160156 * ᐃ, 83.00567626953125 * ᐃ, ᐃ * 51.534095764160156);
		Ⲇ.bezierCurveTo(77.00567626953125 * ᐃ, 71.53409576416016 * ᐃ, 64.00567626953125 * ᐃ, ᐃ * 75.53409576416016, 51.00567626953125 * ᐃ, 72.53409576416016 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠᐃⲆᐃ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.00567626953125 * ᐃ, 50.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(112.00567626953125 * ᐃ, 48.53410339355469 * ᐃ, 125.00567626953125 * ᐃ, ᐃ * 21.534103393554688, 132.00567626953125 * ᐃ, 33.53410339355469 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138.00567626953125, 42.53410339355469 * ᐃ, ᐃ * 140.00567626953125, 64.53410339355469 * ᐃ, 136.00567626953125 * ᐃ, ᐃ * 75.53410339355469);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ], ᐃᐃ[0], ᐃ * ᐃΔⵠᐃ);
		return ΔΔ
	}
	const ᐃΔⲆⲆⵠ = ᐃᐃΔⵠ;

	function ⲆᐃΔᐃΔⲆⵠΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 400;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.save();
		Ⲇ.translate(85 * ᐃ, 237 * ᐃ);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ᐃⲆᐃᐃΔ, 54.585977194239184 * ᐃ, ᐃ * ⵠᐃΔᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[ⵠⵠΔⲆ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 178, ᐃ * 238);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 52.53573932334064, 1 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆⲆⵠΔ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(270 * ᐃ, ᐃ * 239);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 53.58058329516393, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⵠᐃ], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 222, 312 * ᐃ);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 52.53573932334064, ⵠⵠⲆΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆᐃⲆᐃ], ᐃ * ⲆⵠᐃⲆⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 317, ᐃ * 159);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ΔᐃΔⵠⵠⲆᐃ, ᐃ * 57.63465889766331, 1 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[2], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(223.5 * ᐃ, ᐃ * 139.0625);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆΔⲆᐃ, ᐃ * 51.66236541235796, ΔⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], ⵠᐃⲆᐃⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(132.5 * ᐃ, ᐃ * 137.0625);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆΔⲆᐃ, 52.009614495783374 * ᐃ, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(178.5 * ᐃ, ᐃ * 58.0625);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 53.16013544000805, ᐃ * ᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * ⵠⲆⲆΔⵠⵠⵠ);
		Ⲇ.save();
		Ⲇ.translate(177.5 * ᐃ, 216.0625 * ᐃ);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 50, ᐃ * ΔᐃⵠΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 84.5, ᐃ * 215.0625);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ⵠᐃΔΔⲆ, 54 * ᐃ, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[ᐃᐃⲆΔ], ᐃ * ⵠⲆᐃᐃⵠᐃᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 319.5, 138.0625 * ᐃ);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 55.08175741568164, ᐃⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], ΔΔᐃⲆᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 269.5, ᐃ * 216.0625);
		Ⲇ.rotate(1.5707963267948966);
		ⲆᐃⵠΔ(Ⲇ, ⲆᐃΔᐃᐃ, 54.589376255824725 * ᐃ, ᐃ * 1);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * ⲆⵠᐃⲆⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 221.5, ᐃ * 293.0625);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, ᐃⵠⵠΔⲆ, ᐃ * 49.49747468305833, ᐃΔⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ⲆᐃᐃⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 221.5, ᐃ * 342.0625);
		Ⲇ.bezierCurveTo(ᐃ * 221.5, ᐃ * 350.5625, ᐃ * 221.5, 350.5625 * ᐃ, 221.5 * ᐃ, ᐃ * 359.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ᐃᐃ[ⵠⲆΔΔ], ⵠᐃⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84.5 * ᐃ, 270.0625 * ᐃ);
		Ⲇ.bezierCurveTo(84.5 * ᐃ, ᐃ * 277.0625, 84.5 * ᐃ, ᐃ * 277.0625, 84.5 * ᐃ, ᐃ * 284.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(84.5 * ᐃ, 215.0625 * ᐃ);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 30, ᐃᐃⵠⲆᐃⲆΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 177.5, ᐃ * 215.0625);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 30, ᐃ * Ⲇⵠⵠⵠᐃⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 222.5, ᐃ * 294.0625);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, 30 * ᐃ, ᐃ * ⲆⵠΔⲆΔΔⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠⵠ]);
		Ⲇ.save();
		Ⲇ.translate(270.5 * ᐃ, 216.0625 * ᐃ);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, ΔⲆΔⲆΔ, 30 * ᐃ, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ]);
		Ⲇ.save();
		Ⲇ.translate(320.5 * ᐃ, 134.0625 * ᐃ);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆΔⲆᐃ, 30 * ᐃ, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 224.5, ᐃ * 138.0625);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆΔⲆᐃ, ᐃ * 30, ᐃⲆⵠᐃᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 133.5, ᐃ * 137.0625);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 30, ᐃᐃΔⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ]);
		Ⲇ.save();
		Ⲇ.translate(178.5 * ᐃ, 56.0625 * ᐃ);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, 6, 30 * ᐃ, ᐃᐃΔⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		return ΔΔ
	}

	function ⵠⲆΔⵠⲆᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 52 * ᐃ;
		ΔΔ.height = ᐃ * 65;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(9.833328247070312 * ᐃ, ᐃ * 12.078125);
		Ⲇ.bezierCurveTo(15.333328247070312 * ᐃ, ᐃ * 28.078125, ᐃ * 15.333328247070312, 28.078125 * ᐃ, ᐃ * 20.833328247070312, ᐃ * 44.078125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⵠⲆΔ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 7.8333282470703125, ᐃ * 20.078125);
		Ⲇ.bezierCurveTo(16.833328247070312 * ᐃ, ᐃ * 32.578125, ᐃ * 16.833328247070312, 32.578125 * ᐃ, ᐃ * 25.833328247070312, 45.078125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃᐃⲆ], ⲆⲆⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 23.833328247070312, 26.078125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 25.833328247070312, ᐃ * 11.078125, ᐃ * 16.833328247070312, ᐃ * 8.078125, ᐃ * 14.833328247070312, 7.078125 * ᐃ);
		Ⲇ.bezierCurveTo(11.833328247070312 * ᐃ, ᐃ * 17.078125, 13.833328247070312 * ᐃ, ᐃ * 22.078125, ᐃ * 23.833328247070312, ᐃ * 27.078125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⲆⲆ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35.83332824707031 * ᐃ, 8.078125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 34.83332824707031, ᐃ * 27.078125, ᐃ * 28.833328247070312, 27.078125 * ᐃ, ᐃ * 23.833328247070312, 28.078125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21.833328247070312, 14.078125 * ᐃ, 26.833328247070312 * ᐃ, 11.078125 * ᐃ, 35.83332824707031 * ᐃ, ᐃ * 8.078125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔᐃⵠΔ], ΔⲆⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 25.833328247070312, ᐃ * 39.078125);
		Ⲇ.bezierCurveTo(ᐃ * 20.833328247070312, ᐃ * 29.078125, 14.833328247070312 * ᐃ, 27.078125 * ᐃ, 5.8333282470703125 * ᐃ, ᐃ * 29.078125);
		Ⲇ.bezierCurveTo(ᐃ * 9.833328247070312, 39.078125 * ᐃ, ᐃ * 16.833328247070312, 42.078125 * ᐃ, ᐃ * 25.833328247070312, 40.078125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⵠⲆ], ⵠⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(42.83332824707031 * ᐃ, ᐃ * 23.078125);
		Ⲇ.bezierCurveTo(35.83332824707031 * ᐃ, ᐃ * 35.078125, 31.833328247070312 * ᐃ, 37.078125 * ᐃ, ᐃ * 25.833328247070312, 36.078125 * ᐃ);
		Ⲇ.bezierCurveTo(25.833328247070312 * ᐃ, 24.078125 * ᐃ, ᐃ * 33.83332824707031, 21.078125 * ᐃ, 42.83332824707031 * ᐃ, ᐃ * 23.078125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(23.833328247070312 * ᐃ, ᐃ * 24.078125);
		Ⲇ.bezierCurveTo(20.833328247070312 * ᐃ, 34.078125 * ᐃ, 23.833328247070312 * ᐃ, ᐃ * 40.078125, 27.833328247070312 * ᐃ, 43.078125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 37.33332824707031, ᐃ * 28.078125, ᐃ * 37.33332824707031, 28.078125 * ᐃ, 46.83332824707031 * ᐃ, 13.078125 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃᐃⲆ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(38.83332824707031 * ᐃ, ᐃ * 14.078125);
		Ⲇ.bezierCurveTo(34.83332824707031 * ᐃ, ᐃ * 24.078125, 34.83332824707031 * ᐃ, ᐃ * 24.078125, ᐃ * 30.833328247070312, ᐃ * 34.078125);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * ᐃⵠΔⲆ);
		return ΔΔ
	}

	function ⵠΔᐃⲆᐃΔᐃⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = 400 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(101 * ᐃ, ΔΔΔᐃⵠᐃⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 113, ᐃ * 243, 179 * ᐃ, ᐃ * 210, ᐃ * 219, 196 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 252, ᐃ * 203, 288 * ᐃ, 215 * ᐃ, ᐃ * 318, ᐃ * 233);
		Ⲇ.bezierCurveTo(304 * ᐃ, 254 * ᐃ, ᐃ * 258, ᐃ * 273, 215 * ᐃ, ᐃ * 296);
		Ⲇ.bezierCurveTo(161 * ᐃ, 287 * ᐃ, ᐃ * 119, 270 * ᐃ, 102 * ᐃ, ᐃ * 257);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃ * ᐃⵠΔⲆᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(99 * ᐃ, 258 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, 272.5 * ᐃ, ᐃ * 99, ᐃ * 272.5, 99 * ᐃ, 287 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 166, ᐃ * 319, 193 * ᐃ, ᐃ * 320, 212 * ᐃ, 324 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 292, ᐃ * 286, ᐃ * 312, ᐃ * 271, 319 * ᐃ, ᐃ * 263);
		Ⲇ.bezierCurveTo(320 * ᐃ, 249 * ᐃ, 320 * ᐃ, 241 * ᐃ, 318 * ᐃ, ᐃ * 234);
		Ⲇ.bezierCurveTo(ᐃ * 300, ᐃ * 254, ᐃ * 254, 277 * ᐃ, 216 * ᐃ, 294 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, 296 * ᐃ, 135 * ᐃ, 276 * ᐃ, ᐃ * 102, ᐃ * 258);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[1], ᐃΔⵠΔΔⵠⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(212 * ᐃ, 323 * ᐃ);
		Ⲇ.bezierCurveTo(211.5 * ᐃ, 310.5 * ᐃ, 211.5 * ᐃ, ᐃ * 310.5, 211 * ᐃ, ᐃ * 298);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * ⲆᐃΔⵠᐃⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 212, 210 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 286, 210 * ᐃ, 331 * ᐃ, 254 * ᐃ, 212 * ᐃ, 276 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, 276 * ᐃ, ᐃ * 112, 222 * ᐃ, 213 * ᐃ, 208 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃ * ⲆⵠΔΔⵠⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98 * ᐃ, ᐃ * 200);
		Ⲇ.bezierCurveTo(ᐃ * 126, ᐃ * 216, ᐃ * 177, 232 * ᐃ, 213 * ᐃ, 237 * ᐃ);
		Ⲇ.bezierCurveTo(266 * ᐃ, 218 * ᐃ, 288 * ᐃ, ᐃ * 209, 318 * ᐃ, 190 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 269, ᐃ * 164, ᐃ * 239, 158 * ᐃ, ᐃ * 214, 153 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 172, 131 * ᐃ, 182 * ᐃ, ᐃ * 98, ᐃ * 200);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃ * 14);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 97, ᐃ * 204);
		Ⲇ.bezierCurveTo(97 * ᐃ, ᐃ * 215.5, 97 * ᐃ, 215.5 * ᐃ, ᐃ * 97, ᐃ * 227);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 250, ᐃ * 179, ᐃ * ⵠⲆⲆᐃⲆᐃΔ, ᐃ * 212, 262 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 268, ᐃ * 244, ᐃ * 281, 233 * ᐃ, ᐃ * 318, ᐃ * 214);
		Ⲇ.bezierCurveTo(ᐃ * 318, ᐃ * 203, ᐃ * 318, 203 * ᐃ, ᐃ * 318, ᐃ * 192);
		Ⲇ.bezierCurveTo(ᐃ * 250, ᐃ * 225, ᐃ * 236, 231 * ᐃ, 214 * ᐃ, ᐃ * 239);
		Ⲇ.bezierCurveTo(ᐃ * 158, ᐃ * 228, ᐃ * 126, ᐃ * 215, ᐃ * 99, 201 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠⵠⲆΔ], 14 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 212, 260 * ᐃ);
		Ⲇ.bezierCurveTo(212 * ᐃ, ᐃ * 251.5, 212 * ᐃ, ᐃ * 251.5, ᐃ * 212, 243 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * 14);
		ΔⵠⲆ(Ⲇ, ᐃ * 161, 201 * ᐃ, ᐃ * 13);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 216, 205 * ᐃ, ᐃ * 8.06225774829855);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 216, 175 * ᐃ, ᐃ * 6.708203932499369);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆΔ]);
		ΔⵠⲆ(Ⲇ, 271 * ᐃ, 191 * ᐃ, 5.0990195135927845 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠᐃ]);
		ΔⵠⲆ(Ⲇ, 206 * ᐃ, ᐃ * 180, ᐃ * 11.180339887498949);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ⲆΔΔⲆⲆᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = 173 * ᐃ;
		Ⲇ.translate(ᐃ * ⲆⲆᐃⵠ, ᐃ * ⲆⲆᐃⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠᐃΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(86.25 * ᐃ, 84.953125 * ᐃ);
		Ⲇ.rotate(.32);
		ⲆᐃⵠΔ(Ⲇ, ⲆⲆΔΔⵠ, 42.15447781671598 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-ᐃⵠⲆⲆΔ * ᐃ, -5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 86.25, 84.953125 * ᐃ);
		Ⲇ.rotate(.32);
		ⲆᐃⵠΔ(Ⲇ, ᐃⵠⲆΔⲆ, 42.15447781671598 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * 5, ⲆΔᐃΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 86.25, ᐃ * 84.953125);
		Ⲇ.rotate(.28);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 30.463092423455635, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -5, -5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 86.25, 84.953125 * ᐃ);
		Ⲇ.rotate(.28);
		ⲆᐃⵠΔ(Ⲇ, ΔΔⲆⵠⵠ, 30.463092423455635 * ᐃ, ᐃ * ΔΔⵠᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[4], ᐃ * 4);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆⲆΔᐃ;
		Ⲇ.translate(ᐃ * ⲆⵠΔᐃᐃ, ᐃᐃⲆᐃⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 86.25 * ᐃ, 84.953125 * ᐃ, ᐃ * 18.867962264113206);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ⲆⲆᐃⵠ, ᐃ * -5);
		ΔⵠⲆ(Ⲇ, 86.25 * ᐃ, 84.953125 * ᐃ, ᐃ * 18.867962264113206);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ], ᐃᐃ[ⲆΔᐃⵠᐃ], ᐃ * 4);
		return ΔΔ
	}

	function ⲆⲆⵠⲆᐃⵠⵠᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 650 * ᐃ;
		ΔΔ.height = ᐃ * 650;
		Ⲇ.scale(1.9, 1.9);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 202.5, 147.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -96.5 * ᐃ, ᐃ * -21.5, ᐃ * 193, ᐃ * 193, ΔΔⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[1], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(203.5 * ᐃ, ᐃ * 121.5);
		ᐃΔⵠ(Ⲇ, -115.5 * ᐃ, ᐃ * -20.5, 231 * ᐃ, ᐃ * 41, Ⲇⵠᐃⵠᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ], ᐃᐃ[1], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(203.5 * ᐃ, 299 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -115.5, ᐃ * -20, 231 * ᐃ, 40 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[1], 12 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 298.5, 210 * ᐃ);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, -109 * ᐃ, 41 * ᐃ, 218 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[ⵠⲆⲆ], ᐃ * ⲆⵠⲆⵠⵠⲆⲆ);
		Ⲇ.save();
		Ⲇ.translate(108.5 * ᐃ, 210 * ᐃ);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, -109 * ᐃ, ᐃ * 41, 218 * ᐃ, ᐃ * ΔΔⵠᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ], ᐃᐃ[ΔᐃᐃⲆ], ᐃ * 12);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 204, ᐃ * 121.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -92, -9.5 * ᐃ, 184 * ᐃ, ᐃ * ΔⲆⲆⵠⵠ, ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⵠⵠΔ], ⵠΔᐃΔⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 197, 299 * ᐃ);
		ᐃΔⵠ(Ⲇ, 85 * ᐃ, -9 * ᐃ, ᐃ * -170, 18 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[3], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 94, 317 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110.5, 299.5 * ᐃ, ᐃ * 110.5, ᐃ * 299.5, 127 * ᐃ, 282 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[ᐃΔⲆⵠ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 279, 142 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 296.5, ᐃ * 125.5, 296.5 * ᐃ, 125.5 * ᐃ, ᐃ * 314, 109 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ᐃᐃ[1], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 124, 110.5 * ᐃ, ᐃ * 124, ᐃ * 128, ᐃ * 142);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠⵠⲆᐃⲆ, ᐃᐃ[1], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(281 * ᐃ, ᐃ * 282);
		Ⲇ.bezierCurveTo(296 * ᐃ, ᐃ * 297.5, 296 * ᐃ, ᐃ * 297.5, 311 * ᐃ, 313 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[ΔΔⲆΔ], ᐃ * 12);
		return ΔΔ
	}
	const Δⵠⵠⵠᐃ = ⵠⵠΔⵠΔ;

	function ΔᐃⵠΔⲆΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 170 * ᐃ;
		ΔΔ.height = ᐃ * 173;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ΔⲆⵠΔΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 86.25, ᐃ * 84.953125);
		ⲆᐃⵠΔ(Ⲇ, 7, 9.848857801796104 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.translate(ᐃ * -ᐃⵠⲆⲆΔ, ᐃ * -5);
		Ⲇ.save();
		Ⲇ.translate(86.25 * ᐃ, 84.953125 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 7, 9.848857801796104 * ᐃ, ᐃ * ᐃⵠⲆⲆΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⵠΔ], ᐃᐃ[9], ᐃ * ⵠΔⲆᐃΔ);
		return ΔΔ
	}

	function ⲆⲆΔⵠᐃⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = ᐃ * 173;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆΔ;
		Ⲇ.translate(ᐃ * 5, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 85.25, ᐃ * 82.953125);
		Ⲇ.bezierCurveTo(ᐃ * 98.25, ᐃ * 46.453125, 98.25 * ᐃ, 46.453125 * ᐃ, 111.25 * ᐃ, ᐃ * 9.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[0], ⵠΔⲆᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111.25 * ᐃ, 8.953125 * ᐃ);
		Ⲇ.bezierCurveTo(117.75 * ᐃ, 12.453125 * ᐃ, 117.75 * ᐃ, ᐃ * 12.453125, 124.25 * ᐃ, ᐃ * 15.953125);
		Ⲇ.bezierCurveTo(113.75 * ᐃ, 39.953125 * ᐃ, 113.75 * ᐃ, ᐃ * 39.953125, ᐃ * 103.25, 63.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97.75, ᐃ * 64.953125, 97.75 * ᐃ, ᐃ * 64.953125, 92.25 * ᐃ, 65.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		Ⲇ.translate(ᐃ * -5, -ⲆᐃᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111.25 * ᐃ, 8.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 117.75, ᐃ * 12.453125, 117.75 * ᐃ, ᐃ * 12.453125, 124.25 * ᐃ, 15.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 113.75, 39.953125 * ᐃ, ᐃ * 113.75, 39.953125 * ᐃ, 103.25 * ᐃ, 63.953125 * ᐃ);
		Ⲇ.bezierCurveTo(97.75 * ᐃ, 64.953125 * ᐃ, 97.75 * ᐃ, 64.953125 * ᐃ, 92.25 * ᐃ, ᐃ * 65.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(85.25 * ᐃ, 82.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 98.25, ᐃ * 46.453125, ᐃ * 98.25, 46.453125 * ᐃ, 111.25 * ᐃ, ᐃ * 9.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * ⵠΔⲆᐃΔ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃᐃⲆ;
		Ⲇ.translate(5 * ᐃ, ᐃ * ⵠⲆⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 87.25, 84.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 123.75, 100.453125 * ᐃ, 123.75 * ᐃ, 100.453125 * ᐃ, 160.25 * ᐃ, ᐃ * 115.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[ᐃΔⵠⵠ], ᐃ * ᐃΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(160.25 * ᐃ, ᐃ * 114.953125);
		Ⲇ.bezierCurveTo(ᐃ * 156.25, ᐃ * 122.453125, ᐃ * 156.25, ᐃ * 122.453125, ᐃ * 152.25, ᐃ * 129.953125);
		Ⲇ.bezierCurveTo(130.25 * ᐃ, ᐃ * 117.953125, ᐃ * 130.25, 117.953125 * ᐃ, 108.25 * ᐃ, ᐃ * 105.953125);
		Ⲇ.bezierCurveTo(107.25 * ᐃ, 98.953125 * ᐃ, ᐃ * 107.25, ᐃ * 98.953125, ᐃ * 106.25, 91.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		Ⲇ.translate(-5 * ᐃ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(160.25 * ᐃ, ᐃ * 114.953125);
		Ⲇ.bezierCurveTo(156.25 * ᐃ, ᐃ * 122.453125, 156.25 * ᐃ, 122.453125 * ᐃ, ᐃ * 152.25, ᐃ * 129.953125);
		Ⲇ.bezierCurveTo(ᐃ * 130.25, 117.953125 * ᐃ, 130.25 * ᐃ, 117.953125 * ᐃ, 108.25 * ᐃ, ᐃ * 105.953125);
		Ⲇ.bezierCurveTo(107.25 * ᐃ, ᐃ * 98.953125, 107.25 * ᐃ, ᐃ * 98.953125, ᐃ * 106.25, ᐃ * 91.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 87.25, ᐃ * 84.953125);
		Ⲇ.bezierCurveTo(123.75 * ᐃ, ᐃ * 100.453125, 123.75 * ᐃ, 100.453125 * ᐃ, 160.25 * ᐃ, ᐃ * 115.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[6], ⲆⲆⲆⵠᐃ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⲆⲆ;
		Ⲇ.translate(ᐃᐃⲆᐃΔ * ᐃ, ᐃ * ⲆᐃᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 83.25, 83.953125 * ᐃ);
		Ⲇ.bezierCurveTo(47.75 * ᐃ, ᐃ * 68.453125, ᐃ * 47.75, ᐃ * 68.453125, ᐃ * 12.25, 52.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[0], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(13.25 * ᐃ, ᐃ * 53.953125);
		Ⲇ.bezierCurveTo(17.25 * ᐃ, ᐃ * 46.953125, 17.25 * ᐃ, ᐃ * 46.953125, 21.25 * ᐃ, 39.953125 * ᐃ);
		Ⲇ.bezierCurveTo(42.75 * ᐃ, 52.453125 * ᐃ, 42.75 * ᐃ, ᐃ * 52.453125, ᐃ * 64.25, ᐃ * 64.953125);
		Ⲇ.bezierCurveTo(ᐃ * 64.25, ᐃ * 70.953125, 64.25 * ᐃ, 70.953125 * ᐃ, ᐃ * 64.25, ᐃ * 76.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.translate(-ⵠΔⲆⲆΔ * ᐃ, ᐃ * -ⲆᐃΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(13.25 * ᐃ, 53.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 17.25, ᐃ * 46.953125, ᐃ * 17.25, 46.953125 * ᐃ, ᐃ * 21.25, ᐃ * 39.953125);
		Ⲇ.bezierCurveTo(ᐃ * 42.75, ᐃ * 52.453125, ᐃ * 42.75, ᐃ * 52.453125, ᐃ * 64.25, ᐃ * 64.953125);
		Ⲇ.bezierCurveTo(ᐃ * 64.25, ᐃ * 70.953125, ᐃ * 64.25, ᐃ * 70.953125, ᐃ * 64.25, 76.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(83.25 * ᐃ, 83.953125 * ᐃ);
		Ⲇ.bezierCurveTo(47.75 * ᐃ, ᐃ * 68.453125, 47.75 * ᐃ, 68.453125 * ᐃ, 12.25 * ᐃ, 52.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[6], ᐃ * 4);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆΔᐃⲆ;
		Ⲇ.translate(5 * ᐃ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84.25, ᐃ * 86.953125);
		Ⲇ.bezierCurveTo(70.25 * ᐃ, ᐃ * 123.953125, 70.25 * ᐃ, ᐃ * 123.953125, ᐃ * 56.25, ᐃ * 160.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[0], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56.25 * ᐃ, ᐃ * 159.953125);
		Ⲇ.bezierCurveTo(ᐃ * 49.25, 155.453125 * ᐃ, ᐃ * 49.25, 155.453125 * ᐃ, ᐃ * 42.25, ᐃ * 150.953125);
		Ⲇ.bezierCurveTo(ᐃ * 54.25, 127.953125 * ᐃ, ᐃ * 54.25, 127.953125 * ᐃ, 66.25 * ᐃ, ᐃ * 104.953125);
		Ⲇ.bezierCurveTo(ᐃ * 71.25, ᐃ * 104.953125, 71.25 * ᐃ, 104.953125 * ᐃ, ᐃ * 76.25, ᐃ * 104.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.translate(ᐃ * -5, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56.25, ᐃ * 159.953125);
		Ⲇ.bezierCurveTo(ᐃ * 49.25, 155.453125 * ᐃ, 49.25 * ᐃ, 155.453125 * ᐃ, 42.25 * ᐃ, ᐃ * 150.953125);
		Ⲇ.bezierCurveTo(54.25 * ᐃ, ᐃ * 127.953125, 54.25 * ᐃ, ᐃ * 127.953125, ᐃ * 66.25, 104.953125 * ᐃ);
		Ⲇ.bezierCurveTo(71.25 * ᐃ, ᐃ * 104.953125, 71.25 * ᐃ, 104.953125 * ᐃ, ᐃ * 76.25, 104.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84.25 * ᐃ, 86.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70.25, 123.953125 * ᐃ, 70.25 * ᐃ, 123.953125 * ᐃ, ᐃ * 56.25, 160.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[6], Δⵠⵠⵠ * ᐃ);
		return ΔΔ
	}
	const ᐃΔⲆΔⲆⲆΔ = Ⲇⵠⵠⵠᐃⵠᐃ;

	function ⵠⵠΔⲆΔΔⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 75;
		var ΔᐃⲆ = ᐃ * 55;
		var ᐃⲆⲆ = ᐃ * 4;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(-30 * ᐃ, ᐃ * -40);
		Ⲇ.globalAlpha = ΔΔⲆΔ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * 56, 72 * ᐃ, ᐃ * 71, 72 * ᐃ, ᐃ * 71);
		Ⲇ.bezierCurveTo(72 * ᐃ, ᐃ * 71, 84 * ᐃ, 70 * ᐃ, ᐃ * 75, ᐃ * 82);
		Ⲇ.bezierCurveTo(70 * ᐃ, 88 * ᐃ, 61 * ᐃ, 89 * ᐃ, ᐃ * 58, 89 * ᐃ);
		Ⲇ.bezierCurveTo(55 * ᐃ, ᐃ * 89, ᐃ * 40, ᐃ * 89, ᐃ * 46, ᐃ * 77);
		Ⲇ.bezierCurveTo(46 * ᐃ, 77 * ᐃ, ᐃ * 43, ᐃ * 63, 43 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(ᐃ * 35, ᐃ * 61, ᐃ * 35, 53 * ᐃ, ᐃ * 42, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 48, 42 * ᐃ, 62 * ᐃ, ᐃ * 41, ᐃ * 66, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70, ᐃ * 45, ᐃ * 72, ᐃ * 48, ᐃ * 67, 56 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 68, 61 * ᐃ, 72 * ᐃ, 76 * ᐃ, ᐃ * 72, 76 * ᐃ);
		Ⲇ.bezierCurveTo(65 * ᐃ, ᐃ * 85, 61 * ᐃ, 85 * ᐃ, 49 * ᐃ, ᐃ * 83);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 83, 44 * ᐃ, ᐃ * 63, 44 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(54 * ᐃ, ᐃ * 63, ᐃ * 60, ᐃ * 63, 67 * ᐃ, 55 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.moveTo(ᐃ * 69, ᐃ * 65);
		Ⲇ.bezierCurveTo(70 * ᐃ, 61 * ᐃ, 81 * ᐃ, ᐃ * 66, 86 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(90 * ᐃ, ᐃ * 66, ᐃ * 97, 63 * ᐃ, 97 * ᐃ, ᐃ * 56);
		Ⲇ.bezierCurveTo(97 * ᐃ, ᐃ * 50, ᐃ * 93, ᐃ * 47, 88 * ᐃ, ᐃ * 44);
		Δⵠ(Ⲇ, false, ᐃᐃ[ⵠⵠⲆ], ᐃΔⲆⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.moveTo(50 * ᐃ, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 43, 52 * ᐃ, 50 * ᐃ, 54 * ᐃ, ᐃ * 51, 54 * ᐃ);
		Ⲇ.bezierCurveTo(54 * ᐃ, ᐃ * 54, ᐃ * 59, 52 * ᐃ, 59 * ᐃ, ᐃ * 49);
		Ⲇ.bezierCurveTo(59 * ᐃ, ᐃ * 48, ᐃ * 55, ᐃ * 46, ᐃ * 50, ᐃ * 48);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ΔᐃΔᐃ(ᐃ, ⲆⲆΔⲆⵠⲆΔ, ᐃⵠΔⲆΔΔᐃⲆᐃ, ᐃᐃ, ⵠᐃᐃᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 70 * ᐃ;
		var ΔᐃⲆ = 70 * ᐃ;
		var Δᐃᐃ = 10 * ᐃ;
		var ΔⵠᐃΔ = ᐃ * ᐃᐃⲆᐃΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ + ΔⵠᐃΔ;
		for (var ᐃⲆ = ⲆⵠⲆ; ᐃⲆ < ⲆⲆΔⲆⵠⲆΔ.length; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆⲆΔⲆⵠⲆΔ[ᐃⲆ];
			Ⲇ.globalAlpha = ᐃⵠᐃ.a;
			var ⵠⵠ = ᐃⵠᐃ.f(ᐃⵠΔⲆΔΔᐃⲆᐃ, ⵠⲆⲆⵠΔ, ᐃⵠᐃ.c);
			Ⲇ.save();
			Ⲇ.translate(ᐃᐃⲆ / 2 + ᐃⵠᐃ.x * ᐃ, ΔᐃⲆ / ᐃᐃΔⵠ + ᐃ * ᐃⵠᐃ.y);
			Ⲇ.rotate(ᐃⵠᐃ.r);
			Ⲇ.drawImage(ⵠⵠ, -ⵠⵠ.width / ⵠᐃⵠΔ, -ⵠⵠ.height / 2);
			Ⲇ.restore()
		}
		var ⲆᐃⲆ = [];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃᐃ.length > ᐃⲆ; ᐃⲆ++) {
			var ΔᐃᐃⲆΔΔⲆ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var ΔᐃᐃΔⵠ = ΔᐃᐃⲆΔΔⲆ.getContext(ⵠ[140]);
			ΔᐃᐃⲆΔΔⲆ.width = ᐃᐃⲆ;
			ΔᐃᐃⲆΔΔⲆ.height = ΔᐃⲆ + ΔⵠᐃΔ;
			ΔᐃᐃΔⵠ.globalAlpha = ⵠᐃᐃᐃⲆ / 2;
			if (ⵠΔⵠᐃ == ᐃⲆ) ᐃΔⵠ(ΔᐃᐃΔⵠ, 0, ΔⵠᐃΔ, ᐃᐃⲆ, ΔᐃⲆ, Δᐃᐃ);
			else ᐃΔⵠ(ΔᐃᐃΔⵠ, 0, ΔΔⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ + ΔⵠᐃΔ, Δᐃᐃ);
			Δⵠ(ΔᐃᐃΔⵠ, "#081a19");
			ΔᐃᐃΔⵠ.globalAlpha = ⵠᐃᐃᐃⲆ;
			if (ᐃⲆ == ⵠⵠΔⲆ) ᐃΔⵠ(ΔᐃᐃΔⵠ, 0, ΔⵠᐃΔ, ᐃᐃⲆ, ΔᐃⲆ, Δᐃᐃ);
			else ᐃΔⵠ(ΔᐃᐃΔⵠ, ⲆⵠⲆ, 0, ᐃᐃⲆ, ΔᐃⲆ, Δᐃᐃ);
			Δⵠ(ΔᐃᐃΔⵠ, ᐃᐃ[ᐃⲆ]);
			ΔᐃᐃΔⵠ.globalAlpha = 1;
			if (2 == ᐃⲆ) ΔᐃᐃΔⵠ.drawImage(ΔΔ, 0, ΔⵠᐃΔ);
			else ΔᐃᐃΔⵠ.drawImage(ΔΔ, 0, 0);
			ⲆᐃⲆ.push(ⵠᐃᐃ(ΔᐃᐃⲆΔΔⲆ))
		}
		return ⲆᐃⲆ
	}

	function ⲆⲆᐃⵠⵠⵠⲆᐃᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 195 * ᐃ;
		var ΔᐃⲆ = ᐃ * 190;
		var ᐃᐃΔ = ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ΔᐃⲆ / ⵠΔⲆΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⲆⵠᐃΔ = ᐃ * 10;
		var ⵠⵠⵠⵠⵠ = ᐃ * 35;
		var ᐃⲆⲆΔⲆ = 150 * ᐃ;
		var ΔⵠⲆⲆⵠ = ⵠⵠⵠⵠⵠ / ⵠⲆΔΔ;
		var ⵠΔⵠⲆᐃ = ᐃⲆⲆΔⲆ / ⲆᐃⲆᐃ;
		var ᐃⲆⲆ = 4 * ᐃ;
		Ⲇ.translate(ᐃᐃΔ - ᐃ * 5, ᐃⲆᐃ - ⵠΔⲆⲆΔ * ᐃ);
		Ⲇ.rotate(-Math.PI / 1.25);
		Ⲇ.globalAlpha = 1;
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.translate(ⲆⲆⲆ, ᐃΔⵠⵠ);
		Ⲇ.rotate(Math.PI / ᐃⵠⵠⵠ);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.translate(0, ⲆⲆᐃⵠ);
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ / 2, -ⵠΔⵠⲆᐃ / ⵠⵠⲆᐃ, ⵠⵠⵠⵠⵠ / ⵠΔⲆΔ, ᐃⲆⲆΔⲆ / 3, ⲆⵠᐃΔ - 2);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		return ΔΔ
	}
	const ⵠⵠᐃⵠ = ᐃⵠΔ;

	function ⵠΔⲆⵠᐃⲆᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 193 * ᐃ;
		var ΔᐃⲆ = 198 * ᐃ;
		var ᐃᐃΔ = ᐃ * 140;
		var ᐃⲆᐃ = 90 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⲆⵠᐃΔ = ᐃ * ⲆⲆᐃⵠΔ;
		var ⵠⵠⵠⵠⵠ = ᐃ * 25;
		var ᐃⲆⲆΔⲆ = ᐃ * 180;
		var ΔⵠⲆⲆⵠ = ⵠⵠⵠⵠⵠ / ⵠⵠΔⲆ;
		var ⵠΔⵠⲆᐃ = ᐃⲆⲆΔⲆ / ⵠΔⵠᐃ;
		var ᐃⲆⲆ = Δⵠⵠⵠ * ᐃ;
		Ⲇ.translate(ᐃ * -25, ᐃ * 1);
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.rotate(-Math.PI / ⲆⲆᐃⵠ);
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.translate(-30 * ᐃ, -25 * ᐃ);
		Ⲇ.rotate(Math.PI / Δᐃᐃᐃ);
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.translate(ᐃ * 35, ᐃ * 30);
		Ⲇ.rotate(Math.PI / 3);
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃ[ᐃⵠ], ᐃⲆⲆ);
		return ΔΔ
	}

	function ⵠᐃᐃⵠⵠⵠᐃⵠᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 149;
		ΔΔ.height = 356 * ᐃ;
		Ⲇ.save();
		Ⲇ.translate(74.5 * ᐃ, ᐃ * 177.5);
		ᐃΔⵠ(Ⲇ, -57.5 * ᐃ, -161.5 * ᐃ, 100 * ᐃ, 323 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[ΔᐃᐃⲆ], ᐃ * ⵠᐃᐃⲆ);
		Ⲇ.save();
		Ⲇ.translate(74.5 * ᐃ, 177.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -57.5 * ᐃ, ᐃ * 50.5, ᐃΔᐃⵠⵠ * ᐃ, ᐃ * 105, ᐃ * ⲆᐃᐃᐃⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔⲆᐃ], ᐃᐃ[1], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ⲆⲆᐃΔΔ * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(74.5 * ᐃ, ᐃ * 125, ᐃ * 118, ᐃ * 125, 118 * ᐃ, 125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ], ᐃᐃ[2], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(16 * ᐃ, 120 * ᐃ);
		Ⲇ.bezierCurveTo(74.5 * ᐃ, ᐃ * 120, 74.5 * ᐃ, 120 * ᐃ, 118 * ᐃ, ᐃ * 120);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ΔⵠⵠΔ], ⲆᐃᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(16 * ᐃ, ᐃ * 228);
		Ⲇ.bezierCurveTo(ᐃ * 75, ᐃ * 228.5, 118 * ᐃ, ᐃ * 228.5, ᐃ * 118, 229 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠᐃᐃⵠ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 16, 224 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 75, 224 * ᐃ, ᐃ * 118, 224 * ᐃ, ᐃ * 118, ᐃ * 224);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[Ⲇᐃⵠⵠ], ᐃ * ⵠⵠΔⲆᐃ);
		Ⲇ.save();
		Ⲇ.translate(72 * ᐃ, ᐃ * 68.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -41.5, -36.5 * ᐃ, 73 * ᐃ, 73 * ᐃ, ᐃᐃᐃⵠΔⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ]);
		Ⲇ.save();
		Ⲇ.translate(72 * ᐃ, 175.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -41.5 * ᐃ, -38.5 * ᐃ, 73 * ᐃ, ᐃ * 73, ᐃ * ΔᐃⵠⵠⲆΔⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.save();
		Ⲇ.translate(72 * ᐃ, 279.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -41.5 * ᐃ, ᐃ * -40.5, 73 * ᐃ, 73 * ᐃ, 13 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔᐃⲆⲆᐃⵠⲆ, ᐃ * 338);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 338, ᐃ * 118, ᐃ * 338, ᐃ * 118, 338 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ], ᐃᐃ[ᐃᐃΔⵠ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⲆⲆΔᐃⵠΔᐃ, 333 * ᐃ);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 333, 118 * ᐃ, 333 * ᐃ, 118 * ᐃ, 333 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⵠⵠΔ], ⲆⵠΔⲆⲆ * ᐃ);
		return ΔΔ
	}
	const ᐃᐃⵠᐃ = ⵠⵠⲆⵠΔ;

	function ΔᐃⲆᐃⲆΔⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 145 * ᐃ;
		var ΔᐃⲆ = 145 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / ⵠΔⲆΔ;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var Δᐃᐃ = 70 * ᐃ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = .4;
		ΔⵠⲆ(Ⲇ, ⵠⵠⲆⲆ, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		var Δᐃᐃ = ᐃ * 50;
		Ⲇ.translate(0, 0);
		Ⲇ.globalAlpha = .8;
		ΔⵠⲆ(Ⲇ, 0, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		var Δᐃᐃ = 35 * ᐃ;
		Ⲇ.translate(ΔⲆᐃⲆ, 0);
		Ⲇ.globalAlpha = .8;
		ΔⵠⲆ(Ⲇ, ᐃΔⵠⵠ, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		var Δᐃᐃ = ᐃ * 20;
		Ⲇ.translate(Δⵠⵠ, 0);
		Ⲇ.globalAlpha = .8;
		ΔⵠⲆ(Ⲇ, 0, Ⲇᐃⵠᐃ, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}
	const ΔᐃⲆⵠⲆⵠⵠ = ⵠᐃⵠⵠⵠ;

	function ⲆᐃΔⵠΔⲆΔ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 370;
		var ΔᐃⲆ = ᐃ * 370;
		var ᐃᐃΔ = ᐃᐃⲆ / ᐃᐃΔⵠ;
		var ᐃⲆᐃ = ΔᐃⲆ / ᐃΔⵠᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var Δᐃᐃ = ᐃ * 180;
		Ⲇ.globalAlpha = .2;
		ΔⵠⲆ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ΔⲆΔᐃⵠⲆⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 135;
		var ΔᐃⲆ = 190 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ⲆⵠᐃΔ = ᐃ * 10;
		var ⵠⵠⵠⵠⵠ = 25 * ᐃ;
		var ᐃⲆⲆΔⲆ = 180 * ᐃ;
		var ΔⵠⲆⲆⵠ = ⵠⵠⵠⵠⵠ / ⵠᐃᐃⵠ;
		var ⵠΔⵠⲆᐃ = ᐃⲆⲆΔⲆ / ⵠⵠⲆᐃ;
		var ᐃⲆⲆ = ᐃ * 4;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.rotate(-Math.PI / 5);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ], ᐃᐃ[ᐃⵠⵠ], ᐃⲆⲆ);
		Ⲇ.translate(0, ΔⲆⵠ);
		Ⲇ.rotate(Math.PI / ⵠᐃᐃΔᐃ);
		Ⲇ.globalAlpha = 1;
		ᐃΔⵠ(Ⲇ, -ΔⵠⲆⲆⵠ, -ⵠΔⵠⲆᐃ, ⵠⵠⵠⵠⵠ, ᐃⲆⲆΔⲆ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		return ΔΔ
	}

	function ᐃⵠᐃⲆⵠΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 155;
		ΔΔ.height = 127 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ⲆᐃⲆᐃᐃ * ᐃ);
		Ⲇ.translate(-7 * ᐃ, ᐃ * -ᐃᐃⲆⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 86, ᐃ * 64, 117 * ᐃ, ᐃ * 66, 134 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152, 69 * ᐃ, ᐃ * 165, 86 * ᐃ, ᐃ * 152, ᐃ * 104);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 87, 122 * ᐃ, ᐃ * 89, 98 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, ᐃ * 89, 41 * ᐃ, 91 * ᐃ, 36 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 19, 92 * ᐃ, 31 * ᐃ, 71 * ᐃ, 54 * ᐃ, 69 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, -8 * ᐃ);
		Ⲇ.translate(ⵠᐃⲆⲆⲆ * ᐃ, ⲆᐃᐃΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, 28 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39, ᐃ * 30, 37 * ᐃ, ᐃ * 31, ᐃ * 40, ᐃ * 32);
		Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 45, 26 * ᐃ, ᐃ * 58, ᐃ * 29, 66 * ᐃ);
		Ⲇ.bezierCurveTo(86.5 * ᐃ, 65 * ᐃ, 86.5 * ᐃ, ᐃ * 65, ᐃ * 144, ᐃ * 64);
		Ⲇ.bezierCurveTo(151 * ᐃ, 42 * ᐃ, ᐃ * 132, ᐃ * 20, ᐃ * 120, 16 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 12, ᐃ * 89, ᐃ * 0, 73 * ᐃ, 3 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51, Δᐃⵠⵠ * ᐃ, 36 * ᐃ, 20 * ᐃ, 25 * ᐃ, 28 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ᐃᐃⲆΔ], ᐃ * ⲆⲆⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 49, 31 * ᐃ, ᐃ * 53, 29 * ᐃ, 62 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(59 * ᐃ, 24 * ᐃ, 56 * ᐃ, 25 * ᐃ, 53 * ᐃ, 24 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * ᐃᐃΔⲆⵠ, ᐃ * 84, ᐃ * 12, ᐃ * 120, 16 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃΔᐃⵠΔ * ᐃ, 96 * ᐃ, ᐃΔΔⲆⲆ * ᐃ, 85 * ᐃ, ᐃ * ⵠΔⲆΔ);
		Ⲇ.bezierCurveTo(59 * ᐃ, ⲆⵠⵠΔ * ᐃ, 54 * ᐃ, ⲆⵠΔΔⵠ * ᐃ, 40 * ᐃ, ᐃ * 17);
		Ⲇ.bezierCurveTo(ᐃ * 32.5, 22.5 * ᐃ, ᐃ * 32.5, ᐃ * 22.5, ᐃ * 25, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 32, 30 * ᐃ, ᐃ * 32, 30 * ᐃ, ᐃ * 39, 32 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 39, 30 * ᐃ, ᐃ * 37, 31 * ᐃ, ᐃ * 40, ᐃ * 32);
		Ⲇ.bezierCurveTo(ᐃ * 22, 45 * ᐃ, 26 * ᐃ, 58 * ᐃ, 29 * ᐃ, 66 * ᐃ);
		Ⲇ.bezierCurveTo(86.5 * ᐃ, ᐃ * 65, 86.5 * ᐃ, ᐃ * 65, ᐃ * 144, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, 42 * ᐃ, ᐃ * 132, ᐃ * ⵠᐃⲆΔ, ᐃ * 120, ᐃΔᐃⲆⵠΔⲆ * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ⲆΔᐃᐃⲆ * ᐃ, 89 * ᐃ, ⲆⵠⲆ * ᐃ, ᐃ * 73, ᐃⲆᐃΔⵠ * ᐃ);
		Ⲇ.bezierCurveTo(51 * ᐃ, ⲆⵠΔᐃᐃ * ᐃ, ᐃ * 36, ᐃ * 20, ᐃ * 25, ᐃ * 28);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[2], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, ⵠΔΔᐃΔ * ᐃ, ᐃ * 38, ᐃ * 14.866068747318506);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃᐃ], ᐃᐃ[5], ᐃ * ⵠⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39 * ᐃ, ᐃ * 30);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 38, ᐃ * 25, ᐃ * 50, ᐃ * 26, 60 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 36.5, 58.5 * ᐃ, 36.5 * ᐃ, ᐃ * 58.5, 47 * ᐃ, 57 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], ᐃⵠⲆⲆⲆ * ᐃ);
		Ⲇ.translate(-ΔᐃⵠⲆⵠ * ᐃ, ᐃ * -20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, ᐃ * 68);
		Ⲇ.bezierCurveTo(ᐃ * 86, 64 * ᐃ, 117 * ᐃ, 66 * ᐃ, 134 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(152 * ᐃ, ᐃ * 69, 165 * ᐃ, 86 * ᐃ, 152 * ᐃ, ᐃ * 104);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 87, ᐃ * 122, 89 * ᐃ, ᐃ * 98, 90 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, ᐃ * 89, 41 * ᐃ, ᐃ * 91, 36 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(19 * ᐃ, ᐃ * 92, ᐃ * 31, 71 * ᐃ, 54 * ᐃ, ᐃ * 69);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃᐃ], ᐃᐃ[ⲆᐃᐃΔ], ᐃΔΔΔ * ᐃ);
		return ΔΔ
	}

	function ⲆᐃᐃⵠΔᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 155;
		ΔΔ.height = 127 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⵠᐃⲆᐃ, 8 * ᐃ);
		Ⲇ.translate(ᐃ * -7, ᐃ * -ⵠΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, ᐃ * 68);
		Ⲇ.bezierCurveTo(86 * ᐃ, 64 * ᐃ, ᐃ * 117, ᐃ * 66, 134 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152, 69 * ᐃ, ᐃ * 165, 86 * ᐃ, ᐃ * 152, ᐃ * 104);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 87, ᐃ * 122, 89 * ᐃ, 98 * ᐃ, ᐃ * 90);
		Ⲇ.bezierCurveTo(64 * ᐃ, 89 * ᐃ, ᐃ * 41, ᐃ * 91, 36 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 19, 92 * ᐃ, ᐃ * 31, ᐃ * 71, ᐃ * 54, ᐃ * 69);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔⲆⵠ, -ⲆΔΔΔᐃ * ᐃ);
		Ⲇ.translate(7 * ᐃ, ᐃ * 20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 24, ᐃ * 28);
		Ⲇ.bezierCurveTo(39 * ᐃ, ᐃ * 30, 37 * ᐃ, ᐃ * 31, ᐃ * 40, ᐃ * 32);
		Ⲇ.bezierCurveTo(ᐃ * 22, 45 * ᐃ, 26 * ᐃ, ᐃ * 58, 29 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 86.5, 65 * ᐃ, ᐃ * 86.5, 65 * ᐃ, ᐃ * 144, 64 * ᐃ);
		Ⲇ.bezierCurveTo(151 * ᐃ, 42 * ᐃ, ᐃ * 132, 20 * ᐃ, ᐃ * 120, ᐃ * ᐃΔᐃᐃⲆ);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * ⵠⲆⲆΔⵠⵠⵠ, ᐃ * 89, ⲆΔᐃ * ᐃ, ᐃ * 73, ᐃ * ᐃⵠⵠⵠ);
		Ⲇ.bezierCurveTo(51 * ᐃ, ᐃ * ⲆᐃᐃΔ, ᐃ * 36, 20 * ᐃ, 25 * ᐃ, ᐃ * 28);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠΔⲆΔ], ᐃ * ᐃΔⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 31, ᐃ * 53, 29 * ᐃ, 62 * ᐃ, ᐃ * 27);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 24, ᐃ * 56, ᐃ * 25, ᐃ * 53, ᐃ * 24);
		Ⲇ.bezierCurveTo(67 * ᐃ, ᐃ * ᐃᐃⵠⲆᐃⲆΔ, ᐃ * 84, ᐃ * ΔΔᐃⵠΔΔⵠ, ᐃ * 120, ᐃ * 16);
		Ⲇ.bezierCurveTo(ᐃ * 107, 11 * ᐃ, ᐃ * 96, ᐃ * ᐃⵠⵠΔⲆ, ᐃ * 85, 2 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * ΔΔⲆⲆᐃ, ᐃ * 54, ⲆΔⵠΔᐃ * ᐃ, 40 * ᐃ, ᐃ * 17);
		Ⲇ.bezierCurveTo(ᐃ * 32.5, 22.5 * ᐃ, 32.5 * ᐃ, 22.5 * ᐃ, ᐃ * 25, 28 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 32, 30 * ᐃ, 32 * ᐃ, ᐃ * 30, 39 * ᐃ, ᐃ * 32);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, 28 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39, ᐃ * 30, 37 * ᐃ, ᐃ * 31, ᐃ * 40, ᐃ * 32);
		Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 45, 26 * ᐃ, 58 * ᐃ, 29 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 86.5, ᐃ * 65, 86.5 * ᐃ, 65 * ᐃ, ᐃ * 144, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 42, ᐃ * 132, ᐃ * ᐃⵠᐃΔ, ᐃ * 120, ᐃΔⲆⲆⲆᐃᐃ * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * ⵠⲆⲆΔⵠⵠⵠ, ᐃ * 89, ΔΔⵠᐃ * ᐃ, 73 * ᐃ, ᐃ * Ⲇᐃⵠⵠ);
		Ⲇ.bezierCurveTo(51 * ᐃ, 5 * ᐃ, ᐃ * 36, ᐃ * 20, ᐃ * 25, ᐃ * 28);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃⲆⵠⲆ, ᐃᐃ[2], ᐃ * ⵠΔⲆᐃΔ);
		ΔⵠⲆ(Ⲇ, 18 * ᐃ, 38 * ᐃ, 14.866068747318506 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * ⲆⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 39, ᐃ * 30);
		Ⲇ.bezierCurveTo(27 * ᐃ, ᐃ * 38, ᐃ * 25, ᐃ * 50, ᐃ * 26, ᐃ * 60);
		Ⲇ.bezierCurveTo(ᐃ * 36.5, ᐃ * 58.5, ᐃ * 36.5, ᐃ * 58.5, ᐃ * 47, ᐃ * 57);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[ᐃΔⲆⲆⵠ], 4 * ᐃ);
		Ⲇ.translate(-7 * ᐃ, -20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(27 * ᐃ, ᐃ * 74);
		Ⲇ.bezierCurveTo(38 * ᐃ, 77.5 * ᐃ, 38 * ᐃ, 77.5 * ᐃ, 49 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54.5, ᐃ * 75.5, ᐃ * 54.5, 75.5 * ᐃ, 60 * ᐃ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, 72 * ᐃ, ᐃ * 64, ᐃ * 72, ᐃ * 68, 74 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.5, 67.5 * ᐃ, 80.5 * ᐃ, ᐃ * 67.5, ᐃ * 93, 61 * ᐃ);
		Ⲇ.bezierCurveTo(104.5 * ᐃ, 68 * ᐃ, 104.5 * ᐃ, ᐃ * 68, ᐃ * 116, ᐃ * 75);
		Ⲇ.bezierCurveTo(120.5 * ᐃ, ᐃ * 72.5, 120.5 * ᐃ, ᐃ * 72.5, 125 * ᐃ, ᐃ * 70);
		Ⲇ.bezierCurveTo(129 * ᐃ, ᐃ * 75, 129 * ᐃ, ᐃ * 75, 133 * ᐃ, 80 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145.5, 76.5 * ᐃ, 145.5 * ᐃ, 76.5 * ᐃ, 158 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(158 * ᐃ, ᐃ * 87, ᐃ * 158, 93 * ᐃ, ᐃ * 155, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * 152.5, ᐃ * 96, ᐃ * 152.5, ᐃ * 96, ᐃ * 150, 97 * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * 85, 108 * ᐃ, 86 * ᐃ, 93 * ᐃ, ᐃ * 85);
		Ⲇ.bezierCurveTo(64 * ᐃ, ᐃ * 85, 52 * ᐃ, ᐃ * 95, 38 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, ᐃ * 98.5, 36 * ᐃ, ᐃ * 98.5, 34 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 98, 27 * ᐃ, ᐃ * 91, 27 * ᐃ, ᐃ * 76);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ΔΔⲆⵠⵠ], 6 * ᐃ);
		return ΔΔ
	}

	function ⵠΔᐃⵠⵠΔⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 205;
		var ΔᐃⲆ = 205 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ΔᐃⲆ / ⲆⲆⵠΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var Δᐃᐃ = ᐃ * 100;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		ΔⵠⲆ(Ⲇ, 0, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		return ΔΔ
	}
	const ᐃⲆⵠΔ = ⵠᐃΔᐃ;

	function ⲆΔⲆΔⵠⵠᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 40;
		var ΔᐃⲆ = ᐃ * 40;
		var Δᐃᐃ = ᐃ * 16;
		var ᐃⲆⲆ = ᐃ * 4;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃⲆ / ⲆⲆⵠΔ, ΔᐃⲆ / ⵠⵠΔⲆ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, ⵠᐃⲆᐃ, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		return ΔΔ
	}

	function ΔᐃΔⲆᐃᐃⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 220 * ᐃ;
		var ΔᐃⲆ = ᐃ * 220;
		var Δᐃᐃ = 16 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃⲆ / ⵠΔⲆΔ, ΔᐃⲆ / ⵠⵠⲆᐃ);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ΔⲆᐃⲆ, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠᐃΔᐃ;
		return ΔΔ
	}

	function ᐃΔⲆⵠᐃ(ᐃ, ᐃᐃ, ᐃᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 210;
		var ΔᐃⲆ = 205 * ᐃ;
		var w2 = ᐃᐃⲆ / ⵠⵠⲆᐃ;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / ᐃᐃΔⵠ;
		var ⲆⵠᐃΔ = 30 * ᐃ;
		var ΔⵠᐃΔ = ⵠⵠΔⵠ * ᐃ;
		var ᐃⵠⵠᐃⵠ = ᐃ * 200;
		var Ⲇᐃⵠⵠⵠ = ᐃ * 180;
		var Δᐃᐃ = ᐃ * 80;
		var ⲆᐃᐃⲆᐃ = ᐃⵠⵠᐃⵠ / 2;
		var ⲆΔⵠⲆΔ = Ⲇᐃⵠⵠⵠ / 2;
		var ᐃⲆⲆ = ᐃΔⲆΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		ΔΔ.width = ᐃ * 419;
		ΔΔ.height = ᐃ * 412;
		if (ΔⲆᐃ == ᐃⲆ) {
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 10, ᐃ * ΔⵠⲆΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(117.99996948242188 * ᐃ, ᐃ * 216.40621948242188);
			Ⲇ.bezierCurveTo(ᐃ * 86.99996948242188, ᐃ * 221.40621948242188, ᐃ * 74.99996948242188, ᐃ * 217.40621948242188, ᐃ * 60.999969482421875, 205.40621948242188 * ᐃ);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⲆᐃΔ], ⵠᐃᐃᐃ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(114.99996948242188 * ᐃ, 227.40621948242188 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 90.99996948242188, ᐃ * 233.40621948242188, ᐃ * 66.99996948242188, ᐃ * 228.40621948242188, ᐃ * 43.999969482421875, 225.40621948242188 * ᐃ);
			Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[ᐃⵠᐃᐃ], ΔⲆΔⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(110.99996948242188 * ᐃ, ᐃ * 236.40621948242188);
			Ⲇ.bezierCurveTo(94.99996948242188 * ᐃ, ᐃ * 244.40621948242188, 79.99996948242188 * ᐃ, ᐃ * 249.40621948242188, 60.999969482421875 * ᐃ, 249.40621948242188 * ᐃ);
			Δⵠ(Ⲇ, ⵠⵠⲆᐃⲆ, ᐃᐃ[4], ⵠⵠⲆⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(111.99996948242188 * ᐃ, ᐃ * 206.29513549804688);
			Ⲇ.bezierCurveTo(ᐃ * 91.99996948242188, ᐃ * 206.29513549804688, 87.99996948242188 * ᐃ, ᐃ * 201.29513549804688, ᐃ * 79.99996948242188, ᐃ * 192.29513549804688);
			Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[ⵠΔⲆᐃΔ], ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(109.99996948242188 * ᐃ, ᐃ * 249.18402099609375);
			Ⲇ.bezierCurveTo(ᐃ * 97.99996948242188, ᐃ * 263.18402099609375, ᐃ * 85.99996948242188, ᐃ * 271.18402099609375, 65.99996948242188 * ᐃ, 277.18402099609375 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃⲆⵠⲆ, ᐃᐃ[ⲆⵠΔΔⲆ], ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 105.99996948242188, 192.18402099609375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 99.49996948242188, 197.68402099609375 * ᐃ, ᐃ * 99.49996948242188, 197.68402099609375 * ᐃ, 92.99996948242188 * ᐃ, 203.18402099609375 * ᐃ);
			Ⲇ.bezierCurveTo(95.99996948242188 * ᐃ, 213.18402099609375 * ᐃ, 95.99996948242188 * ᐃ, 215.18402099609375 * ᐃ, ᐃ * 89.99996948242188, ᐃ * 219.18402099609375);
			Ⲇ.bezierCurveTo(91.99996948242188 * ᐃ, 223.18402099609375 * ᐃ, ᐃ * 91.99996948242188, ᐃ * 226.18402099609375, ᐃ * 87.99996948242188, ᐃ * 230.18402099609375);
			Ⲇ.bezierCurveTo(89.99996948242188 * ᐃ, ᐃ * 234.18402099609375, 91.99996948242188 * ᐃ, 237.18402099609375 * ᐃ, ᐃ * 90.99996948242188, ᐃ * 244.18402099609375);
			Ⲇ.bezierCurveTo(ᐃ * 96.99996948242188, 252.18402099609375 * ᐃ, ᐃ * 96.99996948242188, ᐃ * 256.18402099609375, ᐃ * 95.99996948242188, 262.18402099609375 * ᐃ);
			Ⲇ.bezierCurveTo(106.49996948242188 * ᐃ, ᐃ * 264.18402099609375, 106.49996948242188 * ᐃ, 264.18402099609375 * ᐃ, ᐃ * 116.99996948242188, 266.18402099609375 * ᐃ);
			Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[4], 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(104.99996948242188 * ᐃ, ᐃ * 183.29513549804688);
			Ⲇ.bezierCurveTo(ᐃ * 99.99996948242188, ᐃ * 193.29513549804688, ᐃ * 93.99996948242188, ᐃ * 195.29513549804688, ᐃ * 89.99996948242188, 201.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 86.99996948242188, 212.29513549804688 * ᐃ, 85.99996948242188 * ᐃ, 214.29513549804688 * ᐃ, 81.99996948242188 * ᐃ, 215.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(83.99996948242188 * ᐃ, 223.29513549804688 * ᐃ, 83.99996948242188 * ᐃ, ᐃ * 227.29513549804688, ᐃ * 79.99996948242188, 230.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 83.99996948242188, ᐃ * 235.29513549804688, 84.99996948242188 * ᐃ, 240.29513549804688 * ᐃ, 79.99996948242188 * ᐃ, 246.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(86.99996948242188 * ᐃ, ᐃ * 251.29513549804688, 91.99996948242188 * ᐃ, ᐃ * 256.2951354980469, ᐃ * 89.99996948242188, ᐃ * 266.2951354980469);
			Ⲇ.bezierCurveTo(ᐃ * 102.99996948242188, 269.2951354980469 * ᐃ, 102.99996948242188 * ᐃ, ᐃ * 269.2951354980469, ᐃ * 115.99996948242188, ᐃ * 272.2951354980469);
			Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[Δⵠⵠⵠ], 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(107.99996948242188 * ᐃ, 177.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(95.99996948242188 * ᐃ, 187.35067749023438 * ᐃ, 95.99996948242188 * ᐃ, ᐃ * 187.35067749023438, ᐃ * 83.99996948242188, 196.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 82.99996948242188, 203.85067749023438 * ᐃ, ᐃ * 80.99996948242188, ᐃ * 209.85067749023438, ᐃ * 72.99996948242188, ᐃ * 210.85067749023438);
			Ⲇ.bezierCurveTo(ᐃ * 73.99996948242188, ᐃ * 220.85067749023438, ᐃ * 73.99996948242188, 221.85067749023438 * ᐃ, ᐃ * 66.99996948242188, 227.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 71.99996948242188, 235.85067749023438 * ᐃ, 73.99996948242188 * ᐃ, ᐃ * 239.85067749023438, ᐃ * 71.99996948242188, ᐃ * 247.85067749023438);
			Ⲇ.bezierCurveTo(ᐃ * 80.99996948242188, 257.8506774902344 * ᐃ, 81.99996948242188 * ᐃ, ᐃ * 263.8506774902344, ᐃ * 77.99996948242188, 271.8506774902344 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 95.49996948242188, 272.8506774902344 * ᐃ, ᐃ * 95.49996948242188, 272.8506774902344 * ᐃ, ᐃ * 112.99996948242188, ᐃ * 273.8506774902344);
			Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ᐃΔⲆΔ], 3 * ᐃ);
			Ⲇ.restore()
		} else if (ᐃⲆ == 2) {
			Ⲇ.save();
			Ⲇ.translate(130 * ᐃ, ᐃ * 35);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 170.99996948242188, 133.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(195.99996948242188 * ᐃ, ᐃ * 129.85067749023438, 196.99996948242188 * ᐃ, ᐃ * 111.85067749023438, 200.99996948242188 * ᐃ, 88.85067749023438 * ᐃ);
			Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[4], 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 169.99996948242188, ᐃ * 143.85067749023438);
			Ⲇ.bezierCurveTo(189.99996948242188 * ᐃ, 145.85067749023438 * ᐃ, 207.99996948242188 * ᐃ, ᐃ * 126.85067749023438, ᐃ * 222.99996948242188, 100.85067749023438 * ᐃ);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⲆΔⲆ], ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(170.99996948242188 * ᐃ, 157.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(193.99996948242188 * ᐃ, ᐃ * 160.85067749023438, ᐃ * 210.99996948242188, 151.85067749023438 * ᐃ, 232.99996948242188 * ᐃ, 139.85067749023438 * ᐃ);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃΔᐃΔ], ᐃ * ⲆⵠⵠⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(169.99996948242188 * ᐃ, 168.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(192.99996948242188 * ᐃ, ᐃ * 175.85067749023438, 203.99996948242188 * ᐃ, 177.85067749023438 * ᐃ, 245.99996948242188 * ᐃ, ᐃ * 168.85067749023438);
			Δⵠ(Ⲇ, ⲆⲆΔΔᐃ, ᐃᐃ[4], ⵠΔᐃⲆ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 167.99996948242188, 168.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(183.99996948242188 * ᐃ, ᐃ * 189.85067749023438, 191.99996948242188 * ᐃ, ᐃ * 193.85067749023438, 220.99996948242188 * ᐃ, 196.85067749023438 * ᐃ);
			Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[ⵠᐃⵠᐃⲆ], ⵠⲆⵠⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 176.99996948242188, ᐃ * 117.85067749023438);
			Ⲇ.bezierCurveTo(181.99996948242188 * ᐃ, ᐃ * 120.85067749023438, ᐃ * 181.99996948242188, ᐃ * 120.85067749023438, ᐃ * 186.99996948242188, 123.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(183.99996948242188 * ᐃ, 137.85067749023438 * ᐃ, 185.99996948242188 * ᐃ, ᐃ * 136.85067749023438, ᐃ * 190.99996948242188, ᐃ * 136.85067749023438);
			Ⲇ.bezierCurveTo(186.99996948242188 * ᐃ, ᐃ * 147.85067749023438, ᐃ * 189.99996948242188, 152.85067749023438 * ᐃ, 193.99996948242188 * ᐃ, 155.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 187.99996948242188, 165.85067749023438 * ᐃ, 190.99996948242188 * ᐃ, ᐃ * 169.85067749023438, ᐃ * 190.99996948242188, 172.85067749023438 * ᐃ);
			Ⲇ.bezierCurveTo(186.99996948242188 * ᐃ, ᐃ * 183.85067749023438, 186.99996948242188 * ᐃ, ᐃ * 185.85067749023438, 189.99996948242188 * ᐃ, ᐃ * 188.85067749023438);
			Ⲇ.bezierCurveTo(ᐃ * 182.49996948242188, ᐃ * 195.35067749023438, ᐃ * 182.49996948242188, ᐃ * 195.35067749023438, ᐃ * 174.99996948242188, ᐃ * 201.85067749023438);
			Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[4], ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 176.99996948242188, 112.18402099609375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 183.99996948242188, ᐃ * 119.18402099609375, 186.99996948242188 * ᐃ, 117.18402099609375 * ᐃ, ᐃ * 192.99996948242188, ᐃ * 116.18402099609375);
			Ⲇ.bezierCurveTo(ᐃ * 191.99996948242188, ᐃ * 126.18402099609375, 193.99996948242188 * ᐃ, 130.18402099609375 * ᐃ, ᐃ * 199.99996948242188, ᐃ * 130.18402099609375);
			Ⲇ.bezierCurveTo(194.99996948242188 * ᐃ, ᐃ * 145.18402099609375, ᐃ * 197.99996948242188, ᐃ * 147.18402099609375, 201.99996948242188 * ᐃ, 153.18402099609375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 196.99996948242188, ᐃ * 164.18402099609375, ᐃ * 197.99996948242188, ᐃ * 169.18402099609375, 201.99996948242188 * ᐃ, ᐃ * 174.18402099609375);
			Ⲇ.bezierCurveTo(ᐃ * 194.99996948242188, 184.18402099609375 * ᐃ, 196.99996948242188 * ᐃ, ᐃ * 187.18402099609375, ᐃ * 200.99996948242188, ᐃ * 193.18402099609375);
			Ⲇ.bezierCurveTo(185.99996948242188 * ᐃ, ᐃ * 195.18402099609375, 181.99996948242188 * ᐃ, ᐃ * 201.18402099609375, 174.99996948242188 * ᐃ, 210.18402099609375 * ᐃ);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[4], 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(176.99996948242188 * ᐃ, ᐃ * 101.29513549804688);
			Ⲇ.bezierCurveTo(181.99996948242188 * ᐃ, 108.29513549804688 * ᐃ, ᐃ * 189.99996948242188, 110.29513549804688 * ᐃ, 195.99996948242188 * ᐃ, 107.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(197.99996948242188 * ᐃ, ᐃ * 121.29513549804688, 200.99996948242188 * ᐃ, 122.29513549804688 * ᐃ, ᐃ * 206.99996948242188, ᐃ * 122.29513549804688);
			Ⲇ.bezierCurveTo(ᐃ * 201.99996948242188, ᐃ * 138.29513549804688, 204.99996948242188 * ᐃ, ᐃ * 142.29513549804688, 211.99996948242188 * ᐃ, ᐃ * 148.29513549804688);
			Ⲇ.bezierCurveTo(ᐃ * 201.99996948242188, 156.29513549804688 * ᐃ, ᐃ * 205.99996948242188, 167.29513549804688 * ᐃ, 213.99996948242188 * ᐃ, ᐃ * 173.29513549804688);
			Ⲇ.bezierCurveTo(ᐃ * 204.99996948242188, 181.29513549804688 * ᐃ, ᐃ * 204.99996948242188, ᐃ * 187.29513549804688, 205.99996948242188 * ᐃ, 193.29513549804688 * ᐃ);
			Ⲇ.bezierCurveTo(190.99996948242188 * ᐃ, 198.29513549804688 * ᐃ, ᐃ * 181.99996948242188, 205.29513549804688 * ᐃ, ᐃ * 174.99996948242188, 214.29513549804688 * ᐃ);
			Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[Δⵠⵠⵠ], 3 * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.translate(ΔΔ.width / ⵠⲆΔΔ, ΔΔ.height / ΔⵠΔΔ);
		if (!ᐃⲆ) {
			Ⲇ.globalAlpha = .5;
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ + ΔⵠᐃΔ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
			ᐃᐃᐃ && Ⲇ.rotate(Math.PI);
			Ⲇ.globalAlpha = ⵠⲆⲆ;
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃⲆⲆ);
			Ⲇ.globalAlpha = ΔΔⲆΔ;
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ + ᐃ * 35, -ⲆΔⵠⲆΔ + 20 * ᐃ, ᐃⵠⵠᐃⵠ - ᐃ * 50, Ⲇᐃⵠⵠⵠ - ᐃ * 50, ⲆⵠᐃΔ - 10 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ])
		}
		if (ᐃⲆ == 3) {
			Ⲇ.translate(-ΔΔ.width / ⲆⲆⵠΔ, -ΔΔ.height / ᐃᐃⲆΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(121 * ᐃ, ᐃ * 190);
			Ⲇ.bezierCurveTo(ᐃ * 129, 186 * ᐃ, 137 * ᐃ, 183 * ᐃ, 135 * ᐃ, ᐃ * 163);
			Ⲇ.bezierCurveTo(131 * ᐃ, ᐃ * 135, 153 * ᐃ, 127 * ᐃ, ᐃ * 177, ᐃ * 124);
			Ⲇ.bezierCurveTo(ᐃ * 198, 120 * ᐃ, ᐃ * 208, 122 * ᐃ, ᐃ * 226, 128 * ᐃ);
			Ⲇ.bezierCurveTo(261 * ᐃ, 112 * ᐃ, ᐃ * 271, 126 * ᐃ, 287 * ᐃ, ᐃ * 147);
			Ⲇ.bezierCurveTo(ᐃ * 310, ᐃ * 163, ᐃ * 304, 183 * ᐃ, ᐃ * 283, ᐃ * 196);
			Ⲇ.bezierCurveTo(296 * ᐃ, ᐃ * 249, ᐃ * 278, 262 * ᐃ, 253 * ᐃ, 263 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 210, ᐃ * 264, 188 * ᐃ, ᐃ * 252, ᐃ * 177, 234 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 133, ᐃ * 242, 123 * ᐃ, 241 * ᐃ, ᐃ * 115, ᐃ * 225);
			Ⲇ.bezierCurveTo(ᐃ * 109, 206 * ᐃ, 115 * ᐃ, 193 * ᐃ, 121 * ᐃ, 190 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(219 * ᐃ, 144 * ᐃ);
			Ⲇ.bezierCurveTo(251 * ᐃ, 121 * ᐃ, 277 * ᐃ, 136 * ᐃ, ᐃ * 276, ᐃ * 159);
			Ⲇ.bezierCurveTo(276 * ᐃ, 176 * ᐃ, 273 * ᐃ, 191 * ᐃ, ᐃ * 242, ᐃ * 193);
			Ⲇ.bezierCurveTo(226 * ᐃ, 228 * ᐃ, ᐃ * 155, ᐃ * 219, ᐃ * 150, ᐃ * 183);
			Ⲇ.bezierCurveTo(142 * ᐃ, 144 * ᐃ, ᐃ * 174, ᐃ * 127, ᐃ * 219, 144 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃᐃΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(123 * ᐃ, 214 * ᐃ);
			Ⲇ.bezierCurveTo(119 * ᐃ, 198 * ᐃ, 129 * ᐃ, 189 * ᐃ, ᐃ * 146, ᐃ * 194);
			Ⲇ.bezierCurveTo(158 * ᐃ, ᐃ * 201, 165 * ᐃ, ᐃ * 218, 147 * ᐃ, 226 * ᐃ);
			Ⲇ.bezierCurveTo(135 * ᐃ, 230 * ᐃ, ᐃ * 125, 222 * ᐃ, ᐃ * 123, ᐃ * 214);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(257 * ᐃ, 199 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 264, ᐃ * 199, 275 * ᐃ, ᐃ * 213, 261 * ᐃ, 220 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 246, ᐃ * 225, ᐃ * 235, ᐃ * 200, ᐃ * 257, ᐃ * 199);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆΔ]);
			Ⲇ.translate(ᐃ * -ⲆᐃΔΔΔ, ᐃ * 55);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(186 * ᐃ, ᐃ * 123);
			Ⲇ.bezierCurveTo(ᐃ * 198, 115 * ᐃ, 219 * ᐃ, 110 * ᐃ, ᐃ * 219, ᐃ * 123);
			Ⲇ.bezierCurveTo(ᐃ * 216, ᐃ * 135, ᐃ * 171, 143 * ᐃ, ᐃ * 186, 123 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.translate(5 * ᐃ, ᐃ * -55);
			Ⲇ.translate(-5 * ᐃ, ᐃ * ⲆⵠΔⲆΔΔⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 171, 241 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 189, 234 * ᐃ, 200 * ᐃ, 248 * ᐃ, ᐃ * 189, 254 * ᐃ);
			Ⲇ.bezierCurveTo(179 * ᐃ, ᐃ * 260, 158 * ᐃ, ᐃ * 246, ᐃ * 171, 241 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5])
		} else if (Δⵠⵠⵠ == ᐃⲆ) {
			Ⲇ.translate(-ΔΔ.width / ⵠⲆΔΔ, -ΔΔ.height / ⵠⲆΔΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 30, 167 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 144, 64 * ᐃ, 140 * ᐃ, 80 * ᐃ, 147 * ᐃ);
			Ⲇ.bezierCurveTo(95 * ᐃ, ᐃ * 154, 95 * ᐃ, ᐃ * 159, ᐃ * ⲆΔᐃⲆⵠ, 179 * ᐃ);
			Ⲇ.bezierCurveTo(105 * ᐃ, 202 * ᐃ, 95 * ᐃ, ᐃ * 218, ᐃ * 69, 218 * ᐃ);
			Ⲇ.bezierCurveTo(48 * ᐃ, ᐃ * 236, ᐃ * 26, 223 * ᐃ, ᐃ * 28, 213 * ᐃ);
			Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 205, 29 * ᐃ, ᐃ * 199, 32 * ᐃ, 195 * ᐃ);
			Ⲇ.bezierCurveTo(21 * ᐃ, 183 * ᐃ, ᐃ * 27, ᐃ * 173, ᐃ * 30, ᐃ * 167);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(26 * ᐃ, 145 * ᐃ);
			Ⲇ.bezierCurveTo(32 * ᐃ, ᐃ * 138, 37 * ᐃ, ᐃ * 137, 40 * ᐃ, 139 * ᐃ);
			Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 140, ᐃ * 41, 150 * ᐃ, ᐃ * 31, ᐃ * 159);
			Ⲇ.bezierCurveTo(23 * ᐃ, 166 * ᐃ, ΔΔⲆᐃⲆ * ᐃ, 158 * ᐃ, 26 * ᐃ, 145 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆⵠᐃ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * ΔΔⲆΔΔ, ᐃ * 193);
			Ⲇ.bezierCurveTo(ᐃ * 21, ᐃ * 187, ᐃ * 30, ᐃ * 190, 20 * ᐃ, ᐃ * 202);
			Ⲇ.bezierCurveTo(13 * ᐃ, ᐃ * 208, 7 * ᐃ, 202 * ᐃ, ᐃ * 13, 193 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 121, 190 * ᐃ);
			Ⲇ.bezierCurveTo(129 * ᐃ, 186 * ᐃ, 137 * ᐃ, ᐃ * 183, 135 * ᐃ, ᐃ * 163);
			Ⲇ.bezierCurveTo(131 * ᐃ, 135 * ᐃ, ᐃ * 153, 127 * ᐃ, ᐃ * 177, ᐃ * 124);
			Ⲇ.bezierCurveTo(198 * ᐃ, 120 * ᐃ, ᐃ * 208, 122 * ᐃ, ᐃ * 226, 128 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 261, ᐃ * 112, ᐃ * 271, 126 * ᐃ, 287 * ᐃ, 147 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 310, 163 * ᐃ, 304 * ᐃ, ᐃ * 183, 283 * ᐃ, 196 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 296, ᐃ * 249, 278 * ᐃ, 262 * ᐃ, 253 * ᐃ, 263 * ᐃ);
			Ⲇ.bezierCurveTo(210 * ᐃ, 264 * ᐃ, 188 * ᐃ, 252 * ᐃ, ᐃ * 177, ᐃ * 234);
			Ⲇ.bezierCurveTo(133 * ᐃ, ᐃ * 242, 123 * ᐃ, ᐃ * 241, 115 * ᐃ, ᐃ * 225);
			Ⲇ.bezierCurveTo(ᐃ * 109, 206 * ᐃ, 115 * ᐃ, 193 * ᐃ, ᐃ * 121, ᐃ * 190);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 335, 196 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 312, ᐃ * 208, 300 * ᐃ, 185 * ᐃ, ᐃ * 309, ᐃ * 167);
			Ⲇ.bezierCurveTo(314 * ᐃ, ᐃ * 141, ᐃ * 339, ᐃ * 127, 359 * ᐃ, ᐃ * 144);
			Ⲇ.bezierCurveTo(363 * ᐃ, 148 * ᐃ, 364 * ᐃ, ᐃ * 150, 364 * ᐃ, ᐃ * 150);
			Ⲇ.bezierCurveTo(392 * ᐃ, ᐃ * 143, 396 * ᐃ, ᐃ * 183, ᐃ * 378, 204 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 367, ᐃ * 215, ᐃ * 339, ᐃ * 208, 335 * ᐃ, 196 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(349 * ᐃ, 212 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 339, ᐃ * 216, ᐃ * 334, 208 * ᐃ, 341 * ᐃ, 203 * ᐃ);
			Ⲇ.bezierCurveTo(353 * ᐃ, ᐃ * 198, 361 * ᐃ, ᐃ * 205, ᐃ * 349, 212 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(46 * ᐃ, ᐃ * 165);
			Ⲇ.bezierCurveTo(55 * ᐃ, 148 * ᐃ, ᐃ * 85, 157 * ᐃ, ᐃ * 83, 175 * ᐃ);
			Ⲇ.bezierCurveTo(99 * ᐃ, ᐃ * 185, ᐃ * 89, 212 * ᐃ, ᐃ * 66, ᐃ * 204);
			Ⲇ.bezierCurveTo(55 * ᐃ, 212 * ᐃ, ᐃ * 43, ᐃ * 212, ᐃ * 41, 202 * ᐃ);
			Ⲇ.bezierCurveTo(39 * ᐃ, ᐃ * 194, 42 * ᐃ, 187 * ᐃ, ᐃ * 49, 185 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 44, 175 * ᐃ, ᐃ * 45, 172 * ᐃ, ᐃ * 46, ᐃ * 165);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(219 * ᐃ, 144 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 251, 121 * ᐃ, ᐃ * 277, ᐃ * 136, ᐃ * 276, ᐃ * 159);
			Ⲇ.bezierCurveTo(276 * ᐃ, 176 * ᐃ, 273 * ᐃ, ᐃ * 191, 242 * ᐃ, ᐃ * 193);
			Ⲇ.bezierCurveTo(226 * ᐃ, ᐃ * 228, 155 * ᐃ, 219 * ᐃ, 150 * ᐃ, 183 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 144, ᐃ * 174, ᐃ * 127, 219 * ᐃ, 144 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(123 * ᐃ, 214 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 119, 198 * ᐃ, 129 * ᐃ, ᐃ * 189, ᐃ * 146, ᐃ * 194);
			Ⲇ.bezierCurveTo(ᐃ * 158, 201 * ᐃ, ᐃ * 165, 218 * ᐃ, ᐃ * 147, 226 * ᐃ);
			Ⲇ.bezierCurveTo(135 * ᐃ, ᐃ * 230, ᐃ * 125, 222 * ᐃ, ᐃ * 123, 214 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃⵠ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(257 * ᐃ, ᐃ * 199);
			Ⲇ.bezierCurveTo(264 * ᐃ, ᐃ * 199, 275 * ᐃ, ᐃ * 213, ᐃ * 261, ᐃ * 220);
			Ⲇ.bezierCurveTo(ᐃ * 246, 225 * ᐃ, 235 * ᐃ, 200 * ᐃ, ᐃ * 257, 199 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃΔΔΔ]);
			Ⲇ.translate(-ⲆΔᐃΔ * ᐃ, ᐃ * 55);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 186, 123 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 198, 115 * ᐃ, ᐃ * 219, 110 * ᐃ, 219 * ᐃ, ᐃ * 123);
			Ⲇ.bezierCurveTo(ᐃ * 216, ᐃ * 135, 171 * ᐃ, ᐃ * 143, ᐃ * 186, ᐃ * 123);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.translate(ᐃ * ΔⲆⲆⲆⵠ, -55 * ᐃ);
			Ⲇ.translate(-ᐃᐃⲆᐃΔ * ᐃ, ᐃ * ⲆⵠΔⲆΔΔⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(171 * ᐃ, ᐃ * 241);
			Ⲇ.bezierCurveTo(189 * ᐃ, 234 * ᐃ, 200 * ᐃ, 248 * ᐃ, ᐃ * 189, ᐃ * 254);
			Ⲇ.bezierCurveTo(179 * ᐃ, ᐃ * 260, ᐃ * 158, ᐃ * 246, ᐃ * 171, ᐃ * 241);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃΔΔⲆ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(367 * ᐃ, 164 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 380, ᐃ * 160, 391 * ᐃ, 185 * ᐃ, 371 * ᐃ, 189 * ᐃ);
			Ⲇ.bezierCurveTo(362 * ᐃ, ᐃ * 192, ᐃ * 354, ᐃ * 191, ᐃ * 350, ᐃ * 185);
			Ⲇ.bezierCurveTo(ᐃ * 326, ᐃ * 205, 314 * ᐃ, 182 * ᐃ, 316 * ᐃ, ᐃ * 171);
			Ⲇ.bezierCurveTo(317 * ᐃ, ᐃ * 150, ᐃ * 332, ᐃ * 143, 347 * ᐃ, 147 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 361, ᐃ * 151, 366 * ᐃ, ᐃ * 158, 367 * ᐃ, 164 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⲆ])
		}
		return ΔΔ
	}

	function ⵠⵠΔⵠⲆⵠᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 220 * ᐃ;
		var ΔᐃⲆ = 220 * ᐃ;
		var Δᐃᐃ = ᐃ * 32;
		var ᐃⲆⲆ = 4 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃⲆ / ⵠᐃⵠΔ, ΔᐃⲆ / 2 + ᐃ * 10);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 0, Δⵠⵠ, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[0]);
		Ⲇ.translate(0, -8 * ᐃ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 0, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ᐃⲆⲆ);
		return ΔΔ
	}

	function ΔⵠⲆᐃⵠⲆⵠ(ᐃ, ᐃᐃ, ᐃⲆ, ⲆⲆⵠⵠⵠ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 121 * ᐃ;
		ΔΔ.height = ᐃ * 130;
		Ⲇ.translate(0, ᐃᐃᐃⲆ * ᐃ);
		if (ⵠⵠⲆ == ᐃⲆ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * ⲆᐃΔᐃᐃ, ᐃ * 23);
			Ⲇ.bezierCurveTo(ᐃ * 6, ᐃ * 46, 6 * ᐃ, 46 * ᐃ, ᐃ * ⵠⵠⲆΔⵠ, 69 * ᐃ);
			Ⲇ.bezierCurveTo(21 * ᐃ, ᐃ * 69, 21 * ᐃ, 69 * ᐃ, 36 * ᐃ, 69 * ᐃ);
			Ⲇ.bezierCurveTo(45.5 * ᐃ, 78.5 * ᐃ, 45.5 * ᐃ, ᐃ * 78.5, ᐃ * 55, 88 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 55.5, 45.5 * ᐃ, ᐃ * 55.5, ᐃ * 45.5, 56 * ᐃ, ᐃ * ⵠΔⵠⲆ);
			Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 14, ᐃ * 47, ᐃ * ⲆᐃΔⵠᐃⲆΔ, 38 * ᐃ, ᐃ * 25);
			Ⲇ.bezierCurveTo(23 * ᐃ, ᐃ * 25, 23 * ᐃ, ᐃ * 25, ᐃ * 6, 23 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, undefined, ᐃᐃ[3], 13 * ᐃ)
		}
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 6, ᐃ * 23);
		Ⲇ.bezierCurveTo(6 * ᐃ, ᐃ * 46, 6 * ᐃ, 46 * ᐃ, ᐃ * 6, ᐃ * 69);
		Ⲇ.bezierCurveTo(21 * ᐃ, 69 * ᐃ, 21 * ᐃ, 69 * ᐃ, 36 * ᐃ, 69 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45.5, 78.5 * ᐃ, 45.5 * ᐃ, ᐃ * 78.5, ᐃ * 55, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 55.5, 45.5 * ᐃ, 55.5 * ᐃ, 45.5 * ᐃ, 56 * ᐃ, ᐃ * 3);
		Ⲇ.bezierCurveTo(ᐃ * 47, 14 * ᐃ, ᐃ * 47, 14 * ᐃ, ᐃ * 38, 25 * ᐃ);
		Ⲇ.bezierCurveTo(23 * ᐃ, 25 * ᐃ, 23 * ᐃ, ᐃ * 25, ⵠᐃΔΔⲆ * ᐃ, 23 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * ᐃΔΔΔ);
		if (ⲆⲆⵠⵠⵠ == 1) {
			Ⲇ.translate(ⵠⵠᐃⵠ, Δᐃⵠⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(67 * ᐃ, ᐃ * 30);
			Ⲇ.bezierCurveTo(73 * ᐃ, 47 * ᐃ, ᐃ * 69, 45 * ᐃ, ᐃ * 67, 58 * ᐃ);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ᐃ * ᐃⵠⲆᐃⵠ);
			Ⲇ.translate(3, 0 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 70, 17 * ᐃ);
			Ⲇ.bezierCurveTo(83 * ᐃ, ᐃ * 45, ᐃ * 76, ᐃ * 55, 70 * ᐃ, ᐃ * 69);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃⵠΔ], 10 * ᐃ);
			Ⲇ.translate(3, ᐃ * Ⲇᐃⵠᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(76 * ᐃ, ᐃ * ⲆᐃⲆᐃᐃ);
			Ⲇ.bezierCurveTo(88 * ᐃ, 31 * ᐃ, 89 * ᐃ, 55 * ᐃ, ᐃ * 76, ᐃ * 79);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ᐃ * ⲆΔⵠᐃⲆ);
			if (ᐃⲆ == 1) {
				Ⲇ.translate(-6 * ᐃ, -5 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(67 * ᐃ, ᐃ * 30);
				Ⲇ.bezierCurveTo(73 * ᐃ, 47 * ᐃ, 69 * ᐃ, 45 * ᐃ, ᐃ * 67, ᐃ * 58);
				Δⵠ(Ⲇ, undefined, ᐃᐃ[3], 18 * ᐃ);
				Ⲇ.translate(ⲆⵠⵠⲆ, ᐃ * 0);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 70, 17 * ᐃ);
				Ⲇ.bezierCurveTo(83 * ᐃ, ᐃ * 45, ᐃ * 76, 55 * ᐃ, ᐃ * 70, ᐃ * 69);
				Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[3], ⵠᐃⵠᐃⲆᐃΔ * ᐃ);
				Ⲇ.translate(3, 0 * ᐃ);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 76, ᐃ * 8);
				Ⲇ.bezierCurveTo(ᐃ * 88, 31 * ᐃ, ᐃ * 89, 55 * ᐃ, ᐃ * 76, 79 * ᐃ);
				Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[ⵠΔᐃⲆ], 18 * ᐃ);
				Ⲇ.translate(-ⲆᐃΔᐃᐃ, ᐃ * Ⲇᐃⵠᐃ)
			} else {
				Ⲇ.translate(-6 * ᐃ, -Δᐃⵠⵠ * ᐃ)
			}
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 67, ᐃ * 30);
			Ⲇ.bezierCurveTo(73 * ᐃ, ᐃ * 47, ᐃ * 69, 45 * ᐃ, ᐃ * 67, 58 * ᐃ);
			Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ΔⲆⲆᐃ], ᐃⵠⲆᐃⵠ * ᐃ);
			Ⲇ.translate(ⵠᐃᐃᐃ, ᐃ * ΔⵠⲆΔ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(70 * ᐃ, ᐃ * 17);
			Ⲇ.bezierCurveTo(ᐃ * 83, 45 * ᐃ, 76 * ᐃ, 55 * ᐃ, 70 * ᐃ, 69 * ᐃ);
			Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[2], ᐃ * ⵠΔⲆⵠᐃ);
			Ⲇ.translate(3, ᐃ * ᐃΔⵠⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(76 * ᐃ, 8 * ᐃ);
			Ⲇ.bezierCurveTo(88 * ᐃ, 31 * ᐃ, ᐃ * 89, ᐃ * 55, 76 * ᐃ, ᐃ * 79);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * ⲆΔΔⵠⲆ)
		} else {
			if (ᐃⲆ == 1) {
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(108 * ᐃ, ᐃ * 27);
				Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 45.5, ᐃ * 94, 45.5 * ᐃ, 80 * ᐃ, 64 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ᐃᐃ[3], ᐃ * 18);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 79, ᐃ * 30);
				Ⲇ.bezierCurveTo(93 * ᐃ, 47 * ᐃ, ᐃ * 93, 47 * ᐃ, 107 * ᐃ, ᐃ * 64);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆⲆΔ], 18 * ᐃ)
			} else {
				Ⲇ.translate(ⵠⵠᐃⵠ, ᐃ * -5);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(ᐃ * 108, ᐃ * 27);
				Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 45.5, ᐃ * 94, ᐃ * 45.5, ᐃ * 80, ᐃ * 64);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ᐃᐃ[0], ᐃ * 7);
				Ⲇ.beginPath();
				Ⲇ.lineCap = ⵠ[244];
				Ⲇ.lineJoin = ⵠ[244];
				Ⲇ.moveTo(79 * ᐃ, 30 * ᐃ);
				Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 47, 93 * ᐃ, 47 * ᐃ, ᐃ * 107, 64 * ᐃ);
				Ⲇ.closePath();
				Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ᐃ * ΔᐃⵠⲆⵠ);
				Ⲇ.translate(ⵠⵠᐃⵠ, 5 * ᐃ)
			}
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(108 * ᐃ, ᐃ * 27);
			Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 45.5, ᐃ * 94, ᐃ * 45.5, 80 * ᐃ, 64 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[ⵠⵠⲆᐃ], ⵠᐃⲆⲆⲆ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(79 * ᐃ, ᐃ * 30);
			Ⲇ.bezierCurveTo(93 * ᐃ, 47 * ᐃ, ᐃ * 93, ᐃ * 47, 107 * ᐃ, 64 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[2], 7 * ᐃ)
		}
		return ΔΔ
	}
	const ᐃⲆⲆᐃΔ = ⵠⵠⲆⵠΔ;

	function ⵠᐃⲆⵠΔΔᐃ(ⵠΔⲆⲆⲆⵠⲆ, ⵠⲆᐃⵠΔⲆᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = Math.max(ⵠⲆᐃⵠΔⲆᐃ.width, ⵠΔⲆⲆⲆⵠⲆ.width);
		var ΔᐃⲆ = Math.max(ⵠⲆᐃⵠΔⲆᐃ.height, ⵠΔⲆⲆⲆⵠⲆ.height);
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.drawImage(ⵠΔⲆⲆⲆⵠⲆ, (ᐃᐃⲆ - ⵠΔⲆⲆⲆⵠⲆ.width) / ᐃⲆⲆΔ, (ΔᐃⲆ - ⵠΔⲆⲆⲆⵠⲆ.height) / 2);
		Ⲇ.drawImage(ⵠⲆᐃⵠΔⲆᐃ, (ᐃᐃⲆ - ⵠⲆᐃⵠΔⲆᐃ.width) / 2, (ΔᐃⲆ - ⵠⲆᐃⵠΔⲆᐃ.height) / 2);
		return ΔΔ
	}

	function ΔΔᐃΔᐃⲆⲆ(ᐃ, ᐃᐃ, ᐃᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 450 * ᐃ;
		var ΔᐃⲆ = 145 * ᐃ;
		var w2 = ᐃᐃⲆ / 2;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / 2;
		var ⲆⵠᐃΔ = 10 * ᐃ;
		var ΔⵠᐃΔ = 20 * ᐃ;
		var ᐃⵠⵠᐃⵠ = 300 * ᐃ;
		var Ⲇᐃⵠⵠⵠ = ᐃ * 30;
		var Δᐃᐃ = ᐃ * 80;
		var ⲆᐃᐃⲆᐃ = ᐃⵠⵠᐃⵠ / 2;
		var ⲆΔⵠⲆΔ = Ⲇᐃⵠⵠⵠ / 2;
		var ᐃⲆⲆ = ⵠΔΔᐃ;
		if (ᐃᐃᐃ) {
			var ᐃᐃⲆ = 145 * ᐃ;
			var ΔᐃⲆ = 450 * ᐃ;
			ΔΔ.width = ᐃᐃⲆ;
			ΔΔ.height = ΔᐃⲆ;
			Ⲇ.rotate(Math.PI / 2);
			Ⲇ.save();
			Ⲇ.globalAlpha = .5;
			ᐃΔⵠ(Ⲇ, ᐃ * ⵠᐃⵠⵠᐃΔⲆ, -110 * ᐃ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
			Ⲇ.translate(178 * ᐃ, ᐃ * -98);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ - ᐃⲆⵠⲆΔ * ᐃ, 100 * ᐃ, 100 * ᐃ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.translate(ᐃ * -50, ᐃ * ⵠⲆⲆᐃⵠ);
			ᐃΔⵠ(Ⲇ, 220 * ᐃ, -15 * ᐃ, 90 * ᐃ, 90 * ᐃ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.restore();
			Ⲇ.save();
			Ⲇ.globalAlpha = ᐃᐃΔᐃ;
			Ⲇ.translate(250 * ᐃ, ᐃ * -63);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ - ΔⵠΔⲆ * ᐃ, -ⲆΔⵠⲆΔ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⲆⲆⵠ], ᐃⲆⲆ);
			Ⲇ.translate(ᐃ * -70, -40 * ᐃ);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ - ᐃ * 20, -ⲆΔⵠⲆΔ, ᐃ * 100, ᐃⵠΔⲆⲆ * ᐃ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃⲆⲆ);
			Ⲇ.translate(-70 * ᐃ, ᐃ * ᐃᐃⵠⲆᐃⲆΔ);
			ᐃΔⵠ(Ⲇ, 220 * ᐃ, ᐃ * -22, 90 * ᐃ, 90 * ᐃ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ], ᐃᐃ[4], ᐃⲆⲆ);
			ᐃΔⵠ(Ⲇ, ᐃ * 230, -ⲆΔᐃᐃⲆ * ᐃ, 55 * ᐃ, ᐃ * 55, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.translate(-70 * ᐃ, 0);
			ᐃΔⵠ(Ⲇ, -ᐃⲆⵠᐃᐃ * ᐃ, -ΔⵠΔΔ * ᐃ, 60 * ᐃ, ᐃ * 60, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.restore()
		} else {
			ΔΔ.width = ᐃᐃⲆ;
			ΔΔ.height = ΔᐃⲆ;
			Ⲇ.save();
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(w2, ⵠⵠᐃⵠⵠ + ᐃ * ΔΔⵠᐃⵠ);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
			Ⲇ.translate(-65 * ᐃ, -25 * ᐃ);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ - ᐃ * 6, ⵠΔᐃᐃⲆ * ᐃ, 100 * ᐃ, ⵠⲆᐃΔⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
			Ⲇ.translate(-35 * ᐃ, -ⲆΔᐃΔ * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * 220, ᐃ * -15, 90 * ᐃ, 90 * ᐃ, 15 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
			Ⲇ.restore();
			Ⲇ.save();
			Ⲇ.globalAlpha = ΔᐃᐃⲆ;
			Ⲇ.translate(ᐃ * 240, 70 * ᐃ);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ, -ⲆΔⵠⲆΔ, ᐃⵠⵠᐃⵠ, Ⲇᐃⵠⵠⵠ, ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[2], ᐃⲆⲆ);
			Ⲇ.translate(ᐃ * -60, ᐃ * -40);
			ᐃΔⵠ(Ⲇ, -ⲆᐃᐃⲆᐃ - 20 * ᐃ, -ⲆΔⵠⲆΔ, ᐃ * 100, ᐃΔⵠΔᐃ * ᐃ, 15 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[4], ᐃⲆⲆ);
			Ⲇ.translate(ᐃ * -55, ᐃ * ᐃΔᐃᐃⵠ);
			ᐃΔⵠ(Ⲇ, ᐃ * 220, -22 * ᐃ, 90 * ᐃ, ᐃ * 90, ᐃ * ᐃᐃⵠⲆᐃⲆΔ);
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃⲆⲆ);
			ᐃΔⵠ(Ⲇ, 240 * ᐃ, -ⵠⲆⲆΔⵠⵠⵠ * ᐃ, 55 * ᐃ, ᐃ * 55, 12 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[5]);
			Ⲇ.translate(ᐃ * 45, 0 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -145, ᐃ * -ⵠⵠⲆᐃ, 60 * ᐃ, ᐃ * 60, ᐃ * 12);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔᐃ]);
			Ⲇ.restore()
		}
		return ΔΔ
	}

	function ⵠⵠⲆⵠᐃⲆΔⵠⲆ(ᐃ, ᐃᐃ, ᐃᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		Ⲇ.rotate(Math.PI / ᐃΔⵠᐃ)
	}
	const Ⲇⵠⵠᐃᐃ = Δⵠⵠⵠ;
	const ΔᐃⵠⲆ = ΔⵠΔΔ;

	function ⲆⵠⲆⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 105 * ᐃ;
		var ΔᐃⲆ = 125 * ᐃ;
		var ᐃⲆⲆ = ᐃ * 4;
		var w2 = ᐃᐃⲆ / ᐃᐃⲆΔ;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / ⲆⲆⵠΔ;
		var ⲆⵠᐃΔ = ᐃ * ᐃⵠⲆᐃⵠ;
		var ΔⵠᐃΔ = ᐃᐃⲆᐃΔ * ᐃ;
		var ⲆⵠⲆⵠᐃΔΔ = 10 * ᐃ;
		var ⲆⲆⲆᐃⲆΔΔ = ᐃ * 110;
		var ᐃⲆΔΔⵠᐃΔ = ⲆⵠⲆⵠᐃΔΔ / ⵠΔⲆΔ;
		var ΔⵠⵠⲆⵠⲆⵠ = ⲆⲆⲆᐃⲆΔΔ / ᐃⲆⲆΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.save();
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃᐃⲆ / ᐃⵠΔⲆ + 8 * ᐃ, ΔᐃⲆ / 2 + ΔⵠᐃΔ);
		ᐃΔⵠ(Ⲇ, -ᐃⲆΔΔⵠᐃΔ, -ΔⵠⵠⲆⵠⲆⵠ, ⲆⵠⲆⵠᐃΔΔ, ⲆⲆⲆᐃⲆΔΔ, ⲆⵠᐃΔ);
		ⲆⲆⲆⵠ ? Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]) : Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.translate(-130 * ᐃ + ΔⵠᐃΔ, ᐃ * -128 + ΔⵠᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 93, ᐃ * 156, 99 * ᐃ, 154 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 128, 92 * ᐃ, ᐃ * 90, ᐃ * 93, 72 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 84, 143 * ᐃ, 73 * ᐃ, ᐃ * 162, ᐃ * 86);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.restore();
		Ⲇ.translate(ᐃᐃⲆ / 2 + ⲆⵠⲆⲆⲆΔⲆ, ΔᐃⲆ / ᐃⵠΔⲆ);
		Ⲇ.globalAlpha = 1;
		ᐃΔⵠ(Ⲇ, -ᐃⲆΔΔⵠᐃΔ, -ΔⵠⵠⲆⵠⲆⵠ, ⲆⵠⲆⵠᐃΔΔ, ⲆⲆⲆᐃⲆΔΔ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃⲆⲆ);
		Ⲇ.translate(ᐃ * -130, -125 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 159, 93 * ᐃ, ᐃ * 156, ᐃ * 99, 154 * ᐃ, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * 92, 90 * ᐃ, ᐃ * 93, ᐃ * 72, 96 * ᐃ);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 84, 143 * ᐃ, 73 * ᐃ, 162 * ᐃ, 86 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ], ᐃᐃ[ᐃΔΔⲆⲆ], ᐃⲆⲆ);
		return ΔΔ
	}

	function ΔᐃⲆΔⲆⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * ΔⵠΔⵠⵠ;
		ΔΔ.height = 250 * ᐃ;
		Ⲇ.translate(ᐃ * -135, -75 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .8 : ΔᐃⵠΔ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 178.5, 238.03125 * ᐃ);
		Ⲇ.bezierCurveTo(177 * ᐃ, 175.03125 * ᐃ, 177 * ᐃ, ᐃ * 175.03125, ᐃ * 175.5, ᐃ * 112.03125);
		Ⲇ.bezierCurveTo(ᐃ * 184.5, 100.53125 * ᐃ, ᐃ * 184.5, ᐃ * 100.53125, 193.5 * ᐃ, 89.03125 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, 100.03125 * ᐃ, ᐃ * 202, 100.03125 * ᐃ, ᐃ * 210.5, 111.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 209.5, ᐃ * 174.03125, ᐃ * 209.5, ᐃ * 174.03125, 208.5 * ᐃ, ᐃ * 237.03125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(155.5 * ᐃ, 239.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 194, ᐃ * 238.53125, 194 * ᐃ, ᐃ * 238.53125, 232.5 * ᐃ, 238.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 232.5, ᐃ * 243.03125, ᐃ * 232.5, ᐃ * 243.03125, 232.5 * ᐃ, 248.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 194, 248.53125 * ᐃ, ᐃ * 194, 248.53125 * ᐃ, 155.5 * ᐃ, 249.03125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ᐃ * 160.5, ᐃ * 243.03125, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 227.5, ᐃ * 242.03125, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(185.5 * ᐃ, ᐃ * 253.03125);
		Ⲇ.bezierCurveTo(193.5 * ᐃ, ᐃ * 253.03125, 193.5 * ᐃ, ᐃ * 253.03125, ᐃ * 201.5, 253.03125 * ᐃ);
		Ⲇ.bezierCurveTo(201.5 * ᐃ, ᐃ * 276.03125, 201.5 * ᐃ, ᐃ * 276.03125, ᐃ * 201.5, ᐃ * 299.03125);
		Ⲇ.bezierCurveTo(ᐃ * 194.5, ᐃ * 299.03125, ᐃ * 194.5, 299.03125 * ᐃ, ᐃ * 187.5, 299.03125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔⲆᐃ], ᐃⵠⲆⲆΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, 194 * ᐃ, ᐃ * 298, ⵠⵠⵠΔᐃᐃⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 5);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-10 * ᐃ, 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 178.5, 238.03125 * ᐃ);
		Ⲇ.bezierCurveTo(177 * ᐃ, 175.03125 * ᐃ, 177 * ᐃ, ᐃ * 175.03125, 175.5 * ᐃ, 112.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 184.5, ᐃ * 100.53125, 184.5 * ᐃ, 100.53125 * ᐃ, ᐃ * 193.5, ᐃ * 89.03125);
		Ⲇ.bezierCurveTo(ᐃ * 202, 100.03125 * ᐃ, ᐃ * 202, ᐃ * 100.03125, 210.5 * ᐃ, ᐃ * 111.03125);
		Ⲇ.bezierCurveTo(ᐃ * 209.5, 174.03125 * ᐃ, 209.5 * ᐃ, 174.03125 * ᐃ, ᐃ * 208.5, ᐃ * 237.03125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃⵠᐃⲆ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(155.5 * ᐃ, ᐃ * 239.03125);
		Ⲇ.bezierCurveTo(194 * ᐃ, ᐃ * 238.53125, ᐃ * 194, 238.53125 * ᐃ, 232.5 * ᐃ, 238.03125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 232.5, ᐃ * 243.03125, ᐃ * 232.5, 243.03125 * ᐃ, ᐃ * 232.5, ᐃ * 248.03125);
		Ⲇ.bezierCurveTo(ᐃ * 194, ᐃ * 248.53125, 194 * ᐃ, 248.53125 * ᐃ, 155.5 * ᐃ, ᐃ * 249.03125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⵠΔⲆ], ᐃ * ΔⲆⵠΔΔ);
		ΔⵠⲆ(Ⲇ, 160.5 * ᐃ, 243.03125 * ᐃ, ᐃⲆⵠΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[2], ᐃ * 5);
		ΔⵠⲆ(Ⲇ, ᐃ * 227.5, ᐃ * 242.03125, ᐃ * 7);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], Δᐃⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 185.5, ᐃ * 253.03125);
		Ⲇ.bezierCurveTo(ᐃ * 193.5, 253.03125 * ᐃ, ᐃ * 193.5, ᐃ * 253.03125, ᐃ * 201.5, ᐃ * 253.03125);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, 276.03125 * ᐃ, 201.5 * ᐃ, 276.03125 * ᐃ, ᐃ * 201.5, 299.03125 * ᐃ);
		Ⲇ.bezierCurveTo(194.5 * ᐃ, ᐃ * 299.03125, ᐃ * 194.5, 299.03125 * ᐃ, 187.5 * ᐃ, ᐃ * 299.03125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ΔᐃⵠⲆ], ᐃ * 7);
		ΔⵠⲆ(Ⲇ, 194 * ᐃ, 298 * ᐃ, ᐃΔⵠΔΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * 7);
		return ΔΔ
	}

	function ΔΔᐃᐃⲆΔᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 131;
		ΔΔ.height = ᐃ * 121;
		Ⲇ.translate(0, 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 110, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 61.5, 93 * ᐃ, 61.5 * ᐃ, ᐃ * 76, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 84.5, 78.5 * ᐃ, 84.5 * ᐃ, ᐃ * 78.5, 93 * ᐃ, ᐃ * 93);
		Ⲇ.bezierCurveTo(70 * ᐃ, ᐃ * 111, 43 * ᐃ, ᐃ * 103, 30 * ᐃ, ᐃ * 82);
		Ⲇ.bezierCurveTo(17 * ᐃ, 61 * ᐃ, ᐃ * 25, 30 * ᐃ, ᐃ * 51, ᐃ * 21);
		Ⲇ.bezierCurveTo(ᐃ * 66, ᐃᐃΔⲆⵠ * ᐃ, 83 * ᐃ, ᐃ * ⲆΔΔⵠΔⲆⵠ, ᐃ * 96, ᐃ * 29);
		Ⲇ.bezierCurveTo(104 * ᐃ, 35 * ᐃ, 109 * ᐃ, ᐃ * 47, ᐃ * 110, 58 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ΔᐃᐃⲆ;
		Ⲇ.translate(Ⲇᐃⵠᐃ, ᐃ * -ⵠⵠΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(110 * ᐃ, 59 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93, 61.5 * ᐃ, ᐃ * 93, 61.5 * ᐃ, 76 * ᐃ, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 84.5, 78.5 * ᐃ, ᐃ * 84.5, ᐃ * 78.5, 93 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70, 111 * ᐃ, ᐃ * 43, ᐃ * 103, ᐃ * 30, ᐃ * 82);
		Ⲇ.bezierCurveTo(17 * ᐃ, 61 * ᐃ, 25 * ᐃ, ᐃ * 30, 51 * ᐃ, ᐃ * 21);
		Ⲇ.bezierCurveTo(ᐃ * 66, ᐃΔⲆΔⲆⲆΔ * ᐃ, ᐃ * 83, ᐃ * 18, ᐃ * 96, ᐃ * 29);
		Ⲇ.bezierCurveTo(104 * ᐃ, 35 * ᐃ, ᐃ * 109, 47 * ᐃ, 110 * ᐃ, 58 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⲆⲆⵠ], ᐃ * ᐃᐃⵠⵠⵠ);
		return ΔΔ
	}

	function ⵠΔᐃⲆⲆⲆΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 283 * ᐃ;
		ΔΔ.height = ᐃ * 224;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⲆⵠᐃⲆ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, 62 * ᐃ, 102 * ᐃ, 66 * ᐃ, 110 * ᐃ, 83 * ᐃ);
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[ᐃΔⵠⵠ], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 181, 32 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 196, 62 * ᐃ, ᐃ * 181, 68 * ᐃ, 178 * ᐃ, 69 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(225 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 228, ᐃ * 78, ᐃ * 207, 77 * ᐃ, ᐃ * 192, 88 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 34, 134 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 111, ᐃ * 57, 111 * ᐃ, ᐃ * 79, ᐃ * 109);
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[0], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 249, ᐃ * 135);
		Ⲇ.bezierCurveTo(233 * ᐃ, ᐃ * 107, 212 * ᐃ, ᐃ * 112, ᐃ * 202, 115 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⵠⲆΔ], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56 * ᐃ, ᐃ * 50);
		Ⲇ.bezierCurveTo(56 * ᐃ, 82 * ᐃ, ᐃ * 73, 82 * ᐃ, 93 * ᐃ, ᐃ * 89);
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[0], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, 29 * ᐃ, 179 * ᐃ, ᐃ * 44, 188 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(207 * ᐃ, ᐃ * 64, 226 * ᐃ, 94 * ᐃ, 231 * ᐃ, ᐃ * 118);
		Ⲇ.bezierCurveTo(ᐃ * 236, ᐃ * 145, ᐃ * 222, ᐃ * 184, 193 * ᐃ, 192 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 201, ᐃ * 116, 200 * ᐃ, ᐃ * 93, ᐃ * 193);
		Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 180, ᐃ * 48, 147 * ᐃ, 50 * ᐃ, 123 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, ᐃ * 93, 76 * ᐃ, 66 * ᐃ, ᐃ * 92, ᐃ * 56);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ᐃⲆᐃΔⵠⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = 469 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * ⵠⵠᐃᐃ, ᐃ * ΔⲆΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 88, ᐃ * 30);
		Ⲇ.bezierCurveTo(ᐃ * 96, ᐃ * 49.5, 96 * ᐃ, 49.5 * ᐃ, 104 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 105.5, 41.5 * ᐃ, ᐃ * 105.5, 41.5 * ᐃ, ᐃ * 107, 14 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 9.5, 114 * ᐃ, ᐃ * 9.5, 121 * ᐃ, ⵠⲆⲆᐃⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135.5, ᐃ * 27.5, 135.5 * ᐃ, ᐃ * 27.5, 150 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 286, 110.5 * ᐃ, ᐃ * 286, 103 * ᐃ, ᐃ * 331);
		Ⲇ.bezierCurveTo(ᐃ * 69.5, ᐃ * 325, 69.5 * ᐃ, 325 * ᐃ, ᐃ * 36, ᐃ * 319);
		Ⲇ.bezierCurveTo(56.5 * ᐃ, ᐃ * 180, ᐃ * 56.5, ᐃ * 180, 77 * ᐃ, ᐃ * 41);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, ᐃ * 31);
		Ⲇ.bezierCurveTo(125 * ᐃ, 43 * ᐃ, 125 * ᐃ, 43 * ᐃ, 132 * ᐃ, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 109.5, 185.5 * ᐃ, 109.5 * ᐃ, ᐃ * 185.5, 87 * ᐃ, 316 * ᐃ);
		Ⲇ.bezierCurveTo(72 * ᐃ, 313.5 * ᐃ, 72 * ᐃ, 313.5 * ᐃ, ᐃ * 57, 311 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76.5, 181 * ᐃ, 76.5 * ᐃ, ᐃ * 181, 96 * ᐃ, 51 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56, 328 * ᐃ);
		Ⲇ.bezierCurveTo(47 * ᐃ, ᐃ * 385.5, 47 * ᐃ, ᐃ * 385.5, 38 * ᐃ, 443 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 446, ᐃ * 52, 446 * ᐃ, ᐃ * 66, 449 * ᐃ);
		Ⲇ.bezierCurveTo(76.5 * ᐃ, 388.5 * ᐃ, 76.5 * ᐃ, 388.5 * ᐃ, 87 * ᐃ, ᐃ * 328);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 74, 302 * ᐃ);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 316.5, 104 * ᐃ, 316.5 * ᐃ, 134 * ᐃ, 331 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, ᐃ * 341, ᐃ * 133, ᐃ * 341, ᐃ * 132, 351 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 69.5, 342 * ᐃ, ᐃ * 69.5, 342 * ᐃ, 7 * ᐃ, 333 * ᐃ);
		Ⲇ.bezierCurveTo(8 * ᐃ, ᐃ * 323, ⵠᐃᐃΔⲆ * ᐃ, 323 * ᐃ, ⲆⲆⵠⲆⵠ * ᐃ, 313 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 51.5, 440.5 * ᐃ);
		Ⲇ.rotate(.2);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, -18.5 * ᐃ, ᐃ * 41, ᐃ * 37, ᐃ * ⵠΔⲆⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 73, ᐃ * 316);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 324.5, 90 * ᐃ, ᐃ * 324.5, 107 * ᐃ, 333 * ᐃ);
		Ⲇ.bezierCurveTo(70 * ᐃ, 327.5 * ᐃ, 70 * ᐃ, 327.5 * ᐃ, ᐃ * 33, ᐃ * 322);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-ⵠⲆΔⵠ * ᐃ, -ⵠⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 88, ᐃ * 30);
		Ⲇ.bezierCurveTo(ᐃ * 96, 49.5 * ᐃ, ᐃ * 96, ᐃ * 49.5, 104 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(105.5 * ᐃ, ᐃ * 41.5, 105.5 * ᐃ, 41.5 * ᐃ, 107 * ᐃ, ᐃ * 14);
		Ⲇ.bezierCurveTo(ᐃ * 114, 9.5 * ᐃ, 114 * ᐃ, ᐃ * 9.5, ᐃ * 121, Δᐃⵠⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135.5, 27.5 * ᐃ, 135.5 * ᐃ, ᐃ * 27.5, ᐃ * 150, 50 * ᐃ);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 286, ᐃ * 110.5, ᐃ * 286, ᐃ * 103, ᐃ * 331);
		Ⲇ.bezierCurveTo(ᐃ * 69.5, 325 * ᐃ, ᐃ * 69.5, ᐃ * 325, 36 * ᐃ, 319 * ᐃ);
		Ⲇ.bezierCurveTo(56.5 * ᐃ, 180 * ᐃ, 56.5 * ᐃ, 180 * ᐃ, ᐃ * 77, 41 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆᐃⲆᐃ], ᐃ * ᐃⵠᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, 31 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 125, ᐃ * 43, 125 * ᐃ, 43 * ᐃ, ᐃ * 132, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 109.5, ᐃ * 185.5, ᐃ * 109.5, 185.5 * ᐃ, 87 * ᐃ, ᐃ * 316);
		Ⲇ.bezierCurveTo(ᐃ * 72, ᐃ * 313.5, ᐃ * 72, ᐃ * 313.5, 57 * ᐃ, 311 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76.5, 181 * ᐃ, ᐃ * 76.5, 181 * ᐃ, 96 * ᐃ, ᐃ * 51);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 88, ᐃ * 30);
		Ⲇ.bezierCurveTo(96 * ᐃ, ᐃ * 49.5, ᐃ * 96, 49.5 * ᐃ, ᐃ * 104, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 105.5, ᐃ * 41.5, 105.5 * ᐃ, 41.5 * ᐃ, ᐃ * 107, ᐃ * Δᐃⵠᐃᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, 9.5 * ᐃ, ᐃ * 114, ᐃ * 9.5, ᐃ * 121, 5 * ᐃ);
		Ⲇ.bezierCurveTo(135.5 * ᐃ, 27.5 * ᐃ, ᐃ * 135.5, 27.5 * ᐃ, 150 * ᐃ, ᐃ * 50);
		Ⲇ.bezierCurveTo(ᐃ * 110.5, 286 * ᐃ, ᐃ * 110.5, 286 * ᐃ, ᐃ * 103, ᐃ * 331);
		Ⲇ.bezierCurveTo(69.5 * ᐃ, 325 * ᐃ, 69.5 * ᐃ, 325 * ᐃ, 36 * ᐃ, 319 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 56.5, 180 * ᐃ, 56.5 * ᐃ, ᐃ * 180, 77 * ᐃ, 41 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⵠΔⲆ], ᐃ * 7);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56 * ᐃ, 328 * ᐃ);
		Ⲇ.bezierCurveTo(47 * ᐃ, ᐃ * 385.5, 47 * ᐃ, 385.5 * ᐃ, 38 * ᐃ, 443 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 52, 446 * ᐃ, ᐃ * 52, ᐃ * 446, ᐃ * 66, ᐃ * 449);
		Ⲇ.bezierCurveTo(76.5 * ᐃ, ᐃ * 388.5, 76.5 * ᐃ, 388.5 * ᐃ, 87 * ᐃ, ᐃ * 328);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃᐃ[ᐃᐃⲆᐃⵠ], ᐃ * 7);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(74 * ᐃ, ᐃ * 302);
		Ⲇ.bezierCurveTo(104 * ᐃ, 316.5 * ᐃ, 104 * ᐃ, ᐃ * 316.5, 134 * ᐃ, 331 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, ᐃ * 341, 133 * ᐃ, 341 * ᐃ, 132 * ᐃ, 351 * ᐃ);
		Ⲇ.bezierCurveTo(69.5 * ᐃ, ᐃ * 342, ᐃ * 69.5, 342 * ᐃ, ⵠΔΔⲆᐃⵠⵠ * ᐃ, 333 * ᐃ);
		Ⲇ.bezierCurveTo(ΔᐃⲆⵠⲆⵠⵠ * ᐃ, 323 * ᐃ, ⵠⵠΔⵠΔ * ᐃ, 323 * ᐃ, ⵠⲆᐃⵠⲆᐃⲆ * ᐃ, ᐃ * 313);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠᐃᐃΔᐃ], ᐃᐃΔⵠⵠᐃᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(51.5 * ᐃ, ᐃ * 440.5);
		Ⲇ.rotate(.2);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, ᐃ * -18.5, 41 * ᐃ, 37 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ], ᐃᐃ[ΔⲆⲆⲆⵠ], ΔΔⲆⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(73 * ᐃ, ᐃ * 316);
		Ⲇ.bezierCurveTo(ᐃ * 90, 324.5 * ᐃ, ᐃ * 90, ᐃ * 324.5, 107 * ᐃ, ᐃ * 333);
		Ⲇ.bezierCurveTo(70 * ᐃ, 327.5 * ᐃ, 70 * ᐃ, 327.5 * ᐃ, ᐃ * 33, 322 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆΔ]);
		return ΔΔ
	}

	function ⵠⵠᐃⵠᐃⲆᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 424;
		ΔΔ.height = 788 * ᐃ;
		Ⲇ.translate(ᐃ * 25, 25 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⵠ;
		Ⲇ.save();
		Ⲇ.translate(193.5 * ᐃ, ᐃ * 602.5);
		Ⲇ.rotate(-.12);
		ᐃΔⵠ(Ⲇ, ᐃ * -26.5, -97.5 * ᐃ, 53 * ᐃ, ᐃ * 195, ᐃ * 25);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 137, ᐃ * 519);
		Ⲇ.bezierCurveTo(182 * ᐃ, ᐃ * 513, ᐃ * 182, ᐃ * 513, 227 * ᐃ, ᐃ * 507);
		Ⲇ.bezierCurveTo(214 * ᐃ, 417 * ᐃ, 189 * ᐃ, ᐃ * 304, ᐃ * 221, 180 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 191, ᐃ * 126, ᐃ * 192, ᐃ * 105, 198 * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(ᐃ * 123, 102 * ᐃ, ᐃ * 99, ᐃ * 285, 137 * ᐃ, ᐃ * 517);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(175 * ᐃ, ᐃ * 119);
		Ⲇ.bezierCurveTo(176 * ᐃ, 142 * ᐃ, ᐃ * 184, 165 * ᐃ, ᐃ * 197, 183 * ᐃ);
		Ⲇ.bezierCurveTo(167 * ᐃ, ᐃ * 325, ᐃ * 191, 405 * ᐃ, 202 * ᐃ, 502 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 180, 503 * ᐃ, 180 * ᐃ, ᐃ * 503, ᐃ * 158, 504 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135, 396 * ᐃ, ᐃ * 134, 185 * ᐃ, ᐃ * 175, ᐃ * 119);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(110 * ᐃ, ᐃ * 518);
		Ⲇ.bezierCurveTo(ᐃ * 111.5, 533 * ᐃ, 111.5 * ᐃ, 533 * ᐃ, 113 * ᐃ, 548 * ᐃ);
		Ⲇ.bezierCurveTo(162.5 * ᐃ, 544 * ᐃ, 162.5 * ᐃ, 544 * ᐃ, ᐃ * 212, ᐃ * 540);
		Ⲇ.bezierCurveTo(ᐃ * 312, ᐃ * 535, 281 * ᐃ, 665 * ᐃ, ᐃ * 225, 665 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 227, ᐃ * 686.5, ᐃ * 227, ᐃ * 686.5, ᐃ * 229, 708 * ᐃ);
		Ⲇ.bezierCurveTo(343 * ᐃ, ᐃ * 684, ᐃ * 354, ᐃ * 496, 222 * ᐃ, 498 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, ᐃ * 503, ᐃ * 165.5, 503 * ᐃ, ᐃ * 109, ᐃ * 508);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, 204 * ᐃ, 693 * ᐃ, 36.013886210738214 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		ΔⵠⲆ(Ⲇ, 105 * ᐃ, 518 * ᐃ, ᐃ * 30);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 171, ᐃ * 535);
		Ⲇ.bezierCurveTo(139.5 * ᐃ, 537.5 * ᐃ, 139.5 * ᐃ, ᐃ * 537.5, 108 * ᐃ, 540 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 527.5, ᐃ * 110, 527.5 * ᐃ, 112 * ᐃ, 515 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 148, 513 * ᐃ, 148 * ᐃ, 513 * ᐃ, 184 * ᐃ, ᐃ * 511);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(244 * ᐃ, ᐃ * 669);
		Ⲇ.bezierCurveTo(248.5 * ᐃ, ᐃ * 680, ᐃ * 248.5, 680 * ᐃ, ᐃ * 253, 691 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 239.5, ᐃ * 697, ᐃ * 239.5, ᐃ * 697, 226 * ᐃ, ᐃ * 703);
		Ⲇ.bezierCurveTo(ᐃ * 223, 691.5 * ᐃ, 223 * ᐃ, 691.5 * ᐃ, ᐃ * 220, ᐃ * 680);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.translate(-25 * ᐃ, ᐃ * -25);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(193.5 * ᐃ, ᐃ * 602.5);
		Ⲇ.rotate(-.12);
		ᐃΔⵠ(Ⲇ, -26.5 * ᐃ, -97.5 * ᐃ, 53 * ᐃ, ᐃ * 195, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], ᐃ * 16);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 137, 519 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182, 513 * ᐃ, ᐃ * 182, 513 * ᐃ, ᐃ * 227, ᐃ * 507);
		Ⲇ.bezierCurveTo(ᐃ * 214, ᐃ * 417, 189 * ᐃ, ᐃ * 304, 221 * ᐃ, ᐃ * 180);
		Ⲇ.bezierCurveTo(191 * ᐃ, 126 * ᐃ, ᐃ * 192, 105 * ᐃ, ᐃ * 198, ᐃ * 64);
		Ⲇ.bezierCurveTo(ᐃ * 123, ᐃ * 102, 99 * ᐃ, 285 * ᐃ, ᐃ * 137, 517 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], 16 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(175 * ᐃ, 119 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176, ᐃ * 142, 184 * ᐃ, ᐃ * 165, 197 * ᐃ, ᐃ * 183);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 325, 191 * ᐃ, 405 * ᐃ, ᐃ * 202, ᐃ * 502);
		Ⲇ.bezierCurveTo(180 * ᐃ, ᐃ * 503, ᐃ * 180, ᐃ * 503, ᐃ * 158, ᐃ * 504);
		Ⲇ.bezierCurveTo(135 * ᐃ, 396 * ᐃ, 134 * ᐃ, ᐃ * 185, ᐃ * 175, ᐃ * 119);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(110 * ᐃ, ᐃ * 518);
		Ⲇ.bezierCurveTo(ᐃ * 111.5, ᐃ * 533, ᐃ * 111.5, ᐃ * 533, ᐃ * 113, ᐃ * 548);
		Ⲇ.bezierCurveTo(ᐃ * 162.5, 544 * ᐃ, 162.5 * ᐃ, 544 * ᐃ, 212 * ᐃ, ᐃ * 540);
		Ⲇ.bezierCurveTo(ᐃ * 312, 535 * ᐃ, ᐃ * 281, ᐃ * 665, ᐃ * 225, 665 * ᐃ);
		Ⲇ.bezierCurveTo(227 * ᐃ, ᐃ * 686.5, ᐃ * 227, ᐃ * 686.5, ᐃ * 229, ᐃ * 708);
		Ⲇ.bezierCurveTo(343 * ᐃ, 684 * ᐃ, 354 * ᐃ, 496 * ᐃ, ᐃ * 222, 498 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, ᐃ * 503, ᐃ * 165.5, ᐃ * 503, 109 * ᐃ, ᐃ * 508);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[4], ᐃ * 16);
		ΔⵠⲆ(Ⲇ, ᐃ * 204, 693 * ᐃ, ᐃ * 36.013886210738214);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆΔ], ᐃᐃ[4], ᐃ * 16);
		ΔⵠⲆ(Ⲇ, 105 * ᐃ, 518 * ᐃ, ᐃ * 30);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔⲆⲆ], ᐃᐃ[ⲆⵠⲆⲆ], ⵠⲆⵠⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 171, 535 * ᐃ);
		Ⲇ.bezierCurveTo(139.5 * ᐃ, 537.5 * ᐃ, 139.5 * ᐃ, 537.5 * ᐃ, 108 * ᐃ, ᐃ * 540);
		Ⲇ.bezierCurveTo(110 * ᐃ, ᐃ * 527.5, 110 * ᐃ, ᐃ * 527.5, 112 * ᐃ, ᐃ * 515);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 513, ᐃ * 148, 513 * ᐃ, ᐃ * 184, ᐃ * 511);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(244 * ᐃ, 669 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 248.5, ᐃ * 680, 248.5 * ᐃ, 680 * ᐃ, 253 * ᐃ, ᐃ * 691);
		Ⲇ.bezierCurveTo(ᐃ * 239.5, ᐃ * 697, 239.5 * ᐃ, ᐃ * 697, 226 * ᐃ, 703 * ᐃ);
		Ⲇ.bezierCurveTo(223 * ᐃ, 691.5 * ᐃ, 223 * ᐃ, ᐃ * 691.5, ᐃ * 220, ᐃ * 680);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		ΔⵠⲆ(Ⲇ, ᐃ * 204, 693 * ᐃ, ᐃ * 17.029386365926403);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		ΔⵠⲆ(Ⲇ, 106 * ᐃ, 518 * ᐃ, 12 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		return ΔΔ
	}

	function ᐃⵠᐃⵠⲆΔΔ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 283;
		ΔΔ.height = 224 * ᐃ;
		Ⲇ.translate(ΔΔⲆᐃ, ᐃ * 15);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, ᐃ * 55);
		Ⲇ.bezierCurveTo(ᐃ * 127, 27 * ᐃ, 195 * ᐃ, ᐃ * 42, 213 * ᐃ, 78 * ᐃ);
		Ⲇ.bezierCurveTo(254 * ᐃ, 134 * ᐃ, ᐃ * 226, 198 * ᐃ, ᐃ * 153, ᐃ * 197);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 204, ᐃ * 56, 158 * ᐃ, 51 * ᐃ, 115 * ᐃ);
		Ⲇ.bezierCurveTo(50 * ᐃ, ᐃ * 93, 81 * ᐃ, 62 * ᐃ, 90 * ᐃ, 57 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 100, ᐃ * 33);
		Ⲇ.bezierCurveTo(ᐃ * 85, 62 * ᐃ, 102 * ᐃ, 66 * ᐃ, ᐃ * 110, ᐃ * 83);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(181 * ᐃ, ᐃ * 32);
		Ⲇ.bezierCurveTo(196 * ᐃ, 62 * ᐃ, 181 * ᐃ, 68 * ᐃ, 178 * ᐃ, ᐃ * 69);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(225 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(228 * ᐃ, ᐃ * 78, 207 * ᐃ, ᐃ * 77, ᐃ * 192, ᐃ * 88);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(34 * ᐃ, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 46, 111 * ᐃ, ᐃ * 57, 111 * ᐃ, 79 * ᐃ, 109 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(249 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 233, ᐃ * 107, ᐃ * 212, 112 * ᐃ, ᐃ * 202, ᐃ * 115);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56 * ᐃ, ᐃ * 50);
		Ⲇ.bezierCurveTo(ᐃ * 56, ᐃ * 82, ᐃ * 73, 82 * ᐃ, 93 * ᐃ, ᐃ * 89);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(Δⵠⵠ, -15 * ᐃ);
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(100 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(ᐃ * 85, 62 * ᐃ, 102 * ᐃ, 66 * ᐃ, ᐃ * 110, 83 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⵠΔⲆ], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(181 * ᐃ, ᐃ * 32);
		Ⲇ.bezierCurveTo(196 * ᐃ, 62 * ᐃ, 181 * ᐃ, 68 * ᐃ, ᐃ * 178, 69 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 40);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 225, ᐃ * 52);
		Ⲇ.bezierCurveTo(228 * ᐃ, 78 * ᐃ, ᐃ * 207, 77 * ᐃ, 192 * ᐃ, 88 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃⵠΔⲆ], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(34 * ᐃ, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 111, ᐃ * 57, ᐃ * 111, 79 * ᐃ, 109 * ᐃ);
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ᐃᐃ[2], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 249, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 233, ᐃ * 107, ᐃ * 212, 112 * ᐃ, 202 * ᐃ, ᐃ * 115);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃⵠⲆ], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56, 50 * ᐃ);
		Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 82, ᐃ * 73, 82 * ᐃ, 93 * ᐃ, 89 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], 40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, ᐃ * 55);
		Ⲇ.bezierCurveTo(ᐃ * 127, 27 * ᐃ, ᐃ * 195, ᐃ * 42, ᐃ * 213, ᐃ * 78);
		Ⲇ.bezierCurveTo(ᐃ * 254, ᐃ * 134, ᐃ * 226, 198 * ᐃ, ᐃ * 153, ᐃ * 197);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 204, 56 * ᐃ, ᐃ * 158, 51 * ᐃ, ᐃ * 115);
		Ⲇ.bezierCurveTo(50 * ᐃ, 93 * ᐃ, ᐃ * 81, ᐃ * 62, ᐃ * 90, ᐃ * 57);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * ⲆⲆᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(100 * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, ᐃ * 62, ᐃ * 102, 66 * ᐃ, 110 * ᐃ, ᐃ * 83);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃΔᐃ], ᐃ * 20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 181, ᐃ * 32);
		Ⲇ.bezierCurveTo(ᐃ * 196, ᐃ * 62, ᐃ * 181, ᐃ * 68, ᐃ * 178, 69 * ᐃ);
		Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[ⲆⲆΔᐃ], ᐃ * 20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 225, 52 * ᐃ);
		Ⲇ.bezierCurveTo(228 * ᐃ, ᐃ * 78, ᐃ * 207, ᐃ * 77, ᐃ * 192, 88 * ᐃ);
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[1], ᐃ * ⵠΔⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 34, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 111, ᐃ * 57, 111 * ᐃ, ᐃ * 79, 109 * ᐃ);
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[1], 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 249, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 233, ᐃ * 107, 212 * ᐃ, 112 * ᐃ, 202 * ᐃ, 115 * ᐃ);
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ΔⲆᐃ], ᐃ * 20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56 * ᐃ, ᐃ * 50);
		Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 82, 73 * ᐃ, 82 * ᐃ, 93 * ᐃ, ᐃ * 89);
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ΔΔⲆΔ], ᐃ * 20);
		ΔⵠⲆ(Ⲇ, ᐃ * 101, ᐃ * 155, 20.591260281974 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 180, 155 * ᐃ, ᐃ * 20.591260281974);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, ᐃ * 95, 148 * ᐃ, 7.211102550927978 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 173, ᐃ * 148, 7.211102550927978 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ]);
		if (1 === ᐃⲆ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(191 * ᐃ, ᐃ * 107);
			Ⲇ.bezierCurveTo(ᐃ * 180, 104 * ᐃ, 175 * ᐃ, 101 * ᐃ, ᐃ * 180, 95 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 180, 95 * ᐃ, ᐃ * 181, 99 * ᐃ, 188 * ᐃ, 103 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 191, ᐃ * 101, ᐃ * 191, ᐃ * 95, 190 * ᐃ, ᐃ * 91);
			Ⲇ.bezierCurveTo(190 * ᐃ, ᐃ * 91, ᐃ * 196, 89 * ᐃ, ᐃ * 195, ᐃ * 99);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[2]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(206 * ᐃ, ᐃ * 98);
			Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 95, ᐃ * 200, ᐃ * 93, 198 * ᐃ, 101 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 194, ᐃ * 109, ᐃ * 193, 109 * ᐃ, 196 * ᐃ, ᐃ * 110);
			Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 115, 209 * ᐃ, ᐃ * 114, ᐃ * 211, ᐃ * 111);
			Ⲇ.bezierCurveTo(211 * ᐃ, 106 * ᐃ, 208 * ᐃ, 108 * ᐃ, ᐃ * 203, 108 * ᐃ);
			Ⲇ.bezierCurveTo(193 * ᐃ, ᐃ * 107, 204 * ᐃ, ᐃ * 101, 206 * ᐃ, 99 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(172 * ᐃ, 111 * ᐃ);
			Ⲇ.bezierCurveTo(172 * ᐃ, ᐃ * 106, ᐃ * 174, 105 * ᐃ, 185 * ᐃ, ᐃ * 109);
			Ⲇ.bezierCurveTo(190 * ᐃ, 109 * ᐃ, ᐃ * 189, 114 * ᐃ, 185 * ᐃ, ᐃ * 120);
			Ⲇ.bezierCurveTo(ᐃ * 181, 125 * ᐃ, ᐃ * 180, 126 * ᐃ, ᐃ * 176, 122 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 182, ᐃ * 119, 187 * ᐃ, ᐃ * 110, ᐃ * 182, 112 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 202, 125 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 197, 117 * ᐃ, ᐃ * 193, 116 * ᐃ, ᐃ * 193, ᐃ * 120);
			Ⲇ.bezierCurveTo(ᐃ * 192.5, ᐃ * 124.5, ᐃ * 192.5, 124.5 * ᐃ, 192 * ᐃ, 129 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 188, ᐃ * 129, 187 * ᐃ, ᐃ * 124, 189 * ᐃ, 120 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 191, ᐃ * 110, ᐃ * 192, 110 * ᐃ, ᐃ * 200, 116 * ᐃ);
			Ⲇ.bezierCurveTo(208 * ᐃ, 120 * ᐃ, 207 * ᐃ, ᐃ * 123, ᐃ * 202, 125 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[2])
		}
		return ΔΔ
	}

	function ⵠⵠᐃⲆΔᐃⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 104;
		ΔΔ.height = 112 * ᐃ;
		Ⲇ.translate(0, ᐃ * 15);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 16, 44 * ᐃ);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, 48 * ᐃ, ᐃ * 30.5, ᐃ * 48, ᐃ * 45, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 36.5, ᐃ * 63, 36.5 * ᐃ, ᐃ * 63, 28 * ᐃ, 74 * ᐃ);
		Ⲇ.bezierCurveTo(32 * ᐃ, ᐃ * 86, 61 * ᐃ, ᐃ * 92, 78 * ᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 62, ᐃ * 92, ᐃ * 40, ᐃ * 80, 26 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * ΔΔΔΔⵠ, 42 * ᐃ, ᐃ * 16, ᐃ * 34, 21 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 22, ᐃ * 27, ᐃ * ΔᐃⲆⲆᐃⵠⲆ, ᐃ * 39, 16 * ᐃ, 44 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -ⲆⲆᐃΔⵠⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⲆⲆᐃΔΔ, ᐃ * 44);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, 48 * ᐃ, ᐃ * 30.5, ᐃ * 48, 45 * ᐃ, ᐃ * 52);
		Ⲇ.bezierCurveTo(ᐃ * 36.5, 63 * ᐃ, ᐃ * 36.5, ᐃ * 63, 28 * ᐃ, 74 * ᐃ);
		Ⲇ.bezierCurveTo(32 * ᐃ, ᐃ * 86, 61 * ᐃ, ᐃ * 92, 78 * ᐃ, 76 * ᐃ);
		Ⲇ.bezierCurveTo(93 * ᐃ, ᐃ * 62, ᐃ * 92, 40 * ᐃ, 80 * ᐃ, ᐃ * 26);
		Ⲇ.bezierCurveTo(65 * ᐃ, ᐃ * 11, ᐃ * 42, 16 * ᐃ, ᐃ * 34, ᐃ * 21);
		Ⲇ.bezierCurveTo(ᐃ * 22, 27 * ᐃ, 16 * ᐃ, 39 * ᐃ, ᐃΔⲆⵠⵠΔⵠ * ᐃ, ᐃ * 44);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⲆⲆⵠ], ᐃ * ΔᐃᐃⵠΔ);
		return ΔΔ
	}

	function ᐃΔΔΔᐃⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 290 * ᐃ;
		ΔΔ.height = 525 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(20 * ᐃ, 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111 * ᐃ, ᐃ * 351);
		Ⲇ.bezierCurveTo(ᐃ * 129, 218 * ᐃ, 129 * ᐃ, ᐃ * 218, 147 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 65.5, 167 * ᐃ, ᐃ * 65.5, ᐃ * 187, 46 * ᐃ);
		Ⲇ.bezierCurveTo(201.5 * ᐃ, ᐃ * 70.5, ᐃ * 201.5, ᐃ * 70.5, 216 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(194.5 * ᐃ, 227.5 * ᐃ, ᐃ * 194.5, ᐃ * 227.5, 173 * ᐃ, 360 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 425.5 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, ᐃ * -14, ᐃ * -56.5, ᐃ * 28, ᐃ * 113, ᐃ * 8);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ᐃ * 122, 480 * ᐃ, 18.439088914585774 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(79 * ᐃ, ᐃ * 371);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 373, ᐃ * 145, ᐃ * 378, ᐃ * 197, 388 * ᐃ);
		Ⲇ.bezierCurveTo(205 * ᐃ, ᐃ * 382.5, 205 * ᐃ, 382.5 * ᐃ, 213 * ᐃ, 377 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 352, ᐃ * 117, 345 * ᐃ, ᐃ * 69, ᐃ * 355);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.translate(ᐃ * -20, -ᐃΔΔⲆΔⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111 * ᐃ, ᐃ * 351);
		Ⲇ.bezierCurveTo(ᐃ * 129, 218 * ᐃ, 129 * ᐃ, ᐃ * 218, ᐃ * 147, 85 * ᐃ);
		Ⲇ.bezierCurveTo(167 * ᐃ, ᐃ * 65.5, 167 * ᐃ, ᐃ * 65.5, 187 * ᐃ, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 70.5, ᐃ * 201.5, ᐃ * 70.5, ᐃ * 216, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * 194.5, ᐃ * 227.5, ᐃ * 194.5, 227.5 * ᐃ, 173 * ᐃ, ᐃ * 360);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], 12.5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 425.5 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, -ΔⲆⵠⲆΔΔⲆ * ᐃ, ᐃ * -56.5, 28 * ᐃ, 113 * ᐃ, ᐃ * ⵠᐃⵠⵠⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔΔⲆᐃᐃ], 12.5 * ᐃ);
		ΔⵠⲆ(Ⲇ, 122 * ᐃ, 480 * ᐃ, 18.439088914585774 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 12.5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 79, ᐃ * 371);
		Ⲇ.bezierCurveTo(ᐃ * 131, 373 * ᐃ, ᐃ * 145, ᐃ * 378, 197 * ᐃ, 388 * ᐃ);
		Ⲇ.bezierCurveTo(205 * ᐃ, 382.5 * ᐃ, 205 * ᐃ, ᐃ * 382.5, 213 * ᐃ, 377 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 352, ᐃ * 117, ᐃ * 345, 69 * ᐃ, 355 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ], ᐃᐃ[ᐃᐃⵠⵠ], 12.5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 128, 345 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 345, 147 * ᐃ, ᐃ * 346, 158 * ᐃ, ᐃ * 349);
		Ⲇ.bezierCurveTo(177.5 * ᐃ, ᐃ * 224.5, 177.5 * ᐃ, 224.5 * ᐃ, 197 * ᐃ, ᐃ * ⵠΔᐃᐃⲆ);
		Ⲇ.bezierCurveTo(190.5 * ᐃ, ᐃ * 84.5, ᐃ * 190.5, ᐃ * 84.5, ᐃ * 184, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 173.5, ᐃ * 82, ᐃ * 173.5, 82 * ᐃ, 163 * ᐃ, ᐃ * 95);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		return ΔΔ
	}
	const ᐃΔᐃⲆⵠ = ΔⲆΔⲆ;

	function ᐃⵠᐃᐃΔᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 321 * ᐃ;
		ΔΔ.height = 284 * ᐃ;
		Ⲇ.translate(ᐃ * 100, ᐃ * 30);
		Ⲇ.translate(5 * ᐃ, 10 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃᐃⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(ᐃ * 81, 22 * ᐃ, 93 * ᐃ, 26 * ᐃ, ᐃ * 123, 47 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160, ᐃ * 73, 169 * ᐃ, 80 * ᐃ, ᐃ * 191, ᐃ * 99);
		Ⲇ.bezierCurveTo(ᐃ * 202, ᐃ * 107, ᐃ * 211, ᐃ * 118, ᐃ * 195, ᐃ * 151);
		Ⲇ.bezierCurveTo(181 * ᐃ, 183 * ᐃ, ᐃ * 157, 192 * ᐃ, ᐃ * 129, ᐃ * 174);
		Ⲇ.bezierCurveTo(ᐃ * 78, 140 * ᐃ, ᐃ * 68, ᐃ * 129, 37 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * 15, ᐃ * 68, ᐃ * 25, ᐃ * 52, 56 * ᐃ, 34 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠⵠⲆΔ;
		Ⲇ.translate(-5 * ᐃ, -ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, 22 * ᐃ, 93 * ᐃ, 26 * ᐃ, 123 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160, 73 * ᐃ, 169 * ᐃ, 80 * ᐃ, ᐃ * 191, 99 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 202, 107 * ᐃ, ᐃ * 211, ᐃ * 118, 195 * ᐃ, ᐃ * 151);
		Ⲇ.bezierCurveTo(ᐃ * 181, 183 * ᐃ, 157 * ᐃ, 192 * ᐃ, 129 * ᐃ, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 140, 68 * ᐃ, 129 * ᐃ, ᐃ * 37, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * 15, 68 * ᐃ, ᐃ * 25, ᐃ * 52, ᐃ * 56, ᐃ * 34);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * ᐃᐃⵠᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(167 * ᐃ, 120 * ᐃ);
		Ⲇ.bezierCurveTo(196 * ᐃ, 106 * ᐃ, ᐃ * 207, ᐃ * 111, 199 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 185, 172 * ᐃ, ᐃ * 166, ᐃ * 187, 145 * ᐃ, 179 * ᐃ);
		Ⲇ.bezierCurveTo(118 * ᐃ, 166 * ᐃ, ᐃ * 127, ᐃ * 139, 166 * ᐃ, ᐃ * 121);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 25, ᐃ * 64);
		Ⲇ.bezierCurveTo(59 * ᐃ, 96 * ᐃ, 97 * ᐃ, ᐃ * 128, 129 * ᐃ, 151 * ᐃ);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 163, ᐃ * 134, 174 * ᐃ, 142 * ᐃ, 180 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, 170 * ᐃ, 68 * ᐃ, 134 * ᐃ, ᐃ * 31, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 24, 71 * ᐃ, 24 * ᐃ, 70 * ᐃ, 25 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 161, 141 * ᐃ);
		Ⲇ.bezierCurveTo(181 * ᐃ, ᐃ * 131, ᐃ * 186, ᐃ * 135, ᐃ * 173, ᐃ * 152);
		Ⲇ.bezierCurveTo(163 * ᐃ, 163 * ᐃ, 155 * ᐃ, 161 * ᐃ, 151 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 147, 140 * ᐃ, ᐃ * 155, 131 * ᐃ, 175 * ᐃ, ᐃ * 125);
		Ⲇ.bezierCurveTo(190 * ᐃ, ᐃ * 120, ᐃ * 196, ᐃ * 121, 189 * ᐃ, 143 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182, 167 * ᐃ, 169 * ᐃ, 174 * ᐃ, ᐃ * 157, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, 172 * ᐃ, 139 * ᐃ, 162 * ᐃ, ᐃ * 140, 156 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[4], ⲆⲆΔΔ * ᐃ);
		Ⲇ.translate(-ⲆⲆⵠⵠⲆ * ᐃ, -30 * ᐃ);
		Ⲇ.translate(ᐃ * 10, ᐃ * 70);
		Ⲇ.translate(ΔᐃΔΔⲆ * ᐃ, ᐃ * 10);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, 22 * ᐃ, 93 * ᐃ, ᐃ * 26, 123 * ᐃ, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 160, 73 * ᐃ, 169 * ᐃ, ᐃ * 80, ᐃ * 191, 99 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 202, ᐃ * 107, 211 * ᐃ, ᐃ * 118, ᐃ * 195, 151 * ᐃ);
		Ⲇ.bezierCurveTo(181 * ᐃ, ᐃ * 183, 157 * ᐃ, ᐃ * 192, 129 * ᐃ, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78, 140 * ᐃ, ᐃ * 68, 129 * ᐃ, 37 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * ᐃᐃⵠⲆᐃⲆΔ, ᐃ * 68, 25 * ᐃ, ᐃ * 52, 56 * ᐃ, ᐃ * 34);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-ⲆⲆᐃⵠ * ᐃ, ᐃ * -10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, 22 * ᐃ, 93 * ᐃ, 26 * ᐃ, ᐃ * 123, ᐃ * 47);
		Ⲇ.bezierCurveTo(160 * ᐃ, ᐃ * 73, 169 * ᐃ, 80 * ᐃ, ᐃ * 191, 99 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, 107 * ᐃ, 211 * ᐃ, 118 * ᐃ, ᐃ * 195, ᐃ * 151);
		Ⲇ.bezierCurveTo(ᐃ * 181, 183 * ᐃ, 157 * ᐃ, ᐃ * 192, 129 * ᐃ, 174 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 140 * ᐃ, ᐃ * 68, 129 * ᐃ, 37 * ᐃ, 94 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆΔⲆⲆⲆⲆᐃ, 68 * ᐃ, 25 * ᐃ, 52 * ᐃ, ᐃ * 56, 34 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⵠᐃ], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(167 * ᐃ, 120 * ᐃ);
		Ⲇ.bezierCurveTo(196 * ᐃ, 106 * ᐃ, 207 * ᐃ, 111 * ᐃ, 199 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(185 * ᐃ, 172 * ᐃ, ᐃ * 166, ᐃ * 187, ᐃ * 145, 179 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 118, 166 * ᐃ, 127 * ᐃ, ᐃ * 139, 166 * ᐃ, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(25 * ᐃ, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59, 96 * ᐃ, ᐃ * 97, 128 * ᐃ, 129 * ᐃ, ᐃ * 151);
		Ⲇ.bezierCurveTo(126 * ᐃ, 163 * ᐃ, ᐃ * 134, ᐃ * 174, 142 * ᐃ, ᐃ * 180);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 170, 68 * ᐃ, ᐃ * 134, 31 * ᐃ, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 24, 71 * ᐃ, ᐃ * 24, 70 * ᐃ, 25 * ᐃ, ᐃ * 65);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(161 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181, 131 * ᐃ, 186 * ᐃ, ᐃ * 135, ᐃ * 173, ᐃ * 152);
		Ⲇ.bezierCurveTo(ᐃ * 163, ᐃ * 163, ᐃ * 155, 161 * ᐃ, ᐃ * 151, ᐃ * 150);
		Ⲇ.bezierCurveTo(147 * ᐃ, 140 * ᐃ, ᐃ * 155, 131 * ᐃ, ᐃ * 175, 125 * ᐃ);
		Ⲇ.bezierCurveTo(190 * ᐃ, ᐃ * 120, ᐃ * 196, 121 * ᐃ, 189 * ᐃ, ᐃ * 143);
		Ⲇ.bezierCurveTo(ᐃ * 182, 167 * ᐃ, 169 * ᐃ, ᐃ * 174, ᐃ * 157, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, 172 * ᐃ, 139 * ᐃ, 162 * ᐃ, 140 * ᐃ, ᐃ * 156);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⲆᐃΔ], ᐃ * 4);
		Ⲇ.translate(ᐃ * 20, ᐃ * -80);
		Ⲇ.translate(ᐃ * ᐃᐃⲆᐃⵠ, 10 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃⵠΔ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(ᐃ * 81, 22 * ᐃ, 93 * ᐃ, ᐃ * 26, ᐃ * 123, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 160, ᐃ * 73, ᐃ * 169, 80 * ᐃ, 191 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, ᐃ * 107, 211 * ᐃ, ᐃ * 118, 195 * ᐃ, ᐃ * 151);
		Ⲇ.bezierCurveTo(ᐃ * 181, 183 * ᐃ, ᐃ * 157, ᐃ * 192, ᐃ * 129, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 140, 68 * ᐃ, 129 * ᐃ, 37 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(ΔⵠΔⵠΔⲆⵠ * ᐃ, 68 * ᐃ, ᐃ * 25, ᐃ * 52, ᐃ * 56, ᐃ * 34);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ᐃᐃⲆᐃΔ, ᐃ * -10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, 22 * ᐃ, 93 * ᐃ, ᐃ * 26, 123 * ᐃ, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 160, 73 * ᐃ, ᐃ * 169, 80 * ᐃ, 191 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, 107 * ᐃ, ᐃ * 211, 118 * ᐃ, ᐃ * 195, 151 * ᐃ);
		Ⲇ.bezierCurveTo(181 * ᐃ, ᐃ * 183, ᐃ * 157, ᐃ * 192, ᐃ * 129, 174 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, ᐃ * 140, 68 * ᐃ, ᐃ * 129, 37 * ᐃ, 94 * ᐃ);
		Ⲇ.bezierCurveTo(15 * ᐃ, ᐃ * 68, ᐃ * 25, 52 * ᐃ, 56 * ᐃ, 34 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ⲆⵠⲆⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(167 * ᐃ, ᐃ * 120);
		Ⲇ.bezierCurveTo(ᐃ * 196, ᐃ * 106, ᐃ * 207, 111 * ᐃ, ᐃ * 199, 135 * ᐃ);
		Ⲇ.bezierCurveTo(185 * ᐃ, ᐃ * 172, 166 * ᐃ, 187 * ᐃ, 145 * ᐃ, ᐃ * 179);
		Ⲇ.bezierCurveTo(118 * ᐃ, ᐃ * 166, 127 * ᐃ, ᐃ * 139, ᐃ * 166, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 25, 64 * ᐃ);
		Ⲇ.bezierCurveTo(59 * ᐃ, 96 * ᐃ, 97 * ᐃ, ᐃ * 128, ᐃ * 129, 151 * ᐃ);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 163, 134 * ᐃ, ᐃ * 174, ᐃ * 142, ᐃ * 180);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 170, ᐃ * 68, ᐃ * 134, 31 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 24, ᐃ * 71, ᐃ * 24, 70 * ᐃ, ᐃ * 25, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(161 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181, 131 * ᐃ, 186 * ᐃ, ᐃ * 135, ᐃ * 173, 152 * ᐃ);
		Ⲇ.bezierCurveTo(163 * ᐃ, ᐃ * 163, ᐃ * 155, 161 * ᐃ, 151 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 147, 140 * ᐃ, 155 * ᐃ, 131 * ᐃ, 175 * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, ᐃ * 120, 196 * ᐃ, ᐃ * 121, ᐃ * 189, 143 * ᐃ);
		Ⲇ.bezierCurveTo(182 * ᐃ, 167 * ᐃ, 169 * ᐃ, 174 * ᐃ, ᐃ * 157, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, ᐃ * 172, ᐃ * 139, ᐃ * 162, 140 * ᐃ, 156 * ᐃ);
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[Δⵠⵠⵠ], ᐃ * 4);
		return ΔΔ
	}

	function ΔΔᐃᐃⵠⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 290;
		ΔΔ.height = ᐃ * 525;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * ⲆᐃΔⵠ, ΔⲆᐃⲆⲆΔⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111 * ᐃ, 351 * ᐃ);
		Ⲇ.bezierCurveTo(128.5 * ᐃ, ᐃ * 218.5, 128.5 * ᐃ, ᐃ * 218.5, ᐃ * 146, 86 * ᐃ);
		Ⲇ.bezierCurveTo(166.5 * ᐃ, 66.5 * ᐃ, ᐃ * 166.5, ᐃ * 66.5, ᐃ * 187, 47 * ᐃ);
		Ⲇ.bezierCurveTo(201 * ᐃ, ᐃ * 71.5, 201 * ᐃ, 71.5 * ᐃ, 215 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(193 * ᐃ, ᐃ * 228.5, 193 * ᐃ, 228.5 * ᐃ, 171 * ᐃ, ᐃ * 361);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 129.5, 424 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, -15.5 * ᐃ, -63 * ᐃ, 31 * ᐃ, ᐃ * 126, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 121, ᐃ * 480, ᐃ * 20.396078054371138);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 90, 311 * ᐃ);
		Ⲇ.bezierCurveTo(95 * ᐃ, 324 * ᐃ, 95 * ᐃ, 324 * ᐃ, ᐃ * ΔⵠΔⵠⵠ, 337 * ᐃ);
		Ⲇ.bezierCurveTo(141.5 * ᐃ, ᐃ * 345.5, 141.5 * ᐃ, 345.5 * ᐃ, 183 * ᐃ, 354 * ᐃ);
		Ⲇ.bezierCurveTo(193.5 * ᐃ, 342.5 * ᐃ, ᐃ * 193.5, 342.5 * ᐃ, ᐃ * 204, 331 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, ᐃ * 354, 202 * ᐃ, 354 * ᐃ, 200 * ᐃ, ᐃ * 377);
		Ⲇ.bezierCurveTo(ᐃ * 147, 388 * ᐃ, 106 * ᐃ, ᐃ * 371, 79 * ᐃ, ᐃ * 356);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.translate(-20 * ᐃ, -20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 111, 351 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128.5, 218.5 * ᐃ, ᐃ * 128.5, 218.5 * ᐃ, 146 * ᐃ, ᐃ * 86);
		Ⲇ.bezierCurveTo(166.5 * ᐃ, ᐃ * 66.5, 166.5 * ᐃ, ᐃ * 66.5, 187 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 71.5, 201 * ᐃ, 71.5 * ᐃ, 215 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(ᐃ * 193, ᐃ * 228.5, ᐃ * 193, 228.5 * ᐃ, 171 * ᐃ, ᐃ * 361);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * 12.5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 129.5, 424 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, -15.5 * ᐃ, -63 * ᐃ, ᐃ * 31, 126 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔΔⲆᐃᐃ], ᐃ * 12.5);
		ΔⵠⲆ(Ⲇ, ᐃ * 121, ᐃ * 480, ᐃ * 20.396078054371138);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃᐃ[5], 12.5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(90 * ᐃ, 311 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95, 324 * ᐃ, 95 * ᐃ, 324 * ᐃ, ᐃ * ΔⵠΔⵠⵠ, 337 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141.5, ᐃ * 345.5, 141.5 * ᐃ, 345.5 * ᐃ, 183 * ᐃ, 354 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 193.5, ᐃ * 342.5, 193.5 * ᐃ, 342.5 * ᐃ, 204 * ᐃ, 331 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 202, 354 * ᐃ, 202 * ᐃ, ᐃ * 354, ᐃ * 200, ᐃ * 377);
		Ⲇ.bezierCurveTo(147 * ᐃ, ᐃ * 388, 106 * ᐃ, ᐃ * 371, ᐃ * 79, 356 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠΔⲆΔ], 12.5 * ᐃ);
		return ΔΔ
	}

	function ΔᐃⵠᐃᐃⵠⲆⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 350;
		ΔΔ.height = ᐃ * 140;
		Ⲇ.translate(ᐃ * -50, -150 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 184.5, 222.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 185.5, ᐃ * 184.0625, ᐃ * 302.5, 171.0625 * ᐃ, ᐃ * 313.5, 222.0625 * ᐃ);
		Ⲇ.bezierCurveTo(330.5 * ᐃ, 263.0625 * ᐃ, ᐃ * 181.5, 274.0625 * ᐃ, 184.5 * ᐃ, ᐃ * 223.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ], ᐃᐃ[ⲆⲆΔᐃ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 131.5, ᐃ * 241.0625);
		Ⲇ.bezierCurveTo(144.5 * ᐃ, ᐃ * 278.0625, 270.5 * ᐃ, 209.0625 * ᐃ, 228.5 * ᐃ, ᐃ * 174.0625);
		Ⲇ.bezierCurveTo(ᐃ * 196.5, ᐃ * 147.0625, 117.5 * ᐃ, ᐃ * 196.0625, ᐃ * 131.5, 240.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⲆⲆ], ᐃ * ⲆΔⵠⵠⲆ);
		ΔⵠⲆ(Ⲇ, 270.5 * ᐃ, 225.0625 * ᐃ, 15.811388300841896 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 243.5, ᐃ * 225.0625, 6.082762530298219 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, 255.5 * ᐃ, 210.0625 * ᐃ, ᐃ * 10.816653826391969);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, ᐃ * 167.5, 215.0625 * ᐃ, 15.297058540778355 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, 176.5 * ᐃ, 204.0625 * ᐃ, ᐃ * 7.280109889280518);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆᐃ]);
		ΔⵠⲆ(Ⲇ, 206.5 * ᐃ, ᐃ * 189.0625, 7.280109889280518 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 151.5, 212.0625 * ᐃ);
		Ⲇ.bezierCurveTo(161.5 * ᐃ, 204.0625 * ᐃ, ᐃ * 173.5, 214.0625 * ᐃ, ᐃ * 158.5, 221.0625 * ᐃ);
		Ⲇ.bezierCurveTo(145.5 * ᐃ, ᐃ * 228.0625, ᐃ * 144.5, 216.0625 * ᐃ, 151.5 * ᐃ, ᐃ * 212.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[ᐃΔᐃⲆⵠ], ⲆⵠⵠⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 194.5, 209.0625 * ᐃ);
		Ⲇ.bezierCurveTo(205.5 * ᐃ, ᐃ * 202.0625, ᐃ * 215.5, ᐃ * 207.0625, ᐃ * 199.5, 217.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 187.5, 224.0625 * ᐃ, 182.5 * ᐃ, ᐃ * 217.0625, ᐃ * 194.5, 209.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃΔⲆΔ], ᐃΔᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 188.5, ᐃ * 183.0625);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 176.0625, ᐃ * 213.5, 187.0625 * ᐃ, ᐃ * 193.5, 193.0625 * ᐃ);
		Ⲇ.bezierCurveTo(185.5 * ᐃ, ᐃ * 194.0625, ᐃ * 175.5, ᐃ * 189.0625, 188.5 * ᐃ, ᐃ * 183.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], Ⲇⵠⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 261.5, 202.0625 * ᐃ);
		Ⲇ.bezierCurveTo(274.5 * ᐃ, 201.0625 * ᐃ, ᐃ * 282.5, ᐃ * 214.0625, ᐃ * 261.5, ᐃ * 215.0625);
		Ⲇ.bezierCurveTo(246.5 * ᐃ, ᐃ * 214.0625, ᐃ * 248.5, 203.0625 * ᐃ, 261.5 * ᐃ, ᐃ * 202.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃΔᐃⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 240.5, ᐃ * 231.0625);
		Ⲇ.bezierCurveTo(255.5 * ᐃ, ᐃ * 231.0625, 254.5 * ᐃ, ᐃ * 243.0625, ᐃ * 240.5, ᐃ * 242.0625);
		Ⲇ.bezierCurveTo(225.5 * ᐃ, 239.0625 * ᐃ, ᐃ * 225.5, ᐃ * 232.0625, 240.5 * ᐃ, 231.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ⵠᐃᐃⲆ * ᐃ);
		return ΔΔ
	}

	function ⲆⲆΔΔⵠⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 154 * ᐃ;
		ΔΔ.height = 261 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 125, 69 * ᐃ);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, ᐃ * 141.5, 123.5 * ᐃ, 141.5 * ᐃ, 122 * ᐃ, 214 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 228 * ᐃ, 119 * ᐃ, 239 * ᐃ, ᐃ * 102, ᐃ * 239);
		Ⲇ.bezierCurveTo(ᐃ * 90, 238 * ᐃ, ᐃ * 86, 225 * ᐃ, 89 * ᐃ, ᐃ * 197);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 159, 92 * ᐃ, ᐃ * 141, 94 * ᐃ, ᐃ * 84);
		Ⲇ.bezierCurveTo(94 * ᐃ, 58 * ᐃ, ᐃ * 87, 50 * ᐃ, ᐃ * 73, ᐃ * 52);
		Ⲇ.bezierCurveTo(ᐃ * 53, ᐃ * 54, 54 * ᐃ, ᐃ * 92, 34 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(Ⲇⵠⵠⵠᐃ * ᐃ, ᐃ * 85, 22 * ᐃ, 58 * ᐃ, 34 * ᐃ, 40 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * 24, ᐃ * 68, ΔⲆⲆⵠⵠⲆⵠ * ᐃ, ᐃ * 86, ᐃ * 21);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 23, ᐃ * 123, 39 * ᐃ, ᐃ * 125, ᐃ * 67);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.translate(0, -10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 123.5, 141.5 * ᐃ, ᐃ * 123.5, 141.5 * ᐃ, ᐃ * 122, 214 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 228, 119 * ᐃ, 239 * ᐃ, ᐃ * 102, ᐃ * 239);
		Ⲇ.bezierCurveTo(90 * ᐃ, 238 * ᐃ, ᐃ * 86, 225 * ᐃ, 89 * ᐃ, 197 * ᐃ);
		Ⲇ.bezierCurveTo(92 * ᐃ, ᐃ * 159, ᐃ * 92, ᐃ * 141, ᐃ * 94, ᐃ * 84);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 58, ᐃ * 87, ᐃ * 50, ᐃ * 73, ᐃ * 52);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 54, ᐃ * 54, ᐃ * 92, ᐃ * 34, 87 * ᐃ);
		Ⲇ.bezierCurveTo(13 * ᐃ, 85 * ᐃ, ᐃ * 22, ᐃ * 58, 34 * ᐃ, ᐃ * 40);
		Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 24, 68 * ᐃ, 17 * ᐃ, ᐃ * 86, ᐃ * 21);
		Ⲇ.bezierCurveTo(ᐃ * 111, ᐃ * 23, ᐃ * 123, ᐃ * 39, ᐃ * 125, 67 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⵠᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 31, ᐃ * 61, 43 * ᐃ, ᐃ * 70, ᐃ * 51, 75 * ᐃ);
		Ⲇ.bezierCurveTo(48 * ᐃ, 84 * ᐃ, 41 * ᐃ, ᐃ * 89, 33 * ᐃ, ᐃ * 86);
		Ⲇ.bezierCurveTo(ᐃ * 23, ᐃ * 88, ⲆᐃΔⵠ * ᐃ, ᐃ * 76, 23 * ᐃ, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 45, 29 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 45, 61 * ᐃ, ᐃ * 54, ᐃ * 64, ᐃ * 55);
		Ⲇ.bezierCurveTo(ᐃ * 67.5, ᐃ * 53, ᐃ * 67.5, ᐃ * 53, ᐃ * 71, 51 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, 44 * ᐃ, 83 * ᐃ, 33 * ᐃ, 82 * ᐃ, ᐃ * 20);
		Ⲇ.bezierCurveTo(59 * ᐃ, ᐃ * ᐃΔⲆⲆᐃⵠⵠ, ᐃ * 51, 23 * ᐃ, ᐃ * 45, ᐃ * 30);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(86 * ᐃ, 56 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 90, 33 * ᐃ, ᐃ * 103, 25 * ᐃ, ᐃ * 105, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116, 31 * ᐃ, 121 * ᐃ, 45 * ᐃ, ᐃ * 122, ᐃ * 50);
		Ⲇ.bezierCurveTo(112 * ᐃ, ᐃ * 62, ᐃ * 103, ᐃ * 63, ᐃ * 91, 62 * ᐃ);
		Ⲇ.bezierCurveTo(89 * ᐃ, 59.5 * ᐃ, ᐃ * 89, ᐃ * 59.5, 87 * ᐃ, 57 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(109 * ᐃ, ᐃ * 82, ᐃ * 123, ᐃ * 70, 124 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, ᐃ * 75.5, ᐃ * 124, ᐃ * 75.5, 124 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(119 * ᐃ, 99 * ᐃ, 103 * ᐃ, 103 * ᐃ, ᐃ * 94, 103 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, ᐃ * 124);
		Ⲇ.bezierCurveTo(ᐃ * 108, 125 * ᐃ, ᐃ * 122, 113 * ᐃ, ᐃ * 124, 106 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, 119 * ᐃ, 124 * ᐃ, 129 * ᐃ, ᐃ * 124, ᐃ * 132);
		Ⲇ.bezierCurveTo(ᐃ * 110, 147 * ᐃ, 94 * ᐃ, ᐃ * 148, ᐃ * 90, 147 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(90 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 166, ᐃ * 122, ᐃ * 158, 122 * ᐃ, 151 * ᐃ);
		Ⲇ.bezierCurveTo(122 * ᐃ, ᐃ * 162.5, 122 * ᐃ, ᐃ * 162.5, ᐃ * 122, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, ᐃ * 191, 97 * ᐃ, ᐃ * 191, ᐃ * 89, ᐃ * 191);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(88 * ᐃ, 208 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠⵠΔΔⵠ * ᐃ, ᐃ * 209, 115 * ᐃ, ᐃ * 205, ᐃ * 122, ᐃ * 193);
		Ⲇ.bezierCurveTo(122 * ᐃ, 205.5 * ᐃ, ᐃ * 122, 205.5 * ᐃ, ᐃ * 122, 218 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, 229 * ᐃ, ᐃ * 103, ᐃ * 235, ᐃ * 90, 228 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 88, 224 * ᐃ, ᐃ * 88, ᐃ * 217, ᐃ * 88, 211 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠⵠ]);
		Ⲇ.globalAlpha = .4;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 22, 81 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 32, 84 * ᐃ, 41 * ᐃ, ᐃ * 81, 45 * ᐃ, ᐃ * 68);
		Ⲇ.bezierCurveTo(50 * ᐃ, 50 * ᐃ, ᐃ * 62, 40 * ᐃ, ᐃ * 79, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 95, 45 * ᐃ, ᐃ * 102, 58 * ᐃ, 101 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(99.5 * ᐃ, ᐃ * 120.5, ᐃ * 99.5, 120.5 * ᐃ, ᐃ * 98, 160 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 96.5, ᐃ * 191.5, 96.5 * ᐃ, ᐃ * 191.5, 95 * ᐃ, 223 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93, 232 * ᐃ, 101 * ᐃ, ᐃ * 235, ᐃ * 108, ᐃ * 238);
		Ⲇ.bezierCurveTo(ᐃⲆⵠΔΔ * ᐃ, ᐃ * 240, ᐃ * 90, ᐃ * 233, 90 * ᐃ, ᐃ * 224);
		Ⲇ.bezierCurveTo(ᐃ * 92, 157 * ᐃ, 92 * ᐃ, 157 * ᐃ, ᐃ * 94, ᐃ * 90);
		Ⲇ.bezierCurveTo(ᐃ * 94, 56 * ᐃ, 89 * ᐃ, 53 * ᐃ, 77 * ᐃ, 51 * ᐃ);
		Ⲇ.bezierCurveTo(58 * ᐃ, 50 * ᐃ, ᐃ * 54, ᐃ * 59, ᐃ * 49, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * 91, ᐃ * 28, ᐃ * 90, ᐃ * 23, ᐃ * 81);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(82 * ᐃ, 123 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 88, ᐃ * 130, ᐃ * 88, 127 * ᐃ, ᐃ * 94, 128 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, ᐃ * 136, 94 * ᐃ, 137 * ᐃ, 99 * ᐃ, 142 * ᐃ);
		Ⲇ.bezierCurveTo(97 * ᐃ, 149 * ᐃ, ᐃ * 99, 152 * ᐃ, 105 * ᐃ, 155 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, 159 * ᐃ, 113 * ᐃ, ᐃ * 159, 120 * ᐃ, 158 * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, 160 * ᐃ, 125 * ᐃ, 163 * ᐃ, 132 * ᐃ, 163 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, 166 * ᐃ, 136 * ᐃ, 169 * ᐃ, ᐃ * 138, 170 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, 171 * ᐃ, 132 * ᐃ, 172 * ᐃ, ᐃ * 129, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, 170 * ᐃ, ᐃ * 120, 170 * ᐃ, 116 * ᐃ, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, 170.5 * ᐃ, ᐃ * 108, 170.5 * ᐃ, ᐃ * ᐃⵠΔⲆⲆ, ᐃ * 167);
		Ⲇ.bezierCurveTo(95 * ᐃ, ᐃ * 172, 94 * ᐃ, ᐃ * 179, ᐃ * 95, 184 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 87, 185 * ᐃ, 87 * ᐃ, 189 * ᐃ, 88 * ᐃ, 194 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 82, 194 * ᐃ, 81 * ᐃ, ᐃ * 195, 79 * ᐃ, ᐃ * 197);
		Ⲇ.bezierCurveTo(78 * ᐃ, ᐃ * 192, ᐃ * 78, ᐃ * 191, ᐃ * 77, 189 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, ᐃ * 185, 82 * ᐃ, 183 * ᐃ, ᐃ * 80, ᐃ * 176);
		Ⲇ.bezierCurveTo(89 * ᐃ, ᐃ * 170, 92 * ᐃ, 168 * ᐃ, 95 * ᐃ, ᐃ * 163);
		Ⲇ.bezierCurveTo(91 * ᐃ, ᐃ * 151, 88 * ᐃ, ᐃ * 151, 82 * ᐃ, ᐃ * 147);
		Ⲇ.bezierCurveTo(ᐃ * 85, 142 * ᐃ, 85 * ᐃ, 137 * ᐃ, ᐃ * 81, 133 * ᐃ);
		Ⲇ.bezierCurveTo(84 * ᐃ, ᐃ * 127, 84 * ᐃ, ᐃ * 125, ᐃ * 82, 124 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ], ᐃᐃ[5], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, 107 * ᐃ, 152 * ᐃ, ᐃ * 9);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		ΔⵠⲆ(Ⲇ, ᐃ * 105, ᐃ * 173, ᐃ * ΔᐃⵠΔⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		ΔⵠⲆ(Ⲇ, ᐃ * 87, ᐃ * 161, 9 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠⲆΔ]);
		ΔⵠⲆ(Ⲇ, 106 * ᐃ, ᐃ * 147, 4 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		ΔⵠⲆ(Ⲇ, ᐃ * 104, 167 * ᐃ, ⵠΔⲆᐃΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃⵠΔ]);
		ΔⵠⲆ(Ⲇ, 86 * ᐃ, ᐃ * 154, Δⵠⵠⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃⵠΔ]);
		return ΔΔ
	}

	function ΔⲆΔΔⵠⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 290 * ᐃ;
		ΔΔ.height = ᐃ * 525;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * 20, ᐃ * 20);
		Ⲇ.translate(-ⵠᐃⲆΔ * ᐃ, -20 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 132, 423 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, ᐃ * -14, -61 * ᐃ, 28 * ᐃ, 122 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃΔᐃⵠⵠ, ᐃ * 344);
		Ⲇ.bezierCurveTo(123 * ᐃ, 214 * ᐃ, 123 * ᐃ, 214 * ᐃ, ᐃ * 146, 84 * ᐃ);
		Ⲇ.bezierCurveTo(166.5 * ᐃ, 65 * ᐃ, ᐃ * 166.5, 65 * ᐃ, 187 * ᐃ, ᐃ * 46);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 71, 201 * ᐃ, 71 * ᐃ, 215 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 199.5, 226.5 * ᐃ, ᐃ * 199.5, 226.5 * ᐃ, 184 * ᐃ, ᐃ * 357);
		Ⲇ.bezierCurveTo(ᐃ * 162.5, ᐃ * 362.5, ᐃ * 162.5, ᐃ * 362.5, 141 * ᐃ, 368 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 75, 328 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 88, ᐃ * 336.5, 88 * ᐃ, 336.5 * ᐃ, ᐃ * 101, ᐃ * 345);
		Ⲇ.bezierCurveTo(ᐃ * 123.5, 337.5 * ᐃ, 123.5 * ᐃ, 337.5 * ᐃ, 146 * ᐃ, 330 * ᐃ);
		Ⲇ.bezierCurveTo(165 * ᐃ, ᐃ * 343.5, 165 * ᐃ, 343.5 * ᐃ, ᐃ * 184, 357 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 198.5, ᐃ * 353, ᐃ * 198.5, ᐃ * 353, 213 * ᐃ, ᐃ * 349);
		Ⲇ.bezierCurveTo(200.5 * ᐃ, 364.5 * ᐃ, ᐃ * 200.5, 364.5 * ᐃ, ᐃ * 188, ᐃ * 380);
		Ⲇ.bezierCurveTo(ᐃ * 163, 380.5 * ᐃ, ᐃ * 163, 380.5 * ᐃ, ᐃ * 138, 381 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 373.5 * ᐃ, ᐃ * 112, 373.5 * ᐃ, ᐃ * 86, ᐃ * 366);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(121 * ᐃ, ᐃ * 332);
		Ⲇ.bezierCurveTo(ᐃ * 133.5, 327.5 * ᐃ, ᐃ * 133.5, 327.5 * ᐃ, ᐃ * 146, ᐃ * 323);
		Ⲇ.bezierCurveTo(ᐃ * 157, ᐃ * 330.5, ᐃ * 157, ᐃ * 330.5, ᐃ * 168, ᐃ * 338);
		Ⲇ.bezierCurveTo(ᐃ * 182.5, ᐃ * 219.5, ᐃ * 182.5, 219.5 * ᐃ, 197 * ᐃ, 101 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, ᐃ * 84.5, 190 * ᐃ, 84.5 * ᐃ, ᐃ * 183, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 172.5, ᐃ * 81, 172.5 * ᐃ, ᐃ * 81, ᐃ * 162, ᐃ * 94);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 105, ᐃ * 463);
		Ⲇ.bezierCurveTo(ᐃ * 124.5, ᐃ * 466, 124.5 * ᐃ, 466 * ᐃ, 144 * ᐃ, 469 * ᐃ);
		Ⲇ.bezierCurveTo(145.5 * ᐃ, ᐃ * 478.5, 145.5 * ᐃ, ᐃ * 478.5, ᐃ * 147, 488 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133.5, 495.5 * ᐃ, ᐃ * 133.5, 495.5 * ᐃ, 120 * ᐃ, 503 * ᐃ);
		Ⲇ.bezierCurveTo(108.5 * ᐃ, ᐃ * 492, 108.5 * ᐃ, ᐃ * 492, 97 * ᐃ, ᐃ * 481);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		Ⲇ.translate(ᐃ * -20, ᐃ * -20);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 132, 423 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, -14 * ᐃ, ᐃ * -61, ᐃ * 28, 122 * ᐃ, ᐃ * ᐃᐃⲆᐃᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⲆ], ᐃᐃ[5], 12.5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃⲆⵠΔΔ * ᐃ, ᐃ * 344);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 214, ᐃ * 123, ᐃ * 214, 146 * ᐃ, 84 * ᐃ);
		Ⲇ.bezierCurveTo(166.5 * ᐃ, 65 * ᐃ, ᐃ * 166.5, 65 * ᐃ, ᐃ * 187, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 71, 201 * ᐃ, ᐃ * 71, 215 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(ᐃ * 199.5, 226.5 * ᐃ, 199.5 * ᐃ, 226.5 * ᐃ, 184 * ᐃ, ᐃ * 357);
		Ⲇ.bezierCurveTo(162.5 * ᐃ, ᐃ * 362.5, 162.5 * ᐃ, ᐃ * 362.5, 141 * ᐃ, 368 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], 12.5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 75, ᐃ * 328);
		Ⲇ.bezierCurveTo(ᐃ * 88, ᐃ * 336.5, 88 * ᐃ, ᐃ * 336.5, 101 * ᐃ, 345 * ᐃ);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, 337.5 * ᐃ, ᐃ * 123.5, 337.5 * ᐃ, ᐃ * 146, ᐃ * 330);
		Ⲇ.bezierCurveTo(165 * ᐃ, 343.5 * ᐃ, ᐃ * 165, 343.5 * ᐃ, 184 * ᐃ, ᐃ * 357);
		Ⲇ.bezierCurveTo(ᐃ * 198.5, 353 * ᐃ, ᐃ * 198.5, 353 * ᐃ, ᐃ * 213, 349 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 364.5 * ᐃ, 200.5 * ᐃ, 364.5 * ᐃ, ᐃ * 188, ᐃ * 380);
		Ⲇ.bezierCurveTo(ᐃ * 163, 380.5 * ᐃ, 163 * ᐃ, 380.5 * ᐃ, 138 * ᐃ, 381 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 373.5, 112 * ᐃ, 373.5 * ᐃ, ᐃ * 86, 366 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[ⵠⲆΔΔ], ᐃ * 12.5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 121, ᐃ * 332);
		Ⲇ.bezierCurveTo(ᐃ * 133.5, 327.5 * ᐃ, 133.5 * ᐃ, 327.5 * ᐃ, 146 * ᐃ, ᐃ * 323);
		Ⲇ.bezierCurveTo(157 * ᐃ, 330.5 * ᐃ, ᐃ * 157, ᐃ * 330.5, ᐃ * 168, 338 * ᐃ);
		Ⲇ.bezierCurveTo(182.5 * ᐃ, ᐃ * 219.5, 182.5 * ᐃ, 219.5 * ᐃ, 197 * ᐃ, 101 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, 84.5 * ᐃ, ᐃ * 190, ᐃ * 84.5, 183 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 172.5, ᐃ * 81, 172.5 * ᐃ, ᐃ * 81, ᐃ * 162, 94 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105 * ᐃ, ᐃ * 463);
		Ⲇ.bezierCurveTo(ᐃ * 124.5, 466 * ᐃ, ᐃ * 124.5, ᐃ * 466, ᐃ * 144, ᐃ * 469);
		Ⲇ.bezierCurveTo(ᐃ * 145.5, ᐃ * 478.5, 145.5 * ᐃ, ᐃ * 478.5, 147 * ᐃ, ᐃ * 488);
		Ⲇ.bezierCurveTo(133.5 * ᐃ, ᐃ * 495.5, 133.5 * ᐃ, 495.5 * ᐃ, 120 * ᐃ, ᐃ * 503);
		Ⲇ.bezierCurveTo(ᐃ * 108.5, 492 * ᐃ, ᐃ * 108.5, 492 * ᐃ, ᐃ * 97, ᐃ * 481);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * 12.5);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, ᐃ * 346);
		Ⲇ.bezierCurveTo(ᐃ * 125, ᐃ * 352, 125 * ᐃ, 352 * ᐃ, 107 * ᐃ, 358 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, ᐃ * 363, 140 * ᐃ, 368 * ᐃ, 141 * ᐃ, 368 * ᐃ);
		Ⲇ.bezierCurveTo(156.5 * ᐃ, ᐃ * 367, 156.5 * ᐃ, ᐃ * 367, 172 * ᐃ, 366 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ]);
		return ΔΔ
	}

	function ΔᐃⲆⵠⵠⵠΔⲆΔ(text) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		Ⲇ.lineJoin = ⵠ[244];
		while (-ᐃᐃΔᐃ !== text.indexOf("\\n")) text = text.replace("\\n", "\n");
		text = text.split("\n");
		ᐃᐃ = [];
		var ΔᐃⲆ = ΔⵠᐃⵠⵠⵠⲆ;
		var ΔⲆⲆ = (ΔᐃⲆ + 4) * text.length + ⲆΔΔⵠⲆ;
		var ᐃⲆⲆ = Δⵠⵠ;
		Ⲇ.font = ΔᐃⲆ + ⵠ[104];
		for (var ᐃⲆ = ⲆⲆⲆ; ᐃⲆ < text.length; ᐃⲆ++) {
			text[ᐃⲆ].charAt(0) === "#" ? (ᐃᐃ[ᐃⲆ] = text[ᐃⲆ].substring(0, ⵠΔΔⲆᐃⵠⵠ), text[ᐃⲆ] = text[ᐃⲆ].substring(8)) : ᐃᐃ[ᐃⲆ] = ⵠ[557];
			ᐃⲆⲆ = Math.max(Ⲇ.measureText(text[ᐃⲆ]).width + ⲆⲆΔᐃⵠΔᐃ, ᐃⲆⲆ)
		}
		ΔΔ.height = ΔⲆⲆ;
		ΔΔ.width = ᐃⲆⲆ;
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < text.length; ᐃⲆ++) {
			var ⵠⵠ = ⲆΔΔΔⲆ(ᐃΔⲆⵠ, text[ᐃⲆ], ΔᐃⲆ, ᐃᐃ[ᐃⲆ], null, null, null, null, null, ⵠ[151], ⵠΔⵠⵠⲆ);
			Ⲇ.drawImage(ⵠⵠ, ΔⲆᐃⵠᐃ, ᐃⲆ * (ΔᐃⲆ + ᐃΔᐃΔ) + 5)
		}
		return ΔΔ
	}

	function ᐃⲆᐃΔΔⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 290;
		ΔΔ.height = ᐃ * 525;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⲆⵠΔ;
		Ⲇ.translate(20 * ᐃ, 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(112 * ᐃ, 356 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, ᐃ * 220.5, 124 * ᐃ, ᐃ * 220.5, ᐃ * 136, ᐃ * 85);
		Ⲇ.bezierCurveTo(162.5 * ᐃ, ᐃ * 65.5, 162.5 * ᐃ, ᐃ * 65.5, ᐃ * 189, 46 * ᐃ);
		Ⲇ.bezierCurveTo(208.5 * ᐃ, 72.5 * ᐃ, 208.5 * ᐃ, ᐃ * 72.5, 228 * ᐃ, ᐃ * 99);
		Ⲇ.bezierCurveTo(200 * ᐃ, ᐃ * 232, 200 * ᐃ, ᐃ * 232, ᐃ * 172, ᐃ * 365);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 423 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, -14 * ᐃ, ᐃ * -53, 28 * ᐃ, 106 * ᐃ, ⲆᐃΔⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 122, ᐃ * 480);
		Ⲇ.rotate(1.72);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆᐃᐃ, ᐃ * 26.476404589747453, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(210 * ᐃ, ᐃ * 387);
		Ⲇ.bezierCurveTo(ᐃ * 138, 376 * ᐃ, ᐃ * 138, 376 * ᐃ, 66 * ᐃ, 365 * ᐃ);
		Ⲇ.bezierCurveTo(76 * ᐃ, ᐃ * 355, 76 * ᐃ, 355 * ᐃ, ᐃ * 86, 345 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, 346.5 * ᐃ, 99 * ᐃ, 346.5 * ᐃ, ᐃ * 112, 348 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128.5, 344 * ᐃ, 128.5 * ᐃ, ᐃ * 344, 145 * ᐃ, ᐃ * 340);
		Ⲇ.bezierCurveTo(158 * ᐃ, 348 * ᐃ, 158 * ᐃ, ᐃ * 348, ᐃ * 171, 356 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 184, ᐃ * 358, 184 * ᐃ, 358 * ᐃ, 197 * ᐃ, 360 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(129 * ᐃ, 338 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137, ᐃ * 336, ᐃ * 137, ᐃ * 336, 145 * ᐃ, ᐃ * 334);
		Ⲇ.bezierCurveTo(ᐃ * 152.5, 338 * ᐃ, 152.5 * ᐃ, 338 * ᐃ, 160 * ᐃ, 342 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 184, ᐃ * 224, 184 * ᐃ, 224 * ᐃ, 208 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(197 * ᐃ, 88 * ᐃ, ᐃ * 187, ᐃ * 70, ᐃ * 186, ᐃ * 70);
		Ⲇ.bezierCurveTo(ᐃ * 169.5, 83 * ᐃ, 169.5 * ᐃ, 83 * ᐃ, 153 * ᐃ, ᐃ * 96);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠⲆⲆ;
		Ⲇ.translate(-20 * ᐃ, -20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(112 * ᐃ, ᐃ * 356);
		Ⲇ.bezierCurveTo(124 * ᐃ, 220.5 * ᐃ, 124 * ᐃ, 220.5 * ᐃ, 136 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(162.5 * ᐃ, ᐃ * 65.5, ᐃ * 162.5, 65.5 * ᐃ, ᐃ * 189, ᐃ * 46);
		Ⲇ.bezierCurveTo(208.5 * ᐃ, ᐃ * 72.5, ᐃ * 208.5, ᐃ * 72.5, ᐃ * 228, 99 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200, 232 * ᐃ, 200 * ᐃ, 232 * ᐃ, ᐃ * 172, ᐃ * 365);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], ᐃ * 12.5);
		Ⲇ.save();
		Ⲇ.translate(131 * ᐃ, 423 * ᐃ);
		Ⲇ.rotate(.16);
		ᐃΔⵠ(Ⲇ, ᐃ * -14, ᐃ * -53, ᐃ * 28, 106 * ᐃ, ⲆᐃᐃᐃⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃᐃ[5], ᐃ * 12.5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 122, 480 * ᐃ);
		Ⲇ.rotate(1.72);
		ⲆᐃⵠΔ(Ⲇ, ᐃΔᐃΔ, ᐃ * 26.476404589747453, ⲆⵠⲆⵠᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 12.5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(210 * ᐃ, 387 * ᐃ);
		Ⲇ.bezierCurveTo(138 * ᐃ, 376 * ᐃ, ᐃ * 138, ᐃ * 376, ᐃ * 66, ᐃ * 365);
		Ⲇ.bezierCurveTo(ᐃ * 76, ᐃ * 355, 76 * ᐃ, ᐃ * 355, ᐃ * 86, 345 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, 346.5 * ᐃ, ᐃ * 99, 346.5 * ᐃ, 112 * ᐃ, ᐃ * 348);
		Ⲇ.bezierCurveTo(ᐃ * 128.5, 344 * ᐃ, ᐃ * 128.5, ᐃ * 344, ᐃ * 145, 340 * ᐃ);
		Ⲇ.bezierCurveTo(158 * ᐃ, ᐃ * 348, ᐃ * 158, 348 * ᐃ, ᐃ * 171, ᐃ * 356);
		Ⲇ.bezierCurveTo(ᐃ * 184, ᐃ * 358, ᐃ * 184, 358 * ᐃ, ᐃ * 197, 360 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * 12.5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 129, ᐃ * 338);
		Ⲇ.bezierCurveTo(ᐃ * 137, 336 * ᐃ, ᐃ * 137, 336 * ᐃ, 145 * ᐃ, ᐃ * 334);
		Ⲇ.bezierCurveTo(ᐃ * 152.5, ᐃ * 338, ᐃ * 152.5, ᐃ * 338, 160 * ᐃ, ᐃ * 342);
		Ⲇ.bezierCurveTo(184 * ᐃ, 224 * ᐃ, ᐃ * 184, ᐃ * 224, 208 * ᐃ, 106 * ᐃ);
		Ⲇ.bezierCurveTo(197 * ᐃ, 88 * ᐃ, 187 * ᐃ, ᐃ * 70, 186 * ᐃ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169.5, ᐃ * 83, ᐃ * 169.5, 83 * ᐃ, 153 * ᐃ, ᐃ * 96);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		return ΔΔ
	}

	function ⵠΔΔᐃᐃⲆⵠⲆΔ(ⵠΔᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var text = ᐃΔΔ[ⵠΔᐃᐃ];
		Ⲇ.font = "20px Baloo Paaji";
		var ⵠⵠⵠⵠΔⵠΔ = 0;
		if (ᐃⵠⵠ <= text.length) ⵠⵠⵠⵠΔⵠΔ = Math.max(0, Ⲇ.measureText(text[0]).width);
		Ⲇ.font = "17px Baloo Paaji";
		text.length >= ⲆⲆⵠΔ && (ⵠⵠⵠⵠΔⵠΔ = Math.max(ⵠⵠⵠⵠΔⵠΔ, Ⲇ.measureText(text[ⵠⵠⲆΔ]).width));
		Ⲇ.font = "14px Baloo Paaji";
		for (ᐃⲆ = 2; ᐃⲆ < text.length; ᐃⲆ++) ⵠⵠⵠⵠΔⵠΔ = Math.max(ⵠⵠⵠⵠΔⵠΔ, Ⲇ.measureText(text[ᐃⲆ]).width);
		var ᐃⲆⲆ = ⵠⵠⵠⵠΔⵠΔ + 35;
		var ⵠⲆΔΔᐃΔΔ = 26;
		var ΔⲆⲆ = ΔΔⵠᐃ;
		if (text.length === ⲆⲆΔᐃ) ΔⲆⲆ = 55;
		else text.length === ᐃⵠΔⲆ ? ΔⲆⲆ = 85 : ΔⲆⲆ = ⵠⲆΔΔᐃΔΔ * (text.length - 2) + 85;
		ΔΔ.width = ᐃⲆⲆ;
		ΔΔ.height = ΔⲆⲆ;
		ᐃΔⵠ(Ⲇ, 0, 0, ᐃⲆⲆ, ΔⲆⲆ, ΔΔⵠᐃⵠ);
		Ⲇ.fillStyle = ⵠ[252];
		Ⲇ.globalAlpha = .5;
		Ⲇ.fill();
		text.length >= 1 && (Ⲇ.textBaseline = ⵠ[230], Ⲇ.font = "20px Baloo Paaji", Ⲇ.globalAlpha = 1, Ⲇ.fillStyle = "#e2c340", Ⲇ.fillText(text[ΔⲆⵠ], 15, 28));
		if (ⵠⵠΔⲆ <= text.length) {
			Ⲇ.font = "17px Baloo Paaji";
			Ⲇ.fillStyle = ⵠ[142];
			Ⲇ.fillText(text[1], 15, 55);
			ΔⲆⲆ = 55
		}
		if (text.length >= ΔⲆΔⵠ) {
			Ⲇ.font = "14px Baloo Paaji";
			Ⲇ.globalAlpha = .7;
			for (ᐃⲆ = ⵠᐃⵠΔ; text.length > ᐃⲆ; ᐃⲆ++) {
				Ⲇ.fillText(text[ᐃⲆ], 15, ΔⲆⲆ + 28);
				ΔⲆⲆ += ⵠⲆΔΔᐃΔΔ
			}
		}
		return ΔΔ
	}

	function ΔⲆᐃᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 70;
		var ΔᐃⲆ = 90 * ᐃ;
		var ᐃⲆⲆ = ᐃ * 4;
		var ΔⵠᐃΔ = ᐃ * 5;
		var w2 = ᐃᐃⲆ / 2;
		var ⵠⵠᐃⵠⵠ = ΔᐃⲆ / ⵠⵠⲆᐃ;
		var ⲆⵠᐃΔ = ᐃ * 10;
		var ⲆⲆΔᐃΔⵠⲆ = ᐃ * 100;
		var ⵠΔᐃΔΔΔΔ = ᐃⲆⵠΔΔ * ᐃ;
		var ᐃⵠⵠΔᐃᐃⵠ = ⲆⲆΔᐃΔⵠⲆ / ΔᐃⵠⲆ;
		var ⵠΔΔᐃⵠΔⲆ = ⵠΔᐃΔΔΔΔ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.save();
		Ⲇ.translate(-80 * ᐃ, -70 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(130 * ᐃ, ᐃ * 79, 132 * ᐃ, 86 * ᐃ, 130 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * ᐃⲆⵠΔΔ, 121 * ᐃ, ᐃ * 107, 120 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120, ᐃ * 107, ᐃ * 115, ᐃ * 98, 115 * ᐃ, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 115, 86 * ᐃ, ᐃ * 119, 76 * ᐃ, ᐃ * 127, ᐃ * 73);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[493]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -80, -70 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 109, 111 * ᐃ, ⵠⵠΔΔⵠ * ᐃ, ᐃ * 106, 93 * ᐃ);
		Ⲇ.bezierCurveTo(104 * ᐃ, 90 * ᐃ, 91 * ᐃ, 87 * ᐃ, 91 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(91 * ᐃ, 88 * ᐃ, 91 * ᐃ, 96 * ᐃ, 94 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 97, ᐃ * 108, ᐃ * 106, ᐃ * 112, ᐃ * 113, ᐃ * 112);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[493]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -80, -70 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(108 * ᐃ, ᐃ * 120, ᐃ * 100, 119 * ᐃ, ᐃ * 91, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 83, 134 * ᐃ, 82 * ᐃ, 146 * ᐃ, ᐃ * 83, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 84, 146 * ᐃ, ᐃ * 98, ᐃ * 142, 103 * ᐃ, ᐃ * 138);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃ * 135, 110 * ᐃ, ᐃ * 130, ᐃ * 112, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[493]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 3, -93 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.rotate(Math.PI / 5);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(130 * ᐃ, ᐃ * 79, ᐃ * 132, 86 * ᐃ, 130 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, ⵠᐃⵠⵠΔ * ᐃ, ᐃ * 121, ᐃ * 107, 120 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(120 * ᐃ, ᐃ * 107, 115 * ᐃ, ᐃ * 98, 115 * ᐃ, ᐃ * 92);
		Ⲇ.bezierCurveTo(115 * ᐃ, ᐃ * 86, 119 * ᐃ, ᐃ * 76, 127 * ᐃ, 73 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[493]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -80, ᐃ * -70);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 79, 132 * ᐃ, ᐃ * 86, ᐃ * 130, 93 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃΔᐃⵠⵠ * ᐃ, ᐃ * 121, ᐃ * 107, ᐃ * 120, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 120, 107 * ᐃ, ᐃ * 115, 98 * ᐃ, ᐃ * 115, 92 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 115, 86 * ᐃ, 119 * ᐃ, ᐃ * 76, ᐃ * 127, ᐃ * 73);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(-80 * ᐃ, ᐃ * -70);
		Ⲇ.globalAlpha = ᐃⵠ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 112, 109 * ᐃ, ᐃ * 111, ᐃ * ᐃΔᐃⵠⵠ, ᐃ * 106, ᐃ * 93);
		Ⲇ.bezierCurveTo(ᐃ * 104, 90 * ᐃ, 91 * ᐃ, ᐃ * 87, 91 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(91 * ᐃ, 88 * ᐃ, ᐃ * 91, ᐃ * 96, ᐃ * 94, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97, 108 * ᐃ, 106 * ᐃ, ᐃ * 112, ᐃ * 113, ᐃ * 112);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⲆΔᐃ], ᐃⲆⲆ);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(-80 * ᐃ, -70 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(108 * ᐃ, 120 * ᐃ, 100 * ᐃ, 119 * ᐃ, ᐃ * 91, 127 * ᐃ);
		Ⲇ.bezierCurveTo(83 * ᐃ, 134 * ᐃ, ᐃ * 82, 146 * ᐃ, 83 * ᐃ, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 146, ᐃ * 98, 142 * ᐃ, ᐃ * 103, 138 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, 135 * ᐃ, ᐃ * 110, ᐃ * 130, 112 * ᐃ, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃⲆⲆ);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ⵠⲆⲆΔ * ᐃ, -93 * ᐃ);
		Ⲇ.rotate(Math.PI / 5);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 79, 132 * ᐃ, 86 * ᐃ, ᐃ * 130, ᐃ * 93);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃ * 100, ᐃ * 121, 107 * ᐃ, ᐃ * 120, 107 * ᐃ);
		Ⲇ.bezierCurveTo(120 * ᐃ, ᐃ * 107, 115 * ᐃ, 98 * ᐃ, 115 * ᐃ, 92 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, 86 * ᐃ, 119 * ᐃ, 76 * ᐃ, ᐃ * 127, ᐃ * 73);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔᐃᐃⲆ], ᐃⲆⲆ);
		Ⲇ.restore();
		return ΔΔ
	}

	function ᐃΔᐃⵠᐃⵠⲆⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 118;
		ΔΔ.height = 114 * ᐃ;
		Ⲇ.translate(0, 10 * ᐃ);
		ΔⵠⲆ(Ⲇ, 42 * ᐃ, 43 * ᐃ, 24.758836806279895 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(65 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 72, ᐃ * 91, ᐃ * 75, 92 * ᐃ, 71 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(65 * ᐃ, ᐃ * 98, ᐃ * 65, ᐃ * 94, 65 * ᐃ, ᐃ * 91);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(108 * ᐃ, 59 * ᐃ, 100 * ᐃ, 86 * ᐃ, 85 * ᐃ, 91 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 96, ᐃ * 68, ᐃ * 95, 58 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 80, 61 * ᐃ, 64 * ᐃ, 66 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 73, ᐃ * 48, 78 * ᐃ, ᐃ * 44, 87 * ᐃ, ᐃ * 45);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, ᐃ * -ᐃᐃⵠᐃΔ);
		ΔⵠⲆ(Ⲇ, ᐃ * 42, 43 * ᐃ, ᐃ * 24.758836806279895);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(65 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 72, 91 * ᐃ, ᐃ * 75, ᐃ * 92, 71 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, 98 * ᐃ, ᐃ * 65, ᐃ * 94, ᐃ * 65, ᐃ * 91);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * Δᐃⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 87, 45 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 59, ᐃ * ⵠΔⵠⲆⲆ, 86 * ᐃ, ᐃ * 85, 91 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, 96 * ᐃ, 68 * ᐃ, 95 * ᐃ, ᐃ * 58, 87 * ᐃ);
		Ⲇ.bezierCurveTo(53 * ᐃ, 80 * ᐃ, ᐃ * 61, ᐃ * 64, 66 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 73, 48 * ᐃ, 78 * ᐃ, ᐃ * 44, ᐃ * 87, ᐃ * 45);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ], ᐃᐃ[2], ᐃ * ⲆᐃᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, ᐃ * ᐃΔⲆⲆⲆᐃᐃ);
		Ⲇ.bezierCurveTo(55 * ᐃ, ᐃ * 19, ᐃ * 54, ΔΔⵠΔ * ᐃ, ᐃ * 55, 22 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 24.5, ᐃ * 52, 24.5 * ᐃ, 49 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, 25 * ᐃ, 45 * ᐃ, ᐃ * 25, 41 * ᐃ, ᐃ * 23);
		Ⲇ.bezierCurveTo(ᐃ * 45, 19 * ᐃ, ᐃ * 48, ⲆⲆᐃΔΔ * ᐃ, ᐃ * 52, ᐃΔᐃᐃⲆ * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[4], ᐃᐃⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 62, 30 * ᐃ);
		Ⲇ.bezierCurveTo(66 * ᐃ, 29 * ᐃ, 64 * ᐃ, ᐃ * 30, 66 * ᐃ, 30 * ᐃ);
		Ⲇ.bezierCurveTo(67 * ᐃ, ᐃ * 31, 67 * ᐃ, ᐃ * 31, ᐃ * 68, ᐃ * 32);
		Ⲇ.bezierCurveTo(66.5 * ᐃ, 33.5 * ᐃ, 66.5 * ᐃ, 33.5 * ᐃ, 65 * ᐃ, 35 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63.5, 32.5 * ᐃ, ᐃ * 63.5, 32.5 * ᐃ, 62 * ᐃ, ᐃ * 30);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[Δⵠⵠⵠ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 29, ᐃ * 21);
		Ⲇ.bezierCurveTo(31 * ᐃ, 22 * ᐃ, ᐃ * 31, 26 * ᐃ, ᐃ * 29, ᐃ * 29);
		Ⲇ.bezierCurveTo(ᐃ * 26, 28.5 * ᐃ, 26 * ᐃ, 28.5 * ᐃ, 23 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 23, 26.5 * ᐃ, 23 * ᐃ, 26.5 * ᐃ, ᐃ * 23, ᐃ * 25);
		Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 23, ᐃ * 25, 23 * ᐃ, 27 * ᐃ, ᐃ * 21);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[4], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 18, ᐃ * 36);
		Ⲇ.bezierCurveTo(ᐃ * 23, ᐃ * 36, 24 * ᐃ, 42 * ᐃ, ᐃ * ΔᐃⵠΔΔ, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ΔΔᐃⲆᐃ, 39 * ᐃ, ᐃ * 15, ᐃ * 38, ᐃ * ᐃᐃⲆⲆⲆⲆΔ, 37 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[4], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, 34 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 35, ᐃ * 36, ᐃ * 36, ᐃ * 39, 32 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 25, 46 * ᐃ, 25 * ᐃ, ᐃ * 44, 30 * ᐃ, ᐃ * 34);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆΔΔ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(59 * ᐃ, ᐃ * 35);
		Ⲇ.bezierCurveTo(58 * ᐃ, ᐃ * 27, ᐃ * 57, ᐃ * 27, ᐃ * 52, 31 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, 36 * ᐃ, ᐃ * 53, ᐃ * 38, ᐃ * 58, 36 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 63, ᐃ * 46);
		Ⲇ.bezierCurveTo(64.5 * ᐃ, 46.5 * ᐃ, ᐃ * 64.5, 46.5 * ᐃ, 66 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(70 * ᐃ, ᐃ * 50, ᐃ * 70, 53 * ᐃ, 61 * ᐃ, ᐃ * 55);
		Ⲇ.bezierCurveTo(ᐃ * 62, ᐃ * 50.5, 62 * ᐃ, ᐃ * 50.5, 63 * ᐃ, ᐃ * 46);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ⵠⲆⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 41, 42 * ᐃ);
		Ⲇ.bezierCurveTo(47 * ᐃ, ᐃ * 41, 53 * ᐃ, 47 * ᐃ, 46 * ᐃ, ᐃ * 51);
		Ⲇ.bezierCurveTo(38 * ᐃ, ᐃ * 49, 39 * ᐃ, 46 * ᐃ, 41 * ᐃ, 43 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ], ᐃᐃ[4], ΔⲆⲆⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54, 57 * ᐃ, ᐃ * 54, 58 * ᐃ, ᐃ * 55, ᐃ * 61);
		Ⲇ.bezierCurveTo(54 * ᐃ, 63 * ᐃ, 52 * ᐃ, 64 * ᐃ, 48 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[ⵠΔΔᐃ], ΔⲆⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 20, 52 * ᐃ);
		Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 51, 27 * ᐃ, 50 * ᐃ, 28 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 58, ᐃ * 24, 58 * ᐃ, 22 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(21 * ᐃ, ᐃ * 55.5, ᐃ * 21, ᐃ * 55.5, ᐃ * ΔⵠΔⲆ, ᐃ * 53);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃΔⲆΔ], ᐃ * ΔⲆⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, 61 * ᐃ);
		Ⲇ.bezierCurveTo(37 * ᐃ, ᐃ * 61, 39 * ᐃ, 63 * ᐃ, ᐃ * 39, 68 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, ᐃ * 68.5, 36 * ᐃ, 68.5 * ᐃ, 33 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, ᐃ * 67.5, 30.5 * ᐃ, 67.5 * ᐃ, ᐃ * 28, 66 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(88 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 46.5, ᐃ * 90, ᐃ * 46.5, 92 * ᐃ, 48 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 50, 92 * ᐃ, ᐃ * 50, ᐃ * 92, 52 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[ᐃΔΔΔ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(96 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97.5, 55 * ᐃ, ᐃ * 97.5, ᐃ * 55, 99 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(97.5 * ᐃ, 59.5 * ᐃ, 97.5 * ᐃ, 59.5 * ᐃ, 96 * ᐃ, 62 * ᐃ);
		Ⲇ.bezierCurveTo(93.5 * ᐃ, 60.5 * ᐃ, 93.5 * ᐃ, 60.5 * ᐃ, ᐃ * 91, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 91.5, 57 * ᐃ, ᐃ * 91.5, 57 * ᐃ, ᐃ * 92, 55 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[4], ⲆⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 92, ᐃ * 71);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, 70.5 * ᐃ, 94.5 * ᐃ, ᐃ * 70.5, ᐃ * 97, ᐃ * 70);
		Ⲇ.bezierCurveTo(98.5 * ᐃ, ᐃ * 72.5, 98.5 * ᐃ, ᐃ * 72.5, 100 * ᐃ, ᐃ * 75);
		Ⲇ.bezierCurveTo(97 * ᐃ, ᐃ * 76.5, ᐃ * 97, ᐃ * 76.5, 94 * ᐃ, ᐃ * 78);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃᐃⲆ], ᐃ * ΔΔⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 95, ᐃ * 82);
		Ⲇ.bezierCurveTo(ᐃ * 96, 83 * ᐃ, 96 * ᐃ, 83 * ᐃ, 97 * ᐃ, 84 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97, ᐃ * 85.5, ᐃ * 97, 85.5 * ᐃ, ᐃ * 97, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 93.5, 87.5 * ᐃ, 93.5 * ᐃ, ᐃ * 87.5, 90 * ᐃ, 88 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[ⵠΔΔᐃ], ΔᐃΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(86 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(89 * ᐃ, 76 * ᐃ, 88 * ᐃ, ᐃ * 81, 85 * ᐃ, ᐃ * 82);
		Ⲇ.bezierCurveTo(80 * ᐃ, 80 * ᐃ, ᐃ * 82, ᐃ * 78, ᐃ * 85, ᐃ * 72);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 80, ᐃ * 86);
		Ⲇ.bezierCurveTo(84 * ᐃ, 88 * ᐃ, 86 * ᐃ, 88 * ᐃ, ᐃ * 85, 93 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 96, 79 * ᐃ, ᐃ * 96, ᐃ * 76, ᐃ * 91);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔⲆᐃΔ], ⲆᐃᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 51, 91 * ᐃ, 62 * ᐃ, ᐃ * 80, 78 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, 86 * ᐃ, ᐃ * 66, 90 * ᐃ, ᐃ * 60, 86 * ᐃ);
		Ⲇ.bezierCurveTo(55 * ᐃ, 79 * ᐃ, ᐃ * 57, 73 * ᐃ, 67 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 71, ᐃ * 51, ᐃ * 79, 44 * ᐃ, 84 * ᐃ, ᐃ * 46);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ⲆᐃΔᐃᐃ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(76 * ᐃ, 60 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, 66 * ᐃ, ᐃ * 75, 74 * ᐃ, ᐃ * 68, ᐃ * 74);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 64, ᐃ * 68, 59 * ᐃ, ᐃ * 76, 59 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⲆⲆ], ᐃᐃ[ⲆᐃⲆᐃᐃ], 5 * ᐃ);
		return ΔΔ
	}

	function ᐃΔᐃΔΔᐃᐃΔⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 217;
		ΔΔ.height = ᐃ * 215;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 79, 113 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135, ᐃ * 98, 136 * ᐃ, ᐃ * 96, 142 * ᐃ, ᐃ * 97);
		Ⲇ.bezierCurveTo(ᐃ * 167, 106 * ᐃ, ᐃ * 167, ᐃ * 106, 171 * ᐃ, 109 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 173, 120 * ᐃ, ᐃ * 173, ᐃ * 134, ᐃ * 169, 141 * ᐃ);
		Ⲇ.bezierCurveTo(140 * ᐃ, ᐃ * 149.5, 140 * ᐃ, ᐃ * 149.5, ᐃ * 111, ᐃ * 158);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ⲆᐃⲆᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(154 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 91, 175 * ᐃ, 87 * ᐃ, ᐃ * 176, ᐃ * 94);
		Ⲇ.bezierCurveTo(175 * ᐃ, ᐃ * 102, ᐃ * 176, ᐃ * 102, ᐃ * 186, ᐃ * 103);
		Ⲇ.bezierCurveTo(191 * ᐃ, ᐃ * 104, 192 * ᐃ, 105 * ᐃ, 185 * ᐃ, 116 * ᐃ);
		Ⲇ.bezierCurveTo(183 * ᐃ, ᐃ * 120, 191 * ᐃ, ᐃ * 124, ᐃ * 189, ᐃ * 129);
		Ⲇ.bezierCurveTo(ᐃ * 185, ᐃ * 139, ᐃ * 178, ᐃ * 134, 166 * ᐃ, ᐃ * 131);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆⵠᐃ], ΔⲆΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 60, ᐃ * 46);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 34, 60 * ᐃ, 29 * ᐃ, ᐃ * 56, ΔⵠⵠΔᐃⲆᐃ * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * ⵠⲆⵠⲆΔ, ᐃ * 52, 16 * ᐃ, ᐃ * 49, ᐃ * 24);
		Ⲇ.bezierCurveTo(ᐃ * 48, 27 * ᐃ, 46 * ᐃ, ᐃ * 28, 39 * ᐃ, ᐃ * 27);
		Ⲇ.bezierCurveTo(ᐃ * 33, 26 * ᐃ, 34 * ᐃ, 31 * ᐃ, 35 * ᐃ, 37 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, 41 * ᐃ, 27 * ᐃ, 46 * ᐃ, ᐃ * 29, ᐃ * 52);
		Ⲇ.bezierCurveTo(36 * ᐃ, 55 * ᐃ, ᐃ * 35, ᐃ * 56, ᐃ * 31, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 65, ᐃ * 32, 64 * ᐃ, 35 * ᐃ, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 46, ᐃ * 50);
		Ⲇ.bezierCurveTo(51 * ᐃ, ᐃ * 35, 70 * ᐃ, 32 * ᐃ, ᐃ * 78, 29 * ᐃ);
		Ⲇ.bezierCurveTo(84 * ᐃ, ᐃ * 27, ᐃ * 113, 36 * ᐃ, 127 * ᐃ, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 140, 47 * ᐃ, 147 * ᐃ, ᐃ * 69, 137 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, ᐃ * 92, 117 * ᐃ, 92 * ᐃ, ᐃ * 109, ᐃ * 94);
		Ⲇ.bezierCurveTo(101 * ᐃ, 96 * ᐃ, ᐃ * 89, 92 * ᐃ, 65 * ᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(54 * ᐃ, 80 * ᐃ, 46 * ᐃ, ᐃ * 58, 46 * ᐃ, ᐃ * 51);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⲆⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 51, ᐃ * 40);
		Ⲇ.bezierCurveTo(49 * ᐃ, ᐃ * 34, ᐃ * 49, 34 * ᐃ, 47 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 28, ᐃ * 34, ᐃ * 27, 37 * ᐃ, 37 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 40.5, ᐃ * 43, 40.5 * ᐃ, 49 * ᐃ, ᐃ * 44);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 29, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 49, ᐃ * 38, 49 * ᐃ, ᐃ * 47, 50 * ᐃ);
		Ⲇ.bezierCurveTo(46.5 * ᐃ, ᐃ * 51.5, ᐃ * 46.5, ᐃ * 51.5, 46 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(40 * ᐃ, ᐃ * 53.5, ᐃ * 40, ᐃ * 53.5, ᐃ * 34, ᐃ * 54);
		Ⲇ.bezierCurveTo(29 * ᐃ, 51 * ᐃ, 32 * ᐃ, ᐃ * 51.5, ᐃ * 30, 49 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔΔⲆᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 89, ᐃ * 61);
		Ⲇ.bezierCurveTo(ᐃ * 101, 70 * ᐃ, ᐃ * 109, ᐃ * 90, ᐃ * 102, 90 * ᐃ);
		Ⲇ.bezierCurveTo(97 * ᐃ, 91 * ᐃ, ᐃ * 87, 91 * ᐃ, 60 * ᐃ, ᐃ * 80);
		Ⲇ.bezierCurveTo(ᐃ * 48, 65 * ᐃ, ᐃ * 46, ᐃ * 56, 48 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, 52 * ᐃ, 66 * ᐃ, 56 * ᐃ, 89 * ᐃ, 61 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(99 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(115 * ᐃ, ᐃ * 45, ᐃ * 125, ᐃ * 42, ᐃ * 129, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 138, ᐃ * 56, 140 * ᐃ, ᐃ * 63, 138 * ᐃ, 67 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 80, ᐃ * 122, ᐃ * 87, 114 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 105, 80 * ᐃ, 95 * ᐃ, 62 * ᐃ, 98 * ᐃ, 61 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 118, ᐃ * 62);
		Ⲇ.bezierCurveTo(139 * ᐃ, ᐃ * 45, 153 * ᐃ, ᐃ * 40, 150 * ᐃ, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 57, ᐃ * 157, 63 * ᐃ, 157 * ᐃ, ᐃ * 70);
		Ⲇ.bezierCurveTo(ᐃ * 157, ᐃ * 74, 142 * ᐃ, ᐃ * 77, 142 * ᐃ, ᐃ * 85);
		Ⲇ.bezierCurveTo(143 * ᐃ, ᐃ * 91, 141 * ᐃ, ᐃ * 92, 135 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132, 90 * ᐃ, 132 * ᐃ, 96 * ᐃ, ᐃ * 124, 99 * ᐃ);
		Ⲇ.bezierCurveTo(118 * ᐃ, ᐃ * 93, ᐃ * 116, 77 * ᐃ, ᐃ * 116, ᐃ * 64);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 90, 130 * ᐃ);
		Ⲇ.bezierCurveTo(157 * ᐃ, 115 * ᐃ, ᐃ * 165, 111 * ᐃ, ᐃ * 167, ᐃ * 115);
		Ⲇ.bezierCurveTo(170 * ᐃ, 117 * ᐃ, ᐃ * 171, ᐃ * 135, ᐃ * 167, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135.5, 149.5 * ᐃ, 135.5 * ᐃ, 149.5 * ᐃ, ᐃ * 104, 158 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆⲆⲆΔⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 53, ᐃ * 119);
		Ⲇ.bezierCurveTo(ᐃ * 46, 120 * ᐃ, ᐃ * 40, 118 * ᐃ, 34 * ᐃ, 116 * ᐃ);
		Ⲇ.bezierCurveTo(28 * ᐃ, 111 * ᐃ, ᐃ * 41, ᐃ * 112, ᐃ * 39, 108 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, ΔᐃⵠᐃⵠᐃΔ * ᐃ, 49 * ᐃ, ᐃ * 102, 53 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(57 * ᐃ, ᐃ * 84, ᐃ * 58, 85 * ᐃ, ᐃ * 63, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, ᐃ * 96, 72 * ᐃ, ᐃ * 94, ᐃ * 80, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, ᐃ * 96, 78 * ᐃ, 107 * ᐃ, ᐃ * 66, ᐃ * 115);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[9], ᐃᐃ[10], ᐃ * ᐃⵠⲆⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(ᐃ * 133.5, 57 * ᐃ, 133.5 * ᐃ, 57 * ᐃ, 149 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, 54 * ᐃ, ᐃ * 154, ᐃ * 65, 157 * ᐃ, ᐃ * 68);
		Ⲇ.bezierCurveTo(138.5 * ᐃ, 66.5 * ᐃ, ᐃ * 138.5, 66.5 * ᐃ, 120 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, ᐃ * 65);
		Ⲇ.bezierCurveTo(ᐃ * 129, 77 * ᐃ, ᐃ * 129, ᐃ * 77, 140 * ᐃ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 89, ᐃ * 130, 92 * ᐃ, ᐃ * 128, ᐃ * 96);
		Ⲇ.bezierCurveTo(ᐃ * 123.5, 82 * ᐃ, ᐃ * 123.5, ᐃ * 82, 119 * ᐃ, 68 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 51, 112 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 108, ᐃ * 78, ᐃ * 111, 88 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(98 * ᐃ, 122 * ᐃ, ᐃ * 117, ᐃ * 136, 125 * ᐃ, ᐃ * 157);
		Ⲇ.bezierCurveTo(123 * ᐃ, 180 * ᐃ, ᐃ * 123, ᐃ * 185, ᐃ * 118, 186 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 101, 190 * ᐃ, ᐃ * 89, ᐃ * 191, 79 * ᐃ, 187 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53, 165 * ᐃ, 50 * ᐃ, ᐃ * 153, 47 * ᐃ, ᐃ * 144);
		Ⲇ.bezierCurveTo(46 * ᐃ, 128 * ᐃ, ᐃ * 46, 124 * ᐃ, 50 * ᐃ, ᐃ * 112);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[9], ᐃᐃ[ⲆⵠΔⲆⲆ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 50, 114 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, 149 * ᐃ, ᐃ * 80, 147 * ᐃ, ᐃ * 80, 149 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 82, 155 * ᐃ, ᐃ * 80, ᐃ * 182, ᐃ * 74, ᐃ * 182);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 172, 52 * ᐃ, 157 * ᐃ, ᐃ * 47, ᐃ * 144);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⲆᐃΔⲆ], ᐃᐃ[ΔᐃᐃΔᐃ], ᐃ * ⲆⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 85, 152 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, 150 * ᐃ, ᐃ * 109, ᐃ * 152, 119 * ᐃ, 156 * ᐃ);
		Ⲇ.bezierCurveTo(122 * ᐃ, ᐃ * 163, ᐃ * 122, ᐃ * 174, 117 * ᐃ, 182 * ᐃ);
		Ⲇ.closePath();
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 188, 82 * ᐃ, ᐃ * 187, ᐃ * 83, ᐃ * 179);
		Δⵠ(Ⲇ, ᐃᐃ[11], ᐃᐃ[11], ᐃ * ⵠⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 104, 166 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, 165 * ᐃ, 142 * ᐃ, 168 * ᐃ, ᐃ * 137, ᐃ * 173);
		Ⲇ.bezierCurveTo(ᐃ * 127, 177 * ᐃ, ᐃ * 137, ᐃ * 195, 126 * ᐃ, 196 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 195, 112 * ᐃ, 194 * ᐃ, ᐃ * 109, ᐃ * 199);
		Ⲇ.bezierCurveTo(105 * ᐃ, 205 * ᐃ, ᐃ * 102, ᐃ * 195, ᐃ * 96, ᐃ * 197);
		Ⲇ.bezierCurveTo(84 * ᐃ, ᐃ * 201, ᐃ * 88, ᐃ * 198, 90 * ᐃ, 187 * ᐃ);
		Ⲇ.bezierCurveTo(96 * ᐃ, ᐃ * 171, 97 * ᐃ, 170 * ᐃ, 103 * ᐃ, 167 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠΔΔΔⲆ], ᐃᐃ[10], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105 * ᐃ, ᐃ * 168);
		Ⲇ.bezierCurveTo(118 * ᐃ, 172.5 * ᐃ, ᐃ * 118, ᐃ * 172.5, ᐃ * 131, 177 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, 190 * ᐃ, ᐃ * 132, ᐃ * 199, ᐃ * 116, 194 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110, 182 * ᐃ, ᐃ * 110, ᐃ * 182, 104 * ᐃ, 170 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102 * ᐃ, 169 * ᐃ);
		Ⲇ.bezierCurveTo(100.5 * ᐃ, ᐃ * 182, ᐃ * 100.5, ᐃ * 182, ᐃ * 99, ᐃ * 195);
		Ⲇ.bezierCurveTo(ᐃ * 93.5, 196.5 * ᐃ, 93.5 * ᐃ, 196.5 * ᐃ, ᐃ * 88, 198 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 176, ᐃ * 96, ᐃ * 174, 101 * ᐃ, 168 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[9], ᐃᐃ[ⵠⵠⵠΔᐃᐃⵠ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(64 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, 101 * ᐃ, ᐃ * 64, 101 * ᐃ, 64 * ᐃ, ᐃ * 95);
		Ⲇ.bezierCurveTo(57 * ᐃ, ᐃ * 86, 57 * ᐃ, 84 * ᐃ, ᐃ * 53, 97 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 55, ᐃ * 103.5, 55 * ᐃ, 103.5 * ᐃ, 57 * ᐃ, ᐃ * 110);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔΔΔⵠ], ᐃᐃ[11], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 40, ᐃ * 108);
		Ⲇ.bezierCurveTo(46.5 * ᐃ, 111 * ᐃ, 46.5 * ᐃ, 111 * ᐃ, 53 * ᐃ, ᐃ * 114);
		Ⲇ.bezierCurveTo(ᐃ * 50.5, 117 * ᐃ, 50.5 * ᐃ, ᐃ * 117, ᐃ * 48, 120 * ᐃ);
		Ⲇ.bezierCurveTo(40.5 * ᐃ, ᐃ * 117.5, ᐃ * 40.5, ᐃ * 117.5, 33 * ᐃ, 115 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 36, 112 * ᐃ, ᐃ * 36, 112 * ᐃ, 39 * ᐃ, 109 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆᐃⲆᐃⵠ], ᐃᐃ[11], Ⲇⵠⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 189, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 178.5, ᐃ * 110.5, 178.5 * ᐃ, ᐃ * 110.5, 168 * ᐃ, 115 * ᐃ);
		Ⲇ.bezierCurveTo(168.5 * ᐃ, 119 * ᐃ, ᐃ * 168.5, 119 * ᐃ, ᐃ * 169, ᐃ * 123);
		Ⲇ.bezierCurveTo(ᐃ * 179, ᐃ * 124.5, ᐃ * 179, ᐃ * 124.5, 189 * ᐃ, ᐃ * 126);
		Ⲇ.bezierCurveTo(182 * ᐃ, ᐃ * 118, ᐃ * 183, ᐃ * 115, 188 * ᐃ, ᐃ * 106);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 69, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 69, ᐃ * 141, 70 * ᐃ, ᐃ * 136, ᐃ * 77, ᐃ * 137);
		Ⲇ.bezierCurveTo(ᐃ * 88, 133 * ᐃ, ᐃ * 101, 134 * ᐃ, ᐃ * 108, 137 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⵠⲆ], ᐃ * ᐃⵠᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, ᐃ * 161);
		Ⲇ.bezierCurveTo(ᐃ * 54, 124 * ᐃ, ᐃ * 55, 119 * ᐃ, ᐃ * 62, 119 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, ᐃ * 117, 85 * ᐃ, 117 * ᐃ, 93 * ᐃ, ᐃ * 119);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⲆΔⵠ], ᐃ * ᐃΔᐃⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 91, ᐃ * 29);
		Ⲇ.bezierCurveTo(74 * ᐃ, ᐃ * 33, ᐃ * 62, ᐃ * 46, 57 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(57 * ᐃ, 63 * ᐃ, 68 * ᐃ, ᐃ * 76, ᐃ * 77, ᐃ * 87);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(82 * ᐃ, 51 * ᐃ, 80 * ᐃ, 52 * ᐃ, 79 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 78, 65 * ᐃ, ᐃ * 93, 86 * ᐃ, 101 * ᐃ, ᐃ * 93);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 126.5, 103 * ᐃ, 126.5 * ᐃ, 103 * ᐃ, ᐃ * 123, 108 * ᐃ);
		Ⲇ.bezierCurveTo(133.5 * ᐃ, 107 * ᐃ, ᐃ * 133.5, 107 * ᐃ, 144 * ᐃ, 106 * ᐃ);
		Ⲇ.bezierCurveTo(138.5 * ᐃ, ᐃ * 110, ᐃ * 138.5, 110 * ᐃ, 133 * ᐃ, ᐃ * 114);
		Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 114, 142 * ᐃ, 114 * ᐃ, 151 * ᐃ, 114 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146.5, ᐃ * 119.5, 146.5 * ᐃ, ᐃ * 119.5, 142 * ᐃ, ᐃ * 125);
		Ⲇ.bezierCurveTo(146.5 * ᐃ, ᐃ * 127, 146.5 * ᐃ, ᐃ * 127, 151 * ᐃ, 129 * ᐃ);
		Ⲇ.bezierCurveTo(147.5 * ᐃ, 132 * ᐃ, ᐃ * 147.5, 132 * ᐃ, 144 * ᐃ, 135 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 148, 137 * ᐃ, ᐃ * 148, ᐃ * 137, ᐃ * 152, 139 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 142.5, 149 * ᐃ, ᐃ * 142.5, 146 * ᐃ, ᐃ * 146);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆⲆΔ], ᐃ * 4);
		return ΔΔ
	}
	const ⲆⵠⲆΔⲆ = ᐃΔΔΔ;

	function ⲆΔᐃᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 140 * ᐃ;
		var ΔᐃⲆ = ᐃ * 150;
		var ΔⵠᐃΔ = ᐃ * 10;
		var ᐃⲆⲆ = ᐃ * 4;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(-50 * ᐃ, ᐃ * -38 + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(160 * ᐃ, ᐃ * 65, 160 * ᐃ, ᐃ * 85, ᐃ * 152, 95 * ᐃ);
		Ⲇ.bezierCurveTo(152 * ᐃ, ᐃ * 95, ᐃ * 173, 94 * ᐃ, 187 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 187, 102 * ᐃ, ᐃ * 180, ᐃ * 120, 155 * ᐃ, 126 * ᐃ);
		Ⲇ.bezierCurveTo(154 * ᐃ, ᐃ * 126, ᐃ * 166, ᐃ * 138, ᐃ * 169, 148 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, 148 * ᐃ, 148 * ᐃ, 152 * ᐃ, 133 * ᐃ, 140 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, 140 * ᐃ, ᐃ * 134, ᐃ * 160, ᐃ * 122, 175 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, ᐃ * 175, ᐃ * 107, ᐃ * 162, ᐃ * 107, ᐃ * 144);
		Ⲇ.bezierCurveTo(ᐃ * 107, 144 * ᐃ, ᐃ * 98, ᐃ * 164, 73 * ᐃ, ᐃ * 167);
		Ⲇ.bezierCurveTo(73 * ᐃ, 167 * ᐃ, ᐃ * 72, 134 * ᐃ, 90 * ᐃ, ᐃ * 127);
		Ⲇ.bezierCurveTo(90 * ᐃ, 127 * ᐃ, ᐃ * 70, 134 * ᐃ, ᐃ * 55, ᐃ * 123);
		Ⲇ.bezierCurveTo(ᐃ * 55, 123 * ᐃ, ᐃ * 58, 115 * ᐃ, ᐃ * 75, ᐃ * 104);
		Ⲇ.bezierCurveTo(ᐃ * 75, ᐃ * 104, ᐃ * 66, ᐃ * 96, 61 * ᐃ, 77 * ᐃ);
		Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 77, 83 * ᐃ, 74 * ᐃ, 102 * ᐃ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102, ᐃ * 89, 92 * ᐃ, ᐃ * 66, 110 * ᐃ, 41 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, 40 * ᐃ, ᐃ * 130, 54 * ᐃ, 130 * ᐃ, 82 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130, 82 * ᐃ, 143 * ᐃ, ᐃ * 67, 159 * ᐃ, ᐃ * 65);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.translate(ⵠⵠⲆⲆ, 0 - ΔⵠᐃΔ);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		Ⲇ.beginPath();
		Ⲇ.bezierCurveTo(160 * ᐃ, 65 * ᐃ, 160 * ᐃ, 85 * ᐃ, 152 * ᐃ, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * 152, ᐃ * 95, ᐃ * 173, 94 * ᐃ, 187 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(187 * ᐃ, ᐃ * 102, 180 * ᐃ, ᐃ * 120, ᐃ * 155, 126 * ᐃ);
		Ⲇ.bezierCurveTo(154 * ᐃ, 126 * ᐃ, ᐃ * 166, ᐃ * 138, 169 * ᐃ, 148 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, 148 * ᐃ, 148 * ᐃ, 152 * ᐃ, ᐃ * 133, 140 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, ᐃ * 140, ᐃ * 134, ᐃ * 160, ᐃ * 122, 175 * ᐃ);
		Ⲇ.bezierCurveTo(122 * ᐃ, 175 * ᐃ, ᐃ * 107, ᐃ * 162, ᐃ * 107, ᐃ * 144);
		Ⲇ.bezierCurveTo(ᐃ * 107, 144 * ᐃ, ᐃ * 98, ᐃ * 164, ᐃ * 73, 167 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 73, 167 * ᐃ, ᐃ * 72, ᐃ * 134, ᐃ * 90, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 127, ᐃ * 70, ᐃ * 134, 55 * ᐃ, 123 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 55, 123 * ᐃ, ᐃ * 58, ᐃ * 115, 75 * ᐃ, ᐃ * 104);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 104, 66 * ᐃ, 96 * ᐃ, ᐃ * 61, ᐃ * 77);
		Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 77, 83 * ᐃ, ᐃ * 74, 102 * ᐃ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102, 89 * ᐃ, ᐃ * 92, 66 * ᐃ, ᐃ * 110, 41 * ᐃ);
		Ⲇ.bezierCurveTo(111 * ᐃ, 40 * ᐃ, 130 * ᐃ, ᐃ * 54, 130 * ᐃ, 82 * ᐃ);
		Ⲇ.bezierCurveTo(130 * ᐃ, 82 * ᐃ, 143 * ᐃ, 67 * ᐃ, ᐃ * 159, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], ᐃⲆⲆ);
		return ΔΔ
	}

	function ⵠⵠΔⵠⵠⲆᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 80;
		ΔΔ.height = 100 * ᐃ;
		Ⲇ.scale(.5, .5);
		Ⲇ.translate(ΔᐃΔᐃⵠ, 15);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 47, ΔⲆⲆΔ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 19, ᐃ * 30, ᐃ * 12, ᐃ * 42, 10 * ᐃ, ᐃ * 55);
		Ⲇ.bezierCurveTo(ⵠⵠⲆⲆⵠΔΔ * ᐃ, 75 * ᐃ, 27 * ᐃ, 76 * ᐃ, 36 * ᐃ, ᐃ * 72);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 60, ᐃ * 53, 46 * ᐃ, ᐃ * 54, 31 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53, ΔⵠᐃⵠⵠⵠⲆ * ᐃ, ᐃ * 50, ⲆⵠΔᐃⵠ * ᐃ, 48 * ᐃ, 6 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(17 * ᐃ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠⵠⲆΔᐃⵠⲆ * ᐃ, 77 * ᐃ, ΔⲆⵠΔᐃ * ᐃ, 83 * ᐃ, ᐃ * 4, 87 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[0], ᐃ * 10);
		Ⲇ.translate(0, -ⲆᐃᐃᐃⲆ);
		Ⲇ.globalAlpha = ⵠⲆⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(47 * ᐃ, 5 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 19, ᐃ * 30, ᐃⲆᐃⵠⵠ * ᐃ, ᐃ * 42, ᐃ * 10, ᐃ * 55);
		Ⲇ.bezierCurveTo(ΔΔΔΔⵠ * ᐃ, 75 * ᐃ, 27 * ᐃ, 76 * ᐃ, 36 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 52, ᐃ * 60, ᐃ * 53, ᐃ * 46, 54 * ᐃ, 31 * ᐃ);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * ⵠΔΔΔΔΔᐃ, ᐃ * 50, 9 * ᐃ, ᐃ * 48, 6 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[2], ᐃ * ⵠⵠΔⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⲆΔᐃΔΔΔ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(18 * ᐃ, 77 * ᐃ, ᐃ * ⵠΔᐃΔⲆ, 83 * ᐃ, 4 * ᐃ, 87 * ᐃ);
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[2], ᐃ * 8);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⵠⲆⵠΔΔⲆⵠ, ᐃ * 70);
		Ⲇ.bezierCurveTo(ᐃ * 33, 52 * ᐃ, ᐃ * 39, ᐃ * 33, ᐃ * 48, ᐃ * 7);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 8);
		return ΔΔ
	}

	function ⲆᐃⲆⲆⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 120;
		var ΔᐃⲆ = 150 * ᐃ;
		var Δᐃᐃ = 60 * ᐃ;
		var ⲆⵠᐃΔ = Δᐃᐃ / 4;
		var ΔⵠᐃΔ = ⲆΔⲆᐃⵠᐃΔ * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 + ᐃ * ⵠⵠᐃⵠ, ΔᐃⲆ / ΔⵠΔΔ + ᐃ * 0 + ΔⵠᐃΔ);
		Ⲇ.rotate(Math.PI / ᐃⲆᐃΔⵠ);
		Ⲇ.globalAlpha = .5;
		ⲆᐃⵠΔ(Ⲇ, 8, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ᐃⵠΔⲆ - ᐃ * 11, ΔᐃⲆ / 2 + ⵠⲆⵠⲆΔ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.rotate(Math.PI / 3);
		Ⲇ.translate(0, -ΔⵠᐃΔ);
		ⲆᐃⵠΔ(Ⲇ, ⲆⵠΔᐃⲆ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 - ᐃ * 9, ΔᐃⲆ / ᐃΔⵠᐃ - ᐃ * 12);
		Ⲇ.rotate(Math.PI / 2.8);
		ⲆᐃⵠΔ(Ⲇ, ⲆᐃΔΔΔ, Δᐃᐃ * .5, ⲆⵠᐃΔ * .4);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 + ᐃ * 19, ΔᐃⲆ / 2 + ᐃ * 5);
		Ⲇ.rotate(Math.PI / 1);
		ⲆᐃⵠΔ(Ⲇ, 5, .5 * Δᐃᐃ, ⲆⵠᐃΔ * .4);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ⵠⵠⲆᐃ - ᐃ * 8, ΔᐃⲆ / 2 + ᐃ * 20);
		Ⲇ.rotate(Math.PI / 2.25);
		ⲆᐃⵠΔ(Ⲇ, 5, .5 * Δᐃᐃ, ⲆⵠᐃΔ * .4);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.restore();
		return ΔΔ
	}

	function ΔⲆⲆⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 220 * ᐃ;
		var ΔᐃⲆ = 220 * ᐃ;
		var Δᐃᐃ = ᐃⵠᐃⲆⲆⲆᐃ * ᐃ;
		var ⲆⵠᐃΔ = Δᐃᐃ / 4;
		var ΔⵠᐃΔ = ⲆᐃΔⵠ * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		if (!ⲆⲆⲆⵠ) Ⲇ.translate(ⲆⲆⲆ * ᐃ, -8 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔΔⲆᐃⵠⵠ, Δᐃᐃ, ⲆⵠᐃΔ);
		ⲆⲆⲆⵠ ? Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]) : Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
		Ⲇ.globalAlpha = 1;
		if (ᐃⲆ == ⲆⲆⲆ) {
			ⲆᐃⵠΔ(Ⲇ, 6, Δᐃᐃ * .65, .65 * ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[2])
		} else if (1 == ᐃⲆ) {
			Ⲇ.translate(ⵠΔΔΔ * ᐃ, 20 * ᐃ);
			ⲆᐃⵠΔ(Ⲇ, ⲆΔᐃⵠᐃ, .45 * Δᐃᐃ, .4 * ⲆⵠᐃΔ);
			Δⵠ(Ⲇ, ᐃᐃ[2])
		}
		return ΔΔ
	}

	function ⵠⲆⲆᐃⵠⵠⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 220 * ᐃ;
		var ΔᐃⲆ = ᐃ * 230;
		var Δᐃᐃ = ⲆᐃᐃΔᐃⲆᐃ * ᐃ;
		var ⲆⵠᐃΔ = Δᐃᐃ / 4;
		var ΔⵠᐃΔ = 20 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃⲆ / ᐃⵠΔⲆ, ΔᐃⲆ / ΔᐃⵠⲆ + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		ⲆᐃⵠΔ(Ⲇ, ⲆⲆΔΔⵠ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃⵠΔ, -ΔⵠᐃΔ);
		ⲆᐃⵠΔ(Ⲇ, ⲆΔⵠΔᐃ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		ⲆᐃⵠΔ(Ⲇ, ΔᐃΔⵠⵠⲆᐃ, .65 * Δᐃᐃ, .65 * ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ⵠⲆΔᐃⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 18;
		var ΔᐃⲆ = ΔᐃΔⵠⲆ * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		var ᐃᐃΔ = ᐃ * 9;
		var ᐃⲆᐃ = ΔᐃᐃⵠⲆⲆᐃ * ᐃ;
		var Δᐃᐃ = ᐃ * 8;
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		ΔⵠⲆ(Ⲇ, ⵠᐃⲆᐃ, 0, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]);
		var Δᐃᐃ = Δᐃᐃᐃ * ᐃ;
		var ᐃᐃΔ = 0;
		var ᐃⲆᐃ = -3 * ᐃ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		ΔⵠⲆ(Ⲇ, ΔⲆⵠ, ΔΔⵠᐃ, Δᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
		Ⲇ.restore();
		return ΔΔ
	}

	function ⲆⵠⵠⲆⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 180;
		var ΔᐃⲆ = ᐃ * 210;
		var Δᐃᐃ = 60 * ᐃ;
		var ⲆⵠᐃΔ = Δᐃᐃ / ᐃⵠⲆⲆⲆ;
		var ΔⵠᐃΔ = ΔΔⵠΔ * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 - ⲆⵠⲆ * ᐃ, ΔᐃⲆ / ⵠⲆⵠᐃ - 35 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.rotate(Math.PI / -1.8);
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ᐃ * ΔⲆⵠ, ᐃ * -ⵠΔΔΔ);
		ⲆᐃⵠΔ(Ⲇ, 5, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ⵠⵠⲆᐃ + ᐃ * 10, ΔᐃⲆ / ⵠⲆΔΔ + 15 * ᐃ + ΔⵠᐃΔ);
		Ⲇ.rotate(Math.PI / 2);
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⲆⵠⲆ * ᐃ, -20 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 5, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ᐃⵠΔⲆ - ᐃ * 50, ΔᐃⲆ / ᐃᐃⲆΔ + ᐃ * 40 + ΔⵠᐃΔ);
		Ⲇ.rotate(Math.PI / 3);
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⵠⵠᐃⵠ, ᐃ * -ᐃⵠᐃΔ);
		ⲆᐃⵠΔ(Ⲇ, 5, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ΔⵠΔΔ - 0 * ᐃ, ΔᐃⲆ / ⵠΔⵠᐃ - ᐃ * 35);
		Ⲇ.rotate(Math.PI / -1.8);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.translate(ΔΔⵠᐃ * ᐃ, ᐃ * -20);
		ⲆᐃⵠΔ(Ⲇ, 5, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ⵠΔⵠᐃ + ᐃ * ᐃΔᐃᐃⵠ, ΔᐃⲆ / 2 + ᐃ * ᐃⲆⲆΔⵠ);
		Ⲇ.rotate(Math.PI / 2);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, -ⵠⵠᐃᐃ * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, ⲆⵠΔᐃᐃ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / ᐃᐃΔⵠ - 50 * ᐃ, ΔᐃⲆ / ᐃΔⵠᐃ + 40 * ᐃ);
		Ⲇ.rotate(Math.PI / 3);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, -ᐃᐃⲆⲆⵠ * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, ⲆⲆᐃⵠ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.restore();
		var Δᐃᐃ = ᐃ * 30;
		var ⲆⵠᐃΔ = Δᐃᐃ / 4;
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 + ⲆᐃΔΔΔ * ᐃ, ΔᐃⲆ / ᐃᐃⲆΔ - ⵠⲆΔⵠ * ᐃ);
		Ⲇ.rotate(Math.PI / -1.8);
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		Ⲇ.translate(ΔΔᐃ, ᐃ * -20);
		ⲆᐃⵠΔ(Ⲇ, 5, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 + ᐃ * 0, ΔᐃⲆ / 2 + 10 * ᐃ);
		Ⲇ.rotate(Math.PI / ⵠⵠⲆᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -20);
		ⲆᐃⵠΔ(Ⲇ, ᐃᐃⲆᐃⵠ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆΔ]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃᐃⲆ / 2 - ᐃ * 45, ΔᐃⲆ / ΔᐃⵠⲆ + ᐃ * 35);
		Ⲇ.rotate(Math.PI / 3);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -20);
		ⲆᐃⵠΔ(Ⲇ, ΔᐃΔΔⲆ, Δᐃᐃ, ⲆⵠᐃΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆΔ]);
		Ⲇ.restore();
		ΔⵠⲆ(Ⲇ, ᐃᐃⲆ / 2 - ᐃ * 7, ΔᐃⲆ / ᐃᐃΔⵠ + ᐃⲆⲆΔᐃ * ᐃ, 5);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ⲆΔΔΔⲆ(ᐃ, text, ΔᐃⲆ, ᐃᐃ, ΔⵠᐃΔ, ⵠⵠΔᐃ, ΔⵠⲆΔΔᐃΔ, ⵠⲆᐃᐃⵠ, ⲆⲆΔⵠ, ᐃᐃⲆⵠ, ⵠᐃΔⲆⲆ) {
		ⵠᐃΔⲆⲆ === undefined && (ⵠᐃΔⲆⲆ = 0);
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ⵠⵠΔᐃ = !ⵠⵠΔᐃ ? ⲆⲆⲆ : ⵠⵠΔᐃ * ᐃ;
		var ΔⲆⲆ = Math.floor(ΔᐃⲆ * ᐃ);
		Ⲇ.font = ΔⲆⲆ + ⵠ[104];
		Ⲇ.lineJoin = ⵠ[244];
		ⵠⲆᐃᐃⵠ = ⵠⲆᐃᐃⵠ * ᐃ;
		var ⵠⵠⲆⵠⵠ = ΔⵠⲆΔΔᐃΔ ? ⵠⲆᐃᐃⵠ * ᐃⲆⵠᐃ : 0;
		if (ⲆⲆΔⵠ) var ᐃⲆⲆ = Math.min(Ⲇ.measureText(text).width + ᐃ * ᐃᐃΔⵠ + ⵠⵠⲆⵠⵠ, ⲆⲆΔⵠ);
		else var ᐃⲆⲆ = Ⲇ.measureText(text).width + 2 * ᐃ + ⵠⵠⲆⵠⵠ + 2 * (ⵠᐃΔⲆⲆ * ᐃ);
		var ΔⲆⲆ = (ΔⲆⲆ + ⵠⵠΔᐃ + ⵠᐃΔⲆⲆ) * ᐃ + ⵠⵠⲆⵠⵠ;
		ΔΔ.width = ᐃⲆⲆ;
		ΔΔ.height = ΔⲆⲆ;
		ΔⵠⲆΔΔᐃΔ && (Ⲇ.fillStyle = ΔⵠⲆΔΔᐃΔ, ᐃΔⵠ(Ⲇ, 0, ⵠᐃⲆᐃ, ᐃⲆⲆ, ΔⲆⲆ, ᐃᐃΔⵠ * ⵠⲆᐃᐃⵠ), Ⲇ.fill(), Ⲇ.translate(ⵠⲆᐃᐃⵠ, ⵠⲆᐃᐃⵠ));
		Ⲇ.textBaseline = ⵠ[230], Ⲇ.font = ΔᐃⲆ + ⵠ[104];
		Ⲇ.lineJoin = ⵠ[244];
		ΔⵠᐃΔ && (Ⲇ.beginPath(), Ⲇ.fillStyle = ΔⵠᐃΔ, Ⲇ.fillText(text, 0, ΔⲆⲆ / ⵠᐃⵠΔ + ⵠⵠΔᐃ - ⵠⵠⲆⵠⵠ / ᐃⲆⵠᐃ, ᐃⲆⲆ));
		Ⲇ.beginPath();
		if (ᐃᐃⲆⵠ) {
			Ⲇ.strokeStyle = ᐃᐃⲆⵠ;
			Ⲇ.lineWidth = ⵠᐃΔⲆⲆ;
			Ⲇ.strokeText(text, ⵠᐃΔⲆⲆ, (ΔⲆⲆ - ⵠⵠⲆⵠⵠ) / ΔᐃⵠⲆ, ᐃⲆⲆ)
		}
		Ⲇ.fillStyle = ᐃᐃ;
		Ⲇ.fillText(text, ⵠᐃΔⲆⲆ, (ΔⲆⲆ - ⵠⵠⲆⵠⵠ) / ΔᐃⵠⲆ, ᐃⲆⲆ);
		return ΔΔ
	}
	const ⵠⲆⲆᐃ = Ⲇᐃⵠᐃ;

	function ᐃᐃᐃᐃⵠᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 373;
		ΔΔ.height = 314 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 184.048583984375, ᐃ * 69.1805419921875);
		ᐃΔⵠ(Ⲇ, -40 * ᐃ, ᐃ * -28.5, 80 * ᐃ, ᐃ * 57, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 185.048583984375, 61.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(145.048583984375 * ᐃ, ᐃ * 59.6805419921875, 138.048583984375 * ᐃ, ᐃ * 41.6805419921875, 148.048583984375 * ᐃ, 33.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169.048583984375, 17.6805419921875 * ᐃ, ᐃ * 194.048583984375, ᐃ * 20.6805419921875, 210.048583984375 * ᐃ, ᐃ * 27.6805419921875);
		Ⲇ.bezierCurveTo(234.048583984375 * ᐃ, ᐃ * 40.6805419921875, ᐃ * 225.048583984375, 57.6805419921875 * ᐃ, ᐃ * 186.048583984375, 61.6805419921875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 224.048583984375, ᐃ * 56.6805419921875);
		Ⲇ.bezierCurveTo(ᐃ * 326.048583984375, ᐃ * 69.6805419921875, ᐃ * 363.048583984375, ᐃ * 148.6805419921875, ᐃ * 349.048583984375, ᐃ * 206.6805419921875);
		Ⲇ.bezierCurveTo(ᐃ * 329.048583984375, ᐃ * 278.6805419921875, 252.048583984375 * ᐃ, 283.6805419921875 * ᐃ, ᐃ * 206.048583984375, 275.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206.548583984375, 266.6805419921875 * ᐃ, 206.548583984375 * ᐃ, 266.6805419921875 * ᐃ, 207.048583984375 * ᐃ, 257.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 276.048583984375, ᐃ * 268.6805419921875, ᐃ * 308.048583984375, 239.6805419921875 * ᐃ, 323.048583984375 * ᐃ, 208.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 352.048583984375, 145.6805419921875 * ᐃ, 292.048583984375 * ᐃ, ᐃ * 86.6805419921875, 223.048583984375 * ᐃ, ᐃ * 74.6805419921875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[ΔⲆᐃⲆ], ⵠᐃΔΔⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(183.548583984375 * ᐃ, 119.6805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, -121.5 * ᐃ, -45 * ᐃ, ᐃ * 243, ᐃ * 90, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[0], ᐃ * 6);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 183.048583984375, 155.6805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, -121 * ᐃ, ᐃ * -52, 242 * ᐃ, 104 * ᐃ, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃ[ΔⵠⲆΔ], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 183.048583984375, 205.1805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, -121 * ᐃ, -50.5 * ᐃ, 242 * ᐃ, ᐃ * 101, ᐃ * 40);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ], ᐃᐃ[ⲆⵠⲆ], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 185.048583984375, ᐃ * 204.1805419921875);
		ᐃΔⵠ(Ⲇ, -100 * ᐃ, ᐃ * -34.5, 200 * ᐃ, 69 * ᐃ, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ], ᐃᐃ[0], ⵠΔⵠⵠⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 185.048583984375, 257.6805419921875 * ᐃ, 27.018512172212592 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ], ᐃᐃ[Ⲇᐃⵠᐃ], ᐃ * ⵠⲆⵠⵠᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -5, -ⲆⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(224.048583984375 * ᐃ, 56.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(326.048583984375 * ᐃ, 69.6805419921875 * ᐃ, 363.048583984375 * ᐃ, 148.6805419921875 * ᐃ, 349.048583984375 * ᐃ, 206.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 329.048583984375, ᐃ * 278.6805419921875, ᐃ * 252.048583984375, 283.6805419921875 * ᐃ, ᐃ * 206.048583984375, ᐃ * 275.6805419921875);
		Ⲇ.bezierCurveTo(206.548583984375 * ᐃ, 266.6805419921875 * ᐃ, ᐃ * 206.548583984375, 266.6805419921875 * ᐃ, ᐃ * 207.048583984375, ᐃ * 257.6805419921875);
		Ⲇ.bezierCurveTo(276.048583984375 * ᐃ, ᐃ * 268.6805419921875, ᐃ * 308.048583984375, 239.6805419921875 * ᐃ, ᐃ * 323.048583984375, 208.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(352.048583984375 * ᐃ, ᐃ * 145.6805419921875, ᐃ * 292.048583984375, ᐃ * 86.6805419921875, ᐃ * 223.048583984375, 74.6805419921875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[4], ᐃ * 6);
		Ⲇ.save();
		Ⲇ.translate(184.048583984375 * ᐃ, 69.1805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -40, -28.5 * ᐃ, 80 * ᐃ, 57 * ᐃ, ᐃ * ⵠΔᐃΔⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⵠΔⲆ], ⵠᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 185.048583984375, 61.6805419921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145.048583984375, 59.6805419921875 * ᐃ, ᐃ * 138.048583984375, 41.6805419921875 * ᐃ, 148.048583984375 * ᐃ, ᐃ * 33.6805419921875);
		Ⲇ.bezierCurveTo(169.048583984375 * ᐃ, 17.6805419921875 * ᐃ, ᐃ * 194.048583984375, ᐃ * 20.6805419921875, ᐃ * 210.048583984375, ᐃ * 27.6805419921875);
		Ⲇ.bezierCurveTo(234.048583984375 * ᐃ, 40.6805419921875 * ᐃ, ᐃ * 225.048583984375, ᐃ * 57.6805419921875, 186.048583984375 * ᐃ, ᐃ * 61.6805419921875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(183.548583984375 * ᐃ, 119.6805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, -121.5 * ᐃ, -45 * ᐃ, ᐃ * 243, 90 * ᐃ, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ⵠᐃᐃⲆ], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 183.048583984375, ᐃ * 155.6805419921875);
		ᐃΔⵠ(Ⲇ, -121 * ᐃ, ᐃ * -52, ᐃ * 242, ᐃ * 104, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[4], ᐃ * 6);
		Ⲇ.save();
		Ⲇ.translate(183.048583984375 * ᐃ, 205.1805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -121, ᐃ * -50.5, 242 * ᐃ, 101 * ᐃ, ᐃ * 40);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃΔᐃᐃ], ᐃᐃ[4], ᐃ * 6);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		Ⲇ.save();
		Ⲇ.translate(185.048583984375 * ᐃ, 204.1805419921875 * ᐃ);
		ᐃΔⵠ(Ⲇ, -100 * ᐃ, -34.5 * ᐃ, 200 * ᐃ, 69 * ᐃ, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃⵠΔ], ᐃᐃ[8], ᐃ * ΔⲆΔⲆΔ);
		Ⲇ.globalCompositeOperation = ⵠ[190];
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(185.048583984375 * ᐃ, ᐃ * 204.1805419921875);
		ᐃΔⵠ(Ⲇ, -ΔΔⲆⵠⲆ * ᐃ, -34.5 * ᐃ, ᐃ * 200, ᐃ * 69, 40 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ᐃⵠΔΔᐃ], ᐃ * ⵠⲆΔⲆᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		ΔⵠⲆ(Ⲇ, ᐃ * 185.048583984375, 257.6805419921875 * ᐃ, 27.018512172212592 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[4], ᐃ * ⵠᐃΔΔⲆ);
		Ⲇ.restore();
		return ΔΔ
	}

	function ΔᐃⲆΔⵠⲆⲆΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(96.5 * ᐃ, ᐃ * 277.34375);
		Ⲇ.bezierCurveTo(ᐃ * 197.5, ᐃ * 259.84375, 197.5 * ᐃ, 259.84375 * ᐃ, 298.5 * ᐃ, 242.34375 * ᐃ);
		Ⲇ.bezierCurveTo(311.5 * ᐃ, ᐃ * 231.34375, 307.5 * ᐃ, 168.34375 * ᐃ, ᐃ * 298.5, ᐃ * 150.34375);
		Ⲇ.bezierCurveTo(198 * ᐃ, 170.34375 * ᐃ, 198 * ᐃ, 170.34375 * ᐃ, ᐃ * 97.5, ᐃ * 190.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], ⲆᐃᐃⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98.5 * ᐃ, 214.34375 * ᐃ);
		Ⲇ.bezierCurveTo(199 * ᐃ, 196.34375 * ᐃ, 199 * ᐃ, 196.34375 * ᐃ, 299.5 * ᐃ, ᐃ * 178.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[2], ᐃ * ⲆⵠⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98.5 * ᐃ, 247.34375 * ᐃ);
		Ⲇ.bezierCurveTo(201.5 * ᐃ, 229.34375 * ᐃ, 201.5 * ᐃ, 229.34375 * ᐃ, 304.5 * ᐃ, 211.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[2], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 97.5, 189.34375 * ᐃ);
		Ⲇ.bezierCurveTo(97 * ᐃ, ᐃ * 199.84375, 97 * ᐃ, 199.84375 * ᐃ, ᐃ * 96.5, 210.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110.5, ᐃ * 204.34375, 110.5 * ᐃ, 204.34375 * ᐃ, 124.5 * ᐃ, 198.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137.5, 203.84375 * ᐃ, ᐃ * 137.5, ᐃ * 203.84375, ᐃ * 150.5, 209.34375 * ᐃ);
		Ⲇ.bezierCurveTo(172 * ᐃ, 197.84375 * ᐃ, 172 * ᐃ, 197.84375 * ᐃ, 193.5 * ᐃ, ᐃ * 186.34375);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, 189.84375 * ᐃ, ᐃ * 211.5, 189.84375 * ᐃ, ᐃ * 229.5, ᐃ * 193.34375);
		Ⲇ.bezierCurveTo(240.5 * ᐃ, ᐃ * 193.34375, ᐃ * 240.5, ᐃ * 193.34375, 251.5 * ᐃ, ᐃ * 193.34375);
		Ⲇ.bezierCurveTo(ᐃ * 261, ᐃ * 182.84375, ᐃ * 261, 182.84375 * ᐃ, 270.5 * ᐃ, 172.34375 * ᐃ);
		Ⲇ.bezierCurveTo(287.5 * ᐃ, ᐃ * 169.34375, 287.5 * ᐃ, ᐃ * 169.34375, ᐃ * 304.5, ᐃ * 166.34375);
		Ⲇ.bezierCurveTo(304.5 * ᐃ, 156.34375 * ᐃ, ᐃ * 300.5, 145.34375 * ᐃ, ᐃ * 298.5, ᐃ * 147.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[ᐃΔᐃⲆⵠ], ⵠᐃⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 300.5, ᐃ * 147.34375);
		Ⲇ.bezierCurveTo(293.5 * ᐃ, 121.34375 * ᐃ, ᐃ * 278.5, 106.34375 * ᐃ, 256.5 * ᐃ, 101.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176.5, ᐃ * 145.34375, ᐃ * 176.5, ᐃ * 145.34375, 96.5 * ᐃ, 189.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆΔ], ᐃᐃ[6], ⵠᐃⲆᐃⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 252.5 * ᐃ, ᐃ * 129.34375, ᐃ * 18.027756377319946);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		ΔⵠⲆ(Ⲇ, 248.5 * ᐃ, ᐃ * 121.34375, 8.246211251235321 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		return ΔΔ
	}

	function ⵠⵠΔⵠⵠⲆᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 234;
		ΔΔ.height = 183 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 76, 25 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 150, ᐃ * ⵠⵠⲆⵠ, 181 * ᐃ, 22 * ᐃ, 203 * ᐃ, 41 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 225, ᐃ * 63, 225 * ᐃ, 105 * ᐃ, 198 * ᐃ, 133 * ᐃ);
		Ⲇ.bezierCurveTo(179 * ᐃ, 157 * ᐃ, 134 * ᐃ, ᐃ * 178, ᐃ * 81, ᐃ * 164);
		Ⲇ.bezierCurveTo(ΔⲆᐃⵠΔ * ᐃ, 148 * ᐃ, 6 * ᐃ, 95 * ᐃ, ᐃ * 21, ᐃ * 66);
		Ⲇ.bezierCurveTo(34 * ᐃ, 39 * ᐃ, 52 * ᐃ, ᐃ * 33, ᐃ * 75, ᐃ * 25);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔⲆᐃ], ⵠΔⲆᐃΔ * ᐃ);
		return ΔΔ
	}

	function ⵠⵠⵠᐃⲆᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 220;
		ΔΔ.height = 180 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(-90 * ᐃ, ᐃ * -150);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 104, ᐃ * 237.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 237.8000030517578, 110 * ᐃ, 237.8000030517578 * ᐃ, 116 * ᐃ, 237.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 241.8000030517578, 116 * ᐃ, ᐃ * 241.8000030517578, 116 * ᐃ, 245.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, 245.3000030517578 * ᐃ, ᐃ * 115, 245.3000030517578 * ᐃ, ᐃ * 114, 244.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(109.5 * ᐃ, 244.8000030517578 * ᐃ, ᐃ * 109.5, 244.8000030517578 * ᐃ, 105 * ᐃ, ᐃ * 244.8000030517578);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔΔⵠΔ], ᐃᐃ[5], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 211.20000457763672);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * 216.20000457763672, 101 * ᐃ, 234.20000457763672 * ᐃ, 102 * ᐃ, ᐃ * 241.20000457763672);
		Ⲇ.bezierCurveTo(102 * ᐃ, 260.2000045776367 * ᐃ, 115 * ᐃ, ᐃ * 269.2000045776367, 115 * ᐃ, 269.2000045776367 * ᐃ);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 265.2000045776367, ᐃ * 115.5, ᐃ * 265.2000045776367, ᐃ * 116, ᐃ * 261.2000045776367);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 264, ᐃ * 108, 254 * ᐃ, ᐃ * 106, 242 * ᐃ);
		Ⲇ.bezierCurveTo(105 * ᐃ, 232 * ᐃ, ᐃ * 110, 222 * ᐃ, 115 * ᐃ, ᐃ * 218);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 216.75, ᐃ * 115.5, 217.375 * ᐃ, ᐃ * 116, 216.75 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃΔ], ᐃᐃ[5], ⵠᐃⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 120, ᐃ * 207);
		Ⲇ.bezierCurveTo(ᐃ * 115, 206 * ᐃ, 114 * ᐃ, 209 * ᐃ, ᐃ * 114, ᐃ * 211);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 268, ᐃ * 114, 241 * ᐃ, 114 * ᐃ, 271 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 115, ᐃ * 276, ᐃ * 118, ᐃ * 276, ᐃ * 120, ᐃ * 276);
		Ⲇ.bezierCurveTo(ᐃ * 122, 273 * ᐃ, ᐃ * 120.5, 274.5 * ᐃ, ᐃ * 121, 273 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 121, ᐃ * 241, 121 * ᐃ, ᐃ * 241, ᐃ * 121, ᐃ * 209);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃᐃ[4], ᐃ * ⵠᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 284, ᐃ * 238);
		Ⲇ.bezierCurveTo(289.5 * ᐃ, 238 * ᐃ, 289.5 * ᐃ, ᐃ * 238, ᐃ * 295, 238 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 295, 241.5 * ᐃ, 295 * ᐃ, ᐃ * 241.5, ᐃ * 295, 245 * ᐃ);
		Ⲇ.bezierCurveTo(289.5 * ᐃ, 245 * ᐃ, 289.5 * ᐃ, 245 * ᐃ, 284 * ᐃ, 245 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆᐃΔ], ᐃᐃ[ⲆⲆΔΔ], ᐃⲆⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 283, 211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 293, ᐃ * 216, 297 * ᐃ, 231 * ᐃ, 297 * ᐃ, 241 * ᐃ);
		Ⲇ.bezierCurveTo(298 * ᐃ, 254 * ᐃ, ᐃ * 290, ᐃ * 265, 284 * ᐃ, 269 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 283, 266 * ᐃ, 283.5 * ᐃ, ᐃ * 266, ᐃ * 283, ᐃ * 263);
		Ⲇ.bezierCurveTo(290 * ᐃ, 260 * ᐃ, 292 * ᐃ, 251 * ᐃ, 293 * ᐃ, ᐃ * 242);
		Ⲇ.bezierCurveTo(292 * ᐃ, 223 * ᐃ, 289 * ᐃ, ᐃ * 224, 284 * ᐃ, 218 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆⵠⲆⲆ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 280, ᐃ * 206);
		Ⲇ.bezierCurveTo(284 * ᐃ, ᐃ * 206, 285 * ᐃ, ᐃ * 208, ᐃ * 285, 211 * ᐃ);
		Ⲇ.bezierCurveTo(285 * ᐃ, ᐃ * 241.5, 285 * ᐃ, 241.5 * ᐃ, ᐃ * 285, ᐃ * 272);
		Ⲇ.bezierCurveTo(284 * ᐃ, 275 * ᐃ, ᐃ * 284, ᐃ * 275, ᐃ * 280, 275 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 279, ᐃ * 273.5, 279 * ᐃ, 273.5 * ᐃ, ᐃ * 278, 272 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 278, ᐃ * 240.5, 278 * ᐃ, 240.5 * ᐃ, 278 * ᐃ, 209 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃᐃ[ⵠᐃᐃⲆ], ⵠΔⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(138 * ᐃ, ᐃ * 298.40000915527344);
		Ⲇ.bezierCurveTo(141 * ᐃ, 311.40000915527344 * ᐃ, ᐃ * 151, ᐃ * 314.40000915527344, ᐃ * 162, 316.40000915527344 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 224, ᐃ * 316.40000915527344, ᐃ * 200, ᐃ * 315.90000915527344, ᐃ * 238, ᐃ * 315.40000915527344);
		Ⲇ.bezierCurveTo(254 * ᐃ, 316.40000915527344 * ᐃ, 261 * ᐃ, ᐃ * 306.40000915527344, ᐃ * 264, ᐃ * 298.40000915527344);
		Ⲇ.bezierCurveTo(ΔⲆᐃⵠΔΔΔ * ᐃ, 304.40000915527344 * ᐃ, 250 * ᐃ, ᐃ * 306.40000915527344, 244 * ᐃ, ᐃ * 306.40000915527344);
		Ⲇ.bezierCurveTo(201 * ᐃ, ᐃ * 306.90000915527344, ᐃ * 201, 306.90000915527344 * ᐃ, 158 * ᐃ, 307.40000915527344 * ᐃ);
		Ⲇ.bezierCurveTo(150 * ᐃ, ᐃ * 306.40000915527344, ᐃ * 148, ᐃ * 306.40000915527344, ᐃ * 139, 300.40000915527344 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ], ᐃᐃ[ᐃΔΔΔ], ΔⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 161, ᐃ * 177.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 130, 175.5999984741211 * ᐃ, ᐃ * 123, 190.5999984741211 * ᐃ, 122 * ᐃ, ᐃ * 205.5999984741211);
		Ⲇ.bezierCurveTo(121 * ᐃ, 277.5999984741211 * ᐃ, ᐃ * 122, 242.5999984741211 * ᐃ, ᐃ * 122, ᐃ * 279.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * 297.5999984741211, 137 * ᐃ, ᐃ * 299.5999984741211, ᐃ * 143, ᐃ * 300.5999984741211);
		Ⲇ.bezierCurveTo(163 * ᐃ, ᐃ * 301.0999984741211, ᐃ * 163, 301.0999984741211 * ᐃ, ᐃ * 183, 301.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(150 * ᐃ, ᐃ * 300.5999984741211, ᐃ * 135, ᐃ * 290.5999984741211, 134 * ᐃ, ᐃ * 267.5999984741211);
		Ⲇ.bezierCurveTo(133 * ᐃ, 245.5999984741211 * ᐃ, 146 * ᐃ, ᐃ * 235.5999984741211, 164 * ᐃ, 235.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206, 236.0999984741211 * ᐃ, 206 * ᐃ, 236.0999984741211 * ᐃ, ᐃ * 248, 236.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(266 * ᐃ, ᐃ * 243.5999984741211, 268 * ᐃ, 259.5999984741211 * ᐃ, ᐃ * 267, 266.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(266 * ᐃ, 288.5999984741211 * ᐃ, 251 * ᐃ, ᐃ * 294.5999984741211, ᐃ * 244, ᐃ * 297.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 228.5, ᐃ * 299.5999984741211, ᐃ * 228.5, 299.5999984741211 * ᐃ, 213 * ᐃ, 301.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(236 * ᐃ, ᐃ * 301.0999984741211, ᐃ * 236, 301.0999984741211 * ᐃ, ᐃ * 259, ᐃ * 300.5999984741211);
		Ⲇ.bezierCurveTo(272 * ᐃ, ᐃ * 295.5999984741211, 277 * ᐃ, ᐃ * 288.5999984741211, ᐃ * 278, 271.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 277.5, 236.5999984741211 * ᐃ, 277.5 * ᐃ, ᐃ * 236.5999984741211, 277 * ᐃ, 201.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(276 * ᐃ, ᐃ * 186.5999984741211, ᐃ * 265, 178.5999984741211 * ᐃ, 254 * ᐃ, 177.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(247.5 * ᐃ, 177.5999984741211 * ᐃ, 247.5 * ᐃ, 177.5999984741211 * ᐃ, 241 * ᐃ, ᐃ * 177.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 255, 202.5999984741211 * ᐃ, ᐃ * 214, 217.5999984741211 * ᐃ, 201 * ᐃ, ᐃ * 215.5999984741211);
		Ⲇ.bezierCurveTo(170 * ᐃ, 215.5999984741211 * ᐃ, ᐃ * 152, ᐃ * 197.5999984741211, 161 * ᐃ, 178.5999984741211 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ΔⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, ᐃ * 175.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 153, ᐃ * 176.0999984741211, ᐃ * 153, ᐃ * 176.0999984741211, ᐃ * 144, ᐃ * 176.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 125, ᐃ * 178.5999984741211, ᐃ * 121, 196.5999984741211 * ᐃ, 121 * ᐃ, ᐃ * 207.5999984741211);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * 243.20000076293945, ᐃ * 121, ᐃ * 243.20000076293945, ᐃ * 121, 278.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 126, 298.8000030517578 * ᐃ, 137 * ᐃ, ᐃ * 300.8000030517578, 146 * ᐃ, ᐃ * 302.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, ᐃ * 302.8000030517578, 200.5 * ᐃ, ᐃ * 302.8000030517578, 255 * ᐃ, ᐃ * 302.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 271, 301.8000030517578 * ᐃ, ᐃ * 279, 288.8000030517578 * ᐃ, 279 * ᐃ, ᐃ * 273.8000030517578);
		Ⲇ.bezierCurveTo(279 * ᐃ, ᐃ * 236.8000030517578, ᐃ * 279, 236.8000030517578 * ᐃ, ᐃ * 279, ᐃ * 199.8000030517578);
		Ⲇ.bezierCurveTo(274 * ᐃ, 178.8000030517578 * ᐃ, 263 * ᐃ, 177.8000030517578 * ᐃ, 255 * ᐃ, 175.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 248, 175.8000030517578 * ᐃ, ᐃ * 248, ᐃ * 175.8000030517578, 241 * ᐃ, 175.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 240, ᐃ * 175.8000030517578, 240 * ᐃ, 175.8000030517578 * ᐃ, 239 * ᐃ, ᐃ * 175.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 254, ᐃ * 200.8000030517578, 222 * ᐃ, ᐃ * 211.8000030517578, 202 * ᐃ, 212.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 168, 213.8000030517578 * ᐃ, 151 * ᐃ, ᐃ * 190.8000030517578, ᐃ * 163, ᐃ * 176.8000030517578);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔΔᐃ], ᐃ * ᐃⵠΔⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(198 * ᐃ, ᐃ * 161.4000015258789);
		Ⲇ.bezierCurveTo(198 * ᐃ, ᐃ * 186.9000015258789, ᐃ * 198, 186.9000015258789 * ᐃ, 198 * ᐃ, ᐃ * 212.4000015258789);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 212.4000015258789, 201 * ᐃ, ᐃ * 212.4000015258789, 204 * ᐃ, ᐃ * 212.4000015258789);
		Ⲇ.bezierCurveTo(204 * ᐃ, ᐃ * 186.9000015258789, ᐃ * 204, 186.9000015258789 * ᐃ, ᐃ * 204, ᐃ * 161.4000015258789);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃΔᐃⲆⵠ], ᐃ * ⵠⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(161 * ᐃ, 194 * ᐃ);
		Ⲇ.bezierCurveTo(188 * ᐃ, ᐃ * 169, 231 * ᐃ, 179 * ᐃ, 241 * ᐃ, 194 * ᐃ);
		Ⲇ.bezierCurveTo(239.5 * ᐃ, 196 * ᐃ, ᐃ * 239.5, ᐃ * 196, ᐃ * 238, ᐃ * 198);
		Ⲇ.bezierCurveTo(221 * ᐃ, 179 * ᐃ, 182 * ᐃ, ᐃ * 182, ᐃ * 165, ᐃ * 198);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⲆ], ᐃᐃ[ⵠᐃᐃⲆ], ΔⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(ᐃ * 162, 150.80000019073486 * ᐃ, 241 * ᐃ, 150.80000019073486 * ᐃ, 245 * ᐃ, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(ᐃ * 242, ᐃ * 224.80000019073486, 162 * ᐃ, ᐃ * 228.80000019073486, 157 * ᐃ, 188.80000019073486 * ᐃ);
		Ⲇ.bezierCurveTo(159 * ᐃ, 188.80000019073486 * ᐃ, ᐃ * 159, 188.80000019073486 * ᐃ, 161 * ᐃ, 188.80000019073486 * ᐃ);
		Ⲇ.bezierCurveTo(168 * ᐃ, 216.80000019073486 * ᐃ, 231 * ᐃ, ᐃ * 218.80000019073486, ᐃ * 241, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(236 * ᐃ, 156.80000019073486 * ᐃ, ᐃ * 169, ᐃ * 152.80000019073486, 161 * ᐃ, 188.80000019073486 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ΔⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(156 * ᐃ, ᐃ * 188);
		Ⲇ.bezierCurveTo(160 * ᐃ, 164 * ᐃ, 183 * ᐃ, ᐃ * 159, ᐃ * 201, 158 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 232, 159 * ᐃ, 244 * ᐃ, 174 * ᐃ, ᐃ * 246, 188 * ᐃ);
		Ⲇ.bezierCurveTo(245 * ᐃ, 212 * ᐃ, 213 * ᐃ, 219 * ᐃ, ᐃ * 201, 218 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181, ᐃ * 221, ᐃ * 158, 207 * ᐃ, 156 * ᐃ, ᐃ * 190);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⲆΔⲆ], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, ᐃ * 189);
		Ⲇ.bezierCurveTo(ᐃ * 166, ᐃ * 170, 185 * ᐃ, 165 * ᐃ, ᐃ * 201, ᐃ * 164);
		Ⲇ.bezierCurveTo(227 * ᐃ, ᐃ * 165, 240 * ᐃ, 178 * ᐃ, ᐃ * 239, ᐃ * 188);
		Ⲇ.bezierCurveTo(239 * ᐃ, ᐃ * 204, 210 * ᐃ, 210 * ᐃ, 201 * ᐃ, 210 * ᐃ);
		Ⲇ.bezierCurveTo(182 * ᐃ, 211 * ᐃ, ᐃ * 166, 200 * ᐃ, ᐃ * 162, 190 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[ⵠΔΔᐃ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(131 * ᐃ, 262 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136, 241 * ᐃ, 144 * ᐃ, 236 * ᐃ, 158 * ᐃ, 233 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 233 * ᐃ, ᐃ * 229, ᐃ * 232, 243 * ᐃ, ᐃ * 233);
		Ⲇ.bezierCurveTo(ᐃ * 259, 235 * ᐃ, 267 * ᐃ, ᐃ * 248, 269 * ᐃ, ᐃ * 260);
		Ⲇ.bezierCurveTo(269 * ᐃ, ᐃ * 266.5, ᐃ * 269, ᐃ * 266.5, ᐃ * 269, ᐃ * 273);
		Ⲇ.bezierCurveTo(265 * ᐃ, ᐃ * 290, ᐃ * 251, ᐃ * 297, ᐃ * 242, 298 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 202, ᐃ * 298, ᐃ * 202, 298 * ᐃ, ᐃ * 162, ᐃ * 298);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 298, 136 * ᐃ, 289 * ᐃ, ᐃ * 132, ᐃ * 273);
		Ⲇ.bezierCurveTo(131.5 * ᐃ, 268 * ᐃ, ᐃ * 131.5, 268 * ᐃ, ᐃ * 131, 263 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135, 263 * ᐃ, ᐃ * 135, 263 * ᐃ, ᐃ * 139, 263 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139, ᐃ * 281, 151 * ᐃ, ᐃ * 287, ᐃ * 160, ᐃ * 290);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 290 * ᐃ, 200.5 * ᐃ, ᐃ * 290, 241 * ᐃ, ᐃ * 290);
		Ⲇ.bezierCurveTo(252 * ᐃ, ᐃ * 290, 257 * ᐃ, ᐃ * 281, 262 * ᐃ, 271 * ᐃ);
		Ⲇ.bezierCurveTo(261.5 * ᐃ, 267 * ᐃ, 261.5 * ᐃ, ᐃ * 267, ᐃ * 261, 263 * ᐃ);
		Ⲇ.bezierCurveTo(260 * ᐃ, 249 * ᐃ, ᐃ * 251, 242 * ᐃ, 241 * ᐃ, ᐃ * 241);
		Ⲇ.bezierCurveTo(240.5 * ᐃ, ᐃ * 240.5, ᐃ * 240.5, 240.5 * ᐃ, 240 * ᐃ, 240 * ᐃ);
		Ⲇ.bezierCurveTo(200 * ᐃ, ᐃ * 240, ᐃ * 200, ᐃ * 240, ᐃ * 160, 240 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, 244 * ᐃ, ᐃ * 142, 250 * ᐃ, 139 * ᐃ, ᐃ * 264);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ⵠᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130 * ᐃ, ᐃ * 264);
		Ⲇ.bezierCurveTo(132 * ᐃ, 244 * ᐃ, ᐃ * 144, 235 * ᐃ, ᐃ * 157, ᐃ * 232);
		Ⲇ.bezierCurveTo(245 * ᐃ, ᐃ * 232, ᐃ * 201, ᐃ * 232, 245 * ᐃ, ᐃ * 232);
		Ⲇ.bezierCurveTo(ᐃ * 264, ᐃ * 235, ᐃ * 269, 251 * ᐃ, ᐃ * 270, ᐃ * 264);
		Ⲇ.bezierCurveTo(272 * ᐃ, ᐃ * 291, ᐃ * 248, 299 * ᐃ, 242 * ᐃ, 299 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200, ᐃ * 299, 200 * ᐃ, 299 * ᐃ, 158 * ᐃ, 299 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139, ᐃ * 298, 130 * ᐃ, ᐃ * 276, 130 * ᐃ, ᐃ * 265);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 140, ᐃ * 265.33333587646484);
		Ⲇ.bezierCurveTo(ᐃ * 141, 250.33333587646484 * ᐃ, 148 * ᐃ, 244.33333587646484 * ᐃ, ᐃ * 160, 241.33333587646484 * ᐃ);
		Ⲇ.bezierCurveTo(200 * ᐃ, 241.33333587646484 * ᐃ, ᐃ * 200, ᐃ * 241.33333587646484, ᐃ * 240, ᐃ * 241.33333587646484);
		Ⲇ.bezierCurveTo(ᐃ * 256, 243.33333587646484 * ᐃ, 260 * ᐃ, ᐃ * 255.33333587646484, 260 * ᐃ, ᐃ * 265.33333587646484);
		Ⲇ.bezierCurveTo(ᐃ * 261, ᐃ * 281.33333587646484, 247 * ᐃ, 289.33333587646484 * ᐃ, 240 * ᐃ, 289.33333587646484 * ᐃ);
		Ⲇ.bezierCurveTo(161 * ᐃ, 289.33333587646484 * ᐃ, ᐃ * 200.5, 289.33333587646484 * ᐃ, ᐃ * 161, 289.33333587646484 * ᐃ);
		Ⲇ.bezierCurveTo(149 * ᐃ, 288.33333587646484 * ᐃ, ᐃ * 142, 278.33333587646484 * ᐃ, ᐃ * 140, ᐃ * 266.33333587646484);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃ * ⲆΔᐃⵠⲆⵠΔ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.scale(1, 1);
		Ⲇ.translate(ᐃ * 105, ᐃ * 155);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 59.27557373046875, ᐃ * 20.406280517578125);
		Ⲇ.bezierCurveTo(ᐃ * 74.27557373046875, ᐃ * 5.406280517578125, 90.27557373046875 * ᐃ, ᐃ * 6.406280517578125, ᐃ * 99.27557373046875, ᐃ * 5.406280517578125);
		Ⲇ.bezierCurveTo(ᐃ * 120.27557373046875, 5.406280517578125 * ᐃ, ᐃ * 126.27557373046875, 10.406280517578125 * ᐃ, 136.27557373046875 * ᐃ, 20.406280517578125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 157.77557373046875, 37.906280517578125 * ᐃ, 157.77557373046875 * ᐃ, 37.906280517578125 * ᐃ, 179.27557373046875 * ᐃ, 55.406280517578125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190.27557373046875, ᐃ * 63.406280517578125, ᐃ * 192.27557373046875, 77.40628051757812 * ᐃ, ᐃ * 189.27557373046875, ᐃ * 91.40628051757812);
		Ⲇ.bezierCurveTo(ᐃ * 183.27557373046875, 108.40628051757812 * ᐃ, ᐃ * 176.27557373046875, 110.40628051757812 * ᐃ, 169.27557373046875 * ᐃ, 118.40628051757812 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152.27557373046875, ᐃ * 133.40628051757812, ᐃ * 152.27557373046875, ᐃ * 133.40628051757812, ᐃ * 135.27557373046875, 148.40628051757812 * ᐃ);
		Ⲇ.bezierCurveTo(87.27557373046875 * ᐃ, ᐃ * 143.40628051757812, 87.27557373046875 * ᐃ, ᐃ * 143.40628051757812, 39.27557373046875 * ᐃ, 138.40628051757812 * ᐃ);
		Ⲇ.bezierCurveTo(26.77557373046875 * ᐃ, ᐃ * 123.40628051757812, 26.77557373046875 * ᐃ, ᐃ * 123.40628051757812, 14.27557373046875 * ᐃ, 108.40628051757812 * ᐃ);
		Ⲇ.bezierCurveTo(2.27557373046875 * ᐃ, 95.40628051757812 * ᐃ, 2.27557373046875 * ᐃ, ᐃ * 92.40628051757812, 3.27557373046875 * ᐃ, 83.40628051757812 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 4.27557373046875, 63.406280517578125 * ᐃ, ᐃ * 12.27557373046875, 60.406280517578125 * ᐃ, ᐃ * 24.27557373046875, 40.406280517578125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃⵠ], ᐃᐃ[5], ᐃ * 4);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-110 * ᐃ, ᐃ * -155);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(104 * ᐃ, ᐃ * 237.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 237.8000030517578, 110 * ᐃ, ᐃ * 237.8000030517578, ᐃ * 116, 237.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116, 241.8000030517578 * ᐃ, 116 * ᐃ, 241.8000030517578 * ᐃ, ᐃ * 116, ᐃ * 245.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 115, ᐃ * 245.3000030517578, ᐃ * 115, ᐃ * 245.3000030517578, 114 * ᐃ, ᐃ * 244.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 109.5, 244.8000030517578 * ᐃ, 109.5 * ᐃ, ᐃ * 244.8000030517578, 105 * ᐃ, 244.8000030517578 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ], ᐃᐃ[ⵠᐃΔᐃ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115 * ᐃ, 211.20000457763672 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 216.20000457763672, 101 * ᐃ, 234.20000457763672 * ᐃ, ᐃ * 102, ᐃ * 241.20000457763672);
		Ⲇ.bezierCurveTo(102 * ᐃ, ᐃ * 260.2000045776367, ᐃ * 115, ᐃ * 269.2000045776367, ᐃ * 115, 269.2000045776367 * ᐃ);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 265.2000045776367, 115.5 * ᐃ, ᐃ * 265.2000045776367, ᐃ * 116, 261.2000045776367 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 264 * ᐃ, ᐃ * 108, ᐃ * 254, ᐃ * 106, 242 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 105, 232 * ᐃ, ᐃ * 110, 222 * ᐃ, ᐃ * 115, 218 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 216.75, ᐃ * 115.5, 217.375 * ᐃ, ᐃ * 116, ᐃ * 216.75);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[ⲆΔᐃⲆ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 120, 207 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, 206 * ᐃ, ᐃ * 114, ᐃ * 209, 114 * ᐃ, ᐃ * 211);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 268, ᐃ * 114, ᐃ * 241, 114 * ᐃ, ᐃ * 271);
		Ⲇ.bezierCurveTo(ᐃ * 115, 276 * ᐃ, ᐃ * 118, 276 * ᐃ, 120 * ᐃ, 276 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, 273 * ᐃ, ᐃ * 120.5, 274.5 * ᐃ, ᐃ * 121, ᐃ * 273);
		Ⲇ.bezierCurveTo(ᐃ * 121, ᐃ * 241, 121 * ᐃ, 241 * ᐃ, ᐃ * 121, 209 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[ΔᐃⵠΔ], ᐃ * ΔⲆⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 284, 238 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 289.5, 238 * ᐃ, ᐃ * 289.5, 238 * ᐃ, 295 * ᐃ, ᐃ * 238);
		Ⲇ.bezierCurveTo(ᐃ * 295, 241.5 * ᐃ, ᐃ * 295, 241.5 * ᐃ, ᐃ * 295, 245 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 289.5, 245 * ᐃ, 289.5 * ᐃ, ᐃ * 245, ᐃ * 284, ᐃ * 245);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃᐃΔᐃ], ᐃ * ᐃⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 283, 211 * ᐃ);
		Ⲇ.bezierCurveTo(293 * ᐃ, 216 * ᐃ, ᐃ * 297, ᐃ * 231, 297 * ᐃ, 241 * ᐃ);
		Ⲇ.bezierCurveTo(298 * ᐃ, ᐃ * 254, 290 * ᐃ, ᐃ * 265, ᐃ * 284, ᐃ * 269);
		Ⲇ.bezierCurveTo(ᐃ * 283, ᐃ * 266, 283.5 * ᐃ, ᐃ * 266, 283 * ᐃ, ᐃ * 263);
		Ⲇ.bezierCurveTo(290 * ᐃ, ᐃ * 260, ᐃ * 292, 251 * ᐃ, 293 * ᐃ, 242 * ᐃ);
		Ⲇ.bezierCurveTo(292 * ᐃ, ᐃ * 223, 289 * ᐃ, ᐃ * 224, ᐃ * 284, 218 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ], ᐃᐃ[ᐃΔⲆⵠ], ⲆᐃⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 280, 206 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 284, 206 * ᐃ, 285 * ᐃ, 208 * ᐃ, ᐃ * 285, ᐃ * 211);
		Ⲇ.bezierCurveTo(ᐃ * 285, ᐃ * 241.5, ᐃ * 285, ᐃ * 241.5, 285 * ᐃ, ᐃ * 272);
		Ⲇ.bezierCurveTo(ᐃ * 284, ᐃ * 275, 284 * ᐃ, 275 * ᐃ, 280 * ᐃ, ᐃ * 275);
		Ⲇ.bezierCurveTo(ᐃ * 279, ᐃ * 273.5, ᐃ * 279, ᐃ * 273.5, 278 * ᐃ, 272 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 278, ᐃ * 240.5, ᐃ * 278, 240.5 * ᐃ, 278 * ᐃ, ᐃ * 209);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(138 * ᐃ, 298.40000915527344 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 311.40000915527344, 151 * ᐃ, ᐃ * 314.40000915527344, ᐃ * 162, ᐃ * 316.40000915527344);
		Ⲇ.bezierCurveTo(224 * ᐃ, 316.40000915527344 * ᐃ, ᐃ * 200, ᐃ * 315.90000915527344, 238 * ᐃ, 315.40000915527344 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 254, 316.40000915527344 * ᐃ, ᐃ * 261, 306.40000915527344 * ᐃ, 264 * ᐃ, ᐃ * 298.40000915527344);
		Ⲇ.bezierCurveTo(255 * ᐃ, ᐃ * 304.40000915527344, 250 * ᐃ, ᐃ * 306.40000915527344, ᐃ * 244, ᐃ * 306.40000915527344);
		Ⲇ.bezierCurveTo(201 * ᐃ, ᐃ * 306.90000915527344, ᐃ * 201, 306.90000915527344 * ᐃ, ᐃ * 158, 307.40000915527344 * ᐃ);
		Ⲇ.bezierCurveTo(150 * ᐃ, 306.40000915527344 * ᐃ, ᐃ * 148, ᐃ * 306.40000915527344, ᐃ * 139, ᐃ * 300.40000915527344);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ], ᐃᐃ[ⵠⵠⲆ], ΔⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(161 * ᐃ, 177.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 175.5999984741211, ᐃ * 123, ᐃ * 190.5999984741211, ᐃ * 122, 205.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * 277.5999984741211, ᐃ * 122, ᐃ * 242.5999984741211, ᐃ * 122, 279.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, 297.5999984741211 * ᐃ, 137 * ᐃ, ᐃ * 299.5999984741211, ᐃ * 143, 300.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 163, ᐃ * 301.0999984741211, ᐃ * 163, ᐃ * 301.0999984741211, ᐃ * 183, 301.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 150, 300.5999984741211 * ᐃ, ᐃ * 135, 290.5999984741211 * ᐃ, 134 * ᐃ, ᐃ * 267.5999984741211);
		Ⲇ.bezierCurveTo(133 * ᐃ, ᐃ * 245.5999984741211, ᐃ * 146, ᐃ * 235.5999984741211, 164 * ᐃ, ᐃ * 235.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 236.0999984741211, 206 * ᐃ, 236.0999984741211 * ᐃ, 248 * ᐃ, ᐃ * 236.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 266, 243.5999984741211 * ᐃ, ᐃ * 268, ᐃ * 259.5999984741211, 267 * ᐃ, 266.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 266, 288.5999984741211 * ᐃ, 251 * ᐃ, 294.5999984741211 * ᐃ, ᐃ * 244, ᐃ * 297.5999984741211);
		Ⲇ.bezierCurveTo(228.5 * ᐃ, 299.5999984741211 * ᐃ, 228.5 * ᐃ, 299.5999984741211 * ᐃ, 213 * ᐃ, ᐃ * 301.5999984741211);
		Ⲇ.bezierCurveTo(236 * ᐃ, 301.0999984741211 * ᐃ, 236 * ᐃ, 301.0999984741211 * ᐃ, 259 * ᐃ, 300.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 272, ᐃ * 295.5999984741211, 277 * ᐃ, ᐃ * 288.5999984741211, 278 * ᐃ, ᐃ * 271.5999984741211);
		Ⲇ.bezierCurveTo(277.5 * ᐃ, ᐃ * 236.5999984741211, ᐃ * 277.5, 236.5999984741211 * ᐃ, 277 * ᐃ, ᐃ * 201.5999984741211);
		Ⲇ.bezierCurveTo(ᐃ * 276, 186.5999984741211 * ᐃ, 265 * ᐃ, 178.5999984741211 * ᐃ, ᐃ * 254, 177.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(247.5 * ᐃ, 177.5999984741211 * ᐃ, ᐃ * 247.5, 177.5999984741211 * ᐃ, 241 * ᐃ, 177.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃΔᐃⲆΔ, 202.5999984741211 * ᐃ, ᐃ * 214, 217.5999984741211 * ᐃ, ᐃ * 201, ᐃ * 215.5999984741211);
		Ⲇ.bezierCurveTo(170 * ᐃ, 215.5999984741211 * ᐃ, 152 * ᐃ, 197.5999984741211 * ᐃ, ᐃ * 161, ᐃ * 178.5999984741211);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ], ᐃᐃ[2], ⲆⵠⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, ᐃ * 175.5999984741211);
		Ⲇ.bezierCurveTo(153 * ᐃ, ᐃ * 176.0999984741211, ᐃ * 153, 176.0999984741211 * ᐃ, 144 * ᐃ, 176.5999984741211 * ᐃ);
		Ⲇ.bezierCurveTo(125 * ᐃ, 178.5999984741211 * ᐃ, ᐃ * 121, ᐃ * 196.5999984741211, ᐃ * 121, ᐃ * 207.5999984741211);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * 243.20000076293945, ᐃ * 121, 243.20000076293945 * ᐃ, ᐃ * 121, ᐃ * 278.8000030517578);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 298.8000030517578, ᐃ * 137, 300.8000030517578 * ᐃ, 146 * ᐃ, ᐃ * 302.8000030517578);
		Ⲇ.bezierCurveTo(200.5 * ᐃ, 302.8000030517578 * ᐃ, 200.5 * ᐃ, 302.8000030517578 * ᐃ, ΔⵠⵠΔΔⲆΔ * ᐃ, 302.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(271 * ᐃ, ᐃ * 301.8000030517578, ᐃ * 279, ᐃ * 288.8000030517578, 279 * ᐃ, ᐃ * 273.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 279, 236.8000030517578 * ᐃ, ᐃ * 279, 236.8000030517578 * ᐃ, 279 * ᐃ, ᐃ * 199.8000030517578);
		Ⲇ.bezierCurveTo(274 * ᐃ, 178.8000030517578 * ᐃ, 263 * ᐃ, 177.8000030517578 * ᐃ, ᐃ * ⲆⵠΔΔΔ, 175.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(248 * ᐃ, ᐃ * 175.8000030517578, ᐃ * 248, ᐃ * 175.8000030517578, 241 * ᐃ, ᐃ * 175.8000030517578);
		Ⲇ.bezierCurveTo(240 * ᐃ, ᐃ * 175.8000030517578, ᐃ * 240, 175.8000030517578 * ᐃ, 239 * ᐃ, ᐃ * 175.8000030517578);
		Ⲇ.bezierCurveTo(ᐃ * 254, 200.8000030517578 * ᐃ, 222 * ᐃ, ᐃ * 211.8000030517578, 202 * ᐃ, 212.8000030517578 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 168, 213.8000030517578 * ᐃ, 151 * ᐃ, ᐃ * 190.8000030517578, ᐃ * 163, 176.8000030517578 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠⵠⲆᐃⲆ, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃ * ΔⲆⵠⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 198, ᐃ * 161.4000015258789);
		Ⲇ.bezierCurveTo(ᐃ * 198, 186.9000015258789 * ᐃ, ᐃ * 198, ᐃ * 186.9000015258789, 198 * ᐃ, ᐃ * 212.4000015258789);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 212.4000015258789, ᐃ * 201, ᐃ * 212.4000015258789, 204 * ᐃ, 212.4000015258789 * ᐃ);
		Ⲇ.bezierCurveTo(204 * ᐃ, ᐃ * 186.9000015258789, ᐃ * 204, 186.9000015258789 * ᐃ, ᐃ * 204, 161.4000015258789 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ], ᐃᐃ[ᐃⲆⵠΔ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 161, 194 * ᐃ);
		Ⲇ.bezierCurveTo(188 * ᐃ, 169 * ᐃ, ᐃ * 231, 179 * ᐃ, 241 * ᐃ, ᐃ * 194);
		Ⲇ.bezierCurveTo(239.5 * ᐃ, 196 * ᐃ, 239.5 * ᐃ, ᐃ * 196, ᐃ * 238, ᐃ * 198);
		Ⲇ.bezierCurveTo(221 * ᐃ, ᐃ * 179, ᐃ * 182, 182 * ᐃ, 165 * ᐃ, ᐃ * 198);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ], ᐃᐃ[1], ⵠᐃᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157, 188.80000019073486 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162, 150.80000019073486 * ᐃ, 241 * ᐃ, 150.80000019073486 * ᐃ, ᐃ * 245, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(ᐃ * 242, ᐃ * 224.80000019073486, ᐃ * 162, ᐃ * 228.80000019073486, ᐃ * 157, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 188.80000019073486, 159 * ᐃ, ᐃ * 188.80000019073486, 161 * ᐃ, ᐃ * 188.80000019073486);
		Ⲇ.bezierCurveTo(ᐃ * 168, ᐃ * 216.80000019073486, 231 * ᐃ, 218.80000019073486 * ᐃ, 241 * ᐃ, 188.80000019073486 * ᐃ);
		Ⲇ.bezierCurveTo(236 * ᐃ, ᐃ * 156.80000019073486, 169 * ᐃ, ᐃ * 152.80000019073486, ᐃ * 161, 188.80000019073486 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ], ᐃᐃ[1], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(156 * ᐃ, ᐃ * 188);
		Ⲇ.bezierCurveTo(ᐃ * 160, 164 * ᐃ, ᐃ * 183, 159 * ᐃ, 201 * ᐃ, ᐃ * 158);
		Ⲇ.bezierCurveTo(232 * ᐃ, ᐃ * 159, ᐃ * 244, 174 * ᐃ, 246 * ᐃ, 188 * ᐃ);
		Ⲇ.bezierCurveTo(245 * ᐃ, ᐃ * 212, ᐃ * 213, ᐃ * 219, ᐃ * 201, ᐃ * 218);
		Ⲇ.bezierCurveTo(ᐃ * 181, 221 * ᐃ, 158 * ᐃ, 207 * ᐃ, 156 * ᐃ, ᐃ * 190);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[1], ᐃ * ⵠⵠⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, ᐃ * 189);
		Ⲇ.bezierCurveTo(166 * ᐃ, ᐃ * 170, 185 * ᐃ, ᐃ * 165, ᐃ * 201, 164 * ᐃ);
		Ⲇ.bezierCurveTo(227 * ᐃ, 165 * ᐃ, 240 * ᐃ, ᐃ * 178, 239 * ᐃ, ᐃ * 188);
		Ⲇ.bezierCurveTo(239 * ᐃ, ᐃ * 204, ᐃ * 210, 210 * ᐃ, ᐃ * 201, ᐃ * 210);
		Ⲇ.bezierCurveTo(182 * ᐃ, 211 * ᐃ, ᐃ * 166, ᐃ * 200, ᐃ * 162, ᐃ * 190);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[1], ⵠⵠⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 131, ᐃ * 262);
		Ⲇ.bezierCurveTo(ᐃ * 136, ᐃ * 241, 144 * ᐃ, ᐃ * 236, ᐃ * 158, 233 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, ᐃ * 233, 229 * ᐃ, 232 * ᐃ, ᐃ * 243, 233 * ᐃ);
		Ⲇ.bezierCurveTo(259 * ᐃ, 235 * ᐃ, ᐃ * 267, ᐃ * 248, ᐃ * 269, ᐃ * 260);
		Ⲇ.bezierCurveTo(269 * ᐃ, ᐃ * 266.5, ᐃ * 269, ᐃ * 266.5, 269 * ᐃ, 273 * ᐃ);
		Ⲇ.bezierCurveTo(265 * ᐃ, ᐃ * 290, 251 * ᐃ, ᐃ * 297, ᐃ * 242, ᐃ * 298);
		Ⲇ.bezierCurveTo(202 * ᐃ, ᐃ * 298, 202 * ᐃ, ᐃ * 298, ᐃ * 162, 298 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 298, 136 * ᐃ, ᐃ * 289, ᐃ * 132, 273 * ᐃ);
		Ⲇ.bezierCurveTo(131.5 * ᐃ, ᐃ * 268, ᐃ * 131.5, 268 * ᐃ, ᐃ * 131, ᐃ * 263);
		Ⲇ.bezierCurveTo(ᐃ * 135, 263 * ᐃ, 135 * ᐃ, 263 * ᐃ, ᐃ * 139, ᐃ * 263);
		Ⲇ.bezierCurveTo(ᐃ * 139, 281 * ᐃ, ᐃ * 151, ᐃ * 287, 160 * ᐃ, ᐃ * 290);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, ᐃ * 290, ᐃ * 200.5, 290 * ᐃ, 241 * ᐃ, 290 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 252, ᐃ * 290, 257 * ᐃ, ᐃ * 281, 262 * ᐃ, 271 * ᐃ);
		Ⲇ.bezierCurveTo(261.5 * ᐃ, ᐃ * 267, ᐃ * 261.5, ᐃ * 267, ᐃ * 261, 263 * ᐃ);
		Ⲇ.bezierCurveTo(260 * ᐃ, ᐃ * 249, 251 * ᐃ, 242 * ᐃ, 241 * ᐃ, ᐃ * 241);
		Ⲇ.bezierCurveTo(240.5 * ᐃ, 240.5 * ᐃ, 240.5 * ᐃ, ᐃ * 240.5, ᐃ * 240, ᐃ * 240);
		Ⲇ.bezierCurveTo(200 * ᐃ, ᐃ * 240, 200 * ᐃ, 240 * ᐃ, 160 * ᐃ, 240 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 244, ᐃ * 142, 250 * ᐃ, 139 * ᐃ, 264 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 130, 264 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132, ᐃ * 244, 144 * ᐃ, ᐃ * 235, 157 * ᐃ, ᐃ * 232);
		Ⲇ.bezierCurveTo(ᐃ * 245, 232 * ᐃ, ᐃ * 201, 232 * ᐃ, ᐃ * 245, 232 * ᐃ);
		Ⲇ.bezierCurveTo(264 * ᐃ, ᐃ * 235, ᐃ * 269, 251 * ᐃ, ᐃ * 270, ᐃ * 264);
		Ⲇ.bezierCurveTo(ᐃ * 272, ᐃ * 291, 248 * ᐃ, ᐃ * 299, 242 * ᐃ, ᐃ * 299);
		Ⲇ.bezierCurveTo(ᐃ * 200, ᐃ * 299, 200 * ᐃ, 299 * ᐃ, ᐃ * 158, 299 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139, ᐃ * 298, ᐃ * 130, ᐃ * 276, 130 * ᐃ, 265 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃⲆⵠⲆ, ᐃᐃ[ᐃⵠⵠ], 2 * ᐃ);
		return ΔΔ
	}

	function ᐃᐃᐃⲆᐃᐃⵠⵠⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 243;
		ΔΔ.height = ᐃ * 172;
		ΔⵠⲆ(Ⲇ, 119.5 * ᐃ, ᐃ * 140.125, 19 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆⲆΔᐃ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 36.5, ᐃ * 20.125);
		Ⲇ.bezierCurveTo(119.5 * ᐃ, ᐃ * 20.625, ᐃ * 119.5, 20.625 * ᐃ, ᐃ * 202.5, 21.125 * ᐃ);
		Ⲇ.bezierCurveTo(214.5 * ᐃ, ᐃ * 22.125, ᐃ * 216.5, ᐃ * 26.125, ᐃ * 217.5, ᐃ * 35.125);
		Ⲇ.bezierCurveTo(ᐃ * 221, ᐃ * 76.125, ᐃ * 221, ᐃ * 76.125, 224.5 * ᐃ, ᐃ * 117.125);
		Ⲇ.bezierCurveTo(ᐃ * 225.5, 127.125 * ᐃ, ᐃ * 221.5, ᐃ * 131.125, 210.5 * ᐃ, 132.125 * ᐃ);
		Ⲇ.bezierCurveTo(117.5 * ᐃ, 132.125 * ᐃ, 117.5 * ᐃ, ᐃ * 132.125, 24.5 * ᐃ, 132.125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14.5, ᐃ * 131.125, 13.5 * ᐃ, 126.125 * ᐃ, 16.5 * ᐃ, ᐃ * 111.125);
		Ⲇ.bezierCurveTo(ᐃ * 19.5, 73.125 * ᐃ, ᐃ * 19.5, 73.125 * ᐃ, ᐃ * 22.5, 35.125 * ᐃ);
		Ⲇ.bezierCurveTo(23.5 * ᐃ, 23.125 * ᐃ, 29.5 * ᐃ, 21.125 * ᐃ, 36.5 * ᐃ, ᐃ * 20.125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[1], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(15.5 * ᐃ, 138.625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120, 138.625 * ᐃ, ᐃ * 120, ᐃ * 138.625, ᐃ * 224.5, 138.625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃⵠⲆ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(13.5 * ᐃ, ᐃ * 131.625);
		Ⲇ.bezierCurveTo(ᐃ * 119.5, ᐃ * 131.625, ᐃ * 119.5, ᐃ * 131.625, 225.5 * ᐃ, 131.625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[3], ᐃ * ⲆᐃΔⵠⵠ);
		ΔⵠⲆ(Ⲇ, ᐃ * 119.5, 140.125 * ᐃ, ᐃ * 14.866068747318506);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * ⵠᐃᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 106.5, ᐃ * 146.625);
		Ⲇ.bezierCurveTo(ᐃ * 116.5, 137.625 * ᐃ, ᐃ * 118.5, ᐃ * 136.625, 123.5 * ᐃ, ᐃ * 138.625);
		Ⲇ.bezierCurveTo(131.5 * ᐃ, 145.625 * ᐃ, 133.5 * ᐃ, 148.625 * ᐃ, 127.5 * ᐃ, 152.625 * ᐃ);
		Ⲇ.bezierCurveTo(115.5 * ᐃ, ᐃ * 158.625, ᐃ * 111.5, 153.625 * ᐃ, ᐃ * 106.5, 147.625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.5 * ᐃ, 146.625 * ᐃ);
		Ⲇ.bezierCurveTo(116.5 * ᐃ, 159.625 * ᐃ, 124.5 * ᐃ, ᐃ * 156.625, 132.5 * ᐃ, ᐃ * 146.625);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[8], ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 75.5, ᐃ * 80.125);
		ᐃΔⵠ(Ⲇ, ᐃ * -39, -40 * ᐃ, 78 * ᐃ, ᐃ * 78, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		Ⲇ.save();
		Ⲇ.translate(167 * ᐃ, 80.125 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -38.5, ᐃ * -39, ᐃ * 78, ᐃ * 78, ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		return ΔΔ
	}

	function ΔⲆⵠⲆⲆⲆΔΔᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 130;
		var ΔᐃⲆ = ᐃ * 142;
		var ᐃᐃΔ = ᐃᐃⲆ / ᐃⲆⲆΔ;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		ΔⵠⲆ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ᐃ * 40, ᐃΔⵠⵠ);
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ΔΔⵠᐃ], ᐃ * ⵠᐃⲆⲆⲆ);
		ΔⵠⲆ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ᐃ * 30, 0);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[0], 7 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ⲆᐃᐃΔᐃ * ᐃ, ΔⲆᐃⲆ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⵠⲆΔᐃᐃⵠⲆᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 309 * ᐃ;
		ΔΔ.height = ᐃ * 287;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔⲆᐃ;
		Ⲇ.translate(ᐃ * ⵠΔᐃΔᐃ, ᐃ * ᐃᐃⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 34.5, 38.53125 * ᐃ);
		Ⲇ.bezierCurveTo(91.5 * ᐃ, ᐃ * 30.53125, 138.5 * ᐃ, ᐃ * 68.53125, 169.5 * ᐃ, 93.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 208.5, ᐃ * 128.53125, ᐃ * 226.5, 157.53125 * ᐃ, ᐃ * 233.5, ᐃ * 209.53125);
		Ⲇ.bezierCurveTo(195.5 * ᐃ, 218.53125 * ᐃ, 138.5 * ᐃ, 191.53125 * ᐃ, ᐃ * 105.5, 157.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54.5, ᐃ * 112.53125, 41.5 * ᐃ, ᐃ * 80.53125, ᐃ * 33.5, ᐃ * 38.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(143.5 * ᐃ, ᐃ * 74.53125);
		Ⲇ.bezierCurveTo(164.5 * ᐃ, ᐃ * 73.53125, 159 * ᐃ, ᐃ * 74.53125, 174.5 * ᐃ, ᐃ * 74.53125);
		Ⲇ.bezierCurveTo(186 * ᐃ, 86.53125 * ᐃ, ᐃ * 186, ᐃ * 86.53125, ᐃ * 197.5, 98.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 186, 97.03125 * ᐃ, ᐃ * 186, ᐃ * 97.03125, 174.5 * ᐃ, 95.53125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔᐃ], ⲆⵠΔⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87.5 * ᐃ, ᐃ * 142.53125);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 160.03125, ᐃ * 92, 160.03125 * ᐃ, ᐃ * 96.5, 177.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, 181.53125 * ᐃ, 108 * ᐃ, ᐃ * 181.53125, 119.5 * ᐃ, 185.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116.5, ᐃ * 175.53125, 116.5 * ᐃ, 175.53125 * ᐃ, ᐃ * 113.5, ᐃ * 165.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ], ᐃᐃ[ΔⲆⵠ], ᐃ * ⲆⲆᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 236.5, 189.53125 * ᐃ);
		Ⲇ.bezierCurveTo(274.5 * ᐃ, ᐃ * 197.53125, 255.5 * ᐃ, ᐃ * 194.03125, ᐃ * 274.5, ᐃ * 198.53125);
		Ⲇ.bezierCurveTo(ᐃ * 272.5, ᐃ * 236.53125, ᐃ * 261.5, ᐃ * 237.53125, 242.5 * ᐃ, ᐃ * 248.53125);
		Ⲇ.bezierCurveTo(ᐃ * 230.5, 231.03125 * ᐃ, ᐃ * 230.5, 231.03125 * ᐃ, 218.5 * ᐃ, 213.53125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⲆⲆᐃ], ᐃ * 10);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.translate(-10 * ᐃ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(34.5 * ᐃ, ᐃ * 38.53125);
		Ⲇ.bezierCurveTo(91.5 * ᐃ, ᐃ * 30.53125, ᐃ * 138.5, ᐃ * 68.53125, 169.5 * ᐃ, 93.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 208.5, 128.53125 * ᐃ, 226.5 * ᐃ, ᐃ * 157.53125, 233.5 * ᐃ, 209.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 195.5, 218.53125 * ᐃ, ᐃ * 138.5, ᐃ * 191.53125, ᐃ * 105.5, 157.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54.5, ᐃ * 112.53125, ᐃ * 41.5, 80.53125 * ᐃ, 33.5 * ᐃ, ᐃ * 38.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ⲆΔΔⵠⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143.5, 74.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 164.5, 73.53125 * ᐃ, ᐃ * 159, 74.53125 * ᐃ, 174.5 * ᐃ, 74.53125 * ᐃ);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 86.53125, 186 * ᐃ, 86.53125 * ᐃ, ᐃ * 197.5, ᐃ * 98.53125);
		Ⲇ.bezierCurveTo(ᐃ * 186, ᐃ * 97.03125, 186 * ᐃ, 97.03125 * ᐃ, 174.5 * ᐃ, 95.53125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], ⲆΔΔⵠⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87.5 * ᐃ, 142.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, 160.03125 * ᐃ, ᐃ * 92, ᐃ * 160.03125, ᐃ * 96.5, 177.53125 * ᐃ);
		Ⲇ.bezierCurveTo(108 * ᐃ, 181.53125 * ᐃ, 108 * ᐃ, 181.53125 * ᐃ, ᐃ * 119.5, ᐃ * 185.53125);
		Ⲇ.bezierCurveTo(ᐃ * 116.5, ᐃ * 175.53125, ᐃ * 116.5, 175.53125 * ᐃ, ᐃ * 113.5, 165.53125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[2], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 236.5, ᐃ * 189.53125);
		Ⲇ.bezierCurveTo(274.5 * ᐃ, ᐃ * 197.53125, ᐃ * 255.5, ᐃ * 194.03125, ᐃ * 274.5, 198.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 272.5, ᐃ * 236.53125, 261.5 * ᐃ, 237.53125 * ᐃ, 242.5 * ᐃ, 248.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 230.5, ᐃ * 231.03125, 230.5 * ᐃ, 231.03125 * ᐃ, 218.5 * ᐃ, ᐃ * 213.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[ᐃⲆⵠᐃ], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(109.5 * ᐃ, ᐃ * 51.53125);
		Ⲇ.bezierCurveTo(107.5 * ᐃ, 92.53125 * ᐃ, ᐃ * 91.5, ᐃ * 95.53125, ᐃ * 59.5, ᐃ * 101.53125);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], ᐃ * ΔΔⲆⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(72.5 * ᐃ, 51.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 71, ᐃ * 64.53125, ᐃ * 69.5, 76.53125 * ᐃ, 69.5 * ᐃ, ᐃ * 77.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆⲆⵠΔ], ᐃ * 7);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84.5, 63.53125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70.5, 65.03125 * ᐃ, 70.5 * ᐃ, ᐃ * 65.03125, ᐃ * 56.5, ᐃ * 66.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * 7);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125.5 * ᐃ, 84.53125 * ᐃ);
		Ⲇ.bezierCurveTo(125.5 * ᐃ, ᐃ * 110.03125, 125.5 * ᐃ, 110.03125 * ᐃ, ᐃ * 125.5, ᐃ * 135.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[2], 7 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 149.5, ᐃ * 108.53125);
		Ⲇ.bezierCurveTo(150 * ᐃ, 137.03125 * ᐃ, 150 * ᐃ, 137.03125 * ᐃ, ᐃ * 150.5, ᐃ * 165.53125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[2], ᐃ * ⵠΔᐃⲆᐃ);
		return ΔΔ
	}

	function ⲆΔΔⲆΔⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 130;
		var ΔᐃⲆ = 142 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / ⵠΔⵠᐃ;
		var ᐃⲆᐃ = ΔᐃⲆ / ᐃⵠΔⲆ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ + 7 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆ;
		ΔⵠⲆ(Ⲇ, ⵠᐃⲆᐃ, 0, ᐃ * 60);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, ᐃ * -7);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 0, 0, 60 * ᐃ, Δⵠⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * Δⵠⵠⵠ);
		ΔⵠⲆ(Ⲇ, ᐃⵠΔ, ⵠᐃⲆᐃ, ᐃ * 40);
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ]);
		ΔⵠⲆ(Ⲇ, ⵠⲆⲆᐃ, 0, ᐃ * 25);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆΔⲆ], ᐃᐃ[5], ᐃ * 8);
		return ΔΔ
	}
	const ΔⵠⲆⵠⵠⵠᐃΔᐃ = 5925035;

	function ⲆⲆΔⵠⵠⲆⲆⵠΔ(ΔᐃⲆᐃᐃⵠⲆ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ΔᐃⲆᐃᐃⵠⲆ)
	}

	function ᐃΔΔⲆᐃᐃᐃⲆⲆ(ΔᐃⵠⲆᐃΔΔ) {
		return ΔᐃⵠⲆᐃΔΔ.map(ⲆⲆΔⵠⵠⲆⲆⵠΔ).join("")
	}
	const ⲆΔΔᐃⵠⲆᐃ = function() {
		const ⵠⲆⵠⵠⵠⵠᐃ = ᐃΔΔⲆᐃᐃᐃⲆⲆ([916, 11616, 11398, 11616, 11616, 11616, 5123, 916, 5123]);
		const ΔⲆᐃⵠⲆⲆⲆ = {
			"ΔᐃⵠⲆΔᐃⲆΔΔ": 10482396,
			"ᐃⵠⵠⵠΔΔᐃᐃΔ": 12694017,
			"ΔⵠⲆⵠⵠⵠᐃΔᐃ": 1292252,
			"ᐃΔⲆΔⲆⲆᐃⲆᐃ": 3267475
		};
		if (ΔⲆᐃⵠⲆⲆⲆ[ⵠⲆⵠⵠⵠⵠᐃ] !== ΔⲆᐃⵠⲆⲆⲆ.ΔⵠⲆⵠⵠⵠᐃΔᐃ) {
			const ΔⵠⲆⵠⵠⵠᐃΔᐃ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]];
			const ⲆⲆΔⵠⵠⲆⲆⵠΔ = ΔⵠⲆⵠⵠⵠᐃΔᐃ;
			const ΔᐃⲆᐃᐃⵠⲆ = function() {
				ΔⵠⲆⵠⵠⵠᐃΔᐃ(ΔᐃⲆᐃᐃⵠⲆ, 7532);
				ⲆⲆΔⵠⵠⲆⲆⵠΔ(ΔᐃⲆᐃᐃⵠⲆ, 8107)
			};
			ΔᐃⲆᐃᐃⵠⲆ()
		}
	};
	ⲆΔΔᐃⵠⲆᐃ();

	function ⵠᐃᐃⲆⵠⵠᐃⲆⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠᐃΔᐃ;
		Ⲇ.translate(ᐃⵠⲆᐃⵠ * ᐃ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(100.5 * ᐃ, ᐃ * 126.34375);
		Ⲇ.bezierCurveTo(ᐃ * 151.5, 104.34375 * ᐃ, ᐃ * 279.5, 188.34375 * ᐃ, ᐃ * 297.5, 292.34375 * ᐃ);
		Ⲇ.bezierCurveTo(222.5 * ᐃ, 307.34375 * ᐃ, 106.5 * ᐃ, 196.34375 * ᐃ, 100.5 * ᐃ, 127.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⲆⵠ], ⲆᐃᐃⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 106.5, ᐃ * 131.34375);
		Ⲇ.bezierCurveTo(ᐃ * 140.5, ᐃ * 142.34375, 225.5 * ᐃ, ᐃ * 184.34375, ᐃ * 290.5, 287.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 270.5, ᐃ * 188.34375, 152.5 * ᐃ, 118.34375 * ᐃ, ᐃ * 107.5, 131.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(157.5 * ᐃ, ᐃ * 137.34375);
		Ⲇ.bezierCurveTo(ᐃ * 161.5, ᐃ * 138.34375, 164.5 * ᐃ, ᐃ * 140.34375, ᐃ * 168.5, ᐃ * 142.34375);
		Ⲇ.bezierCurveTo(ᐃ * 165.5, ᐃ * 156.34375, ᐃ * 141.5, ᐃ * 176.34375, ᐃ * 126.5, ᐃ * 179.34375);
		Ⲇ.bezierCurveTo(ᐃ * 123.5, 173.34375 * ᐃ, ᐃ * 120.5, 169.34375 * ᐃ, ᐃ * 120.5, 169.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141.5, ᐃ * 161.34375, ᐃ * 156.5, ᐃ * 145.34375, 155.5 * ᐃ, 136.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(196.5 * ᐃ, 151.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, ᐃ * 158.34375, 224.5 * ᐃ, ᐃ * 171.34375, 229.5 * ᐃ, ᐃ * 176.34375);
		Ⲇ.bezierCurveTo(ᐃ * 246.5, 163.34375 * ᐃ, ᐃ * 259.5, ᐃ * 166.34375, ᐃ * 272.5, ᐃ * 168.34375);
		Ⲇ.bezierCurveTo(254.5 * ᐃ, 146.34375 * ᐃ, ᐃ * 214.5, ᐃ * 145.34375, 198.5 * ᐃ, 151.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[ⲆⲆⲆ], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(154.5 * ᐃ, 222.34375 * ᐃ);
		Ⲇ.bezierCurveTo(164.5 * ᐃ, ᐃ * 234.34375, 173.5 * ᐃ, ᐃ * 242.34375, ᐃ * 178.5, ᐃ * 245.34375);
		Ⲇ.bezierCurveTo(ᐃ * 174.5, 265.34375 * ᐃ, ᐃ * 180.5, ᐃ * 274.34375, ᐃ * 186.5, ᐃ * 283.34375);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 277.34375 * ᐃ, 151.5 * ᐃ, 245.34375 * ᐃ, 155.5 * ᐃ, 224.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ], ᐃᐃ[0], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(279.5 * ᐃ, 294.34375 * ᐃ);
		Ⲇ.bezierCurveTo(286.5 * ᐃ, ᐃ * 285.84375, 286.5 * ᐃ, 285.84375 * ᐃ, 293.5 * ᐃ, 277.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 315.5, ᐃ * 280.34375, 315.5 * ᐃ, 280.34375 * ᐃ, 337.5 * ᐃ, ᐃ * 283.34375);
		Ⲇ.bezierCurveTo(340.5 * ᐃ, 311.34375 * ᐃ, 317.5 * ᐃ, ᐃ * 326.34375, ᐃ * 307.5, 331.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ], ᐃᐃ[0], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.globalAlpha = ΔᐃⵠΔ;
		Ⲇ.translate(ᐃ * -ⵠΔᐃΔᐃ, ᐃ * -ᐃᐃⲆᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(100.5 * ᐃ, ᐃ * 126.34375);
		Ⲇ.bezierCurveTo(151.5 * ᐃ, 104.34375 * ᐃ, ᐃ * 279.5, ᐃ * 188.34375, ᐃ * 297.5, ᐃ * 292.34375);
		Ⲇ.bezierCurveTo(ᐃ * 222.5, ᐃ * 307.34375, 106.5 * ᐃ, 196.34375 * ᐃ, 100.5 * ᐃ, ᐃ * 127.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(106.5 * ᐃ, ᐃ * 131.34375);
		Ⲇ.bezierCurveTo(140.5 * ᐃ, ᐃ * 142.34375, ᐃ * 225.5, 184.34375 * ᐃ, ᐃ * 290.5, 287.34375 * ᐃ);
		Ⲇ.bezierCurveTo(270.5 * ᐃ, 188.34375 * ᐃ, ᐃ * 152.5, ᐃ * 118.34375, ᐃ * 107.5, ᐃ * 131.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157.5, ᐃ * 137.34375);
		Ⲇ.bezierCurveTo(161.5 * ᐃ, 138.34375 * ᐃ, ᐃ * 164.5, ᐃ * 140.34375, 168.5 * ᐃ, 142.34375 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 156.34375 * ᐃ, 141.5 * ᐃ, ᐃ * 176.34375, 126.5 * ᐃ, ᐃ * 179.34375);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, 173.34375 * ᐃ, ᐃ * 120.5, 169.34375 * ᐃ, ᐃ * 120.5, 169.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141.5, ᐃ * 161.34375, ᐃ * 156.5, 145.34375 * ᐃ, 155.5 * ᐃ, 136.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 125.5, ᐃ * 140.34375, 11.180339887498949 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆⲆΔ]);
		ΔⵠⲆ(Ⲇ, 122.5 * ᐃ, 135.34375 * ᐃ, 5.0990195135927845 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 196.5, 151.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, 158.34375 * ᐃ, 224.5 * ᐃ, 171.34375 * ᐃ, 229.5 * ᐃ, ᐃ * 176.34375);
		Ⲇ.bezierCurveTo(246.5 * ᐃ, ᐃ * 163.34375, ᐃ * 259.5, 166.34375 * ᐃ, ᐃ * 272.5, ᐃ * 168.34375);
		Ⲇ.bezierCurveTo(254.5 * ᐃ, ᐃ * 146.34375, ᐃ * 214.5, 145.34375 * ᐃ, 198.5 * ᐃ, ᐃ * 151.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⵠ], ᐃᐃ[ᐃⵠΔΔᐃ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 154.5, 222.34375 * ᐃ);
		Ⲇ.bezierCurveTo(164.5 * ᐃ, 234.34375 * ᐃ, ᐃ * 173.5, ᐃ * 242.34375, 178.5 * ᐃ, ᐃ * 245.34375);
		Ⲇ.bezierCurveTo(ᐃ * 174.5, 265.34375 * ᐃ, 180.5 * ᐃ, 274.34375 * ᐃ, 186.5 * ᐃ, ᐃ * 283.34375);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 277.34375 * ᐃ, 151.5 * ᐃ, ᐃ * 245.34375, 155.5 * ᐃ, 224.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃⵠΔ], ᐃᐃ[8], ΔΔᐃⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 279.5, 294.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 286.5, 285.84375 * ᐃ, ᐃ * 286.5, 285.84375 * ᐃ, ᐃ * 293.5, 277.34375 * ᐃ);
		Ⲇ.bezierCurveTo(315.5 * ᐃ, 280.34375 * ᐃ, 315.5 * ᐃ, ᐃ * 280.34375, 337.5 * ᐃ, 283.34375 * ᐃ);
		Ⲇ.bezierCurveTo(340.5 * ᐃ, ᐃ * 311.34375, 317.5 * ᐃ, ᐃ * 326.34375, ᐃ * 307.5, 331.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ΔⲆᐃᐃᐃ], ⲆⵠⲆⵠⵠⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(296.5 * ᐃ, ᐃ * 287.34375);
		Ⲇ.bezierCurveTo(311.5 * ᐃ, 291.34375 * ᐃ, ᐃ * 311.5, 291.34375 * ᐃ, ᐃ * 326.5, 295.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⵠⲆⵠ], ᐃ * ᐃⲆⵠⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(294.5 * ᐃ, ᐃ * 289.34375);
		Ⲇ.bezierCurveTo(ᐃ * 308.5, 297.34375 * ᐃ, ᐃ * 308.5, 297.34375 * ᐃ, ᐃ * 322.5, ᐃ * 305.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[9], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(294.5 * ᐃ, 291.34375 * ᐃ);
		Ⲇ.bezierCurveTo(304 * ᐃ, ᐃ * 303.34375, 304 * ᐃ, ᐃ * 303.34375, ᐃ * 313.5, 315.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ΔᐃⵠΔⵠ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(226.5 * ᐃ, ᐃ * 161.34375);
		Ⲇ.bezierCurveTo(ᐃ * 230.5, ᐃ * 160.34375, 236.5 * ᐃ, 158.34375 * ᐃ, 238.5 * ᐃ, 161.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 238.5, ᐃ * 157.34375, ᐃ * 228.5, ᐃ * 159.34375, 227.5 * ᐃ, 161.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[9], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 167.5, ᐃ * 248.34375);
		Ⲇ.bezierCurveTo(ᐃ * 165.5, 251.34375 * ᐃ, ᐃ * 168.5, ᐃ * 256.34375, 168.5 * ᐃ, 253.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 166.5, ᐃ * 252.34375, ᐃ * 168.5, ᐃ * 246.34375, 166.5 * ᐃ, ᐃ * 247.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[ᐃᐃΔⲆⵠⲆΔ], ᐃ * ⵠⵠⲆⵠ);
		return ΔΔ
	}

	function ⲆᐃᐃΔⲆᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 372 * ᐃ;
		ΔΔ.height = 375 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ᐃ * 15, 15 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(313.0000305175781 * ᐃ, ᐃ * 76.58523559570312);
		Ⲇ.bezierCurveTo(308.0000305175781 * ᐃ, 130.58523559570312 * ᐃ, ᐃ * 279.0000305175781, ᐃ * 158.58523559570312, ᐃ * 254.00003051757812, ᐃ * 175.58523559570312);
		Ⲇ.bezierCurveTo(287.0000305175781 * ᐃ, ᐃ * 182.58523559570312, ᐃ * 274.0000305175781, 181.08523559570312 * ᐃ, 294.0000305175781 * ᐃ, 186.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(293.5000305175781 * ᐃ, ᐃ * 196.08523559570312, 293.5000305175781 * ᐃ, ᐃ * 196.08523559570312, 293.0000305175781 * ᐃ, 205.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 304.0000305175781, ᐃ * 201.08523559570312, ᐃ * 304.0000305175781, 201.08523559570312 * ᐃ, 315.0000305175781 * ᐃ, ᐃ * 196.58523559570312);
		Ⲇ.bezierCurveTo(350.0000305175781 * ᐃ, ᐃ * 219.58523559570312, ᐃ * 343.0000305175781, 221.58523559570312 * ᐃ, 351.0000305175781 * ᐃ, 230.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 296.0000305175781, ᐃ * 260.5852355957031, 264.0000305175781 * ᐃ, 256.5852355957031 * ᐃ, ᐃ * 220.00003051757812, 236.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 233.00003051757812, 266.5852355957031 * ᐃ, ᐃ * 232.00003051757812, ᐃ * 279.5852355957031, 231.00003051757812 * ᐃ, ᐃ * 295.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 222.00003051757812, ᐃ * 297.5852355957031, 222.00003051757812 * ᐃ, 297.5852355957031 * ᐃ, ᐃ * 213.00003051757812, ᐃ * 299.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 219.50003051757812, 308.0852355957031 * ᐃ, ᐃ * 219.50003051757812, ᐃ * 308.0852355957031, ᐃ * 226.00003051757812, ᐃ * 316.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 223.00003051757812, 344.5852355957031 * ᐃ, ᐃ * 216.00003051757812, ᐃ * 350.5852355957031, 209.00003051757812 * ᐃ, 363.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154.00003051757812, 318.5852355957031 * ᐃ, 156.00003051757812 * ᐃ, ᐃ * 268.5852355957031, 160.00003051757812 * ᐃ, 238.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(135.00003051757812 * ᐃ, 268.5852355957031 * ᐃ, ᐃ * 125.00003051757812, ᐃ * 267.5852355957031, ᐃ * 112.00003051757812, 272.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 104.50003051757812, 266.5852355957031 * ᐃ, ᐃ * 104.50003051757812, ᐃ * 266.5852355957031, 97.00003051757812 * ᐃ, 260.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(93.00003051757812 * ᐃ, ᐃ * 271.0852355957031, 93.00003051757812 * ᐃ, ᐃ * 271.0852355957031, 89.00003051757812 * ᐃ, 281.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(66.00003051757812 * ᐃ, 288.5852355957031 * ᐃ, 59.000030517578125 * ᐃ, 288.5852355957031 * ᐃ, ᐃ * 39.000030517578125, 285.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 56.000030517578125, ᐃ * 216.58523559570312, 91.00003051757812 * ᐃ, ᐃ * 204.58523559570312, 129.00003051757812 * ᐃ, 189.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 90.00003051757812, ᐃ * 176.58523559570312, 89.00003051757812 * ᐃ, 173.58523559570312 * ᐃ, ᐃ * 79.00003051757812, ᐃ * 166.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 82.00003051757812, 155.08523559570312 * ᐃ, 82.00003051757812 * ᐃ, 155.08523559570312 * ᐃ, 85.00003051757812 * ᐃ, 143.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(75.50003051757812 * ᐃ, ᐃ * 147.58523559570312, ᐃ * 75.50003051757812, ᐃ * 147.58523559570312, 66.00003051757812 * ᐃ, ᐃ * 151.58523559570312);
		Ⲇ.bezierCurveTo(44.000030517578125 * ᐃ, ᐃ * 133.58523559570312, 41.000030517578125 * ᐃ, ᐃ * 124.58523559570312, ᐃ * 34.000030517578125, ᐃ * 102.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 100.00003051757812, ᐃ * 81.58523559570312, 134.00003051757812 * ᐃ, 118.58523559570312 * ᐃ, ᐃ * 150.00003051757812, ᐃ * 128.58523559570312);
		Ⲇ.bezierCurveTo(144.00003051757812 * ᐃ, ᐃ * 102.58523559570312, 147.00003051757812 * ᐃ, 90.58523559570312 * ᐃ, ᐃ * 150.00003051757812, ᐃ * 80.58523559570312);
		Ⲇ.bezierCurveTo(159.50003051757812 * ᐃ, 79.08523559570312 * ᐃ, ᐃ * 159.50003051757812, 79.08523559570312 * ᐃ, ᐃ * 169.00003051757812, ᐃ * 77.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 163.00003051757812, 72.58523559570312 * ᐃ, ᐃ * 163.00003051757812, 72.58523559570312 * ᐃ, 157.00003051757812 * ᐃ, ᐃ * 67.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 162.00003051757812, ᐃ * 42.585235595703125, 169.00003051757812 * ᐃ, ᐃ * 29.585235595703125, ᐃ * 182.00003051757812, ᐃ * 14.585235595703125);
		Ⲇ.bezierCurveTo(ᐃ * 219.00003051757812, ᐃ * 48.585235595703125, 222.00003051757812 * ᐃ, 92.58523559570312 * ᐃ, 218.00003051757812 * ᐃ, 112.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(239.00003051757812 * ᐃ, 95.58523559570312 * ᐃ, ᐃ * 242.00003051757812, 97.58523559570312 * ᐃ, 249.00003051757812 * ᐃ, ᐃ * 94.58523559570312);
		Ⲇ.bezierCurveTo(255.00003051757812 * ᐃ, ᐃ * 103.08523559570312, ᐃ * 255.00003051757812, ᐃ * 103.08523559570312, ᐃ * 261.0000305175781, 111.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 261.5000305175781, 99.58523559570312 * ᐃ, ᐃ * 261.5000305175781, ᐃ * 99.58523559570312, ᐃ * 262.0000305175781, ᐃ * 87.58523559570312);
		Ⲇ.bezierCurveTo(282.0000305175781 * ᐃ, ᐃ * 77.58523559570312, ᐃ * 301.0000305175781, 74.58523559570312 * ᐃ, 314.0000305175781 * ᐃ, ᐃ * 76.58523559570312);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -15, -15 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(313.0000305175781 * ᐃ, 76.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 308.0000305175781, 130.58523559570312 * ᐃ, ᐃ * 279.0000305175781, ᐃ * 158.58523559570312, ᐃ * 254.00003051757812, ᐃ * 175.58523559570312);
		Ⲇ.bezierCurveTo(287.0000305175781 * ᐃ, ᐃ * 182.58523559570312, 274.0000305175781 * ᐃ, 181.08523559570312 * ᐃ, 294.0000305175781 * ᐃ, ᐃ * 186.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 293.5000305175781, 196.08523559570312 * ᐃ, 293.5000305175781 * ᐃ, ᐃ * 196.08523559570312, 293.0000305175781 * ᐃ, ᐃ * 205.58523559570312);
		Ⲇ.bezierCurveTo(304.0000305175781 * ᐃ, 201.08523559570312 * ᐃ, ᐃ * 304.0000305175781, 201.08523559570312 * ᐃ, 315.0000305175781 * ᐃ, ᐃ * 196.58523559570312);
		Ⲇ.bezierCurveTo(350.0000305175781 * ᐃ, 219.58523559570312 * ᐃ, 343.0000305175781 * ᐃ, 221.58523559570312 * ᐃ, ᐃ * 351.0000305175781, 230.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 296.0000305175781, ᐃ * 260.5852355957031, 264.0000305175781 * ᐃ, 256.5852355957031 * ᐃ, ᐃ * 220.00003051757812, 236.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(233.00003051757812 * ᐃ, ᐃ * 266.5852355957031, 232.00003051757812 * ᐃ, ᐃ * 279.5852355957031, ᐃ * 231.00003051757812, ᐃ * 295.5852355957031);
		Ⲇ.bezierCurveTo(222.00003051757812 * ᐃ, ᐃ * 297.5852355957031, 222.00003051757812 * ᐃ, 297.5852355957031 * ᐃ, 213.00003051757812 * ᐃ, 299.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(219.50003051757812 * ᐃ, ᐃ * 308.0852355957031, ᐃ * 219.50003051757812, ᐃ * 308.0852355957031, 226.00003051757812 * ᐃ, ᐃ * 316.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 223.00003051757812, 344.5852355957031 * ᐃ, 216.00003051757812 * ᐃ, ᐃ * 350.5852355957031, 209.00003051757812 * ᐃ, 363.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154.00003051757812, 318.5852355957031 * ᐃ, 156.00003051757812 * ᐃ, 268.5852355957031 * ᐃ, ᐃ * 160.00003051757812, 238.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(135.00003051757812 * ᐃ, 268.5852355957031 * ᐃ, ᐃ * 125.00003051757812, 267.5852355957031 * ᐃ, 112.00003051757812 * ᐃ, ᐃ * 272.5852355957031);
		Ⲇ.bezierCurveTo(104.50003051757812 * ᐃ, 266.5852355957031 * ᐃ, ᐃ * 104.50003051757812, ᐃ * 266.5852355957031, 97.00003051757812 * ᐃ, ᐃ * 260.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 93.00003051757812, ᐃ * 271.0852355957031, 93.00003051757812 * ᐃ, ᐃ * 271.0852355957031, ᐃ * 89.00003051757812, 281.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(66.00003051757812 * ᐃ, ᐃ * 288.5852355957031, 59.000030517578125 * ᐃ, ᐃ * 288.5852355957031, 39.000030517578125 * ᐃ, ᐃ * 285.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 56.000030517578125, ᐃ * 216.58523559570312, ᐃ * 91.00003051757812, ᐃ * 204.58523559570312, ᐃ * 129.00003051757812, 189.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 90.00003051757812, 176.58523559570312 * ᐃ, ᐃ * 89.00003051757812, 173.58523559570312 * ᐃ, ᐃ * 79.00003051757812, 166.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(82.00003051757812 * ᐃ, 155.08523559570312 * ᐃ, 82.00003051757812 * ᐃ, 155.08523559570312 * ᐃ, 85.00003051757812 * ᐃ, 143.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 75.50003051757812, 147.58523559570312 * ᐃ, ᐃ * 75.50003051757812, 147.58523559570312 * ᐃ, ᐃ * 66.00003051757812, 151.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(44.000030517578125 * ᐃ, 133.58523559570312 * ᐃ, ᐃ * 41.000030517578125, 124.58523559570312 * ᐃ, ᐃ * 34.000030517578125, 102.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 100.00003051757812, ᐃ * 81.58523559570312, 134.00003051757812 * ᐃ, 118.58523559570312 * ᐃ, ᐃ * 150.00003051757812, ᐃ * 128.58523559570312);
		Ⲇ.bezierCurveTo(144.00003051757812 * ᐃ, ᐃ * 102.58523559570312, 147.00003051757812 * ᐃ, ᐃ * 90.58523559570312, 150.00003051757812 * ᐃ, ᐃ * 80.58523559570312);
		Ⲇ.bezierCurveTo(159.50003051757812 * ᐃ, ᐃ * 79.08523559570312, ᐃ * 159.50003051757812, ᐃ * 79.08523559570312, 169.00003051757812 * ᐃ, ᐃ * 77.58523559570312);
		Ⲇ.bezierCurveTo(163.00003051757812 * ᐃ, ᐃ * 72.58523559570312, 163.00003051757812 * ᐃ, 72.58523559570312 * ᐃ, ᐃ * 157.00003051757812, 67.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162.00003051757812, ᐃ * 42.585235595703125, ᐃ * 169.00003051757812, 29.585235595703125 * ᐃ, 182.00003051757812 * ᐃ, ᐃ * 14.585235595703125);
		Ⲇ.bezierCurveTo(219.00003051757812 * ᐃ, 48.585235595703125 * ᐃ, ᐃ * 222.00003051757812, 92.58523559570312 * ᐃ, 218.00003051757812 * ᐃ, 112.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(239.00003051757812 * ᐃ, ᐃ * 95.58523559570312, 242.00003051757812 * ᐃ, ᐃ * 97.58523559570312, ᐃ * 249.00003051757812, 94.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 255.00003051757812, 103.08523559570312 * ᐃ, ᐃ * 255.00003051757812, 103.08523559570312 * ᐃ, ᐃ * 261.0000305175781, 111.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 261.5000305175781, 99.58523559570312 * ᐃ, 261.5000305175781 * ᐃ, 99.58523559570312 * ᐃ, ᐃ * 262.0000305175781, 87.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 282.0000305175781, ᐃ * 77.58523559570312, 301.0000305175781 * ᐃ, ᐃ * 74.58523559570312, ᐃ * 314.0000305175781, ᐃ * 76.58523559570312);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 186.00003051757812, 192.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 185.00003051757812, ᐃ * 66.94886779785156, 184.50003051757812 * ᐃ, 104.94886779785156 * ᐃ, ᐃ * 183.00003051757812, 16.948867797851562 * ᐃ);
		Ⲇ.bezierCurveTo(216.00003051757812 * ᐃ, ᐃ * 47.94886779785156, 219.00003051757812 * ᐃ, 80.94886779785156 * ᐃ, 218.00003051757812 * ᐃ, 113.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(209.00003051757812 * ᐃ, ᐃ * 165.94886779785156, 200.00003051757812 * ᐃ, 176.94886779785156 * ᐃ, ᐃ * 189.00003051757812, ᐃ * 192.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔᐃⲆ], ⵠⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(190.00003051757812 * ᐃ, ᐃ * 191.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 207.00003051757812, ᐃ * 348.94886779785156, ᐃ * 205.00003051757812, 323.94886779785156 * ᐃ, 209.00003051757812 * ᐃ, ᐃ * 358.94886779785156);
		Ⲇ.bezierCurveTo(171.00003051757812 * ᐃ, 334.94886779785156 * ᐃ, ᐃ * 167.00003051757812, 302.94886779785156 * ᐃ, 161.00003051757812 * ᐃ, 268.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(160.00003051757812 * ᐃ, ᐃ * 218.94886779785156, 181.00003051757812 * ᐃ, ᐃ * 191.94886779785156, ᐃ * 189.00003051757812, ᐃ * 186.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[ⲆⵠⵠΔ], ᐃ * ᐃΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(194.00003051757812 * ᐃ, ᐃ * 195.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 116.00003051757812, 150.94886779785156 * ᐃ, 116.00003051757812 * ᐃ, 150.94886779785156 * ᐃ, 38.000030517578125 * ᐃ, 105.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67.00003051757812, ᐃ * 90.94886779785156, ᐃ * 96.00003051757812, 99.94886779785156 * ᐃ, 123.00003051757812 * ᐃ, 111.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(183.00003051757812 * ᐃ, 152.94886779785156 * ᐃ, ᐃ * 179.00003051757812, 180.94886779785156 * ᐃ, 193.00003051757812 * ᐃ, ᐃ * 194.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[ΔⲆΔⵠ], ΔⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 189.00003051757812, ᐃ * 190.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 250.00003051757812, ᐃ * 133.94886779785156, 311.0000305175781 * ᐃ, 78.94886779785156 * ᐃ, ᐃ * 311.0000305175781, ᐃ * 76.94886779785156);
		Ⲇ.bezierCurveTo(306.0000305175781 * ᐃ, 127.94886779785156 * ᐃ, ᐃ * 283.0000305175781, ᐃ * 148.94886779785156, 261.0000305175781 * ᐃ, ᐃ * 166.94886779785156);
		Ⲇ.bezierCurveTo(220.00003051757812 * ᐃ, ᐃ * 197.94886779785156, 191.00003051757812 * ᐃ, ᐃ * 194.94886779785156, ᐃ * 189.00003051757812, 195.94886779785156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔⵠⲆ], ΔᐃⵠⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 189.00003051757812, ᐃ * 194.94886779785156);
		Ⲇ.bezierCurveTo(268.5000305175781 * ᐃ, 211.94886779785156 * ᐃ, ᐃ * 268.5000305175781, ᐃ * 211.94886779785156, 348.0000305175781 * ᐃ, 228.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(316.0000305175781 * ᐃ, ᐃ * 247.94886779785156, 298.0000305175781 * ᐃ, 256.94886779785156 * ᐃ, ᐃ * 250.00003051757812, ᐃ * 246.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 197.00003051757812, 229.94886779785156 * ᐃ, ᐃ * 189.00003051757812, ᐃ * 202.94886779785156, 188.00003051757812 * ᐃ, ᐃ * 199.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 192.00003051757812, ᐃ * 191.94886779785156);
		Ⲇ.bezierCurveTo(116.50003051757812 * ᐃ, ᐃ * 238.44886779785156, 116.50003051757812 * ᐃ, 238.44886779785156 * ᐃ, ᐃ * 41.000030517578125, ᐃ * 284.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 49.000030517578125, ᐃ * 252.94886779785156, 56.000030517578125 * ᐃ, ᐃ * 242.94886779785156, ᐃ * 80.00003051757812, ᐃ * 215.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 125.00003051757812, 181.94886779785156 * ᐃ, 174.00003051757812 * ᐃ, ᐃ * 183.94886779785156, 192.00003051757812 * ᐃ, ᐃ * 191.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ], ᐃᐃ[3], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 313.0000305175781, ᐃ * 76.58523559570312);
		Ⲇ.bezierCurveTo(308.0000305175781 * ᐃ, ᐃ * 130.58523559570312, ᐃ * 279.0000305175781, 158.58523559570312 * ᐃ, 254.00003051757812 * ᐃ, ᐃ * 175.58523559570312);
		Ⲇ.bezierCurveTo(287.0000305175781 * ᐃ, 182.58523559570312 * ᐃ, ᐃ * 274.0000305175781, 181.08523559570312 * ᐃ, ᐃ * 294.0000305175781, 186.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 293.5000305175781, 196.08523559570312 * ᐃ, 293.5000305175781 * ᐃ, ᐃ * 196.08523559570312, 293.0000305175781 * ᐃ, 205.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(304.0000305175781 * ᐃ, ᐃ * 201.08523559570312, ᐃ * 304.0000305175781, ᐃ * 201.08523559570312, ᐃ * 315.0000305175781, 196.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(350.0000305175781 * ᐃ, 219.58523559570312 * ᐃ, ᐃ * 343.0000305175781, ᐃ * 221.58523559570312, ᐃ * 351.0000305175781, ᐃ * 230.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 296.0000305175781, 260.5852355957031 * ᐃ, 264.0000305175781 * ᐃ, 256.5852355957031 * ᐃ, ᐃ * 220.00003051757812, 236.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(233.00003051757812 * ᐃ, ᐃ * 266.5852355957031, ᐃ * 232.00003051757812, 279.5852355957031 * ᐃ, ᐃ * 231.00003051757812, 295.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(222.00003051757812 * ᐃ, 297.5852355957031 * ᐃ, ᐃ * 222.00003051757812, ᐃ * 297.5852355957031, ᐃ * 213.00003051757812, ᐃ * 299.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 219.50003051757812, 308.0852355957031 * ᐃ, 219.50003051757812 * ᐃ, 308.0852355957031 * ᐃ, 226.00003051757812 * ᐃ, ᐃ * 316.5852355957031);
		Ⲇ.bezierCurveTo(ᐃ * 223.00003051757812, ᐃ * 344.5852355957031, 216.00003051757812 * ᐃ, ᐃ * 350.5852355957031, ᐃ * 209.00003051757812, 363.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154.00003051757812, 318.5852355957031 * ᐃ, ᐃ * 156.00003051757812, 268.5852355957031 * ᐃ, ᐃ * 160.00003051757812, ᐃ * 238.58523559570312);
		Ⲇ.bezierCurveTo(135.00003051757812 * ᐃ, ᐃ * 268.5852355957031, ᐃ * 125.00003051757812, ᐃ * 267.5852355957031, ᐃ * 112.00003051757812, 272.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(104.50003051757812 * ᐃ, ᐃ * 266.5852355957031, 104.50003051757812 * ᐃ, ᐃ * 266.5852355957031, ᐃ * 97.00003051757812, ᐃ * 260.5852355957031);
		Ⲇ.bezierCurveTo(93.00003051757812 * ᐃ, ᐃ * 271.0852355957031, 93.00003051757812 * ᐃ, 271.0852355957031 * ᐃ, ᐃ * 89.00003051757812, 281.5852355957031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66.00003051757812, ᐃ * 288.5852355957031, ᐃ * 59.000030517578125, ᐃ * 288.5852355957031, ᐃ * 39.000030517578125, ᐃ * 285.5852355957031);
		Ⲇ.bezierCurveTo(56.000030517578125 * ᐃ, ᐃ * 216.58523559570312, ᐃ * 91.00003051757812, ᐃ * 204.58523559570312, ᐃ * 129.00003051757812, ᐃ * 189.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 90.00003051757812, ᐃ * 176.58523559570312, ᐃ * 89.00003051757812, ᐃ * 173.58523559570312, ᐃ * 79.00003051757812, ᐃ * 166.58523559570312);
		Ⲇ.bezierCurveTo(82.00003051757812 * ᐃ, ᐃ * 155.08523559570312, 82.00003051757812 * ᐃ, 155.08523559570312 * ᐃ, 85.00003051757812 * ᐃ, ᐃ * 143.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 75.50003051757812, 147.58523559570312 * ᐃ, ᐃ * 75.50003051757812, 147.58523559570312 * ᐃ, ᐃ * 66.00003051757812, ᐃ * 151.58523559570312);
		Ⲇ.bezierCurveTo(44.000030517578125 * ᐃ, 133.58523559570312 * ᐃ, 41.000030517578125 * ᐃ, ᐃ * 124.58523559570312, 34.000030517578125 * ᐃ, ᐃ * 102.58523559570312);
		Ⲇ.bezierCurveTo(100.00003051757812 * ᐃ, ᐃ * 81.58523559570312, 134.00003051757812 * ᐃ, 118.58523559570312 * ᐃ, ᐃ * 150.00003051757812, ᐃ * 128.58523559570312);
		Ⲇ.bezierCurveTo(144.00003051757812 * ᐃ, 102.58523559570312 * ᐃ, ᐃ * 147.00003051757812, ᐃ * 90.58523559570312, ᐃ * 150.00003051757812, 80.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159.50003051757812, ᐃ * 79.08523559570312, ᐃ * 159.50003051757812, 79.08523559570312 * ᐃ, 169.00003051757812 * ᐃ, ᐃ * 77.58523559570312);
		Ⲇ.bezierCurveTo(163.00003051757812 * ᐃ, 72.58523559570312 * ᐃ, ᐃ * 163.00003051757812, 72.58523559570312 * ᐃ, ᐃ * 157.00003051757812, ᐃ * 67.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 162.00003051757812, ᐃ * 42.585235595703125, ᐃ * 169.00003051757812, 29.585235595703125 * ᐃ, ᐃ * 182.00003051757812, ᐃ * 14.585235595703125);
		Ⲇ.bezierCurveTo(ᐃ * 219.00003051757812, 48.585235595703125 * ᐃ, 222.00003051757812 * ᐃ, 92.58523559570312 * ᐃ, ᐃ * 218.00003051757812, ᐃ * 112.58523559570312);
		Ⲇ.bezierCurveTo(ᐃ * 239.00003051757812, 95.58523559570312 * ᐃ, 242.00003051757812 * ᐃ, 97.58523559570312 * ᐃ, ᐃ * 249.00003051757812, 94.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(255.00003051757812 * ᐃ, ᐃ * 103.08523559570312, ᐃ * 255.00003051757812, ᐃ * 103.08523559570312, ᐃ * 261.0000305175781, 111.58523559570312 * ᐃ);
		Ⲇ.bezierCurveTo(261.5000305175781 * ᐃ, ᐃ * 99.58523559570312, ᐃ * 261.5000305175781, ᐃ * 99.58523559570312, ᐃ * 262.0000305175781, ᐃ * 87.58523559570312);
		Ⲇ.bezierCurveTo(282.0000305175781 * ᐃ, 77.58523559570312 * ᐃ, ᐃ * 301.0000305175781, ᐃ * 74.58523559570312, ᐃ * 314.0000305175781, 76.58523559570312 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ᐃᐃ[ⵠᐃⵠΔ], ᐃ * ⵠᐃᐃⲆ);
		return ΔΔ
	}

	function ᐃⲆΔⲆΔⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 130 * ᐃ;
		ΔΔ.height = ᐃ * 142;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃᐃΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 65, ᐃ * 80);
		Ⲇ.rotate(.2);
		ⲆᐃⵠΔ(Ⲇ, ᐃⵠⵠΔⵠ, ᐃ * 60, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 65, 71 * ᐃ);
		Ⲇ.rotate(.2);
		ⲆᐃⵠΔ(Ⲇ, ΔⲆᐃᐃΔ, ᐃ * 60, ⵠΔᐃΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], ᐃⵠᐃᐃ);
		Ⲇ.rotate(-.32);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔⵠⲆⵠ, 38 * ᐃ, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[4], Δⵠⵠⵠ);
		Ⲇ.rotate(.68);
		ⲆᐃⵠΔ(Ⲇ, ΔⵠᐃᐃⲆΔⲆ, ᐃ * ⵠΔⲆⵠ, 8 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃΔ], ᐃᐃ[6], 6);
		Ⲇ.restore();
		return ΔΔ
	}

	function ΔⲆⵠΔⲆⵠⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ, ᐃⲆ, ⵠⵠⵠ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (ΔΔⲆᐃ == ᐃⲆ) {
			var ᐃᐃⲆ = ᐃ * 270;
			var ΔᐃⲆ = ᐃ * 250;
			ΔΔ.width = ᐃᐃⲆ;
			ΔΔ.height = ΔᐃⲆ;
			Ⲇ.beginPath();
			Ⲇ.moveTo(140 * ᐃ, ᐃ * ⲆⵠⵠⲆ);
			Ⲇ.translate(-25 * ᐃ, ᐃ * -20);
			Ⲇ.bezierCurveTo(218 * ᐃ, ᐃ * 31, ᐃ * 251, ᐃ * 61, 265 * ᐃ, ᐃ * 85);
			Ⲇ.bezierCurveTo(278 * ᐃ, 108 * ᐃ, ᐃ * 295, 160 * ᐃ, ᐃ * 285, 195 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 271, 242 * ᐃ, ᐃ * 213, ᐃ * 268, 188 * ᐃ, 266 * ᐃ);
			Ⲇ.bezierCurveTo(139 * ᐃ, 262 * ᐃ, 70 * ᐃ, 244 * ᐃ, ᐃ * 47, 204 * ᐃ);
			Ⲇ.bezierCurveTo(ΔΔⵠΔ * ᐃ, ᐃ * 158, ᐃ * 35, 78 * ᐃ, ᐃ * 59, ᐃ * 56);
			Ⲇ.bezierCurveTo(ᐃ * 90, 28 * ᐃ, 124 * ᐃ, ᐃ * 23, 140 * ᐃ, ᐃ * 23);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		} else if (ⲆⲆΔᐃ == ᐃⲆ) {
			var ᐃᐃⲆ = 430 * ᐃ;
			var ΔᐃⲆ = 350 * ᐃ;
			ΔΔ.width = ᐃᐃⲆ;
			ΔΔ.height = ΔᐃⲆ;
			Ⲇ.beginPath();
			Ⲇ.moveTo(180 * ᐃ, ᐃ * ⲆⲆᐃⵠ);
			Ⲇ.translate(ᐃ * -30, ᐃ * -60);
			Ⲇ.bezierCurveTo(ᐃ * 283, ᐃ * 60, 265 * ᐃ, ᐃ * 163, ᐃ * 335, ᐃ * 206);
			Ⲇ.bezierCurveTo(ᐃ * 376, 231 * ᐃ, 492 * ᐃ, ᐃ * 299, ᐃ * 434, 357 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 371, 421 * ᐃ, ᐃ * 289, 394 * ᐃ, 255 * ᐃ, ᐃ * 386);
			Ⲇ.bezierCurveTo(ᐃ * 218, ᐃ * 377, ᐃ * 91, 359 * ᐃ, 50 * ᐃ, 272 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * ⵠᐃⲆΔΔ, ᐃ * 192, ᐃ * 107, 75 * ᐃ, ᐃ * 178, 69 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		} else if (ᐃⲆ == ⵠΔⲆΔ) {
			var ᐃᐃⲆ = 400 * ᐃ;
			var ΔᐃⲆ = ᐃ * 300;
			ΔΔ.width = ᐃᐃⲆ;
			ΔΔ.height = ΔᐃⲆ;
			Ⲇ.beginPath();
			Ⲇ.moveTo(ᐃ * 80, 52 * ᐃ);
			Ⲇ.translate(-40 * ᐃ, ᐃ * -30);
			Ⲇ.bezierCurveTo(124 * ᐃ, 77 * ᐃ, 241 * ᐃ, 22 * ᐃ, ᐃ * 311, ᐃ * 65);
			Ⲇ.bezierCurveTo(352 * ᐃ, 90 * ᐃ, 404 * ᐃ, ᐃ * 176, ᐃ * 346, ᐃ * 234);
			Ⲇ.bezierCurveTo(ᐃ * 283, ᐃ * 298, 179 * ᐃ, ᐃ * 299, 145 * ᐃ, 291 * ᐃ);
			Ⲇ.bezierCurveTo(108 * ᐃ, ᐃ * 282, ᐃ * ᐃⲆⵠΔΔ, 239 * ᐃ, ᐃ * 63, 205 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 37, 181 * ᐃ, 45 * ᐃ, 131 * ᐃ, 80 * ᐃ, ᐃ * 107);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		}
		return ΔΔ
	}

	function ⲆⲆᐃⲆΔⵠⲆ(ᐃ, Δᐃᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * Δᐃᐃ * 2;
		var ΔᐃⲆ = ᐃ * Δᐃᐃ * 2;
		var ᐃᐃΔ = ᐃᐃⲆ / ⵠᐃⵠΔ;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		ΔⵠⲆ(Ⲇ, ΔⲆⵠ, 0, ᐃ * Δᐃᐃ, 0);
		Δⵠ(Ⲇ, ᐃᐃ);
		return ΔΔ
	}
	const ⲆⲆⲆⲆⵠΔⵠ = ᐃᐃΔⲆⵠ;
	const ΔΔᐃᐃ = ᐃⲆⵠΔ;

	function ⲆᐃᐃΔⲆΔⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ⵠΔⵠⲆⲆ * ᐃ;
		ΔΔ.height = ᐃ * 648;
		Ⲇ.translate(ᐃ * 20, ᐃ * 20);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔΔᐃᐃ;
		Ⲇ.save();
		Ⲇ.translate(50.5 * ᐃ, 349.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -13.5, -249.5 * ᐃ, ᐃ * 27, 499 * ᐃ, ᐃ * ⵠⵠΔⲆᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 36, 538 * ᐃ);
		Ⲇ.bezierCurveTo(49.5 * ᐃ, ᐃ * 538, 49.5 * ᐃ, ᐃ * 538, ᐃ * 63, ᐃ * 538);
		Ⲇ.bezierCurveTo(ᐃ * 63.5, 568 * ᐃ, ᐃ * 63.5, 568 * ᐃ, ᐃ * 64, 598 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, ᐃ * 598, 50 * ᐃ, 598 * ᐃ, ᐃ * 36, 598 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, 568.5 * ᐃ, 36 * ᐃ, 568.5 * ᐃ, ᐃ * 36, ᐃ * 539);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, ᐃ * 554);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 561, 56 * ᐃ, 558 * ᐃ, ᐃ * 63, 554 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(32 * ᐃ, ᐃ * 569);
		Ⲇ.bezierCurveTo(44 * ᐃ, 576 * ᐃ, 58 * ᐃ, ᐃ * 574, ᐃ * 68, 569 * ᐃ);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 584, 68 * ᐃ, 584 * ᐃ, ᐃ * 68, 599 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, ᐃ * 608, ᐃ * 65, ᐃ * 618, ᐃ * 49, 617 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 34, ᐃ * 617, ᐃ * 32, ᐃ * 610, ᐃ * 32, ᐃ * 598);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(41 * ᐃ, ᐃ * 581);
		Ⲇ.bezierCurveTo(48 * ᐃ, 584 * ᐃ, ᐃ * 55, 583 * ᐃ, ᐃ * 60, 581 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60, 589.5 * ᐃ, 60 * ᐃ, 589.5 * ᐃ, ᐃ * 60, 598 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60, 604 * ᐃ, 59 * ᐃ, 609 * ᐃ, 48 * ᐃ, 608 * ᐃ);
		Ⲇ.bezierCurveTo(40 * ᐃ, ᐃ * 607, ᐃ * 40, ᐃ * 606, 41 * ᐃ, ᐃ * 581);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(31 * ᐃ, 106 * ᐃ);
		Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 124.5, 31 * ᐃ, ᐃ * 124.5, 31 * ᐃ, ᐃ * 143);
		Ⲇ.bezierCurveTo(31 * ᐃ, 163 * ᐃ, ᐃ * 38, ᐃ * 169, 48 * ᐃ, ᐃ * 168);
		Ⲇ.bezierCurveTo(ᐃ * 57, 168 * ᐃ, 67 * ᐃ, ᐃ * 165, ᐃ * 67, ᐃ * 148);
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * 123.5, ᐃ * 67, 123.5 * ᐃ, ᐃ * 67, ᐃ * 99);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(49 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, 62.5 * ᐃ, 64 * ᐃ, ᐃ * 62.5, ᐃ * 79, ᐃ * 98);
		Ⲇ.bezierCurveTo(74 * ᐃ, 113 * ᐃ, 63 * ᐃ, 121 * ᐃ, ᐃ * 50, ᐃ * 122);
		Ⲇ.bezierCurveTo(ᐃ * 35, 123 * ᐃ, 22 * ᐃ, ᐃ * 109, 20 * ᐃ, 98 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 49, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 70, ᐃ * 61, ᐃ * 70, 73 * ᐃ, ᐃ * 97);
		Ⲇ.bezierCurveTo(66 * ᐃ, ᐃ * 116, ᐃ * 43, ᐃ * 122, 26 * ᐃ, ᐃ * 99);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(ᐃ * -ⵠⵠΔⵠ, -20 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(50.5 * ᐃ, ᐃ * 349.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -13.5, -249.5 * ᐃ, ᐃ * 27, ᐃ * 499, ᐃ * ⵠΔⲆⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[2], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, 538 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49.5, 538 * ᐃ, 49.5 * ᐃ, 538 * ᐃ, ᐃ * 63, ᐃ * 538);
		Ⲇ.bezierCurveTo(63.5 * ᐃ, ᐃ * 568, ᐃ * 63.5, ᐃ * 568, 64 * ᐃ, ᐃ * 598);
		Ⲇ.bezierCurveTo(50 * ᐃ, ᐃ * 598, 50 * ᐃ, 598 * ᐃ, ᐃ * 36, 598 * ᐃ);
		Ⲇ.bezierCurveTo(36 * ᐃ, ᐃ * 568.5, 36 * ᐃ, 568.5 * ᐃ, 36 * ᐃ, ᐃ * 539);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ΔⲆΔⲆ], ᐃ * ΔⲆᐃᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, ᐃ * 554);
		Ⲇ.bezierCurveTo(ᐃ * 45, ᐃ * 561, 56 * ᐃ, 558 * ᐃ, ᐃ * 63, 554 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[ᐃⵠⲆⲆⲆ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(32 * ᐃ, 569 * ᐃ);
		Ⲇ.bezierCurveTo(44 * ᐃ, 576 * ᐃ, ᐃ * 58, 574 * ᐃ, ᐃ * 68, ᐃ * 569);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 584, ᐃ * 68, 584 * ᐃ, 68 * ᐃ, ᐃ * 599);
		Ⲇ.bezierCurveTo(68 * ᐃ, 608 * ᐃ, ᐃ * 65, 618 * ᐃ, ᐃ * 49, 617 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 34, ᐃ * 617, ᐃ * 32, ᐃ * 610, 32 * ᐃ, 598 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ᐃⵠⵠΔⲆ], ⵠⵠΔⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(41 * ᐃ, 581 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48, ᐃ * 584, ᐃ * 55, ᐃ * 583, 60 * ᐃ, 581 * ᐃ);
		Ⲇ.bezierCurveTo(60 * ᐃ, 589.5 * ᐃ, 60 * ᐃ, 589.5 * ᐃ, 60 * ᐃ, ᐃ * 598);
		Ⲇ.bezierCurveTo(60 * ᐃ, ᐃ * 604, ᐃ * 59, ᐃ * 609, ᐃ * 48, ᐃ * 608);
		Ⲇ.bezierCurveTo(40 * ᐃ, 607 * ᐃ, ᐃ * 40, 606 * ᐃ, ᐃ * 41, ᐃ * 581);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 31, 124.5 * ᐃ, ᐃ * 31, 124.5 * ᐃ, ᐃ * 31, 143 * ᐃ);
		Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 163, 38 * ᐃ, 169 * ᐃ, ᐃ * 48, ᐃ * 168);
		Ⲇ.bezierCurveTo(ᐃ * 57, 168 * ᐃ, ᐃ * 67, 165 * ᐃ, ᐃ * 67, 148 * ᐃ);
		Ⲇ.bezierCurveTo(67 * ᐃ, 123.5 * ᐃ, ᐃ * 67, 123.5 * ᐃ, ᐃ * 67, 99 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], ᐃ * 8);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -46, ᐃ * -50);
		Ⲇ.scale(2, 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(51 * ᐃ, ᐃ * 80);
		Ⲇ.bezierCurveTo(ᐃ * 51, ᐃ * 89.5, 51 * ᐃ, ᐃ * 89.5, 51 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(49 * ᐃ, ᐃ * 103, ᐃ * 46, 105 * ᐃ, ᐃ * 44, ᐃ * 99);
		Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 88.5, ᐃ * 44, 88.5 * ᐃ, ᐃ * 44, ᐃ * 78);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠⵠⵠ]);
		Ⲇ.restore();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 49, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, ᐃ * 62.5, 64 * ᐃ, ᐃ * 62.5, 79 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 74, 113 * ᐃ, ᐃ * 63, 121 * ᐃ, 50 * ᐃ, ᐃ * 122);
		Ⲇ.bezierCurveTo(35 * ᐃ, ᐃ * 123, ᐃ * 22, ᐃ * 109, ᐃ * 20, ᐃ * 98);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔΔᐃ], ᐃᐃ[ΔᐃΔⵠⲆΔⲆ], ⵠⵠΔⵠΔ * ᐃ);
		Ⲇ.scale(2, 2);
		Ⲇ.translate(-23 * ᐃ, ᐃ * -20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 57, 69 * ᐃ);
		Ⲇ.bezierCurveTo(50 * ᐃ, 76 * ᐃ, 43 * ᐃ, 75 * ᐃ, ᐃ * 38, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 57, ᐃ * 43, ᐃ * 57, 48 * ᐃ, ᐃ * 45);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10]);
		return ΔΔ
	}

	function ᐃᐃⵠⲆⵠΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 108;
		ΔΔ.height = ᐃ * 669;
		Ⲇ.translate(20 * ᐃ, 20 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 54, 389.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -15 * ᐃ, ᐃ * -228.5, ᐃ * 30, ᐃ * 457, ᐃ * ᐃᐃⵠᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, ᐃ * 579);
		Ⲇ.bezierCurveTo(47 * ᐃ, ᐃ * 587, 61 * ᐃ, ᐃ * 584, 71 * ᐃ, ᐃ * 579);
		Ⲇ.bezierCurveTo(ᐃ * 75, 597.5 * ᐃ, 75 * ᐃ, ᐃ * 597.5, 79 * ᐃ, ᐃ * 616);
		Ⲇ.bezierCurveTo(66.5 * ᐃ, ᐃ * 628, ᐃ * 66.5, ᐃ * 628, ᐃ * 54, ᐃ * 640);
		Ⲇ.bezierCurveTo(ᐃ * 41, ᐃ * 628.5, ᐃ * 41, 628.5 * ᐃ, 28 * ᐃ, ᐃ * 617);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, ᐃ * 141);
		Ⲇ.bezierCurveTo(40 * ᐃ, 136 * ᐃ, 40 * ᐃ, 136 * ᐃ, ᐃ * 50, 131 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, ᐃ * 136, 63 * ᐃ, 136 * ᐃ, ᐃ * 76, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 72.5, 161.5 * ᐃ, ᐃ * 72.5, 161.5 * ᐃ, ᐃ * 69, ᐃ * 182);
		Ⲇ.bezierCurveTo(61.5 * ᐃ, 186.5 * ᐃ, 61.5 * ᐃ, 186.5 * ᐃ, ᐃ * 54, ᐃ * 191);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 186.5, 45 * ᐃ, 186.5 * ᐃ, 36 * ᐃ, ᐃ * 182);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(42 * ᐃ, ᐃ * 152);
		Ⲇ.bezierCurveTo(ᐃ * 53, ᐃ * 152, 53 * ᐃ, 152 * ᐃ, ᐃ * 64, 152 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62, ᐃ * 171, ᐃ * 62, 176 * ᐃ, 55 * ᐃ, ᐃ * 177);
		Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 176, ᐃ * 45, 174 * ᐃ, ᐃ * 42, ᐃ * 152);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(67.5 * ᐃ, 55 * ᐃ, 67.5 * ᐃ, 55 * ᐃ, 83 * ᐃ, ᐃ * 82);
		Ⲇ.bezierCurveTo(ᐃ * 80, 106.5 * ᐃ, 80 * ᐃ, 106.5 * ᐃ, 77 * ᐃ, ᐃ * 131);
		Ⲇ.bezierCurveTo(58 * ᐃ, ᐃ * 147, 44 * ᐃ, 141 * ᐃ, ᐃ * 29, ᐃ * 131);
		Ⲇ.bezierCurveTo(26.5 * ᐃ, 106.5 * ᐃ, 26.5 * ᐃ, 106.5 * ᐃ, ᐃ * 24, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(53 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 70, ᐃ * 61, 70 * ᐃ, ᐃ * 69, 87 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67, 106 * ᐃ, ᐃ * 67, ᐃ * 106, ᐃ * 65, ᐃ * 125);
		Ⲇ.bezierCurveTo(54 * ᐃ, 130 * ᐃ, 51 * ᐃ, 130 * ᐃ, 41 * ᐃ, ᐃ * 125);
		Ⲇ.bezierCurveTo(39 * ᐃ, ᐃ * 105, ᐃ * 39, ᐃ * 105, 37 * ᐃ, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.translate(-20 * ᐃ, -20 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(54 * ᐃ, ᐃ * 389.5);
		Ⲇ.rotate(Δⵠⵠ);
		ᐃΔⵠ(Ⲇ, -15 * ᐃ, -228.5 * ᐃ, 30 * ᐃ, 457 * ᐃ, ᐃⵠⲆᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, 579 * ᐃ);
		Ⲇ.bezierCurveTo(47 * ᐃ, 587 * ᐃ, ᐃ * 61, ᐃ * 584, 71 * ᐃ, 579 * ᐃ);
		Ⲇ.bezierCurveTo(75 * ᐃ, 597.5 * ᐃ, 75 * ᐃ, ᐃ * 597.5, 79 * ᐃ, 616 * ᐃ);
		Ⲇ.bezierCurveTo(66.5 * ᐃ, ᐃ * 628, ᐃ * 66.5, ᐃ * 628, ᐃ * 54, 640 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41, 628.5 * ᐃ, ᐃ * 41, ᐃ * 628.5, 28 * ᐃ, 617 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[ᐃΔᐃΔ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, ᐃ * 141);
		Ⲇ.bezierCurveTo(ᐃ * 40, 136 * ᐃ, ᐃ * 40, ᐃ * 136, ᐃ * 50, ᐃ * 131);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 136, 63 * ᐃ, 136 * ᐃ, 76 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(72.5 * ᐃ, ᐃ * 161.5, ᐃ * 72.5, ᐃ * 161.5, 69 * ᐃ, 182 * ᐃ);
		Ⲇ.bezierCurveTo(61.5 * ᐃ, ᐃ * 186.5, ᐃ * 61.5, ᐃ * 186.5, ᐃ * 54, ᐃ * 191);
		Ⲇ.bezierCurveTo(ᐃ * 45, 186.5 * ᐃ, ᐃ * 45, ᐃ * 186.5, ᐃ * 36, ᐃ * 182);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃᐃⲆ], ΔⵠΔᐃⵠᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(42 * ᐃ, 152 * ᐃ);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 152, ᐃ * 53, 152 * ᐃ, ᐃ * 64, 152 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62, 171 * ᐃ, ᐃ * 62, ᐃ * 176, ᐃ * 55, 177 * ᐃ);
		Ⲇ.bezierCurveTo(42 * ᐃ, ᐃ * 176, ᐃ * 45, 174 * ᐃ, ᐃ * 42, 152 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 67.5, 55 * ᐃ, 67.5 * ᐃ, ᐃ * 55, ᐃ * 83, 82 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 106.5, 80 * ᐃ, 106.5 * ᐃ, ᐃ * 77, 131 * ᐃ);
		Ⲇ.bezierCurveTo(58 * ᐃ, 147 * ᐃ, ᐃ * 44, ᐃ * 141, ᐃ * 29, 131 * ᐃ);
		Ⲇ.bezierCurveTo(26.5 * ᐃ, 106.5 * ᐃ, ᐃ * 26.5, 106.5 * ᐃ, 24 * ᐃ, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃᐃᐃⵠ], ᐃᐃ[7], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(53 * ᐃ, ᐃ * 53);
		Ⲇ.bezierCurveTo(61 * ᐃ, 70 * ᐃ, ᐃ * 61, 70 * ᐃ, 69 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 67, 106 * ᐃ, ᐃ * 67, 106 * ᐃ, ᐃ * 65, ᐃ * 125);
		Ⲇ.bezierCurveTo(ᐃ * 54, ᐃ * 130, 51 * ᐃ, ᐃ * 130, ᐃ * 41, ᐃ * 125);
		Ⲇ.bezierCurveTo(39 * ᐃ, ᐃ * 105, 39 * ᐃ, ᐃ * 105, ᐃ * 37, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃᐃᐃ]);
		return ΔΔ
	}

	function ⵠⲆⵠⵠΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 90 * ᐃ;
		ΔΔ.height = 98 * ᐃ;
		Ⲇ.translate(Δⵠⵠ, ᐃ * 4);
		if (ᐃⲆ === ⵠⵠⲆⲆ) {
			Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
			Ⲇ.save();
			Ⲇ.translate(44 * ᐃ, ᐃ * 50);
			Ⲇ.rotate(.2);
			ⲆᐃⵠΔ(Ⲇ, ᐃⵠⵠΔⵠ, 41 * ᐃ, ᐃ * Ⲇⵠᐃⵠᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ])
		}
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 44, ᐃ * 44);
		Ⲇ.rotate(.2);
		ⲆᐃⵠΔ(Ⲇ, 9, ᐃ * 41, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[2], ⲆⵠⲆⲆ * ᐃ);
		Ⲇ.rotate(-.32);
		ⲆᐃⵠΔ(Ⲇ, ΔⲆᐃᐃΔ, ᐃ * 32, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ᐃΔᐃⲆⵠ);
		Ⲇ.rotate(.68);
		ⲆᐃⵠΔ(Ⲇ, 9, ᐃ * 23, ᐃ * 8);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃⵠ], ᐃᐃ[ΔⲆΔⲆΔ], ᐃ * 6);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(45 * ᐃ, 45 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -9, -25.5 * ᐃ, ᐃ * 18, ᐃ * 51, ᐃ * 30);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ], ᐃᐃ[ⵠΔⲆᐃΔ], ᐃ * ᐃᐃΔⵠ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 45, ᐃ * 45);
		Ⲇ.rotate(Δⵠⵠ);
		ᐃΔⵠ(Ⲇ, -26 * ᐃ, -ᐃⵠⵠΔⵠ * ᐃ, ᐃ * 52, ᐃᐃᐃⵠⲆⲆΔ * ᐃ, ᐃ * 30);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆΔ], ᐃᐃ[ⲆⵠⵠⲆΔ], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 45, ᐃ * 29, ᐃⲆⵠΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 45 * ᐃ, ᐃ * 61, ᐃ * ᐃⲆⵠⲆⲆ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆⲆΔ]);
		ΔⵠⲆ(Ⲇ, 28 * ᐃ, ᐃ * 45, ᐃᐃΔⵠⵠᐃᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆⲆΔ]);
		ΔⵠⲆ(Ⲇ, 62 * ᐃ, ᐃ * 45, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃⵠ]);
		return ΔΔ
	}

	function ᐃᐃΔΔΔΔⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 88;
		ΔΔ.height = ᐃ * 647;
		Ⲇ.translate(ᐃ * ⵠᐃⲆΔ, ᐃ * ⵠⵠΔⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.save();
		Ⲇ.translate(45 * ᐃ, ᐃ * 384.5);
		ᐃΔⵠ(Ⲇ, -ᐃᐃΔⲆⵠ * ᐃ, ᐃ * -216.5, ᐃ * 30, ᐃ * 433, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(27 * ᐃ, 572 * ᐃ);
		Ⲇ.bezierCurveTo(44 * ᐃ, 580 * ᐃ, ᐃ * 55, 576 * ᐃ, ᐃ * 62, 572 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, 585.5 * ᐃ, 65 * ᐃ, 585.5 * ᐃ, 68 * ᐃ, ᐃ * 599);
		Ⲇ.bezierCurveTo(71 * ᐃ, 612 * ᐃ, 68 * ᐃ, 618 * ᐃ, ᐃ * 34, ᐃ * 616);
		Ⲇ.bezierCurveTo(14 * ᐃ, ᐃ * 615, 19 * ᐃ, ᐃ * 607, 27 * ᐃ, 573 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(32 * ᐃ, 587 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39, 590 * ᐃ, 48 * ᐃ, 588 * ᐃ, 54 * ᐃ, 587 * ᐃ);
		Ⲇ.bezierCurveTo(57 * ᐃ, 604 * ᐃ, ᐃ * 59, 609 * ᐃ, ᐃ * 46, ᐃ * 609);
		Ⲇ.bezierCurveTo(27 * ᐃ, 609 * ᐃ, 28 * ᐃ, 605 * ᐃ, ᐃ * 33, ᐃ * 588);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, 113 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, 139 * ᐃ, 27 * ᐃ, 139 * ᐃ, ᐃ * 23, ᐃ * 165);
		Ⲇ.bezierCurveTo(ᐃ * ᐃⲆⵠⵠᐃ, ᐃ * 187, 39 * ᐃ, ᐃ * 195, ᐃ * 57, 186 * ᐃ);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 180, 65 * ᐃ, 171 * ᐃ, 62 * ᐃ, 153 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 58.5, ᐃ * 131, 58.5 * ᐃ, 131 * ᐃ, 55 * ᐃ, 109 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39 * ᐃ, 139 * ᐃ);
		Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 139, ᐃ * 43, 139 * ᐃ, 47 * ᐃ, 139 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51, 158 * ᐃ, ᐃ * 56, ᐃ * 176, 44 * ᐃ, ᐃ * 175);
		Ⲇ.bezierCurveTo(ᐃ * 33, ᐃ * 177, ᐃ * 34, ᐃ * 167, 39 * ᐃ, ᐃ * 140);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 44, 29 * ᐃ);
		Ⲇ.bezierCurveTo(57 * ᐃ, ᐃ * 63, 57 * ᐃ, ᐃ * 63, 70 * ᐃ, 97 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60, 111 * ᐃ, ᐃ * 60, ᐃ * 111, 50 * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, 128 * ᐃ, ᐃ * 41, 128 * ᐃ, 35 * ᐃ, ᐃ * 124);
		Ⲇ.bezierCurveTo(ᐃ * 26.5, ᐃ * 110, ᐃ * 26.5, ᐃ * 110, ᐃ * 18, ᐃ * 96);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, 72 * ᐃ, 50 * ᐃ, 72 * ᐃ, 56 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(58 * ᐃ, ᐃ * 94, 59 * ᐃ, ᐃ * 98, 53 * ᐃ, ᐃ * 105);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 113, 43 * ᐃ, 113 * ᐃ, 36 * ᐃ, ᐃ * 103);
		Ⲇ.bezierCurveTo(29 * ᐃ, ᐃ * 96, ᐃ * 31, ᐃ * 94, ᐃ * 35, ᐃ * 83);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.translate(ᐃ * -20, ᐃ * -ᐃᐃⲆⲆⵠ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 45, ᐃ * 384.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -ΔⵠΔⵠΔⲆⵠ, -216.5 * ᐃ, ᐃ * 30, 433 * ᐃ, ᐃⵠⲆᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], ΔᐃᐃⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(27 * ᐃ, 572 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * 580, 55 * ᐃ, ᐃ * 576, 62 * ᐃ, ᐃ * 572);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * 585.5, ᐃ * 65, 585.5 * ᐃ, ᐃ * 68, 599 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 71, 612 * ᐃ, 68 * ᐃ, ᐃ * 618, ᐃ * 34, 616 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃⵠΔⲆᐃⵠᐃ, ᐃ * 615, ᐃΔⵠᐃΔΔΔ * ᐃ, ᐃ * 607, ᐃ * 27, 573 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ΔⵠΔᐃⵠᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(32 * ᐃ, 587 * ᐃ);
		Ⲇ.bezierCurveTo(39 * ᐃ, 590 * ᐃ, 48 * ᐃ, ᐃ * 588, 54 * ᐃ, ᐃ * 587);
		Ⲇ.bezierCurveTo(ᐃ * 57, ᐃ * 604, 59 * ᐃ, ᐃ * 609, ᐃ * 46, 609 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 609, ᐃ * 28, ᐃ * 605, ᐃ * 33, ᐃ * 588);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, ᐃ * 113);
		Ⲇ.bezierCurveTo(27 * ᐃ, 139 * ᐃ, 27 * ᐃ, 139 * ᐃ, ᐃ * 23, ᐃ * 165);
		Ⲇ.bezierCurveTo(18 * ᐃ, ᐃ * 187, 39 * ᐃ, ᐃ * 195, ᐃ * 57, 186 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, ᐃ * 180, 65 * ᐃ, 171 * ᐃ, 62 * ᐃ, 153 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 58.5, 131 * ᐃ, 58.5 * ᐃ, 131 * ᐃ, ᐃ * 55, ᐃ * 109);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃᐃⲆ], ᐃᐃΔⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39 * ᐃ, ᐃ * 139);
		Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 139, ᐃ * 43, ᐃ * 139, ᐃ * 47, ᐃ * 139);
		Ⲇ.bezierCurveTo(ᐃ * 51, 158 * ᐃ, 56 * ᐃ, ᐃ * 176, 44 * ᐃ, 175 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33, ᐃ * 177, 34 * ᐃ, 167 * ᐃ, 39 * ᐃ, ᐃ * 140);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃΔΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, ᐃ * 29);
		Ⲇ.bezierCurveTo(57 * ᐃ, 63 * ᐃ, ᐃ * 57, ᐃ * 63, 70 * ᐃ, 97 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 111, 60 * ᐃ, ᐃ * 111, 50 * ᐃ, ᐃ * 125);
		Ⲇ.bezierCurveTo(45 * ᐃ, 128 * ᐃ, 41 * ᐃ, ᐃ * 128, 35 * ᐃ, 124 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 26.5, ᐃ * 110, ᐃ * 26.5, 110 * ᐃ, ᐃ * 18, 96 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ⲆΔᐃⵠΔ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, 72 * ᐃ, ᐃ * 50, 72 * ᐃ, 56 * ᐃ, ᐃ * 90);
		Ⲇ.bezierCurveTo(58 * ᐃ, ᐃ * 94, 59 * ᐃ, ᐃ * 98, ᐃ * 53, 105 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 113, 43 * ᐃ, 113 * ᐃ, ᐃ * 36, 103 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 29, ᐃ * 96, ᐃ * 31, 94 * ᐃ, ᐃ * 35, 83 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		return ΔΔ
	}

	function ⲆⵠᐃⲆⵠΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 90;
		ΔΔ.height = ᐃ * 101;
		Ⲇ.translate(ᐃ * 0, ᐃ * 5);
		ᐃⵠΔ === ᐃⲆ && (Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆΔ, ΔⵠⲆ(Ⲇ, ᐃ * 44, ᐃ * 55, ᐃ * 41), Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]));
		Ⲇ.globalAlpha = ΔᐃⵠΔ;
		ΔⵠⲆ(Ⲇ, 44 * ᐃ, ᐃ * 45, ᐃ * 41);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[2], ᐃ * ⲆⵠⵠⲆΔ);
		ΔⵠⲆ(Ⲇ, ᐃ * 44, 45 * ᐃ, 31 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 45, 45 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -9, ᐃ * -25.5, ᐃᐃⲆⲆⲆⲆΔ * ᐃ, 51 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ⵠΔⲆΔ);
		Ⲇ.save();
		Ⲇ.translate(45 * ᐃ, ᐃ * 45);
		ᐃΔⵠ(Ⲇ, -26 * ᐃ, ᐃ * -ΔᐃᐃⵠⲆⲆᐃ, ᐃ * 52, ᐃⲆΔⲆΔⲆᐃ * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆⵠⲆⲆ], ᐃ * 2);
		ΔⵠⲆ(Ⲇ, ᐃ * 45, ᐃ * 29, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃΔ]);
		ΔⵠⲆ(Ⲇ, 45 * ᐃ, 61 * ᐃ, ᐃⲆⵠΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 28, 45 * ᐃ, ΔΔⲆⵠⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 62, 45 * ᐃ, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ⵠⲆⵠΔΔᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 81 * ᐃ;
		ΔΔ.height = 626 * ᐃ;
		Ⲇ.translate(ᐃ * 20, ᐃ * ⵠⲆΔⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃΔⲆⵠ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, 565 * ᐃ);
		Ⲇ.bezierCurveTo(56 * ᐃ, 586 * ᐃ, 53 * ᐃ, ᐃ * 591, ᐃ * 40, ᐃ * 592);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 591, ᐃ * 27, ᐃ * 583, ᐃ * 28, 557 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27.5, ᐃ * 346, 27.5 * ᐃ, 346 * ᐃ, ᐃ * 27, 135 * ᐃ);
		Ⲇ.bezierCurveTo(26 * ᐃ, ᐃ * 74, 36 * ᐃ, 26 * ᐃ, ᐃ * 41, ᐃᐃΔⲆⵠ * ᐃ);
		Ⲇ.bezierCurveTo(54 * ᐃ, ᐃ * 51, ᐃ * 54, 81 * ᐃ, 55 * ᐃ, 128 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.translate(ᐃ * -20, ᐃ * -ᐃΔΔⲆΔⲆⲆ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(55 * ᐃ, 565 * ᐃ);
		Ⲇ.bezierCurveTo(56 * ᐃ, 586 * ᐃ, ᐃ * 53, ᐃ * 591, 40 * ᐃ, 592 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 591, 27 * ᐃ, 583 * ᐃ, 28 * ᐃ, 557 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27.5, 346 * ᐃ, 27.5 * ᐃ, ᐃ * 346, ᐃ * 27, ᐃ * 135);
		Ⲇ.bezierCurveTo(26 * ᐃ, ᐃ * 74, 36 * ᐃ, ᐃ * 26, 41 * ᐃ, 15 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54, 51 * ᐃ, 54 * ᐃ, 81 * ᐃ, 55 * ᐃ, ᐃ * 128);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ΔᐃⵠⲆ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 27, ᐃ * 129);
		Ⲇ.bezierCurveTo(32 * ᐃ, ᐃ * 135, ᐃ * 48, ᐃ * 136, ᐃ * 53, ᐃ * 129);
		Ⲇ.bezierCurveTo(56 * ᐃ, 97 * ᐃ, 53 * ᐃ, ᐃ * 82, ᐃ * 52, 64 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49, 33 * ᐃ, 44 * ᐃ, ᐃ * 27, 41 * ᐃ, 21 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 31, 40 * ᐃ, ᐃ * 28, ᐃ * 84, 27 * ᐃ, ᐃ * 127);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(55 * ᐃ, ᐃ * 565);
		Ⲇ.bezierCurveTo(56 * ᐃ, 586 * ᐃ, ᐃ * 53, 591 * ᐃ, ᐃ * 40, ᐃ * 592);
		Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 591, ᐃ * 27, ᐃ * 583, 28 * ᐃ, ᐃ * 557);
		Ⲇ.bezierCurveTo(ᐃ * 27.5, 346 * ᐃ, ᐃ * 27.5, ᐃ * 346, ᐃ * 27, 135 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 26, ᐃ * 74, ᐃ * 36, ᐃ * 26, ᐃ * 41, ᐃ * 15);
		Ⲇ.bezierCurveTo(ᐃ * 54, ᐃ * 51, 54 * ᐃ, ᐃ * 81, 55 * ᐃ, ᐃ * 128);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠⲆⵠ, ᐃᐃ[2], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 28, ᐃ * 475);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 482, ᐃ * 48, ᐃ * 480, ᐃ * 54, ᐃ * 474);
		Ⲇ.bezierCurveTo(54 * ᐃ, 509.5 * ᐃ, 54 * ᐃ, ᐃ * 509.5, ᐃ * 54, 545 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, 554 * ᐃ, 36 * ᐃ, ᐃ * 552, ᐃ * 28, 545 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 28, 496 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39, 506 * ᐃ, 49 * ᐃ, 503 * ᐃ, ᐃ * 54, ᐃ * 496);
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[ⲆⵠΔᐃᐃ], ΔⲆΔⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 28, 521 * ᐃ);
		Ⲇ.bezierCurveTo(41 * ᐃ, ᐃ * 529, ᐃ * 49, 524 * ᐃ, 54 * ᐃ, ᐃ * 520);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃᐃⲆᐃΔ], ᐃ * 8);
		return ΔΔ
	}

	function Δⵠⵠᐃᐃᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 130 * ᐃ;
		ΔΔ.height = ᐃ * 148;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃⵠΔ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 65, 85 * ᐃ);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, 7, 60 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 65, 74 * ᐃ);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, 7, 60 * ᐃ, ᐃ * ⲆⵠⲆⵠᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 4);
		Ⲇ.rotate(.64);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 40, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⲆⲆⲆ], ΔⲆΔⲆ);
		Ⲇ.rotate(.12);
		ⲆᐃⵠΔ(Ⲇ, ᐃⲆⵠΔᐃ, ᐃ * 23, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ΔΔⵠΔᐃᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 115 * ᐃ;
		ΔΔ.height = ᐃ * 585;
		Ⲇ.scale(-1, 1);
		Ⲇ.translate(ᐃ * -110, ΔⵠⲆΔ);
		Ⲇ.translate(ᐃ * 10, ᐃ * 10);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆⲆΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(51.5 * ᐃ, ᐃ * 342);
		ᐃΔⵠ(Ⲇ, -14.5 * ᐃ, -225 * ᐃ, 29 * ᐃ, 450 * ᐃ, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 54, 83 * ᐃ);
		Ⲇ.bezierCurveTo(70 * ᐃ, 69 * ᐃ, ᐃ * 78, ᐃ * 62, ᐃ * 82, ᐃ * 40);
		Ⲇ.bezierCurveTo(ᐃ * 93, 48 * ᐃ, 103 * ᐃ, 64 * ᐃ, ᐃ * 95, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 60, ᐃ * 114, 53 * ᐃ, 103 * ᐃ, ᐃ * 54, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 95, ᐃ * 97);
		Ⲇ.bezierCurveTo(ᐃ * 56, ᐃ * 102, 43 * ᐃ, ᐃ * 77, 71 * ᐃ, ᐃ * 6);
		Ⲇ.bezierCurveTo(34 * ᐃ, ᐃ * ᐃⵠⲆᐃⵠ, ᐃ * ᐃⲆᐃᐃΔ, 43 * ᐃ, ᐃ * 5, ᐃ * 76);
		Ⲇ.bezierCurveTo(ⵠΔΔᐃ * ᐃ, ᐃ * 98, ⵠᐃΔᐃⲆᐃΔ * ᐃ, 130 * ᐃ, 64 * ᐃ, ᐃ * 130);
		Ⲇ.bezierCurveTo(ᐃ * 76, 129 * ᐃ, ᐃ * 95, 113 * ᐃ, 97 * ᐃ, ᐃ * 97);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(55 * ᐃ, ᐃ * 176);
		Ⲇ.bezierCurveTo(74 * ᐃ, ᐃ * 175, ᐃ * 82, ᐃ * 169, 96 * ᐃ, 155 * ᐃ);
		Ⲇ.bezierCurveTo(103 * ᐃ, 183 * ᐃ, 95 * ᐃ, ᐃ * 214, ᐃ * 54, ᐃ * 219);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(50 * ᐃ, ᐃ * 176);
		Ⲇ.bezierCurveTo(25 * ᐃ, 177 * ᐃ, ᐃ * 16, ᐃ * 164, ᐃ * 7, ᐃ * 156);
		Ⲇ.bezierCurveTo(ᐃ * 0, 186 * ᐃ, ⲆΔⵠᐃⲆ * ᐃ, 201 * ᐃ, ᐃ * 43, ᐃ * 220);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, ᐃ * 403);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 412, ᐃ * 58, 412 * ᐃ, ᐃ * 67, 403 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66.5, 434 * ᐃ, ᐃ * 66.5, ᐃ * 434, 66 * ᐃ, 465 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 56, 480 * ᐃ, 40 * ᐃ, ᐃ * 472, 36 * ᐃ, ᐃ * 465);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 59, ᐃ * 67);
		Ⲇ.bezierCurveTo(47 * ᐃ, 97 * ᐃ, ⵠⲆⲆΔΔⵠⲆ * ᐃ, 117 * ᐃ, 11 * ᐃ, 110 * ᐃ);
		Ⲇ.bezierCurveTo(11 * ᐃ, ᐃ * 115, ᐃ * ᐃᐃⵠⲆᐃⲆΔ, ᐃ * 122, ᐃ * 23, 124 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 118, 52 * ᐃ, 113 * ᐃ, 62 * ᐃ, 86 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, 125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 136, ᐃ * 57, ᐃ * 134, ᐃ * 77, 127 * ᐃ);
		Ⲇ.bezierCurveTo(71 * ᐃ, ᐃ * 158, 71 * ᐃ, 159 * ᐃ, 66 * ᐃ, ᐃ * 159);
		Ⲇ.bezierCurveTo(ᐃ * 50.5, ᐃ * 156.5, 50.5 * ᐃ, 156.5 * ᐃ, ᐃ * 35, ᐃ * 154);
		Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 145, ᐃ * 31, ᐃ * 136, ᐃ * 31, 125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35 * ᐃ, ᐃ * 171);
		Ⲇ.bezierCurveTo(32 * ᐃ, ᐃ * 221, ᐃ * 43, 233 * ᐃ, 70 * ᐃ, 247 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 75, 234 * ᐃ, ᐃ * 75, 230 * ᐃ, ᐃ * 72, 221 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48, 206 * ᐃ, ᐃ * 54, 188 * ᐃ, ᐃ * 50, 176 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(60 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, ᐃ * 69, ᐃ * 65, 71 * ᐃ, 67 * ᐃ, 77 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61, 123 * ᐃ, 52 * ᐃ, 137 * ᐃ, ᐃ * 42, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 151, ᐃ * 38, ᐃ * 151, ᐃ * 34, 152 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33, ᐃ * 146.5, ᐃ * 33, ᐃ * 146.5, ᐃ * 32, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 118, ᐃ * 63, ᐃ * 87, 59 * ᐃ, ᐃ * 68);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 71, 172 * ᐃ);
		Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 222, 49 * ᐃ, 234 * ᐃ, ᐃ * 35, 248 * ᐃ);
		Ⲇ.bezierCurveTo(30 * ᐃ, 236 * ᐃ, ᐃ * 30, ᐃ * 230, 31 * ᐃ, ᐃ * 217);
		Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 202, ᐃ * 49, 191 * ᐃ, ᐃ * 52, 172 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, 151 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, ᐃ * 165, 31 * ᐃ, ᐃ * 173, 36 * ᐃ, ᐃ * 178);
		Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 185, ᐃ * 73, 184 * ᐃ, 71 * ᐃ, ᐃ * 170);
		Ⲇ.bezierCurveTo(ᐃ * 72, ᐃ * 154, ᐃ * 71, ᐃ * 154, 63 * ᐃ, ᐃ * 155);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		Ⲇ.translate(ᐃ * -10, -10 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 51.5, ᐃ * 342);
		ᐃΔⵠ(Ⲇ, -14.5 * ᐃ, ᐃ * -225, 29 * ᐃ, ᐃ * 450, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * ⲆΔᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(54 * ᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(70 * ᐃ, 69 * ᐃ, ᐃ * 78, 62 * ᐃ, 82 * ᐃ, ᐃ * 40);
		Ⲇ.bezierCurveTo(93 * ᐃ, ᐃ * 48, 103 * ᐃ, 64 * ᐃ, ᐃ * 95, ᐃ * 102);
		Ⲇ.bezierCurveTo(60 * ᐃ, ᐃ * 114, 53 * ᐃ, 103 * ᐃ, 54 * ᐃ, 85 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⲆᐃᐃ], ᐃⲆᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(95 * ᐃ, ᐃ * 97);
		Ⲇ.bezierCurveTo(56 * ᐃ, 102 * ᐃ, 43 * ᐃ, ᐃ * 77, 71 * ᐃ, 6 * ᐃ);
		Ⲇ.bezierCurveTo(34 * ᐃ, ᐃ * ⲆᐃᐃᐃⲆ, ᐃ * 6, ᐃ * 43, ᐃ * 5, 76 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃΔⲆΔ, ᐃ * 98, 15 * ᐃ, 130 * ᐃ, 64 * ᐃ, 130 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76, ᐃ * 129, ᐃ * 95, 113 * ᐃ, ᐃ * 97, ᐃ * 97);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔΔⵠΔ], ᐃᐃ[6], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, ᐃ * 403);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 412, 58 * ᐃ, ᐃ * 412, 67 * ᐃ, 403 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66.5, ᐃ * 434, 66.5 * ᐃ, 434 * ᐃ, 66 * ᐃ, 465 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 56, ᐃ * 480, ᐃ * 40, ᐃ * 472, ᐃ * 36, 465 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], ᐃⵠⵠΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 37, ᐃ * 427);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 435, ᐃ * 55, ᐃ * 435, ᐃ * 67, ᐃ * 427);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[8], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, 448 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 454, ᐃ * 54, 457 * ᐃ, ᐃ * 65, 449 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆᐃⲆᐃᐃ], ᐃ * ⲆΔᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, ᐃ * 176);
		Ⲇ.bezierCurveTo(ᐃ * 74, 175 * ᐃ, 82 * ᐃ, 169 * ᐃ, ᐃ * 96, 155 * ᐃ);
		Ⲇ.bezierCurveTo(103 * ᐃ, ᐃ * 183, 95 * ᐃ, ᐃ * 214, ᐃ * 54, ᐃ * 219);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 50, 176 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 25, ᐃ * 177, ᐃ * Ⲇᐃᐃⵠᐃ, 164 * ᐃ, ᐃ * ⵠⲆⲆⵠⲆ, 156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃΔⵠⵠ, ᐃ * 186, ᐃ * 10, 201 * ᐃ, 43 * ᐃ, 220 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ], ᐃᐃ[4], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 59, 67 * ᐃ);
		Ⲇ.bezierCurveTo(47 * ᐃ, ᐃ * 97, ᐃ * ⵠⲆⲆΔΔⵠⲆ, 117 * ᐃ, ᐃ * 11, 110 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 11, 115 * ᐃ, 15 * ᐃ, 122 * ᐃ, ᐃ * 23, 124 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 118, ᐃ * 52, 113 * ᐃ, 62 * ᐃ, ᐃ * 86);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠΔᐃ], ᐃᐃ[ᐃⵠΔΔᐃ], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, 136 * ᐃ, 57 * ᐃ, 134 * ᐃ, ᐃ * 77, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 71, ᐃ * 158, ᐃ * 71, 159 * ᐃ, 66 * ᐃ, 159 * ᐃ);
		Ⲇ.bezierCurveTo(50.5 * ᐃ, 156.5 * ᐃ, ᐃ * 50.5, 156.5 * ᐃ, 35 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 145, 31 * ᐃ, 136 * ᐃ, ᐃ * 31, 125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ⵠⵠΔⵠΔ], ᐃ * ΔⲆΔⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35 * ᐃ, ᐃ * 171);
		Ⲇ.bezierCurveTo(ᐃ * 32, ᐃ * 221, ᐃ * 43, 233 * ᐃ, 70 * ᐃ, ᐃ * 247);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 234, 75 * ᐃ, 230 * ᐃ, 72 * ᐃ, 221 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48, 206 * ᐃ, ᐃ * 54, ᐃ * 188, 50 * ᐃ, ᐃ * 176);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ⲆΔΔΔᐃ], ᐃ * ⲆΔᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(60 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, ᐃ * 69, ᐃ * 65, ᐃ * 71, ᐃ * 67, 77 * ᐃ);
		Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 123, 52 * ᐃ, 137 * ᐃ, ᐃ * 42, 150 * ᐃ);
		Ⲇ.bezierCurveTo(38 * ᐃ, 151 * ᐃ, 38 * ᐃ, ᐃ * 151, 34 * ᐃ, 152 * ᐃ);
		Ⲇ.bezierCurveTo(33 * ᐃ, 146.5 * ᐃ, 33 * ᐃ, ᐃ * 146.5, 32 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49, 118 * ᐃ, 63 * ᐃ, ᐃ * 87, ᐃ * 59, 68 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], ᐃ * ᐃⲆᐃᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 71, ᐃ * 172);
		Ⲇ.bezierCurveTo(ᐃ * 56, ᐃ * 222, ᐃ * 49, ᐃ * 234, ᐃ * 35, ᐃ * 248);
		Ⲇ.bezierCurveTo(ᐃ * 30, 236 * ᐃ, ᐃ * 30, 230 * ᐃ, 31 * ᐃ, ᐃ * 217);
		Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 202, ᐃ * 49, ᐃ * 191, 52 * ᐃ, ᐃ * 172);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35 * ᐃ, 151 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * 165, ᐃ * 31, 173 * ᐃ, 36 * ᐃ, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 56, 185 * ᐃ, 73 * ᐃ, ᐃ * 184, ᐃ * 71, ᐃ * 170);
		Ⲇ.bezierCurveTo(72 * ᐃ, 154 * ᐃ, 71 * ᐃ, ᐃ * 154, 63 * ᐃ, 155 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔⵠ], ᐃᐃ[8], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 53, 113 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, 140 * ᐃ, 75 * ᐃ, 166 * ᐃ, ᐃ * 52, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 29, ᐃ * 168, 41 * ᐃ, 143 * ᐃ, 53 * ᐃ, 112 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆΔΔ], ᐃⵠⵠΔⲆ * ᐃ);
		return ΔΔ
	}

	function Ⲇᐃᐃⵠᐃᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 125 * ᐃ;
		ΔΔ.height = 139 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔΔᐃᐃ;
		Ⲇ.save();
		Ⲇ.translate(63 * ᐃ, 79 * ᐃ);
		Ⲇ.rotate(ΔⲆᐃ);
		ⲆᐃⵠΔ(Ⲇ, 8, ᐃ * 60, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.restore();
		Ⲇ.globalAlpha = ΔᐃⵠΔ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 63, ᐃ * 69);
		Ⲇ.rotate(1);
		ⲆᐃⵠΔ(Ⲇ, Δⵠⵠⵠᐃ, 60 * ᐃ, ⲆᐃΔⵠⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⲆⵠⲆⲆ);
		Ⲇ.rotate(.56);
		ⲆᐃⵠΔ(Ⲇ, ⲆⲆᐃᐃᐃ, 40 * ᐃ, ᐃᐃⵠⵠⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⲆᐃᐃ], 4);
		Ⲇ.rotate(.28);
		ⲆᐃⵠΔ(Ⲇ, 8, ᐃ * 28, ᐃ * ⲆⵠΔᐃⲆ);
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃⵠⵠ]);
		Ⲇ.restore();
		return ΔΔ
	}

	function ⲆᐃΔᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 90 * ᐃ;
		ΔΔ.height = 98 * ᐃ;
		Ⲇ.translate(0, ᐃ * 4);
		if (ᐃⲆ === Ⲇᐃⵠᐃ) {
			Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⲆⵠΔ;
			Ⲇ.save();
			Ⲇ.translate(44 * ᐃ, ᐃ * 50);
			Ⲇ.rotate(1.4);
			ⲆᐃⵠΔ(Ⲇ, ᐃⵠᐃⵠΔ, 41 * ᐃ, ᐃ * 10);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ])
		}
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 44, 44 * ᐃ);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, ⵠᐃⲆⲆⲆ, ᐃ * 41, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ], ᐃᐃ[ᐃⲆⵠᐃ], ᐃΔⲆΔ * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 7, 35 * ᐃ, ᐃ * Ⲇⵠᐃⵠᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ⲆⵠⵠⲆΔ);
		ⲆᐃⵠΔ(Ⲇ, ⲆΔⵠΔᐃ, ᐃ * 23, ᐃ * ⲆΔᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.save();
		Ⲇ.translate(45 * ᐃ, ᐃ * 45);
		Ⲇ.rotate(Δⵠⵠ);
		ᐃΔⵠ(Ⲇ, ᐃ * -9, ᐃ * -25.5, ᐃ * 18, ᐃ * 51, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ], ᐃᐃ[ᐃΔᐃΔ], ᐃ * ⵠⲆΔΔ);
		Ⲇ.save();
		Ⲇ.translate(45 * ᐃ, 45 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -26 * ᐃ, ᐃ * -ⲆⲆⵠⲆⵠ, ᐃ * 52, ᐃ * 18, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ⵠⵠⲆᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 45, 29 * ᐃ, ᐃ * 7);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 45, 61 * ᐃ, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 28 * ᐃ, ᐃ * 45, ᐃ * ᐃⲆⲆΔᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 62 * ᐃ, ᐃ * 45, ᐃ * ΔᐃⵠⲆⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ᐃⵠⲆⲆⵠⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 43 * ᐃ;
		ΔΔ.height = 209 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔΔⲆΔ;
		Ⲇ.translate(ⲆΔᐃ, ᐃ * 10);
		Ⲇ.translate(5 * ᐃ, 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 21, ᐃ * 102.5);
		ᐃΔⵠ(Ⲇ, -ΔⲆΔⲆ * ᐃ, ᐃ * -76.5, 8 * ᐃ, 163 * ᐃ, ΔᐃΔᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.translate(ΔⲆⵠ, Ⲇⵠᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 20, ⵠΔⲆⵠᐃ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 25, 25.5 * ᐃ, 25 * ᐃ, 25.5 * ᐃ, ᐃ * 30, 41 * ᐃ);
		Ⲇ.bezierCurveTo(25.5 * ᐃ, 38.5 * ᐃ, ᐃ * 25.5, 38.5 * ᐃ, ᐃ * 21, 36 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16, ᐃ * 38.5, ᐃΔᐃⲆⵠΔⲆ * ᐃ, 38.5 * ᐃ, ᐃΔᐃⲆᐃⵠᐃ * ᐃ, 41 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(21 * ᐃ, ᐃ * ᐃⵠ);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * ⵠⵠⲆΔᐃⵠⲆ, 28 * ᐃ, 18 * ᐃ, 35 * ᐃ, ᐃ * 35);
		Ⲇ.bezierCurveTo(28.5 * ᐃ, 32 * ᐃ, ᐃ * 28.5, 32 * ᐃ, ᐃ * 22, 29 * ᐃ);
		Ⲇ.bezierCurveTo(14.5 * ᐃ, ᐃ * 32.5, ᐃ * 14.5, ᐃ * 32.5, ᐃ * 7, 36 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⵠᐃⲆⵠΔᐃ, 146 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21, 146 * ᐃ, ᐃ * 21, ᐃ * 146, 28 * ᐃ, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 27.5, ᐃ * 147.5, 27.5 * ᐃ, ᐃ * 147.5, ᐃ * 27, ᐃ * 149);
		Ⲇ.bezierCurveTo(ᐃ * 27, 160 * ᐃ, 27 * ᐃ, 160 * ᐃ, 27 * ᐃ, 171 * ᐃ);
		Ⲇ.bezierCurveTo(27.5 * ᐃ, 171.5 * ᐃ, 27.5 * ᐃ, 171.5 * ᐃ, 28 * ᐃ, ᐃ * 172);
		Ⲇ.bezierCurveTo(21 * ᐃ, ᐃ * 172, 21 * ᐃ, ᐃ * 172, ⵠΔⲆⵠΔᐃⵠ * ᐃ, ᐃ * 172);
		Ⲇ.bezierCurveTo(ΔⲆⵠⲆΔΔⲆ * ᐃ, 171.5 * ᐃ, ᐃᐃⲆⵠⵠⲆᐃ * ᐃ, ᐃ * 171.5, ᐃ * 14, ᐃ * 171);
		Ⲇ.bezierCurveTo(ᐃ * 14.5, ᐃ * 171.5, 14.5 * ᐃ, ᐃ * 171.5, 15 * ᐃ, 172 * ᐃ);
		Ⲇ.bezierCurveTo(15 * ᐃ, 160.5 * ᐃ, 15 * ᐃ, 160.5 * ᐃ, ᐃⲆⵠᐃᐃ * ᐃ, ᐃ * 149);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(21 * ᐃ, ᐃⵠΔⵠⵠ * ᐃ);
		Ⲇ.bezierCurveTo(26.5 * ᐃ, 18.5 * ᐃ, ᐃ * 26.5, ᐃ * 18.5, ᐃ * 32, 31 * ᐃ);
		Ⲇ.bezierCurveTo(27 * ᐃ, 29 * ᐃ, ᐃ * 27, ᐃ * 29, 22 * ᐃ, 27 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, ᐃ * -ⵠⵠᐃᐃ);
		Ⲇ.globalAlpha = ΔΔⲆΔ;
		Ⲇ.translate(0, ᐃⵠⲆᐃⵠ * ᐃ);
		Ⲇ.translate(-5 * ᐃ, ᐃ * -ᐃᐃⵠⵠ);
		Ⲇ.save();
		Ⲇ.translate(21 * ᐃ, 102.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -4 * ᐃ, -76.5 * ᐃ, ΔⲆᐃᐃᐃ * ᐃ, 163 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * 4);
		Ⲇ.translate(0, ᐃ * ᐃⵠⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(20 * ᐃ, ᐃ * 10);
		Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 25.5, 25 * ᐃ, ᐃ * 25.5, ᐃ * 30, ᐃ * 41);
		Ⲇ.bezierCurveTo(25.5 * ᐃ, ᐃ * 38.5, 25.5 * ᐃ, 38.5 * ᐃ, ᐃ * 21, ᐃ * 36);
		Ⲇ.bezierCurveTo(ᐃ * 16, 38.5 * ᐃ, ᐃ * 16, ᐃ * 38.5, 11 * ᐃ, ᐃ * 41);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ], ᐃᐃ[ⲆⵠΔΔⲆ], ᐃ * ⲆⲆⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 21, ᐃ * 1);
		Ⲇ.bezierCurveTo(28 * ᐃ, 18 * ᐃ, ᐃ * 28, 18 * ᐃ, 35 * ᐃ, ᐃ * 35);
		Ⲇ.bezierCurveTo(28.5 * ᐃ, 32 * ᐃ, 28.5 * ᐃ, 32 * ᐃ, ᐃ * 22, 29 * ᐃ);
		Ⲇ.bezierCurveTo(14.5 * ᐃ, 32.5 * ᐃ, ᐃ * 14.5, 32.5 * ᐃ, ᐃᐃΔⵠⵠᐃᐃ * ᐃ, 36 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆΔ], ᐃᐃ[ΔⲆⵠⲆⲆ], ᐃⵠᐃᐃ * ᐃ);
		Ⲇ.translate(0, ᐃ * 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ΔⲆΔⵠⵠΔⲆ * ᐃ, 146 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21, 146 * ᐃ, ᐃ * 21, 146 * ᐃ, ᐃ * 28, 146 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27.5, ᐃ * 147.5, 27.5 * ᐃ, 147.5 * ᐃ, 27 * ᐃ, 149 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27, 160 * ᐃ, 27 * ᐃ, 160 * ᐃ, 27 * ᐃ, 171 * ᐃ);
		Ⲇ.bezierCurveTo(27.5 * ᐃ, 171.5 * ᐃ, 27.5 * ᐃ, 171.5 * ᐃ, 28 * ᐃ, 172 * ᐃ);
		Ⲇ.bezierCurveTo(21 * ᐃ, 172 * ᐃ, 21 * ᐃ, ᐃ * 172, ᐃ * ΔᐃⲆⵠΔⲆⲆ, ᐃ * 172);
		Ⲇ.bezierCurveTo(ΔⲆⵠⲆΔΔⲆ * ᐃ, 171.5 * ᐃ, 14 * ᐃ, 171.5 * ᐃ, ᐃ * ΔᐃⲆⵠΔⲆⲆ, ᐃ * 171);
		Ⲇ.bezierCurveTo(ᐃ * 14.5, 171.5 * ᐃ, 14.5 * ᐃ, ᐃ * 171.5, ᐃᐃⵠᐃⲆᐃⵠ * ᐃ, 172 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃᐃⵠᐃⲆᐃⵠ * ᐃ, ᐃ * 160.5, 15 * ᐃ, 160.5 * ᐃ, ᐃ * 15, ᐃ * 149);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[ⲆⲆⵠΔ], ⵠᐃⵠᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 21, ⵠⲆⵠⵠᐃ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 26.5, ᐃ * 18.5, ᐃ * 26.5, 18.5 * ᐃ, ᐃ * 32, ᐃ * 31);
		Ⲇ.bezierCurveTo(27 * ᐃ, 29 * ᐃ, 27 * ᐃ, 29 * ᐃ, ᐃ * 22, 27 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆΔ]);
		return ΔΔ
	}
	const ᐃΔⵠᐃⲆⲆΔ = {};
	const ⵠⵠⵠⲆⲆΔⲆΔⲆ = {};
	ᐃΔⵠᐃⲆⲆΔ["get"] = function(ᐃᐃΔΔⵠΔᐃ, ΔⵠΔⲆᐃⵠⲆ) {
		if (ΔⵠΔⲆᐃⵠⲆ !== "ᐃΔⵠᐃⲆⲆΔ") {
			const ᐃΔⵠᐃⲆⲆΔ = function() {
				ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
					ᐃΔⵠᐃⲆⲆΔ()
				}))
			};
			ᐃΔⵠᐃⲆⲆΔ()
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ΔᐃᐃⲆⵠΔⲆⵠΔ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ⵠⵠⵠⲆⲆΔⲆΔⲆ, ᐃΔⵠᐃⲆⲆΔ);
	const ⵠⵠⲆᐃⵠᐃⵠⲆⲆ = ΔᐃᐃⲆⵠΔⲆⵠΔ.ᐃΔⵠᐃⲆⲆΔ;

	function ⵠΔⲆΔⵠⲆΔⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 200;
		ΔΔ.height = ᐃ * 200;
		Ⲇ.save();
		Ⲇ.translate(112 * ᐃ, 158 * ᐃ);
		ᐃΔⵠ(Ⲇ, -86.5 * ᐃ, -86 * ᐃ, 150 * ᐃ, ᐃ * 35, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 170, 100 * ᐃ);
		ᐃΔⵠ(Ⲇ, -86.5 * ᐃ, -86 * ᐃ, 35 * ᐃ, ᐃ * 150, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		return ΔΔ
	}

	function ΔᐃⲆᐃⵠΔⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 300;
		ΔΔ.height = 300 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, ᐃ * 160);
		Ⲇ.rotate(6.28);
		ⲆᐃⵠΔ(Ⲇ, ΔⲆΔⲆΔ, ᐃ * 146, ᐃ * 30);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, ᐃ * 150);
		Ⲇ.rotate(6.28);
		ⲆᐃⵠΔ(Ⲇ, 6, 146 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], ⵠᐃᐃΔⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, 150 * ᐃ);
		Ⲇ.rotate(ΔⲆⵠ);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔⵠⵠⲆ, ᐃ * 105, ᐃ * 30);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 8);
		Ⲇ.save();
		Ⲇ.translate(150 * ᐃ, 150 * ᐃ);
		Ⲇ.rotate(ΔΔᐃ);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 66, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃⲆⵠ], ᐃᐃ[2], 8 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, ᐃ * 116);
		ⲆᐃⵠΔ(Ⲇ, ⲆΔⵠΔᐃ, 17 * ᐃ, ᐃ * 8);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠᐃ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 163, 168 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 25, 8 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠᐃ]);
		Ⲇ.save();
		Ⲇ.translate(117 * ᐃ, 151 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 11, ᐃ * 8);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 167, 122 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔΔⲆᐃⵠⵠ, 12 * ᐃ, ΔⲆΔⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(150 * ᐃ, ᐃ * 207);
		Ⲇ.bezierCurveTo(150 * ᐃ, ᐃ * 151, ᐃ * 150, ᐃ * 101, 150 * ᐃ, ᐃ * 94);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆᐃⲆᐃ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, 100 * ᐃ);
		Ⲇ.bezierCurveTo(118 * ᐃ, ᐃ * 205, ᐃ * 118, ᐃ * 207, ᐃ * 118, ᐃ * 200);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 183, ᐃ * 100);
		Ⲇ.bezierCurveTo(183 * ᐃ, 203 * ᐃ, ᐃ * 183, ᐃ * 203, 183 * ᐃ, 200 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠⵠⲆᐃⲆ, ᐃᐃ[ΔⵠΔΔ], ᐃ * ΔᐃᐃⵠΔ);
		return ΔΔ
	}

	function ⵠᐃⲆΔΔⲆᐃⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 81;
		ΔΔ.height = 350 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .6 : 1;
		Ⲇ.translate(0, ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 35, ᐃ * 160);
		Ⲇ.rotate(Ⲇᐃⵠᐃ);
		ᐃΔⵠ(Ⲇ, -ⵠᐃⲆⵠ * ᐃ, -100.5 * ᐃ, ⲆᐃᐃⲆΔ * ᐃ, ᐃ * 240, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.translate(Δⵠⵠ, ᐃ * -ᐃᐃⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -ⵠᐃΔΔⲆ, ᐃᐃⲆΔⲆ * ᐃ);
		Ⲇ.moveTo(ᐃ * 26.0714111328125, ᐃ * 50.9);
		Ⲇ.bezierCurveTo(ᐃ * 32.0714111328125, ᐃ * 35.892852783203125, 39.0714111328125 * ᐃ, ᐃ * 18.892852783203125, ᐃ * 45.0714111328125, 7.892852783203125 * ᐃ);
		Ⲇ.bezierCurveTo(51.0714111328125 * ᐃ, 13.892852783203125 * ᐃ, ᐃ * 56.0714111328125, ᐃ * 36.892852783203125, 60.0714111328125 * ᐃ, 50.892852783203125 * ᐃ);
		Ⲇ.bezierCurveTo(52.5714111328125 * ᐃ, ᐃ * 58.892852783203125, ᐃ * 52.5714111328125, 58.892852783203125 * ᐃ, 45.0714111328125 * ᐃ, ᐃ * 66.89285278320312);
		Ⲇ.bezierCurveTo(37.0714111328125 * ᐃ, ᐃ * 58.892852783203125, 37.0714111328125 * ᐃ, 58.892852783203125 * ᐃ, ᐃ * 29.0714111328125, ᐃ * 50.892852783203125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.restore();
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(0, -ⲆΔⵠᐃⲆ * ᐃ);
		Ⲇ.translate(45.0714111328125 * ᐃ, ᐃ * 149.39285278320312);
		Ⲇ.rotate(ⲆΔᐃ);
		ᐃΔⵠ(Ⲇ, -ᐃⵠⵠΔⲆ * ᐃ, ᐃ * -94.5, ᐃ * 12, ᐃ * 250, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[2], 6 * ᐃ);
		Ⲇ.translate(ⵠⵠⲆⲆ, ᐃ * ΔⲆᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 29.0714111328125, 50.9 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 32.0714111328125, 35.892852783203125 * ᐃ, 39.0714111328125 * ᐃ, 18.892852783203125 * ᐃ, ᐃ * 45.0714111328125, 7.892852783203125 * ᐃ);
		Ⲇ.bezierCurveTo(51.0714111328125 * ᐃ, ᐃ * 13.892852783203125, ᐃ * 56.0714111328125, 36.892852783203125 * ᐃ, ᐃ * 60.0714111328125, 50.892852783203125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 52.5714111328125, ᐃ * 58.892852783203125, 52.5714111328125 * ᐃ, 58.892852783203125 * ᐃ, 45.0714111328125 * ᐃ, 66.89285278320312 * ᐃ);
		Ⲇ.bezierCurveTo(37.0714111328125 * ᐃ, ᐃ * 58.892852783203125, 37.0714111328125 * ᐃ, ᐃ * 58.892852783203125, ᐃ * 29.0714111328125, 50.892852783203125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃ * 6);
		return ΔΔ
	}

	function ⲆⵠⵠᐃⵠⲆᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 501 * ᐃ;
		ΔΔ.height = ᐃ * 309;
		Ⲇ.translate(Δⵠⵠ, 6 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⵠ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(126 * ᐃ, 184 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, ᐃ * 196, 194 * ᐃ, ᐃ * 198, 227 * ᐃ, 198 * ᐃ);
		Ⲇ.bezierCurveTo(235 * ᐃ, 222 * ᐃ, ᐃ * 236, ᐃ * 223, ᐃ * 241, ᐃ * 226);
		Ⲇ.bezierCurveTo(ᐃ * 245, 228 * ᐃ, ᐃ * 257, ᐃ * 228, ᐃ * 263, 226 * ᐃ);
		Ⲇ.bezierCurveTo(267 * ᐃ, ᐃ * 225, ᐃ * 270, ᐃ * 211, 275 * ᐃ, 198 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 332, 194 * ᐃ, ᐃ * 347, ᐃ * 192, ᐃ * 372, 188 * ᐃ);
		Ⲇ.bezierCurveTo(366 * ᐃ, 174.5 * ᐃ, ᐃ * 366, ᐃ * 174.5, 360 * ᐃ, 161 * ᐃ);
		Ⲇ.bezierCurveTo(253.5 * ᐃ, ᐃ * 162, 253.5 * ᐃ, ᐃ * 162, ᐃ * 147, ᐃ * 163);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔΔⵠᐃ, -ΔᐃΔⵠⵠⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔⵠΔⵠⵠ, ᐃ * 116);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 101, ᐃ * 96, 89 * ᐃ, 106 * ᐃ, ᐃ * 83);
		Ⲇ.bezierCurveTo(86 * ᐃ, ᐃ * 79, 86 * ᐃ, ᐃ * 52, 93 * ᐃ, ᐃ * 38);
		Ⲇ.bezierCurveTo(99 * ᐃ, ᐃ * 51, 107 * ᐃ, ᐃ * 57, ᐃ * 122, ᐃ * 63);
		Ⲇ.bezierCurveTo(130 * ᐃ, ᐃ * 53, ᐃ * 141, ᐃ * 46, 161 * ᐃ, 46 * ᐃ);
		Ⲇ.bezierCurveTo(157 * ᐃ, ᐃ * 31, 158 * ᐃ, ᐃ * ⵠⵠΔⵠ, ᐃ * 169, ᐃ * ⲆΔᐃⵠᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 171, ᐃ * 24, 186 * ᐃ, 33 * ᐃ, ᐃ * 198, 45 * ᐃ);
		Ⲇ.bezierCurveTo(252 * ᐃ, ᐃ * 45, 252 * ᐃ, 45 * ᐃ, 306 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 323, ᐃ * 33, ᐃ * 332, 21 * ᐃ, ᐃ * 335, ᐃ * ⲆΔⵠΔᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 349, 21 * ᐃ, ᐃ * 347, ᐃ * 36, 345 * ᐃ, ᐃ * 46);
		Ⲇ.bezierCurveTo(364 * ᐃ, ᐃ * 46, ᐃ * 369, ᐃ * 48, 377 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 398, 58 * ᐃ, 403 * ᐃ, 49 * ᐃ, ᐃ * 409, 40 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 419, 57 * ᐃ, 411 * ᐃ, 79 * ᐃ, 398 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 405, 100 * ᐃ, ᐃ * 405, ᐃ * 106, ᐃ * 401, 118 * ᐃ);
		Ⲇ.bezierCurveTo(332.5 * ᐃ, 128.5 * ᐃ, 332.5 * ᐃ, 128.5 * ᐃ, 264 * ᐃ, 139 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[ⵠᐃⵠΔ], ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(122 * ᐃ, ᐃ * 191);
		Ⲇ.bezierCurveTo(ᐃ * 123, ᐃ * 237, ᐃ * 135, 245 * ᐃ, ᐃ * 153, 259 * ᐃ);
		Ⲇ.bezierCurveTo(167 * ᐃ, 269 * ᐃ, 158 * ᐃ, ᐃ * 281, ᐃ * 118, ᐃ * 276);
		Ⲇ.bezierCurveTo(ᐃ * 104, 273 * ᐃ, 98 * ᐃ, 268 * ᐃ, 93 * ᐃ, ᐃ * 242);
		Ⲇ.bezierCurveTo(89 * ᐃ, ᐃ * 220, 92 * ᐃ, 201 * ᐃ, ᐃ * 102, ᐃ * 179);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⲆⵠᐃ], ᐃ * ΔΔⵠᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(403 * ᐃ, 182 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 414, ᐃ * 215, ᐃ * 412, 232 * ᐃ, 403 * ᐃ, ᐃ * 260);
		Ⲇ.bezierCurveTo(395 * ᐃ, ᐃ * 274, 375 * ᐃ, 272 * ᐃ, 356 * ᐃ, ᐃ * 270);
		Ⲇ.bezierCurveTo(345 * ᐃ, ᐃ * 268, 339 * ᐃ, 262 * ᐃ, 354 * ᐃ, 252 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 370, 242 * ᐃ, 380 * ᐃ, ᐃ * 225, 384 * ᐃ, 184 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠ], ᐃᐃ[ᐃᐃΔⵠ], ⲆᐃΔⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(155 * ᐃ, ᐃ * 157);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 189, ᐃ * 137, 198 * ᐃ, ᐃ * 114, ᐃ * 219);
		Ⲇ.bezierCurveTo(ᐃ * 104, 212 * ᐃ, 98 * ᐃ, ᐃ * 203, ᐃ * 89, ᐃ * 189);
		Ⲇ.bezierCurveTo(82 * ᐃ, ᐃ * 178, 91 * ᐃ, 164 * ᐃ, ᐃ * 93, ᐃ * 136);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃⵠΔⲆ], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 347, 162 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 357, 195 * ᐃ, 376 * ᐃ, ᐃ * 209, 387 * ᐃ, ᐃ * 217);
		Ⲇ.bezierCurveTo(409 * ᐃ, ᐃ * 201, 420 * ᐃ, ᐃ * 181, 416 * ᐃ, 166 * ᐃ);
		Ⲇ.bezierCurveTo(410 * ᐃ, 150 * ᐃ, ᐃ * 412, ᐃ * 149, ᐃ * 408, ᐃ * 130);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[2], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(86 * ᐃ, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 79, 102 * ᐃ, 92 * ᐃ, ᐃ * 84, ᐃ * 108, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 108, ᐃ * 184, 111 * ᐃ, ᐃ * 242, ᐃ * 111);
		Ⲇ.bezierCurveTo(ᐃ * 294, ᐃ * 108, 341 * ᐃ, ᐃ * 105, ᐃ * 386, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 412, 91 * ᐃ, ᐃ * 417, 86 * ᐃ, 415 * ᐃ, 133 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 413, 160 * ᐃ, ᐃ * 413, 160 * ᐃ, 368 * ᐃ, 174 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 308, ᐃ * 184, 291 * ᐃ, ᐃ * 185, 270 * ᐃ, 186 * ᐃ);
		Ⲇ.bezierCurveTo(264 * ᐃ, 206 * ᐃ, 262 * ᐃ, 215 * ᐃ, ᐃ * 253, 215 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 239, 217 * ᐃ, ᐃ * 239, 211 * ᐃ, 231 * ᐃ, 186 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 178, 184 * ᐃ, ᐃ * 156, 179 * ᐃ, ᐃ * 112, ᐃ * 162);
		Ⲇ.bezierCurveTo(87 * ᐃ, 151 * ᐃ, ᐃ * 90, ᐃ * 144, ᐃ * 87, 137 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃⵠΔⲆ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(63 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 121, ᐃ * 109, ᐃ * 102, 124 * ᐃ, 117 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, 136 * ᐃ, 123 * ᐃ, 165 * ᐃ, ᐃ * 94, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 66, 131 * ᐃ, 64 * ᐃ, ᐃ * 115, 63 * ᐃ, ᐃ * 99);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ], ᐃᐃ[2], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 449, ᐃ * 97);
		Ⲇ.bezierCurveTo(446 * ᐃ, 143 * ᐃ, ᐃ * 415, ᐃ * 151, 402 * ᐃ, ᐃ * 155);
		Ⲇ.bezierCurveTo(ᐃ * 386, ᐃ * 157, 373 * ᐃ, 133 * ᐃ, ᐃ * 391, ᐃ * 116);
		Ⲇ.bezierCurveTo(402 * ᐃ, 106 * ᐃ, 432 * ᐃ, ᐃ * 124, ᐃ * 449, ᐃ * 97);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆᐃⲆᐃ], ᐃ * ΔᐃΔᐃⵠ);
		return ΔΔ
	}

	function ΔⵠᐃᐃⲆᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 106;
		ΔΔ.height = ᐃ * 681;
		Ⲇ.translate(20 * ᐃ, 20 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.save();
		Ⲇ.translate(52.5 * ᐃ, ᐃ * 395);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -11.5, -226 * ᐃ, ᐃ * 23, 452 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, ᐃ * 588);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 596, 61 * ᐃ, 594 * ᐃ, ᐃ * 69, ᐃ * 588);
		Ⲇ.bezierCurveTo(79 * ᐃ, ᐃ * 615, 78 * ᐃ, ᐃ * 632, ᐃ * 59, ᐃ * 643);
		Ⲇ.bezierCurveTo(ᐃ * 41, 650 * ᐃ, 27 * ᐃ, ᐃ * 632, 30 * ᐃ, 610 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, ᐃ * 135);
		Ⲇ.bezierCurveTo(61.5 * ᐃ, ᐃ * 142, ᐃ * 61.5, ᐃ * 142, ᐃ * 71, 149 * ᐃ);
		Ⲇ.bezierCurveTo(69.5 * ᐃ, 166 * ᐃ, 69.5 * ᐃ, 166 * ᐃ, ᐃ * 68, 183 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60.5, 187.5 * ᐃ, ᐃ * 60.5, ᐃ * 187.5, 53 * ᐃ, ᐃ * 192);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 187.5, ᐃ * 45, ᐃ * 187.5, ᐃ * 37, ᐃ * 183);
		Ⲇ.bezierCurveTo(ᐃ * 35.5, ᐃ * 167, ᐃ * 35.5, 167 * ᐃ, ᐃ * 34, ᐃ * 151);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(64 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 63, 164 * ᐃ, 63 * ᐃ, 164 * ᐃ, ᐃ * 62, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 58, 181 * ᐃ, 58 * ᐃ, 181 * ᐃ, 54 * ᐃ, 184 * ᐃ);
		Ⲇ.bezierCurveTo(48.5 * ᐃ, 181.5 * ᐃ, 48.5 * ᐃ, 181.5 * ᐃ, 43 * ᐃ, 179 * ᐃ);
		Ⲇ.bezierCurveTo(42 * ᐃ, ᐃ * 164.5, 42 * ᐃ, ᐃ * 164.5, 41 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 152.5, ᐃ * 46, ᐃ * 152.5, ᐃ * 51, ᐃ * 155);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, 39 * ᐃ);
		Ⲇ.bezierCurveTo(65.5 * ᐃ, ᐃ * 82, ᐃ * 65.5, ᐃ * 82, 79 * ᐃ, ᐃ * 125);
		Ⲇ.bezierCurveTo(66 * ᐃ, ᐃ * 137.5, 66 * ᐃ, 137.5 * ᐃ, 53 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 39, 138 * ᐃ, 39 * ᐃ, 138 * ᐃ, 25 * ᐃ, ᐃ * 126);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, ᐃ * 64);
		Ⲇ.bezierCurveTo(ᐃ * 60, 92.5 * ᐃ, 60 * ᐃ, 92.5 * ᐃ, 68 * ᐃ, 121 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 127.5, 61 * ᐃ, 127.5 * ᐃ, ᐃ * 54, ᐃ * 134);
		Ⲇ.bezierCurveTo(46.5 * ᐃ, 127.5 * ᐃ, ᐃ * 46.5, ᐃ * 127.5, 39 * ᐃ, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.translate(-ΔⵠΔⲆⲆⲆⲆ * ᐃ, -20 * ᐃ);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.save();
		Ⲇ.translate(52.5 * ᐃ, ᐃ * 395);
		Ⲇ.rotate(ⵠⲆⲆᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -11.5, ᐃ * -226, 23 * ᐃ, 452 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[2], ΔᐃᐃⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35, 588 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 596, 61 * ᐃ, ᐃ * 594, 69 * ᐃ, 588 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 79, 615 * ᐃ, 78 * ᐃ, ᐃ * 632, ᐃ * 59, ᐃ * 643);
		Ⲇ.bezierCurveTo(41 * ᐃ, ᐃ * 650, 27 * ᐃ, ᐃ * 632, 30 * ᐃ, ᐃ * 610);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ΔⲆΔⲆ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 61.5, ᐃ * 142, ᐃ * 61.5, 142 * ᐃ, ᐃ * 71, ᐃ * 149);
		Ⲇ.bezierCurveTo(ᐃ * 69.5, 166 * ᐃ, ᐃ * 69.5, 166 * ᐃ, 68 * ᐃ, ᐃ * 183);
		Ⲇ.bezierCurveTo(60.5 * ᐃ, ᐃ * 187.5, 60.5 * ᐃ, ᐃ * 187.5, ᐃ * 53, ᐃ * 192);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 187.5, 45 * ᐃ, ᐃ * 187.5, ᐃ * 37, 183 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 35.5, ᐃ * 167, ᐃ * 35.5, ᐃ * 167, ᐃ * 34, 151 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[Ⲇⵠⵠᐃᐃ], ᐃ * ΔⲆᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(64 * ᐃ, 150 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 164, ᐃ * 63, ᐃ * 164, ᐃ * 62, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 58, ᐃ * 181, ᐃ * 58, ᐃ * 181, 54 * ᐃ, 184 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48.5, 181.5 * ᐃ, 48.5 * ᐃ, ᐃ * 181.5, 43 * ᐃ, ᐃ * 179);
		Ⲇ.bezierCurveTo(42 * ᐃ, 164.5 * ᐃ, 42 * ᐃ, 164.5 * ᐃ, 41 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 46, 152.5 * ᐃ, 46 * ᐃ, ᐃ * 152.5, ᐃ * 51, 155 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, ᐃ * 39);
		Ⲇ.bezierCurveTo(ᐃ * 65.5, ᐃ * 82, 65.5 * ᐃ, 82 * ᐃ, 79 * ᐃ, 125 * ᐃ);
		Ⲇ.bezierCurveTo(66 * ᐃ, ᐃ * 137.5, 66 * ᐃ, 137.5 * ᐃ, 53 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 39, 138 * ᐃ, 39 * ᐃ, ᐃ * 138, 25 * ᐃ, 126 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔⵠ], ᐃᐃ[ⵠᐃⵠⲆᐃ], ᐃ * ⵠⵠΔⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(60 * ᐃ, ᐃ * 92.5, ᐃ * 60, 92.5 * ᐃ, 68 * ᐃ, ᐃ * 121);
		Ⲇ.bezierCurveTo(61 * ᐃ, 127.5 * ᐃ, 61 * ᐃ, 127.5 * ᐃ, ᐃ * 54, 134 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 46.5, 127.5 * ᐃ, ᐃ * 46.5, ᐃ * 127.5, 39 * ᐃ, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠᐃ]);
		return ΔΔ
	}

	function ⲆΔⲆⵠΔⲆⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 300;
		ΔΔ.height = 300 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⵠ;
		Ⲇ.save();
		Ⲇ.translate(150 * ᐃ, ᐃ * 160);
		Ⲇ.rotate(6.28);
		ⲆᐃⵠΔ(Ⲇ, ᐃⲆᐃⵠᐃ, 146 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(150 * ᐃ, ᐃ * 150);
		Ⲇ.rotate(6.28);
		ⲆᐃⵠΔ(Ⲇ, ᐃΔΔⲆⲆ, ᐃ * 146, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠᐃⵠΔ], ᐃ * ⵠᐃⵠⵠⵠ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, 150 * ᐃ);
		Ⲇ.rotate(ΔⵠⲆΔ);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 105, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃᐃⵠᐃ], ΔⲆΔⲆⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, 150 * ᐃ);
		Ⲇ.rotate(Δⵠⵠ);
		ⲆᐃⵠΔ(Ⲇ, ᐃΔΔⲆⲆ, 66 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[2], ᐃ * 8);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150, 150 * ᐃ);
		Ⲇ.rotate(0);
		ⲆᐃⵠΔ(Ⲇ, ᐃΔΔⲆⲆ, ᐃ * 31, ᐃ * 30);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆᐃⵠ], ᐃᐃ[6], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(150 * ᐃ, 207 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 150, 151 * ᐃ, ᐃ * 150, 101 * ᐃ, ᐃ * 150, ᐃ * 94);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[ᐃⲆⵠᐃ], ᐃ * ⲆΔⵠⵠⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(118 * ᐃ, 100 * ᐃ);
		Ⲇ.bezierCurveTo(118 * ᐃ, 205 * ᐃ, 118 * ᐃ, ᐃ * 207, ᐃ * 118, 200 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[2], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 183, 100 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183, ᐃ * 203, ᐃ * 183, 203 * ᐃ, 183 * ᐃ, ᐃ * 200);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * ΔⵠΔᐃⵠᐃΔ);
		return ΔΔ
	}

	function ⲆⲆᐃΔΔⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 135;
		ΔΔ.height = 120 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(3.5 * ᐃ, 55.25 * ᐃ);
		Ⲇ.bezierCurveTo(3.5 * ᐃ, 114.25 * ᐃ, ᐃ * 2.5, 109.25 * ᐃ, 3.5 * ᐃ, 112.25 * ᐃ);
		Ⲇ.bezierCurveTo(5.5 * ᐃ, 119.25 * ᐃ, ᐃ * 8.5, ᐃ * 119.25, ᐃ * 11.5, ᐃ * 119.25);
		Ⲇ.bezierCurveTo(15.5 * ᐃ, ᐃ * 114.25, ᐃ * 13.5, 95.25 * ᐃ, 14.5 * ᐃ, 82.25 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ⵠⲆⲆⵠⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 6.5, 43.25 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 3.5, ᐃ * 27.25, 7.5 * ᐃ, 20.25 * ᐃ, ᐃ * 25.5, ᐃ * 11.25);
		Ⲇ.bezierCurveTo(ᐃ * 45.5, -.75 * ᐃ, 73.5 * ᐃ, 1.25 * ᐃ, 107.5 * ᐃ, ᐃ * 10.25);
		Ⲇ.bezierCurveTo(ᐃ * 131.5, ᐃ * 21.25, ᐃ * 125.5, ᐃ * 34.25, ᐃ * 125.5, ᐃ * 36.25);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔⲆΔ], 7 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 120.5, 62.25 * ᐃ);
		Ⲇ.bezierCurveTo(121.5 * ᐃ, ᐃ * 95.25, ᐃ * 120.5, ᐃ * 80.25, ᐃ * 120.5, ᐃ * 100.25);
		Ⲇ.bezierCurveTo(118.5 * ᐃ, 119.25 * ᐃ, 123.5 * ᐃ, ᐃ * 118.25, 129.5 * ᐃ, ᐃ * 113.25);
		Ⲇ.bezierCurveTo(ᐃ * 133.5, 107.25 * ᐃ, 130.5 * ᐃ, 97.25 * ᐃ, ᐃ * 130.5, ᐃ * 87.25);
		Ⲇ.bezierCurveTo(129.5 * ᐃ, ᐃ * 56.25, 130 * ᐃ, 70.75 * ᐃ, ᐃ * 129.5, ᐃ * 54.25);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ], ᐃᐃ[1], ᐃ * ⲆⵠΔΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(17.5 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 48.5, 5 * ᐃ, ᐃ * 93.5, ᐃ * Δⵠᐃⵠⵠ, 118.5 * ᐃ, 26 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132.5, 35 * ᐃ, ᐃ * 133.5, 52 * ᐃ, 132.5 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(125.5 * ᐃ, ᐃ * 87, ᐃ * 116.5, ᐃ * 84, ᐃ * 96.5, ᐃ * 75);
		Ⲇ.bezierCurveTo(ᐃ * 60.5, 66 * ᐃ, ᐃ * 52.5, ᐃ * 74, 37.5 * ᐃ, ᐃ * 78);
		Ⲇ.bezierCurveTo(ᐃ * 2.5, 86 * ᐃ, ᐃ * 3.5, ᐃ * 78, ᐃ * 1.5, ᐃ * 61);
		Ⲇ.bezierCurveTo(1.5 * ᐃ, 37 * ᐃ, ᐃ * 9.5, 32 * ᐃ, 15.5 * ᐃ, ᐃ * 28);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[Ⲇᐃⵠⵠ], 7 * ᐃ);
		return ΔΔ
	}

	function ΔⲆΔΔΔⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 304 * ᐃ;
		ΔΔ.height = 278 * ᐃ;
		Ⲇ.translate(ᐃ * 10, ᐃ * 25);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃⵠΔ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(128 * ᐃ, 137 * ᐃ);
		Ⲇ.bezierCurveTo(155 * ᐃ, 144 * ᐃ, ᐃ * 223, ᐃ * 143, ᐃ * 256, ᐃ * 122);
		Ⲇ.bezierCurveTo(249 * ᐃ, 180 * ᐃ, 210 * ᐃ, 227 * ᐃ, ᐃ * 164, 242 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, 213 * ᐃ, ᐃ * 99, 166 * ᐃ, ᐃ * 127, ᐃ * 138);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 284, ᐃ * 52);
		Ⲇ.bezierCurveTo(ᐃ * 126, ᐃ * 112, 89 * ᐃ, 177 * ᐃ, ᐃ * 170, 241 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 103, ᐃ * 275, ⵠⵠΔⵠ * ᐃ, ᐃ * 239, ᐃ * 12, ᐃ * 159);
		Ⲇ.bezierCurveTo(ᐃ * 5, 76 * ᐃ, 75 * ᐃ, ᐃ * ᐃΔΔΔ, 165 * ᐃ, Δⵠᐃᐃᐃ * ᐃ);
		Ⲇ.bezierCurveTo(233 * ᐃ, ᐃ * 15, 260 * ᐃ, ᐃ * 33, 284 * ᐃ, ᐃ * 52);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.translate(-ⲆᐃᐃᐃⲆ * ᐃ, ᐃ * -25);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 128, 137 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 155, ᐃ * 144, 223 * ᐃ, ᐃ * 143, ⲆΔᐃΔⲆⵠⲆ * ᐃ, 122 * ᐃ);
		Ⲇ.bezierCurveTo(249 * ᐃ, 180 * ᐃ, ᐃ * 210, ᐃ * 227, 164 * ᐃ, ᐃ * 242);
		Ⲇ.bezierCurveTo(74 * ᐃ, 213 * ᐃ, ᐃ * 99, ᐃ * 166, ᐃ * 127, 138 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * ᐃΔⵠⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(284 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(126 * ᐃ, 112 * ᐃ, ᐃ * 89, 177 * ᐃ, ᐃ * 170, 241 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 103, 275 * ᐃ, ᐃ * 20, ᐃ * 239, ᐃ * 12, ᐃ * 159);
		Ⲇ.bezierCurveTo(ᐃ * ⲆΔⵠᐃ, ᐃ * 76, ᐃ * 75, ᐃ * 4, 165 * ᐃ, ᐃ * 13);
		Ⲇ.bezierCurveTo(ᐃ * 233, 15 * ᐃ, 260 * ᐃ, ᐃ * 33, ᐃ * 284, ᐃ * 52);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ], ᐃᐃ[ᐃΔⲆΔ], ᐃΔⲆΔⲆⲆΔ * ᐃ);
		return ΔΔ
	}

	function ΔⲆΔⵠΔⲆᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 175 * ᐃ;
		ΔΔ.height = 169 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ᐃ * ᐃⵠⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 19, ᐃ * 139);
		Ⲇ.bezierCurveTo(ᐃ * ⲆΔⲆⲆⵠᐃΔ, ᐃ * 163, ᐃ * 22, 156 * ᐃ, ᐃ * 53, ᐃ * 157);
		Ⲇ.bezierCurveTo(ᐃ * 97.5, 157 * ᐃ, ᐃ * 97.5, ᐃ * 157, 142 * ᐃ, ᐃ * 157);
		Ⲇ.bezierCurveTo(ᐃ * 150, 157 * ᐃ, ᐃ * 153, ᐃ * 156, ᐃ * 154, 142 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.globalAlpha = ⵠⵠⲆΔ;
		Ⲇ.translate(ΔΔᐃ, ᐃ * -3);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 86.5, ᐃ * 81.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -66.5, ᐃ * -65.5, ᐃ * 133, 131 * ᐃ, ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 84.5, ᐃ * 79);
		ᐃΔⵠ(Ⲇ, -50.5 * ᐃ, -49 * ᐃ, ᐃ * 101, ᐃ * 98, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆⵠΔ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 37, 48 * ᐃ, ᐃ * 39, 44 * ᐃ, 38 * ᐃ, 41 * ᐃ);
		Ⲇ.bezierCurveTo(42 * ᐃ, ᐃ * 40, ᐃ * 45, ᐃ * 40, 50 * ᐃ, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 36, ᐃ * 98, ᐃ * 37, 116 * ᐃ, 42 * ᐃ);
		Ⲇ.bezierCurveTo(132 * ᐃ, 39 * ᐃ, 132 * ᐃ, 39 * ᐃ, ᐃ * 133, ᐃ * 56);
		Ⲇ.bezierCurveTo(136 * ᐃ, 73 * ᐃ, ᐃ * 136, 84 * ᐃ, ᐃ * 132, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 47, 113 * ᐃ, ᐃ * 85.5, ᐃ * 106, ᐃ * 39, ᐃ * 106);
		Ⲇ.bezierCurveTo(32 * ᐃ, 81 * ᐃ, 38 * ᐃ, ᐃ * 60, 42 * ᐃ, ᐃ * 55);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⲆᐃΔΔΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(28 * ᐃ, ᐃ * 24);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -14, -14 * ᐃ, 28 * ᐃ, ᐃ * 28, ᐃ * 4);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[2], ᐃ * ⲆᐃᐃΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 143, ᐃ * 23);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -ⲆᐃⵠΔᐃⵠⲆ, ᐃ * -14, 28 * ᐃ, ᐃ * 28, 4 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55, 80 * ᐃ);
		Ⲇ.bezierCurveTo(73 * ᐃ, 78 * ᐃ, 84 * ᐃ, 74 * ᐃ, ΔΔⲆⵠⲆ * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(ᐃ * 111, ᐃ * 57, ᐃ * 125, 67 * ᐃ, ᐃ * 108, ᐃ * 84);
		Ⲇ.bezierCurveTo(ᐃ * 96, 95 * ᐃ, 86 * ᐃ, ᐃ * 96, 70 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.5, ᐃ * 84, 62.5 * ᐃ, 84 * ᐃ, ᐃ * 55, 80 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ΔΔⲆᐃⲆ * ᐃ, 112 * ᐃ);
		Ⲇ.bezierCurveTo(ΔⲆΔⵠⵠΔⲆ * ᐃ, 146 * ᐃ, ᐃ * 27, ᐃ * 152, ᐃ * 37, 149 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 155 * ᐃ, 128 * ᐃ, ᐃ * 150, 146 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 158, ᐃ * 144, ᐃ * 158, 121 * ᐃ, 153 * ᐃ, ᐃ * 114);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔⵠⵠ], ᐃᐃ[ΔᐃΔⵠⲆΔⲆ], ᐃ * ⲆΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 127, ᐃ * 111);
		Ⲇ.bezierCurveTo(133 * ᐃ, 136 * ᐃ, ᐃ * 115, 149 * ᐃ, 88 * ᐃ, 150 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 119.5, ᐃ * 151, 119.5 * ᐃ, 151 * ᐃ, ᐃ * 151, ᐃ * 152);
		Ⲇ.bezierCurveTo(ᐃ * 159, 136 * ᐃ, 155 * ᐃ, 126 * ᐃ, ᐃ * 154, 113 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ΔⲆⵠ, ⵠⵠⲆⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⲆⲆΔⵠ, ᐃ * 117);
		Ⲇ.bezierCurveTo(ᐃ * 34, ᐃ * 109, ᐃ * 61, 106 * ᐃ, ᐃ * 94, 109 * ᐃ);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 110, ᐃ * 142, 113 * ᐃ, ᐃ * 154, ᐃ * 119);
		Ⲇ.bezierCurveTo(ᐃ * 154, ᐃ * 123, 154 * ᐃ, ᐃ * 123, 154 * ᐃ, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 127, 118 * ᐃ, 15 * ᐃ, 122 * ᐃ, 18 * ᐃ, ᐃ * 129);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		Ⲇ.translate(ⲆⲆⲆ, ᐃ * -ⵠᐃᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(14 * ᐃ, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 13, ᐃ * 117, 12 * ᐃ, ᐃ * 109, ⵠⲆⲆᐃⲆ * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆΔᐃⵠΔᐃ, 95 * ᐃ, 21 * ᐃ, 92 * ᐃ, 60 * ᐃ, ᐃ * 93);
		Ⲇ.bezierCurveTo(ᐃ * 91, ᐃ * 93, 118 * ᐃ, ᐃ * 93, 143 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 96, 155 * ᐃ, ᐃ * 99, 156 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(157 * ᐃ, 124 * ᐃ, 157 * ᐃ, 127 * ᐃ, 156 * ᐃ, ᐃ * 128);
		Ⲇ.bezierCurveTo(138 * ᐃ, ᐃ * 112, ᐃ * ᐃⲆⵠᐃⲆ, 118 * ᐃ, 84 * ᐃ, 118 * ᐃ);
		Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 118, ᐃ * ΔⲆᐃⲆⲆΔⵠ, ᐃ * 120, ᐃ * 16, ᐃ * 127);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ], ᐃᐃ[5], ΔⲆⵠΔΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 27.5, ᐃ * 138.5);
		ᐃΔⵠ(Ⲇ, -13.5 * ᐃ, -14.5 * ᐃ, 27 * ᐃ, ᐃ * 29, ᐃ * ᐃⵠⲆⲆⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ], ᐃᐃ[2], ᐃⵠⲆⲆΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 143.5, 137 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -13.5, ᐃ * -ΔⵠᐃΔΔ, ᐃ * 27, ᐃ * 28, ᐃ * Ⲇⵠⵠᐃᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⲆΔᐃΔ * ᐃ);
		return ΔΔ
	}

	function ΔⵠᐃⵠᐃⵠΔᐃⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 118;
		ΔΔ.height = 129 * ᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 90, 90 * ᐃ);
		ᐃΔⵠ(Ⲇ, -86.5 * ᐃ, -86 * ᐃ, 110 * ᐃ, 110 * ᐃ, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ], ᐃᐃ[1], 4);
		return ΔΔ
	}

	function ᐃⵠΔⵠᐃΔⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 175 * ᐃ;
		ΔΔ.height = 169 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 17, ᐃ * 112);
		Ⲇ.bezierCurveTo(14 * ᐃ, 146 * ᐃ, ᐃ * 27, ᐃ * 152, 37 * ᐃ, ᐃ * 149);
		Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 155, 128 * ᐃ, ᐃ * 150, 146 * ᐃ, ᐃ * 150);
		Ⲇ.bezierCurveTo(158 * ᐃ, ᐃ * 144, 158 * ᐃ, 121 * ᐃ, 153 * ᐃ, 114 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[9], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 127, 111 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, 136 * ᐃ, ᐃ * 115, 149 * ᐃ, ᐃ * 88, ᐃ * 150);
		Ⲇ.bezierCurveTo(ᐃ * 119.5, ᐃ * 151, ᐃ * 119.5, ᐃ * 151, ᐃ * 151, 152 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 136, 155 * ᐃ, ᐃ * 126, 154 * ᐃ, ᐃ * 113);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⲆⵠⲆ, ᐃⵠⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(15 * ᐃ, ᐃ * 117);
		Ⲇ.bezierCurveTo(34 * ᐃ, ᐃ * 109, ᐃ * 61, ᐃ * 106, 94 * ᐃ, ᐃ * 109);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 110, 142 * ᐃ, ᐃ * 113, 154 * ᐃ, ᐃ * 119);
		Ⲇ.bezierCurveTo(154 * ᐃ, ᐃ * 123, ᐃ * 154, 123 * ᐃ, ᐃ * 154, 127 * ᐃ);
		Ⲇ.bezierCurveTo(127 * ᐃ, 118 * ᐃ, ⵠⲆᐃΔⲆ * ᐃ, ᐃ * 122, ᐃ * 18, 129 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.translate(ΔⵠⲆΔ, -3 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(14 * ᐃ, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 13, ᐃ * 117, ᐃ * 12, ᐃ * 109, 15 * ᐃ, ᐃ * 103);
		Ⲇ.bezierCurveTo(16 * ᐃ, ᐃ * 95, ᐃ * 21, ᐃ * 92, 60 * ᐃ, ᐃ * 93);
		Ⲇ.bezierCurveTo(91 * ᐃ, 93 * ᐃ, 118 * ᐃ, ᐃ * 93, 143 * ᐃ, ᐃ * 96);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 96, 155 * ᐃ, 99 * ᐃ, 156 * ᐃ, ᐃ * 112);
		Ⲇ.bezierCurveTo(ᐃ * 157, 124 * ᐃ, 157 * ᐃ, 127 * ᐃ, 156 * ᐃ, 128 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, 112 * ᐃ, 100 * ᐃ, 118 * ᐃ, 84 * ᐃ, ᐃ * 118);
		Ⲇ.bezierCurveTo(ᐃ * 28, 118 * ᐃ, ⵠΔⲆⵠ * ᐃ, 120 * ᐃ, 16 * ᐃ, 127 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ], ᐃᐃ[ⲆΔΔⵠΔ], ᐃ * ΔᐃΔΔⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 27.5, ᐃ * 138.5);
		ᐃΔⵠ(Ⲇ, -13.5 * ᐃ, -14.5 * ᐃ, ᐃ * 27, 29 * ᐃ, ⲆⵠⲆΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[2], 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 143.5, ᐃ * 137);
		ᐃΔⵠ(Ⲇ, -13.5 * ᐃ, ᐃ * -14, 27 * ᐃ, 28 * ᐃ, ᐃΔᐃΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], 5 * ᐃ);
		return ΔΔ
	}

	function ᐃᐃⵠⵠⵠⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 248;
		ΔΔ.height = ᐃ * 128;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 137, ⲆⵠΔΔⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, ᐃ * ᐃΔⵠΔΔⵠⲆ, ᐃ * 212, ᐃ * 9, ᐃ * 241, ᐃ * Δᐃⵠⵠ);
		Ⲇ.bezierCurveTo(ᐃ * 211, 63 * ᐃ, 158 * ᐃ, 92 * ᐃ, 103 * ᐃ, 109 * ᐃ);
		Ⲇ.bezierCurveTo(73 * ᐃ, 126 * ᐃ, ᐃ * 54, 124 * ᐃ, 6 * ᐃ, ᐃ * 99);
		Ⲇ.bezierCurveTo(82 * ᐃ, 63 * ᐃ, ᐃ * 113, 35 * ᐃ, ᐃ * 137, ᐃ * 8);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ], ᐃᐃ[ΔⲆᐃ], ᐃ * 14);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(73 * ᐃ, ᐃ * 124);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 126, ᐃ * 162, 97 * ᐃ, 203 * ᐃ, ᐃ * 61);
		Ⲇ.bezierCurveTo(156 * ᐃ, 98 * ᐃ, 131 * ᐃ, 106 * ᐃ, 105 * ᐃ, 109 * ᐃ);
		Ⲇ.bezierCurveTo(99 * ᐃ, 121 * ᐃ, 87 * ᐃ, 124 * ᐃ, 72 * ᐃ, ᐃ * 124);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 1 * ᐃ);
		return ΔΔ
	}

	function ⲆᐃⵠᐃⲆᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 90;
		ΔΔ.height = 98 * ᐃ;
		Ⲇ.translate(0, ᐃ * ⲆⵠⲆⲆ);
		if (ᐃⲆ === 0) {
			Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃᐃⲆ;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 44, ᐃ * 50);
			Ⲇ.rotate(1);
			ⲆᐃⵠΔ(Ⲇ, Δⵠⵠⵠᐃ, ᐃ * 41, ᐃᐃⵠⵠⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
			Ⲇ.restore()
		}
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 44, 44 * ᐃ);
		Ⲇ.rotate(1);
		ⲆᐃⵠΔ(Ⲇ, ΔⵠΔᐃⵠᐃΔ, 41 * ᐃ, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ], ᐃᐃ[ΔⲆⲆᐃ], 4 * ᐃ);
		Ⲇ.rotate(.56);
		ⲆᐃⵠΔ(Ⲇ, ΔⲆᐃᐃᐃ, ᐃ * 33, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[4], ᐃ * 4);
		Ⲇ.rotate(.28);
		ⲆᐃⵠΔ(Ⲇ, 8, 24 * ᐃ, ᐃⵠΔΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 45, ᐃ * 45);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -ⵠΔⲆⲆᐃ, -25.5 * ᐃ, ⵠᐃⵠᐃⲆᐃΔ * ᐃ, 51 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[4], ᐃ * ΔⵠΔΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 45, 45 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -26, -9 * ᐃ, ᐃ * 52, 18 * ᐃ, 30 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆΔ], ᐃᐃ[ᐃⵠᐃᐃ], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, 45 * ᐃ, ᐃ * 29, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 45, 61 * ᐃ, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 28 * ᐃ, 45 * ᐃ, 7 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 62 * ᐃ, ᐃ * 45, ᐃ * 7);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆᐃΔ]);
		return ΔΔ
	}
	const ΔΔⵠΔⵠΔⲆ = ⵠᐃΔᐃⲆᐃΔ;

	function ⵠᐃᐃΔⵠⲆⵠΔⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 86;
		ΔΔ.height = ᐃ * 45;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⵠⲆⲆᐃⲆ, ⲆΔⲆⲆⲆⲆᐃ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16, ᐃ * 15, ᐃ * 19.5, ᐃ * 9, 24 * ᐃ, 2 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41, 2 * ᐃ, 41 * ᐃ, 2 * ᐃ, ᐃ * 58, 2 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, ᐃ * ⵠΔᐃⲆⵠᐃᐃ, 61 * ᐃ, ᐃ * ΔⵠΔᐃⵠᐃΔ, ᐃ * 65, 13 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[ᐃⵠⵠ], 4);
		Ⲇ.save();
		Ⲇ.translate(43 * ᐃ, 27 * ᐃ);
		Ⲇ.rotate(ΔⲆᐃⲆ);
		ᐃΔⵠ(Ⲇ, -40 * ᐃ, -ⲆⲆᐃΔⵠⲆᐃ * ᐃ, ᐃ * 80, ᐃ * 30, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 4);
		Ⲇ.save();
		Ⲇ.translate(43 * ᐃ, ᐃ * 33);
		Ⲇ.rotate(ΔΔⵠᐃ);
		ᐃΔⵠ(Ⲇ, -ΔΔΔⲆⲆΔᐃ * ᐃ, -4.5 * ᐃ, 34 * ᐃ, ᐃ * 9, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⵠⵠ], 4);
		return ΔΔ
	}

	function ΔⵠΔᐃⵠᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 138 * ᐃ;
		ΔΔ.height = 133 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .3 : 1;
		Ⲇ.translate(ⲆⲆⲆ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 26, ᐃ * 79.640625);
		Ⲇ.bezierCurveTo(13 * ᐃ, ᐃ * 84.640625, 9 * ᐃ, 86.640625 * ᐃ, ⲆΔᐃⵠΔ * ᐃ, 78.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆᐃΔᐃᐃ, ᐃ * 69.640625, ΔⵠΔⵠΔⲆⵠ * ᐃ, 67.640625 * ᐃ, 31 * ᐃ, 62.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 55.640625, 85 * ᐃ, 57.640625 * ᐃ, 104 * ᐃ, 63.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, 69.640625 * ᐃ, 132 * ᐃ, 71.640625 * ᐃ, 131 * ᐃ, 78.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, 91.640625 * ᐃ, ᐃ * 112, 80.640625 * ᐃ, ᐃ * 91, ᐃ * 75.640625);
		Ⲇ.bezierCurveTo(51 * ᐃ, 70.640625 * ᐃ, ᐃ * 45, ᐃ * 74.640625, 28 * ᐃ, ᐃ * 78.640625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⲆΔᐃⲆΔ, ᐃ * 82.640625);
		Ⲇ.bezierCurveTo(40 * ᐃ, 107.640625 * ᐃ, 53 * ᐃ, ᐃ * 104.640625, ᐃ * 67, 106.640625 * ᐃ);
		Ⲇ.bezierCurveTo(101 * ᐃ, 103.640625 * ᐃ, 117 * ᐃ, 93.640625 * ᐃ, ᐃ * 127, 84.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135, ᐃ * 95.640625, 131 * ᐃ, 107.640625 * ᐃ, 110 * ᐃ, 118.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78, ᐃ * 129.640625, ᐃ * 67, 130.640625 * ᐃ, ᐃ * 27, 119.640625 * ᐃ);
		Ⲇ.bezierCurveTo(Ⲇᐃⵠᐃ * ᐃ, ᐃ * 105.640625, ᐃ * ΔⲆᐃⵠᐃ, ᐃ * 83.640625, 10 * ᐃ, 84.640625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.translate(0, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 8, ᐃ * 73.640625);
		Ⲇ.bezierCurveTo(ᐃ * ΔΔⲆᐃⵠ, 23.640625 * ᐃ, ᐃ * 33, 19.640625 * ᐃ, 71 * ᐃ, ᐃ * 17.640625);
		Ⲇ.bezierCurveTo(ᐃ * 129, 19.640625 * ᐃ, 130 * ᐃ, 45.640625 * ᐃ, 130 * ᐃ, 76.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 63.640625, 85 * ᐃ, ᐃ * 63.640625, 73 * ᐃ, 63.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 38, 63.640625 * ᐃ, ᐃ * 33, 66.640625 * ᐃ, ᐃ * 8, ᐃ * 73.640625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔᐃ], ᐃᐃ[ΔⲆⲆᐃ], ᐃⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72, ᐃ * 28.640625);
		Ⲇ.bezierCurveTo(ᐃ * 51, 25.640625 * ᐃ, ᐃ * 56, 7.640625 * ᐃ, 70 * ᐃ, ᐃ * 5.640625);
		Ⲇ.bezierCurveTo(ᐃ * 94, 7.640625 * ᐃ, 87 * ᐃ, 29.640625 * ᐃ, ᐃ * 72, 28.640625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(51 * ᐃ, 26.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 29.640625, 43 * ᐃ, 31.640625 * ᐃ, ᐃ * 42, ᐃ * 37.640625);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆΔΔ], ⲆⵠⲆΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 90, 26.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 100, ᐃ * 28.640625, 98 * ᐃ, 34.640625 * ᐃ, ᐃ * 99, 38.640625 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(26 * ᐃ, 79.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆⵠΔᐃⲆⲆⵠ * ᐃ, 84.640625 * ᐃ, ᐃ * ΔᐃᐃⵠⲆⲆᐃ, 86.640625 * ᐃ, ᐃ * ᐃᐃΔⵠⵠᐃᐃ, 78.640625 * ᐃ);
		Ⲇ.bezierCurveTo(6 * ᐃ, ᐃ * 69.640625, ᐃ * 15, 67.640625 * ᐃ, ᐃ * 31, ᐃ * 62.640625);
		Ⲇ.bezierCurveTo(63 * ᐃ, 55.640625 * ᐃ, ᐃ * 85, ᐃ * 57.640625, 104 * ᐃ, ᐃ * 63.640625);
		Ⲇ.bezierCurveTo(131 * ᐃ, 69.640625 * ᐃ, 132 * ᐃ, ᐃ * 71.640625, 131 * ᐃ, ᐃ * 78.640625);
		Ⲇ.bezierCurveTo(131 * ᐃ, 91.640625 * ᐃ, 112 * ᐃ, ᐃ * 80.640625, 91 * ᐃ, 75.640625 * ᐃ);
		Ⲇ.bezierCurveTo(51 * ᐃ, ᐃ * 70.640625, 45 * ᐃ, ᐃ * 74.640625, 28 * ᐃ, ᐃ * 78.640625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[4], ⲆⵠΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⲆΔⵠⵠⲆ, ᐃ * 82.640625);
		Ⲇ.bezierCurveTo(40 * ᐃ, 107.640625 * ᐃ, ᐃ * 53, ᐃ * 104.640625, ᐃ * 67, 106.640625 * ᐃ);
		Ⲇ.bezierCurveTo(101 * ᐃ, 103.640625 * ᐃ, 117 * ᐃ, ᐃ * 93.640625, ᐃ * 127, 84.640625 * ᐃ);
		Ⲇ.bezierCurveTo(135 * ᐃ, 95.640625 * ᐃ, ᐃ * 131, 107.640625 * ᐃ, 110 * ᐃ, ᐃ * 118.640625);
		Ⲇ.bezierCurveTo(78 * ᐃ, 129.640625 * ᐃ, ᐃ * 67, 130.640625 * ᐃ, ᐃ * 27, ᐃ * 119.640625);
		Ⲇ.bezierCurveTo(0 * ᐃ, 105.640625 * ᐃ, ᐃ * 8, ᐃ * 83.640625, ᐃ * 10, ᐃ * 84.640625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ᐃⵠⲆⲆⲆ);
		return ΔΔ
	}

	function ΔΔΔⲆⵠᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 165;
		ΔΔ.height = ᐃ * 123;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 81, 65 * ᐃ);
		ᐃΔⵠ(Ⲇ, -78 * ᐃ, -54.5 * ᐃ, ᐃ * 156, 109 * ᐃ, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 81, 58 * ᐃ);
		ᐃΔⵠ(Ⲇ, -78 * ᐃ, -54.5 * ᐃ, ᐃ * 156, ᐃ * 109, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[ᐃⵠΔⲆ], 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 81, 58 * ᐃ);
		ᐃΔⵠ(Ⲇ, -69 * ᐃ, ᐃ * -47, ᐃ * 138, ᐃ * 93, ᐃ * ⵠᐃΔᐃⲆᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃᐃ[4], 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 79, ᐃ * 54);
		ᐃΔⵠ(Ⲇ, -34 * ᐃ, -40 * ᐃ, ᐃ * 68, ᐃ * 88, ⲆᐃΔΔⲆⵠᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[5], ⵠⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, 13 * ᐃ);
		Ⲇ.bezierCurveTo(43.5 * ᐃ, 55 * ᐃ, 43.5 * ᐃ, 55 * ᐃ, 43 * ᐃ, ᐃ * 101);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃⲆⵠ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, 13 * ᐃ);
		Ⲇ.bezierCurveTo(115 * ᐃ, ᐃ * 56, ᐃ * 115, 56 * ᐃ, ᐃ * 115, ᐃ * 101);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆᐃⵠᐃ], ᐃΔᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35 * ᐃ, 6 * ᐃ);
		Ⲇ.bezierCurveTo(35 * ᐃ, ᐃ * 56, ᐃ * 36, ᐃ * 109, ᐃ * 35, ᐃ * 110);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[7], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 123, ᐃ * ΔⲆⵠⲆⲆ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 56 * ᐃ, 123 * ᐃ, 56 * ᐃ, 123 * ᐃ, 110 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[ᐃᐃΔⵠⵠᐃᐃ], 4);
		Ⲇ.save();
		Ⲇ.translate(79 * ᐃ, 113 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -ⵠᐃⵠⵠΔⵠⲆ, -ⵠⵠΔⲆ * ᐃ, ᐃ * 36, ᐃ * 4, ⵠΔⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃᐃΔⵠⵠ], ⵠᐃᐃⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 75, ᐃ * 118);
		ᐃΔⵠ(Ⲇ, ᐃ * -6, -2.5 * ᐃ, ⵠΔⲆⵠ * ᐃ, ᐃ * 5, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		return ΔΔ
	}

	function ᐃⵠⲆⲆⲆⲆⲆΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 170 * ᐃ;
		var ΔᐃⲆ = 172 * ᐃ;
		var ᐃᐃΔ = ᐃᐃⲆ / ⵠⵠΔⲆ;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.save();
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < ⲆⲆᐃⵠΔ; ᐃⲆ++) {
			Ⲇ.rotate(Math.PI / 5);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 65, 0);
			ⲆᐃⵠΔ(Ⲇ, 3, ᐃ * 18, ᐃ * 4);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
			Ⲇ.restore()
		}
		Ⲇ.restore();
		ΔⵠⲆ(Ⲇ, 0, 0, ᐃ * 40, Ⲇᐃⵠᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔⲆᐃⲆ], ΔᐃΔⵠⵠⲆᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, ΔⲆⵠ, ⵠⵠⲆⲆ, 20 * ᐃ, ΔⲆⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		return ΔΔ
	}

	function ⲆᐃᐃᐃⲆΔΔ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 151;
		ΔΔ.height = ᐃ * 80;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(133 * ᐃ, ᐃ * 54);
		Ⲇ.bezierCurveTo(ᐃ * 136, 18 * ᐃ, ᐃ * 129, ᐃⲆΔⲆΔⲆᐃ * ᐃ, 114 * ᐃ, Δⵠᐃᐃᐃ * ᐃ);
		Ⲇ.bezierCurveTo(51 * ᐃ, ᐃΔⵠⵠ * ᐃ, 36 * ᐃ, 16 * ᐃ, ᐃ * 34, 16 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⵠᐃᐃΔⲆ, ᐃ * 28, 22 * ᐃ, 56 * ᐃ, ᐃ * 21, 57 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ], ᐃᐃ[ⲆⵠΔᐃ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 130, 40 * ᐃ);
		Ⲇ.bezierCurveTo(132 * ᐃ, ᐃ * 35, ᐃ * 132, ᐃ * 30, 132 * ᐃ, ᐃ * 29);
		Ⲇ.bezierCurveTo(145 * ᐃ, 38 * ᐃ, 144 * ᐃ, 43 * ᐃ, 137 * ᐃ, ᐃ * 54);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ], ᐃᐃ[ᐃⲆⵠΔ], 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃΔΔⲆΔⲆⲆ * ᐃ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(24 * ᐃ, 44 * ᐃ, 215 * ᐃ, 39 * ᐃ, 23 * ᐃ, 44 * ᐃ);
		Ⲇ.bezierCurveTo(19 * ᐃ, 49 * ᐃ, ΔⲆⲆⵠⵠ * ᐃ, ᐃ * 49, ⵠⲆᐃΔⲆ * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆⵠΔΔⲆ * ᐃ, ᐃ * 43, ᐃ * 10, ᐃ * 35, 20 * ᐃ, ᐃ * 32);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ], ᐃᐃ[ΔᐃᐃⲆ], ΔⲆΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(18 * ᐃ, ᐃ * 52);
		Ⲇ.bezierCurveTo(ᐃ * 24, ᐃ * 31, ᐃ * 34, ᐃ * 25, 75 * ᐃ, ᐃ * 23);
		Ⲇ.bezierCurveTo(130 * ᐃ, 24 * ᐃ, ᐃ * 129, 32 * ᐃ, ᐃ * 134, ᐃ * 51);
		Ⲇ.bezierCurveTo(138 * ᐃ, 70 * ᐃ, ᐃ * 126, ᐃ * 72, ᐃ * 90, ᐃ * 73);
		Ⲇ.bezierCurveTo(ⵠᐃⵠⵠΔⵠⲆ * ᐃ, ᐃ * 72, ᐃ * 15, 68 * ᐃ, ⵠⲆⲆΔΔⵠⲆ * ᐃ, 54 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⵠⵠ], 4);
		return ΔΔ
	}

	function ΔⲆΔⲆΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 170 * ᐃ;
		var ΔᐃⲆ = ᐃ * 172;
		var ᐃᐃΔ = ᐃᐃⲆ / 2;
		var ᐃⲆᐃ = ΔᐃⲆ / 2;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ + ᐃ * 7);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 0;
		ΔⵠⲆ(Ⲇ, ⲆⵠⲆ, ΔΔⲆᐃ, 60 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		Ⲇ.translate(ⲆⵠⲆ, ᐃ * -7);
		Ⲇ.save();
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃΔᐃᐃⵠ > ᐃⲆ; ᐃⲆ++) {
			Ⲇ.rotate(Math.PI / 5);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 65, 0);
			ⲆᐃⵠΔ(Ⲇ, ⲆⵠΔᐃ, 20 * ᐃ, 4 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], 4 * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.restore();
		ΔⵠⲆ(Ⲇ, ⵠⲆⲆᐃ, 0, 60 * ᐃ, 0);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⵠⵠⲆΔ], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, ΔΔⲆᐃ, 0, 40 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
		ΔⵠⲆ(Ⲇ, ⲆⵠⲆ, 0, ᐃ * 25);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠᐃ], ᐃᐃ[ⵠΔᐃⲆᐃ], ᐃ * ᐃⵠΔΔᐃ);
		return ΔΔ
	}

	function ⵠⲆΔΔᐃᐃⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 92 * ᐃ;
		ΔΔ.height = ᐃ * 108;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, ᐃ * ⲆⵠΔⲆⲆ);
		Ⲇ.bezierCurveTo(ᐃ * 37, ᐃ * ⲆⲆⵠΔ, 49 * ᐃ, ᐃ * ᐃΔⵠⵠ, 61 * ᐃ, ᐃ * ⲆΔΔᐃᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, ᐃ * 31, 78 * ᐃ, ᐃ * 25, 79 * ᐃ, 37 * ᐃ);
		Ⲇ.bezierCurveTo(76 * ᐃ, ᐃ * 44, ᐃ * 81, 56 * ᐃ, 85 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(91 * ᐃ, 71 * ᐃ, 90 * ᐃ, 78 * ᐃ, 83 * ᐃ, 84 * ᐃ);
		Ⲇ.bezierCurveTo(60 * ᐃ, 98 * ᐃ, ᐃ * 67, ᐃ * 95, ᐃ * 57, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 106, ᐃ * 43, ᐃ * 106, 31 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 22, ᐃ * 91, ΔⲆⲆⵠⵠⲆⵠ * ᐃ, 89 * ᐃ, ⵠⲆⲆⵠⲆ * ᐃ, 84 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃΔⲆⵠ * ᐃ, 77 * ᐃ, 4 * ᐃ, 73 * ᐃ, ᐃ * 7, ᐃ * 60);
		Ⲇ.bezierCurveTo(ΔΔΔΔⵠ * ᐃ, 50 * ᐃ, ⵠΔⲆⲆΔ * ᐃ, 32 * ᐃ, ᐃ * ᐃΔⲆΔⲆⲆΔ, ᐃ * 27);
		Ⲇ.bezierCurveTo(ᐃ * 26, ᐃ * 18, ᐃ * 26, ᐃ * 24, 31 * ᐃ, ᐃ * 10);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ⲆⵠⲆⲆ);
		return ΔΔ
	}

	function ⵠΔᐃⵠᐃⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 170 * ᐃ;
		ΔΔ.height = 170 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, ᐃ * ᐃᐃⲆᐃⵠ);
		Ⲇ.save();
		Ⲇ.translate(85 * ᐃ, ᐃ * 88);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 60, ΔᐃΔᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(85 * ᐃ, 80 * ᐃ);
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ᐃᐃⲆᐃᐃ; ᐃⲆ++) {
			Ⲇ.rotate(Math.PI / 5);
			Ⲇ.save();
			Ⲇ.translate(65 * ᐃ, 0);
			ⲆᐃⵠΔ(Ⲇ, 3, 21 * ᐃ, 4 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[2], 4 * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 0, ⵠⵠⲆⲆ * ᐃ);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, ᐃⵠᐃⵠΔ, ᐃ * 60, Ⲇⵠᐃⵠᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[4], ᐃ * 4);
		Ⲇ.rotate(.64);
		ⲆᐃⵠΔ(Ⲇ, 7, ᐃ * 40, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃⵠⵠ], ᐃᐃ[6], ᐃ * ᐃⵠᐃᐃ);
		Ⲇ.rotate(.12);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔΔⲆᐃⵠⵠ, 23 * ᐃ, ⵠΔⲆⲆΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		return ΔΔ
	}

	function ᐃᐃΔⲆΔΔⲆΔᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 60;
		ΔΔ.height = ᐃ * 60;
		Ⲇ.translate(-25 * ᐃ, -25 * ᐃ);
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(32.5 * ᐃ, ᐃ * 54.5, ᐃ * 32.5, ᐃ * 54.5, ᐃ * 41, 59 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 57, 47 * ᐃ, ᐃ * 57, 47 * ᐃ, 73 * ᐃ, ᐃ * 35);
		Ⲇ.bezierCurveTo(57 * ᐃ, 53 * ᐃ, ᐃ * 57, 53 * ᐃ, ᐃ * 41, ᐃ * 71);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, -ΔⲆⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(32.5 * ᐃ, ᐃ * 54.5, ᐃ * 32.5, ᐃ * 54.5, ᐃ * 41, 59 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 57, ᐃ * 47, 57 * ᐃ, ᐃ * 47, ᐃ * 73, ᐃ * 35);
		Ⲇ.bezierCurveTo(ᐃ * 57, 53 * ᐃ, ᐃ * 57, 53 * ᐃ, ᐃ * 41, 71 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
		return ΔΔ
	}

	function ⵠᐃⲆΔΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = 170 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, ᐃⵠⲆⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 85, ᐃ * 95);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, 7, 60 * ᐃ, ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(85 * ᐃ, ᐃ * 82);
		for (var ᐃⲆ = ΔΔᐃ; ᐃⲆ < 10; ᐃⲆ++) {
			Ⲇ.rotate(Math.PI / 5);
			Ⲇ.save();
			Ⲇ.translate(65 * ᐃ, 0);
			ⲆᐃⵠΔ(Ⲇ, ΔⲆΔⵠ, 21 * ᐃ, ᐃ * 4);
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⲆⲆΔΔ * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 0, ΔΔᐃ * ᐃ);
		Ⲇ.rotate(ᐃⵠ);
		ⲆᐃⵠΔ(Ⲇ, Δⵠⵠⵠᐃ, 60 * ᐃ, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ΔⲆΔⲆ);
		Ⲇ.rotate(.56);
		ⲆᐃⵠΔ(Ⲇ, ᐃⵠΔΔᐃ, ᐃ * 40, 10 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ⲆᐃΔᐃᐃ], ᐃ * 4);
		Ⲇ.rotate(.28);
		ⲆᐃⵠΔ(Ⲇ, ⵠᐃᐃΔⲆ, 28 * ᐃ, ᐃ * ⲆⲆᐃᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.restore();
		return ΔΔ
	}
	const ⲆⵠΔⵠⵠⲆᐃ = String.fromCharCode;
	const ⲆⲆⵠⵠᐃΔΔ = 101;
	const ⵠⲆⵠᐃⲆⵠΔ = 118;
	const ᐃⵠᐃΔᐃΔⲆ = "ⵠΔⵠⵠΔⵠᐃⵠⲆ";
	const ⵠΔΔⲆᐃᐃⲆ = 97;
	const ΔᐃΔⵠΔΔⲆΔΔ = 108;
	const ⵠⵠᐃᐃᐃᐃΔᐃⲆ = ⲆⵠΔⵠⵠⲆᐃ(ⲆⲆⵠⵠᐃΔΔ);
	const ᐃᐃΔΔΔᐃᐃ = ⲆⵠΔⵠⵠⲆᐃ(ⵠⲆⵠᐃⲆⵠΔ);

	function ⵠΔⵠⵠΔⵠᐃⵠⲆ() {
		ΔⵠⲆⵠΔⵠΔ = ⵠΔⵠⵠΔⵠᐃⵠⲆ;
		return ⵠΔⵠⵠΔⵠᐃⵠⲆ
	}
	const ⲆⲆⵠᐃΔⲆΔ = ⲆⵠΔⵠⵠⲆᐃ(ⵠΔΔⲆᐃᐃⲆ);
	const ⲆΔⲆⵠᐃⲆᐃ = ⲆⵠΔⵠⵠⲆᐃ(ΔᐃΔⵠΔΔⲆΔΔ);
	const ⲆⵠⲆⲆⵠⲆⲆΔⲆ = ⵠⵠᐃᐃᐃᐃΔᐃⲆ + ᐃᐃΔΔΔᐃᐃ + ⲆⲆⵠᐃΔⲆΔ + ⲆΔⲆⵠᐃⲆᐃ;
	const ΔⲆⲆⲆⲆⲆⲆⵠᐃ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠⲆⲆⵠⲆⲆΔⲆ];
	const ⲆΔⲆⲆⲆΔⲆⲆⵠ = ΔⲆⲆⲆⲆⲆⲆⵠᐃ(ⵠΔⵠⵠΔⵠᐃⵠⲆ + "try{" + ᐃⵠᐃΔᐃΔⲆ + "();0;}catch(ⲆⲆⵠᐃΔⲆΔ){1;}");
	if (ⲆΔⲆⲆⲆΔⲆⲆⵠ) {
		const ⲆⵠΔⵠⵠⲆᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("mousemove", (function() {
				ⲆⵠΔⵠⵠⲆᐃ()
			}))
		};
		ⲆⵠΔⵠⵠⲆᐃ()
	}

	function ᐃΔⲆΔΔᐃⲆⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 118 * ᐃ;
		ΔΔ.height = ᐃ * 129;
		Ⲇ.save();
		Ⲇ.translate(90 * ᐃ, ᐃ * 90);
		ᐃΔⵠ(Ⲇ, ᐃ * -86.5, ᐃ * -86, ᐃ * 110, ᐃ * 110, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 4);
		Ⲇ.save();
		ᐃΔⵠ(Ⲇ, ᐃ * 30, 115 * ᐃ, 60 * ᐃ, 5 * ᐃ, ᐃ * ⲆΔⲆⲆⲆⲆᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[3], ᐃΔᐃΔ);
		Ⲇ.save();
		ᐃΔⵠ(Ⲇ, 50 * ᐃ, ᐃ * 117, ᐃ * ⵠⵠΔⵠ, ᐃᐃⲆᐃᐃ * ᐃ, ⵠⲆᐃΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠΔ]);
		return ΔΔ
	}
	const ⲆᐃⲆⲆ = ⵠⵠⲆ;

	function ⵠⵠΔⵠⵠ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (ΔΔⵠᐃ == ᐃⲆ) {
			ΔΔ.width = 566 * ᐃ;
			ΔΔ.height = ᐃ * 429;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 312.625, ᐃ * 39.046875);
			Ⲇ.bezierCurveTo(ᐃ * 456.625, ᐃ * 60.046875, 521.625 * ᐃ, ᐃ * 134.046875, ᐃ * 528.625, ᐃ * 199.046875);
			Ⲇ.bezierCurveTo(ᐃ * 540.625, 298.046875 * ᐃ, 491.625 * ᐃ, ᐃ * 364.046875, ᐃ * 405.625, ᐃ * 394.046875);
			Ⲇ.bezierCurveTo(270.625 * ᐃ, ᐃ * 429.046875, ᐃ * 182.625, 395.046875 * ᐃ, ᐃ * 100.625, 344.046875 * ᐃ);
			Ⲇ.bezierCurveTo(15.625 * ᐃ, ᐃ * 283.046875, 20.625 * ᐃ, ᐃ * 195.046875, ᐃ * 33.625, ᐃ * 158.046875);
			Ⲇ.bezierCurveTo(56.625 * ᐃ, ᐃ * 80.046875, 102.625 * ᐃ, ᐃ * 46.046875, ᐃ * 183.625, ᐃ * 33.046875);
			Ⲇ.bezierCurveTo(225.625 * ᐃ, ᐃ * 25.046875, ᐃ * 270.625, ᐃ * 30.046875, ᐃ * 312.625, 39.046875 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ])
		} else if (ΔⲆᐃ == ᐃⲆ) {
			var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var Ⲇ = ΔΔ.getContext(ⵠ[140]);
			ΔΔ.width = ᐃ * 511;
			ΔΔ.height = 408 * ᐃ;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 141.625, 49.296875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 225.625, ᐃ * 10.296875, 320.625 * ᐃ, 16.296875 * ᐃ, 390.625 * ᐃ, 39.296875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 476.625, 71.296875 * ᐃ, ᐃ * 483.625, ᐃ * 142.296875, 486.625 * ᐃ, ᐃ * 197.296875);
			Ⲇ.bezierCurveTo(491.625 * ᐃ, ᐃ * 289.296875, ᐃ * 462.625, 317.296875 * ᐃ, ᐃ * 417.625, ᐃ * 351.296875);
			Ⲇ.bezierCurveTo(ᐃ * 367.625, ᐃ * 385.296875, ᐃ * 313.625, ᐃ * 404.296875, ᐃ * 218.625, 395.296875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 108.625, ᐃ * 381.296875, 81.625 * ᐃ, ᐃ * 350.296875, ᐃ * 52.625, 305.296875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 16.625, ᐃ * 244.296875, 23.625 * ᐃ, ᐃ * 171.296875, ᐃ * 37.625, ᐃ * 145.296875);
			Ⲇ.bezierCurveTo(ᐃ * 65.625, ᐃ * 84.296875, 97.625 * ᐃ, ᐃ * 74.296875, ᐃ * 141.625, ᐃ * 49.296875);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ])
		} else if (2 == ᐃⲆ) {
			var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var Ⲇ = ΔΔ.getContext(ⵠ[140]);
			ΔΔ.width = 504 * ᐃ;
			ΔΔ.height = ᐃ * 408;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 153.625, 46.296875 * ᐃ);
			Ⲇ.bezierCurveTo(271.625 * ᐃ, ᐃ * 17.296875, ᐃ * 345.625, 35.296875 * ᐃ, ᐃ * 410.625, 71.296875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 473.625, ᐃ * 109.296875, ᐃ * 478.625, ᐃ * 167.296875, 473.625 * ᐃ, 205.296875 * ᐃ);
			Ⲇ.bezierCurveTo(462.625 * ᐃ, 295.296875 * ᐃ, ᐃ * 438.625, 316.296875 * ᐃ, ᐃ * 388.625, ᐃ * 345.296875);
			Ⲇ.bezierCurveTo(ᐃ * 331.625, 374.296875 * ᐃ, ᐃ * 273.625, ᐃ * 392.296875, 180.625 * ᐃ, ᐃ * 387.296875);
			Ⲇ.bezierCurveTo(111.625 * ᐃ, 380.296875 * ᐃ, 86.625 * ᐃ, 360.296875 * ᐃ, ᐃ * 51.625, ᐃ * 309.296875);
			Ⲇ.bezierCurveTo(ᐃ * 23.625, ᐃ * 267.296875, 25.625 * ᐃ, 226.296875 * ᐃ, ᐃ * 27.625, 175.296875 * ᐃ);
			Ⲇ.bezierCurveTo(37.625 * ᐃ, ᐃ * 99.296875, 88.625 * ᐃ, 57.296875 * ᐃ, ᐃ * 153.625, ᐃ * 46.296875);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		}
		return ΔΔ
	}

	function ᐃᐃᐃⲆⲆΔⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 139;
		ΔΔ.height = ᐃ * 135;
		Ⲇ.translate(0, ⲆⵠⲆⵠᐃ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆΔᐃⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 32, 77 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆᐃΔᐃᐃ * ᐃ, 41 * ᐃ, ᐃ * ΔⲆΔⲆΔ, 33 * ᐃ, 12 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 27, ᐃ * ᐃΔΔⲆⲆ, 28 * ᐃ, ⵠⵠⲆΔⵠ * ᐃ, ᐃ * 37, ᐃ * 6);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * Δᐃᐃᐃ, ᐃ * 64, ᐃ * 5, 67 * ᐃ, 13 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 36, 73.5 * ᐃ, 25 * ᐃ, ᐃ * 80, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 73.5, 54 * ᐃ, 65 * ᐃ, 74 * ᐃ, 67 * ᐃ, ᐃ * 71);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(65 * ᐃ, ᐃ * 37);
		Ⲇ.bezierCurveTo(105 * ᐃ, 40 * ᐃ, 113 * ᐃ, 39 * ᐃ, 117 * ᐃ, 48 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 126, ᐃ * 70, 128 * ᐃ, ᐃ * 72, ᐃ * 124, ᐃ * 80);
		Ⲇ.bezierCurveTo(112 * ᐃ, ᐃ * 101, 110 * ᐃ, ᐃ * 104, ᐃ * 99, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * ⵠᐃⵠⵠᐃΔⲆ, 55 * ᐃ, ᐃ * 99, ᐃ * 56, 99 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47.5, 79 * ᐃ, 45 * ᐃ, 66 * ᐃ, ᐃ * 39, 59 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃᐃⲆᐃΔ * ᐃ, ᐃ * 99, ᐃ * ⲆⵠΔᐃᐃ, ᐃ * 101, 8 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(19 * ᐃ, 123 * ᐃ, ᐃ * 22, ᐃ * 125, ᐃ * 28, ᐃ * 126);
		Ⲇ.bezierCurveTo(57 * ᐃ, ᐃ * 127, 55 * ᐃ, ᐃ * 127, ᐃ * 58, ᐃ * 120);
		Ⲇ.bezierCurveTo(ᐃ * 82, 86 * ᐃ, 83 * ᐃ, 78 * ᐃ, 82 * ᐃ, ᐃ * 87);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, -10 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 32, 77 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 6, ᐃ * 41, 6 * ᐃ, ᐃ * 33, ᐃ * ⲆⵠⲆⵠⵠⲆⲆ, ᐃ * 27);
		Ⲇ.bezierCurveTo(27 * ᐃ, ⵠⲆΔⲆᐃ * ᐃ, ᐃ * 28, ᐃ * ΔⲆⵠⲆⲆ, 37 * ᐃ, ᐃ * 6);
		Ⲇ.bezierCurveTo(ᐃ * 62, ᐃ * ᐃⲆᐃΔⵠ, ᐃ * 64, ᐃ * ΔⲆⲆⲆⵠ, ᐃ * 67, ᐃ * 13);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 36, 73.5 * ᐃ, ᐃ * 25, ᐃ * 80, 37 * ᐃ);
		Ⲇ.bezierCurveTo(73.5 * ᐃ, 54 * ᐃ, 65 * ᐃ, ᐃ * 74, 67 * ᐃ, 71 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(65 * ᐃ, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 105, 40 * ᐃ, ᐃ * 113, ᐃ * 39, 117 * ᐃ, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 126, ᐃ * 70, ᐃ * 128, 72 * ᐃ, 124 * ᐃ, 80 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, ᐃ * 101, ᐃ * 110, 104 * ᐃ, ᐃ * 99, ᐃ * 104);
		Ⲇ.bezierCurveTo(59 * ᐃ, ᐃ * ⵠΔⵠⲆⲆ, 55 * ᐃ, 99 * ᐃ, ᐃ * 56, 99 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47.5, ᐃ * 79, 45 * ᐃ, 66 * ᐃ, ᐃ * 39, ᐃ * 59);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 5, ᐃ * 99, ᐃ * 5, 101 * ᐃ, 8 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⵠΔΔᐃᐃ, ᐃ * 123, 22 * ᐃ, ᐃ * 125, 28 * ᐃ, 126 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 57, 127 * ᐃ, ᐃ * 55, ᐃ * 127, ᐃ * 58, 120 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 82, 86 * ᐃ, ᐃ * 83, 78 * ᐃ, 82 * ᐃ, ᐃ * 87);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80 * ᐃ, ᐃ * 38);
		Ⲇ.bezierCurveTo(72.5 * ᐃ, 52 * ᐃ, ᐃ * 72.5, ᐃ * 52, 65 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 47.5, 37 * ᐃ, ᐃ * 47.5, ᐃ * 37, ᐃ * 30, ᐃ * 7);
		Ⲇ.bezierCurveTo(ᐃ * 48, 4 * ᐃ, 57 * ᐃ, ᐃ * 4, ᐃ * 64, ⲆᐃᐃᐃⲆ * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 65, 65 * ᐃ);
		Ⲇ.bezierCurveTo(125 * ᐃ, ᐃ * 73, ᐃ * 95.5, ᐃ * 69, 126 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(119 * ᐃ, ᐃ * 98, 106 * ᐃ, 104 * ᐃ, 98 * ᐃ, ᐃ * 103);
		Ⲇ.bezierCurveTo(ᐃ * 84.5, 102 * ᐃ, ᐃ * 84.5, ᐃ * 102, ᐃ * 71, ᐃ * 101);
		Ⲇ.bezierCurveTo(ᐃ * 64, 86 * ᐃ, ᐃ * 64, ᐃ * 86, 57 * ᐃ, ᐃ * 70);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 27, 69 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, ᐃ * 65, ᐃ * 46, 67 * ᐃ, ᐃ * 65, ᐃ * 65);
		Ⲇ.bezierCurveTo(43.5 * ᐃ, 94 * ᐃ, 43.5 * ᐃ, 94 * ᐃ, 22 * ᐃ, 123 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆΔΔΔᐃ * ᐃ, ᐃ * 103, ᐃ * ΔⲆᐃⵠᐃ, 103 * ᐃ, ᐃᐃΔⲆⵠⲆΔ * ᐃ, ᐃ * 103);
		Ⲇ.bezierCurveTo(5 * ᐃ, 98 * ᐃ, ᐃ * ⵠΔⵠᐃⵠΔⵠ, 89 * ᐃ, 26 * ᐃ, ᐃ * 70);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 26, 69 * ᐃ);
		Ⲇ.bezierCurveTo(65 * ᐃ, 60 * ᐃ, 45 * ᐃ, ᐃ * 65, 64 * ᐃ, 60 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, 65 * ᐃ, 63 * ᐃ, ᐃ * 65, ᐃ * 62, 70 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80 * ᐃ, 38 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, 70 * ᐃ, ᐃ * 75, 53 * ᐃ, 70 * ᐃ, ᐃ * 68);
		Ⲇ.bezierCurveTo(65 * ᐃ, ᐃ * 67, ᐃ * 65, ᐃ * 67, 60 * ᐃ, ᐃ * 65);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ⵠᐃⵠΔⵠΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 450;
		ΔΔ.height = 260 * ᐃ;
		Ⲇ.translate(ᐃ * 10, ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * 20, ⵠᐃⲆΔ * ᐃ);
		ᐃΔⵠ(Ⲇ, ΔΔⲆᐃ, ⵠⵠᐃⵠ, 400 * ᐃ, ᐃ * 220, 30 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		Ⲇ.translate(ᐃ * -20, ᐃ * -20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(9 * ᐃ, ᐃ * Δᐃⵠⵠ);
		Ⲇ.bezierCurveTo(ᐃ * 381, ᐃⵠΔⲆ * ᐃ, ᐃ * 197, 4.5 * ᐃ, ᐃ * 385, 4 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 397, ᐃⵠᐃᐃ * ᐃ, 401 * ᐃ, ᐃ * 4, 399 * ᐃ, ᐃ * 23);
		Ⲇ.bezierCurveTo(ᐃ * 367, 27 * ᐃ, 367 * ᐃ, 27 * ᐃ, 335 * ᐃ, 31 * ᐃ);
		Ⲇ.bezierCurveTo(366.5 * ᐃ, ᐃ * 33.5, ᐃ * 366.5, ᐃ * 33.5, 398 * ᐃ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(398 * ᐃ, ᐃ * 41.5, 398 * ᐃ, 41.5 * ᐃ, 398 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(398 * ᐃ, ᐃ * 56, 399 * ᐃ, 56 * ᐃ, ᐃ * 386, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 56.5 * ᐃ, 200.5 * ᐃ, ᐃ * 56.5, 15 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⵠΔⲆΔ, ᐃ * 55, ᐃⵠᐃᐃ * ᐃ, 52 * ᐃ, 4 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(4 * ᐃ, ᐃ * 30.5, ⵠⲆᐃᐃ * ᐃ, ᐃ * 30.5, ᐃΔⲆΔ * ᐃ, ᐃ * 18);
		Ⲇ.bezierCurveTo(16 * ᐃ, ᐃ * 18.5, ᐃ * 16, ᐃ * 18.5, 28 * ᐃ, ᐃ * ⲆᐃⲆⵠⲆΔΔ);
		Ⲇ.bezierCurveTo(18.5 * ᐃ, ⲆⵠᐃⲆⲆ * ᐃ, 18.5 * ᐃ, ᐃ * 12, 9 * ᐃ, 5 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ᐃᐃΔᐃ], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 5, ᐃ * 70);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆᐃⵠ, 58 * ᐃ, ⲆΔΔⵠΔ * ᐃ, 55 * ᐃ, ᐃ * ⲆⵠⲆⵠⲆ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 57, ᐃ * 203, 57 * ᐃ, 389 * ᐃ, ᐃ * 57);
		Ⲇ.bezierCurveTo(ᐃ * 400, 57 * ᐃ, 400 * ᐃ, ᐃ * 59, ᐃ * 400, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 400.5, 83.5 * ᐃ, 400.5 * ᐃ, ᐃ * 83.5, 401 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(402 * ᐃ, 108 * ᐃ, 401 * ᐃ, ᐃ * 108, ᐃ * 388, 108 * ᐃ);
		Ⲇ.bezierCurveTo(201.5 * ᐃ, 108 * ᐃ, 201.5 * ᐃ, ᐃ * 108, ᐃ * ᐃⲆⲆΔⵠ, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ΔΔᐃᐃ * ᐃ, 106 * ᐃ, ΔⲆⲆΔ * ᐃ, ᐃ * 106, 5 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(33 * ᐃ, ᐃ * 84.5, ᐃ * 33, 84.5 * ᐃ, 61 * ᐃ, 82 * ᐃ);
		Ⲇ.bezierCurveTo(33.5 * ᐃ, ᐃ * 76.5, ᐃ * 33.5, 76.5 * ᐃ, ⵠⲆⵠⵠᐃ * ᐃ, ᐃ * 71);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠ], ᐃᐃ[ⵠⲆⲆ], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃΔⵠᐃΔΔΔ, ᐃ * 158);
		Ⲇ.bezierCurveTo(ᐃ * ⵠⵠΔⲆ, ᐃ * 159, ᐃ * 4, 156 * ᐃ, ᐃ * ᐃⵠⲆⲆΔ, 118 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠΔΔᐃ * ᐃ, 110 * ᐃ, 6 * ᐃ, 107 * ᐃ, ᐃ * 26, 109 * ᐃ);
		Ⲇ.bezierCurveTo(206.5 * ᐃ, 109 * ᐃ, 206.5 * ᐃ, 109 * ᐃ, ᐃ * 387, 109 * ᐃ);
		Ⲇ.bezierCurveTo(400 * ᐃ, 108 * ᐃ, ᐃ * 400, ᐃ * 108, ᐃ * 398, ᐃ * 127);
		Ⲇ.bezierCurveTo(ᐃ * 384.5, ᐃ * 130, 384.5 * ᐃ, 130 * ᐃ, ᐃ * 371, 133 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 385.5, ᐃ * 138, 385.5 * ᐃ, 138 * ᐃ, ᐃ * 400, ᐃ * 143);
		Ⲇ.bezierCurveTo(ᐃ * 402, 156 * ᐃ, ᐃ * 402, ᐃ * 162, ᐃ * 385, ᐃ * 160);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[1], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⵠΔΔᐃ, ᐃ * 183);
		Ⲇ.bezierCurveTo(ᐃ * 1, ᐃ * 163, 4 * ᐃ, ᐃ * 158, 28 * ᐃ, ᐃ * 161);
		Ⲇ.bezierCurveTo(207.5 * ᐃ, ᐃ * 161, ᐃ * 207.5, ᐃ * 161, ᐃ * 387, ᐃ * 161);
		Ⲇ.bezierCurveTo(ᐃ * 401, ᐃ * 159, 400 * ᐃ, 164 * ᐃ, 400 * ᐃ, 177 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 364.5, 184 * ᐃ, 364.5 * ᐃ, ᐃ * 184, ᐃ * 329, ᐃ * 191);
		Ⲇ.bezierCurveTo(ᐃ * 364.5, 192.5 * ᐃ, 364.5 * ᐃ, 192.5 * ᐃ, 400 * ᐃ, 194 * ᐃ);
		Ⲇ.bezierCurveTo(403 * ᐃ, 209 * ᐃ, ᐃ * 401, 214 * ᐃ, 385 * ᐃ, ᐃ * 213);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, 213 * ᐃ, 201.5 * ᐃ, 213 * ᐃ, ᐃΔⲆᐃᐃᐃΔ * ᐃ, ᐃ * 213);
		Ⲇ.bezierCurveTo(3 * ᐃ, 213 * ᐃ, 2 * ᐃ, 213 * ᐃ, ᐃ * 4, ᐃ * 198);
		Ⲇ.bezierCurveTo(12.5 * ᐃ, 193 * ᐃ, ᐃ * 12.5, ᐃ * 193, 21 * ᐃ, 188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⵠ], ᐃ * 12);
		ΔⵠⲆ(Ⲇ, ᐃ * 41, 30 * ᐃ, ᐃ * 14.7648230602334);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆΔᐃ], ⵠᐃⲆᐃⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 369, ᐃ * 30, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[1], ⵠᐃⲆΔΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 364, ᐃ * 190, ᐃ * 15.620499351813308);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[ΔᐃⵠΔ], ⵠⲆⲆΔⵠⵠⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 41, ᐃ * 186, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃᐃ[ⲆⲆΔᐃ], 12 * ᐃ);
		return ΔΔ
	}

	function ᐃΔⵠⲆⵠⲆⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * ⲆᐃᐃΔᐃⲆᐃ;
		ΔΔ.height = ᐃ * 100;
		Ⲇ.globalAlpha = .5;
		Ⲇ.fillStyle = ᐃᐃ[0];
		Ⲇ.fillRect(ΔⵠⲆΔ, 0, ΔΔ.width, ΔΔ.height);
		return ΔΔ
	}

	function ⵠⲆᐃᐃᐃᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 253;
		ΔΔ.height = ᐃ * 260;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, ᐃ * 134, ᐃ * 119);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, 124 * ᐃ, 119 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, 127 * ᐃ, ᐃⵠΔⲆⲆ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ]);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, 135 * ᐃ, 81 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 126.5 * ᐃ, 125 * ᐃ, 84 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, ᐃ * 125, ᐃ * 61);
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ᐃⲆⵠΔᐃ], 4 * ᐃ);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, 134 * ᐃ, 40 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔᐃⵠᐃΔ]);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, ᐃ * 126.5, ᐃ * 125, ᐃ * 40);
		Δⵠ(Ⲇ, ᐃᐃ[9]);
		return ΔΔ
	}

	function ᐃⲆΔⵠⲆⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 450 * ᐃ;
		ΔΔ.height = ᐃ * 260;
		var ⵠⵠ = ⵠᐃⵠΔⵠΔᐃ(ᐃ * 1, ⵠⲆΔⲆⵠ, ᐃᐃ);
		Ⲇ.drawImage(ⵠⵠ, ᐃ * Δⵠⵠ, 0 * ᐃ);
		if (1 == ᐃⲆ) {
			Ⲇ.translate(ᐃ * ⵠΔᐃᐃⲆ, 0 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 113, ᐃ * 120, 66 * ᐃ);
			Δⵠ(Ⲇ, ΔΔⵠⲆⵠ, ᐃᐃ[4], 13 * ᐃ);
			var ⵠⵠ = ΔᐃⲆΔⲆⵠⵠ(ᐃ * .65, ΔᐃⲆΔⲆ, [ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[361], ⵠ[516]]);
			Ⲇ.rotate(.7);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * 133, ᐃ * -64);
			Ⲇ.rotate(-.7);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 70, 70 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 113, ᐃ * 120.5, 113 * ᐃ, 120.5 * ᐃ, 156 * ᐃ, 171 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, undefined, ᐃᐃ[4], 13 * ᐃ)
		} else if (2 == ᐃⲆ) {
			Ⲇ.translate(ᐃ * 100, ᐃ * ⵠᐃⲆᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 113, ᐃ * 120, ᐃ * 66);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[4], 13 * ᐃ);
			Ⲇ.translate(ᐃ * 30, ᐃ * 40);
			Ⲇ.save();
			Ⲇ.translate(83.5 * ᐃ, 66.5 * ᐃ);
			ᐃΔⵠ(Ⲇ, ᐃ * -40.5, -29.5 * ᐃ, ᐃ * 81, ᐃ * 59, ΔΔⵠΔⵠΔⲆ * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, "#dff2f7", ⵠ[80], 7 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 22, 82 * ᐃ, ᐃ * ⵠⵠᐃᐃⵠ);
			Δⵠ(Ⲇ, "#dff2f7", ⵠ[80], 7 * ᐃ);
			ΔⵠⲆ(Ⲇ, 145 * ᐃ, 82 * ᐃ, ⵠⲆⵠⲆΔ * ᐃ);
			Δⵠ(Ⲇ, "#dff2f7", ⵠ[80], ᐃ * ΔᐃⵠⲆⵠ);
			var ⵠⵠ = ⲆΔᐃᐃΔ(.5 * ᐃ, true, ["#80500b", "#7c4908"]);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * ⲆⲆᐃⵠΔ, 85 * ᐃ);
			var ⵠⵠ = ⲆΔᐃᐃΔ(.5 * ᐃ, true, ["#80500b", "#7c4908"]);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * 50, 85 * ᐃ);
			var ⵠⵠ = ⲆΔᐃᐃΔ(ᐃ * .5, true, ["#80500b", "#7c4908"]);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * 90, 85 * ᐃ);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ᐃ * ΔΔⲆΔ, ⵠⲆᐃⲆᐃ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 90 * ᐃ, 105 * ᐃ);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ᐃ * 1, ⵠΔΔΔⲆ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 90 * ᐃ, ᐃ * 105);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(1 * ᐃ, ᐃⵠⲆⵠⵠ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 30 * ᐃ, 125 * ᐃ);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ΔᐃⵠΔ * ᐃ, ΔⲆΔΔⵠ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 50 * ᐃ, 115 * ᐃ);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ᐃ * 1, ᐃⵠᐃⵠⲆ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 30 * ᐃ, ⵠᐃⵠⵠΔ * ᐃ);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(1 * ᐃ, true, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 80 * ᐃ, ᐃ * 120);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ᐃ * ΔⲆᐃ, ⲆΔⲆΔᐃ, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * 110, ᐃ * 125);
			var ⵠⵠ = ⵠⲆΔᐃⵠ(ᐃ * 1, true, [ⵠ[58], ⵠ[455]]);
			Ⲇ.drawImage(ⵠⵠ, 120 * ᐃ, 105 * ᐃ)
		} else if (ᐃⲆ == 3) {
			Ⲇ.translate(100 * ᐃ, 0 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 113, ᐃ * 120, ᐃ * 66);
			Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ⲆⲆΔᐃⵠ * ᐃ);
			Ⲇ.translate(ᐃ * 40, 50 * ᐃ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 71, ᐃ * 69);
			ᐃΔⵠ(Ⲇ, ᐃ * -30, ᐃ * -42, 60 * ᐃ, ᐃ * 84, ᐃᐃⲆᐃᐃ * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, undefined, ᐃᐃ[5], ᐃ * 4);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 42, 28 * ᐃ);
			Ⲇ.bezierCurveTo(60 * ᐃ, 31 * ᐃ, ᐃ * 60, ᐃ * 31, ᐃ * 78, 34 * ᐃ);
			Ⲇ.bezierCurveTo(82 * ᐃ, 34 * ᐃ, ᐃ * 84, ᐃ * 37, ᐃ * 83, 45 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 83, 80 * ᐃ, 83 * ᐃ, 80 * ᐃ, 83 * ᐃ, 115 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 83, 120 * ᐃ, ᐃ * 80, 122 * ᐃ, 73 * ᐃ, 120 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 42, 111 * ᐃ, ᐃ * 43, 109 * ᐃ, 41 * ᐃ, 102 * ᐃ);
			Ⲇ.bezierCurveTo(41 * ᐃ, 71 * ᐃ, ᐃ * 41, ᐃ * 71, ᐃ * 41, ᐃ * 40);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆΔ], ᐃᐃ[ᐃᐃⵠⵠ], ⲆⵠⲆΔⲆ * ᐃ);
			Ⲇ.translate(-40 * ᐃ, -50 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 70, ᐃ * 70);
			Ⲇ.bezierCurveTo(ᐃ * 113, ᐃ * 120.5, 113 * ᐃ, ᐃ * 120.5, ᐃ * 156, ᐃ * 171);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃⵠᐃⲆ], ⲆⵠⲆΔⲆᐃⵠ * ᐃ)
		} else ᐃⲆ == ⲆⲆⲆⵠᐃ && (Ⲇ.scale(1, 1), Ⲇ.translate(ᐃ * 70, 50 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(23 * ᐃ, 6 * ᐃ), Ⲇ.bezierCurveTo(25.5 * ᐃ, 56 * ᐃ, ᐃ * 25.5, 56 * ᐃ, 28 * ᐃ, ᐃ * 106), Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[ᐃⵠⲆⲆΔ], Δⵠᐃⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(59 * ᐃ, ᐃ * 10), Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 51.5, 61 * ᐃ, ᐃ * 51.5, ᐃ * 63, ᐃ * 93), Δⵠ(Ⲇ, ᐃΔΔⲆⵠ, ᐃᐃ[ⲆΔᐃΔ], ᐃ * Δᐃⵠᐃᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * ᐃᐃΔⵠⵠᐃᐃ, ᐃ * 55), Ⲇ.bezierCurveTo(33.5 * ᐃ, 55 * ᐃ, ᐃ * 33.5, 55 * ᐃ, ᐃ * 60, ᐃ * 55), Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃᐃΔᐃ], 14 * ᐃ), Ⲇ.translate(ᐃ * ΔᐃΔᐃⵠ, ᐃⵠΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(123 * ᐃ, ᐃⲆⵠᐃⲆᐃⵠ * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 103, ᐃ * 16.5, 103 * ᐃ, ᐃ * 16.5, ᐃ * 83, ᐃ * 17), Ⲇ.bezierCurveTo(ᐃ * 83.5, 61 * ᐃ, ᐃ * 83.5, ᐃ * 61, 84 * ᐃ, ᐃ * 105), Ⲇ.bezierCurveTo(ᐃ * 106, 105 * ᐃ, ᐃ * 106, 105 * ᐃ, 128 * ᐃ, ᐃ * 105), Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ᐃᐃ[ΔⲆⲆⲆⵠ], ᐃ * ⵠΔⲆⵠΔᐃⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(72 * ᐃ, 63 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 88.5, 62.5 * ᐃ, ᐃ * 88.5, ᐃ * 62.5, ᐃ * 105, ᐃ * 62), Δⵠ(Ⲇ, undefined, ᐃᐃ[5], 14 * ᐃ), Ⲇ.translate(ᐃ * ᐃᐃⵠᐃΔ, ᐃ * ᐃᐃⵠᐃΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 141, ᐃ * 8), Ⲇ.bezierCurveTo(ᐃ * 143, 50 * ᐃ, 143 * ᐃ, 50 * ᐃ, 145 * ᐃ, 92 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 169, 88.5 * ᐃ, 169 * ᐃ, 88.5 * ᐃ, ᐃ * 193, 85 * ᐃ), Δⵠ(Ⲇ, undefined, ᐃᐃ[5], 14 * ᐃ), Ⲇ.translate(ⲆⵠⲆⵠᐃ * ᐃ, -10 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 205, ᐃ * 124), Ⲇ.bezierCurveTo(205 * ᐃ, 69 * ᐃ, 205 * ᐃ, 69 * ᐃ, ᐃ * 205, 14 * ᐃ), Ⲇ.bezierCurveTo(239 * ᐃ, ᐃ * 15, ᐃ * 250, 37 * ᐃ, 249 * ᐃ, ᐃ * 49), Ⲇ.bezierCurveTo(ᐃ * 251, ᐃ * 65, 242 * ᐃ, 76 * ᐃ, ᐃ * 206, 75 * ᐃ), Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃⵠⲆⲆΔ], ΔⵠᐃⵠⵠⵠⲆ * ᐃ));
		return ΔΔ
	}

	function ⲆᐃΔᐃΔΔⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 149;
		ΔΔ.height = ᐃ * 153;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 74.5 * ᐃ, 85 * ᐃ, 66 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.globalAlpha = ⵠⵠⲆΔ;
		ΔⵠⲆ(Ⲇ, ᐃ * 75.5, 72.5 * ᐃ, 67 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 75.5 * ᐃ, ᐃ * 73.5, 54 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 74.5 * ᐃ, ᐃ * 80.5, 39 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆΔⲆ]);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		ΔⵠⲆ(Ⲇ, ᐃ * 74.5, ᐃ * 74.5, 37 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
		return ΔΔ
	}

	function ᐃᐃⵠⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 69 * ᐃ;
		ΔΔ.height = ᐃ * 120;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠᐃΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(30 * ᐃ, ᐃ * 84);
		ᐃΔⵠ(Ⲇ, -ⲆᐃΔᐃᐃ * ᐃ, ᐃ * -66.5, ᐃ * ⲆΔΔΔᐃ, 100 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
		Ⲇ.save();
		Ⲇ.translate(30 * ᐃ, 45 * ᐃ);
		ᐃΔⵠ(Ⲇ, -9.5 * ᐃ, -6.5 * ᐃ, ᐃ * ΔᐃⲆⲆᐃⵠⲆ, ᐃ * ΔᐃⵠⵠⲆΔⵠ, ⲆΔⵠᐃⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.save();
		Ⲇ.translate(30 * ᐃ, ᐃⵠⲆⲆᐃⵠⲆ * ᐃ);
		ᐃΔⵠ(Ⲇ, -7.5 * ᐃ, ᐃ * -5.5, 12 * ᐃ, 11 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(30 * ᐃ, ᐃ * 31);
		ᐃΔⵠ(Ⲇ, -26 * ᐃ, ᐃ * -14.5, 52 * ᐃ, 29 * ᐃ, Δᐃⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(36 * ᐃ, 79.140625 * ᐃ);
		ᐃΔⵠ(Ⲇ, -ⵠᐃΔΔⲆ * ᐃ, -66.5 * ᐃ, ⲆΔΔΔᐃ * ᐃ, ᐃΔⵠΔᐃ * ᐃ, ᐃⵠⲆᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠΔⲆΔ], ᐃ * 3);
		Ⲇ.save();
		Ⲇ.translate(35 * ᐃ, 40.140625 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -9.5, -6.5 * ᐃ, ᐃⵠⲆⲆⲆⵠⲆ * ᐃ, ᐃ * 13, ᐃ * ᐃᐃⲆᐃᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * ⲆⵠⵠⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 35, 12.140625 * ᐃ);
		ᐃΔⵠ(Ⲇ, -7.5 * ᐃ, ᐃ * -5.5, 12 * ᐃ, ᐃΔᐃⵠΔ * ᐃ, ᐃ * ⲆᐃΔⵠⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 3);
		Ⲇ.save();
		Ⲇ.translate(34.5 * ᐃ, ᐃ * 26.140625);
		ᐃΔⵠ(Ⲇ, -26 * ᐃ, ᐃ * -14.5, 52 * ᐃ, ᐃ * 29, ᐃ * ⲆΔⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[4], ⵠⵠⲆⵠ * ᐃ);
		return ΔΔ
	}

	function ⵠⲆⲆᐃⵠⲆΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 173;
		ΔΔ.height = ᐃ * 178;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, ᐃ * 86.5, ᐃ * 98, 80 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		ΔⵠⲆ(Ⲇ, 86.5 * ᐃ, 89 * ᐃ, 81 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, 86.5 * ᐃ, 86 * ᐃ, 59 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔΔᐃ], ᐃ * ᐃⵠᐃᐃ);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 86.5 * ᐃ, 95 * ᐃ, ᐃ * 34);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠⵠⲆΔ;
		ΔⵠⲆ(Ⲇ, 86.5 * ᐃ, ᐃ * 89, 34 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ΔᐃΔᐃᐃⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 345 * ᐃ;
		ΔΔ.height = ᐃ * 250;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 100.5, 43 * ᐃ, ᐃ * 100.5, 43 * ᐃ, ᐃ * 96, 28 * ᐃ);
		Ⲇ.bezierCurveTo(119.5 * ᐃ, ᐃ * 33.5, ᐃ * 119.5, ᐃ * 33.5, ᐃ * 143, ᐃ * 39);
		Ⲇ.bezierCurveTo(ᐃ * 170, ᐃ * 37, 177 * ᐃ, 37 * ᐃ, 188 * ᐃ, 40 * ᐃ);
		Ⲇ.bezierCurveTo(213 * ᐃ, ᐃ * 33.5, ᐃ * 213, 33.5 * ᐃ, 238 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 231, ᐃ * 52, ᐃ * 234, ᐃ * 42.5, ᐃ * 230, ᐃ * 58);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔᐃⵠⲆ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 108, ᐃ * 51);
		Ⲇ.bezierCurveTo(ᐃ * 91, 55 * ᐃ, 85 * ᐃ, ᐃ * 44, ᐃ * 86, 29 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 50, ᐃ * 78, 69 * ᐃ, 92 * ᐃ, 75 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 249, ᐃ * 27);
		Ⲇ.bezierCurveTo(273 * ᐃ, 49 * ᐃ, 262 * ᐃ, 68 * ᐃ, ᐃ * 246, 77 * ᐃ);
		Ⲇ.bezierCurveTo(231 * ᐃ, 59 * ᐃ, 236 * ᐃ, ᐃ * 66.5, ᐃ * 226, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 243, ᐃ * 53, ᐃ * 252, ᐃ * 43, 249 * ᐃ, ᐃ * 28);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃᐃ[ᐃΔᐃΔ], ΔⲆᐃᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87 * ᐃ, 78 * ᐃ);
		Ⲇ.bezierCurveTo(87 * ᐃ, 59 * ᐃ, ᐃ * 98, 46 * ᐃ, ᐃ * 127, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 176, ᐃ * 48.5, ᐃ * 176, ᐃ * 48.5, 225 * ᐃ, 49 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 243, 49 * ᐃ, ᐃ * 253, 59 * ᐃ, ᐃ * 253, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * 211, 85.5 * ᐃ, ᐃ * 211, ᐃ * 85.5, 169 * ᐃ, ᐃ * 95);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ᐃΔΔⲆⲆ], ⲆᐃⲆᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56, 105 * ᐃ);
		Ⲇ.bezierCurveTo(56 * ᐃ, 92 * ᐃ, 59 * ᐃ, 86 * ᐃ, ᐃ * 65, 73 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.5, ᐃ * 61.5, 62.5 * ᐃ, ᐃ * 61.5, 60 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(99.5 * ᐃ, 64.5 * ᐃ, ᐃ * 99.5, ᐃ * 64.5, ᐃ * 139, 79 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 164, 77 * ᐃ, ᐃ * 177, 76 * ᐃ, ᐃ * 203, 78 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 242, 63.5 * ᐃ, 242 * ᐃ, ᐃ * 63.5, ᐃ * 281, 49 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 279, ᐃ * 60.5, 279 * ᐃ, ᐃ * 60.5, 277 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(286 * ᐃ, ᐃ * 88, ᐃ * 286, ᐃ * 96, 287 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 228.5, 127 * ᐃ, 228.5 * ᐃ, 127 * ᐃ, 170 * ᐃ, ᐃ * 150);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[2], ᐃᐃΔⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 48, ᐃ * 130);
		Ⲇ.bezierCurveTo(ᐃ * 61, 155 * ᐃ, 63 * ᐃ, 165 * ᐃ, 56 * ᐃ, 171 * ᐃ);
		Ⲇ.bezierCurveTo(48 * ᐃ, ᐃ * 177, 40 * ᐃ, ᐃ * 171, ᐃ * 38, ᐃ * 178);
		Ⲇ.bezierCurveTo(33 * ᐃ, ᐃ * 180, 37 * ᐃ, 188 * ᐃ, 47 * ᐃ, 208 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, 221 * ᐃ, 55 * ᐃ, ᐃ * 222, ᐃ * 75, 229 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, ᐃ * 213, 98 * ᐃ, ᐃ * 212, 112 * ᐃ, ᐃ * 219);
		Ⲇ.bezierCurveTo(ᐃ * 167, 225 * ᐃ, ᐃ * 187, 224 * ᐃ, 222 * ᐃ, 220 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 244, ᐃ * 214, 247 * ᐃ, ᐃ * 213, 263 * ᐃ, ᐃ * 229);
		Ⲇ.bezierCurveTo(ᐃ * 295, 220 * ᐃ, 291 * ᐃ, 215 * ᐃ, ᐃ * 301, ᐃ * 194);
		Ⲇ.bezierCurveTo(ᐃ * 308, ᐃ * 178, 309 * ᐃ, ᐃ * 176, 302 * ᐃ, ᐃ * 173);
		Ⲇ.bezierCurveTo(290 * ᐃ, ᐃ * 177, ᐃ * 289, ᐃ * 177, 283 * ᐃ, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 279, ᐃ * 163, 279 * ᐃ, 161 * ᐃ, 290 * ᐃ, ᐃ * 130);
		Ⲇ.bezierCurveTo(270 * ᐃ, ᐃ * 127, ᐃ * 270, ᐃ * 127, 250 * ᐃ, 124 * ᐃ);
		Ⲇ.bezierCurveTo(209 * ᐃ, ᐃ * 137.5, ᐃ * 209, 137.5 * ᐃ, 168 * ᐃ, 151 * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, 135 * ᐃ, 121 * ᐃ, ᐃ * 135, ᐃ * 74, ᐃ * 119);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔᐃ], ᐃᐃ[ⵠⲆΔΔ], ⲆⵠΔᐃⲆ * ᐃ);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, ᐃ * 158);
		Ⲇ.bezierCurveTo(ᐃ * 152, ᐃ * 193, 158 * ᐃ, ᐃ * 205, ᐃ * 140, 203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, ᐃ * 195, ᐃ * 96, ᐃ * 189, 86 * ᐃ, ᐃ * 173);
		Ⲇ.bezierCurveTo(ᐃ * 80, ᐃ * 159, ᐃ * 88, ᐃ * 145, ᐃ * 104, ᐃ * 141);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(215 * ᐃ, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 167, ᐃ * 204, 167 * ᐃ, ᐃ * 193, 188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 187, 201 * ᐃ, ᐃ * 191, 209 * ᐃ, ᐃ * 213, ᐃ * 201);
		Ⲇ.bezierCurveTo(247 * ᐃ, 192 * ᐃ, 253 * ᐃ, 181 * ᐃ, ᐃ * 257, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 260, 157 * ᐃ, ᐃ * 254, ᐃ * 149, 243 * ᐃ, ᐃ * 141);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ΔᐃᐃⵠΔ], 8 * ᐃ);
		Ⲇ.globalCompositeOperation = ⵠ[190];
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, 158 * ᐃ);
		Ⲇ.bezierCurveTo(152 * ᐃ, ᐃ * 193, 158 * ᐃ, ᐃ * 205, ᐃ * 140, 203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99, ᐃ * 195, 96 * ᐃ, 189 * ᐃ, 86 * ᐃ, 173 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, 159 * ᐃ, 88 * ᐃ, 145 * ᐃ, ᐃ * 104, ᐃ * 141);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[8], ⵠᐃᐃΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 215, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 167, 204 * ᐃ, 167 * ᐃ, 193 * ᐃ, 188 * ᐃ);
		Ⲇ.bezierCurveTo(187 * ᐃ, ᐃ * 201, 191 * ᐃ, ᐃ * 209, 213 * ᐃ, ᐃ * 201);
		Ⲇ.bezierCurveTo(247 * ᐃ, ᐃ * 192, 253 * ᐃ, ᐃ * 181, ᐃ * 257, 169 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 260, 157 * ᐃ, 254 * ᐃ, 149 * ᐃ, 243 * ᐃ, ᐃ * 141);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[ΔⲆᐃᐃᐃ], ᐃ * ᐃᐃΔⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 39, ᐃ * 66);
		Ⲇ.bezierCurveTo(57 * ᐃ, ᐃ * 107, ᐃ * 63, ᐃ * 96, ᐃ * 120, 106 * ᐃ);
		Ⲇ.bezierCurveTo(154 * ᐃ, 112 * ᐃ, ᐃ * 163, 116 * ᐃ, 174 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(180 * ᐃ, 109 * ᐃ, 191 * ᐃ, ᐃ * 113, 237 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(276 * ᐃ, 100 * ᐃ, 289 * ᐃ, ᐃ * 94, 301 * ᐃ, ᐃ * 67);
		Ⲇ.bezierCurveTo(ᐃ * 317, ᐃ * 112, ᐃ * 301, ᐃ * 141, 274 * ᐃ, 139 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 166, ᐃ * 197, ᐃ * 169, ᐃ * 173, 183 * ᐃ);
		Ⲇ.bezierCurveTo(170 * ᐃ, ᐃ * 183, ᐃ * 170, ᐃ * 183, ᐃ * 167, 183 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132, ᐃ * 160, ᐃ * 112, ᐃ * 156, ᐃ * 73, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 43, 146 * ᐃ, ᐃ * 27, 120 * ᐃ, ᐃ * 39, 66 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ΔⲆᐃᐃᐃ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115 * ᐃ, ᐃ * 185);
		Ⲇ.bezierCurveTo(ᐃ * 115, 200 * ᐃ, 118 * ᐃ, ᐃ * 206, 124 * ᐃ, ᐃ * 212);
		Ⲇ.bezierCurveTo(133 * ᐃ, 223 * ᐃ, 132 * ᐃ, 231 * ᐃ, 121 * ᐃ, 230 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 226, 108 * ᐃ, 215 * ᐃ, 107 * ᐃ, ᐃ * 209);
		Ⲇ.bezierCurveTo(106 * ᐃ, 201 * ᐃ, 110 * ᐃ, ᐃ * 196, 114 * ᐃ, ᐃ * 185);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[4], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(226 * ᐃ, ᐃ * 186);
		Ⲇ.bezierCurveTo(234 * ᐃ, 201 * ᐃ, ᐃ * 238, ᐃ * 209, 228 * ᐃ, 225 * ᐃ);
		Ⲇ.bezierCurveTo(223 * ᐃ, ᐃ * 233, 213 * ᐃ, ᐃ * 233, ᐃ * 211, ᐃ * 226);
		Ⲇ.bezierCurveTo(206 * ᐃ, 219 * ᐃ, 217 * ᐃ, ᐃ * 216, ᐃ * 221, ᐃ * 207);
		Ⲇ.bezierCurveTo(ᐃ * 225, ᐃ * 196, 225 * ᐃ, 191 * ᐃ, 226 * ᐃ, 186 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃᐃ[ⲆⵠⲆⲆ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(172 * ᐃ, 110 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 189, ᐃ * 153, 192 * ᐃ, 160 * ᐃ, 188 * ᐃ, 175 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183, 190 * ᐃ, ᐃ * 176, 197 * ᐃ, ᐃ * 165, ᐃ * 191);
		Ⲇ.bezierCurveTo(ᐃ * 153, 181 * ᐃ, ᐃ * 152, 166 * ᐃ, ᐃ * 157, ᐃ * 151);
		Ⲇ.bezierCurveTo(164.5 * ᐃ, ᐃ * 131, 164.5 * ᐃ, 131 * ᐃ, ᐃ * 172, ᐃ * 111);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆⲆⵠᐃ], ᐃ * 8);
		return ΔΔ
	}

	function ⵠᐃⵠⲆⵠⵠΔᐃᐃ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 321 * ᐃ;
		ΔΔ.height = ᐃ * 345;
		Ⲇ.translate(ΔⲆⵠ, ⵠΔⲆⲆΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 161.00003051757812, ᐃ * 165.40341186523438, 20.808652046684813 * ᐃ);
		Δⵠ(Ⲇ, ⵠ[388], ⵠ[163], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(162.00003051757812 * ᐃ, 48.403411865234375 * ᐃ);
		Ⲇ.bezierCurveTo(172.50003051757812 * ᐃ, 67.40341186523438 * ᐃ, 172.50003051757812 * ᐃ, ᐃ * 67.40341186523438, ᐃ * 183.00003051757812, 86.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(160.50003051757812 * ᐃ, ᐃ * 86.40341186523438, 160.50003051757812 * ᐃ, 86.40341186523438 * ᐃ, 138.00003051757812 * ᐃ, 86.40341186523438 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[388], ⵠ[163], ᐃ * 10);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 161.50003051757812, 117.90341186523438 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -5.5, ᐃ * -37.5, 11 * ᐃ, 75 * ᐃ, ΔΔⵠᐃⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ⵠ[388], ⵠ[163], ᐃ * 10);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 162.00003051757812, 78.90341186523438 * ᐃ);
		ᐃΔⵠ(Ⲇ, -10 * ᐃ, ᐃ * -5.5, ᐃ * ⲆᐃᐃΔᐃ, ᐃ * ᐃⲆⲆΔΔⲆΔ, ᐃ * ΔΔⲆΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ⵠ[388]);
		ΔⵠⲆ(Ⲇ, 161.00003051757812 * ᐃ, ᐃ * 163.6761474609375, ᐃ * 17.08800749063506);
		Δⵠ(Ⲇ, ⵠ[388]);
		return ΔΔ
	}

	function ⵠᐃⲆⵠᐃⲆⲆⵠΔ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 321 * ᐃ;
		ΔΔ.height = ᐃ * 345;
		Ⲇ.translate(0, 5 * ᐃ);
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * ⵠᐃⵠⲆ);
		ΔⵠⲆ(Ⲇ, 160.5 * ᐃ, ᐃ * 159.5, 156.39595138242822 * ᐃ);
		Δⵠ(Ⲇ, ⵠ[75], ⵠ[75], 4 * ᐃ);
		Ⲇ.translate(0, -ⲆᐃΔⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 160.5, ᐃ * 159.5, ᐃ * 156.39595138242822);
		Δⵠ(Ⲇ, ⵠ[387], ⵠ[225], ᐃ * ᐃᐃⵠᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(31.999969482421875 * ᐃ, 163.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(22.999969482421875 * ᐃ, 67.07290649414062 * ᐃ, ᐃ * 106, ᐃ * 20.072906494140625, ᐃ * 162, ᐃ * 23.072906494140625);
		Ⲇ.bezierCurveTo(269.9999694824219 * ᐃ, 31.072906494140625 * ᐃ, 292.9999694824219 * ᐃ, ᐃ * 120.07290649414062, ᐃ * 294.9999694824219, ᐃ * 161.07290649414062);
		Ⲇ.bezierCurveTo(165.49996948242188 * ᐃ, 162.07290649414062 * ᐃ, ᐃ * 165.49996948242188, ᐃ * 162.07290649414062, 35.999969482421875 * ᐃ, 163.07290649414062 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#12432D");
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 32.999969482421875, 165.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16.999969482421875, ᐃ * 221.07290649414062, ᐃ * 85, ᐃ * 289.0729064941406, 156 * ᐃ, ᐃ * 294.0729064941406);
		Ⲇ.bezierCurveTo(263.9999694824219 * ᐃ, 293.0729064941406 * ᐃ, ᐃ * 295.9999694824219, 199.07290649414062 * ᐃ, 294.9999694824219 * ᐃ, ᐃ * 159.07290649414062);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[110]);
		ΔⵠⲆ(Ⲇ, 161 * ᐃ, 158.07290649414062 * ᐃ, ᐃ * 133.4053971921676);
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ⵠ[225], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31.999969482421875, 161.62844848632812 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162.49996948242188, ᐃ * 161.62844848632812, 162.49996948242188 * ᐃ, 161.62844848632812 * ᐃ, ᐃ * 292.9999694824219, ᐃ * 161.62844848632812);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[225], ᐃ * ⵠⲆⲆΔⵠⵠⵠ);
		Ⲇ.translate(Δⵠⵠ, ᐃ * ⲆⲆᐃᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(66 * ᐃ, ᐃ * 158.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 86, 158.29513549804688 * ᐃ, 86 * ᐃ, ᐃ * 158.29513549804688, 106 * ᐃ, 158.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ⵠ[201], ⲆΔᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(57.999969482421875 * ᐃ, ᐃ * 117.29513549804688);
		Ⲇ.bezierCurveTo(85 * ᐃ, ᐃ * 128.29513549804688, 85 * ᐃ, ᐃ * 128.29513549804688, ᐃ * 113, ᐃ * 139.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[201], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(95 * ᐃ, ᐃ * 90.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 105.79513549804688, ᐃ * 112, 105.79513549804688 * ᐃ, 129 * ᐃ, ᐃ * 121.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[201], ᐃ * ⲆΔⵠⵠⲆᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(116 * ᐃ, 52.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(130 * ᐃ, 83.85067749023438 * ᐃ, 130 * ᐃ, ᐃ * 83.85067749023438, ᐃ * 144, 114.85067749023438 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[201], ⵠᐃⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(159 * ᐃ, ᐃ * 61.295135498046875);
		Ⲇ.bezierCurveTo(ᐃ * 160.49996948242188, ᐃ * 92.29513549804688, 160.49996948242188 * ᐃ, ᐃ * 92.29513549804688, 160 * ᐃ, ᐃ * 123.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ⵠ[201], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(203 * ᐃ, ᐃ * 51.295135498046875);
		Ⲇ.bezierCurveTo(190.49996948242188 * ᐃ, 83.29513549804688 * ᐃ, ᐃ * 190.49996948242188, 83.29513549804688 * ᐃ, 176 * ᐃ, ᐃ * 115.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⲆΔΔᐃ, ⵠ[201], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(225 * ᐃ, ᐃ * 89.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 210.49996948242188, ᐃ * 104.79513549804688, ᐃ * 210.49996948242188, ᐃ * 104.79513549804688, ᐃ * 194, 120.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ⵠ[201], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(266.9999694824219 * ᐃ, ᐃ * 112.29513549804688);
		Ⲇ.bezierCurveTo(233.49996948242188 * ᐃ, 127.29513549804688 * ᐃ, 233.49996948242188 * ᐃ, ᐃ * 127.29513549804688, ᐃ * 199, 142.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[201], ⲆΔᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 256.9999694824219, ᐃ * 155.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 238.49996948242188, ᐃ * 156.29513549804688, ᐃ * 238.49996948242188, 156.29513549804688 * ᐃ, ᐃ * 219, ᐃ * 157.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ⵠ[201], ⲆᐃᐃⲆΔ * ᐃ);
		Ⲇ.translate(0, -8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 66, ᐃ * 158.29513549804688);
		Ⲇ.bezierCurveTo(86 * ᐃ, ᐃ * 158.29513549804688, ᐃ * 86, 158.29513549804688 * ᐃ, 106 * ᐃ, 158.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ⵠ[342], ΔΔᐃⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 57.999969482421875, 117.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, 128.29513549804688 * ᐃ, 85 * ᐃ, ᐃ * 128.29513549804688, 113 * ᐃ, ᐃ * 139.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[342], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 95, 90.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 105.79513549804688, 112 * ᐃ, 105.79513549804688 * ᐃ, ᐃ * 129, 121.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[342], ᐃ * ⲆⵠᐃⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116, ᐃ * 52.850677490234375);
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 83.85067749023438, ᐃ * 130, 83.85067749023438 * ᐃ, ᐃ * 144, ᐃ * 114.85067749023438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ⵠ[342], ⲆΔⵠⵠⲆᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 159, ᐃ * 61.295135498046875);
		Ⲇ.bezierCurveTo(160.49996948242188 * ᐃ, 92.29513549804688 * ᐃ, ᐃ * 160.49996948242188, ᐃ * 92.29513549804688, 160 * ᐃ, ᐃ * 123.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[342], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(203 * ᐃ, ᐃ * 51.295135498046875);
		Ⲇ.bezierCurveTo(190.49996948242188 * ᐃ, ᐃ * 83.29513549804688, ᐃ * 190.49996948242188, ᐃ * 83.29513549804688, 176 * ᐃ, ᐃ * 115.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[342], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(225 * ᐃ, ᐃ * 89.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 210.49996948242188, 104.79513549804688 * ᐃ, 210.49996948242188 * ᐃ, 104.79513549804688 * ᐃ, 194 * ᐃ, ᐃ * 120.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ⵠ[342], ᐃ * ⲆⵠⵠⵠⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 266.9999694824219, ᐃ * 112.29513549804688);
		Ⲇ.bezierCurveTo(233.49996948242188 * ᐃ, ᐃ * 127.29513549804688, 233.49996948242188 * ᐃ, ᐃ * 127.29513549804688, 199 * ᐃ, ᐃ * 142.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[342], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(256.9999694824219 * ᐃ, 155.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 238.49996948242188, ᐃ * 156.29513549804688, ᐃ * 238.49996948242188, 156.29513549804688 * ᐃ, 219 * ᐃ, ᐃ * 157.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ⵠ[342], ⵠᐃⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 94.00003051757812, ᐃ * 164.40341186523438);
		Ⲇ.bezierCurveTo(ᐃ * 162.50003051757812, ᐃ * 164.40341186523438, ᐃ * 230.00003051757812, 165.40341186523438 * ᐃ, 231.00003051757812 * ᐃ, 164.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(214.00003051757812 * ᐃ, ᐃ * 267.4034118652344, 92.00003051757812 * ᐃ, 243.40341186523438 * ᐃ, 93.00003051757812 * ᐃ, ᐃ * 165.40341186523438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#704618", "#5D3D1A", ᐃ * ⲆΔⵠⵠⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96, 166 * ᐃ);
		Ⲇ.bezierCurveTo(88 * ᐃ, ᐃ * 117, 129 * ᐃ, 92 * ᐃ, ᐃ * 161, 91 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 90, ᐃ * 223, 121 * ᐃ, ᐃ * 230, ᐃ * 161);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#ECBE35", ⵠ[342], 8 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 160.00003051757812, 166.49432373046875 * ᐃ, 28.30194339616981 * ᐃ);
		Δⵠ(Ⲇ, ⵠ[387], ⵠ[225], 10 * ᐃ);
		return ΔΔ
	}

	function ΔΔⵠᐃⲆΔᐃ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 450 * ᐃ;
		ΔΔ.height = 260 * ᐃ;
		Ⲇ.translate(ᐃ * ⵠⵠΔⲆᐃ, ⲆΔⵠᐃⲆ * ᐃ);
		if (ᐃⲆ == ᐃᐃΔᐃ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃᐃⲆⲆⲆ * ᐃ, 5 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 381, ᐃ * ⵠⲆΔΔ, ᐃ * 197, 4.5 * ᐃ, ᐃ * 385, ⵠᐃᐃⲆ * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 397, ᐃ * ᐃΔⲆΔ, 401 * ᐃ, 4 * ᐃ, ᐃ * 399, ᐃ * 23);
			Ⲇ.bezierCurveTo(ᐃ * 367, ᐃ * 27, ᐃ * 367, ᐃ * 27, 335 * ᐃ, ᐃ * 31);
			Ⲇ.bezierCurveTo(366.5 * ᐃ, ᐃ * 33.5, 366.5 * ᐃ, 33.5 * ᐃ, 398 * ᐃ, 36 * ᐃ);
			Ⲇ.bezierCurveTo(398 * ᐃ, 41.5 * ᐃ, ᐃ * 398, 41.5 * ᐃ, 398 * ᐃ, 47 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 398, 56 * ᐃ, ᐃ * 399, 56 * ᐃ, ᐃ * 386, 56 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 200.5, ᐃ * 56.5, ᐃ * 200.5, ᐃ * 56.5, 15 * ᐃ, ᐃ * 57);
			Ⲇ.bezierCurveTo(2 * ᐃ, ᐃ * 55, ⲆⵠⵠⲆΔ * ᐃ, 52 * ᐃ, ᐃ * 4, 43 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * ⲆⵠⵠⲆΔ, 30.5 * ᐃ, 4 * ᐃ, ᐃ * 30.5, ⲆⲆΔΔ * ᐃ, ᐃ * ΔᐃΔⵠⲆ);
			Ⲇ.bezierCurveTo(ⲆⲆⵠᐃⲆ * ᐃ, ᐃ * 18.5, ᐃ * ⵠΔⵠᐃⵠ, 18.5 * ᐃ, ᐃ * 28, ΔᐃⵠᐃⲆ * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 18.5, ⲆΔᐃᐃⲆ * ᐃ, 18.5 * ᐃ, ᐃ * 12, ⲆⲆⵠⲆⵠ * ᐃ, ᐃ * 5);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⲆⵠⵠ], 32 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(5 * ᐃ, 70 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * ⲆⲆᐃⵠ, ᐃ * 58, ⵠᐃᐃΔᐃ * ᐃ, ᐃ * 55, ΔΔᐃⲆⲆ * ᐃ, ᐃ * 57);
			Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 57, ᐃ * 203, ᐃ * 57, ᐃ * 389, 57 * ᐃ);
			Ⲇ.bezierCurveTo(400 * ᐃ, ᐃ * 57, 400 * ᐃ, ᐃ * 59, ᐃ * 400, 69 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 400.5, 83.5 * ᐃ, 400.5 * ᐃ, ᐃ * 83.5, 401 * ᐃ, ᐃ * 98);
			Ⲇ.bezierCurveTo(ᐃ * 402, 108 * ᐃ, 401 * ᐃ, ᐃ * 108, 388 * ᐃ, ᐃ * 108);
			Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 108, ᐃ * 201.5, 108 * ᐃ, ᐃ * ⲆΔΔᐃᐃ, ᐃ * 108);
			Ⲇ.bezierCurveTo(ⲆⲆΔᐃ * ᐃ, ᐃ * 106, ᐃ * 5, ᐃ * 106, ᐃ * 5, ᐃ * 87);
			Ⲇ.bezierCurveTo(33 * ᐃ, ᐃ * 84.5, 33 * ᐃ, ᐃ * 84.5, ᐃ * 61, ᐃ * 82);
			Ⲇ.bezierCurveTo(ᐃ * 33.5, 76.5 * ᐃ, 33.5 * ᐃ, 76.5 * ᐃ, ᐃ * 6, ᐃ * 71);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 32);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(19 * ᐃ, ᐃ * 158);
			Ⲇ.bezierCurveTo(2 * ᐃ, 159 * ᐃ, 4 * ᐃ, 156 * ᐃ, 5 * ᐃ, ᐃ * 118);
			Ⲇ.bezierCurveTo(4 * ᐃ, 110 * ᐃ, ᐃ * 6, ᐃ * 107, 26 * ᐃ, 109 * ᐃ);
			Ⲇ.bezierCurveTo(206.5 * ᐃ, ᐃ * 109, ᐃ * 206.5, 109 * ᐃ, 387 * ᐃ, ᐃ * 109);
			Ⲇ.bezierCurveTo(ᐃ * 400, 108 * ᐃ, 400 * ᐃ, ᐃ * 108, 398 * ᐃ, 127 * ᐃ);
			Ⲇ.bezierCurveTo(384.5 * ᐃ, ᐃ * 130, 384.5 * ᐃ, ᐃ * 130, 371 * ᐃ, 133 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 385.5, ᐃ * 138, ᐃ * 385.5, ᐃ * 138, 400 * ᐃ, ᐃ * 143);
			Ⲇ.bezierCurveTo(ᐃ * 402, ᐃ * 156, ᐃ * 402, ᐃ * 162, ᐃ * 385, ᐃ * 160);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[ᐃᐃⵠᐃ], ᐃ * 32);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(4 * ᐃ, ᐃ * 183);
			Ⲇ.bezierCurveTo(ᐃ * ⲆΔᐃⲆ, ᐃ * 163, 4 * ᐃ, ᐃ * 158, ᐃ * 28, 161 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 207.5, 161 * ᐃ, ᐃ * 207.5, ᐃ * 161, 387 * ᐃ, ᐃ * 161);
			Ⲇ.bezierCurveTo(ᐃ * 401, 159 * ᐃ, 400 * ᐃ, ᐃ * 164, 400 * ᐃ, ᐃ * 177);
			Ⲇ.bezierCurveTo(364.5 * ᐃ, 184 * ᐃ, 364.5 * ᐃ, ᐃ * 184, 329 * ᐃ, 191 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 364.5, ᐃ * 192.5, ᐃ * 364.5, ᐃ * 192.5, 400 * ᐃ, 194 * ᐃ);
			Ⲇ.bezierCurveTo(403 * ᐃ, ᐃ * 209, 401 * ᐃ, ᐃ * 214, 385 * ᐃ, 213 * ᐃ);
			Ⲇ.bezierCurveTo(201.5 * ᐃ, 213 * ᐃ, 201.5 * ᐃ, ᐃ * 213, ᐃ * ᐃΔⲆᐃᐃᐃΔ, 213 * ᐃ);
			Ⲇ.bezierCurveTo(3 * ᐃ, ᐃ * 213, 2 * ᐃ, ᐃ * 213, 4 * ᐃ, 198 * ᐃ);
			Ⲇ.bezierCurveTo(12.5 * ᐃ, 193 * ᐃ, ᐃ * 12.5, ᐃ * 193, 21 * ᐃ, 188 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ], ᐃᐃ[3], 32 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 41, ᐃ * 30, 14.7648230602334 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 32);
			ΔⵠⲆ(Ⲇ, 369 * ᐃ, ᐃ * 30, 15.556349186104045 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⵠⲆⵠΔ], 32 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 364, ᐃ * 190, 15.620499351813308 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[3], 32 * ᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 41, ᐃ * 186, 15.556349186104045 * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃ * 32)
		} else ᐃⲆ == 2 && (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ⲆⵠΔᐃⵠ * ᐃ, ᐃ * 5), Ⲇ.bezierCurveTo(381 * ᐃ, ⲆᐃⲆᐃ * ᐃ, ᐃ * 197, ᐃ * 4.5, ᐃ * 385, 4 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 397, ᐃ * ΔⲆΔⲆ, ᐃ * 401, ᐃ * ⲆⵠΔΔⲆ, 399 * ᐃ, 23 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 367, 27 * ᐃ, 367 * ᐃ, 27 * ᐃ, 335 * ᐃ, 31 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 366.5, 33.5 * ᐃ, ᐃ * 366.5, 33.5 * ᐃ, 398 * ᐃ, 36 * ᐃ), Ⲇ.bezierCurveTo(398 * ᐃ, 41.5 * ᐃ, 398 * ᐃ, 41.5 * ᐃ, ᐃ * 398, 47 * ᐃ), Ⲇ.bezierCurveTo(398 * ᐃ, ᐃ * 56, ᐃ * 399, 56 * ᐃ, 386 * ᐃ, ᐃ * 56), Ⲇ.bezierCurveTo(200.5 * ᐃ, ᐃ * 56.5, ᐃ * 200.5, ᐃ * 56.5, 15 * ᐃ, 57 * ᐃ), Ⲇ.bezierCurveTo(ᐃΔⲆⲆⵠ * ᐃ, ᐃ * 55, 4 * ᐃ, ᐃ * 52, ᐃ * 4, ᐃ * 43), Ⲇ.bezierCurveTo(ᐃ * 4, ᐃ * 30.5, ᐃΔⲆΔ * ᐃ, 30.5 * ᐃ, ᐃΔⲆΔ * ᐃ, ΔΔⵠⲆΔ * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 16, 18.5 * ᐃ, 16 * ᐃ, ᐃ * 18.5, ᐃ * 28, 19 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 18.5, ⵠⵠᐃᐃⵠ * ᐃ, 18.5 * ᐃ, ⲆΔⲆⲆⲆΔᐃ * ᐃ, ᐃ * ΔᐃⵠΔⵠ, 5 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 32), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * ⲆᐃᐃΔ, 70 * ᐃ), Ⲇ.bezierCurveTo(5 * ᐃ, 58 * ᐃ, ᐃ * ⵠᐃᐃΔᐃ, 55 * ᐃ, ᐃ * 17, ᐃ * 57), Ⲇ.bezierCurveTo(ᐃ * 203, 57 * ᐃ, ᐃ * 203, 57 * ᐃ, ᐃ * 389, 57 * ᐃ), Ⲇ.bezierCurveTo(400 * ᐃ, ᐃ * 57, ᐃ * 400, ᐃ * 59, 400 * ᐃ, 69 * ᐃ), Ⲇ.bezierCurveTo(400.5 * ᐃ, ᐃ * 83.5, 400.5 * ᐃ, ᐃ * 83.5, ᐃ * 401, 98 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 402, ᐃ * 108, 401 * ᐃ, ᐃ * 108, ᐃ * 388, 108 * ᐃ), Ⲇ.bezierCurveTo(201.5 * ᐃ, 108 * ᐃ, 201.5 * ᐃ, 108 * ᐃ, ᐃ * 15, ᐃ * 108), Ⲇ.bezierCurveTo(ᐃ * 1, 106 * ᐃ, ᐃ * ⲆΔΔⵠΔ, ᐃ * 106, ⵠⲆⲆᐃⵠ * ᐃ, ᐃ * 87), Ⲇ.bezierCurveTo(33 * ᐃ, ᐃ * 84.5, 33 * ᐃ, ᐃ * 84.5, 61 * ᐃ, 82 * ᐃ), Ⲇ.bezierCurveTo(33.5 * ᐃ, 76.5 * ᐃ, ᐃ * 33.5, ᐃ * 76.5, 6 * ᐃ, ᐃ * 71), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 32), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 19, 158 * ᐃ), Ⲇ.bezierCurveTo(ᐃΔⵠᐃ * ᐃ, ᐃ * 159, ⲆⲆΔΔ * ᐃ, 156 * ᐃ, 5 * ᐃ, ᐃ * 118), Ⲇ.bezierCurveTo(4 * ᐃ, 110 * ᐃ, ᐃ * ᐃΔΔⲆⲆ, ᐃ * 107, ᐃ * 26, 109 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 206.5, ᐃ * 109, 206.5 * ᐃ, ᐃ * 109, 387 * ᐃ, ᐃ * 109), Ⲇ.bezierCurveTo(400 * ᐃ, ᐃ * 108, 400 * ᐃ, 108 * ᐃ, 398 * ᐃ, ᐃ * 127), Ⲇ.bezierCurveTo(384.5 * ᐃ, ᐃ * 130, 384.5 * ᐃ, ᐃ * 130, 371 * ᐃ, 133 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 385.5, ᐃ * 138, 385.5 * ᐃ, 138 * ᐃ, ᐃ * 400, 143 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 402, ᐃ * 156, 402 * ᐃ, ᐃ * 162, 385 * ᐃ, ᐃ * 160), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔᐃⲆ], 32 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(Δⵠⵠⵠ * ᐃ, 183 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 1, ᐃ * 163, ᐃ * ⲆⵠⲆⲆ, 158 * ᐃ, ᐃ * 28, ᐃ * 161), Ⲇ.bezierCurveTo(ᐃ * 207.5, 161 * ᐃ, ᐃ * 207.5, ᐃ * 161, ᐃ * 387, ᐃ * 161), Ⲇ.bezierCurveTo(ᐃ * 401, ᐃ * 159, ᐃ * 400, ᐃ * 164, 400 * ᐃ, ᐃ * 177), Ⲇ.bezierCurveTo(ᐃ * 364.5, ᐃ * 184, ᐃ * 364.5, ᐃ * 184, ᐃ * 329, ᐃ * 191), Ⲇ.bezierCurveTo(ᐃ * 364.5, 192.5 * ᐃ, ᐃ * 364.5, 192.5 * ᐃ, 400 * ᐃ, 194 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 403, 209 * ᐃ, 401 * ᐃ, 214 * ᐃ, ᐃ * 385, 213 * ᐃ), Ⲇ.bezierCurveTo(201.5 * ᐃ, ᐃ * 213, 201.5 * ᐃ, ᐃ * 213, 18 * ᐃ, ᐃ * 213), Ⲇ.bezierCurveTo(3 * ᐃ, ᐃ * 213, 2 * ᐃ, ᐃ * 213, ⵠΔⲆᐃΔ * ᐃ, ᐃ * 198), Ⲇ.bezierCurveTo(12.5 * ᐃ, ᐃ * 193, ᐃ * 12.5, 193 * ᐃ, 21 * ᐃ, 188 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[3], 32 * ᐃ), ΔⵠⲆ(Ⲇ, 41 * ᐃ, ᐃ * 30, 14.7648230602334 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⵠⵠⲆ], 32 * ᐃ), ΔⵠⲆ(Ⲇ, 369 * ᐃ, ᐃ * 30, 15.556349186104045 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[3], ᐃ * 32), ΔⵠⲆ(Ⲇ, 364 * ᐃ, 190 * ᐃ, 15.620499351813308 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], 32 * ᐃ), ΔⵠⲆ(Ⲇ, 41 * ᐃ, 186 * ᐃ, ᐃ * 15.556349186104045), Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⲆⵠⵠ], ᐃ * 32));
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔᐃⵠΔⵠ, ⵠⲆⲆᐃⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 381, ᐃ * ᐃⲆⲆΔ, ᐃ * 197, ᐃ * 4.5, 385 * ᐃ, ᐃ * ⵠᐃᐃⲆ);
		Ⲇ.bezierCurveTo(ᐃ * 397, 4 * ᐃ, 401 * ᐃ, ᐃ * 4, 399 * ᐃ, ᐃ * 23);
		Ⲇ.bezierCurveTo(367 * ᐃ, ᐃ * 27, 367 * ᐃ, 27 * ᐃ, ᐃ * 335, ᐃ * 31);
		Ⲇ.bezierCurveTo(ᐃ * 366.5, 33.5 * ᐃ, ᐃ * 366.5, ᐃ * 33.5, 398 * ᐃ, ᐃ * 36);
		Ⲇ.bezierCurveTo(ᐃ * 398, ᐃ * 41.5, ᐃ * 398, 41.5 * ᐃ, ᐃ * 398, ᐃ * 47);
		Ⲇ.bezierCurveTo(398 * ᐃ, 56 * ᐃ, ᐃ * 399, 56 * ᐃ, ᐃ * 386, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 200.5, 56.5 * ᐃ, 200.5 * ᐃ, 56.5 * ᐃ, ᐃ * ⲆΔⲆⲆⲆⲆᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⵠⲆⵠᐃ, 55 * ᐃ, Ⲇⵠⵠᐃᐃ * ᐃ, 52 * ᐃ, ᐃ * 4, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃΔΔΔ * ᐃ, 30.5 * ᐃ, ᐃΔᐃΔ * ᐃ, ᐃ * 30.5, ᐃ * 4, ⵠⵠⵠⵠΔ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆⵠᐃⲆ, ᐃ * 18.5, ᐃ * 16, ᐃ * 18.5, 28 * ᐃ, ΔᐃⵠΔΔ * ᐃ);
		Ⲇ.bezierCurveTo(18.5 * ᐃ, 12 * ᐃ, ᐃ * 18.5, ᐃ * ⲆᐃᐃⲆΔ, ᐃ * ΔⲆᐃᐃΔ, ᐃ * ⲆᐃΔΔΔ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔΔⲆᐃ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃᐃⲆᐃΔ * ᐃ, ᐃ * 70);
		Ⲇ.bezierCurveTo(5 * ᐃ, ᐃ * 58, ᐃ * 5, ᐃ * 55, ᐃ * 17, 57 * ᐃ);
		Ⲇ.bezierCurveTo(203 * ᐃ, ᐃ * 57, 203 * ᐃ, ᐃ * 57, ᐃ * 389, 57 * ᐃ);
		Ⲇ.bezierCurveTo(400 * ᐃ, ᐃ * 57, ᐃ * 400, ᐃ * 59, 400 * ᐃ, ᐃ * 69);
		Ⲇ.bezierCurveTo(ᐃ * 400.5, ᐃ * 83.5, 400.5 * ᐃ, ᐃ * 83.5, 401 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 402, ᐃ * 108, 401 * ᐃ, ᐃ * 108, ᐃ * 388, ᐃ * 108);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, 108 * ᐃ, 201.5 * ᐃ, ᐃ * 108, ᐃ * 15, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 1, 106 * ᐃ, ᐃᐃⲆᐃΔ * ᐃ, ᐃ * 106, 5 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 33, ᐃ * 84.5, 33 * ᐃ, 84.5 * ᐃ, ᐃ * 61, ᐃ * 82);
		Ⲇ.bezierCurveTo(ᐃ * 33.5, ᐃ * 76.5, ᐃ * 33.5, ᐃ * 76.5, ᐃ * ⵠⲆⵠⵠᐃ, ᐃ * 71);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠᐃ], ᐃᐃ[0], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(19 * ᐃ, 158 * ᐃ);
		Ⲇ.bezierCurveTo(2 * ᐃ, ᐃ * 159, ᐃ * 4, 156 * ᐃ, ᐃ * ⵠⲆⲆᐃⵠ, ᐃ * 118);
		Ⲇ.bezierCurveTo(ᐃⵠⲆⲆⲆ * ᐃ, ᐃ * 110, ᐃⲆᐃⵠᐃ * ᐃ, ᐃ * 107, 26 * ᐃ, ᐃ * 109);
		Ⲇ.bezierCurveTo(ᐃ * 206.5, 109 * ᐃ, 206.5 * ᐃ, 109 * ᐃ, 387 * ᐃ, 109 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 400, ᐃ * 108, 400 * ᐃ, 108 * ᐃ, 398 * ᐃ, 127 * ᐃ);
		Ⲇ.bezierCurveTo(384.5 * ᐃ, ᐃ * 130, 384.5 * ᐃ, 130 * ᐃ, 371 * ᐃ, ᐃ * 133);
		Ⲇ.bezierCurveTo(385.5 * ᐃ, ᐃ * 138, 385.5 * ᐃ, 138 * ᐃ, 400 * ᐃ, 143 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 402, ᐃ * 156, 402 * ᐃ, 162 * ᐃ, 385 * ᐃ, ᐃ * 160);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[ⲆΔᐃ], ᐃ * ⵠᐃⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⵠᐃᐃⲆ, ᐃ * 183);
		Ⲇ.bezierCurveTo(ᐃ * 1, 163 * ᐃ, Ⲇⵠⵠᐃᐃ * ᐃ, 158 * ᐃ, ᐃ * 28, ᐃ * 161);
		Ⲇ.bezierCurveTo(207.5 * ᐃ, ᐃ * 161, 207.5 * ᐃ, 161 * ᐃ, ᐃ * 387, ᐃ * 161);
		Ⲇ.bezierCurveTo(401 * ᐃ, ᐃ * 159, ᐃ * 400, 164 * ᐃ, 400 * ᐃ, 177 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 364.5, ᐃ * 184, ᐃ * 364.5, ᐃ * 184, 329 * ᐃ, 191 * ᐃ);
		Ⲇ.bezierCurveTo(364.5 * ᐃ, 192.5 * ᐃ, 364.5 * ᐃ, ᐃ * 192.5, ᐃ * 400, 194 * ᐃ);
		Ⲇ.bezierCurveTo(403 * ᐃ, ᐃ * 209, 401 * ᐃ, 214 * ᐃ, 385 * ᐃ, 213 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 213, ᐃ * 201.5, 213 * ᐃ, ᐃ * 18, 213 * ᐃ);
		Ⲇ.bezierCurveTo(3 * ᐃ, 213 * ᐃ, ᐃ * ⲆⲆⵠΔ, 213 * ᐃ, 4 * ᐃ, 198 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 12.5, ᐃ * 193, ᐃ * 12.5, ᐃ * 193, 21 * ᐃ, ᐃ * 188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠᐃ], ᐃᐃ[ΔΔᐃ], ⵠᐃⲆΔΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 41, ᐃ * 30, 14.7648230602334 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠᐃ], ᐃᐃ[ΔΔⲆᐃ], ᐃ * ⵠⲆⵠⲆΔ);
		ΔⵠⲆ(Ⲇ, ᐃ * 369, ᐃ * 30, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ], ᐃᐃ[0], ᐃ * ⵠⲆᐃᐃⵠᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 364, ᐃ * 190, 15.620499351813308 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠᐃⲆᐃ], ᐃ * ⵠⲆᐃᐃⵠᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 41, ᐃ * 186, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ], ᐃᐃ[0], ᐃⲆᐃⵠⵠ * ᐃ);
		return ΔΔ
	}

	function ⵠᐃᐃⲆΔⲆⲆΔⵠ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 321 * ᐃ;
		ΔΔ.height = 345 * ᐃ;
		Ⲇ.translate(0, ᐃᐃⲆᐃⵠ * ᐃ);
		Ⲇ.translate(ⵠⵠᐃⵠ, ᐃ * ⵠΔΔΔ);
		ΔⵠⲆ(Ⲇ, 160.5 * ᐃ, 159.5 * ᐃ, 156.39595138242822 * ᐃ);
		Δⵠ(Ⲇ, ⵠ[75], ⵠ[75], 4 * ᐃ);
		Ⲇ.translate(ΔⲆⵠ, ᐃ * -20);
		ΔⵠⲆ(Ⲇ, 160.5 * ᐃ, 159.5 * ᐃ, ᐃ * 156.39595138242822);
		Δⵠ(Ⲇ, ⵠ[387], ⵠ[225], ᐃ * ⲆⵠΔⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(31.999969482421875 * ᐃ, 163.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(22.999969482421875 * ᐃ, 67.07290649414062 * ᐃ, ᐃ * 106, ᐃ * 20.072906494140625, ᐃ * 162, 23.072906494140625 * ᐃ);
		Ⲇ.bezierCurveTo(269.9999694824219 * ᐃ, ᐃ * 31.072906494140625, ᐃ * 292.9999694824219, ᐃ * 120.07290649414062, 294.9999694824219 * ᐃ, ᐃ * 161.07290649414062);
		Ⲇ.bezierCurveTo(ᐃ * 165.49996948242188, 162.07290649414062 * ᐃ, 165.49996948242188 * ᐃ, ᐃ * 162.07290649414062, 35.999969482421875 * ᐃ, 163.07290649414062 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠ[110]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(32.999969482421875 * ᐃ, ᐃ * 165.07290649414062);
		Ⲇ.bezierCurveTo(ᐃ * 16.999969482421875, 221.07290649414062 * ᐃ, ᐃ * 85, ᐃ * 289.0729064941406, 156 * ᐃ, 294.0729064941406 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 263.9999694824219, 293.0729064941406 * ᐃ, ᐃ * 295.9999694824219, 199.07290649414062 * ᐃ, 294.9999694824219 * ᐃ, 159.07290649414062 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#071A1B");
		ΔⵠⲆ(Ⲇ, ᐃ * 161, ᐃ * 158.07290649414062, 133.4053971921676 * ᐃ);
		Δⵠ(Ⲇ, undefined, ⵠ[225], ᐃ * ⵠⵠΔⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31.999969482421875, 161.62844848632812 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162.49996948242188, ᐃ * 161.62844848632812, ᐃ * 162.49996948242188, ᐃ * 161.62844848632812, ᐃ * 292.9999694824219, 161.62844848632812 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ⵠ[225], ᐃ * 12);
		Ⲇ.translate(Δⵠⵠ, 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 66, 158.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(86 * ᐃ, ᐃ * 158.29513549804688, ᐃ * 86, 158.29513549804688 * ᐃ, 106 * ᐃ, 158.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[335], ⲆᐃⵠⵠⵠΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 57.999969482421875, 117.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, 128.29513549804688 * ᐃ, ᐃ * 85, ᐃ * 128.29513549804688, 113 * ᐃ, ᐃ * 139.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[335], ᐃ * ⲆᐃⵠⵠⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(95 * ᐃ, 90.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, ᐃ * 105.79513549804688, ᐃ * 112, 105.79513549804688 * ᐃ, ᐃ * 129, ᐃ * 121.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ⵠ[335], ᐃ * ᐃⲆᐃⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(116 * ᐃ, 52.850677490234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 83.85067749023438, 130 * ᐃ, 83.85067749023438 * ᐃ, 144 * ᐃ, 114.85067749023438 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⲆΔΔᐃ, ⵠ[335], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 159, 61.295135498046875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160.49996948242188, ᐃ * 92.29513549804688, ᐃ * 160.49996948242188, ᐃ * 92.29513549804688, ᐃ * 160, ᐃ * 123.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ⵠ[335], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 203, 51.295135498046875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190.49996948242188, ᐃ * 83.29513549804688, ᐃ * 190.49996948242188, ᐃ * 83.29513549804688, ᐃ * 176, ᐃ * 115.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ⵠ[335], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 225, ᐃ * 89.29513549804688);
		Ⲇ.bezierCurveTo(210.49996948242188 * ᐃ, 104.79513549804688 * ᐃ, ᐃ * 210.49996948242188, 104.79513549804688 * ᐃ, 194 * ᐃ, ᐃ * 120.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ⵠ[335], ᐃ * ⲆᐃⵠⵠⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 266.9999694824219, ᐃ * 112.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 233.49996948242188, 127.29513549804688 * ᐃ, ᐃ * 233.49996948242188, ᐃ * 127.29513549804688, ᐃ * 199, ᐃ * 142.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ⵠ[335], ⲆⵠᐃⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 256.9999694824219, ᐃ * 155.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 238.49996948242188, ᐃ * 156.29513549804688, ᐃ * 238.49996948242188, 156.29513549804688 * ᐃ, ᐃ * 219, ᐃ * 157.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[335], ᐃ * 12);
		Ⲇ.translate(ΔⲆⵠ, -8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(66 * ᐃ, ᐃ * 158.29513549804688);
		Ⲇ.bezierCurveTo(86 * ᐃ, 158.29513549804688 * ᐃ, ᐃ * 86, ᐃ * 158.29513549804688, ᐃ * 106, ᐃ * 158.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[258], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(57.999969482421875 * ᐃ, ᐃ * 117.29513549804688);
		Ⲇ.bezierCurveTo(85 * ᐃ, ᐃ * 128.29513549804688, 85 * ᐃ, ᐃ * 128.29513549804688, ᐃ * 113, ᐃ * 139.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ⵠ[258], ᐃ * ⲆΔⲆⲆⲆΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 95, 90.29513549804688 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112, 105.79513549804688 * ᐃ, ᐃ * 112, ᐃ * 105.79513549804688, ᐃ * 129, 121.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ⵠ[258], ᐃ * ⵠᐃⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116, ᐃ * 52.850677490234375);
		Ⲇ.bezierCurveTo(ᐃ * 130, 83.85067749023438 * ᐃ, 130 * ᐃ, 83.85067749023438 * ᐃ, ᐃ * 144, ᐃ * 114.85067749023438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ⵠ[258], ΔΔᐃⵠΔΔⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 159, ᐃ * 61.295135498046875);
		Ⲇ.bezierCurveTo(160.49996948242188 * ᐃ, ᐃ * 92.29513549804688, ᐃ * 160.49996948242188, ᐃ * 92.29513549804688, ᐃ * 160, 123.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ⵠ[258], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(203 * ᐃ, 51.295135498046875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190.49996948242188, 83.29513549804688 * ᐃ, ᐃ * 190.49996948242188, 83.29513549804688 * ᐃ, 176 * ᐃ, ᐃ * 115.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ⵠ[258], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(225 * ᐃ, ᐃ * 89.29513549804688);
		Ⲇ.bezierCurveTo(210.49996948242188 * ᐃ, ᐃ * 104.79513549804688, 210.49996948242188 * ᐃ, 104.79513549804688 * ᐃ, ᐃ * 194, ᐃ * 120.29513549804688);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ⵠ[258], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(266.9999694824219 * ᐃ, ᐃ * 112.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 233.49996948242188, 127.29513549804688 * ᐃ, 233.49996948242188 * ᐃ, ᐃ * 127.29513549804688, ᐃ * 199, 142.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ⵠ[258], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(256.9999694824219 * ᐃ, ᐃ * 155.29513549804688);
		Ⲇ.bezierCurveTo(ᐃ * 238.49996948242188, ᐃ * 156.29513549804688, 238.49996948242188 * ᐃ, 156.29513549804688 * ᐃ, 219 * ᐃ, 157.29513549804688 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔᐃΔᐃⲆ, ⵠ[258], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96, ᐃ * 166);
		Ⲇ.bezierCurveTo(ᐃ * 88, 117 * ᐃ, ᐃ * 129, ᐃ * 92, 161 * ᐃ, ᐃ * 91);
		Ⲇ.bezierCurveTo(201 * ᐃ, ᐃ * 90, 223 * ᐃ, ᐃ * 121, ᐃ * 230, ᐃ * 161);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#704618", "#5D3D1A", ΔⲆᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(94.00003051757812 * ᐃ, 164.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(162.50003051757812 * ᐃ, ᐃ * 164.40341186523438, ᐃ * 230.00003051757812, ᐃ * 165.40341186523438, ᐃ * 231.00003051757812, 164.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 214.00003051757812, ᐃ * 267.4034118652344, 92.00003051757812 * ᐃ, 243.40341186523438 * ᐃ, ᐃ * 93.00003051757812, ᐃ * 165.40341186523438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, "#E1DDD5", "#EAE7E4", ᐃ * Δⵠⵠⵠᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 160.00003051757812, 166.49432373046875 * ᐃ, ᐃ * 28.30194339616981);
		Δⵠ(Ⲇ, ⵠ[387], ⵠ[225], 10 * ᐃ);
		return ΔΔ
	}

	function ΔΔΔᐃⲆᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 170 * ᐃ;
		ΔΔ.height = ᐃ * 170;
		Ⲇ.translate(Ⲇᐃⵠᐃ, ᐃ * ᐃᐃⵠᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 85, 95 * ᐃ);
		Ⲇ.rotate(1.4);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆⲆⵠⲆ, ᐃ * 60, ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(85 * ᐃ, 82 * ᐃ);
		for (var ᐃⲆ = 0; 10 > ᐃⲆ; ᐃⲆ++) {
			Ⲇ.rotate(Math.PI / ⲆΔΔⵠΔ);
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 65, ⲆΔᐃ);
			ⲆᐃⵠΔ(Ⲇ, 3, ᐃ * 21, ᐃ * 4);
			Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠᐃᐃⵠ], 4 * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.save();
		Ⲇ.translate(ᐃ * ⲆⵠⲆ, Ⲇᐃⵠᐃ * ᐃ);
		Ⲇ.rotate(.2);
		ⲆᐃⵠΔ(Ⲇ, ΔⵠᐃᐃⲆΔⲆ, 60 * ᐃ, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[ⲆⲆΔΔ], ᐃ * ⲆⵠⲆΔⲆ);
		Ⲇ.rotate(-.32);
		ⲆᐃⵠΔ(Ⲇ, 9, ᐃ * 38, ᐃ * ⵠΔᐃΔᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], ⵠΔⲆᐃΔ * ᐃ);
		Ⲇ.rotate(.68);
		ⲆᐃⵠΔ(Ⲇ, ᐃΔⵠΔΔ, ⵠΔⲆⵠ * ᐃ, ᐃ * 8);
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[ⲆⵠⲆⲆⲆΔⲆ], ᐃⲆⵠⲆΔ * ᐃ);
		Ⲇ.restore();
		return ΔΔ
	}
	const ΔⵠⲆⲆ = ⲆΔᐃ;

	function ΔΔᐃⲆⵠΔᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 85;
		ΔΔ.height = ᐃ * 145;
		Ⲇ.translate(ᐃ * -20, -95 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(50 * ᐃ, ᐃ * 105);
		Ⲇ.bezierCurveTo(ᐃ * 52, ᐃ * 119, 64 * ᐃ, ᐃ * 137, 71 * ᐃ, ᐃ * 146);
		Ⲇ.bezierCurveTo(71 * ᐃ, 161 * ᐃ, 74 * ᐃ, ᐃ * 169, 79 * ᐃ, 179 * ᐃ);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 192, ᐃ * 70, 204 * ᐃ, ᐃ * 69, ᐃ * 216);
		Ⲇ.bezierCurveTo(ᐃ * 50, ᐃ * 189.5, 50 * ᐃ, 189.5 * ᐃ, ᐃ * 31, ᐃ * 163);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 44, ᐃ * 106);
		Ⲇ.bezierCurveTo(49 * ᐃ, ᐃ * 90, 58 * ᐃ, ᐃ * 104, ᐃ * 51, 121 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, ᐃ * 143, 41 * ᐃ, ᐃ * 151, ᐃ * 37, 162 * ᐃ);
		Ⲇ.bezierCurveTo(48 * ᐃ, 180 * ᐃ, 58 * ᐃ, 188 * ᐃ, 76 * ᐃ, 205 * ᐃ);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 209, 105 * ᐃ, 229 * ᐃ, ᐃ * 92, ᐃ * 235);
		Ⲇ.bezierCurveTo(76 * ᐃ, 239 * ᐃ, 75 * ᐃ, 232 * ᐃ, 56 * ᐃ, 213 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 31, 187 * ᐃ, ᐃ * 28, ᐃ * 176, 23 * ᐃ, 162 * ᐃ);
		Ⲇ.bezierCurveTo(38 * ᐃ, ᐃ * 131, 40 * ᐃ, 120 * ᐃ, ᐃ * 44, ᐃ * 106);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠᐃ], ᐃᐃ[3], ⵠᐃⵠᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, ᐃ * 159);
		Ⲇ.bezierCurveTo(46 * ᐃ, 157 * ᐃ, ᐃ * 59, 152 * ᐃ, ᐃ * 68, ᐃ * 148);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 155, ᐃ * 52, ᐃ * 160, ᐃ * 44, ᐃ * 164);
		Ⲇ.bezierCurveTo(59 * ᐃ, 169 * ᐃ, 66 * ᐃ, 174 * ᐃ, 75 * ᐃ, 178 * ᐃ);
		Ⲇ.bezierCurveTo(58 * ᐃ, ᐃ * 178, 49 * ᐃ, ᐃ * 175, ᐃ * 37, ᐃ * 174);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ΔᐃⲆΔΔΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 120;
		ΔΔ.height = ᐃ * 300;
		Ⲇ.translate(-80 * ᐃ, -20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 200.5, 14.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 171.953125, 203 * ᐃ, ᐃ * 171.953125, 205.5 * ᐃ, 328.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 188.5, 257.953125 * ᐃ, 164.5 * ᐃ, ᐃ * 216.953125, 166.5 * ᐃ, 176.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 168.5, 133.953125 * ᐃ, ᐃ * 198.5, ᐃ * 98.953125, 200.5 * ᐃ, ᐃ * 14.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ΔᐃⵠᐃⵠⲆⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 120 * ᐃ;
		ΔΔ.height = ᐃ * 330;
		Ⲇ.translate(ᐃ * -60, -10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 188.5, 7.953125 * ᐃ);
		Ⲇ.bezierCurveTo(188.5 * ᐃ, ᐃ * 334.953125, ᐃ * 188.5, 332.953125 * ᐃ, 188.5 * ᐃ, 339.953125 * ᐃ);
		Ⲇ.bezierCurveTo(166.5 * ᐃ, ᐃ * 295.953125, 145.5 * ᐃ, ᐃ * 295.953125, ᐃ * 139.5, ᐃ * 282.953125);
		Ⲇ.bezierCurveTo(124.5 * ᐃ, 244.953125 * ᐃ, 139.5 * ᐃ, ᐃ * 243.953125, 131.5 * ᐃ, 212.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 118.5, ᐃ * 161.953125, ᐃ * 69.5, 156.953125 * ᐃ, 74.5 * ᐃ, ᐃ * 92.953125);
		Ⲇ.bezierCurveTo(85.5 * ᐃ, ᐃ * 41.953125, ᐃ * 158.5, ᐃ * 49.953125, ᐃ * 188.5, ᐃ * 7.953125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ΔⲆᐃⲆΔⵠⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 120 * ᐃ;
		ΔΔ.height = 300 * ᐃ;
		Ⲇ.translate(-200 * ᐃ, -40 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 344, ᐃ * 18.40625);
		Ⲇ.bezierCurveTo(ᐃ * 345, ᐃ * 361.40625, 344 * ᐃ, 191.40625 * ᐃ, 344 * ᐃ, 364.40625 * ᐃ);
		Ⲇ.bezierCurveTo(261 * ᐃ, 275.40625 * ᐃ, 274 * ᐃ, ᐃ * 259.40625, ᐃ * 229, 213.40625 * ᐃ);
		Ⲇ.bezierCurveTo(199 * ᐃ, ᐃ * 187.40625, ᐃ * 222, ᐃ * 133.40625, ᐃ * 273, ᐃ * 100.40625);
		Ⲇ.bezierCurveTo(ᐃ * 321, 71.40625 * ᐃ, ᐃ * 327, 34.40625 * ᐃ, 344 * ᐃ, 18.40625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 335, 38.072906494140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 307, 62.072906494140625 * ᐃ, ᐃ * 291, 60.072906494140625 * ᐃ, ᐃ * 262, 68.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 223, 80.07290649414062 * ᐃ, ᐃ * 225, ᐃ * 111.07290649414062, ᐃ * 264, 139.07290649414062 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⵠⲆⲆΔⵠΔᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 271 * ᐃ;
		ΔΔ.height = 366 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ᐃ * ΔΔⵠᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(133 * ᐃ, 99 * ᐃ);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 123, ᐃ * 199, ᐃ * 152, ᐃ * 209, 169 * ᐃ);
		Ⲇ.bezierCurveTo(228 * ᐃ, 205 * ᐃ, 224 * ᐃ, 245 * ᐃ, ᐃ * 190, 276 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 296, ᐃ * 99, ᐃ * 292, 79 * ᐃ, ᐃ * 274);
		Ⲇ.bezierCurveTo(49 * ᐃ, 253 * ᐃ, ᐃ * 47, 214 * ᐃ, 50 * ᐃ, 197 * ᐃ);
		Ⲇ.bezierCurveTo(61 * ᐃ, 143 * ᐃ, 102 * ᐃ, ᐃ * 113, ᐃ * 131, 99 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 73, 270 * ᐃ);
		Ⲇ.bezierCurveTo(79 * ᐃ, 280 * ᐃ, 77 * ᐃ, ᐃ * 280, 78 * ᐃ, 287 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78, 290 * ᐃ, ᐃ * 83, 291 * ᐃ, 82 * ᐃ, 299 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, 301 * ᐃ, 87 * ᐃ, 301 * ᐃ, ᐃ * 92, 314 * ᐃ);
		Ⲇ.bezierCurveTo(94 * ᐃ, 319 * ᐃ, ⵠᐃⵠⵠΔ * ᐃ, ᐃ * 321, ᐃ * 107, ᐃ * 320);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 323, ᐃ * 114, ᐃ * 324, 119 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, ᐃ * 321, ᐃ * 146, ᐃ * 323, 139 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, 324 * ᐃ, ᐃ * 150, ᐃ * 324, 153 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(168 * ᐃ, 319 * ᐃ, ᐃ * 171, 316 * ᐃ, 173 * ᐃ, ᐃ * 307);
		Ⲇ.bezierCurveTo(180 * ᐃ, ᐃ * 305, ᐃ * 180, ᐃ * 301, ᐃ * 178, ᐃ * 296);
		Ⲇ.bezierCurveTo(ᐃ * 183, ᐃ * 296, 185 * ᐃ, 289 * ᐃ, ᐃ * 188, ᐃ * 279);
		Ⲇ.bezierCurveTo(171 * ᐃ, ᐃ * 286, 149 * ᐃ, ᐃ * 290, ᐃ * 132, ᐃ * 289);
		Ⲇ.bezierCurveTo(ᐃ * 101, 290 * ᐃ, 86 * ᐃ, 280 * ᐃ, ᐃ * 74, ᐃ * 271);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(76 * ᐃ, 252 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 294, ᐃ * 96, 314 * ᐃ, 103 * ᐃ, 314 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 316, 151 * ᐃ, 314 * ᐃ, ᐃ * 156, 314 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, 317 * ᐃ, ᐃ * 182, ᐃ * 285, ᐃ * 191, ⵠᐃⲆⵠΔᐃⵠ * ᐃ);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, ᐃ * 254, ᐃ * 134.5, ᐃ * 254, ᐃ * 78, 252 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84 * ᐃ, 257 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, ᐃ * 273, ᐃ * 146, ᐃ * 268, 179 * ᐃ, ᐃ * 261);
		Ⲇ.bezierCurveTo(190 * ᐃ, 258 * ᐃ, 187 * ᐃ, ᐃ * 266, 178 * ᐃ, 272 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160, ᐃ * 284, ᐃ * 123, ᐃ * 282, 100 * ᐃ, ᐃ * 277);
		Ⲇ.bezierCurveTo(ᐃ * 73, ᐃ * 260, 79 * ᐃ, 257 * ᐃ, ᐃ * 84, ᐃ * 257);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125 * ᐃ, 65 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133, 45 * ᐃ, 136 * ᐃ, 42 * ᐃ, 141 * ᐃ, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, 96 * ᐃ, ᐃ * 164, 117 * ᐃ, ᐃ * 175, 134 * ᐃ);
		Ⲇ.bezierCurveTo(203 * ᐃ, 181 * ᐃ, 207 * ᐃ, ᐃ * 182, 208 * ᐃ, 215 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 240, 205 * ᐃ, ᐃ * 246, ᐃ * 184, ᐃ * 258);
		Ⲇ.bezierCurveTo(ᐃ * 161, 267 * ᐃ, ᐃ * 131, 272 * ᐃ, 86 * ᐃ, 258 * ᐃ);
		Ⲇ.bezierCurveTo(67 * ᐃ, 252 * ᐃ, ᐃ * 68, ᐃ * 239, ᐃ * 64, 216 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, 194 * ᐃ, ᐃ * 72, 169 * ᐃ, ᐃ * 92, ᐃ * 142);
		Ⲇ.bezierCurveTo(106 * ᐃ, 121 * ᐃ, 114 * ᐃ, ᐃ * 101, ᐃ * 125, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115 * ᐃ, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 28, ᐃ * 119, ᐃ * 27, 126 * ᐃ, 37 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134, 48 * ᐃ, 134 * ᐃ, 49 * ᐃ, ᐃ * 132, 59 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, 67 * ᐃ, ᐃ * 127, 65 * ᐃ, 120 * ᐃ, ᐃ * 56);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 49, 113 * ᐃ, 43 * ᐃ, 115 * ᐃ, ᐃ * 38);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146, ᐃ * 34);
		Ⲇ.bezierCurveTo(ᐃ * 152, ᐃ * 28, 155 * ᐃ, 27 * ᐃ, 157 * ᐃ, 39 * ᐃ);
		Ⲇ.bezierCurveTo(157 * ᐃ, ᐃ * 45, 157 * ᐃ, ᐃ * 49, ᐃ * 150, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 141, 66 * ᐃ, ᐃ * 138, 66 * ᐃ, 138 * ᐃ, ᐃ * 57);
		Ⲇ.bezierCurveTo(137 * ᐃ, 50 * ᐃ, 137 * ᐃ, 47 * ᐃ, ᐃ * 141, 42 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(143 * ᐃ, 69 * ᐃ);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 56, ᐃ * 156, ᐃ * 50, 158 * ᐃ, 58 * ᐃ);
		Ⲇ.bezierCurveTo(159 * ᐃ, 64 * ᐃ, ᐃ * 160, 67 * ᐃ, 153 * ᐃ, 77 * ᐃ);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 83, 145 * ᐃ, 84 * ᐃ, ᐃ * 143, 77 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 149, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 89, 151 * ᐃ, 84 * ᐃ, 156 * ᐃ, ᐃ * 79);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 73, 163 * ᐃ, 78 * ᐃ, ᐃ * 162, 86 * ᐃ);
		Ⲇ.bezierCurveTo(161 * ᐃ, 91 * ᐃ, ᐃ * 155, ᐃ * 99, ᐃ * 152, ᐃ * 98);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 111, ᐃ * 61);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 51, ᐃ * 117, ᐃ * 51, ᐃ * 124, ᐃ * 64);
		Ⲇ.bezierCurveTo(128 * ᐃ, 68 * ᐃ, ᐃ * 128, 76 * ᐃ, 126 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 84, 122 * ᐃ, 82 * ᐃ, ᐃ * 115, 74 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 67 * ᐃ, ᐃ * 115, ᐃ * 74, ᐃ * 115, ᐃ * 74);
		Ⲇ.bezierCurveTo(ᐃ * 111, ᐃ * 68, ᐃ * 111, 66 * ᐃ, 111 * ᐃ, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 74, 112 * ᐃ, ᐃ * 73, 118 * ᐃ, ᐃ * 84);
		Ⲇ.bezierCurveTo(122 * ᐃ, 88 * ᐃ, 122 * ᐃ, ᐃ * 93, ᐃ * 121, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 114, 98 * ᐃ, 113 * ᐃ, 98 * ᐃ, ᐃ * 109, ᐃ * 90);
		Ⲇ.bezierCurveTo(ᐃ * 107, 87 * ᐃ, 106 * ᐃ, 85 * ᐃ, 107 * ᐃ, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(Δⵠⵠ, ᐃ * -10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, 99 * ᐃ);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 123, 199 * ᐃ, 152 * ᐃ, 209 * ᐃ, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 228, 205 * ᐃ, ᐃ * 224, ᐃ * 245, ᐃ * 190, 276 * ᐃ);
		Ⲇ.bezierCurveTo(161 * ᐃ, ᐃ * 296, ᐃ * 99, ᐃ * 292, 79 * ᐃ, ᐃ * 274);
		Ⲇ.bezierCurveTo(ᐃ * 49, 253 * ᐃ, ᐃ * 47, 214 * ᐃ, ᐃ * 50, 197 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 143, ᐃ * 102, 113 * ᐃ, 131 * ᐃ, 99 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⵠⲆⵠΔ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(73 * ᐃ, ᐃ * 270);
		Ⲇ.bezierCurveTo(79 * ᐃ, 280 * ᐃ, 77 * ᐃ, ᐃ * 280, ᐃ * 78, ᐃ * 287);
		Ⲇ.bezierCurveTo(ᐃ * 78, 290 * ᐃ, 83 * ᐃ, 291 * ᐃ, ᐃ * 82, ᐃ * 299);
		Ⲇ.bezierCurveTo(ᐃ * 81, 301 * ᐃ, ᐃ * 87, 301 * ᐃ, 92 * ᐃ, ᐃ * 314);
		Ⲇ.bezierCurveTo(ᐃ * 94, 319 * ᐃ, ᐃ * ᐃΔᐃⵠⵠ, ᐃ * 321, 107 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, 323 * ᐃ, 114 * ᐃ, ᐃ * 324, ᐃ * 119, 320 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 321 * ᐃ, 146 * ᐃ, ᐃ * 323, ᐃ * 139, ᐃ * 320);
		Ⲇ.bezierCurveTo(ᐃ * 141, ᐃ * 324, 150 * ᐃ, ᐃ * 324, ᐃ * 153, ᐃ * 320);
		Ⲇ.bezierCurveTo(168 * ᐃ, ᐃ * 319, 171 * ᐃ, 316 * ᐃ, ᐃ * 173, 307 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 180, ᐃ * 305, ᐃ * 180, ᐃ * 301, ᐃ * 178, ᐃ * 296);
		Ⲇ.bezierCurveTo(183 * ᐃ, 296 * ᐃ, ᐃ * 185, ᐃ * 289, ᐃ * 188, ᐃ * 279);
		Ⲇ.bezierCurveTo(171 * ᐃ, ᐃ * 286, 149 * ᐃ, 290 * ᐃ, ᐃ * 132, 289 * ᐃ);
		Ⲇ.bezierCurveTo(101 * ᐃ, ᐃ * 290, 86 * ᐃ, ᐃ * 280, 74 * ᐃ, 271 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[3], ⵠᐃᐃΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 76, ᐃ * 252);
		Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 294, 96 * ᐃ, ᐃ * 314, ᐃ * 103, 314 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 316, ᐃ * 151, ᐃ * 314, ᐃ * 156, 314 * ᐃ);
		Ⲇ.bezierCurveTo(169 * ᐃ, 317 * ᐃ, 182 * ᐃ, 285 * ᐃ, 191 * ᐃ, ⵠⵠΔⲆΔⵠᐃ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134.5, 254 * ᐃ, 134.5 * ᐃ, ᐃ * 254, 78 * ᐃ, ᐃ * 252);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[3], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84, 257 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, 273 * ᐃ, ᐃ * 146, ᐃ * 268, ᐃ * 179, 261 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, ᐃ * 258, ᐃ * 187, 266 * ᐃ, 178 * ᐃ, 272 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160, 284 * ᐃ, 123 * ᐃ, 282 * ᐃ, ᐃ * 100, ᐃ * 277);
		Ⲇ.bezierCurveTo(ᐃ * 73, ᐃ * 260, 79 * ᐃ, 257 * ᐃ, ᐃ * 84, ᐃ * 257);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[3], ᐃ * ⲆᐃⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 125, 65 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, ᐃ * 45, 136 * ᐃ, ᐃ * 42, ᐃ * 141, 55 * ᐃ);
		Ⲇ.bezierCurveTo(151 * ᐃ, 96 * ᐃ, 164 * ᐃ, ᐃ * 117, ᐃ * 175, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 181, 207 * ᐃ, ᐃ * 182, ᐃ * 208, ᐃ * 215);
		Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 240, 205 * ᐃ, 246 * ᐃ, ᐃ * 184, 258 * ᐃ);
		Ⲇ.bezierCurveTo(161 * ᐃ, 267 * ᐃ, 131 * ᐃ, 272 * ᐃ, ᐃ * 86, ᐃ * 258);
		Ⲇ.bezierCurveTo(ᐃ * 67, 252 * ᐃ, 68 * ᐃ, 239 * ᐃ, ᐃ * 64, 216 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 194, ᐃ * 72, ᐃ * 169, 92 * ᐃ, 142 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, 121 * ᐃ, ᐃ * 114, 101 * ᐃ, 125 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[ΔⲆΔⵠ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 28, ᐃ * 119, 27 * ᐃ, 126 * ᐃ, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 134, 48 * ᐃ, ᐃ * 134, 49 * ᐃ, ᐃ * 132, ᐃ * 59);
		Ⲇ.bezierCurveTo(131 * ᐃ, ᐃ * 67, ᐃ * 127, 65 * ᐃ, 120 * ᐃ, 56 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 49, 113 * ᐃ, ᐃ * 43, 115 * ᐃ, 38 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146, 34 * ᐃ);
		Ⲇ.bezierCurveTo(152 * ᐃ, 28 * ᐃ, ᐃ * 155, 27 * ᐃ, 157 * ᐃ, 39 * ᐃ);
		Ⲇ.bezierCurveTo(157 * ᐃ, ᐃ * 45, ᐃ * 157, ᐃ * 49, ᐃ * 150, 56 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141, ᐃ * 66, ᐃ * 138, ᐃ * 66, 138 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137, 50 * ᐃ, ᐃ * 137, ᐃ * 47, ᐃ * 141, 42 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, ᐃ * 69);
		Ⲇ.bezierCurveTo(148 * ᐃ, 56 * ᐃ, ᐃ * 156, 50 * ᐃ, ᐃ * 158, ᐃ * 58);
		Ⲇ.bezierCurveTo(159 * ᐃ, 64 * ᐃ, ᐃ * 160, ᐃ * 67, 153 * ᐃ, ᐃ * 77);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 83, 145 * ᐃ, ᐃ * 84, 143 * ᐃ, ᐃ * 77);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(149 * ᐃ, 92 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 149, 89 * ᐃ, ᐃ * 151, 84 * ᐃ, ᐃ * 156, ᐃ * 79);
		Ⲇ.bezierCurveTo(161 * ᐃ, 73 * ᐃ, ᐃ * 163, ᐃ * 78, ᐃ * 162, ᐃ * 86);
		Ⲇ.bezierCurveTo(ᐃ * 161, 91 * ᐃ, ᐃ * 155, ᐃ * 99, ᐃ * 152, 98 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃᐃ[ᐃⲆⲆᐃΔ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 111, 61 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, 51 * ᐃ, ᐃ * 117, 51 * ᐃ, 124 * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(128 * ᐃ, 68 * ᐃ, 128 * ᐃ, 76 * ᐃ, 126 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 84, 122 * ᐃ, ᐃ * 82, 115 * ᐃ, ᐃ * 74);
		Ⲇ.bezierCurveTo(ᐃ * 112, 67 * ᐃ, ᐃ * 115, 74 * ᐃ, ᐃ * 115, ᐃ * 74);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 68, ᐃ * 111, ᐃ * 66, ᐃ * 111, 62 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃᐃ[3], ᐃⵠΔΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 107, ᐃ * 81);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 74, 112 * ᐃ, 73 * ᐃ, ᐃ * 118, 84 * ᐃ);
		Ⲇ.bezierCurveTo(122 * ᐃ, ᐃ * 88, 122 * ᐃ, 93 * ᐃ, ᐃ * 121, ᐃ * 98);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 98, 113 * ᐃ, 98 * ᐃ, 109 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(107 * ᐃ, 87 * ᐃ, 106 * ᐃ, 85 * ᐃ, ᐃ * 107, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[3], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, ᐃ * 99);
		Ⲇ.bezierCurveTo(186 * ᐃ, 123 * ᐃ, ᐃ * 199, ᐃ * 152, 209 * ᐃ, 169 * ᐃ);
		Ⲇ.bezierCurveTo(228 * ᐃ, 205 * ᐃ, 224 * ᐃ, ᐃ * 245, ᐃ * 190, ᐃ * 276);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 296, ᐃ * 99, ᐃ * 292, ᐃ * 79, ᐃ * 274);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 253, 47 * ᐃ, 214 * ᐃ, ᐃ * 50, ᐃ * 197);
		Ⲇ.bezierCurveTo(61 * ᐃ, ᐃ * 143, ᐃ * 102, 113 * ᐃ, ᐃ * 131, 99 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 73, ᐃ * 270);
		Ⲇ.bezierCurveTo(79 * ᐃ, 280 * ᐃ, 77 * ᐃ, 280 * ᐃ, 78 * ᐃ, 287 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 290 * ᐃ, ᐃ * 83, ᐃ * 291, 82 * ᐃ, 299 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, ᐃ * 301, ᐃ * 87, ᐃ * 301, 92 * ᐃ, 314 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 319, 100 * ᐃ, ᐃ * 321, 107 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 323, ᐃ * 114, ᐃ * 324, 119 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 321 * ᐃ, 146 * ᐃ, ᐃ * 323, 139 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 141, 324 * ᐃ, ᐃ * 150, ᐃ * 324, 153 * ᐃ, ᐃ * 320);
		Ⲇ.bezierCurveTo(ᐃ * 168, 319 * ᐃ, ᐃ * 171, 316 * ᐃ, ᐃ * 173, 307 * ᐃ);
		Ⲇ.bezierCurveTo(180 * ᐃ, 305 * ᐃ, ᐃ * 180, ᐃ * 301, 178 * ᐃ, ᐃ * 296);
		Ⲇ.bezierCurveTo(183 * ᐃ, 296 * ᐃ, ᐃ * 185, ᐃ * 289, 188 * ᐃ, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 171, ᐃ * 286, ᐃ * 149, ᐃ * 290, 132 * ᐃ, 289 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 101, ᐃ * 290, 86 * ᐃ, ᐃ * 280, 74 * ᐃ, ᐃ * 271);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 76, 252 * ᐃ);
		Ⲇ.bezierCurveTo(85 * ᐃ, 294 * ᐃ, 96 * ᐃ, ᐃ * 314, ᐃ * 103, ᐃ * 314);
		Ⲇ.bezierCurveTo(ᐃ * 106, 316 * ᐃ, ᐃ * 151, 314 * ᐃ, ᐃ * 156, ᐃ * 314);
		Ⲇ.bezierCurveTo(169 * ᐃ, ᐃ * 317, ᐃ * 182, ᐃ * 285, 191 * ᐃ, ΔᐃΔΔⵠⲆⲆ * ᐃ);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, ᐃ * 254, 134.5 * ᐃ, 254 * ᐃ, 78 * ᐃ, 252 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84, ᐃ * 257);
		Ⲇ.bezierCurveTo(122 * ᐃ, ᐃ * 273, 146 * ᐃ, ᐃ * 268, 179 * ᐃ, 261 * ᐃ);
		Ⲇ.bezierCurveTo(190 * ᐃ, ᐃ * 258, 187 * ᐃ, ᐃ * 266, 178 * ᐃ, 272 * ᐃ);
		Ⲇ.bezierCurveTo(160 * ᐃ, ᐃ * 284, ᐃ * 123, 282 * ᐃ, 100 * ᐃ, 277 * ᐃ);
		Ⲇ.bezierCurveTo(73 * ᐃ, ᐃ * 260, 79 * ᐃ, 257 * ᐃ, 84 * ᐃ, 257 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		ΔⵠⲆ(Ⲇ, 102 * ᐃ, 269 * ᐃ, ᐃ * ΔᐃᐃΔᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, 98 * ᐃ, ᐃ * 266, ᐃ * ⵠΔⲆⲆΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 168, ᐃ * 269, ᐃ * ⵠⵠᐃᐃΔⵠⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ]);
		ΔⵠⲆ(Ⲇ, 164 * ᐃ, ᐃ * 266, ΔⲆⵠΔΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 125, 65 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, 45 * ᐃ, ᐃ * 136, ᐃ * 42, ᐃ * 141, ᐃ * 55);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 96, ᐃ * 164, 117 * ᐃ, ᐃ * 175, 134 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 181, ᐃ * 207, 182 * ᐃ, ᐃ * 208, 215 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 240, ᐃ * 205, ᐃ * 246, ᐃ * 184, ᐃ * 258);
		Ⲇ.bezierCurveTo(161 * ᐃ, 267 * ᐃ, ᐃ * 131, ᐃ * 272, ᐃ * 86, ᐃ * 258);
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * 252, 68 * ᐃ, 239 * ᐃ, ᐃ * 64, ᐃ * 216);
		Ⲇ.bezierCurveTo(ᐃ * 62, 194 * ᐃ, ᐃ * 72, 169 * ᐃ, 92 * ᐃ, 142 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 121, ᐃ * 114, ᐃ * 101, ᐃ * 125, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 235);
		Ⲇ.bezierCurveTo(118 * ᐃ, ᐃ * 258, ᐃ * 137, 268 * ᐃ, 148 * ᐃ, 246 * ᐃ);
		Ⲇ.bezierCurveTo(156 * ᐃ, 228 * ᐃ, 152 * ᐃ, ᐃ * 169, ᐃ * 150, ᐃ * 140);
		Ⲇ.bezierCurveTo(147 * ᐃ, 87 * ᐃ, 143 * ᐃ, ᐃ * 69, ᐃ * 142, 60 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136, ᐃ * 44, 132 * ᐃ, 43 * ᐃ, ᐃ * 127, ᐃ * 62);
		Ⲇ.bezierCurveTo(119 * ᐃ, 116 * ᐃ, ᐃ * 119, 140 * ᐃ, 116 * ᐃ, 166 * ᐃ);
		Ⲇ.bezierCurveTo(113 * ᐃ, 202 * ᐃ, 113 * ᐃ, ᐃ * 223, 115 * ᐃ, ᐃ * 233);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(132 * ᐃ, 219 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, ᐃ * 229, 142 * ᐃ, 231 * ᐃ, ᐃ * 145, 237 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 245, 139 * ᐃ, ᐃ * 249, 133 * ᐃ, 249 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 123, 248 * ᐃ, 123 * ᐃ, 243 * ᐃ, 121 * ᐃ, ᐃ * 239);
		Ⲇ.bezierCurveTo(ᐃ * 126, ᐃ * 227, ᐃ * 129, ᐃ * 223, 132 * ᐃ, 219 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(133 * ᐃ, 179 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, ᐃ * 188.5, 140 * ᐃ, 188.5 * ᐃ, 147 * ᐃ, ᐃ * 198);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 209, 142 * ᐃ, 214 * ᐃ, ᐃ * 133, 214 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 121, 211 * ᐃ, 121 * ᐃ, 207 * ᐃ, 120 * ᐃ, 200 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 126.5, ᐃ * 189.5, 126.5 * ᐃ, ᐃ * 189.5, ᐃ * 133, 179 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔΔᐃᐃⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, 143 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139, ᐃ * 151.5, 139 * ᐃ, ᐃ * 151.5, 145 * ᐃ, 160 * ᐃ);
		Ⲇ.bezierCurveTo(143 * ᐃ, 167 * ᐃ, ᐃ * 140, 170 * ᐃ, ᐃ * 134, 170 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * 169, 124 * ᐃ, 167 * ᐃ, ᐃ * 123, 161 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃ * 152, ᐃ * 128, ᐃ * 152, 133 * ᐃ, ᐃ * 143);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, ᐃ * 115);
		Ⲇ.bezierCurveTo(137.5 * ᐃ, 121.5 * ᐃ, ᐃ * 137.5, ᐃ * 121.5, ᐃ * 142, ᐃ * 128);
		Ⲇ.bezierCurveTo(ᐃ * 141, 133 * ᐃ, ᐃ * 138, 135 * ᐃ, 133 * ᐃ, 135 * ᐃ);
		Ⲇ.bezierCurveTo(129 * ᐃ, 135 * ᐃ, 125 * ᐃ, 132 * ᐃ, 125 * ᐃ, ᐃ * 129);
		Ⲇ.bezierCurveTo(ᐃ * 129, ᐃ * 122, ᐃ * 129, 122 * ᐃ, ᐃ * 133, 115 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, 94 * ᐃ);
		Ⲇ.bezierCurveTo(136.5 * ᐃ, ᐃ * 98.5, ᐃ * 136.5, ᐃ * 98.5, 140 * ᐃ, 103 * ᐃ);
		Ⲇ.bezierCurveTo(139 * ᐃ, ᐃ * 109, 137 * ᐃ, ᐃ * 109, ᐃ * 133, 110 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 127, ᐃ * 108, 129 * ᐃ, 107 * ᐃ, ᐃ * 127, 105 * ᐃ);
		Ⲇ.bezierCurveTo(130 * ᐃ, 99.5 * ᐃ, ᐃ * 130, 99.5 * ᐃ, ᐃ * 133, 94 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 130, 279 * ᐃ);
		Ⲇ.bezierCurveTo(136.5 * ᐃ, 287.5 * ᐃ, 136.5 * ᐃ, 287.5 * ᐃ, ᐃ * 143, ᐃ * 296);
		Ⲇ.bezierCurveTo(ᐃ * 143, 302 * ᐃ, ᐃ * 139, ᐃ * 309, 131 * ᐃ, ᐃ * 308);
		Ⲇ.bezierCurveTo(ᐃ * 123, 306 * ᐃ, 121 * ᐃ, 303 * ᐃ, 120 * ᐃ, ᐃ * 297);
		Ⲇ.bezierCurveTo(125.5 * ᐃ, 288.5 * ᐃ, ᐃ * 125.5, 288.5 * ᐃ, ᐃ * 131, 280 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(147 * ᐃ, ᐃ * 303);
		Ⲇ.bezierCurveTo(151 * ᐃ, 311 * ᐃ, ᐃ * 151, ᐃ * 319, 147 * ᐃ, 321 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 138, 320 * ᐃ, 145 * ᐃ, ᐃ * 308, ᐃ * 147, ᐃ * 303);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 303);
		Ⲇ.bezierCurveTo(ᐃ * 115, ᐃ * 312, 118 * ᐃ, 319 * ᐃ, 115 * ᐃ, ᐃ * 319);
		Ⲇ.bezierCurveTo(112 * ᐃ, ᐃ * 324, 109 * ᐃ, ᐃ * 318, 109 * ᐃ, ᐃ * 314);
		Ⲇ.bezierCurveTo(109 * ᐃ, ᐃ * 308, 112 * ᐃ, ᐃ * 303, 115 * ᐃ, 303 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(89 * ᐃ, ᐃ * 280);
		Ⲇ.bezierCurveTo(83 * ᐃ, ᐃ * 279, ᐃ * 80, 281 * ᐃ, 81 * ᐃ, 286 * ᐃ);
		Ⲇ.bezierCurveTo(83 * ᐃ, ᐃ * 290, 84 * ᐃ, ᐃ * 290, ᐃ * 87, 286 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 94, ᐃ * 290);
		Ⲇ.bezierCurveTo(93 * ᐃ, 294 * ᐃ, 90 * ᐃ, ᐃ * 303, ᐃ * 86, 298 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 295, ᐃ * 84, 291 * ᐃ, ᐃ * 89, 291 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(163 * ᐃ, 295 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 175, 294 * ᐃ, 176 * ᐃ, ᐃ * 296, 175 * ᐃ, 301 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 174, 305 * ᐃ, 171 * ᐃ, 305 * ᐃ, 166 * ᐃ, ᐃ * 300);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 172, 286 * ᐃ);
		Ⲇ.bezierCurveTo(180 * ᐃ, 285 * ᐃ, ᐃ * 181, 285 * ᐃ, 180 * ᐃ, 291 * ᐃ);
		Ⲇ.bezierCurveTo(176 * ᐃ, ᐃ * 295, ᐃ * 174, 294 * ᐃ, ᐃ * 172, ᐃ * 286);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 37);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 28, 119 * ᐃ, ᐃ * 27, ᐃ * 126, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 134, ᐃ * 48, 134 * ᐃ, ᐃ * 49, 132 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 131, 67 * ᐃ, 127 * ᐃ, ᐃ * 65, 120 * ᐃ, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 114, 49 * ᐃ, ᐃ * 113, ᐃ * 43, 115 * ᐃ, ᐃ * 38);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146, ᐃ * 34);
		Ⲇ.bezierCurveTo(ᐃ * 152, 28 * ᐃ, 155 * ᐃ, 27 * ᐃ, 157 * ᐃ, 39 * ᐃ);
		Ⲇ.bezierCurveTo(157 * ᐃ, 45 * ᐃ, 157 * ᐃ, ᐃ * 49, 150 * ᐃ, 56 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, 66 * ᐃ, ᐃ * 138, 66 * ᐃ, ᐃ * 138, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137, ᐃ * 50, 137 * ᐃ, 47 * ᐃ, 141 * ᐃ, 42 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔⵠⵠᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, ᐃ * 69);
		Ⲇ.bezierCurveTo(148 * ᐃ, ᐃ * 56, ᐃ * 156, 50 * ᐃ, 158 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 159, 64 * ᐃ, ᐃ * 160, ᐃ * 67, 153 * ᐃ, 77 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 148, 83 * ᐃ, ᐃ * 145, 84 * ᐃ, 143 * ᐃ, 77 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 149, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 89, 151 * ᐃ, 84 * ᐃ, 156 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(161 * ᐃ, ᐃ * 73, 163 * ᐃ, ᐃ * 78, ᐃ * 162, 86 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 91, 155 * ᐃ, ᐃ * 99, ᐃ * 152, ᐃ * 98);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(111 * ᐃ, 61 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 51, ᐃ * 117, 51 * ᐃ, 124 * ᐃ, 64 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, 68 * ᐃ, ᐃ * 128, 76 * ᐃ, 126 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 84, 122 * ᐃ, 82 * ᐃ, ᐃ * 115, 74 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 67, ᐃ * 115, 74 * ᐃ, 115 * ᐃ, 74 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 111, 68 * ᐃ, ᐃ * 111, ᐃ * 66, ᐃ * 111, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107 * ᐃ, ᐃ * 81);
		Ⲇ.bezierCurveTo(108 * ᐃ, 74 * ᐃ, 112 * ᐃ, ᐃ * 73, 118 * ᐃ, ᐃ * 84);
		Ⲇ.bezierCurveTo(ᐃ * 122, 88 * ᐃ, ᐃ * 122, ᐃ * 93, 121 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, 98 * ᐃ, 113 * ᐃ, 98 * ᐃ, ᐃ * 109, 90 * ᐃ);
		Ⲇ.bezierCurveTo(107 * ᐃ, 87 * ᐃ, 106 * ᐃ, ᐃ * 85, 107 * ᐃ, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7]);
		return ΔΔ
	}

	function ⲆⲆᐃᐃᐃⵠⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 48;
		ΔΔ.height = ᐃ * 47;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(7.1875 * ᐃ, 25.434661865234375 * ᐃ);
		Ⲇ.bezierCurveTo(11.1875 * ᐃ, 13.434661865234375 * ᐃ, 18.1875 * ᐃ, ᐃ * 8.434661865234375, ᐃ * 32.1875, 10.434661865234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45.1875, 14.434661865234375 * ᐃ, 41.1875 * ᐃ, 24.434661865234375 * ᐃ, ᐃ * 36.1875, ᐃ * 30.434661865234375);
		Ⲇ.bezierCurveTo(22.1875 * ᐃ, 42.434661865234375 * ᐃ, ᐃ * 2.1875, ᐃ * 41.434661865234375, ᐃ * 7.1875, 25.434661865234375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⲆⵠⲆΔΔᐃⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 142;
		ΔΔ.height = 118 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 111, 27.3671875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, ᐃ * 9.3671875, 125 * ᐃ, ᐃ * 13.3671875, 126 * ᐃ, ᐃ * 21.3671875);
		Ⲇ.bezierCurveTo(126 * ᐃ, ᐃ * 33.3671875, ᐃ * 119, 43.3671875 * ᐃ, ᐃ * 118, ᐃ * 42.3671875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[4], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(31 * ᐃ, ᐃ * 23.3671875);
		Ⲇ.bezierCurveTo(ᐃΔⲆⲆᐃⵠⵠ * ᐃ, ᐃ * 15.3671875, ᐃ * ΔᐃⲆⲆᐃⵠⲆ, ᐃ * 14.3671875, ᐃ * 17, ᐃ * 20.3671875);
		Ⲇ.bezierCurveTo(ᐃ * 22, ᐃ * 33.3671875, ⵠᐃⵠⲆ * ᐃ, 27.3671875 * ᐃ, 24 * ᐃ, 34.3671875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃΔᐃⲆⵠ], ⲆⵠΔΔⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 70.5, ᐃ * 34.8671875);
		Ⲇ.rotate(ΔΔᐃ);
		ᐃΔⵠ(Ⲇ, -49.5 * ᐃ, -21.5 * ᐃ, 99 * ᐃ, 43 * ᐃ, ᐃⲆⵠᐃᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ⲆⵠⵠⲆΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 71, 40.8671875 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -49 * ᐃ, ᐃ * -12.5, ᐃ * 98, 25 * ᐃ, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆΔ], ᐃᐃ[ᐃⵠ], ᐃ * Δⵠⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 19.800003051757812, ᐃ * 75.95625305175781);
		Ⲇ.bezierCurveTo(19.300003051757812 * ᐃ, 82.95625305175781 * ᐃ, ᐃ * 19.300003051757812, ᐃ * 82.95625305175781, ᐃ * 18.800003051757812, ᐃ * 89.95625305175781);
		Ⲇ.bezierCurveTo(ᐃ * 38.80000305175781, ᐃ * 115.95625305175781, 37.80000305175781 * ᐃ, ᐃ * 104.95625305175781, 31.800003051757812 * ᐃ, 91.95625305175781 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ᐃⵠⵠ], ᐃ * ⲆⵠⵠⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(119.80000305175781 * ᐃ, 75.95625305175781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120.80000305175781, 82.95625305175781 * ᐃ, ᐃ * 120.80000305175781, 82.95625305175781 * ᐃ, ᐃ * 121.80000305175781, ᐃ * 89.95625305175781);
		Ⲇ.bezierCurveTo(ᐃ * 101.80000305175781, 111.95625305175781 * ᐃ, ᐃ * 99.80000305175781, ᐃ * 111.95625305175781, 112.80000305175781 * ᐃ, 81.95625305175781 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆΔ], ᐃᐃ[ⲆΔᐃⲆ], ⵠΔΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 17.800003051757812, 49.15625 * ᐃ);
		Ⲇ.bezierCurveTo(17.800003051757812 * ᐃ, ᐃ * 64.15625, 17.800003051757812 * ᐃ, ᐃ * 64.15625, ᐃ * 17.800003051757812, 79.15625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 23.300003051757812, ᐃ * 85.15625, 23.300003051757812 * ᐃ, ᐃ * 85.15625, ᐃ * 28.800003051757812, 91.15625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 36.80000305175781, 96.15625 * ᐃ, ᐃ * 32.80000305175781, ᐃ * 91.15625, 28.800003051757812 * ᐃ, ᐃ * 77.15625);
		Ⲇ.bezierCurveTo(33.80000305175781 * ᐃ, 65.15625 * ᐃ, 33.80000305175781 * ᐃ, ᐃ * 65.15625, ᐃ * 38.80000305175781, ᐃ * 53.15625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[ᐃⵠⲆⲆⲆ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 123.80000305175781, ᐃ * 53.95625305175781);
		Ⲇ.bezierCurveTo(ᐃ * 121.80000305175781, 77.95625305175781 * ᐃ, ᐃ * 121.80000305175781, 74.95625305175781 * ᐃ, ᐃ * 121.80000305175781, ᐃ * 78.95625305175781);
		Ⲇ.bezierCurveTo(ᐃ * 115.80000305175781, ᐃ * 84.95625305175781, ᐃ * 115.80000305175781, 84.95625305175781 * ᐃ, ᐃ * 109.80000305175781, ᐃ * 90.95625305175781);
		Ⲇ.bezierCurveTo(102.80000305175781 * ᐃ, ᐃ * 93.95625305175781, 105.80000305175781 * ᐃ, ᐃ * 86.95625305175781, 110.80000305175781 * ᐃ, ᐃ * 76.95625305175781);
		Ⲇ.bezierCurveTo(107.30000305175781 * ᐃ, ᐃ * 65.45625305175781, 103.80000305175781 * ᐃ, ᐃ * 53.95625305175781, ᐃ * 103.80000305175781, ᐃ * 53.95625305175781);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⲆⲆⲆ], ⲆⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ⵠΔΔᐃΔ * ᐃ, 56.3671875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 70, 56.8671875 * ᐃ, ᐃ * 70, ᐃ * 56.8671875, ᐃ * 122, 57.3671875 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 20.3671875 * ᐃ, ᐃ * 137, ᐃ * 16.3671875, ᐃ * 126, ᐃ * 22.3671875);
		Ⲇ.bezierCurveTo(115.5 * ᐃ, ᐃ * 34.3671875, ᐃ * 115.5, ᐃ * 34.3671875, 105 * ᐃ, 46.3671875 * ᐃ);
		Ⲇ.bezierCurveTo(70.5 * ᐃ, ᐃ * 46.3671875, ᐃ * 70.5, ᐃ * 46.3671875, ᐃ * 36, ᐃ * 46.3671875);
		Ⲇ.bezierCurveTo(ᐃ * 4, 14.3671875 * ᐃ, ΔΔⲆⵠⵠ * ᐃ, ᐃ * 18.3671875, ᐃ * ⵠᐃᐃΔⲆ, 27.3671875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 12.5, 41.8671875 * ᐃ, ᐃ * 12.5, ᐃ * 41.8671875, ΔⲆⲆⵠⵠⲆⵠ * ᐃ, 56.3671875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ], ᐃᐃ[ⵠⲆᐃᐃ], ᐃ * 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 68.30000305175781, 41.45625305175781 * ᐃ);
		Ⲇ.rotate(.76);
		ᐃΔⵠ(Ⲇ, -20.5 * ᐃ, -20.5 * ᐃ, ᐃ * 41, ᐃ * 41, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[5], ᐃ * 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 68.80000305175781, ᐃ * 44.45625305175781);
		Ⲇ.rotate(.76);
		ᐃΔⵠ(Ⲇ, ᐃ * -21, ᐃ * -20.5, ᐃ * 42, ᐃ * 41, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃ * ⲆⵠⲆΔⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 69.80000305175781, ᐃ * 44.556243896484375);
		Ⲇ.rotate(.76);
		ᐃΔⵠ(Ⲇ, -ᐃᐃⵠᐃΔ * ᐃ, -10 * ᐃ, 20 * ᐃ, ᐃ * ΔⲆΔᐃ, ᐃᐃⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ⵠΔΔᐃ * ᐃ);
		return ΔΔ
	}

	function ᐃⲆΔⵠⵠΔⵠ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 95;
		ΔΔ.height = ᐃ * 85;
		if (ᐃⲆ == ⵠⵠᐃⵠ) {
			Ⲇ.translate(7 * ᐃ, ᐃᐃⵠᐃⲆᐃⵠ * ᐃ);
			Ⲇ.scale(.9, .9);
			Ⲇ.save();
			ᐃΔⵠ(Ⲇ, ᐃ * ΔⲆⵠ, ᐃ * ΔⲆⵠΔΔ, ᐃ * 90, ᐃ * 60, 10);
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
			Ⲇ.globalCompositeOperation = ⵠ[563];
			ΔⵠⲆ(Ⲇ, 25 * ᐃ, 40 * ᐃ, 10 * ᐃ);
			Ⲇ.fill();
			ΔⵠⲆ(Ⲇ, ᐃ * 65, 40 * ᐃ, ΔⲆⵠΔᐃ * ᐃ);
			Ⲇ.fill();
			Ⲇ.restore();
			Ⲇ.save();
			ᐃΔⵠ(Ⲇ, 0, ΔΔⲆᐃ, ᐃ * 90, 60 * ᐃ, ᐃ * ⵠⵠΔⲆᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ]);
			Ⲇ.globalCompositeOperation = ⵠ[563];
			ΔⵠⲆ(Ⲇ, ᐃ * 25, ᐃ * 40, 10 * ᐃ);
			Ⲇ.fill();
			ΔⵠⲆ(Ⲇ, 65 * ᐃ, ᐃ * 40, ᐃᐃⵠᐃΔ * ᐃ);
			Ⲇ.fill();
			Ⲇ.restore()
		} else if (1 == ᐃⲆ) {
			Ⲇ.scale(.8, .8);
			Ⲇ.translate(ΔⵠΔⵠΔⲆⵠ * ᐃ, ᐃ * 33);
			Ⲇ.save();
			Ⲇ.scale(.56, .56);
			Ⲇ.translate(-39 * ᐃ, -60 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 32.5, 50.642852783203125 * ᐃ);
			Ⲇ.bezierCurveTo(83 * ᐃ, 69.64285278320312 * ᐃ, ᐃ * 83, ᐃ * 69.64285278320312, ᐃ * 133.5, 88.64285278320312 * ᐃ);
			Ⲇ.bezierCurveTo(93 * ᐃ, 92.64285278320312 * ᐃ, 93 * ᐃ, 92.64285278320312 * ᐃ, ᐃ * 52.5, 96.64285278320312 * ᐃ);
			Ⲇ.bezierCurveTo(30.5 * ᐃ, ᐃ * 100.64285278320312, ᐃ * 36.5, 94.64285278320312 * ᐃ, ᐃ * 32.5, 84.64285278320312 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 21.5, ᐃ * 45.642852783203125, ᐃ * 24.5, ᐃ * 48.642852783203125, 31.5 * ᐃ, 50.642852783203125 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 116.5, 85.64285278320312 * ᐃ);
			Ⲇ.bezierCurveTo(160.5 * ᐃ, 67.14285278320312 * ᐃ, 160.5 * ᐃ, 67.14285278320312 * ᐃ, ᐃ * 204.5, 48.642852783203125 * ᐃ);
			Ⲇ.bezierCurveTo(220.5 * ᐃ, ᐃ * 42.642852783203125, ᐃ * 208.5, 68.64285278320312 * ᐃ, ᐃ * 205.5, ᐃ * 85.64285278320312);
			Ⲇ.bezierCurveTo(202.5 * ᐃ, ᐃ * 98.64285278320312, ᐃ * 199.5, ᐃ * 98.64285278320312, ᐃ * 188.5, ᐃ * 100.64285278320312);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(166.5 * ᐃ, ᐃ * 68.64285278320312);
			Ⲇ.bezierCurveTo(ᐃ * 147.5, ᐃ * 72.64285278320312, ᐃ * 145.5, 73.64285278320312 * ᐃ, 142.5 * ᐃ, ᐃ * 62.642852783203125);
			Ⲇ.bezierCurveTo(ᐃ * 121.5, 12.642852783203125 * ᐃ, 122.5 * ᐃ, ᐃ * 5.642852783203125, 117.5 * ᐃ, ᐃ * 15.642852783203125);
			Ⲇ.bezierCurveTo(ᐃ * 105.5, 40.642852783203125 * ᐃ, ᐃ * 105.5, ᐃ * 40.642852783203125, ᐃ * 93.5, ᐃ * 65.64285278320312);
			Ⲇ.bezierCurveTo(89.5 * ᐃ, ᐃ * 74.64285278320312, ᐃ * 84.5, 72.64285278320312 * ᐃ, ᐃ * 73.5, 74.64285278320312 * ᐃ);
			Ⲇ.bezierCurveTo(98 * ᐃ, ᐃ * 87.64285278320312, 98 * ᐃ, 87.64285278320312 * ᐃ, ᐃ * 122.5, 100.64285278320312 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.restore();
			Ⲇ.save();
			ᐃΔⵠ(Ⲇ, 0, ᐃ * ⵠⲆⲆᐃⲆ, ᐃ * 90, ᐃ * 50, ᐃΔᐃᐃⵠ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			ᐃΔⵠ(Ⲇ, 0, 10 * ᐃ, 90 * ᐃ, ᐃ * 50, ⵠΔᐃΔⲆ * ᐃ);
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ]);
			Ⲇ.globalCompositeOperation = ⵠ[563];
			ΔⵠⲆ(Ⲇ, 25 * ᐃ, ᐃ * 40, ᐃ * 10);
			Ⲇ.fill();
			ΔⵠⲆ(Ⲇ, 65 * ᐃ, 40 * ᐃ, Ⲇⵠᐃⵠᐃ * ᐃ);
			Ⲇ.fill();
			Ⲇ.restore()
		}
		return ΔΔ
	}

	function ᐃⲆⵠΔⲆⲆⵠᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 85 * ᐃ;
		ΔΔ.height = 145 * ᐃ;
		Ⲇ.translate(ᐃ * -165, -95 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 217, ᐃ * 103);
		Ⲇ.bezierCurveTo(ᐃ * 209, ᐃ * 129, 203 * ᐃ, ᐃ * 137, 195 * ᐃ, 146 * ᐃ);
		Ⲇ.bezierCurveTo(195 * ᐃ, 159 * ᐃ, ᐃ * 194, ᐃ * 167, 189 * ᐃ, 178 * ᐃ);
		Ⲇ.bezierCurveTo(193 * ᐃ, ᐃ * 186, 196 * ᐃ, 195 * ᐃ, 198 * ᐃ, ᐃ * 216);
		Ⲇ.bezierCurveTo(217.5 * ᐃ, 189.5 * ᐃ, 217.5 * ᐃ, ᐃ * 189.5, ᐃ * 237, 163 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(231 * ᐃ, 163 * ᐃ);
		Ⲇ.bezierCurveTo(221 * ᐃ, ᐃ * 139, 218 * ᐃ, 128 * ᐃ, ᐃ * 215, 114 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213, 102 * ᐃ, ᐃ * 220, ᐃ * 92, ᐃ * 222, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 224, ᐃ * 118, ᐃ * 233, 138 * ᐃ, 244 * ᐃ, 161 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 235, ᐃ * 188, 224 * ᐃ, ᐃ * 198, 204 * ᐃ, 221 * ᐃ);
		Ⲇ.bezierCurveTo(190 * ᐃ, 233 * ᐃ, 190 * ᐃ, 235 * ᐃ, 180 * ᐃ, 235 * ᐃ);
		Ⲇ.bezierCurveTo(167 * ᐃ, 235 * ᐃ, 164 * ᐃ, 216 * ᐃ, ᐃ * 175, 211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176, ᐃ * 208, ᐃ * 181, 207 * ᐃ, ᐃ * 191, 205 * ᐃ);
		Ⲇ.bezierCurveTo(213 * ᐃ, 186 * ᐃ, ᐃ * 218, 180 * ᐃ, ᐃ * 230, ᐃ * 163);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃ * Ⲇⵠⵠᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(234 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 227, 156 * ᐃ, ᐃ * 222, ᐃ * 156, ᐃ * 199, 148 * ᐃ);
		Ⲇ.bezierCurveTo(201 * ᐃ, 151 * ᐃ, 216 * ᐃ, ᐃ * 159, ᐃ * 224, 162 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 209, 169.5 * ᐃ, ᐃ * 209, 169.5 * ᐃ, 194 * ᐃ, 177 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.5, 175 * ᐃ, ᐃ * 213.5, ᐃ * 175, 233 * ᐃ, ᐃ * 173);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ);
		return ΔΔ
	}

	function ⵠΔΔⵠⲆᐃⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 85;
		ΔΔ.height = 145 * ᐃ;
		Ⲇ.translate(-165 * ᐃ, ᐃ * -95);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 217, 103 * ᐃ);
		Ⲇ.bezierCurveTo(209 * ᐃ, ᐃ * 129, ᐃ * 203, 137 * ᐃ, ᐃ * 195, 146 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 195, ᐃ * 159, 194 * ᐃ, 167 * ᐃ, 189 * ᐃ, ᐃ * 178);
		Ⲇ.bezierCurveTo(193 * ᐃ, ᐃ * 186, 196 * ᐃ, ᐃ * 195, ᐃ * 198, ᐃ * 216);
		Ⲇ.bezierCurveTo(217.5 * ᐃ, ᐃ * 189.5, ᐃ * 217.5, 189.5 * ᐃ, ᐃ * 237, 163 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 231, ᐃ * 163);
		Ⲇ.bezierCurveTo(221 * ᐃ, 139 * ᐃ, 218 * ᐃ, 128 * ᐃ, ᐃ * 215, 114 * ᐃ);
		Ⲇ.bezierCurveTo(213 * ᐃ, ᐃ * 102, ᐃ * 220, 92 * ᐃ, ᐃ * 222, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 224, ᐃ * 118, 233 * ᐃ, ᐃ * 138, ᐃ * 244, ᐃ * 161);
		Ⲇ.bezierCurveTo(ᐃ * 235, ᐃ * 188, ᐃ * 224, ᐃ * 198, ᐃ * 204, ᐃ * 221);
		Ⲇ.bezierCurveTo(190 * ᐃ, 233 * ᐃ, 190 * ᐃ, ᐃ * 235, 180 * ᐃ, ᐃ * 235);
		Ⲇ.bezierCurveTo(ᐃ * 167, ᐃ * 235, 164 * ᐃ, ᐃ * 216, ᐃ * 175, 211 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176, 208 * ᐃ, 181 * ᐃ, ᐃ * 207, 191 * ᐃ, 205 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213, ᐃ * 186, 218 * ᐃ, 180 * ᐃ, 230 * ᐃ, ᐃ * 163);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ], ᐃᐃ[ⵠΔᐃⲆ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 234, ᐃ * 154);
		Ⲇ.bezierCurveTo(227 * ᐃ, 156 * ᐃ, ᐃ * 222, 156 * ᐃ, ᐃ * 199, ᐃ * 148);
		Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 151, ᐃ * 216, 159 * ᐃ, ᐃ * 224, ᐃ * 162);
		Ⲇ.bezierCurveTo(ᐃ * 209, ᐃ * 169.5, 209 * ᐃ, ᐃ * 169.5, 194 * ᐃ, 177 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.5, 175 * ᐃ, 213.5 * ᐃ, ᐃ * 175, 233 * ᐃ, 173 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ]);
		return ΔΔ
	}

	function ᐃⵠⵠⲆⲆⵠⲆⲆⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 204, ᐃ * 195.0833282470703);
		Ⲇ.rotate(10.16);
		ᐃΔⵠ(Ⲇ, -97.5 * ᐃ, ᐃ * -134.5, ᐃ * 195, ᐃ * 269, ⲆᐃΔⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[1], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 58.5, 226.5833282470703 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120.5, ᐃ * 281.5833282470703, 120.5 * ᐃ, ᐃ * 281.5833282470703, ᐃ * 182.5, 336.5833282470703 * ᐃ);
		Ⲇ.bezierCurveTo(263 * ᐃ, ᐃ * 248.5833282470703, ᐃ * 263, ᐃ * 248.5833282470703, 343.5 * ᐃ, 160.5833282470703 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 280.5, ᐃ * 104.58332824707031, 280.5 * ᐃ, ᐃ * 104.58332824707031, 217.5 * ᐃ, 48.58332824707031 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 4 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(197 * ᐃ, ᐃ * 169.0833282470703);
		Ⲇ.rotate(10.16);
		ᐃΔⵠ(Ⲇ, ᐃ * -93.5, -126.5 * ᐃ, ᐃ * 187, ᐃ * 253, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆⵠᐃ], ᐃᐃ[1], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(226.5 * ᐃ, ᐃ * 24.583328247070312);
		Ⲇ.bezierCurveTo(ᐃ * 58.5, 207.5833282470703 * ᐃ, 143 * ᐃ, ᐃ * 116.58332824707031, 59.5 * ᐃ, ᐃ * 208.5833282470703);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * ⵠᐃᐃΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 46.133331298828125, 202.64999389648438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 46.133331298828125, ᐃ * 215.64999389648438, ᐃ * 46.133331298828125, 215.64999389648438 * ᐃ, ᐃ * 46.133331298828125, ᐃ * 228.64999389648438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠⵠⲆΔ], ᐃ * ⲆΔΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 55.133331298828125, 211.64999389648438 * ᐃ);
		Ⲇ.bezierCurveTo(55.133331298828125 * ᐃ, 225.14999389648438 * ᐃ, ᐃ * 55.133331298828125, 225.14999389648438 * ᐃ, 55.133331298828125 * ᐃ, 238.64999389648438 * ᐃ);
		Ⲇ.bezierCurveTo(50.133331298828125 * ᐃ, ᐃ * 235.64999389648438, 50.133331298828125 * ᐃ, 235.64999389648438 * ᐃ, ᐃ * 45.133331298828125, 232.64999389648438 * ᐃ);
		Ⲇ.bezierCurveTo(45.133331298828125 * ᐃ, ᐃ * 216.64999389648438, 45.133331298828125 * ᐃ, 216.64999389648438 * ᐃ, 45.133331298828125 * ᐃ, ᐃ * 200.64999389648438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃᐃ[1], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(46.133331298828125 * ᐃ, ᐃ * 198.39999389648438);
		Ⲇ.bezierCurveTo(46.133331298828125 * ᐃ, ᐃ * 199.89999389648438, 46.133331298828125 * ᐃ, 199.89999389648438 * ᐃ, ᐃ * 46.133331298828125, ᐃ * 201.39999389648438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ], ᐃᐃ[ⲆΔᐃⲆ], ⵠᐃⵠⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 249.63333129882812, 120.89999389648438 * ᐃ);
		Ⲇ.rotate(7.04);
		ᐃΔⵠ(Ⲇ, ᐃ * -58.5, -32 * ᐃ, ᐃ * 117, ᐃ * 64, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ΔᐃᐃΔΔᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 175 * ᐃ;
		ΔΔ.height = ᐃ * 106;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⲆⲆ;
		Ⲇ.translate(0, ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(28 * ᐃ, ᐃ * 67);
		Ⲇ.bezierCurveTo(55 * ᐃ, 80 * ᐃ, 126 * ᐃ, ᐃ * 74, 144 * ᐃ, ᐃ * 68);
		Ⲇ.bezierCurveTo(144.5 * ᐃ, 75 * ᐃ, ᐃ * 144.5, 75 * ᐃ, ᐃ * 145, 82 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, ᐃ * 94, 47 * ᐃ, ᐃ * 91, 28 * ᐃ, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ⵠᐃⲆᐃ, -ⲆᐃⲆᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(145 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 143, ᐃ * 51, 133 * ᐃ, ᐃ * 29, ᐃ * ⵠΔⵠⲆⲆ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, 21 * ᐃ, ᐃ * 37, 37 * ᐃ, ᐃ * 31, ᐃ * 54);
		Ⲇ.bezierCurveTo(ᐃ * 23, 78 * ᐃ, 28 * ᐃ, ᐃ * 77, ᐃ * 36, 79 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, 87 * ᐃ, 120 * ᐃ, ᐃ * 81, ᐃ * 145, 76 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 38, ᐃ * 46);
		Ⲇ.bezierCurveTo(ᐃ * 52, 37 * ᐃ, 69 * ᐃ, ᐃ * 36, ᐃ * 85, 36 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 118, ᐃ * 38, 129 * ᐃ, 42 * ᐃ, ᐃ * 137, ᐃ * 48);
		Ⲇ.bezierCurveTo(135 * ᐃ, 45 * ᐃ, ᐃ * 135, 45 * ᐃ, ᐃ * 133, ᐃ * 42);
		Ⲇ.bezierCurveTo(ᐃ * 124, 32 * ᐃ, 116 * ᐃ, 28 * ᐃ, 88 * ᐃ, 25 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, 28 * ᐃ, 40 * ᐃ, ᐃ * 32, 36 * ᐃ, 44 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(145 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 143, ᐃ * 51, 133 * ᐃ, ᐃ * 29, 100 * ᐃ, ᐃ * 27);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 21, 37 * ᐃ, 37 * ᐃ, 31 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 23, 78 * ᐃ, 28 * ᐃ, 77 * ᐃ, ᐃ * 36, ᐃ * 79);
		Ⲇ.bezierCurveTo(80 * ᐃ, 87 * ᐃ, 120 * ᐃ, ᐃ * 81, ᐃ * 145, 76 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[ⵠⵠΔⲆ], 4 * ᐃ);
		Ⲇ.translate(ⵠᐃⲆᐃ, ᐃ * -3);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 28, ᐃ * 67);
		Ⲇ.bezierCurveTo(ᐃ * 55, ᐃ * 80, 126 * ᐃ, ᐃ * 74, ᐃ * 144, 68 * ᐃ);
		Ⲇ.bezierCurveTo(144.5 * ᐃ, ᐃ * 75, 144.5 * ᐃ, 75 * ᐃ, ᐃ * 145, 82 * ᐃ);
		Ⲇ.bezierCurveTo(114 * ᐃ, 94 * ᐃ, ᐃ * 47, 91 * ᐃ, 28 * ᐃ, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃⵠ], ᐃᐃ[ⵠΔⲆⵠᐃ], ᐃ * 4);
		Ⲇ.translate(0, ᐃᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 131, 43 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 40, 148 * ᐃ, ᐃ * 32, ᐃ * 147, ⲆⵠΔⲆⲆΔⵠ * ᐃ);
		Ⲇ.bezierCurveTo(166 * ᐃ, 39 * ᐃ, ᐃ * 155, 62 * ᐃ, ᐃ * 140, 67 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃ * 65, ᐃ * 128, ᐃ * 52, ᐃ * 131, 45 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(41 * ᐃ, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 42, 24 * ᐃ, 33 * ᐃ, ᐃ * 25, ᐃ * ⲆΔΔᐃⲆⲆᐃ);
		Ⲇ.bezierCurveTo(7 * ᐃ, ᐃ * 34, ᐃ * ΔΔΔⲆⲆΔᐃ, ᐃ * 63, 33 * ᐃ, 66 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, ᐃ * 59, 44 * ᐃ, ᐃ * 53, 42 * ᐃ, ᐃ * 44);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 24, ᐃ * 19);
		Ⲇ.bezierCurveTo(ᐃ * 24, ᐃ * 35, 35 * ᐃ, ᐃ * 42, 42 * ᐃ, 44 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 51, ᐃ * 43, 48 * ᐃ, ᐃ * 43, ᐃ * 56);
		Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 47, ᐃ * ΔⵠΔⲆΔⲆΔ, ᐃ * 36, 23 * ᐃ, ᐃ * ᐃᐃᐃⲆ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(148 * ᐃ, ᐃ * 18);
		Ⲇ.bezierCurveTo(159 * ᐃ, 44 * ᐃ, ᐃ * 139, ᐃ * 52, ᐃ * 130, 55 * ᐃ);
		Ⲇ.bezierCurveTo(129 * ᐃ, 48 * ᐃ, ᐃ * 129, ᐃ * 46, ᐃ * 131, ᐃ * 43);
		Ⲇ.bezierCurveTo(144 * ᐃ, ᐃ * 37, ᐃ * 148, ᐃ * 35, ᐃ * 147, ᐃ * 18);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(131 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 40, 148 * ᐃ, ᐃ * 32, 147 * ᐃ, ᐃ * 17);
		Ⲇ.bezierCurveTo(166 * ᐃ, 39 * ᐃ, 155 * ᐃ, 62 * ᐃ, 140 * ᐃ, ᐃ * 67);
		Ⲇ.bezierCurveTo(128 * ᐃ, 65 * ᐃ, ᐃ * 128, ᐃ * 52, 131 * ᐃ, ᐃ * 45);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃᐃⲆ], ᐃ * ⵠᐃⵠᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 41, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30, ᐃ * 42, ᐃ * 24, ᐃ * 33, ᐃ * 25, ᐃ * 17);
		Ⲇ.bezierCurveTo(ᐃⲆⲆΔᐃ * ᐃ, 34 * ᐃ, ᐃ * ΔΔΔⲆⲆΔᐃ, ᐃ * 63, 33 * ᐃ, 66 * ᐃ);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 59, 44 * ᐃ, ᐃ * 53, 42 * ᐃ, 44 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], 4 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 87, ᐃ * 34.5);
		Ⲇ.rotate(ⵠⵠᐃⵠ);
		ᐃΔⵠ(Ⲇ, -ⲆⲆᐃᐃᐃ * ᐃ, ᐃ * -10.5, ᐃ * ΔᐃⲆⲆᐃⵠⲆ, 21 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⵠΔ], ᐃᐃ[ⵠΔⵠᐃ], ⵠΔΔᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(87 * ᐃ, ᐃ * 57);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -8 * ᐃ, ᐃ * -23, ᐃ * ᐃΔΔⲆⲆΔΔ, ᐃ * 46, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ⵠΔⲆΔ], ᐃ * ⵠⲆᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 87, ᐃ * 39, ᐃ * 4.123105625617661);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠΔΔΔⲆ], ᐃᐃ[ᐃΔⲆⲆⵠ], ᐃ * Δⵠⵠⵠ);
		ΔⵠⲆ(Ⲇ, 87 * ᐃ, ᐃ * 60, ᐃ * 4.242640687119285);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠⲆⵠ], ᐃᐃ[ⵠⲆΔΔ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 28, ᐃ * 67);
		Ⲇ.bezierCurveTo(ᐃ * 55, 80 * ᐃ, 126 * ᐃ, ᐃ * 74, 144 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(144.5 * ᐃ, 75 * ᐃ, 144.5 * ᐃ, ᐃ * 75, ᐃ * 145, 82 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 114, 94 * ᐃ, ᐃ * 47, 91 * ᐃ, ᐃ * 28, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(27 * ᐃ, 69 * ᐃ);
		Ⲇ.bezierCurveTo(13 * ᐃ, ᐃ * 77, ᐃ * ⲆⵠⲆᐃΔⵠᐃ, 74 * ᐃ, ᐃ * 27, ᐃ * 80);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠⲆᐃⲆ], ᐃᐃ[ΔⲆⲆᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 145, 70 * ᐃ);
		Ⲇ.bezierCurveTo(149.5 * ᐃ, 72 * ᐃ, ᐃ * 149.5, 72 * ᐃ, 154 * ᐃ, 74 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 150, ᐃ * 77, 150 * ᐃ, ᐃ * 77, ᐃ * 146, ᐃ * 80);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠΔΔ], ᐃᐃ[2], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 50, ᐃ * 80, ΔⲆⲆⲆⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃΔⲆ], ᐃᐃ[ᐃᐃⲆΔ], ᐃ * ⲆⲆΔΔ);
		ΔⵠⲆ(Ⲇ, 86.01141357421875 * ᐃ, 81.76705932617188 * ᐃ, ΔⲆⲆΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃΔᐃⲆΔⵠ], ᐃᐃ[ᐃΔⵠᐃ], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 119.01141357421875, 80.13069152832031 * ᐃ, ᐃ * ⵠΔⲆⲆΔ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠΔΔ], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * 4);
		return ΔΔ
	}

	function ᐃⲆΔᐃⲆΔⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 147;
		ΔΔ.height = ᐃ * 172;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(0, ΔⲆᐃᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃᐃΔⵠⵠ * ᐃ, ᐃ * 50);
		Ⲇ.bezierCurveTo(ᐃ * ⲆΔⲆᐃⵠᐃΔ, ᐃ * 16, ᐃ * 49, ᐃⵠⵠΔⲆ * ᐃ, 67 * ᐃ, ᐃⲆᐃⵠᐃ * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * ᐃⲆⲆᐃΔ, 128 * ᐃ, 32 * ᐃ, 135 * ᐃ, 48 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146, ᐃ * 96, 124 * ᐃ, 131 * ᐃ, ᐃ * 96, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 96, 158 * ᐃ, ᐃ * 79, 156 * ᐃ, 75 * ᐃ, ᐃ * 156);
		Ⲇ.bezierCurveTo(ᐃ * 50, 154 * ᐃ, ᐃ * 53, 150 * ᐃ, ᐃ * 52, 135 * ᐃ);
		Ⲇ.bezierCurveTo(2 * ᐃ, ᐃ * 127, ᐃ * ᐃⵠⲆⲆ, 87 * ᐃ, ᐃ * ⲆᐃⲆᐃᐃ, 50 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.translate(ⲆΔᐃ, ᐃ * -8);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⲆΔΔΔᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(15 * ᐃ, ᐃΔᐃᐃⲆ * ᐃ, 49 * ᐃ, 6 * ᐃ, 67 * ᐃ, 6 * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, ⵠⵠⲆⵠ * ᐃ, ᐃ * 128, 32 * ᐃ, ᐃ * 135, ᐃ * 48);
		Ⲇ.bezierCurveTo(146 * ᐃ, 96 * ᐃ, ᐃ * 124, ᐃ * 131, 96 * ᐃ, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 96, ᐃ * 158, ᐃ * 79, ᐃ * 156, ᐃ * 75, ᐃ * 156);
		Ⲇ.bezierCurveTo(50 * ᐃ, ᐃ * 154, 53 * ᐃ, 150 * ᐃ, ᐃ * 52, 135 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠΔⲆΔ * ᐃ, ᐃ * 127, 3 * ᐃ, 87 * ᐃ, ᐃ * ΔⲆᐃⵠᐃ, 50 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * Δᐃⵠᐃᐃ, ᐃ * 57);
		Ⲇ.bezierCurveTo(2 * ᐃ, ᐃ * 50, 5 * ᐃ, ᐃ * 22, ᐃ * 24, 22 * ᐃ);
		Ⲇ.bezierCurveTo(41 * ᐃ, 21 * ᐃ, ᐃ * 54, 32 * ᐃ, 55 * ᐃ, ᐃ * 48);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 93, ᐃ * 47);
		Ⲇ.bezierCurveTo(94 * ᐃ, ᐃ * 24, ᐃ * 116, ᐃ * 21, ᐃ * 120, 20 * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, ᐃ * ⲆⲆᐃⲆⲆ, 146 * ᐃ, 52 * ᐃ, ᐃ * 133, 58 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆΔΔ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 51 * ᐃ, ᐃ * 91, ᐃ * ᐃⵠⵠΔΔΔⲆ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ]);
		ΔⵠⲆ(Ⲇ, 95 * ᐃ, 91 * ᐃ, ⲆⲆⵠⲆⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ]);
		ΔⵠⲆ(Ⲇ, 91 * ᐃ, ᐃ * 89, ᐃΔΔΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ]);
		ΔⵠⲆ(Ⲇ, 47 * ᐃ, 89 * ᐃ, ᐃΔᐃⲆⵠ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 54, ᐃ * 133);
		Ⲇ.bezierCurveTo(56 * ᐃ, ᐃ * 108, ᐃ * 64, ᐃ * 99, ᐃ * 73, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 86, ᐃ * 97, ᐃ * 91, ᐃ * 119, ᐃ * 93, ᐃ * 133);
		Ⲇ.bezierCurveTo(94 * ᐃ, 155 * ᐃ, ᐃ * 90, 150 * ᐃ, 74 * ᐃ, 155 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, ᐃ * 152, ᐃ * 55, 145 * ᐃ, 54 * ᐃ, ᐃ * 134);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 65.25, 135 * ᐃ);
		Ⲇ.bezierCurveTo(75.25 * ᐃ, 128 * ᐃ, 83.25 * ᐃ, 133 * ᐃ, 83.25 * ᐃ, 138 * ᐃ);
		Ⲇ.bezierCurveTo(88.25 * ᐃ, ᐃ * 148, 61.25 * ᐃ, 149 * ᐃ, ᐃ * 64.25, 137 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(74 * ᐃ, ᐃ * 145);
		Ⲇ.bezierCurveTo(ᐃ * 74, ᐃ * 148, 74 * ᐃ, ᐃ * 148, ᐃ * 74, 151 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 19, 58 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆᐃΔⵠⵠ * ᐃ, ᐃ * 38, ᐃ * 18, 33 * ᐃ, ᐃ * 28, 34 * ᐃ);
		Ⲇ.bezierCurveTo(41 * ᐃ, 39 * ᐃ, 45 * ᐃ, 45 * ᐃ, 50 * ᐃ, ᐃ * 51);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔⵠΔⵠⵠ, 51 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 36, ᐃ * 119, ᐃ * 31, 128 * ᐃ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, ᐃ * 49, ᐃ * 128, ᐃ * 58, 128 * ᐃ, ᐃ * 60);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		return ΔΔ
	}

	function ⲆᐃᐃⵠⲆⵠⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 120;
		ΔΔ.height = ᐃ * 320;
		Ⲇ.translate(ᐃ * -60, -15 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 188.5, ᐃ * 3.953125);
		Ⲇ.bezierCurveTo(188.5 * ᐃ, ᐃ * 171.453125, ᐃ * 188.5, ᐃ * 171.453125, 188.5 * ᐃ, 338.953125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162.5, 268.953125 * ᐃ, 145.5 * ᐃ, ᐃ * 265.953125, ᐃ * 116.5, ᐃ * 244.953125);
		Ⲇ.bezierCurveTo(67.5 * ᐃ, ᐃ * 204.953125, 87.5 * ᐃ, ᐃ * 160.953125, 113.5 * ᐃ, ᐃ * 125.953125);
		Ⲇ.bezierCurveTo(141.5 * ᐃ, ᐃ * 90.953125, ᐃ * 176.5, ᐃ * 56.953125, 188.5 * ᐃ, 3.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⵠⵠΔⵠᐃⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 187;
		ΔΔ.height = ᐃ * 119;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔⲆᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ΔⵠⲆΔ, 3);
		Ⲇ.moveTo(53 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(Δᐃᐃᐃ * ᐃ, ᐃ * 60, ᐃ * 11, 72 * ᐃ, ⵠⲆⲆⲆⵠ * ᐃ, ᐃ * 81);
		Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 82, 24 * ᐃ, ᐃ * 81, 29 * ᐃ, ᐃ * 82);
		Ⲇ.bezierCurveTo(ᐃ * 26, ᐃ * 87, 28 * ᐃ, 84 * ᐃ, 28 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, 101 * ᐃ, ᐃ * 92, ᐃⵠⲆⵠⲆ * ᐃ, 138 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 172, ᐃ * 87, 180 * ᐃ, 72 * ᐃ, 168 * ᐃ, 62 * ᐃ);
		Ⲇ.bezierCurveTo(154 * ᐃ, 51 * ᐃ, ᐃ * 150, 50 * ᐃ, 148 * ᐃ, 49 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132, ᐃ * 42, ᐃ * 90, 40 * ᐃ, 55 * ᐃ, 45 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(Ⲇᐃⵠᐃ, -Δᐃᐃᐃ);
		Ⲇ.moveTo(53 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * ⵠᐃᐃᐃ, ᐃ * 60, ᐃΔⲆᐃⲆᐃⵠ * ᐃ, ᐃ * 72, ᐃ * ΔᐃⵠᐃⲆ, ᐃ * 81);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 82, 24 * ᐃ, 81 * ᐃ, 29 * ᐃ, ᐃ * 82);
		Ⲇ.bezierCurveTo(26 * ᐃ, ᐃ * 87, 28 * ᐃ, ᐃ * 84, 28 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 101, 92 * ᐃ, 100 * ᐃ, 138 * ᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(172 * ᐃ, ᐃ * 87, 180 * ᐃ, ᐃ * 72, ᐃ * 168, 62 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154, 51 * ᐃ, 150 * ᐃ, 50 * ᐃ, ᐃ * 148, ᐃ * 49);
		Ⲇ.bezierCurveTo(132 * ᐃ, ᐃ * 42, ᐃ * 90, 40 * ᐃ, 55 * ᐃ, 45 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 151, ᐃ * 60);
		Ⲇ.bezierCurveTo(140 * ᐃ, ᐃ * 36, 137 * ᐃ, ᐃ * 32, 124 * ᐃ, ᐃ * 29);
		Ⲇ.bezierCurveTo(98 * ᐃ, 22 * ᐃ, ᐃ * 80, 24 * ᐃ, 62 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(42 * ᐃ, ᐃ * 35, 38 * ᐃ, 46 * ᐃ, ᐃ * 34, ᐃ * 58);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 74, ᐃ * 76, ᐃ * 76, 91 * ᐃ, ᐃ * 78);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔᐃⲆ], ᐃΔⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(37 * ᐃ, ᐃ * 53);
		Ⲇ.bezierCurveTo(30 * ᐃ, 56 * ᐃ, 29 * ᐃ, ᐃ * 67, ᐃ * 30, ᐃ * 68);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 108, ᐃ * 150, ᐃ * 76, 155 * ᐃ, 70 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154, 60 * ᐃ, 151 * ᐃ, 54 * ᐃ, ᐃ * 149, ᐃ * 53);
		Ⲇ.bezierCurveTo(ᐃ * 101, 74 * ᐃ, ᐃ * 66, 66 * ᐃ, 37 * ᐃ, 53 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆᐃ], ᐃᐃ[3], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ⵠΔᐃᐃⲆ * ᐃ, ᐃ * 36);
		Ⲇ.bezierCurveTo(92 * ᐃ, 25 * ᐃ, 86 * ᐃ, ᐃ * 28, ᐃ * 82, ᐃ * 34);
		Ⲇ.bezierCurveTo(ᐃ * 88, ᐃ * 40, ᐃ * 93, ᐃ * 40, 98 * ᐃ, 36 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⲆΔᐃ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80 * ᐃ, ᐃ * 43);
		Ⲇ.bezierCurveTo(69 * ᐃ, ᐃ * 46, ᐃ * 67, 52 * ᐃ, ᐃ * 69, ᐃ * 58);
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[1], ᐃ * ⵠᐃⵠᐃⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 58, ᐃ * 50, 5 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 43, 65 * ᐃ, ⵠᐃᐃΔᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 58, ᐃ * 73, ᐃ * ᐃᐃⵠⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 58, ᐃ * 50, 2 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, 43 * ᐃ, 65 * ᐃ, ⵠⵠⲆᐃ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 58, 73 * ᐃ, ΔⵠΔΔ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ΔᐃᐃΔⲆⲆᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 142 * ᐃ;
		ΔΔ.height = ᐃ * 118;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 70.16665649414062, 38.20831298828125 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -58.5, ᐃ * -27.5, ᐃ * 117, 55 * ᐃ, ᐃᐃⲆⲆⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃ[1], 4 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 70, ᐃ * 42.70831298828125);
		ᐃΔⵠ(Ⲇ, -61 * ᐃ, -20 * ᐃ, ᐃ * 122, ᐃ * 40, ᐃ * ᐃⵠᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆᐃ], ᐃᐃ[ΔΔⲆΔ], ᐃ * ᐃΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(123 * ᐃ, ᐃ * 70.375);
		Ⲇ.bezierCurveTo(115 * ᐃ, 99.375 * ᐃ, ᐃ * 119, ᐃ * 85.375, 115 * ᐃ, ᐃ * 100.375);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 116.375, 117 * ᐃ, 109.375 * ᐃ, ᐃ * 131, ᐃ * 100.375);
		Ⲇ.bezierCurveTo(ᐃ * 131, 83.375 * ᐃ, 131 * ᐃ, 83.375 * ᐃ, 131 * ᐃ, 66.375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ], ᐃᐃ[ΔⲆᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 11, 68.375 * ᐃ);
		Ⲇ.bezierCurveTo(11.166656494140625 * ᐃ, ᐃ * 84.375, ᐃ * ᐃᐃⲆⲆⲆ, ᐃ * 99.375, 10 * ᐃ, ᐃ * 100.375);
		Ⲇ.bezierCurveTo(35 * ᐃ, 113.375 * ᐃ, ᐃ * 27, 110.375 * ᐃ, 25 * ᐃ, ᐃ * 95.375);
		Ⲇ.bezierCurveTo(16 * ᐃ, ᐃ * 68.375, ᐃ * ⲆⲆᐃⵠⵠⵠⲆ, ᐃ * 69.375, ᐃ * ΔΔⲆᐃⲆ, ᐃ * 68.375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔⵠ], ᐃᐃ[1], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 46, ᐃ * 32.375);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 8.375, 45 * ᐃ, 7.375 * ᐃ, ᐃ * 56, 6.375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 105, ᐃ * 4.375, 102 * ᐃ, 6.375 * ᐃ, 97 * ᐃ, 32.375 * ᐃ);
		Ⲇ.bezierCurveTo(138 * ᐃ, ᐃ * 43.375, 133 * ᐃ, ᐃ * 45.375, ᐃ * 133, 58.375 * ᐃ);
		Ⲇ.bezierCurveTo(133 * ᐃ, 85.375 * ᐃ, 125 * ᐃ, 74.375 * ᐃ, 111 * ᐃ, 70.375 * ᐃ);
		Ⲇ.bezierCurveTo(70 * ᐃ, 69.875 * ᐃ, 29 * ᐃ, 69.375 * ᐃ, ᐃ * 29, 69.375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 7, 84.375 * ᐃ, 7 * ᐃ, ᐃ * 70.375, ⲆΔⵠΔᐃ * ᐃ, 59.375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃΔΔⲆⲆ * ᐃ, 28.375 * ᐃ, ᐃ * 32, ᐃ * 39.375, ᐃ * 44, ᐃ * 32.375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ], ᐃᐃ[1], ⵠᐃᐃⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 71, ᐃ * 44.375, ᐃ * 16.55294535724685);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ᐃᐃΔᐃ], Δⵠⵠⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 71, 43.70831298828125 * ᐃ, 8.94427190999916 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠⵠⲆ], ᐃ * ⵠⲆᐃᐃ);
		return ΔΔ
	}

	function ⲆᐃⵠΔᐃⵠⲆⵠΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 161 * ᐃ;
		ΔΔ.height = 190 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⲆΔΔᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 17, 95 * ᐃ, 19 * ᐃ, 95 * ᐃ, ᐃ * 21, ᐃ * 95);
		Ⲇ.bezierCurveTo(ⵠⵠⵠΔᐃᐃⵠ * ᐃ, 83 * ᐃ, ᐃ * ᐃⲆᐃⲆΔ, ᐃ * 93, Ⲇⵠⵠᐃᐃ * ᐃ, 76 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⵠⵠⲆⲆⵠΔΔ, ᐃ * 75, ΔᐃᐃΔᐃ * ᐃ, ᐃ * 75, ᐃ * 18, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ⵠΔᐃⲆⵠᐃᐃ * ᐃ, 67 * ᐃ, ᐃ * 13, ᐃ * 67, ᐃⵠᐃⵠΔ * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * ᐃⲆⲆⵠΔⵠᐃ, ᐃ * 59, 14 * ᐃ, ᐃ * 59, 21 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 35, 35 * ᐃ, 45 * ᐃ, 49 * ᐃ, ᐃ * 31);
		Ⲇ.bezierCurveTo(ᐃ * 53, 24 * ᐃ, 51 * ᐃ, ᐃ * 21, 51 * ᐃ, ⵠⵠᐃⲆⵠⲆΔ * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, ᐃ * 23, 63 * ᐃ, 24 * ᐃ, ᐃ * 69, ᐃ * 29);
		Ⲇ.bezierCurveTo(76 * ᐃ, 7 * ᐃ, 75 * ᐃ, ᐃ * ⵠΔⲆᐃⲆᐃⵠ, ᐃ * 76, 6 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, ᐃ * 12, 84 * ᐃ, 18 * ᐃ, ᐃ * 89, 27 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95, 25 * ᐃ, ᐃ * ⲆΔᐃⲆⵠ, ΔⲆⲆⲆᐃ * ᐃ, ᐃ * 105, 14 * ᐃ);
		Ⲇ.bezierCurveTo(103 * ᐃ, 25 * ᐃ, 111 * ᐃ, ᐃ * 33, ᐃ * 110, 34 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 123, 48 * ᐃ, ᐃ * 123, ᐃ * 48, ᐃ * 136, ᐃ * 62);
		Ⲇ.bezierCurveTo(142 * ᐃ, 60 * ᐃ, ᐃ * 147, 59 * ᐃ, ᐃ * 155, ᐃ * 58);
		Ⲇ.bezierCurveTo(147 * ᐃ, 65 * ᐃ, ᐃ * 147, 65 * ᐃ, 139 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 73, 145 * ᐃ, 73 * ᐃ, 151 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 80, 145 * ᐃ, ᐃ * 80, ᐃ * 138, 87 * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, 88 * ᐃ, 144 * ᐃ, ᐃ * 88, 150 * ᐃ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 125, 103 * ᐃ, 125 * ᐃ, 125 * ᐃ, ᐃ * 113, 141 * ᐃ);
		Ⲇ.bezierCurveTo(92 * ᐃ, ᐃ * 178, ᐃ * 85, ᐃ * 177, ᐃ * 76, 178 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, 179 * ᐃ, ᐃ * 51, 164 * ᐃ, 35 * ᐃ, ᐃ * 131);
		Ⲇ.bezierCurveTo(18 * ᐃ, ᐃ * 95, ᐃ * 13, 99 * ᐃ, ᐃ * 8, ᐃ * 93);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 25, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ⲆⲆⵠᐃⲆ * ᐃ, ᐃ * 58, 17 * ᐃ, ᐃ * 51, ᐃ * ΔⲆⲆⵠⵠⲆⵠ, 33 * ᐃ);
		Ⲇ.bezierCurveTo(19 * ᐃ, ᐃ * 12, ᐃ * 21, 12 * ᐃ, ᐃ * 32, ᐃ * ⲆᐃᐃⵠΔΔⵠ);
		Ⲇ.bezierCurveTo(ᐃ * 63, 31 * ᐃ, 66 * ᐃ, 45 * ᐃ, 66 * ᐃ, 54 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃⵠⲆⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(91 * ᐃ, ᐃ * 53);
		Ⲇ.bezierCurveTo(ᐃ * 91, ᐃ * 40, 98 * ᐃ, 33 * ᐃ, ᐃ * 121, ᐃ * ΔΔⵠΔ);
		Ⲇ.bezierCurveTo(137 * ᐃ, ᐃ * 12, 137 * ᐃ, 16 * ᐃ, ᐃ * 139, ᐃ * 27);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 49, 140 * ᐃ, ᐃ * 57, ᐃ * 134, 64 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, 4 * ᐃ);
		return ΔΔ
	}

	function ⵠᐃⵠΔΔⲆΔⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 201 * ᐃ;
		ΔΔ.height = 164 * ᐃ;
		Ⲇ.translate(0, ᐃᐃⲆᐃΔ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃᐃΔᐃ;
		ΔⵠⲆ(Ⲇ, 100.5 * ᐃ, 82 * ᐃ, ᐃ * 74.92746655359852);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ], ᐃᐃ[ΔΔⵠᐃ], ⵠΔⲆᐃΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 100.5, 82 * ᐃ, 65.9417374971317 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ], ᐃᐃ[ᐃⵠΔ], ᐃ * 4);
		Ⲇ.translate(ΔⵠⲆⲆ, -ᐃᐃⲆᐃⵠ);
		Ⲇ.globalAlpha = ⲆᐃⲆⲆ;
		ΔⵠⲆ(Ⲇ, ᐃ * 100.5, ᐃ * 82, 74.92746655359852 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[3], Ⲇⵠⵠᐃᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 100.5, ᐃ * 82, ᐃ * 65.9417374971317);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ᐃᐃⲆΔ], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, 100.5 * ᐃ, ᐃ * 82, 35.9417374971317 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * ᐃᐃᐃⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 100.5, ᐃ * 82, ᐃ * 15.9417374971317);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⲆΔ], 6 * ᐃ);
		return ΔΔ
	}
	const ᐃΔⵠⲆⲆⵠᐃ = {};
	const ⲆΔⲆⲆΔΔⵠⲆᐃ = {};
	ᐃΔⵠⲆⲆⵠᐃ["get"] = function(ΔⲆᐃᐃᐃΔⵠⲆⵠ, ⵠⵠⲆⵠᐃⵠΔ) {
		if (ⵠⵠⲆⵠᐃⵠΔ !== "ᐃΔⵠⲆⲆⵠᐃ") {
			const ᐃΔⵠⲆⲆⵠᐃ = function() {
				for (let ΔⲆᐃᐃᐃΔⵠⲆⵠ = 0; ΔⲆᐃᐃᐃΔⵠⲆⵠ < 5; ΔⲆᐃᐃᐃΔⵠⲆⵠ++) ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("click", (function() {
					ᐃΔⵠⲆⲆⵠᐃ()
				}))
			};
			ᐃΔⵠⲆⲆⵠᐃ()
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ⵠΔⵠΔΔΔΔⲆΔ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ⲆΔⲆⲆΔΔⵠⲆᐃ, ᐃΔⵠⲆⲆⵠᐃ);
	const ⵠⲆⲆΔⵠⲆΔ = ⵠΔⵠΔΔΔΔⲆΔ.ᐃΔⵠⲆⲆⵠᐃ;

	function ᐃΔⵠΔⵠᐃⲆᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = ᐃ * 170;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔⲆᐃ;
		Ⲇ.translate(-ᐃᐃⲆᐃᐃ * ᐃ, ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72.5, ᐃ * 4.109375);
		Ⲇ.bezierCurveTo(117 * ᐃ, ᐃ * 9.609375, 117 * ᐃ, ᐃ * 9.609375, ᐃ * 161.5, ᐃ * 15.109375);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, 106.109375 * ᐃ, 110.5 * ᐃ, 130.109375 * ᐃ, 63.5 * ᐃ, 145.109375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.5, 120.609375 * ᐃ, ᐃ * 33.5, 120.609375 * ᐃ, 3.5 * ᐃ, ᐃ * 96.109375);
		Ⲇ.bezierCurveTo(82.5 * ᐃ, ᐃ * 75.109375, 69.5 * ᐃ, ᐃ * 29.109375, 71.5 * ᐃ, ᐃ * 6.109375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆⲆ]);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.translate(ᐃ * 10, -ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(72.5 * ᐃ, ᐃ * 4.109375);
		Ⲇ.bezierCurveTo(117 * ᐃ, ᐃ * 9.609375, ᐃ * 117, ᐃ * 9.609375, ᐃ * 161.5, 15.109375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134.5, 106.109375 * ᐃ, ᐃ * 110.5, ᐃ * 130.109375, ᐃ * 63.5, 145.109375 * ᐃ);
		Ⲇ.bezierCurveTo(33.5 * ᐃ, 120.609375 * ᐃ, 33.5 * ᐃ, 120.609375 * ᐃ, ᐃ * 3.5, ᐃ * 96.109375);
		Ⲇ.bezierCurveTo(82.5 * ᐃ, ᐃ * 75.109375, ᐃ * 69.5, ᐃ * 29.109375, ᐃ * 71.5, 6.109375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * ΔΔⵠᐃⵠ);
		return ΔΔ
	}

	function ΔΔⲆⲆΔΔⲆᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 271;
		ΔΔ.height = ᐃ * 366;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 133, 99 * ᐃ);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 123, ᐃ * 199, ᐃ * 152, 209 * ᐃ, ᐃ * 169);
		Ⲇ.bezierCurveTo(228 * ᐃ, 205 * ᐃ, ᐃ * 224, ᐃ * 245, ᐃ * 190, 276 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 296, 99 * ᐃ, ᐃ * 292, ᐃ * 79, ᐃ * 274);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 253, 47 * ᐃ, ᐃ * 214, ᐃ * 50, 197 * ᐃ);
		Ⲇ.bezierCurveTo(61 * ᐃ, 143 * ᐃ, ᐃ * 102, ᐃ * 113, ᐃ * 131, ᐃ * 99);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(73 * ᐃ, 270 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 79, 280 * ᐃ, 77 * ᐃ, ᐃ * 280, ᐃ * 78, ᐃ * 287);
		Ⲇ.bezierCurveTo(78 * ᐃ, ᐃ * 290, ᐃ * 83, ᐃ * 291, 82 * ᐃ, ᐃ * 299);
		Ⲇ.bezierCurveTo(81 * ᐃ, 301 * ᐃ, ᐃ * 87, 301 * ᐃ, 92 * ᐃ, 314 * ᐃ);
		Ⲇ.bezierCurveTo(94 * ᐃ, ᐃ * 319, 100 * ᐃ, 321 * ᐃ, 107 * ᐃ, ᐃ * 320);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 323, ᐃ * 114, ᐃ * 324, 119 * ᐃ, 320 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 321 * ᐃ, 146 * ᐃ, ᐃ * 323, ᐃ * 139, 320 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 324, ᐃ * 150, 324 * ᐃ, ᐃ * 153, ᐃ * 320);
		Ⲇ.bezierCurveTo(168 * ᐃ, 319 * ᐃ, ᐃ * 171, ᐃ * 316, 173 * ᐃ, 307 * ᐃ);
		Ⲇ.bezierCurveTo(180 * ᐃ, ᐃ * 305, 180 * ᐃ, 301 * ᐃ, ᐃ * 178, 296 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183, ᐃ * 296, 185 * ᐃ, 289 * ᐃ, ᐃ * 188, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 171, ᐃ * 286, 149 * ᐃ, 290 * ᐃ, ᐃ * 132, ᐃ * 289);
		Ⲇ.bezierCurveTo(ᐃ * 101, ᐃ * 290, 86 * ᐃ, ᐃ * 280, 74 * ᐃ, ᐃ * 271);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(76 * ᐃ, ᐃ * 252);
		Ⲇ.bezierCurveTo(ᐃ * 85, ᐃ * 294, ᐃ * 96, ᐃ * 314, 103 * ᐃ, 314 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 316, ᐃ * 151, 314 * ᐃ, 156 * ᐃ, 314 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, 317 * ᐃ, ᐃ * 182, ᐃ * 285, 191 * ᐃ, 256 * ᐃ);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, ᐃ * 254, 134.5 * ᐃ, ᐃ * 254, ᐃ * 78, 252 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84, 257 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 122, 273 * ᐃ, 146 * ᐃ, ᐃ * 268, ᐃ * 179, 261 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, 258 * ᐃ, ᐃ * 187, 266 * ᐃ, 178 * ᐃ, ᐃ * 272);
		Ⲇ.bezierCurveTo(ᐃ * 160, 284 * ᐃ, 123 * ᐃ, 282 * ᐃ, 100 * ᐃ, 277 * ᐃ);
		Ⲇ.bezierCurveTo(73 * ᐃ, ᐃ * 260, ᐃ * 79, 257 * ᐃ, ᐃ * 84, ᐃ * 257);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125 * ᐃ, ᐃ * 65);
		Ⲇ.bezierCurveTo(ᐃ * 133, ᐃ * 45, ᐃ * 136, 42 * ᐃ, 141 * ᐃ, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, ᐃ * 96, ᐃ * 164, 117 * ᐃ, 175 * ᐃ, ᐃ * 134);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 181, 207 * ᐃ, 182 * ᐃ, ᐃ * 208, 215 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206, ᐃ * 240, 205 * ᐃ, 246 * ᐃ, 184 * ᐃ, ᐃ * 258);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 267, ᐃ * 131, ᐃ * 272, 86 * ᐃ, ᐃ * 258);
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * 252, 68 * ᐃ, 239 * ᐃ, ᐃ * 64, 216 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62, 194 * ᐃ, 72 * ᐃ, ᐃ * 169, ᐃ * 92, 142 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, 121 * ᐃ, 114 * ᐃ, 101 * ᐃ, 125 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, ᐃ * 37);
		Ⲇ.bezierCurveTo(116 * ᐃ, ᐃ * 28, 119 * ᐃ, ᐃ * 27, ᐃ * 126, 37 * ᐃ);
		Ⲇ.bezierCurveTo(134 * ᐃ, 48 * ᐃ, ᐃ * 134, ᐃ * 49, 132 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 67, ᐃ * 127, ᐃ * 65, 120 * ᐃ, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 49, ᐃ * 113, 43 * ᐃ, ᐃ * 115, ᐃ * 38);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146, 34 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152, 28 * ᐃ, 155 * ᐃ, 27 * ᐃ, 157 * ᐃ, ᐃ * 39);
		Ⲇ.bezierCurveTo(157 * ᐃ, ᐃ * 45, 157 * ᐃ, ᐃ * 49, 150 * ᐃ, ᐃ * 56);
		Ⲇ.bezierCurveTo(ᐃ * 141, ᐃ * 66, 138 * ᐃ, ᐃ * 66, ᐃ * 138, 57 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 50 * ᐃ, 137 * ᐃ, ᐃ * 47, ᐃ * 141, 42 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, 69 * ᐃ);
		Ⲇ.bezierCurveTo(148 * ᐃ, 56 * ᐃ, 156 * ᐃ, 50 * ᐃ, ᐃ * 158, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 64, ᐃ * 160, ᐃ * 67, 153 * ᐃ, ᐃ * 77);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 83, 145 * ᐃ, 84 * ᐃ, 143 * ᐃ, ᐃ * 77);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(149 * ᐃ, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 149, ᐃ * 89, ᐃ * 151, ᐃ * 84, 156 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, 73 * ᐃ, ᐃ * 163, 78 * ᐃ, 162 * ᐃ, ᐃ * 86);
		Ⲇ.bezierCurveTo(161 * ᐃ, ᐃ * 91, 155 * ᐃ, 99 * ᐃ, ᐃ * 152, 98 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 111, ᐃ * 61);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 51, ᐃ * 117, 51 * ᐃ, 124 * ᐃ, 64 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃ * 68, 128 * ᐃ, 76 * ᐃ, ᐃ * 126, ᐃ * 79);
		Ⲇ.bezierCurveTo(ᐃ * 123, ᐃ * 84, 122 * ᐃ, 82 * ᐃ, 115 * ᐃ, ᐃ * 74);
		Ⲇ.bezierCurveTo(ᐃ * 112, ᐃ * 67, ᐃ * 115, 74 * ᐃ, 115 * ᐃ, ᐃ * 74);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 68, 111 * ᐃ, ᐃ * 66, ᐃ * 111, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(108 * ᐃ, 74 * ᐃ, ᐃ * 112, ᐃ * 73, 118 * ᐃ, 84 * ᐃ);
		Ⲇ.bezierCurveTo(122 * ᐃ, 88 * ᐃ, 122 * ᐃ, ᐃ * 93, ᐃ * 121, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 114, ᐃ * 98, ᐃ * 113, 98 * ᐃ, ᐃ * 109, ᐃ * 90);
		Ⲇ.bezierCurveTo(107 * ᐃ, 87 * ᐃ, ᐃ * 106, 85 * ᐃ, 107 * ᐃ, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		return ΔΔ
	}

	function ⲆᐃΔⵠΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 20;
		ΔΔ.height = 35 * ᐃ;
		ᐃΔⵠ(Ⲇ, ⲆΔᐃ, 0, 20, 35, ⲆⲆΔΔⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⲆΔⵠᐃΔΔⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 145;
		ΔΔ.height = ᐃ * 120;
		Ⲇ.beginPath();
		Ⲇ.scale(.6, .6);
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃ * ΔⵠΔⵠᐃⵠⲆ, ᐃ * -8);
		Ⲇ.moveTo(101 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 144, 69 * ᐃ, 149 * ᐃ, ᐃ * 58, ᐃ * 162, 49 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 174, ᐃ * 31, 173 * ᐃ, ᐃ * 38, 172 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(168 * ᐃ, 73 * ᐃ, 158 * ᐃ, 75 * ᐃ, 152 * ᐃ, 78 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, 89 * ᐃ, ᐃ * 107, 91 * ᐃ, 107 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃⵠⲆⵠⲆ * ᐃ, 107 * ᐃ, 107 * ᐃ, 107 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 99, ᐃ * 112, 98 * ᐃ, ᐃ * 110, ᐃ * 93, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 94, 107 * ᐃ, 93 * ᐃ, 107 * ᐃ, ᐃ * 93, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 93, ΔᐃⵠᐃⵠᐃΔ * ᐃ, 93 * ᐃ, ⵠΔᐃᐃⲆ * ᐃ, 92 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(92 * ᐃ, ᐃ * 89, 90 * ᐃ, 90 * ᐃ, 73 * ᐃ, ᐃ * 86);
		Ⲇ.bezierCurveTo(45 * ᐃ, 81 * ᐃ, ᐃ * 40, 77 * ᐃ, 35 * ᐃ, 68 * ᐃ);
		Ⲇ.bezierCurveTo(23 * ᐃ, ᐃ * 36, ᐃ * 28, 34 * ᐃ, 36 * ᐃ, 46 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, 58 * ᐃ, 83 * ᐃ, 72 * ᐃ, 98 * ᐃ, 72 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆᐃΔ], ᐃᐃ[5], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.scale(1.1, 1.1);
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(-9 * ᐃ, ᐃ * ΔⲆΔⲆ);
		Ⲇ.moveTo(101 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, 69 * ᐃ, ᐃ * 149, ᐃ * 58, 162 * ᐃ, 49 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 174, ᐃ * 31, ᐃ * 173, 38 * ᐃ, 172 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 168, 73 * ᐃ, ᐃ * 158, 75 * ᐃ, 152 * ᐃ, ᐃ * 78);
		Ⲇ.bezierCurveTo(ᐃ * 106, 89 * ᐃ, 107 * ᐃ, 91 * ᐃ, ᐃ * 107, 94 * ᐃ);
		Ⲇ.bezierCurveTo(107 * ᐃ, ᐃ * 100, ᐃ * 107, ᐃ * 107, 107 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 99, ᐃ * 112, 98 * ᐃ, ᐃ * 110, ᐃ * 93, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 94, ᐃ * 107, 93 * ᐃ, ᐃ * 107, 93 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 100, ᐃ * 93, 100 * ᐃ, 92 * ᐃ, ᐃ * 94);
		Ⲇ.bezierCurveTo(92 * ᐃ, 89 * ᐃ, 90 * ᐃ, 90 * ᐃ, 73 * ᐃ, ᐃ * 86);
		Ⲇ.bezierCurveTo(ᐃ * 45, ᐃ * 81, 40 * ᐃ, ᐃ * 77, 35 * ᐃ, ᐃ * 68);
		Ⲇ.bezierCurveTo(ᐃ * 23, 36 * ᐃ, ᐃ * 28, ᐃ * 34, ᐃ * 36, 46 * ᐃ);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 58, ᐃ * 83, ᐃ * 72, 98 * ᐃ, 72 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃᐃ[ⲆΔⵠᐃ], ᐃΔᐃⲆⵠ * ᐃ);
		Ⲇ.scale(1.1, 1.1);
		Ⲇ.translate(ᐃ * -ΔⲆᐃᐃΔ, ᐃΔᐃⲆⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(100 * ᐃ, 73.06874084472656 * ᐃ);
		Ⲇ.rotate(ᐃⵠΔ);
		ᐃΔⵠ(Ⲇ, ᐃ * -61, -38.5 * ᐃ, ᐃ * 122, 40 * ᐃ, ⵠᐃⵠⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(100 * ᐃ, 71.36874389648438 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -60.5, -ΔⵠΔⵠᐃⵠⲆ * ᐃ, 121 * ᐃ, 30 * ᐃ, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[2], ᐃ * ᐃΔᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(144 * ᐃ, 80 * ᐃ);
		Ⲇ.bezierCurveTo(152 * ᐃ, ᐃΔᐃⵠⵠ * ᐃ, ᐃ * 152, ᐃ * 101, 153 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(159 * ᐃ, 100 * ᐃ, ᐃ * 159, 100 * ᐃ, ᐃ * 160, ⵠⵠΔΔⵠ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, 84 * ᐃ, ᐃ * 161, ᐃ * 84, 162 * ᐃ, 68 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 57, ᐃ * 75);
		Ⲇ.bezierCurveTo(ᐃ * 48, ᐃ * 101, 53 * ᐃ, 89 * ᐃ, 48 * ᐃ, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * ᐃⵠⲆⵠⲆ, 44 * ᐃ, ⵠᐃⵠⵠᐃΔⲆ * ᐃ, ᐃ * 39, 97 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39, 83 * ᐃ, 39 * ᐃ, 83 * ᐃ, 39 * ᐃ, 69 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(101 * ᐃ, ᐃ * 72);
		Ⲇ.bezierCurveTo(ᐃ * 144, ᐃ * 69, 149 * ᐃ, 58 * ᐃ, 162 * ᐃ, ᐃ * 49);
		Ⲇ.bezierCurveTo(ᐃ * 174, 31 * ᐃ, 173 * ᐃ, ᐃ * 38, 172 * ᐃ, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 168, ᐃ * 73, 158 * ᐃ, ᐃ * 75, 152 * ᐃ, 78 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * 89, ᐃ * 107, 91 * ᐃ, ᐃ * 107, 94 * ᐃ);
		Ⲇ.bezierCurveTo(107 * ᐃ, ᐃ * ᐃΔᐃⵠⵠ, 107 * ᐃ, ᐃ * 107, 107 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(99 * ᐃ, ᐃ * 112, 98 * ᐃ, ᐃ * 110, ᐃ * 93, 107 * ᐃ);
		Ⲇ.bezierCurveTo(94 * ᐃ, 107 * ᐃ, ᐃ * 93, 107 * ᐃ, ᐃ * 93, ᐃ * 107);
		Ⲇ.bezierCurveTo(93 * ᐃ, ᐃ * 100, ᐃ * 93, ᐃ * 100, ᐃ * 92, 94 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, 89 * ᐃ, 90 * ᐃ, ᐃ * 90, 73 * ᐃ, 86 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, 81 * ᐃ, 40 * ᐃ, 77 * ᐃ, ᐃ * 35, 68 * ᐃ);
		Ⲇ.bezierCurveTo(23 * ᐃ, 36 * ᐃ, ᐃ * 28, ᐃ * 34, ᐃ * 36, ᐃ * 46);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 58, 83 * ᐃ, 72 * ᐃ, 98 * ᐃ, 72 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⲆ], ᐃᐃ[ⲆᐃΔΔΔ], 4 * ᐃ);
		Ⲇ.translate(ⲆⲆⲆ, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115.5 * ᐃ, ᐃ * 116.07290649414062);
		Ⲇ.bezierCurveTo(159.5 * ᐃ, ᐃ * 99.07290649414062, 159.5 * ᐃ, 98.07290649414062 * ᐃ, ᐃ * 159.5, 98.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 155.5, 116.07290649414062 * ᐃ, ᐃ * 159.5, ᐃ * 116.07290649414062, ᐃ * 159.5, ᐃ * 118.07290649414062);
		Ⲇ.bezierCurveTo(147.5 * ᐃ, ᐃ * 130.07290649414062, ᐃ * 136.5, ᐃ * 132.07290649414062, ᐃ * 115.5, 138.07290649414062 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[2], ᐃ * ⵠΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 39.5, 96.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 85.5, 114.07290649414062 * ᐃ, ᐃ * 62.5, 105.57290649414062 * ᐃ, ᐃ * 85.5, ᐃ * 115.07290649414062);
		Ⲇ.bezierCurveTo(ᐃ * 85.5, 125.57290649414062 * ᐃ, 85.5 * ᐃ, ᐃ * 125.57290649414062, ᐃ * 85.5, 136.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51.5, ᐃ * 129.07290649414062, ᐃ * 51.5, ᐃ * 125.07290649414062, 41.5 * ᐃ, 118.07290649414062 * ᐃ);
		Ⲇ.bezierCurveTo(44.5 * ᐃ, ᐃ * 106.07290649414062, 42.5 * ᐃ, 103.07290649414062 * ᐃ, 40.5 * ᐃ, ᐃ * 96.07290649414062);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(86 * ᐃ, ᐃ * 80);
		Ⲇ.bezierCurveTo(ᐃ * 97, 88 * ᐃ, ᐃ * 106, 84 * ᐃ, ᐃ * 112, 80 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 62 * ᐃ, 106 * ᐃ, ᐃ * 59, 99 * ᐃ, 54 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 86, 62 * ᐃ, ᐃ * 86, 73 * ᐃ, ᐃ * 86, 80 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠⵠ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.scale(.5, .5);
		Ⲇ.translate(ᐃ * 100, ᐃ * 71);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 86, ᐃ * 80);
		Ⲇ.bezierCurveTo(97 * ᐃ, 88 * ᐃ, ᐃ * 106, 84 * ᐃ, 112 * ᐃ, 80 * ᐃ);
		Ⲇ.bezierCurveTo(112 * ᐃ, 62 * ᐃ, 106 * ᐃ, ᐃ * 59, ᐃ * 99, ᐃ * 54);
		Ⲇ.bezierCurveTo(ᐃ * 86, 62 * ᐃ, 86 * ᐃ, ᐃ * 73, ᐃ * 86, ᐃ * 80);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠΔⲆ], ᐃᐃ[ΔⵠΔΔ], 4 * ᐃ);
		return ΔΔ
	}

	function ⵠΔΔΔⲆⵠⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 120;
		ΔΔ.height = 280 * ᐃ;
		Ⲇ.translate(-100 * ᐃ, -20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(228.5 * ᐃ, 331.953125 * ᐃ);
		Ⲇ.bezierCurveTo(228.5 * ᐃ, ᐃ * 12.953125, 228.5 * ᐃ, 171.453125 * ᐃ, 228.5 * ᐃ, ᐃ * 10.953125);
		Ⲇ.bezierCurveTo(196.5 * ᐃ, ᐃ * 76.953125, 206.5 * ᐃ, ᐃ * 78.953125, ᐃ * 191.5, 114.953125 * ᐃ);
		Ⲇ.bezierCurveTo(162.5 * ᐃ, ᐃ * 170.953125, 206.5 * ᐃ, 220.953125 * ᐃ, ᐃ * 210.5, 251.953125 * ᐃ);
		Ⲇ.bezierCurveTo(218.5 * ᐃ, 287.953125 * ᐃ, ᐃ * 220.5, ᐃ * 291.953125, ᐃ * 228.5, 331.953125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ΔⲆⵠᐃⵠⲆΔⲆᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 147;
		ΔΔ.height = ᐃ * 172;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ⵠⵠΔⵠΔ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(15 * ᐃ, 16 * ᐃ, ᐃ * 49, 6 * ᐃ, 67 * ᐃ, ⲆΔᐃⵠᐃ * ᐃ);
		Ⲇ.bezierCurveTo(121 * ᐃ, ᐃ * ⵠᐃᐃᐃ, ᐃ * 128, ᐃ * 32, 135 * ᐃ, 48 * ᐃ);
		Ⲇ.bezierCurveTo(146 * ᐃ, ᐃ * 96, 124 * ᐃ, ᐃ * 131, ᐃ * 96, 135 * ᐃ);
		Ⲇ.bezierCurveTo(96 * ᐃ, 158 * ᐃ, ᐃ * 79, 156 * ᐃ, ᐃ * 75, 156 * ᐃ);
		Ⲇ.bezierCurveTo(50 * ᐃ, 154 * ᐃ, 53 * ᐃ, 150 * ᐃ, ᐃ * 52, 135 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ᐃΔⲆⲆⵠ, ᐃ * 127, ᐃⵠⵠⵠ * ᐃ, 87 * ᐃ, 8 * ᐃ, 50 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃ * ⵠᐃⵠᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(14 * ᐃ, ᐃ * 57);
		Ⲇ.bezierCurveTo(ⵠⵠⲆᐃ * ᐃ, ᐃ * 50, ⲆΔΔⵠΔ * ᐃ, ᐃ * 22, 24 * ᐃ, 22 * ᐃ);
		Ⲇ.bezierCurveTo(41 * ᐃ, ᐃ * 21, ᐃ * 54, 32 * ᐃ, ᐃ * 55, ᐃ * 48);
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 94, 24 * ᐃ, 116 * ᐃ, 21 * ᐃ, ᐃ * 120, ⵠΔΔΔ * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, 17 * ᐃ, 146 * ᐃ, ᐃ * 52, ᐃ * 133, 58 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ⵠᐃᐃⲆ * ᐃ);
		return ΔΔ
	}

	function ΔᐃⵠⵠⲆⲆᐃΔⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 85 * ᐃ;
		ΔΔ.height = 145 * ᐃ;
		Ⲇ.translate(ᐃ * -20, -95 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 50, 105 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, 119 * ᐃ, ᐃ * 64, ᐃ * 137, ᐃ * 71, ᐃ * 146);
		Ⲇ.bezierCurveTo(71 * ᐃ, ᐃ * 161, 74 * ᐃ, ᐃ * 169, 79 * ᐃ, ᐃ * 179);
		Ⲇ.bezierCurveTo(68 * ᐃ, ᐃ * 192, 70 * ᐃ, 204 * ᐃ, ᐃ * 69, ᐃ * 216);
		Ⲇ.bezierCurveTo(ᐃ * 50, 189.5 * ᐃ, ᐃ * 50, 189.5 * ᐃ, 31 * ᐃ, ᐃ * 163);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 44, ᐃ * 106);
		Ⲇ.bezierCurveTo(49 * ᐃ, ᐃ * 90, ᐃ * 58, ᐃ * 104, ᐃ * 51, ᐃ * 121);
		Ⲇ.bezierCurveTo(45 * ᐃ, ᐃ * 143, 41 * ᐃ, 151 * ᐃ, 37 * ᐃ, ᐃ * 162);
		Ⲇ.bezierCurveTo(48 * ᐃ, ᐃ * 180, 58 * ᐃ, ᐃ * 188, 76 * ᐃ, ᐃ * 205);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 209, ᐃ * 105, 229 * ᐃ, 92 * ᐃ, ᐃ * 235);
		Ⲇ.bezierCurveTo(ᐃ * 76, ᐃ * 239, ᐃ * 75, 232 * ᐃ, ᐃ * 56, ᐃ * 213);
		Ⲇ.bezierCurveTo(31 * ᐃ, ᐃ * 187, ᐃ * 28, ᐃ * 176, 23 * ᐃ, 162 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 38, 131 * ᐃ, 40 * ᐃ, ᐃ * 120, ᐃ * 44, 106 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ, ᐃᐃ, ᐃ * ΔⲆΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, ᐃ * 159);
		Ⲇ.bezierCurveTo(ᐃ * 46, ᐃ * 157, 59 * ᐃ, 152 * ᐃ, ᐃ * 68, 148 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, 155 * ᐃ, 52 * ᐃ, 160 * ᐃ, ᐃ * 44, 164 * ᐃ);
		Ⲇ.bezierCurveTo(59 * ᐃ, 169 * ᐃ, ᐃ * 66, ᐃ * 174, ᐃ * 75, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 58, ᐃ * 178, ᐃ * 49, ᐃ * 175, 37 * ᐃ, ᐃ * 174);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ);
		return ΔΔ
	}

	function ⵠᐃⲆᐃΔ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 120;
		ΔΔ.height = ᐃΔᐃⵠⵠ * ᐃ;
		ᐃΔⵠ(Ⲇ, 10 * ᐃ, ᐃ * 10, ᐃ * 95, ᐃ * 80, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ᐃΔⵠ(Ⲇ, ᐃ * ⲆΔΔⵠⲆ, ᐃ * 5, 95 * ᐃ, 80 * ᐃ, ᐃ * ⵠΔⲆⵠᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[ⵠΔⲆᐃΔ], 4 * ᐃ);
		if (0 == ᐃⲆ) {
			var ⵠⵠ = ᐃⲆΔⵠⵠΔⵠ(ᐃ * .75, ᐃᐃ, ΔⵠⲆⲆ);
			Ⲇ.drawImage(ⵠⵠ, 22 * ᐃ, 18 * ᐃ)
		} else if (ᐃⲆ == ⲆᐃⲆⲆ) {
			var ⵠⵠ = ᐃⲆΔⵠⵠΔⵠ(.75 * ᐃ, ᐃᐃ, 1);
			Ⲇ.drawImage(ⵠⵠ, ᐃ * 22, 18 * ᐃ)
		}
		return ΔΔ
	}

	function Δⵠⵠᐃⵠᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 180;
		ΔΔ.height = ᐃ * 120;
		Ⲇ.translate(ᐃ * -65, -35 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃⵠΔ, ᐃ * ⵠΔᐃΔⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 150.5, 63.84375 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -67, ᐃ * -16.5, ᐃ * 134, ᐃ * 33, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 80.5, 75.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 83, ᐃ * 106.34375, ᐃ * 83, 106.34375 * ᐃ, 85.5 * ᐃ, 137.34375 * ᐃ);
		Ⲇ.bezierCurveTo(93 * ᐃ, ᐃ * 135.84375, ᐃ * 93, 135.84375 * ᐃ, 100.5 * ᐃ, ᐃ * 134.34375);
		Ⲇ.bezierCurveTo(ᐃ * 99.5, 100.84375 * ᐃ, 99.5 * ᐃ, ᐃ * 100.84375, ᐃ * 98.5, 67.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 206.5, ᐃ * 71.34375);
		Ⲇ.bezierCurveTo(203.5 * ᐃ, 104.34375 * ᐃ, ᐃ * 203.5, ᐃ * 104.34375, 200.5 * ᐃ, 137.34375 * ᐃ);
		Ⲇ.bezierCurveTo(208.5 * ᐃ, 137.34375 * ᐃ, 208.5 * ᐃ, ᐃ * 137.34375, 216.5 * ᐃ, ᐃ * 137.34375);
		Ⲇ.bezierCurveTo(ᐃ * 219, ᐃ * 102.84375, ᐃ * 219, 102.84375 * ᐃ, 221.5 * ᐃ, ᐃ * 68.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 136.5, ᐃ * 75.34375);
		Ⲇ.bezierCurveTo(ᐃ * 139, ᐃ * 94.34375, ᐃ * 139, ᐃ * 94.34375, 141.5 * ᐃ, ᐃ * 113.34375);
		Ⲇ.bezierCurveTo(ᐃ * 149.5, 115.34375 * ᐃ, 149.5 * ᐃ, ᐃ * 115.34375, ᐃ * 157.5, 117.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162, 97.34375 * ᐃ, 162 * ᐃ, 97.34375 * ᐃ, 166.5 * ᐃ, ᐃ * 77.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 152.5, 80.84375 * ᐃ);
		Ⲇ.rotate(3.12);
		ᐃΔⵠ(Ⲇ, -73 * ᐃ, -20.5 * ᐃ, ᐃ * 146, 41 * ᐃ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, -10 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(150.5 * ᐃ, 63.84375 * ᐃ);
		ᐃΔⵠ(Ⲇ, -67 * ᐃ, -16.5 * ᐃ, 134 * ᐃ, ᐃ * 33, ᐃ * ᐃᐃⲆᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * ᐃΔᐃⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80.5 * ᐃ, ᐃ * 75.34375);
		Ⲇ.bezierCurveTo(83 * ᐃ, 106.34375 * ᐃ, ᐃ * 83, 106.34375 * ᐃ, 85.5 * ᐃ, ᐃ * 137.34375);
		Ⲇ.bezierCurveTo(ᐃ * 93, 135.84375 * ᐃ, 93 * ᐃ, 135.84375 * ᐃ, 100.5 * ᐃ, 134.34375 * ᐃ);
		Ⲇ.bezierCurveTo(99.5 * ᐃ, ᐃ * 100.84375, ᐃ * 99.5, 100.84375 * ᐃ, 98.5 * ᐃ, 67.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * ⵠΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(206.5 * ᐃ, ᐃ * 71.34375);
		Ⲇ.bezierCurveTo(203.5 * ᐃ, 104.34375 * ᐃ, 203.5 * ᐃ, ᐃ * 104.34375, ᐃ * 200.5, ᐃ * 137.34375);
		Ⲇ.bezierCurveTo(208.5 * ᐃ, ᐃ * 137.34375, ᐃ * 208.5, 137.34375 * ᐃ, ᐃ * 216.5, 137.34375 * ᐃ);
		Ⲇ.bezierCurveTo(219 * ᐃ, 102.84375 * ᐃ, ᐃ * 219, ᐃ * 102.84375, 221.5 * ᐃ, 68.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[ᐃΔⵠᐃ], ΔⲆΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 136.5, ᐃ * 75.34375);
		Ⲇ.bezierCurveTo(139 * ᐃ, ᐃ * 94.34375, 139 * ᐃ, ᐃ * 94.34375, ᐃ * 141.5, ᐃ * 113.34375);
		Ⲇ.bezierCurveTo(ᐃ * 149.5, 115.34375 * ᐃ, ᐃ * 149.5, ᐃ * 115.34375, 157.5 * ᐃ, 117.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 162, ᐃ * 97.34375, ᐃ * 162, ᐃ * 97.34375, ᐃ * 166.5, ᐃ * 77.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 152.5, ᐃ * 80.84375);
		Ⲇ.rotate(3.12);
		ᐃΔⵠ(Ⲇ, -73 * ᐃ, ᐃ * -20.5, ᐃ * 146, 41 * ᐃ, ᐃ * ⲆᐃᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⵠⲆᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(83.5 * ᐃ, ᐃ * 73.34375);
		Ⲇ.bezierCurveTo(ᐃ * 93.5, ᐃ * 70.34375, 105.5 * ᐃ, 70.34375 * ᐃ, 124.5 * ᐃ, ᐃ * 72.34375);
		Ⲇ.bezierCurveTo(132.5 * ᐃ, 78.34375 * ᐃ, 162.5 * ᐃ, ᐃ * 80.34375, 176.5 * ᐃ, ᐃ * 76.34375);
		Ⲇ.bezierCurveTo(ᐃ * 194.5, ᐃ * 69.34375, 192.5 * ᐃ, ᐃ * 68.34375, 199.5 * ᐃ, 63.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 204.5, ᐃ * 63.34375, 204.5 * ᐃ, 63.34375 * ᐃ, ᐃ * 209.5, ᐃ * 63.34375);
		Ⲇ.bezierCurveTo(ᐃ * 153.5, 82.34375 * ᐃ, ᐃ * 157.5, ᐃ * 85.34375, ᐃ * 209.5, 63.34375 * ᐃ);
		Ⲇ.bezierCurveTo(194.5 * ᐃ, ᐃ * 88.34375, 162.5 * ᐃ, ᐃ * 87.34375, 149.5 * ᐃ, ᐃ * 88.34375);
		Ⲇ.bezierCurveTo(129.5 * ᐃ, ᐃ * 81.34375, ᐃ * 103.5, 75.34375 * ᐃ, ᐃ * 83.5, 82.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 137.5, 65.34375 * ᐃ);
		Ⲇ.bezierCurveTo(150.5 * ᐃ, 76.34375 * ᐃ, ᐃ * 170.5, ᐃ * 71.34375, 174.5 * ᐃ, ᐃ * 65.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(221.5 * ᐃ, 85.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, ᐃ * 79.34375, 191.5 * ᐃ, 88.34375 * ᐃ, ᐃ * 181.5, ᐃ * 96.34375);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 96.34375, 201.5 * ᐃ, 96.34375 * ᐃ, ᐃ * 221.5, ᐃ * 96.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 84.5, ᐃ * 89.34375);
		Ⲇ.bezierCurveTo(ᐃ * 102.5, 87.34375 * ᐃ, 112.5 * ᐃ, 88.34375 * ᐃ, ᐃ * 119.5, 97.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102, 98.34375 * ᐃ, 102 * ᐃ, 98.34375 * ᐃ, 84.5 * ᐃ, 99.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 208.5, ᐃ * 104.34375);
		Ⲇ.bezierCurveTo(ᐃ * 208.5, ᐃ * 110.34375, ᐃ * 208.5, 110.34375 * ᐃ, 208.5 * ᐃ, 116.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 211.5, 110.34375 * ᐃ, ᐃ * 211.5, ᐃ * 110.34375, 214.5 * ᐃ, ᐃ * 104.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87.5 * ᐃ, ᐃ * 117.34375);
		Ⲇ.bezierCurveTo(ᐃ * 92, 118.84375 * ᐃ, ᐃ * 92, 118.84375 * ᐃ, ᐃ * 96.5, 120.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93, ᐃ * 123.84375, ᐃ * 93, ᐃ * 123.84375, 89.5 * ᐃ, 127.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107.5 * ᐃ, 51.34375 * ᐃ);
		Ⲇ.bezierCurveTo(122.5 * ᐃ, 54.34375 * ᐃ, 122.5 * ᐃ, ᐃ * 54.34375, 137.5 * ᐃ, ᐃ * 57.34375);
		Ⲇ.bezierCurveTo(ᐃ * 118, 57.34375 * ᐃ, ᐃ * 118, ᐃ * 57.34375, ᐃ * 98.5, ᐃ * 57.34375);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, 54.84375 * ᐃ, 94.5 * ᐃ, ᐃ * 54.84375, ᐃ * 90.5, ᐃ * 52.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 170.5, ᐃ * 52.34375);
		Ⲇ.bezierCurveTo(ᐃ * 179.5, ᐃ * 51.84375, 179.5 * ᐃ, ᐃ * 51.84375, ᐃ * 188.5, 51.34375 * ᐃ);
		Ⲇ.bezierCurveTo(187.5 * ᐃ, 53.84375 * ᐃ, 187.5 * ᐃ, 53.84375 * ᐃ, 186.5 * ᐃ, ᐃ * 56.34375);
		Ⲇ.bezierCurveTo(ᐃ * 177, 56.34375 * ᐃ, ᐃ * 177, 56.34375 * ᐃ, ᐃ * 167.5, ᐃ * 56.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80.5 * ᐃ, 69.34375 * ᐃ);
		Ⲇ.bezierCurveTo(86.5 * ᐃ, 70.34375 * ᐃ, ᐃ * 86.5, ᐃ * 70.34375, 92.5 * ᐃ, 71.34375 * ᐃ);
		Ⲇ.bezierCurveTo(86 * ᐃ, ᐃ * 73.34375, ᐃ * 86, 73.34375 * ᐃ, 79.5 * ᐃ, ᐃ * 75.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 222.5, 75.34375 * ᐃ);
		Ⲇ.bezierCurveTo(214.5 * ᐃ, ᐃ * 76.34375, 214.5 * ᐃ, ᐃ * 76.34375, ᐃ * 206.5, 77.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 216.5, 79.34375 * ᐃ, ᐃ * 216.5, 79.34375 * ᐃ, 226.5 * ᐃ, 81.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116.5, 100.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128, 97.34375 * ᐃ, ᐃ * 128, ᐃ * 97.34375, 139.5 * ᐃ, 94.34375 * ᐃ);
		Ⲇ.bezierCurveTo(140 * ᐃ, 96.84375 * ᐃ, 140 * ᐃ, 96.84375 * ᐃ, ᐃ * 140.5, ᐃ * 99.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 112.5, 48.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 115.5, ᐃ * 50.84375, ᐃ * 115.5, ᐃ * 50.84375, ᐃ * 118.5, ᐃ * 53.34375);
		Ⲇ.bezierCurveTo(131 * ᐃ, ᐃ * 50.84375, 131 * ᐃ, ᐃ * 50.84375, ᐃ * 143.5, ᐃ * 48.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 216.5, 109.34375 * ᐃ);
		Ⲇ.bezierCurveTo(213 * ᐃ, ᐃ * 114.84375, 213 * ᐃ, ᐃ * 114.84375, ᐃ * 209.5, ᐃ * 120.34375);
		Ⲇ.bezierCurveTo(ᐃ * 212, 118.84375 * ᐃ, 212 * ᐃ, 118.84375 * ᐃ, 214.5 * ᐃ, 117.34375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(86.5 * ᐃ, 133.34375 * ᐃ);
		Ⲇ.bezierCurveTo(89 * ᐃ, 127.34375 * ᐃ, 89 * ᐃ, ᐃ * 127.34375, ᐃ * 91.5, 121.34375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92.5, ᐃ * 127.34375, 92.5 * ᐃ, ᐃ * 127.34375, ᐃ * 93.5, ᐃ * 133.34375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		return ΔΔ
	}

	function ⵠⵠⵠΔⲆⲆⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 33 * ᐃ;
		ΔΔ.height = 35 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 12.75, ᐃ * 7.1328125);
		Ⲇ.bezierCurveTo(ᐃ * 26.75, 8.1328125 * ᐃ, ᐃ * 27.75, ᐃ * 14.1328125, ᐃ * 24.75, ᐃ * 23.1328125);
		Ⲇ.bezierCurveTo(19.75 * ᐃ, ᐃ * 31.1328125, 15.75 * ᐃ, 33.1328125 * ᐃ, 6.75 * ᐃ, ᐃ * 26.1328125);
		Ⲇ.bezierCurveTo(ᐃ * .75, ᐃ * 19.1328125, 4.75 * ᐃ, ᐃ * 8.1328125, 12.75 * ᐃ, 7.1328125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⵠΔⵠⲆᐃᐃⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 161 * ᐃ;
		ΔΔ.height = ᐃ * 190;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ΔΔᐃ, ΔᐃᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔᐃᐃⵠⲆⲆᐃ, 93 * ᐃ);
		Ⲇ.bezierCurveTo(17 * ᐃ, 95 * ᐃ, ΔⵠⵠΔᐃⲆᐃ * ᐃ, 95 * ᐃ, 21 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 9, ᐃ * 83, 17 * ᐃ, ᐃ * 93, ᐃ * ⵠⲆᐃᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * ΔⵠᐃⵠᐃⲆⵠ, ᐃ * 75, ⵠⵠᐃᐃΔⵠⵠ * ᐃ, 75 * ᐃ, ᐃ * ⵠΔΔᐃΔ, ᐃ * 75);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆΔᐃᐃ, 67 * ᐃ, ⵠⲆⲆⵠⲆᐃⵠ * ᐃ, 67 * ᐃ, ΔᐃⵠⲆⵠ * ᐃ, 59 * ᐃ);
		Ⲇ.bezierCurveTo(14 * ᐃ, 59 * ᐃ, 14 * ᐃ, ᐃ * 59, 21 * ᐃ, ᐃ * 59);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 35, ᐃ * 35, ᐃ * 45, ᐃ * 49, 31 * ᐃ);
		Ⲇ.bezierCurveTo(53 * ᐃ, 24 * ᐃ, 51 * ᐃ, 21 * ᐃ, ᐃ * 51, ᐃ * ΔⲆⲆⲆᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, ᐃ * 23, 63 * ᐃ, 24 * ᐃ, 69 * ᐃ, 29 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76, 7 * ᐃ, 75 * ᐃ, ᐃ * ΔⵠᐃⵠᐃⲆⵠ, ᐃ * 76, ᐃ * 6);
		Ⲇ.bezierCurveTo(81 * ᐃ, ⲆΔᐃᐃⲆ * ᐃ, ᐃ * 84, ᐃΔⲆᐃᐃᐃΔ * ᐃ, 89 * ᐃ, 27 * ᐃ);
		Ⲇ.bezierCurveTo(95 * ᐃ, ᐃ * 25, ⵠΔⵠⲆⲆ * ᐃ, 16 * ᐃ, ᐃ * 105, ᐃ * 14);
		Ⲇ.bezierCurveTo(ᐃ * 103, ᐃ * 25, 111 * ᐃ, 33 * ᐃ, ᐃ * 110, 34 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 48 * ᐃ, ᐃ * 123, 48 * ᐃ, 136 * ᐃ, ᐃ * 62);
		Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 60, 147 * ᐃ, ᐃ * 59, 155 * ᐃ, 58 * ᐃ);
		Ⲇ.bezierCurveTo(147 * ᐃ, 65 * ᐃ, 147 * ᐃ, 65 * ᐃ, 139 * ᐃ, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 145, 73 * ᐃ, ᐃ * 145, 73 * ᐃ, 151 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, 80 * ᐃ, ᐃ * 145, ᐃ * 80, 138 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 144, 88 * ᐃ, 144 * ᐃ, 88 * ᐃ, ᐃ * 150, ᐃ * 89);
		Ⲇ.bezierCurveTo(ᐃ * 125, 103 * ᐃ, ᐃ * 125, ᐃ * 125, ᐃ * 113, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 178, 85 * ᐃ, 177 * ᐃ, ᐃ * 76, 178 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, 179 * ᐃ, 51 * ᐃ, ᐃ * 164, 35 * ᐃ, 131 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 18, ᐃ * 95, ⵠᐃⵠⲆΔⲆⲆ * ᐃ, 99 * ᐃ, 8 * ᐃ, 93 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.translate(ΔΔᐃ, -ΔⲆΔⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ᐃⵠⵠΔⵠ, ᐃ * 93);
		Ⲇ.bezierCurveTo(ΔΔⲆᐃⲆ * ᐃ, 95 * ᐃ, ᐃ * ΔᐃⵠᐃⲆ, 95 * ᐃ, ᐃ * 21, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * ᐃⵠⵠΔΔΔⲆ, ᐃ * 83, 17 * ᐃ, 93 * ᐃ, 4 * ᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(11 * ᐃ, ᐃ * 75, ⵠⵠⲆⲆⵠΔΔ * ᐃ, ᐃ * 75, 18 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 13, 67 * ᐃ, ΔⲆΔᐃΔ * ᐃ, 67 * ᐃ, 7 * ᐃ, 59 * ᐃ);
		Ⲇ.bezierCurveTo(14 * ᐃ, 59 * ᐃ, 14 * ᐃ, ᐃ * 59, 21 * ᐃ, 59 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 35, 35 * ᐃ, 45 * ᐃ, 49 * ᐃ, 31 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53, ᐃ * 24, ᐃ * 51, ᐃ * 21, 51 * ᐃ, ᐃ * ⲆⲆᐃΔΔ);
		Ⲇ.bezierCurveTo(ᐃ * 63, 23 * ᐃ, ᐃ * 63, ᐃ * 24, 69 * ᐃ, ᐃ * 29);
		Ⲇ.bezierCurveTo(76 * ᐃ, ᐃ * 7, ᐃ * 75, ᐃ * 11, ᐃ * 76, ᐃ * 6);
		Ⲇ.bezierCurveTo(ᐃ * 81, ᐃ * ⲆᐃⵠⵠⵠΔΔ, 84 * ᐃ, ᐃ * 18, 89 * ᐃ, ᐃ * 27);
		Ⲇ.bezierCurveTo(ᐃ * 95, 25 * ᐃ, ᐃΔᐃⵠⵠ * ᐃ, ᐃ * 16, ᐃ * 105, 14 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 103, ᐃ * 25, 111 * ᐃ, ᐃ * 33, ᐃ * 110, 34 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, ᐃ * 48, 123 * ᐃ, 48 * ᐃ, 136 * ᐃ, 62 * ᐃ);
		Ⲇ.bezierCurveTo(142 * ᐃ, 60 * ᐃ, ᐃ * 147, ᐃ * 59, ᐃ * 155, 58 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 65, 147 * ᐃ, 65 * ᐃ, 139 * ᐃ, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 145, 73 * ᐃ, ᐃ * 145, 73 * ᐃ, ᐃ * 151, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 145, 80 * ᐃ, ᐃ * 145, 80 * ᐃ, 138 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, 88 * ᐃ, ᐃ * 144, 88 * ᐃ, ᐃ * 150, ᐃ * 89);
		Ⲇ.bezierCurveTo(125 * ᐃ, ᐃ * 103, ᐃ * 125, 125 * ᐃ, ᐃ * 113, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, 178 * ᐃ, ᐃ * 85, 177 * ᐃ, ᐃ * 76, 178 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, 179 * ᐃ, ᐃ * 51, 164 * ᐃ, 35 * ᐃ, 131 * ᐃ);
		Ⲇ.bezierCurveTo(18 * ᐃ, 95 * ᐃ, ⲆⵠⲆΔⲆᐃⵠ * ᐃ, ᐃ * 99, ᐃ * 8, 93 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(28 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(23 * ᐃ, 54 * ᐃ, 24 * ᐃ, 47 * ᐃ, ᐃ * 26, ᐃ * 37);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 29, 31 * ᐃ, ᐃ * 31, ᐃ * 41, 35 * ᐃ);
		Ⲇ.bezierCurveTo(52 * ᐃ, 45 * ᐃ, 55 * ᐃ, 51 * ᐃ, ᐃ * 57, ᐃ * 53);
		Ⲇ.bezierCurveTo(ᐃ * 50, 50 * ᐃ, ᐃ * 44, 47 * ᐃ, ᐃ * 43, ᐃ * 48);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 52, ᐃ * 43, ᐃ * 52, 42 * ᐃ, ᐃ * 57);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 54, 38 * ᐃ, 54 * ᐃ, ᐃ * 33, 51 * ᐃ);
		Ⲇ.bezierCurveTo(34 * ᐃ, ᐃ * 56, ᐃ * 34, 56 * ᐃ, ᐃ * 34, ᐃ * 61);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(99 * ᐃ, 55 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, 43 * ᐃ, ᐃ * 113, 39 * ᐃ, 121 * ᐃ, 34 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130, ᐃ * 29, ᐃ * 130, ᐃ * 34, 130 * ᐃ, ᐃ * 42);
		Ⲇ.bezierCurveTo(131 * ᐃ, 57 * ᐃ, ᐃ * 128, 61 * ᐃ, 129 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, 62 * ᐃ, 124 * ᐃ, ᐃ * 62, ᐃ * 119, ᐃ * 61);
		Ⲇ.bezierCurveTo(119 * ᐃ, 56 * ᐃ, ᐃ * 120, 61 * ᐃ, ᐃ * 118, ᐃ * 52);
		Ⲇ.bezierCurveTo(ᐃ * 115, 55 * ᐃ, ᐃ * 111, ᐃ * 59, 111 * ᐃ, 58 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 54, 109 * ᐃ, 57 * ᐃ, 109 * ᐃ, ᐃ * 51);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ]);
		ΔⵠⲆ(Ⲇ, 103 * ᐃ, 110 * ᐃ, 11 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔΔᐃ]);
		ΔⵠⲆ(Ⲇ, 55 * ᐃ, ᐃ * 111, 11 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, 99 * ᐃ, 107 * ᐃ, 5 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		ΔⵠⲆ(Ⲇ, ᐃ * 51, 108 * ᐃ, 5 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, 121 * ᐃ);
		Ⲇ.bezierCurveTo(45 * ᐃ, 128 * ᐃ, ᐃ * 51, ᐃ * 133, 53 * ᐃ, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 161, 70 * ᐃ, 173 * ᐃ, ᐃ * 80, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 89, 172 * ᐃ, 99 * ᐃ, ᐃ * 149, ᐃ * 107, ᐃ * 133);
		Ⲇ.bezierCurveTo(ᐃ * 114, 122 * ᐃ, ᐃ * 119, ᐃ * 123, 124 * ᐃ, ᐃ * 119);
		Ⲇ.bezierCurveTo(ᐃ * 109, 148 * ᐃ, 117 * ᐃ, ᐃ * 133, 109 * ᐃ, 147 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 87, ᐃ * 180, ᐃ * 84, 179 * ᐃ, ᐃ * 76, ᐃ * 178);
		Ⲇ.bezierCurveTo(ᐃ * 49, 173 * ᐃ, ᐃ * 44, ᐃ * 149, 31 * ᐃ, ᐃ * 121);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(-2, ᐃⵠΔ);
		Ⲇ.moveTo(71 * ᐃ, 162 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80, 155 * ᐃ, ᐃ * 85, 159 * ᐃ, ᐃ * 89, ᐃ * 164);
		Ⲇ.bezierCurveTo(ᐃ * 90, ᐃ * 171, 86 * ᐃ, 173 * ᐃ, 79 * ᐃ, ᐃ * 173);
		Ⲇ.bezierCurveTo(67 * ᐃ, ᐃ * 172, ᐃ * 67, 168 * ᐃ, 71 * ᐃ, 162 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ]);
		Ⲇ.translate(ⲆᐃⲆᐃ, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 9, ᐃ * 93);
		Ⲇ.bezierCurveTo(17 * ᐃ, 95 * ᐃ, ᐃ * ΔᐃⵠᐃⲆ, ᐃ * 95, ᐃ * 21, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃⵠⵠΔΔΔⲆ * ᐃ, ᐃ * 83, 17 * ᐃ, ᐃ * 93, ᐃ * ⲆⲆⲆⵠᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * ΔᐃᐃΔᐃ, 75 * ᐃ, ᐃ * ᐃᐃⲆΔⲆ, 75 * ᐃ, ᐃ * ᐃⲆΔΔᐃⵠΔ, ᐃ * 75);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆⵠᐃⵠⵠⲆ, ᐃ * 67, ⲆᐃΔΔⲆⵠᐃ * ᐃ, ᐃ * 67, ᐃ * ⵠᐃⲆⲆⲆ, 59 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14, 59 * ᐃ, Δᐃⵠᐃᐃ * ᐃ, ᐃ * 59, ᐃ * 21, ᐃ * 59);
		Ⲇ.bezierCurveTo(46 * ᐃ, 35 * ᐃ, 35 * ᐃ, 45 * ᐃ, 49 * ᐃ, ᐃ * 31);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 24, ᐃ * 51, 21 * ᐃ, ᐃ * 51, ⲆⵠᐃΔᐃ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, 23 * ᐃ, 63 * ᐃ, ᐃ * 24, 69 * ᐃ, 29 * ᐃ);
		Ⲇ.bezierCurveTo(76 * ᐃ, ᐃ * Ⲇⵠᐃᐃᐃ, ᐃ * 75, ᐃ * 11, ᐃ * 76, 6 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, Ⲇⵠⵠⵠⵠ * ᐃ, ᐃ * 84, ⵠⵠⲆΔᐃⵠⲆ * ᐃ, ᐃ * 89, ᐃ * 27);
		Ⲇ.bezierCurveTo(95 * ᐃ, ᐃ * 25, ⲆⲆⵠⵠⲆ * ᐃ, ⲆⲆⵠᐃⲆ * ᐃ, ᐃ * 105, ᐃ * ΔᐃⲆⵠΔⲆⲆ);
		Ⲇ.bezierCurveTo(ᐃ * 103, 25 * ᐃ, 111 * ᐃ, 33 * ᐃ, 110 * ᐃ, 34 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 48 * ᐃ, 123 * ᐃ, 48 * ᐃ, ᐃ * 136, ᐃ * 62);
		Ⲇ.bezierCurveTo(142 * ᐃ, 60 * ᐃ, 147 * ᐃ, ᐃ * 59, ᐃ * 155, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 65, 147 * ᐃ, ᐃ * 65, 139 * ᐃ, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 145, 73 * ᐃ, 145 * ᐃ, ᐃ * 73, ᐃ * 151, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 145, 80 * ᐃ, ᐃ * 145, 80 * ᐃ, 138 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(144 * ᐃ, ᐃ * 88, 144 * ᐃ, 88 * ᐃ, 150 * ᐃ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(125 * ᐃ, 103 * ᐃ, ᐃ * 125, ᐃ * 125, ᐃ * 113, 141 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 178, 85 * ᐃ, ᐃ * 177, 76 * ᐃ, ᐃ * 178);
		Ⲇ.bezierCurveTo(64 * ᐃ, ᐃ * 179, ᐃ * 51, ᐃ * 164, ᐃ * 35, 131 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 18, 95 * ᐃ, ᐃ * ⲆⵠⲆΔⲆᐃⵠ, 99 * ᐃ, ⲆᐃⲆᐃᐃ * ᐃ, ᐃ * 93);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃᐃᐃ, ᐃᐃ[ΔᐃⵠⲆ], ᐃ * Ⲇⵠⵠᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 25, ᐃ * 63);
		Ⲇ.bezierCurveTo(ΔᐃⲆⲆᐃⵠⲆ * ᐃ, 58 * ᐃ, ΔⲆᐃΔⵠ * ᐃ, 51 * ᐃ, ᐃ * ⲆⲆᐃⵠⵠⵠⲆ, ᐃ * 33);
		Ⲇ.bezierCurveTo(19 * ᐃ, ᐃ * 12, ᐃ * 21, ᐃ * 12, 32 * ᐃ, ᐃ * ⲆΔΔᐃⲆⲆᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, 31 * ᐃ, 66 * ᐃ, 45 * ᐃ, 66 * ᐃ, ᐃ * 54);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 91, 53 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, ᐃ * 40, ᐃ * 98, ᐃ * 33, 121 * ᐃ, ᐃ * 20);
		Ⲇ.bezierCurveTo(137 * ᐃ, ᐃ * 12, ᐃ * 137, 16 * ᐃ, ᐃ * 139, 27 * ᐃ);
		Ⲇ.bezierCurveTo(141 * ᐃ, ᐃ * 49, 140 * ᐃ, 57 * ᐃ, 134 * ᐃ, 64 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(31 * ᐃ, ᐃ * 63);
		Ⲇ.bezierCurveTo(23 * ᐃ, 54 * ᐃ, ᐃ * 24, 47 * ᐃ, ᐃ * 26, 37 * ᐃ);
		Ⲇ.bezierCurveTo(28 * ᐃ, ᐃ * 29, 31 * ᐃ, ᐃ * 31, ᐃ * 41, ᐃ * 35);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 45, ᐃ * 55, 51 * ᐃ, 57 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(50 * ᐃ, ᐃ * 50, ᐃ * 44, 47 * ᐃ, ᐃ * 43, 48 * ᐃ);
		Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 52, ᐃ * 43, ᐃ * 52, ᐃ * 42, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 38, ᐃ * 54, 38 * ᐃ, ᐃ * 54, 33 * ᐃ, 51 * ᐃ);
		Ⲇ.bezierCurveTo(34 * ᐃ, 56 * ᐃ, ᐃ * 34, ᐃ * 56, 34 * ᐃ, ᐃ * 61);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(99 * ᐃ, ᐃ * 55);
		Ⲇ.bezierCurveTo(107 * ᐃ, 43 * ᐃ, ᐃ * 113, 39 * ᐃ, 121 * ᐃ, 34 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 130, 29 * ᐃ, ᐃ * 130, 34 * ᐃ, 130 * ᐃ, 42 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 57, 128 * ᐃ, 61 * ᐃ, ᐃ * 129, 63 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, ᐃ * 62, 124 * ᐃ, ᐃ * 62, 119 * ᐃ, ᐃ * 61);
		Ⲇ.bezierCurveTo(ᐃ * 119, ᐃ * 56, 120 * ᐃ, ᐃ * 61, ᐃ * 118, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 115, 55 * ᐃ, 111 * ᐃ, 59 * ᐃ, ᐃ * 111, 58 * ᐃ);
		Ⲇ.bezierCurveTo(110 * ᐃ, ᐃ * 54, ᐃ * 109, 57 * ᐃ, 109 * ᐃ, ᐃ * 51);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ]);
		return ΔΔ
	}

	function ΔΔⵠⵠᐃⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, ᐃᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 501 * ᐃ;
		ΔΔ.height = ᐃ * 564;
		Ⲇ.scale(.5, .5);
		Ⲇ.translate(240 * ᐃ, ᐃ * 255);
		Ⲇ.rotate(ᐃᐃᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : .2;
		ΔⵠⲆ(Ⲇ, 174 * ᐃ, ᐃ * 87.984375, ᐃ * 20.8806130178211);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ], ᐃᐃ[ᐃΔⵠⵠ], ᐃ * ΔᐃⲆⵠⲆⵠⵠ);
		ΔⵠⲆ(Ⲇ, ᐃ * 174, ᐃ * 87.984375, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * ᐃⵠΔΔᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 174, 87.484375 * ᐃ, ᐃ * ᐃⵠΔⵠⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ᐃ * 30, 87.984375 * ᐃ, 20.8806130178211 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ], ᐃᐃ[0], ⵠΔΔᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 30, 87.984375 * ᐃ, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔᐃ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 30 * ᐃ, 87.484375 * ᐃ, ⵠΔⵠⵠⲆ * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, 100 * ᐃ, 30 * ᐃ, ᐃ * 20.8806130178211);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[Δⵠⵠ], ᐃ * ᐃΔΔΔ);
		ΔⵠⲆ(Ⲇ, ⵠᐃⵠⵠᐃΔⲆ * ᐃ, 30 * ᐃ, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, ᐃ * ᐃⲆⵠᐃⲆ, 30 * ᐃ, ᐃ * ΔᐃΔⵠⵠⲆᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ⲆⲆΔⵠΔᐃΔ * ᐃ, ᐃ * 130, 20.8806130178211 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ], ᐃᐃ[Δⵠⵠ], ᐃ * ⵠᐃᐃⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 100, 130 * ᐃ, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⵠⲆ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, ᐃⵠⲆⵠⲆ * ᐃ, ᐃ * 130, 6 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆⲆ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 102, 81.984375 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -74, -57 * ᐃ, ᐃ * 148, ᐃ * 114, 23 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ], ᐃᐃ[0], ᐃ * Δⵠⵠⵠ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 101, 64.984375 * ᐃ);
		Ⲇ.rotate(ⵠⵠⲆⲆ);
		ᐃΔⵠ(Ⲇ, ᐃ * -33, -10 * ᐃ, ᐃ * 66, ΔⵠᐃⵠΔⵠⲆ * ᐃ, ⲆΔⲆⲆⲆⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⲆⲆᐃ], ᐃ * ⲆⲆⲆⵠᐃ);
		Ⲇ.save();
		Ⲇ.translate(102 * ᐃ, 63.484375 * ᐃ);
		Ⲇ.rotate(Δⵠⵠ);
		ᐃΔⵠ(Ⲇ, ᐃ * -ΔᐃΔⵠⲆΔⲆ, ᐃ * -27.5, ᐃᐃᐃⵠⲆⲆΔ * ᐃ, 55 * ᐃ, 15 * ᐃ);
		Ⲇ.restore();
		Ⲇ.translate(5, -ᐃᐃⲆᐃΔ);
		Ⲇ.globalAlpha = 1;
		ΔⵠⲆ(Ⲇ, 174 * ᐃ, 87.984375 * ᐃ, 20.8806130178211 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[3], ΔᐃᐃⵠΔ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 174, ᐃ * 87.984375, ᐃ * 12.165525060596439);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ], ᐃᐃ[3], 8 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 174, ᐃ * 87.484375, 6 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠᐃ]);
		ΔⵠⲆ(Ⲇ, 30 * ᐃ, 87.984375 * ᐃ, ᐃ * 20.8806130178211);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆΔⵠ], ᐃ * ⵠΔΔᐃᐃⲆⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 30, 87.984375 * ᐃ, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[ᐃᐃⵠᐃ], ⲆⵠΔᐃⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 30, 87.484375 * ᐃ, ᐃ * ⲆΔᐃⵠᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, 102 * ᐃ, 30 * ᐃ, ᐃ * 20.8806130178211);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[3], ᐃ * ⵠⵠΔⵠΔ);
		ΔⵠⲆ(Ⲇ, 102 * ᐃ, 30 * ᐃ, 12.165525060596439 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[ⵠᐃᐃᐃ], ᐃ * ΔⲆᐃⵠᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 102, ᐃ * 30, ᐃ * 6);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 102, ᐃ * 130, 20.8806130178211 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆⵠⵠⲆ], ᐃ * 8);
		ΔⵠⲆ(Ⲇ, 102 * ᐃ, ᐃ * 130, ᐃ * 12.165525060596439);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[3], ⵠᐃᐃΔⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 102, ᐃ * 130, ᐃ * 6);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 102, 81.984375 * ᐃ);
		ᐃΔⵠ(Ⲇ, -74 * ᐃ, ᐃ * -57, ᐃ * 148, 114 * ᐃ, 23 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[3], ᐃ * ΔⲆᐃᐃᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 101, 64.984375 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -33, ᐃ * -10, ᐃ * 66, 20 * ᐃ, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ⲆΔᐃⲆΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(102 * ᐃ, 63.484375 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -ΔᐃΔⵠⲆΔⲆ, ᐃ * -27.5, ᐃ * ⲆΔⲆⲆⵠᐃΔ, ᐃ * 55, ⵠⲆᐃΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ᐃ * ΔⲆΔⲆⵠ);
		ΔⵠⲆ(Ⲇ, 135 * ᐃ, ᐃ * 107.36605834960938, 21.095023109728988 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[ⵠΔᐃⲆ], ⲆΔⵠⵠⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, 135 * ᐃ, 107.36605834960938 * ᐃ, 13 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[Δᐃᐃᐃ], ᐃ * ᐃᐃΔⵠⵠ);
		ΔⵠⲆ(Ⲇ, ᐃ * 135, 107.36605834960938 * ᐃ, ᐃ * 6.082762530298219);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		ΔⵠⲆ(Ⲇ, ᐃ * 70, 107.36605834960938 * ᐃ, ᐃ * 21.095023109728988);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[3], ᐃ * ⲆⵠΔᐃⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 70, 107.36605834960938 * ᐃ, ᐃ * ᐃᐃᐃⵠΔⲆᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[ᐃⵠⵠⵠ], 8 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 70, 107.36605834960938 * ᐃ, ᐃ * 6.082762530298219);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆᐃ]);
		return ΔΔ
	}

	function ⵠⲆⵠΔΔⲆⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 47;
		ΔΔ.height = 60 * ᐃ;
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 47;
		ΔΔ.height = ᐃ * 60;
		ΔⵠⲆ(Ⲇ, ᐃ * 23.5, 20.734375 * ᐃ, ᐃ * 15.132745950421556);
		Δⵠ(Ⲇ, ᐃⵠⲆᐃⲆ, ᐃᐃ[2], 4 * ᐃ);
		ΔⵠⲆ(Ⲇ, 23.5 * ᐃ, 20.734375 * ᐃ, ᐃ * 18.601075237738275);
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ΔᐃⵠΔ], ΔⲆΔⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 23.5, ᐃ * 20.734375, 11.40175425099138 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃⲆⵠⲆ, ᐃᐃ[ᐃΔⲆⵠ], ᐃⵠᐃᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(23 * ᐃ, 38.734375 * ᐃ);
		Ⲇ.rotate(Ⲇᐃⵠᐃ);
		ᐃΔⵠ(Ⲇ, -21.5 * ᐃ, -ⵠⵠΔⲆⵠᐃΔ * ᐃ, 43 * ᐃ, ᐃ * 38, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔΔ], ᐃᐃ[ΔⲆᐃ], ᐃ * 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 23.5, ᐃ * 43.734375);
		Ⲇ.rotate(.5235987755982988);
		ⲆᐃⵠΔ(Ⲇ, ⵠᐃᐃᐃ, 8.06225774829855 * ᐃ, ᐃ * 0);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, ᐃ * 23.5, 35.734375 * ᐃ, 7.0710678118654755 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		return ΔΔ
	}
	const ⲆΔⵠⲆ = ⲆⲆΔᐃ;

	function ⲆᐃⵠⲆⲆΔΔᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 376 * ᐃ;
		ΔΔ.height = 371 * ᐃ;
		Ⲇ.globalAlpha = ⵠᐃΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(191.633544921875 * ᐃ, ᐃ * 123.98580932617188);
		Ⲇ.bezierCurveTo(215.633544921875 * ᐃ, 85.98580932617188 * ᐃ, 187.633544921875 * ᐃ, ᐃ * 71.98580932617188, ᐃ * 202.633544921875, 19.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(231.633544921875 * ᐃ, ᐃ * 68.98580932617188, 253.633544921875 * ᐃ, 71.98580932617188 * ᐃ, 256.633544921875 * ᐃ, ᐃ * 93.98580932617188);
		Ⲇ.bezierCurveTo(306.633544921875 * ᐃ, ᐃ * 64.98580932617188, 319.633544921875 * ᐃ, ᐃ * 61.985809326171875, 350.633544921875 * ᐃ, ᐃ * 58.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 280.633544921875, ᐃ * 86.98580932617188, 281.633544921875 * ᐃ, 106.98580932617188 * ᐃ, 268.633544921875 * ᐃ, ᐃ * 130.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 295.633544921875, ᐃ * 158.98580932617188, ᐃ * 328.633544921875, ᐃ * 155.98580932617188, ᐃ * 353.633544921875, ᐃ * 90.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 371.633544921875, ᐃ * 158.98580932617188, ᐃ * 337.633544921875, ᐃ * 210.98580932617188, 286.633544921875 * ᐃ, 209.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 323.633544921875, ᐃ * 230.98580932617188, ᐃ * 317.633544921875, 274.9858093261719 * ᐃ, 356.633544921875 * ᐃ, 305.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 288.633544921875, 297.9858093261719 * ᐃ, ᐃ * 288.633544921875, ᐃ * 265.9858093261719, 275.633544921875 * ᐃ, ᐃ * 266.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 280.633544921875, 294.9858093261719 * ᐃ, ᐃ * 315.633544921875, ᐃ * 306.9858093261719, ᐃ * 336.633544921875, 316.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(295.633544921875 * ᐃ, 318.9858093261719 * ᐃ, 264.633544921875 * ᐃ, ᐃ * 302.9858093261719, 254.633544921875 * ᐃ, ᐃ * 289.9858093261719);
		Ⲇ.bezierCurveTo(252.633544921875 * ᐃ, ᐃ * 301.9858093261719, 224.633544921875 * ᐃ, 315.9858093261719 * ᐃ, 201.633544921875 * ᐃ, ᐃ * 356.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 195.633544921875, 313.9858093261719 * ᐃ, 195.633544921875 * ᐃ, ᐃ * 308.9858093261719, 196.633544921875 * ᐃ, ᐃ * 307.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 197.633544921875, 289.9858093261719 * ᐃ, 207.633544921875 * ᐃ, ᐃ * 283.9858093261719, 195.633544921875 * ᐃ, ᐃ * 258.9858093261719);
		Ⲇ.bezierCurveTo(182.633544921875 * ᐃ, 282.9858093261719 * ᐃ, ᐃ * 190.633544921875, 287.9858093261719 * ᐃ, ᐃ * 193.633544921875, ᐃ * 297.9858093261719);
		Ⲇ.bezierCurveTo(195.633544921875 * ᐃ, ᐃ * 306.9858093261719, 191.633544921875 * ᐃ, ᐃ * 334.9858093261719, 187.633544921875 * ᐃ, ᐃ * 354.9858093261719);
		Ⲇ.bezierCurveTo(165.633544921875 * ᐃ, 320.9858093261719 * ᐃ, 138.633544921875 * ᐃ, 307.9858093261719 * ᐃ, 135.633544921875 * ᐃ, 288.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110.633544921875, ᐃ * 318.9858093261719, ᐃ * 68.633544921875, ᐃ * 323.9858093261719, 49.633544921875 * ᐃ, ᐃ * 320.9858093261719);
		Ⲇ.bezierCurveTo(88.633544921875 * ᐃ, 308.9858093261719 * ᐃ, ᐃ * 108.633544921875, 284.9858093261719 * ᐃ, ᐃ * 118.633544921875, ᐃ * 258.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 86.633544921875, ᐃ * 264.9858093261719, 75.633544921875 * ᐃ, 310.9858093261719 * ᐃ, 19.633544921875 * ᐃ, ᐃ * 304.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 54.633544921875, 276.9858093261719 * ᐃ, ᐃ * 59.633544921875, 214.98580932617188 * ᐃ, ᐃ * 105.633544921875, 205.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(14.633544921875 * ᐃ, 201.98580932617188 * ᐃ, 24.633544921875 * ᐃ, ᐃ * 141.98580932617188, 25.633544921875 * ᐃ, 82.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(49.633544921875 * ᐃ, 168.98580932617188 * ᐃ, ᐃ * 87.633544921875, 141.98580932617188 * ᐃ, ᐃ * 112.633544921875, 123.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(95.633544921875 * ᐃ, 75.98580932617188 * ᐃ, ᐃ * 70.633544921875, 68.98580932617188 * ᐃ, ᐃ * 35.633544921875, 50.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(70.633544921875 * ᐃ, ᐃ * 53.985809326171875, 102.633544921875 * ᐃ, 65.98580932617188 * ᐃ, ᐃ * 125.633544921875, ᐃ * 84.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 133.633544921875, ᐃ * 69.98580932617188, 166.633544921875 * ᐃ, 42.985809326171875 * ᐃ, 176.633544921875 * ᐃ, ᐃ * 21.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 185.633544921875, ᐃ * 49.985809326171875, ᐃ * 168.633544921875, ᐃ * 95.98580932617188, 191.633544921875 * ᐃ, ᐃ * 121.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], 12 * ᐃ);
		return ΔΔ
	}

	function ᐃΔᐃⲆΔᐃᐃᐃᐃ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (ᐃⲆ == 0) {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = 393 * ᐃ;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(196.23297119140625 * ᐃ, 77.8948974609375 * ᐃ);
			Ⲇ.bezierCurveTo(276.23297119140625 * ᐃ, ᐃ * 69.8948974609375, ᐃ * 360.23297119140625, 87.8948974609375 * ᐃ, 431.23297119140625 * ᐃ, ᐃ * 121.8948974609375);
			Ⲇ.bezierCurveTo(474.23297119140625 * ᐃ, 146.8948974609375 * ᐃ, ᐃ * 463.23297119140625, ᐃ * 184.8948974609375, ᐃ * 437.23297119140625, ᐃ * 235.8948974609375);
			Ⲇ.bezierCurveTo(ᐃ * 413.23297119140625, 277.8948974609375 * ᐃ, 383.23297119140625 * ᐃ, 289.8948974609375 * ᐃ, 303.23297119140625 * ᐃ, 289.8948974609375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 178.23297119140625, 292.8948974609375 * ᐃ, 127.23297119140625 * ᐃ, 301.8948974609375 * ᐃ, 92.23297119140625 * ᐃ, ᐃ * 268.8948974609375);
			Ⲇ.bezierCurveTo(ᐃ * 55.23297119140625, ᐃ * 234.8948974609375, ᐃ * 59.23297119140625, 147.8948974609375 * ᐃ, 100.23297119140625 * ᐃ, ᐃ * 112.8948974609375);
			Ⲇ.bezierCurveTo(ᐃ * 133.23297119140625, ᐃ * 83.8948974609375, 167.23297119140625 * ᐃ, ᐃ * 82.8948974609375, ᐃ * 196.23297119140625, ᐃ * 77.8948974609375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ])
		} else if (ⲆΔⵠⲆ == ᐃⲆ) {
			ΔΔ.width = ᐃ * 543;
			ΔΔ.height = ᐃ * 470;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 285.23297119140625, ᐃ * 51.803985595703125);
			Ⲇ.bezierCurveTo(ᐃ * 408.23297119140625, ᐃ * 57.803985595703125, ᐃ * 463.23297119140625, ᐃ * 107.80398559570312, 480.23297119140625 * ᐃ, ᐃ * 183.80398559570312);
			Ⲇ.bezierCurveTo(500.23297119140625 * ᐃ, ᐃ * 282.8039855957031, ᐃ * 473.23297119140625, ᐃ * 351.8039855957031, ᐃ * 373.23297119140625, 390.8039855957031 * ᐃ);
			Ⲇ.bezierCurveTo(286.23297119140625 * ᐃ, ᐃ * 420.8039855957031, 173.23297119140625 * ᐃ, ᐃ * 396.8039855957031, ᐃ * 86.23297119140625, ᐃ * 331.8039855957031);
			Ⲇ.bezierCurveTo(ᐃ * 13.23297119140625, 267.8039855957031 * ᐃ, ᐃ * 19.23297119140625, ᐃ * 79.80398559570312, 143.23297119140625 * ᐃ, 50.803985595703125 * ᐃ);
			Ⲇ.bezierCurveTo(175.23297119140625 * ᐃ, ᐃ * 41.803985595703125, 263.23297119140625 * ᐃ, 51.803985595703125 * ᐃ, 285.23297119140625 * ᐃ, ᐃ * 51.803985595703125);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ])
		} else {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = ᐃ * 470;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 492.23297119140625, 170.0767059326172 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 493.23297119140625, 300.16761779785156 * ᐃ, ᐃ * 411.23297119140625, ᐃ * 382.16761779785156, ᐃ * 321.23297119140625, 419.16761779785156 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 251.23297119140625, 444.16761779785156 * ᐃ, 125.23297119140625 * ᐃ, ᐃ * 422.16761779785156, ᐃ * 63.23297119140625, ᐃ * 347.16761779785156);
			Ⲇ.bezierCurveTo(ᐃ * 22.23297119140625, 282.16761779785156 * ᐃ, ᐃ * 53.23297119140625, 152.16761779785156 * ᐃ, ᐃ * 179.23297119140625, 79.16761779785156 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 237.23297119140625, 46.16761779785156 * ᐃ, 326.23297119140625 * ᐃ, 27.167617797851562 * ᐃ, 409.23297119140625 * ᐃ, 50.16761779785156 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 470.23297119140625, ᐃ * 66.16761779785156, ᐃ * 493.23297119140625, ᐃ * 104.16761779785156, ᐃ * 492.23297119140625, ᐃ * 170.0767059326172);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		}
		return ΔΔ
	}

	function ⲆΔⵠⲆᐃᐃᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 137;
		ΔΔ.height = 129 * ᐃ;
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 69 * ᐃ, ᐃ * 64, ᐃ * 48.16637831516918);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.globalAlpha = .7;
		ΔⵠⲆ(Ⲇ, 69 * ᐃ, ᐃ * 64, 38.23105625617661 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.globalAlpha = .7;
		ΔⵠⲆ(Ⲇ, 69 * ᐃ, 64 * ᐃ, 32.01562118716424 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ], ᐃᐃ[Ⲇᐃⵠⵠ], ᐃ * ᐃΔᐃⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 52, 41 * ᐃ, ᐃ * 48, 50 * ᐃ, 45 * ᐃ, 58 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 43, ᐃ * 67, 45 * ᐃ, 68 * ᐃ, 46 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 52, ᐃ * 53, 60 * ᐃ, 48 * ᐃ, ᐃ * 72, ᐃ * 42);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(93 * ᐃ, 62 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95, ᐃ * 72, ᐃ * 90, ᐃ * 81, 81 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, 91 * ᐃ, 69 * ᐃ, 89 * ᐃ, 64 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 77, ᐃ * 83, ᐃ * 84, ᐃ * 82, ᐃ * 92, ᐃ * 62);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆ]);
		return ΔΔ
	}

	function ⵠᐃⵠΔⲆⲆΔⵠⵠ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (Ⲇᐃⵠᐃ == ᐃⲆ) {
			ΔΔ.width = ᐃ * 543;
			ΔΔ.height = ᐃ * 393;
			Ⲇ.translate(40 * ᐃ, 60 * ᐃ);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 176, 10.25 * ᐃ);
			Ⲇ.bezierCurveTo(188 * ᐃ, ᐃ * 16.25, 187 * ᐃ, ᐃ * 25.25, 183 * ᐃ, 26.25 * ᐃ);
			Ⲇ.bezierCurveTo(177 * ᐃ, 26.25 * ᐃ, 175 * ᐃ, ᐃ * 21.25, ᐃ * 173, 19.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 170, 14.25 * ᐃ, 170 * ᐃ, 10.25 * ᐃ, ᐃ * 176, 10.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(-3 * ᐃ, -ᐃᐃⵠᐃ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(176 * ᐃ, 10.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 188, ᐃ * 16.25, 187 * ᐃ, 25.25 * ᐃ, 183 * ᐃ, 26.25 * ᐃ);
			Ⲇ.bezierCurveTo(177 * ᐃ, ᐃ * 26.25, ᐃ * 175, ᐃ * 21.25, ᐃ * 173, ᐃ * 19.25);
			Ⲇ.bezierCurveTo(ᐃ * 170, ᐃ * 14.25, 170 * ᐃ, 10.25 * ᐃ, ᐃ * 176, ᐃ * 10.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(274 * ᐃ, ᐃ * 8);
			Ⲇ.bezierCurveTo(ᐃ * 276, 12 * ᐃ, 271 * ᐃ, ᐃ * 23, 266 * ᐃ, ᐃ * 20);
			Ⲇ.bezierCurveTo(ᐃ * 264, 19 * ᐃ, 262 * ᐃ, ᐃΔⵠⲆΔ * ᐃ, 267 * ᐃ, ⵠⲆᐃⵠⲆᐃⲆ * ᐃ);
			Ⲇ.bezierCurveTo(271 * ᐃ, ⲆⲆᐃⵠ * ᐃ, ᐃ * 274, ᐃᐃⵠⵠ * ᐃ, ᐃ * 274, 8 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]);
			Ⲇ.globalAlpha = ⵠⵠⲆΔ;
			Ⲇ.translate(-ⵠⵠⲆⵠΔ * ᐃ, ᐃ * -3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 274, 8 * ᐃ);
			Ⲇ.bezierCurveTo(276 * ᐃ, 12 * ᐃ, ᐃ * 271, ᐃ * 23, 266 * ᐃ, 20 * ᐃ);
			Ⲇ.bezierCurveTo(264 * ᐃ, ᐃ * 19, ᐃ * 262, ᐃ * ᐃΔⵠⲆΔ, ᐃ * 267, 9 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 271, 5 * ᐃ, 274 * ᐃ, ᐃ * ΔⲆⵠΔΔ, 274 * ᐃ, ᐃ * ⲆΔᐃⲆΔ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(282 * ᐃ, 23.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 275, 25.25 * ᐃ, 272 * ᐃ, 29.25 * ᐃ, 274 * ᐃ, 36.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 277, ᐃ * 40.25, 280 * ᐃ, 37.25 * ᐃ, 283 * ᐃ, ᐃ * 32.25);
			Ⲇ.bezierCurveTo(ᐃ * 286, ᐃ * 26.25, ᐃ * 286, 25.25 * ᐃ, ᐃ * 282, ᐃ * 23.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ΔᐃⵠΔ;
			Ⲇ.translate(ᐃ * -ⵠⵠⲆⵠ, -3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 282, ᐃ * 23.25);
			Ⲇ.bezierCurveTo(275 * ᐃ, 25.25 * ᐃ, 272 * ᐃ, ᐃ * 29.25, ᐃ * 274, 36.25 * ᐃ);
			Ⲇ.bezierCurveTo(277 * ᐃ, 40.25 * ᐃ, ᐃ * 280, ᐃ * 37.25, 283 * ᐃ, 32.25 * ᐃ);
			Ⲇ.bezierCurveTo(286 * ᐃ, ᐃ * 26.25, ᐃ * 286, ᐃ * 25.25, ᐃ * 282, 23.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * ⲆⵠⵠΔ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(343.75 * ᐃ, ᐃ * 18.25);
			Ⲇ.bezierCurveTo(346.75 * ᐃ, ᐃ * 27.25, 346.75 * ᐃ, 32.25 * ᐃ, 339.75 * ᐃ, ᐃ * 31.25);
			Ⲇ.bezierCurveTo(ᐃ * 336.75, ᐃ * 29.25, ᐃ * 335.75, 27.25 * ᐃ, ᐃ * 336.75, ᐃ * 22.25);
			Ⲇ.bezierCurveTo(ᐃ * 336.75, 16.25 * ᐃ, ᐃ * 338.75, ᐃ * 15.25, ᐃ * 343.75, 18.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]);
			Ⲇ.globalAlpha = ⵠⲆⲆ;
			Ⲇ.translate(ᐃ * -ⵠⵠⲆⵠ, -3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(343.75 * ᐃ, ᐃ * 18.25);
			Ⲇ.bezierCurveTo(ᐃ * 346.75, 27.25 * ᐃ, ᐃ * 346.75, ᐃ * 32.25, 339.75 * ᐃ, 31.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 336.75, ᐃ * 29.25, ᐃ * 335.75, 27.25 * ᐃ, 336.75 * ᐃ, ᐃ * 22.25);
			Ⲇ.bezierCurveTo(336.75 * ᐃ, ᐃ * 16.25, ᐃ * 338.75, ᐃ * 15.25, 343.75 * ᐃ, 18.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * 3, ᐃⵠⲆⲆ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(364.75 * ᐃ, ᐃ * 22.25);
			Ⲇ.bezierCurveTo(ᐃ * 368.75, 27.25 * ᐃ, ᐃ * 362.75, ᐃ * 36.25, ᐃ * 356.75, ᐃ * 39.25);
			Ⲇ.bezierCurveTo(346.75 * ᐃ, 43.25 * ᐃ, ᐃ * 346.75, ᐃ * 34.25, 348.75 * ᐃ, 31.25 * ᐃ);
			Ⲇ.bezierCurveTo(352.75 * ᐃ, 23.25 * ᐃ, 360.75 * ᐃ, ᐃ * 20.25, 363.75 * ᐃ, 22.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(-ᐃⵠⲆⲆ * ᐃ, ᐃ * -ⵠⲆⵠⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 364.75, ᐃ * 22.25);
			Ⲇ.bezierCurveTo(368.75 * ᐃ, 27.25 * ᐃ, ᐃ * 362.75, ᐃ * 36.25, ᐃ * 356.75, 39.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 346.75, ᐃ * 43.25, 346.75 * ᐃ, 34.25 * ᐃ, 348.75 * ᐃ, ᐃ * 31.25);
			Ⲇ.bezierCurveTo(352.75 * ᐃ, 23.25 * ᐃ, ᐃ * 360.75, ᐃ * 20.25, ᐃ * 363.75, 22.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * ΔⵠⵠΔ, ᐃⵠⵠⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(350.75 * ᐃ, ᐃ * 52.25);
			Ⲇ.bezierCurveTo(ᐃ * 352.75, ᐃ * 45.25, ᐃ * 360.75, ᐃ * 43.25, 368.75 * ᐃ, 52.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 369.75, ᐃ * 58.25, ᐃ * 366.75, 59.25 * ᐃ, ᐃ * 357.75, ᐃ * 57.25);
			Ⲇ.bezierCurveTo(ᐃ * 350.75, 56.25 * ᐃ, ᐃ * 352.75, 55.25 * ᐃ, 350.75 * ᐃ, 52.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
			Ⲇ.globalAlpha = ΔΔᐃᐃ;
			Ⲇ.translate(-3 * ᐃ, -ΔⲆΔⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(350.75 * ᐃ, ᐃ * 52.25);
			Ⲇ.bezierCurveTo(352.75 * ᐃ, 45.25 * ᐃ, 360.75 * ᐃ, ᐃ * 43.25, 368.75 * ᐃ, ᐃ * 52.25);
			Ⲇ.bezierCurveTo(ᐃ * 369.75, 58.25 * ᐃ, ᐃ * 366.75, 59.25 * ᐃ, 357.75 * ᐃ, 57.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 350.75, ᐃ * 56.25, 352.75 * ᐃ, 55.25 * ᐃ, ᐃ * 350.75, 52.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, ⵠⲆⲆΔ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(421.75 * ᐃ, ᐃ * 81.25);
			Ⲇ.bezierCurveTo(432.75 * ᐃ, ᐃ * 85.25, 431.75 * ᐃ, 89.25 * ᐃ, 426.75 * ᐃ, ᐃ * 93.25);
			Ⲇ.bezierCurveTo(418.75 * ᐃ, 95.25 * ᐃ, 414.75 * ᐃ, ᐃ * 93.25, 412.75 * ᐃ, 89.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 411.75, 84.25 * ᐃ, ᐃ * 413.75, 81.25 * ᐃ, ᐃ * 421.75, ᐃ * 81.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = ΔᐃᐃⲆ;
			Ⲇ.translate(-3 * ᐃ, ᐃ * -ᐃⵠⵠⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(421.75 * ᐃ, 81.25 * ᐃ);
			Ⲇ.bezierCurveTo(432.75 * ᐃ, 85.25 * ᐃ, 431.75 * ᐃ, 89.25 * ᐃ, 426.75 * ᐃ, 93.25 * ᐃ);
			Ⲇ.bezierCurveTo(418.75 * ᐃ, 95.25 * ᐃ, 414.75 * ᐃ, 93.25 * ᐃ, ᐃ * 412.75, 89.25 * ᐃ);
			Ⲇ.bezierCurveTo(411.75 * ᐃ, ᐃ * 84.25, 413.75 * ᐃ, ᐃ * 81.25, 421.75 * ᐃ, 81.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * ⵠΔᐃⲆ, ᐃ * Δᐃᐃᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 432.75, ᐃ * 105.25);
			Ⲇ.bezierCurveTo(ᐃ * 430.75, ᐃ * 115.25, 411.75 * ᐃ, ᐃ * 130.25, 408.75 * ᐃ, ᐃ * 117.25);
			Ⲇ.bezierCurveTo(ᐃ * 407.75, 106.25 * ᐃ, 414.75 * ᐃ, ᐃ * 103.25, 421.75 * ᐃ, ᐃ * 101.25);
			Ⲇ.bezierCurveTo(ᐃ * 430.75, ᐃ * 100.25, 432.75 * ᐃ, ᐃ * 101.25, 432.75 * ᐃ, ᐃ * 105.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(-ⵠᐃᐃᐃ * ᐃ, ᐃ * -ᐃⵠⵠⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(432.75 * ᐃ, 105.25 * ᐃ);
			Ⲇ.bezierCurveTo(430.75 * ᐃ, 115.25 * ᐃ, ᐃ * 411.75, 130.25 * ᐃ, 408.75 * ᐃ, 117.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 407.75, ᐃ * 106.25, ᐃ * 414.75, 103.25 * ᐃ, 421.75 * ᐃ, ᐃ * 101.25);
			Ⲇ.bezierCurveTo(430.75 * ᐃ, ᐃ * 100.25, ᐃ * 432.75, 101.25 * ᐃ, 432.75 * ᐃ, ᐃ * 105.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 422.75, 153.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 437.75, ᐃ * 155.25, ᐃ * 442.75, ᐃ * 158.25, ᐃ * 436.75, ᐃ * 165.25);
			Ⲇ.bezierCurveTo(431.75 * ᐃ, 170.25 * ᐃ, 424.75 * ᐃ, ᐃ * 167.25, ᐃ * 419.75, 163.25 * ᐃ);
			Ⲇ.bezierCurveTo(413.75 * ᐃ, 157.25 * ᐃ, ᐃ * 415.75, ᐃ * 153.25, 422.75 * ᐃ, ᐃ * 153.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(-ᐃⵠⵠⵠ * ᐃ, -ΔⵠⵠΔ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(422.75 * ᐃ, 153.25 * ᐃ);
			Ⲇ.bezierCurveTo(437.75 * ᐃ, 155.25 * ᐃ, ᐃ * 442.75, ᐃ * 158.25, ᐃ * 436.75, ᐃ * 165.25);
			Ⲇ.bezierCurveTo(431.75 * ᐃ, ᐃ * 170.25, 424.75 * ᐃ, ᐃ * 167.25, ᐃ * 419.75, 163.25 * ᐃ);
			Ⲇ.bezierCurveTo(413.75 * ᐃ, 157.25 * ᐃ, ᐃ * 415.75, 153.25 * ᐃ, 422.75 * ᐃ, ᐃ * 153.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(409.75 * ᐃ, ᐃ * 158.25);
			Ⲇ.bezierCurveTo(409.75 * ᐃ, ᐃ * 168.25, 401.75 * ᐃ, ᐃ * 172.25, ᐃ * 397.75, ᐃ * 167.25);
			Ⲇ.bezierCurveTo(ᐃ * 394.75, ᐃ * 159.25, 407.75 * ᐃ, ᐃ * 150.25, 408.75 * ᐃ, 158.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * -ⲆⵠⵠⲆ, ᐃ * -ᐃⵠⲆⲆ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 409.75, ᐃ * 158.25);
			Ⲇ.bezierCurveTo(ᐃ * 409.75, ᐃ * 168.25, ᐃ * 401.75, 172.25 * ᐃ, ᐃ * 397.75, ᐃ * 167.25);
			Ⲇ.bezierCurveTo(ᐃ * 394.75, 159.25 * ᐃ, ᐃ * 407.75, ᐃ * 150.25, 408.75 * ᐃ, ᐃ * 158.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(204 * ᐃ, ᐃ * 238.25);
			Ⲇ.bezierCurveTo(204 * ᐃ, 248.25 * ᐃ, 184 * ᐃ, ᐃ * 255.25, 180 * ᐃ, 247.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 177, 241.25 * ᐃ, 187 * ᐃ, 236.25 * ᐃ, 192 * ᐃ, ᐃ * 235.25);
			Ⲇ.bezierCurveTo(ᐃ * 201, ᐃ * 233.25, 204 * ᐃ, 233.25 * ᐃ, ᐃ * 204, 238.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆⲆ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * -3, -3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(204 * ᐃ, ᐃ * 238.25);
			Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 248.25, ᐃ * 184, 255.25 * ᐃ, ᐃ * 180, 247.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 177, 241.25 * ᐃ, 187 * ᐃ, ᐃ * 236.25, ᐃ * 192, 235.25 * ᐃ);
			Ⲇ.bezierCurveTo(201 * ᐃ, ᐃ * 233.25, ᐃ * 204, 233.25 * ᐃ, ᐃ * 204, ᐃ * 238.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * ⵠΔᐃⲆ, ⵠⲆⵠⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(208 * ᐃ, ᐃ * 246.25);
			Ⲇ.bezierCurveTo(ᐃ * 202, 255.25 * ᐃ, 204 * ᐃ, 258.25 * ᐃ, 212 * ᐃ, ᐃ * 255.25);
			Ⲇ.bezierCurveTo(ᐃ * 217, ᐃ * 250.25, ᐃ * 217, ᐃ * 248.25, 216 * ᐃ, 244.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 210, ᐃ * 241.25, 209 * ᐃ, 245.25 * ᐃ, ᐃ * 208, 246.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * -3, ᐃ * -3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(208 * ᐃ, 246.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 202, 255.25 * ᐃ, ᐃ * 204, 258.25 * ᐃ, 212 * ᐃ, ᐃ * 255.25);
			Ⲇ.bezierCurveTo(ᐃ * 217, ᐃ * 250.25, 217 * ᐃ, ᐃ * 248.25, ᐃ * 216, 244.25 * ᐃ);
			Ⲇ.bezierCurveTo(210 * ᐃ, ᐃ * 241.25, 209 * ᐃ, 245.25 * ᐃ, 208 * ᐃ, ᐃ * 246.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠⲆ]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * Δᐃᐃᐃ, 3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(197 * ᐃ, 258.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 194, ᐃ * 265.25, 186 * ᐃ, ᐃ * 270.25, 185 * ᐃ, 262.25 * ᐃ);
			Ⲇ.bezierCurveTo(187 * ᐃ, ᐃ * 255.25, 191 * ᐃ, ᐃ * 252.25, 195 * ᐃ, 253.25 * ᐃ);
			Ⲇ.bezierCurveTo(198 * ᐃ, ᐃ * 256.25, ᐃ * 197, ᐃ * 257.25, 197 * ᐃ, 258.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * -ⵠⲆⲆΔ, -3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(197 * ᐃ, 258.25 * ᐃ);
			Ⲇ.bezierCurveTo(194 * ᐃ, 265.25 * ᐃ, ᐃ * 186, ᐃ * 270.25, ᐃ * 185, ᐃ * 262.25);
			Ⲇ.bezierCurveTo(187 * ᐃ, 255.25 * ᐃ, 191 * ᐃ, ᐃ * 252.25, 195 * ᐃ, 253.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 198, ᐃ * 256.25, 197 * ᐃ, ᐃ * 257.25, 197 * ᐃ, 258.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(3 * ᐃ, ᐃ * ⵠⲆⵠⵠ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 24, ᐃ * 111.25);
			Ⲇ.bezierCurveTo(ᐃ * 32, 115.25 * ᐃ, 29 * ᐃ, ᐃ * 123.25, 22 * ᐃ, 133.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * ᐃᐃⵠᐃⲆᐃⵠ, ᐃ * 140.25, 7 * ᐃ, ᐃ * 137.25, ᐃᐃⲆⲆⲆ * ᐃ, 125.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 12, ᐃ * 114.25, ᐃ * 20, ᐃ * 110.25, ᐃ * 24, 111.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0]);
			Ⲇ.globalAlpha = 1;
			Ⲇ.translate(ᐃ * -ᐃⲆⲆᐃΔ, -ⵠⲆⵠⵠ * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(24 * ᐃ, ᐃ * 111.25);
			Ⲇ.bezierCurveTo(ᐃ * 32, ᐃ * 115.25, ᐃ * 29, 123.25 * ᐃ, ᐃ * 22, ᐃ * 133.25);
			Ⲇ.bezierCurveTo(ᐃ * 15, ᐃ * 140.25, 7 * ᐃ, 137.25 * ᐃ, ⵠΔⵠⲆⵠ * ᐃ, 125.25 * ᐃ);
			Ⲇ.bezierCurveTo(ⲆΔᐃᐃⲆ * ᐃ, 114.25 * ᐃ, ᐃ * ᐃᐃⲆⲆⵠ, 110.25 * ᐃ, ᐃ * 24, ᐃ * 111.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃ * 3, ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 33, ᐃ * 137.25);
			Ⲇ.bezierCurveTo(ᐃ * 41, ᐃ * 142.25, ᐃ * 40, 145.25 * ᐃ, 35 * ᐃ, ᐃ * 147.25);
			Ⲇ.bezierCurveTo(22 * ᐃ, 147.25 * ᐃ, 18 * ᐃ, 144.25 * ᐃ, 22 * ᐃ, 138.25 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 26, 133.25 * ᐃ, 31 * ᐃ, ᐃ * 136.25, ᐃ * 33, ᐃ * 137.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
			Ⲇ.globalAlpha = ΔⲆᐃ;
			Ⲇ.translate(-3 * ᐃ, -3 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(33 * ᐃ, ᐃ * 137.25);
			Ⲇ.bezierCurveTo(ᐃ * 41, 142.25 * ᐃ, ᐃ * 40, ᐃ * 145.25, ᐃ * 35, ᐃ * 147.25);
			Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 147.25, ᐃⲆΔΔᐃⵠΔ * ᐃ, 144.25 * ᐃ, 22 * ᐃ, 138.25 * ᐃ);
			Ⲇ.bezierCurveTo(26 * ᐃ, ᐃ * 133.25, ᐃ * 31, 136.25 * ᐃ, ᐃ * 33, ᐃ * 137.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[1]);
			Ⲇ.globalAlpha = .5;
			Ⲇ.translate(ᐃⲆᐃΔⵠ * ᐃ, ᐃ * 3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(36 * ᐃ, ᐃ * 187.25);
			Ⲇ.bezierCurveTo(25 * ᐃ, 198.25 * ᐃ, ⲆⲆᐃΔᐃⵠⲆ * ᐃ, 193.25 * ᐃ, ᐃ * 23, ᐃ * 187.25);
			Ⲇ.bezierCurveTo(ᐃ * 26, 178.25 * ᐃ, ᐃ * 32, 173.25 * ᐃ, 38 * ᐃ, 175.25 * ᐃ);
			Ⲇ.bezierCurveTo(44 * ᐃ, 180.25 * ᐃ, 39 * ᐃ, 186.25 * ᐃ, ᐃ * 36, ᐃ * 187.25);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
			Ⲇ.globalAlpha = ᐃⵠⵠ;
			Ⲇ.translate(ᐃ * -ⵠᐃᐃᐃ, ᐃ * -3);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 36, ᐃ * 187.25);
			Ⲇ.bezierCurveTo(25 * ᐃ, ᐃ * 198.25, 19 * ᐃ, 193.25 * ᐃ, 23 * ᐃ, 187.25 * ᐃ);
			Ⲇ.bezierCurveTo(26 * ᐃ, 178.25 * ᐃ, ᐃ * 32, ᐃ * 173.25, 38 * ᐃ, ᐃ * 175.25);
			Ⲇ.bezierCurveTo(44 * ᐃ, ᐃ * 180.25, 39 * ᐃ, 186.25 * ᐃ, ᐃ * 36, 187.25 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ])
		} else ᐃⲆ == ΔⲆᐃ ? (ΔΔ.width = ᐃ * 543, ΔΔ.height = ᐃ * 470, Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 377.1428527832031, ᐃ * 56.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 384.1428527832031, ᐃ * 44.87498474121094, 403.1428527832031 * ᐃ, ᐃ * 39.87498474121094, 403.1428527832031 * ᐃ, ᐃ * 51.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 402.1428527832031, 59.87498474121094 * ᐃ, 396.1428527832031 * ᐃ, 61.87498474121094 * ᐃ, 389.1428527832031 * ᐃ, ᐃ * 64.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 376.1428527832031, ᐃ * 67.87498474121094, 375.1428527832031 * ᐃ, 62.87498474121094 * ᐃ, ᐃ * 377.1428527832031, ᐃ * 56.87498474121094), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ΔⵠⵠΔ, -ᐃⵠⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 377.1428527832031, 56.87498474121094 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 384.1428527832031, ᐃ * 44.87498474121094, ᐃ * 403.1428527832031, ᐃ * 39.87498474121094, ᐃ * 403.1428527832031, ᐃ * 51.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 402.1428527832031, 59.87498474121094 * ᐃ, 396.1428527832031 * ᐃ, ᐃ * 61.87498474121094, ᐃ * 389.1428527832031, 64.87498474121094 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 376.1428527832031, ᐃ * 67.87498474121094, ᐃ * 375.1428527832031, ᐃ * 62.87498474121094, 377.1428527832031 * ᐃ, ᐃ * 56.87498474121094), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ΔΔⲆⲆᐃ * ᐃ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(349.1428527832031 * ᐃ, 44.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(358.1428527832031 * ᐃ, 37.303558349609375 * ᐃ, ᐃ * 370.1428527832031, ᐃ * 47.303558349609375, 364.1428527832031 * ᐃ, ᐃ * 51.303558349609375), Ⲇ.bezierCurveTo(356.1428527832031 * ᐃ, 55.303558349609375 * ᐃ, 345.1428527832031 * ᐃ, 48.303558349609375 * ᐃ, 349.1428527832031 * ᐃ, 45.303558349609375 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ᐃᐃⵠᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(349.1428527832031 * ᐃ, 44.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 358.1428527832031, ᐃ * 37.303558349609375, ᐃ * 370.1428527832031, 47.303558349609375 * ᐃ, 364.1428527832031 * ᐃ, ᐃ * 51.303558349609375), Ⲇ.bezierCurveTo(356.1428527832031 * ᐃ, 55.303558349609375 * ᐃ, 345.1428527832031 * ᐃ, ᐃ * 48.303558349609375, ᐃ * 349.1428527832031, ᐃ * 45.303558349609375), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⵠΔᐃⲆ * ᐃ, ᐃ * ⲆⵠΔᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 480.1428527832031, 152.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 477.1428527832031, ᐃ * 145.30355834960938, 480.1428527832031 * ᐃ, ᐃ * 140.30355834960938, 489.1428527832031 * ᐃ, 135.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 497.1428527832031, 133.30355834960938 * ᐃ, ᐃ * 498.1428527832031, ᐃ * 140.30355834960938, ᐃ * 491.1428527832031, 147.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 485.1428527832031, ᐃ * 155.30355834960938, ᐃ * 482.1428527832031, 156.30355834960938 * ᐃ, 480.1428527832031 * ᐃ, 152.30355834960938 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ⲆⲆΔᐃ, Ⲇ.translate(ᐃ * -ᐃⵠⵠⵠ, -Δᐃᐃᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(480.1428527832031 * ᐃ, ᐃ * 152.30355834960938), Ⲇ.bezierCurveTo(ᐃ * 477.1428527832031, ᐃ * 145.30355834960938, ᐃ * 480.1428527832031, ᐃ * 140.30355834960938, ᐃ * 489.1428527832031, 135.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(497.1428527832031 * ᐃ, 133.30355834960938 * ᐃ, ᐃ * 498.1428527832031, ᐃ * 140.30355834960938, 491.1428527832031 * ᐃ, 147.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 485.1428527832031, 155.30355834960938 * ᐃ, ᐃ * 482.1428527832031, 156.30355834960938 * ᐃ, 480.1428527832031 * ᐃ, 152.30355834960938 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, Ⲇᐃⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(211.14285278320312 * ᐃ, ᐃ * 27.303558349609375), Ⲇ.bezierCurveTo(223.14285278320312 * ᐃ, ᐃ * 21.303558349609375, 234.14285278320312 * ᐃ, ᐃ * 34.303558349609375, ᐃ * 232.14285278320312, ᐃ * 42.303558349609375), Ⲇ.bezierCurveTo(ᐃ * 228.14285278320312, 49.303558349609375 * ᐃ, ᐃ * 223.14285278320312, 45.303558349609375 * ᐃ, 213.14285278320312 * ᐃ, ᐃ * 38.303558349609375), Ⲇ.bezierCurveTo(205.14285278320312 * ᐃ, 31.303558349609375 * ᐃ, 208.14285278320312 * ᐃ, 29.303558349609375 * ᐃ, ᐃ * 211.14285278320312, ᐃ * 27.303558349609375), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-ⵠⵠⲆⵠΔ * ᐃ, -ⵠⲆⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(211.14285278320312 * ᐃ, 27.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 223.14285278320312, ᐃ * 21.303558349609375, ᐃ * 234.14285278320312, 34.303558349609375 * ᐃ, 232.14285278320312 * ᐃ, ᐃ * 42.303558349609375), Ⲇ.bezierCurveTo(228.14285278320312 * ᐃ, ᐃ * 49.303558349609375, ᐃ * 223.14285278320312, ᐃ * 45.303558349609375, ᐃ * 213.14285278320312, ᐃ * 38.303558349609375), Ⲇ.bezierCurveTo(205.14285278320312 * ᐃ, 31.303558349609375 * ᐃ, 208.14285278320312 * ᐃ, 29.303558349609375 * ᐃ, ᐃ * 211.14285278320312, ᐃ * 27.303558349609375), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ᐃᐃⵠᐃ, ᐃ * ⲆⵠΔᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(364.1428527832031 * ᐃ, ᐃ * 73.30355834960938), Ⲇ.bezierCurveTo(ᐃ * 354.1428527832031, ᐃ * 72.30355834960938, ᐃ * 356.1428527832031, ᐃ * 64.30355834960938, 359.1428527832031 * ᐃ, ᐃ * 59.303558349609375), Ⲇ.bezierCurveTo(365.1428527832031 * ᐃ, ᐃ * 55.303558349609375, ᐃ * 366.1428527832031, 61.303558349609375 * ᐃ, ᐃ * 366.1428527832031, 69.30355834960938 * ᐃ), Ⲇ.bezierCurveTo(365.1428527832031 * ᐃ, ᐃ * 73.30355834960938, ᐃ * 365.1428527832031, ᐃ * 73.30355834960938, ᐃ * 364.1428527832031, ᐃ * 73.30355834960938), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]), Ⲇ.globalAlpha = ⵠᐃΔᐃ, Ⲇ.translate(-3 * ᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(364.1428527832031 * ᐃ, ᐃ * 73.30355834960938), Ⲇ.bezierCurveTo(354.1428527832031 * ᐃ, 72.30355834960938 * ᐃ, ᐃ * 356.1428527832031, 64.30355834960938 * ᐃ, 359.1428527832031 * ᐃ, ᐃ * 59.303558349609375), Ⲇ.bezierCurveTo(ᐃ * 365.1428527832031, 55.303558349609375 * ᐃ, 366.1428527832031 * ᐃ, ᐃ * 61.303558349609375, 366.1428527832031 * ᐃ, ᐃ * 69.30355834960938), Ⲇ.bezierCurveTo(ᐃ * 365.1428527832031, ᐃ * 73.30355834960938, ᐃ * 365.1428527832031, 73.30355834960938 * ᐃ, 364.1428527832031 * ᐃ, 73.30355834960938 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * ΔⲆΔⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(182.14285278320312 * ᐃ, ᐃ * 57.303558349609375), Ⲇ.bezierCurveTo(173.14285278320312 * ᐃ, 52.303558349609375 * ᐃ, 177.14285278320312 * ᐃ, 39.303558349609375 * ᐃ, ᐃ * 198.14285278320312, 36.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 209.14285278320312, ᐃ * 37.303558349609375, 206.14285278320312 * ᐃ, 49.303558349609375 * ᐃ, 193.14285278320312 * ᐃ, ᐃ * 53.303558349609375), Ⲇ.bezierCurveTo(187.14285278320312 * ᐃ, ᐃ * 56.303558349609375, 185.14285278320312 * ᐃ, 57.303558349609375 * ᐃ, ᐃ * 182.14285278320312, ᐃ * 57.303558349609375), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-3 * ᐃ, -ᐃᐃⵠᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(182.14285278320312 * ᐃ, 57.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(173.14285278320312 * ᐃ, ᐃ * 52.303558349609375, 177.14285278320312 * ᐃ, ᐃ * 39.303558349609375, ᐃ * 198.14285278320312, 36.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(209.14285278320312 * ᐃ, ᐃ * 37.303558349609375, 206.14285278320312 * ᐃ, ᐃ * 49.303558349609375, 193.14285278320312 * ᐃ, 53.303558349609375 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 187.14285278320312, 56.303558349609375 * ᐃ, ᐃ * 185.14285278320312, ᐃ * 57.303558349609375, 182.14285278320312 * ᐃ, 57.303558349609375 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(Δᐃᐃᐃ * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(489.1428527832031 * ᐃ, ᐃ * 267.0178527832031), Ⲇ.bezierCurveTo(500.1428527832031 * ᐃ, 257.0178527832031 * ᐃ, 511.1428527832031 * ᐃ, ᐃ * 269.0178527832031, ᐃ * 514.1428527832031, 275.0178527832031 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 519.1428527832031, ᐃ * 285.0178527832031, 509.1428527832031 * ᐃ, 288.0178527832031 * ᐃ, 501.1428527832031 * ᐃ, ᐃ * 282.0178527832031), Ⲇ.bezierCurveTo(488.1428527832031 * ᐃ, ᐃ * 277.0178527832031, ᐃ * 485.1428527832031, 271.0178527832031 * ᐃ, 489.1428527832031 * ᐃ, 267.0178527832031 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ⵠⲆⲆ, Ⲇ.translate(ᐃ * -3, -ⲆⵠⵠⲆ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 489.1428527832031, ᐃ * 267.0178527832031), Ⲇ.bezierCurveTo(ᐃ * 500.1428527832031, 257.0178527832031 * ᐃ, 511.1428527832031 * ᐃ, 269.0178527832031 * ᐃ, ᐃ * 514.1428527832031, ᐃ * 275.0178527832031), Ⲇ.bezierCurveTo(ᐃ * 519.1428527832031, 285.0178527832031 * ᐃ, 509.1428527832031 * ᐃ, 288.0178527832031 * ᐃ, ᐃ * 501.1428527832031, ᐃ * 282.0178527832031), Ⲇ.bezierCurveTo(488.1428527832031 * ᐃ, 277.0178527832031 * ᐃ, 485.1428527832031 * ᐃ, 271.0178527832031 * ᐃ, ᐃ * 489.1428527832031, 267.0178527832031 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(480.1428527832031 * ᐃ, 122.73213958740234 * ᐃ), Ⲇ.bezierCurveTo(469.1428527832031 * ᐃ, 119.73213958740234 * ᐃ, 473.1428527832031 * ᐃ, 108.73213958740234 * ᐃ, ᐃ * 476.1428527832031, 107.73213958740234 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 483.1428527832031, ᐃ * 102.73213958740234, 485.1428527832031 * ᐃ, ᐃ * 118.73213958740234, ᐃ * 480.1428527832031, ᐃ * 122.73213958740234), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ⲆΔⵠⲆ, Ⲇ.translate(-ᐃⲆᐃΔⵠ * ᐃ, ᐃ * -ⵠᐃᐃᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(480.1428527832031 * ᐃ, 122.73213958740234 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 469.1428527832031, 119.73213958740234 * ᐃ, ᐃ * 473.1428527832031, ᐃ * 108.73213958740234, ᐃ * 476.1428527832031, ᐃ * 107.73213958740234), Ⲇ.bezierCurveTo(ᐃ * 483.1428527832031, ᐃ * 102.73213958740234, ᐃ * 485.1428527832031, 118.73213958740234 * ᐃ, 480.1428527832031 * ᐃ, 122.73213958740234 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⲆⵠΔᐃ * ᐃ, ⵠⲆⲆΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(470.1428527832031 * ᐃ, ᐃ * 286.3035697937012), Ⲇ.bezierCurveTo(472.1428527832031 * ᐃ, 277.3035697937012 * ᐃ, ᐃ * 480.1428527832031, ᐃ * 277.3035697937012, ᐃ * 489.1428527832031, 286.3035697937012 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 490.1428527832031, 292.3035697937012 * ᐃ, ᐃ * 482.1428527832031, ᐃ * 294.3035697937012, ᐃ * 470.1428527832031, ᐃ * 286.3035697937012), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, -ᐃⲆⲆᐃΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(470.1428527832031 * ᐃ, 286.3035697937012 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 472.1428527832031, ᐃ * 277.3035697937012, ᐃ * 480.1428527832031, ᐃ * 277.3035697937012, ᐃ * 489.1428527832031, 286.3035697937012 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 490.1428527832031, 292.3035697937012 * ᐃ, ᐃ * 482.1428527832031, 294.3035697937012 * ᐃ, 470.1428527832031 * ᐃ, ᐃ * 286.3035697937012), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * ⵠΔⵠⲆ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(518.1428527832031 * ᐃ, ᐃ * 265.0178565979004), Ⲇ.bezierCurveTo(ᐃ * 524.1428527832031, 262.0178565979004 * ᐃ, 521.1428527832031 * ᐃ, 247.0178565979004 * ᐃ, ᐃ * 514.1428527832031, ᐃ * 250.0178565979004), Ⲇ.bezierCurveTo(510.1428527832031 * ᐃ, 252.0178565979004 * ᐃ, ᐃ * 509.1428527832031, ᐃ * 266.0178565979004, ᐃ * 518.1428527832031, 266.0178565979004 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ⵠⵠⲆΔ, Ⲇ.translate(ᐃ * -ⵠᐃᐃᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 518.1428527832031, ᐃ * 265.0178565979004), Ⲇ.bezierCurveTo(524.1428527832031 * ᐃ, 262.0178565979004 * ᐃ, ᐃ * 521.1428527832031, ᐃ * 247.0178565979004, ᐃ * 514.1428527832031, 250.0178565979004 * ᐃ), Ⲇ.bezierCurveTo(510.1428527832031 * ᐃ, 252.0178565979004 * ᐃ, 509.1428527832031 * ᐃ, 266.0178565979004 * ᐃ, 518.1428527832031 * ᐃ, 266.0178565979004 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃⵠⲆⲆ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 179.14285278320312, ᐃ * 399.5892858505249), Ⲇ.bezierCurveTo(ᐃ * 174.14285278320312, 385.5892858505249 * ᐃ, 186.14285278320312 * ᐃ, ᐃ * 379.5892858505249, ᐃ * 198.14285278320312, 379.5892858505249 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 208.14285278320312, 379.5892858505249 * ᐃ, 206.14285278320312 * ᐃ, 391.5892858505249 * ᐃ, 194.14285278320312 * ᐃ, ᐃ * 396.5892858505249), Ⲇ.bezierCurveTo(184.14285278320312 * ᐃ, ᐃ * 401.5892858505249, ᐃ * 182.14285278320312, ᐃ * 402.5892858505249, ᐃ * 179.14285278320312, ᐃ * 399.5892858505249), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ⲆⵠΔᐃ, -ⵠⲆⲆΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(179.14285278320312 * ᐃ, 399.5892858505249 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 174.14285278320312, 385.5892858505249 * ᐃ, ᐃ * 186.14285278320312, 379.5892858505249 * ᐃ, 198.14285278320312 * ᐃ, 379.5892858505249 * ᐃ), Ⲇ.bezierCurveTo(208.14285278320312 * ᐃ, 379.5892858505249 * ᐃ, 206.14285278320312 * ᐃ, 391.5892858505249 * ᐃ, ᐃ * 194.14285278320312, 396.5892858505249 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 184.14285278320312, ᐃ * 401.5892858505249, ᐃ * 182.14285278320312, ᐃ * 402.5892858505249, 179.14285278320312 * ᐃ, ᐃ * 399.5892858505249), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ⲆⵠⵠΔ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(163.14285278320312 * ᐃ, ᐃ * 407.875), Ⲇ.bezierCurveTo(152.14285278320312 * ᐃ, 405.875 * ᐃ, ᐃ * 156.14285278320312, 391.875 * ᐃ, ᐃ * 163.14285278320312, ᐃ * 385.875), Ⲇ.bezierCurveTo(170.14285278320312 * ᐃ, 381.875 * ᐃ, ᐃ * 173.14285278320312, ᐃ * 385.875, ᐃ * 170.14285278320312, ᐃ * 398.875), Ⲇ.bezierCurveTo(169.14285278320312 * ᐃ, ᐃ * 403.875, 165.14285278320312 * ᐃ, 408.875 * ᐃ, 164.14285278320312 * ᐃ, 407.875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ΔΔⲆΔ, Ⲇ.translate(-3 * ᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(163.14285278320312 * ᐃ, 407.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 152.14285278320312, 405.875 * ᐃ, 156.14285278320312 * ᐃ, 391.875 * ᐃ, 163.14285278320312 * ᐃ, 385.875 * ᐃ), Ⲇ.bezierCurveTo(170.14285278320312 * ᐃ, ᐃ * 381.875, ᐃ * 173.14285278320312, 385.875 * ᐃ, ᐃ * 170.14285278320312, ᐃ * 398.875), Ⲇ.bezierCurveTo(ᐃ * 169.14285278320312, ᐃ * 403.875, 165.14285278320312 * ᐃ, 408.875 * ᐃ, ᐃ * 164.14285278320312, 407.875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃᐃⵠᐃ * ᐃ, ᐃᐃⵠᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(78.14285278320312 * ᐃ, 71.73211669921875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 82.14285278320312, ᐃ * 62.73211669921875, ᐃ * 88.14285278320312, 69.73211669921875 * ᐃ, 91.14285278320312 * ᐃ, 79.73211669921875 * ᐃ), Ⲇ.bezierCurveTo(90.14285278320312 * ᐃ, ᐃ * 86.73211669921875, ᐃ * 79.14285278320312, ᐃ * 83.73211669921875, ᐃ * 78.14285278320312, ᐃ * 71.73211669921875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ]), Ⲇ.globalAlpha = ΔᐃᐃⲆ, Ⲇ.translate(ᐃ * -3, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 78.14285278320312, ᐃ * 71.73211669921875), Ⲇ.bezierCurveTo(ᐃ * 82.14285278320312, 62.73211669921875 * ᐃ, ᐃ * 88.14285278320312, ᐃ * 69.73211669921875, 91.14285278320312 * ᐃ, ᐃ * 79.73211669921875), Ⲇ.bezierCurveTo(ᐃ * 90.14285278320312, 86.73211669921875 * ᐃ, 79.14285278320312 * ᐃ, 83.73211669921875 * ᐃ, 78.14285278320312 * ᐃ, ᐃ * 71.73211669921875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, Δᐃᐃᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 385.1428527832031, ᐃ * 405.017858505249), Ⲇ.bezierCurveTo(ᐃ * 392.1428527832031, ᐃ * 397.017858505249, 406.1428527832031 * ᐃ, 401.017858505249 * ᐃ, 409.1428527832031 * ᐃ, 418.017858505249 * ᐃ), Ⲇ.bezierCurveTo(410.1428527832031 * ᐃ, 426.017858505249 * ᐃ, 401.1428527832031 * ᐃ, ᐃ * 425.017858505249, ᐃ * 388.1428527832031, ᐃ * 418.017858505249), Ⲇ.bezierCurveTo(ᐃ * 381.1428527832031, 411.017858505249 * ᐃ, ᐃ * 383.1428527832031, ᐃ * 407.017858505249, ᐃ * 385.1428527832031, ᐃ * 405.017858505249), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, ᐃ * -ᐃⵠⵠⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 385.1428527832031, ᐃ * 405.017858505249), Ⲇ.bezierCurveTo(ᐃ * 392.1428527832031, 397.017858505249 * ᐃ, 406.1428527832031 * ᐃ, 401.017858505249 * ᐃ, ᐃ * 409.1428527832031, ᐃ * 418.017858505249), Ⲇ.bezierCurveTo(ᐃ * 410.1428527832031, ᐃ * 426.017858505249, ᐃ * 401.1428527832031, ᐃ * 425.017858505249, 388.1428527832031 * ᐃ, 418.017858505249 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 381.1428527832031, 411.017858505249 * ᐃ, ᐃ * 383.1428527832031, 407.017858505249 * ᐃ, 385.1428527832031 * ᐃ, ᐃ * 405.017858505249), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * ᐃⲆⲆᐃΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 414.1428527832031, ᐃ * 361.4464282989502), Ⲇ.bezierCurveTo(ᐃ * 418.1428527832031, ᐃ * 352.4464282989502, 426.1428527832031 * ᐃ, 353.4464282989502 * ᐃ, 437.1428527832031 * ᐃ, 362.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 441.1428527832031, ᐃ * 366.4464282989502, 439.1428527832031 * ᐃ, 373.4464282989502 * ᐃ, 428.1428527832031 * ᐃ, ᐃ * 372.4464282989502), Ⲇ.bezierCurveTo(416.1428527832031 * ᐃ, ᐃ * 370.4464282989502, ᐃ * 412.1428527832031, ᐃ * 367.4464282989502, 415.1428527832031 * ᐃ, 361.4464282989502 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]), Ⲇ.globalAlpha = ⲆΔᐃⲆ, Ⲇ.translate(ᐃ * -3, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 414.1428527832031, 361.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 418.1428527832031, 352.4464282989502 * ᐃ, 426.1428527832031 * ᐃ, 353.4464282989502 * ᐃ, ᐃ * 437.1428527832031, 362.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(441.1428527832031 * ᐃ, ᐃ * 366.4464282989502, ᐃ * 439.1428527832031, 373.4464282989502 * ᐃ, 428.1428527832031 * ᐃ, 372.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 416.1428527832031, ᐃ * 370.4464282989502, 412.1428527832031 * ᐃ, 367.4464282989502 * ᐃ, ᐃ * 415.1428527832031, 361.4464282989502 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 453.1428527832031, 356.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 458.1428527832031, 363.875 * ᐃ, ᐃ * 447.1428527832031, ᐃ * 373.875, 444.1428527832031 * ᐃ, 369.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 441.1428527832031, 361.875 * ᐃ, ᐃ * 448.1428527832031, 352.875 * ᐃ, 453.1428527832031 * ᐃ, ᐃ * 356.875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ⲆⵠⵠΔ, -ΔⲆΔⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 453.1428527832031, ᐃ * 356.875), Ⲇ.bezierCurveTo(ᐃ * 458.1428527832031, 363.875 * ᐃ, ᐃ * 447.1428527832031, ᐃ * 373.875, ᐃ * 444.1428527832031, ᐃ * 369.875), Ⲇ.bezierCurveTo(ᐃ * 441.1428527832031, 361.875 * ᐃ, 448.1428527832031 * ᐃ, ᐃ * 352.875, ᐃ * 453.1428527832031, 356.875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 40.142852783203125, ᐃ * 225.1607151031494), Ⲇ.bezierCurveTo(52.142852783203125 * ᐃ, 224.1607151031494 * ᐃ, 44.142852783203125 * ᐃ, 251.1607151031494 * ᐃ, 36.142852783203125 * ᐃ, ᐃ * 248.1607151031494), Ⲇ.bezierCurveTo(25.142852783203125 * ᐃ, 245.1607151031494 * ᐃ, ᐃ * 34.142852783203125, 225.1607151031494 * ᐃ, ᐃ * 41.142852783203125, 225.1607151031494 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ᐃᐃΔᐃ, Ⲇ.translate(-3 * ᐃ, ᐃ * -ⵠⵠⲆⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 40.142852783203125, 225.1607151031494 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 52.142852783203125, ᐃ * 224.1607151031494, 44.142852783203125 * ᐃ, 251.1607151031494 * ᐃ, 36.142852783203125 * ᐃ, 248.1607151031494 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 25.142852783203125, 245.1607151031494 * ᐃ, ᐃ * 34.142852783203125, ᐃ * 225.1607151031494, 41.142852783203125 * ᐃ, ᐃ * 225.1607151031494), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(114.14285278320312 * ᐃ, 52.4464111328125 * ᐃ), Ⲇ.bezierCurveTo(123.14285278320312 * ᐃ, ᐃ * 57.4464111328125, 111.14285278320312 * ᐃ, ᐃ * 71.4464111328125, 106.14285278320312 * ᐃ, 65.4464111328125 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 101.14285278320312, ᐃ * 58.4464111328125, ᐃ * 111.14285278320312, ᐃ * 51.4464111328125, ᐃ * 114.14285278320312, 52.4464111328125 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]), Ⲇ.globalAlpha = ᐃΔⲆⵠ, Ⲇ.translate(-Ⲇᐃⵠⵠ * ᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(114.14285278320312 * ᐃ, ᐃ * 52.4464111328125), Ⲇ.bezierCurveTo(123.14285278320312 * ᐃ, ᐃ * 57.4464111328125, 111.14285278320312 * ᐃ, ᐃ * 71.4464111328125, 106.14285278320312 * ᐃ, 65.4464111328125 * ᐃ), Ⲇ.bezierCurveTo(101.14285278320312 * ᐃ, 58.4464111328125 * ᐃ, 111.14285278320312 * ᐃ, ᐃ * 51.4464111328125, ᐃ * 114.14285278320312, 52.4464111328125 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ᐃⲆⲆᐃΔ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(35.142852783203125 * ᐃ, 256.3035707473755 * ᐃ), Ⲇ.bezierCurveTo(41.142852783203125 * ᐃ, ᐃ * 263.3035707473755, 32.142852783203125 * ᐃ, 270.3035707473755 * ᐃ, 27.142852783203125 * ᐃ, ᐃ * 270.3035707473755), Ⲇ.bezierCurveTo(20.142852783203125 * ᐃ, ᐃ * 267.3035707473755, ᐃ * 29.142852783203125, 252.3035707473755 * ᐃ, 35.142852783203125 * ᐃ, ᐃ * 255.3035707473755), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ᐃⵠⲆⲆ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(35.142852783203125 * ᐃ, 256.3035707473755 * ᐃ), Ⲇ.bezierCurveTo(41.142852783203125 * ᐃ, 263.3035707473755 * ᐃ, ᐃ * 32.142852783203125, ᐃ * 270.3035707473755, ᐃ * 27.142852783203125, ᐃ * 270.3035707473755), Ⲇ.bezierCurveTo(20.142852783203125 * ᐃ, 267.3035707473755 * ᐃ, 29.142852783203125 * ᐃ, 252.3035707473755 * ᐃ, ᐃ * 35.142852783203125, 255.3035707473755 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * Δᐃᐃᐃ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 48.142852783203125, ᐃ * 266.4464282989502), Ⲇ.bezierCurveTo(ᐃ * 59.142852783203125, 273.4464282989502 * ᐃ, 41.142852783203125 * ᐃ, ᐃ * 290.4464282989502, ᐃ * 33.142852783203125, ᐃ * 285.4464282989502), Ⲇ.bezierCurveTo(ᐃ * 25.142852783203125, ᐃ * 277.4464282989502, 44.142852783203125 * ᐃ, 261.4464282989502 * ᐃ, 48.142852783203125 * ᐃ, 266.4464282989502 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ⵠᐃΔᐃ, Ⲇ.translate(-3 * ᐃ, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(48.142852783203125 * ᐃ, 266.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 59.142852783203125, ᐃ * 273.4464282989502, ᐃ * 41.142852783203125, ᐃ * 290.4464282989502, 33.142852783203125 * ᐃ, 285.4464282989502 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 25.142852783203125, ᐃ * 277.4464282989502, ᐃ * 44.142852783203125, ᐃ * 261.4464282989502, ᐃ * 48.142852783203125, 266.4464282989502 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * ⵠⵠⲆⵠΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(138.14285278320312 * ᐃ, ᐃ * 385.5892868041992), Ⲇ.bezierCurveTo(150.14285278320312 * ᐃ, ᐃ * 387.5892868041992, 140.14285278320312 * ᐃ, ᐃ * 405.5892868041992, 131.14285278320312 * ᐃ, ᐃ * 402.5892868041992), Ⲇ.bezierCurveTo(125.14285278320312 * ᐃ, ᐃ * 397.5892868041992, ᐃ * 134.14285278320312, 385.5892868041992 * ᐃ, 138.14285278320312 * ᐃ, ᐃ * 385.5892868041992), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(138.14285278320312 * ᐃ, ᐃ * 385.5892868041992), Ⲇ.bezierCurveTo(ᐃ * 150.14285278320312, ᐃ * 387.5892868041992, 140.14285278320312 * ᐃ, 405.5892868041992 * ᐃ, 131.14285278320312 * ᐃ, 402.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(125.14285278320312 * ᐃ, ᐃ * 397.5892868041992, 134.14285278320312 * ᐃ, 385.5892868041992 * ᐃ, ᐃ * 138.14285278320312, ᐃ * 385.5892868041992), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⲆⵠⵠΔ * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 218.14285278320312, 394.16071701049805 * ᐃ), Ⲇ.bezierCurveTo(224.14285278320312 * ᐃ, ᐃ * 398.16071701049805, ᐃ * 222.14285278320312, 403.16071701049805 * ᐃ, 214.14285278320312 * ᐃ, 407.16071701049805 * ᐃ), Ⲇ.bezierCurveTo(204.14285278320312 * ᐃ, ᐃ * 407.16071701049805, ᐃ * 213.14285278320312, 392.16071701049805 * ᐃ, ᐃ * 218.14285278320312, ᐃ * 394.16071701049805), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]), Ⲇ.globalAlpha = ΔⲆᐃ, Ⲇ.translate(ᐃ * -ᐃᐃⵠᐃ, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 218.14285278320312, ᐃ * 394.16071701049805), Ⲇ.bezierCurveTo(ᐃ * 224.14285278320312, ᐃ * 398.16071701049805, ᐃ * 222.14285278320312, ᐃ * 403.16071701049805, ᐃ * 214.14285278320312, 407.16071701049805 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 204.14285278320312, 407.16071701049805 * ᐃ, ᐃ * 213.14285278320312, ᐃ * 392.16071701049805, ᐃ * 218.14285278320312, 394.16071701049805 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.translate(ᐃ * 50, 100 * ᐃ)) : (ΔΔ.width = 543 * ᐃ, ΔΔ.height = ᐃ * 470, Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * Ⲇᐃⵠⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 97.14285278320312, ᐃ * 113.875), Ⲇ.bezierCurveTo(104.14285278320312 * ᐃ, 106.875 * ᐃ, 113.14285278320312 * ᐃ, 109.875 * ᐃ, ᐃ * 118.14285278320312, ᐃ * 118.875), Ⲇ.bezierCurveTo(119.14285278320312 * ᐃ, ᐃ * 121.875, ᐃ * 118.14285278320312, 129.875 * ᐃ, 103.14285278320312 * ᐃ, 124.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 94.14285278320312, ᐃ * 120.875, 95.14285278320312 * ᐃ, 117.875 * ᐃ, 97.14285278320312 * ᐃ, 113.875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ᐃⵠⲆⲆ, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(97.14285278320312 * ᐃ, 113.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 104.14285278320312, ᐃ * 106.875, 113.14285278320312 * ᐃ, ᐃ * 109.875, ᐃ * 118.14285278320312, ᐃ * 118.875), Ⲇ.bezierCurveTo(ᐃ * 119.14285278320312, ᐃ * 121.875, ᐃ * 118.14285278320312, 129.875 * ᐃ, ᐃ * 103.14285278320312, ᐃ * 124.875), Ⲇ.bezierCurveTo(94.14285278320312 * ᐃ, 120.875 * ᐃ, ᐃ * 95.14285278320312, 117.875 * ᐃ, ᐃ * 97.14285278320312, ᐃ * 113.875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ΔⵠⵠΔ, ⵠⲆⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 88.14285278320312, ᐃ * 138.87498474121094), Ⲇ.bezierCurveTo(90.14285278320312 * ᐃ, 128.87498474121094 * ᐃ, 104.14285278320312 * ᐃ, 130.87498474121094 * ᐃ, ᐃ * 107.14285278320312, 138.87498474121094 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 109.14285278320312, ᐃ * 147.87498474121094, ᐃ * 89.14285278320312, 145.87498474121094 * ᐃ, ᐃ * 88.14285278320312, ᐃ * 138.87498474121094), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(88.14285278320312 * ᐃ, ᐃ * 138.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 90.14285278320312, 128.87498474121094 * ᐃ, 104.14285278320312 * ᐃ, ᐃ * 130.87498474121094, ᐃ * 107.14285278320312, ᐃ * 138.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 109.14285278320312, 147.87498474121094 * ᐃ, 89.14285278320312 * ᐃ, ᐃ * 145.87498474121094, 88.14285278320312 * ᐃ, 138.87498474121094 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, ᐃ * Ⲇᐃⵠⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 194.14285278320312, ᐃ * 44.87498474121094), Ⲇ.bezierCurveTo(ᐃ * 202.14285278320312, 49.87498474121094 * ᐃ, 195.14285278320312 * ᐃ, ᐃ * 62.87498474121094, ᐃ * 187.14285278320312, ᐃ * 60.87498474121094), Ⲇ.bezierCurveTo(180.14285278320312 * ᐃ, ᐃ * 57.87498474121094, 190.14285278320312 * ᐃ, ᐃ * 40.87498474121094, 194.14285278320312 * ᐃ, ᐃ * 44.87498474121094), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-3 * ᐃ, ᐃ * -ᐃⲆⲆᐃΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 194.14285278320312, ᐃ * 44.87498474121094), Ⲇ.bezierCurveTo(202.14285278320312 * ᐃ, ᐃ * 49.87498474121094, 195.14285278320312 * ᐃ, ᐃ * 62.87498474121094, ᐃ * 187.14285278320312, ᐃ * 60.87498474121094), Ⲇ.bezierCurveTo(180.14285278320312 * ᐃ, 57.87498474121094 * ᐃ, 190.14285278320312 * ᐃ, ᐃ * 40.87498474121094, 194.14285278320312 * ᐃ, 44.87498474121094 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(22.142852783203125 * ᐃ, 218.44642639160156 * ᐃ), Ⲇ.bezierCurveTo(31.142852783203125 * ᐃ, 205.44642639160156 * ᐃ, 49.142852783203125 * ᐃ, ᐃ * 221.44642639160156, 49.142852783203125 * ᐃ, 230.44642639160156 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 44.142852783203125, ᐃ * 243.44642639160156, 14.142852783203125 * ᐃ, ᐃ * 228.44642639160156, ᐃ * 22.142852783203125, 218.44642639160156 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, -ᐃⲆⲆᐃΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 22.142852783203125, ᐃ * 218.44642639160156), Ⲇ.bezierCurveTo(ᐃ * 31.142852783203125, 205.44642639160156 * ᐃ, ᐃ * 49.142852783203125, 221.44642639160156 * ᐃ, 49.142852783203125 * ᐃ, ᐃ * 230.44642639160156), Ⲇ.bezierCurveTo(ᐃ * 44.142852783203125, 243.44642639160156 * ᐃ, 14.142852783203125 * ᐃ, 228.44642639160156 * ᐃ, ᐃ * 22.142852783203125, ᐃ * 218.44642639160156), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ΔΔⲆⲆᐃ * ᐃ, ᐃ * ᐃⲆᐃΔⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 41.142852783203125, ᐃ * 249.875), Ⲇ.bezierCurveTo(33.142852783203125 * ᐃ, 255.875 * ᐃ, ᐃ * 30.142852783203125, 265.875 * ᐃ, ᐃ * 40.142852783203125, 266.875 * ᐃ), Ⲇ.bezierCurveTo(49.142852783203125 * ᐃ, 261.875 * ᐃ, ᐃ * 53.142852783203125, 244.875 * ᐃ, ᐃ * 41.142852783203125, ᐃ * 249.875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]), Ⲇ.globalAlpha = ⲆⲆΔᐃ, Ⲇ.translate(ᐃ * -3, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 41.142852783203125, 249.875 * ᐃ), Ⲇ.bezierCurveTo(33.142852783203125 * ᐃ, ᐃ * 255.875, ᐃ * 30.142852783203125, ᐃ * 265.875, ᐃ * 40.142852783203125, ᐃ * 266.875), Ⲇ.bezierCurveTo(ᐃ * 49.142852783203125, ᐃ * 261.875, ᐃ * 53.142852783203125, 244.875 * ᐃ, ᐃ * 41.142852783203125, ᐃ * 249.875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⵠⲆⲆΔ * ᐃ, ᐃ * ⵠⲆⲆΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 105.14285278320312, ᐃ * 369.875), Ⲇ.bezierCurveTo(92.14285278320312 * ᐃ, ᐃ * 361.875, ᐃ * 77.14285278320312, 375.875 * ᐃ, 79.14285278320312 * ᐃ, ᐃ * 384.875), Ⲇ.bezierCurveTo(ᐃ * 84.14285278320312, ᐃ * 399.875, ᐃ * 114.14285278320312, 375.875 * ᐃ, 104.14285278320312 * ᐃ, 369.875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]), Ⲇ.globalAlpha = ⵠᐃΔᐃ, Ⲇ.translate(-3 * ᐃ, -ⲆⵠⵠⲆ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 105.14285278320312, ᐃ * 369.875), Ⲇ.bezierCurveTo(92.14285278320312 * ᐃ, 361.875 * ᐃ, ᐃ * 77.14285278320312, ᐃ * 375.875, 79.14285278320312 * ᐃ, 384.875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 84.14285278320312, 399.875 * ᐃ, 114.14285278320312 * ᐃ, 375.875 * ᐃ, ᐃ * 104.14285278320312, ᐃ * 369.875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ᐃⲆⲆᐃΔ, ᐃ * ΔΔⲆⲆᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 233.14285278320312, 43.4464111328125 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 238.14285278320312, 47.4464111328125 * ᐃ, ᐃ * 222.14285278320312, ᐃ * 73.4464111328125, ᐃ * 214.14285278320312, 58.4464111328125 * ᐃ), Ⲇ.bezierCurveTo(211.14285278320312 * ᐃ, ᐃ * 48.4464111328125, 230.14285278320312 * ᐃ, ᐃ * 35.4464111328125, ᐃ * 233.14285278320312, ᐃ * 42.4464111328125), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]), Ⲇ.globalAlpha = ⲆⲆΔᐃ, Ⲇ.translate(ᐃ * -ᐃⲆᐃΔⵠ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 233.14285278320312, ᐃ * 43.4464111328125), Ⲇ.bezierCurveTo(ᐃ * 238.14285278320312, ᐃ * 47.4464111328125, 222.14285278320312 * ᐃ, ᐃ * 73.4464111328125, ᐃ * 214.14285278320312, ᐃ * 58.4464111328125), Ⲇ.bezierCurveTo(211.14285278320312 * ᐃ, ᐃ * 48.4464111328125, 230.14285278320312 * ᐃ, ᐃ * 35.4464111328125, 233.14285278320312 * ᐃ, ᐃ * 42.4464111328125), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ⲆⵠⵠⲆ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(371.1428527832031 * ᐃ, ᐃ * 34.73213195800781), Ⲇ.bezierCurveTo(ᐃ * 378.1428527832031, ᐃ * 20.732131958007812, 395.1428527832031 * ᐃ, 32.73213195800781 * ᐃ, ᐃ * 396.1428527832031, ᐃ * 42.73213195800781), Ⲇ.bezierCurveTo(ᐃ * 399.1428527832031, ᐃ * 59.73213195800781, ᐃ * 369.1428527832031, 43.73213195800781 * ᐃ, 372.1428527832031 * ᐃ, ᐃ * 34.73213195800781), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-ᐃⵠⲆⲆ * ᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(371.1428527832031 * ᐃ, ᐃ * 34.73213195800781), Ⲇ.bezierCurveTo(ᐃ * 378.1428527832031, ᐃ * 20.732131958007812, ᐃ * 395.1428527832031, ᐃ * 32.73213195800781, ᐃ * 396.1428527832031, ᐃ * 42.73213195800781), Ⲇ.bezierCurveTo(ᐃ * 399.1428527832031, ᐃ * 59.73213195800781, ᐃ * 369.1428527832031, ᐃ * 43.73213195800781, 372.1428527832031 * ᐃ, 34.73213195800781 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(117.14285278320312 * ᐃ, ᐃ * 392.5892868041992), Ⲇ.bezierCurveTo(ᐃ * 115.14285278320312, ᐃ * 384.5892868041992, ᐃ * 109.14285278320312, 383.5892868041992 * ᐃ, ᐃ * 103.14285278320312, 384.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 95.14285278320312, ᐃ * 389.5892868041992, ᐃ * 97.14285278320312, ᐃ * 393.5892868041992, ᐃ * 107.14285278320312, 396.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(114.14285278320312 * ᐃ, ᐃ * 396.5892868041992, ᐃ * 118.14285278320312, 393.5892868041992 * ᐃ, ᐃ * 116.14285278320312, ᐃ * 391.5892868041992), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, ᐃ * -ⲆⵠⵠⲆ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(117.14285278320312 * ᐃ, ᐃ * 392.5892868041992), Ⲇ.bezierCurveTo(ᐃ * 115.14285278320312, 384.5892868041992 * ᐃ, 109.14285278320312 * ᐃ, ᐃ * 383.5892868041992, 103.14285278320312 * ᐃ, ᐃ * 384.5892868041992), Ⲇ.bezierCurveTo(95.14285278320312 * ᐃ, ᐃ * 389.5892868041992, 97.14285278320312 * ᐃ, ᐃ * 393.5892868041992, ᐃ * 107.14285278320312, 396.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(114.14285278320312 * ᐃ, 396.5892868041992 * ᐃ, ᐃ * 118.14285278320312, 393.5892868041992 * ᐃ, 116.14285278320312 * ᐃ, 391.5892868041992 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⵠᐃᐃᐃ * ᐃ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(122.14285278320312 * ᐃ, ᐃ * 403.7321472167969), Ⲇ.bezierCurveTo(132.14285278320312 * ᐃ, ᐃ * 399.7321472167969, 133.14285278320312 * ᐃ, 418.7321472167969 * ᐃ, 129.14285278320312 * ᐃ, ᐃ * 419.7321472167969), Ⲇ.bezierCurveTo(ᐃ * 119.14285278320312, 420.7321472167969 * ᐃ, ᐃ * 118.14285278320312, ᐃ * 402.7321472167969, ᐃ * 123.14285278320312, ᐃ * 403.7321472167969), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]), Ⲇ.globalAlpha = ᐃⲆⵠΔ, Ⲇ.translate(ᐃ * -ⵠᐃᐃᐃ, -ⵠⵠⲆⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(122.14285278320312 * ᐃ, ᐃ * 403.7321472167969), Ⲇ.bezierCurveTo(ᐃ * 132.14285278320312, ᐃ * 399.7321472167969, 133.14285278320312 * ᐃ, 418.7321472167969 * ᐃ, 129.14285278320312 * ᐃ, 419.7321472167969 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 119.14285278320312, ᐃ * 420.7321472167969, 118.14285278320312 * ᐃ, ᐃ * 402.7321472167969, 123.14285278320312 * ᐃ, 403.7321472167969 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, ⵠΔⵠⲆ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(317.1428527832031 * ᐃ, 417.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 333.1428527832031, ᐃ * 421.5892868041992, 299.1428527832031 * ᐃ, 455.5892868041992 * ᐃ, ᐃ * 294.1428527832031, 438.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(289.1428527832031 * ᐃ, ᐃ * 423.5892868041992, ᐃ * 307.1428527832031, 414.5892868041992 * ᐃ, ᐃ * 317.1428527832031, 417.5892868041992 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-3 * ᐃ, -ⲆⵠΔᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(317.1428527832031 * ᐃ, ᐃ * 417.5892868041992), Ⲇ.bezierCurveTo(ᐃ * 333.1428527832031, 421.5892868041992 * ᐃ, ᐃ * 299.1428527832031, 455.5892868041992 * ᐃ, 294.1428527832031 * ᐃ, ᐃ * 438.5892868041992), Ⲇ.bezierCurveTo(289.1428527832031 * ᐃ, 423.5892868041992 * ᐃ, ᐃ * 307.1428527832031, ᐃ * 414.5892868041992, 317.1428527832031 * ᐃ, ᐃ * 417.5892868041992), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * 3, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 322.1428527832031, 437.30357360839844 * ᐃ), Ⲇ.bezierCurveTo(330.1428527832031 * ᐃ, ᐃ * 431.30357360839844, 336.1428527832031 * ᐃ, ᐃ * 440.30357360839844, ᐃ * 336.1428527832031, 448.30357360839844 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 334.1428527832031, 454.30357360839844 * ᐃ, ᐃ * 316.1428527832031, 447.30357360839844 * ᐃ, 323.1428527832031 * ᐃ, 437.30357360839844 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ᐃⵠⵠⵠ, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(322.1428527832031 * ᐃ, ᐃ * 437.30357360839844), Ⲇ.bezierCurveTo(330.1428527832031 * ᐃ, 431.30357360839844 * ᐃ, ᐃ * 336.1428527832031, ᐃ * 440.30357360839844, ᐃ * 336.1428527832031, 448.30357360839844 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 334.1428527832031, 454.30357360839844 * ᐃ, 316.1428527832031 * ᐃ, ᐃ * 447.30357360839844, 323.1428527832031 * ᐃ, ᐃ * 437.30357360839844), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃⲆᐃΔⵠ * ᐃ, ΔⵠⵠΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 438.1428527832031, ᐃ * 358.5892868041992), Ⲇ.bezierCurveTo(455.1428527832031 * ᐃ, ᐃ * 351.5892868041992, ᐃ * 467.1428527832031, 371.5892868041992 * ᐃ, 455.1428527832031 * ᐃ, 374.5892868041992 * ᐃ), Ⲇ.bezierCurveTo(442.1428527832031 * ᐃ, ᐃ * 377.5892868041992, ᐃ * 429.1428527832031, 361.5892868041992 * ᐃ, 438.1428527832031 * ᐃ, 358.5892868041992 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = ΔΔⲆΔ, Ⲇ.translate(-3 * ᐃ, ᐃ * -ⵠⵠⲆⵠ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(438.1428527832031 * ᐃ, ᐃ * 358.5892868041992), Ⲇ.bezierCurveTo(455.1428527832031 * ᐃ, ᐃ * 351.5892868041992, ᐃ * 467.1428527832031, ᐃ * 371.5892868041992, ᐃ * 455.1428527832031, ᐃ * 374.5892868041992), Ⲇ.bezierCurveTo(442.1428527832031 * ᐃ, 377.5892868041992 * ᐃ, ᐃ * 429.1428527832031, ᐃ * 361.5892868041992, ᐃ * 438.1428527832031, 358.5892868041992 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⲆⵠⵠΔ * ᐃ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(423.1428527832031 * ᐃ, ᐃ * 363.16071701049805), Ⲇ.bezierCurveTo(ᐃ * 433.1428527832031, ᐃ * 362.16071701049805, 433.1428527832031 * ᐃ, 374.16071701049805 * ᐃ, ᐃ * 421.1428527832031, ᐃ * 382.16071701049805), Ⲇ.bezierCurveTo(ᐃ * 413.1428527832031, ᐃ * 383.16071701049805, 413.1428527832031 * ᐃ, ᐃ * 368.16071701049805, ᐃ * 423.1428527832031, ᐃ * 363.16071701049805), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, -3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 423.1428527832031, 363.16071701049805 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 433.1428527832031, 362.16071701049805 * ᐃ, ᐃ * 433.1428527832031, ᐃ * 374.16071701049805, 421.1428527832031 * ᐃ, ᐃ * 382.16071701049805), Ⲇ.bezierCurveTo(ᐃ * 413.1428527832031, 383.16071701049805 * ᐃ, ᐃ * 413.1428527832031, ᐃ * 368.16071701049805, 423.1428527832031 * ᐃ, ᐃ * 363.16071701049805), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(3 * ᐃ, ᐃ * ⵠᐃᐃᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(431.1428527832031 * ᐃ, ᐃ * 333.0178565979004), Ⲇ.bezierCurveTo(ᐃ * 447.1428527832031, ᐃ * 330.0178565979004, ᐃ * 448.1428527832031, ᐃ * 340.0178565979004, ᐃ * 447.1428527832031, ᐃ * 343.0178565979004), Ⲇ.bezierCurveTo(ᐃ * 445.1428527832031, ᐃ * 351.0178565979004, 415.1428527832031 * ᐃ, 343.0178565979004 * ᐃ, 431.1428527832031 * ᐃ, ᐃ * 333.0178565979004), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(-3 * ᐃ, -ⵠⲆⵠⵠ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(431.1428527832031 * ᐃ, ᐃ * 333.0178565979004), Ⲇ.bezierCurveTo(ᐃ * 447.1428527832031, 330.0178565979004 * ᐃ, ᐃ * 448.1428527832031, ᐃ * 340.0178565979004, 447.1428527832031 * ᐃ, ᐃ * 343.0178565979004), Ⲇ.bezierCurveTo(445.1428527832031 * ᐃ, ᐃ * 351.0178565979004, ᐃ * 415.1428527832031, ᐃ * 343.0178565979004, ᐃ * 431.1428527832031, ᐃ * 333.0178565979004), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⵠΔᐃⲆ * ᐃ, ᐃ * ⵠΔⵠⲆ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 486.1428527832031, 272.44642639160156 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 493.1428527832031, 260.44642639160156 * ᐃ, ᐃ * 519.1428527832031, 277.44642639160156 * ᐃ, 511.1428527832031 * ᐃ, ᐃ * 289.44642639160156), Ⲇ.bezierCurveTo(ᐃ * 503.1428527832031, ᐃ * 297.44642639160156, 483.1428527832031 * ᐃ, 277.44642639160156 * ᐃ, 486.1428527832031 * ᐃ, ᐃ * 273.44642639160156), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ⵠⵠⲆⵠ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 486.1428527832031, 272.44642639160156 * ᐃ), Ⲇ.bezierCurveTo(493.1428527832031 * ᐃ, ᐃ * 260.44642639160156, ᐃ * 519.1428527832031, 277.44642639160156 * ᐃ, ᐃ * 511.1428527832031, ᐃ * 289.44642639160156), Ⲇ.bezierCurveTo(503.1428527832031 * ᐃ, ᐃ * 297.44642639160156, ᐃ * 483.1428527832031, 277.44642639160156 * ᐃ, ᐃ * 486.1428527832031, ᐃ * 273.44642639160156), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ⵠⵠⲆⵠ, ᐃ * 3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(503.1428527832031 * ᐃ, 245.01785278320312 * ᐃ), Ⲇ.bezierCurveTo(516.1428527832031 * ᐃ, ᐃ * 247.01785278320312, ᐃ * 513.1428527832031, ᐃ * 264.0178527832031, ᐃ * 509.1428527832031, 265.0178527832031 * ᐃ), Ⲇ.bezierCurveTo(499.1428527832031 * ᐃ, ᐃ * 268.0178527832031, 494.1428527832031 * ᐃ, ᐃ * 244.01785278320312, ᐃ * 504.1428527832031, ᐃ * 245.01785278320312), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -ⵠⲆⵠⵠ, -ᐃⲆⲆᐃΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(503.1428527832031 * ᐃ, 245.01785278320312 * ᐃ), Ⲇ.bezierCurveTo(516.1428527832031 * ᐃ, ᐃ * 247.01785278320312, ᐃ * 513.1428527832031, ᐃ * 264.0178527832031, 509.1428527832031 * ᐃ, ᐃ * 265.0178527832031), Ⲇ.bezierCurveTo(499.1428527832031 * ᐃ, 268.0178527832031 * ᐃ, 494.1428527832031 * ᐃ, 244.01785278320312 * ᐃ, ᐃ * 504.1428527832031, ᐃ * 245.01785278320312), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⵠⵠⲆⵠΔ * ᐃ, Δᐃᐃᐃ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 518.1428527832031, ᐃ * 179.73213958740234), Ⲇ.bezierCurveTo(ᐃ * 529.1428527832031, ᐃ * 181.73213958740234, 514.1428527832031 * ᐃ, 212.73213958740234 * ᐃ, 505.1428527832031 * ᐃ, ᐃ * 200.73213958740234), Ⲇ.bezierCurveTo(ᐃ * 499.1428527832031, 186.73213958740234 * ᐃ, ᐃ * 515.1428527832031, ᐃ * 177.73213958740234, ᐃ * 518.1428527832031, ᐃ * 179.73213958740234), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(518.1428527832031 * ᐃ, ᐃ * 179.73213958740234), Ⲇ.bezierCurveTo(ᐃ * 529.1428527832031, 181.73213958740234 * ᐃ, ᐃ * 514.1428527832031, 212.73213958740234 * ᐃ, 505.1428527832031 * ᐃ, 200.73213958740234 * ᐃ), Ⲇ.bezierCurveTo(499.1428527832031 * ᐃ, ᐃ * 186.73213958740234, 515.1428527832031 * ᐃ, ᐃ * 177.73213958740234, 518.1428527832031 * ᐃ, ᐃ * 179.73213958740234), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔᐃᐃⲆ]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ᐃ * ΔⲆΔⵠ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(438.1428527832031 * ᐃ, ᐃ * 22.16070556640625), Ⲇ.bezierCurveTo(ᐃ * 446.1428527832031, 27.16070556640625 * ᐃ, ᐃ * 422.1428527832031, ᐃ * 54.16070556640625, 414.1428527832031 * ᐃ, ᐃ * 40.16070556640625), Ⲇ.bezierCurveTo(ᐃ * 409.1428527832031, 27.16070556640625 * ᐃ, ᐃ * 430.1428527832031, ᐃ * 15.16070556640625, 438.1428527832031 * ᐃ, 22.16070556640625 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]), Ⲇ.globalAlpha = 1, Ⲇ.translate(ᐃ * -3, ᐃ * -ⵠⲆⲆΔ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 438.1428527832031, 22.16070556640625 * ᐃ), Ⲇ.bezierCurveTo(446.1428527832031 * ᐃ, 27.16070556640625 * ᐃ, ᐃ * 422.1428527832031, ᐃ * 54.16070556640625, ᐃ * 414.1428527832031, ᐃ * 40.16070556640625), Ⲇ.bezierCurveTo(ᐃ * 409.1428527832031, ᐃ * 27.16070556640625, ᐃ * 430.1428527832031, ᐃ * 15.16070556640625, ᐃ * 438.1428527832031, ᐃ * 22.16070556640625), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[1]), Ⲇ.globalAlpha = .5, Ⲇ.translate(ⲆⵠⵠΔ * ᐃ, 3 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(406.1428527832031 * ᐃ, 11.16070556640625 * ᐃ), Ⲇ.bezierCurveTo(418.1428527832031 * ᐃ, 14.16070556640625 * ᐃ, ᐃ * 411.1428527832031, ᐃ * 27.16070556640625, ᐃ * 403.1428527832031, ᐃ * 30.16070556640625), Ⲇ.bezierCurveTo(395.1428527832031 * ᐃ, ᐃ * 31.16070556640625, ᐃ * 391.1428527832031, 16.16070556640625 * ᐃ, ᐃ * 406.1428527832031, ᐃ * 10.16070556640625), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠ]), Ⲇ.globalAlpha = ᐃⲆⵠΔ, Ⲇ.translate(-3 * ᐃ, ᐃ * -3), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 406.1428527832031, 11.16070556640625 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 418.1428527832031, 14.16070556640625 * ᐃ, 411.1428527832031 * ᐃ, ᐃ * 27.16070556640625, 403.1428527832031 * ᐃ, ᐃ * 30.16070556640625), Ⲇ.bezierCurveTo(ᐃ * 395.1428527832031, 31.16070556640625 * ᐃ, ᐃ * 391.1428527832031, ᐃ * 16.16070556640625, 406.1428527832031 * ᐃ, 10.16070556640625 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ]), Ⲇ.translate(ΔⵠΔⵠⵠ * ᐃ, 100 * ᐃ));
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.translate(ᐃ * -3, -3 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 271, 111 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 259, 110 * ᐃ, ᐃ * 258, ᐃ * 99, ᐃ * 265, ᐃ * 95);
		Ⲇ.bezierCurveTo(ᐃ * 276, ᐃ * 91, ᐃ * 279, ⲆⲆⵠⵠⲆ * ᐃ, ᐃ * 275, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 274, 109 * ᐃ, 273 * ᐃ, ᐃ * 110, ᐃ * 271, ᐃ * 111);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 169, ᐃ * 121);
		Ⲇ.bezierCurveTo(159 * ᐃ, 129 * ᐃ, 149 * ᐃ, 126 * ᐃ, ᐃ * 144, ᐃ * 114);
		Ⲇ.bezierCurveTo(142 * ᐃ, ᐃ * 102, 149 * ᐃ, 98 * ᐃ, 163 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 175, 98 * ᐃ, 176 * ᐃ, 115 * ᐃ, ᐃ * 169, 121 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠᐃ], ᐃᐃ[3], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 213, 150 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206, 134 * ᐃ, 216 * ᐃ, 120 * ᐃ, 235 * ᐃ, 129 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 247, ᐃ * 139, ᐃ * 242, 146 * ᐃ, 237 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(226 * ᐃ, 162 * ᐃ, 218 * ᐃ, ᐃ * 159, ᐃ * 213, 150 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ], ᐃᐃ[ᐃⲆᐃΔⵠ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 236, ᐃ * 169);
		Ⲇ.bezierCurveTo(ᐃ * 247, 166 * ᐃ, 250 * ᐃ, 172 * ᐃ, ᐃ * 247, 181 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 242, ᐃ * 186, ᐃ * 241, ᐃ * 181, 242 * ᐃ, 182 * ᐃ);
		Ⲇ.bezierCurveTo(241 * ᐃ, 178 * ᐃ, 240 * ᐃ, ᐃ * 179, 239 * ᐃ, ᐃ * 181);
		Ⲇ.bezierCurveTo(ᐃ * 240, 184 * ᐃ, 237 * ᐃ, ᐃ * 186, ᐃ * 233, ᐃ * 181);
		Ⲇ.bezierCurveTo(230 * ᐃ, ᐃ * 173, ᐃ * 233, ᐃ * 169, ᐃ * 236, ᐃ * 169);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠΔⵠⲆ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(163 * ᐃ, 170 * ᐃ);
		Ⲇ.bezierCurveTo(176 * ᐃ, ᐃ * 165, ᐃ * 180, ᐃ * 172, 181 * ᐃ, ᐃ * 181);
		Ⲇ.bezierCurveTo(182 * ᐃ, ᐃ * 189, 178 * ᐃ, 192 * ᐃ, ᐃ * 174, ᐃ * 188);
		Ⲇ.bezierCurveTo(ᐃ * 172, 183 * ᐃ, 170 * ᐃ, ᐃ * 184, ᐃ * 170, ᐃ * 188);
		Ⲇ.bezierCurveTo(176 * ᐃ, ᐃ * 194, 165 * ᐃ, 196 * ᐃ, ᐃ * 162, 190 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152, ᐃ * 181, 157 * ᐃ, ᐃ * 173, 163 * ᐃ, 170 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠΔⵠⲆ], ᐃ * 2);
		Ⲇ.scale(.05, .05);
		Ⲇ.translate(5e3 * ᐃ, ᐃ * 1900);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 273, ᐃ * 46.546875);
		Ⲇ.bezierCurveTo(353 * ᐃ, ᐃ * 131.546875, ᐃ * 303, ᐃ * 213.546875, ᐃ * 272, 236.546875 * ᐃ);
		Ⲇ.bezierCurveTo(203 * ᐃ, 179.546875 * ᐃ, 236 * ᐃ, 84.546875 * ᐃ, ᐃ * 273, 47.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⵠᐃⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 467, 257.546875 * ᐃ);
		Ⲇ.bezierCurveTo(369 * ᐃ, 194.546875 * ᐃ, ᐃ * 325, ᐃ * 236.546875, 291 * ᐃ, 271.546875 * ᐃ);
		Ⲇ.bezierCurveTo(371 * ᐃ, ᐃ * 335.546875, 427 * ᐃ, 313.546875 * ᐃ, 467 * ᐃ, 258.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇⵠⵠᐃᐃ], ᐃᐃ[5], ᐃ * ΔⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(269 * ᐃ, 275.546875 * ᐃ);
		Ⲇ.bezierCurveTo(343 * ᐃ, 356.546875 * ᐃ, 355 * ᐃ, ᐃ * 407.546875, ᐃ * 323, ᐃ * 472.546875);
		Ⲇ.bezierCurveTo(ᐃ * 224, ᐃ * 451.546875, ᐃ * 238, 326.546875 * ᐃ, ᐃ * 270, ᐃ * 275.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(260 * ᐃ, 267.546875 * ᐃ);
		Ⲇ.bezierCurveTo(134 * ᐃ, 221.546875 * ᐃ, ᐃ * 89, 256.546875 * ᐃ, ᐃ * 60, ᐃ * 295.546875);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 357.546875, 242 * ᐃ, 344.546875 * ᐃ, ᐃ * 260, 267.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔᐃΔΔⲆ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 124, 123.546875 * ᐃ);
		Ⲇ.bezierCurveTo(255 * ᐃ, 140.546875 * ᐃ, ᐃ * 265, ᐃ * 234.546875, 267 * ᐃ, 269.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159, 283.546875 * ᐃ, ᐃ * 127, 192.546875 * ᐃ, ᐃ * 124, 124.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ⲆⲆΔΔⵠ], ᐃ * ᐃᐃⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 267, 268.546875 * ᐃ);
		Ⲇ.bezierCurveTo(265 * ᐃ, ᐃ * 170.546875, 364 * ᐃ, 127.546875 * ᐃ, 407 * ᐃ, 132.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 427, 204.546875 * ᐃ, ᐃ * 341, 277.546875 * ᐃ, ᐃ * 268, 271.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠᐃ], ᐃᐃ[ᐃⲆⵠⲆⲆ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(270 * ᐃ, ᐃ * 269.546875);
		Ⲇ.bezierCurveTo(ᐃ * 370, ᐃ * 251.546875, 410 * ᐃ, 328.546875 * ᐃ, ᐃ * 420, 399.546875 * ᐃ);
		Ⲇ.bezierCurveTo(292 * ᐃ, 412.546875 * ᐃ, 275 * ᐃ, 313.546875 * ᐃ, ᐃ * 269, 272.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔⲆᐃ], ᐃᐃ[7], ᐃ * ⵠⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(273 * ᐃ, 266.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 291, ᐃ * 370.546875, 235 * ᐃ, ᐃ * 428.546875, 173 * ᐃ, 451.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, 365.546875 * ᐃ, 217 * ᐃ, 274.546875 * ᐃ, 272 * ᐃ, 265.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ⲆᐃⲆᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 266, ᐃ * 251.546875, 19.1049731745428 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔⲆ], ᐃᐃ[9], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 292, ᐃ * 274.546875, ᐃ * 15.556349186104045);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃᐃᐃ], ᐃᐃ[ⵠΔⵠⲆⵠ], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 258, 291.546875 * ᐃ, 17.029386365926403 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔⲆ], ᐃᐃ[ΔᐃΔⵠⲆΔⲆ], 2 * ᐃ);
		Ⲇ.scale(1.4, 1.4);
		Ⲇ.translate(ᐃ * -700, 280 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(273 * ᐃ, 46.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 353, ᐃ * 131.546875, ᐃ * 303, ᐃ * 213.546875, ᐃ * 272, 236.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203, 179.546875 * ᐃ, ᐃ * 236, ᐃ * 84.546875, 273 * ᐃ, ᐃ * 47.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠᐃᐃΔᐃ], ᐃ * ⵠⵠΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(467 * ᐃ, ᐃ * 257.546875);
		Ⲇ.bezierCurveTo(369 * ᐃ, ᐃ * 194.546875, ᐃ * 325, 236.546875 * ᐃ, ᐃ * 291, 271.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 371, ᐃ * 335.546875, 427 * ᐃ, ᐃ * 313.546875, ᐃ * 467, ᐃ * 258.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆᐃᐃΔ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 269, ᐃ * 275.546875);
		Ⲇ.bezierCurveTo(ᐃ * 343, 356.546875 * ᐃ, ᐃ * 355, 407.546875 * ᐃ, ᐃ * 323, ᐃ * 472.546875);
		Ⲇ.bezierCurveTo(224 * ᐃ, ᐃ * 451.546875, 238 * ᐃ, ᐃ * 326.546875, ᐃ * 270, 275.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[Δᐃⵠⵠ], ᐃΔⲆⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 260, 267.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134, ᐃ * 221.546875, 89 * ᐃ, 256.546875 * ᐃ, 60 * ᐃ, ᐃ * 295.546875);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 357.546875, ᐃ * 242, ᐃ * 344.546875, 260 * ᐃ, 267.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆᐃᐃΔ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(124 * ᐃ, 123.546875 * ᐃ);
		Ⲇ.bezierCurveTo(255 * ᐃ, ᐃ * 140.546875, ᐃ * 265, ᐃ * 234.546875, ᐃ * 267, ᐃ * 269.546875);
		Ⲇ.bezierCurveTo(ᐃ * 159, 283.546875 * ᐃ, ᐃ * 127, ᐃ * 192.546875, ᐃ * 124, ᐃ * 124.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔⲆⲆ], ᐃᐃ[7], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(267 * ᐃ, 268.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 265, 170.546875 * ᐃ, ᐃ * 364, ᐃ * 127.546875, 407 * ᐃ, 132.546875 * ᐃ);
		Ⲇ.bezierCurveTo(427 * ᐃ, ᐃ * 204.546875, 341 * ᐃ, 277.546875 * ᐃ, 268 * ᐃ, 271.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔⵠ], ᐃᐃ[7], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(270 * ᐃ, ᐃ * 269.546875);
		Ⲇ.bezierCurveTo(370 * ᐃ, 251.546875 * ᐃ, 410 * ᐃ, 328.546875 * ᐃ, ᐃ * 420, 399.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 292, ᐃ * 412.546875, ᐃ * 275, 313.546875 * ᐃ, 269 * ᐃ, 272.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ⲆⲆΔΔⵠ], 2 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(273 * ᐃ, ᐃ * 266.546875);
		Ⲇ.bezierCurveTo(291 * ᐃ, 370.546875 * ᐃ, ᐃ * 235, ᐃ * 428.546875, 173 * ᐃ, 451.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, ᐃ * 365.546875, 217 * ᐃ, ᐃ * 274.546875, ᐃ * 272, ᐃ * 265.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 266, 251.546875 * ᐃ, ᐃ * 19.1049731745428);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃᐃᐃ], ᐃᐃ[9], ᐃ * 2);
		ΔⵠⲆ(Ⲇ, 292 * ᐃ, 274.546875 * ᐃ, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ᐃⵠⵠΔⵠ], 2 * ᐃ);
		ΔⵠⲆ(Ⲇ, 258 * ᐃ, 291.546875 * ᐃ, 17.029386365926403 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃᐃᐃ], ᐃᐃ[ⵠⲆᐃⵠⲆᐃⲆ], ᐃ * 2);
		Ⲇ.translate(ᐃ * -900, ᐃ * -200);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 273, 46.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 353, ᐃ * 131.546875, 303 * ᐃ, 213.546875 * ᐃ, ᐃ * 272, ᐃ * 236.546875);
		Ⲇ.bezierCurveTo(ᐃ * 203, ᐃ * 179.546875, 236 * ᐃ, ᐃ * 84.546875, 273 * ᐃ, ᐃ * 47.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔⲆⵠΔΔ], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 467, ᐃ * 257.546875);
		Ⲇ.bezierCurveTo(369 * ᐃ, ᐃ * 194.546875, ᐃ * 325, ᐃ * 236.546875, ᐃ * 291, ᐃ * 271.546875);
		Ⲇ.bezierCurveTo(371 * ᐃ, ᐃ * 335.546875, 427 * ᐃ, 313.546875 * ᐃ, ᐃ * 467, ᐃ * 258.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * ᐃΔⲆⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(269 * ᐃ, 275.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 343, 356.546875 * ᐃ, ᐃ * 355, ᐃ * 407.546875, ᐃ * 323, ᐃ * 472.546875);
		Ⲇ.bezierCurveTo(224 * ᐃ, 451.546875 * ᐃ, 238 * ᐃ, 326.546875 * ᐃ, ᐃ * 270, ᐃ * 275.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ], ᐃᐃ[5], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 260, ᐃ * 267.546875);
		Ⲇ.bezierCurveTo(ᐃ * 134, 221.546875 * ᐃ, ᐃ * 89, 256.546875 * ᐃ, 60 * ᐃ, 295.546875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116, ᐃ * 357.546875, ᐃ * 242, ᐃ * 344.546875, ᐃ * 260, 267.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⵠΔⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(124 * ᐃ, ᐃ * 123.546875);
		Ⲇ.bezierCurveTo(ᐃ * 255, 140.546875 * ᐃ, ᐃ * 265, ᐃ * 234.546875, 267 * ᐃ, 269.546875 * ᐃ);
		Ⲇ.bezierCurveTo(159 * ᐃ, ᐃ * 283.546875, 127 * ᐃ, 192.546875 * ᐃ, ᐃ * 124, ᐃ * 124.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * ᐃΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 267, ᐃ * 268.546875);
		Ⲇ.bezierCurveTo(ᐃ * 265, ᐃ * 170.546875, ᐃ * 364, 127.546875 * ᐃ, 407 * ᐃ, 132.546875 * ᐃ);
		Ⲇ.bezierCurveTo(427 * ᐃ, ᐃ * 204.546875, ᐃ * 341, ᐃ * 277.546875, 268 * ᐃ, 271.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃᐃᐃⵠ], ᐃᐃ[7], ⲆᐃⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(270 * ᐃ, ᐃ * 269.546875);
		Ⲇ.bezierCurveTo(370 * ᐃ, 251.546875 * ᐃ, 410 * ᐃ, 328.546875 * ᐃ, ᐃ * 420, 399.546875 * ᐃ);
		Ⲇ.bezierCurveTo(292 * ᐃ, ᐃ * 412.546875, 275 * ᐃ, 313.546875 * ᐃ, ᐃ * 269, 272.546875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⵠ], ᐃᐃ[7], ᐃ * 2);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 273, ᐃ * 266.546875);
		Ⲇ.bezierCurveTo(ᐃ * 291, ᐃ * 370.546875, 235 * ᐃ, ᐃ * 428.546875, 173 * ᐃ, 451.546875 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, 365.546875 * ᐃ, 217 * ᐃ, 274.546875 * ᐃ, 272 * ᐃ, ᐃ * 265.546875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠΔⲆ], ᐃᐃ[7], ᐃ * 2);
		ΔⵠⲆ(Ⲇ, ᐃ * 266, ᐃ * 251.546875, 19.1049731745428 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[9], ᐃ * ⲆⲆⵠΔ);
		ΔⵠⲆ(Ⲇ, 292 * ᐃ, ᐃ * 274.546875, 15.556349186104045 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⲆ], ᐃᐃ[ΔᐃⵠΔⵠ], ᐃ * 2);
		ΔⵠⲆ(Ⲇ, ᐃ * 258, ᐃ * 291.546875, 17.029386365926403 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠᐃ], ᐃᐃ[9], 2 * ᐃ);
		return ΔΔ
	}

	function ⵠⵠⵠⵠⵠᐃⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 110 * ᐃ;
		ΔΔ.height = ᐃ * 110;
		Ⲇ.globalAlpha = .2;
		ΔⵠⲆ(Ⲇ, ᐃ * 55, ᐃ * 55, 55 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⵠⲆᐃⵠΔᐃΔ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 161 * ᐃ;
		ΔΔ.height = 184 * ᐃ;
		Ⲇ.translate(0, ᐃ * 10);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 105.5, 34.609375 * ᐃ);
		Ⲇ.bezierCurveTo(48.5 * ᐃ, ᐃ * 7.609375, ᐃ * 11.5, 58.609375 * ᐃ, 20.5 * ᐃ, 97.609375 * ᐃ);
		Ⲇ.bezierCurveTo(44.5 * ᐃ, ᐃ * 161.609375, ᐃ * 70.5, 171.609375 * ᐃ, ᐃ * 88.5, ᐃ * 156.609375);
		Ⲇ.bezierCurveTo(ᐃ * 120.5, ᐃ * 129.609375, 123.5 * ᐃ, ᐃ * 105.609375, 128.5 * ᐃ, 83.609375 * ᐃ);
		Ⲇ.bezierCurveTo(137.5 * ᐃ, ᐃ * 79.609375, 141.5 * ᐃ, 79.609375 * ᐃ, 146.5 * ᐃ, ᐃ * 81.609375);
		Ⲇ.bezierCurveTo(153.5 * ᐃ, 70.609375 * ᐃ, 151.5 * ᐃ, 65.609375 * ᐃ, 148.5 * ᐃ, 61.609375 * ᐃ);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, 60.609375 * ᐃ, 131.5 * ᐃ, 63.609375 * ᐃ, ᐃ * 127.5, ᐃ * 66.609375);
		Ⲇ.bezierCurveTo(127.5 * ᐃ, 55.609375 * ᐃ, 125.5 * ᐃ, 54.609375 * ᐃ, 120.5 * ᐃ, 51.609375 * ᐃ);
		Ⲇ.bezierCurveTo(128.5 * ᐃ, ᐃ * 42.609375, 136.5 * ᐃ, ᐃ * 38.609375, 147.5 * ᐃ, ᐃ * 39.609375);
		Ⲇ.bezierCurveTo(152.5 * ᐃ, 23.609375 * ᐃ, 147.5 * ᐃ, 21.609375 * ᐃ, ᐃ * 140.5, ᐃ * 17.609375);
		Ⲇ.bezierCurveTo(ᐃ * 120.5, 17.609375 * ᐃ, ᐃ * 114.5, ᐃ * 27.609375, ᐃ * 106.5, 35.609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 45.5, 144.609375 * ᐃ);
		Ⲇ.bezierCurveTo(35.5 * ᐃ, 155.609375 * ᐃ, 37 * ᐃ, ᐃ * 152.109375, ᐃ * 28.5, 159.609375 * ᐃ);
		Ⲇ.bezierCurveTo(16.5 * ᐃ, ᐃ * 154.609375, ᐃ * 16.5, 151.609375 * ᐃ, ᐃ * 17.5, 141.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 25.5, 134.109375 * ᐃ, ᐃ * 25.5, 134.109375 * ᐃ, ᐃ * 33.5, 126.609375 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.translate(ΔΔⲆᐃ, -ⲆⲆᐃⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(45.5 * ᐃ, 144.609375 * ᐃ);
		Ⲇ.bezierCurveTo(35.5 * ᐃ, ᐃ * 155.609375, 37 * ᐃ, 152.109375 * ᐃ, 28.5 * ᐃ, 159.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16.5, ᐃ * 154.609375, ᐃ * 16.5, 151.609375 * ᐃ, 17.5 * ᐃ, ᐃ * 141.609375);
		Ⲇ.bezierCurveTo(ᐃ * 25.5, 134.109375 * ᐃ, ᐃ * 25.5, 134.109375 * ᐃ, ᐃ * 33.5, ᐃ * 126.609375);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[2], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.5 * ᐃ, 34.609375 * ᐃ);
		Ⲇ.bezierCurveTo(48.5 * ᐃ, ᐃ * 7.609375, ᐃ * 11.5, 58.609375 * ᐃ, 20.5 * ᐃ, ᐃ * 97.609375);
		Ⲇ.bezierCurveTo(44.5 * ᐃ, 161.609375 * ᐃ, ᐃ * 70.5, ᐃ * 171.609375, ᐃ * 88.5, ᐃ * 156.609375);
		Ⲇ.bezierCurveTo(120.5 * ᐃ, ᐃ * 129.609375, ᐃ * 123.5, 105.609375 * ᐃ, ᐃ * 128.5, 83.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137.5, 79.609375 * ᐃ, ᐃ * 141.5, 79.609375 * ᐃ, 146.5 * ᐃ, ᐃ * 81.609375);
		Ⲇ.bezierCurveTo(153.5 * ᐃ, 70.609375 * ᐃ, ᐃ * 151.5, ᐃ * 65.609375, ᐃ * 148.5, ᐃ * 61.609375);
		Ⲇ.bezierCurveTo(134.5 * ᐃ, 60.609375 * ᐃ, 131.5 * ᐃ, ᐃ * 63.609375, ᐃ * 127.5, ᐃ * 66.609375);
		Ⲇ.bezierCurveTo(127.5 * ᐃ, 55.609375 * ᐃ, ᐃ * 125.5, 54.609375 * ᐃ, ᐃ * 120.5, 51.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128.5, 42.609375 * ᐃ, ᐃ * 136.5, ᐃ * 38.609375, ᐃ * 147.5, 39.609375 * ᐃ);
		Ⲇ.bezierCurveTo(152.5 * ᐃ, ᐃ * 23.609375, ᐃ * 147.5, 21.609375 * ᐃ, 140.5 * ᐃ, 17.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120.5, 17.609375 * ᐃ, 114.5 * ᐃ, 27.609375 * ᐃ, ᐃ * 106.5, ᐃ * 35.609375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ], ᐃᐃ[ⲆⲆⵠΔ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 104.5, ᐃ * 35.609375);
		Ⲇ.bezierCurveTo(71.5 * ᐃ, 36.609375 * ᐃ, 57.5 * ᐃ, 52.609375 * ᐃ, 58.5 * ᐃ, ᐃ * 81.609375);
		Ⲇ.bezierCurveTo(ᐃ * 59.5, 103.609375 * ᐃ, 66.5 * ᐃ, 107.609375 * ᐃ, 66.5 * ᐃ, ᐃ * 116.609375);
		Ⲇ.bezierCurveTo(67.5 * ᐃ, 128.609375 * ᐃ, ᐃ * 65.5, ᐃ * 131.609375, 63.5 * ᐃ, ᐃ * 137.609375);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(59.5 * ᐃ, ᐃ * 72.609375);
		Ⲇ.bezierCurveTo(38.5 * ᐃ, 80.609375 * ᐃ, 43.5 * ᐃ, ᐃ * 81.609375, 37.5 * ᐃ, 89.609375 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * ⵠᐃⵠᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(60.5 * ᐃ, ᐃ * 85.609375);
		Ⲇ.bezierCurveTo(75.5 * ᐃ, 91.609375 * ᐃ, ᐃ * 76.5, 96.609375 * ᐃ, 81.5 * ᐃ, ᐃ * 104.609375);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(68.5 * ᐃ, ᐃ * 122.609375);
		Ⲇ.bezierCurveTo(ᐃ * 79.5, 130.609375 * ᐃ, 74.5 * ᐃ, ᐃ * 128.609375, 80.5 * ᐃ, ᐃ * 134.609375);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 142.5, ᐃ * 18.609375);
		Ⲇ.bezierCurveTo(151.5 * ᐃ, 28.609375 * ᐃ, ᐃ * 151.5, ᐃ * 32.609375, ᐃ * 146.5, 40.609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137.5, ᐃ * 26.609375, ᐃ * 138.5, 24.609375 * ᐃ, ᐃ * 142.5, ᐃ * 19.609375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146.5, ᐃ * 61.50892639160156);
		Ⲇ.bezierCurveTo(157.5 * ᐃ, 69.50892639160156 * ᐃ, 150.5 * ᐃ, 79.50892639160156 * ᐃ, ᐃ * 145.5, ᐃ * 81.50892639160156);
		Ⲇ.bezierCurveTo(140.5 * ᐃ, ᐃ * 65.50892639160156, ᐃ * 144.5, ᐃ * 64.50892639160156, 146.5 * ᐃ, ᐃ * 62.50892639160156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ]);
		return ΔΔ
	}

	function ⵠᐃΔΔᐃΔΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 120;
		var ΔᐃⲆ = ᐃ * 140;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		ΔΔ.width = 130 * ᐃ;
		ΔΔ.height = ᐃ * 120;
		ᐃΔⵠ(Ⲇ, ⵠΔⲆⵠᐃ * ᐃ, 12 * ᐃ, 110 * ᐃ, ᐃ * 90, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ᐃΔⵠ(Ⲇ, ᐃᐃⲆᐃᐃ * ᐃ, Δᐃⵠⵠ * ᐃ, ᐃ * 110, 90 * ᐃ, ᐃ * ⲆⵠⲆⵠᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[2], Ⲇⵠⵠᐃᐃ * ᐃ);
		var ⵠⵠ = ⵠⲆⲆⵠ(-Math.PI / ⲆΔΔⵠΔ, ⲆⵠⲆⲆⵠ(ᐃ * .5, ⵠⲆΔⲆⵠ, [ⵠ[6], ⵠ[6], ⵠ[ⲆΔᐃⵠⲆⵠΔ], ⵠ[68], ⵠ[68], ⵠ[68], ⵠ[68]]));
		Ⲇ.drawImage(ⵠⵠ, 12 * ᐃ, ⵠⵠⵠⵠΔ * ᐃ);
		var ⵠⵠ = ⵠⲆⲆⵠ(Math.PI / ᐃΔⲆΔ, ᐃᐃⵠⵠᐃ(ᐃ * .55, true, [ⵠ[6], ⵠ[68], ⵠ[68], ⵠ[68], ⵠ[68]]));
		Ⲇ.drawImage(ⵠⵠ, 36 * ᐃ, ᐃ * ⲆⵠᐃΔᐃ);
		return ΔΔ
	}

	function ΔⲆΔⲆΔⵠⲆᐃΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 110 * ᐃ;
		ΔΔ.height = 110 * ᐃ;
		Ⲇ.globalAlpha = .2;
		ΔⵠⲆ(Ⲇ, 55 * ᐃ, ᐃ * 55, 55 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		return ΔΔ
	}

	function ⲆΔᐃΔⵠⲆⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 89 * ᐃ;
		ΔΔ.height = ᐃ * 89;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 44.5, 44.5 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 6, 40 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⲆⵠΔ], 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(44.5 * ᐃ, ᐃ * 44.5);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔⵠⵠⲆ, ᐃ * 25.11521001172521, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠᐃ], ᐃᐃ[3], 5 * ᐃ);
		return ΔΔ
	}

	function ⵠᐃⵠⵠⵠⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 88 * ᐃ;
		ΔΔ.height = ᐃ * 88;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 44, 44 * ᐃ);
		Ⲇ.rotate(.52);
		ⲆᐃⵠΔ(Ⲇ, ⵠΔⵠⵠⲆ, ᐃ * 43, ᐃ * ⲆΔⵠᐃⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃ * ΔⵠⵠΔ);
		return ΔΔ
	}

	function ΔᐃΔⵠΔⲆᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 202;
		ΔΔ.height = ᐃ * 202;
		Ⲇ.translate(ΔᐃⵠⲆ * ᐃ, 1 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ⲆΔᐃ, 10 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(98 * ᐃ, 41.15177917480469 * ᐃ);
		Ⲇ.rotate(.8);
		ᐃΔⵠ(Ⲇ, -16 * ᐃ, ᐃ * -16.5, ᐃ * 32, ᐃ * 33, ᐃ * 7);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 98, ᐃ * 22.5089111328125);
		Ⲇ.bezierCurveTo(97.5 * ᐃ, ᐃ * 41.5089111328125, ᐃ * 97.5, 41.5089111328125 * ᐃ, 97 * ᐃ, 60.5089111328125 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.save();
		Ⲇ.translate(147.5 * ᐃ, ᐃ * 69.5089111328125);
		Ⲇ.rotate(.2);
		ᐃΔⵠ(Ⲇ, -15.5 * ᐃ, ᐃ * -ⲆⵠᐃΔᐃ, 31 * ᐃ, ᐃ * 32, ᐃ * 7);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(163 * ᐃ, 59.50892639160156 * ᐃ);
		Ⲇ.bezierCurveTo(147 * ᐃ, 69.50892639160156 * ᐃ, 127 * ᐃ, ᐃ * 82.50892639160156, ᐃ * 131, ᐃ * 79.50892639160156);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 143.5, 128.2946319580078 * ᐃ);
		Ⲇ.rotate(1.24);
		ᐃΔⵠ(Ⲇ, ᐃ * -16.5, ᐃ * -17.5, 33 * ᐃ, ᐃ * 35, ᐃ * 7);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, ᐃ * 135.93748474121094);
		Ⲇ.bezierCurveTo(ᐃ * 143.5, 128.43748474121094 * ᐃ, ᐃ * 129, ᐃ * 120.93748474121094, 125 * ᐃ, 120.93748474121094 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 99, ᐃ * 156.08035278320312);
		Ⲇ.rotate(.84);
		ᐃΔⵠ(Ⲇ, ᐃ * -18, -ᐃⵠᐃⲆⲆⵠⲆ * ᐃ, ᐃ * 36, 36 * ᐃ, 7 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98 * ᐃ, ᐃ * 136.08035278320312);
		Ⲇ.bezierCurveTo(98 * ᐃ, 156.08035278320312 * ᐃ, ᐃ * 98, 156.08035278320312 * ᐃ, 98 * ᐃ, ᐃ * 176.08035278320312);
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 54, ᐃ * 72.22320556640625);
		Ⲇ.rotate(1.32);
		ᐃΔⵠ(Ⲇ, -ⵠⲆⲆΔΔⵠⲆ * ᐃ, ᐃ * -ΔⵠⵠΔᐃⲆᐃ, 36 * ᐃ, ᐃ * 38, 7 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 34, 60.79463195800781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53.5, 72.29463195800781 * ᐃ, ᐃ * 69, 79.79463195800781 * ᐃ, 73 * ᐃ, ᐃ * 83.79463195800781);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ]);
		Ⲇ.save();
		Ⲇ.translate(49 * ᐃ, 127.29463195800781 * ᐃ);
		Ⲇ.rotate(1.76);
		ᐃΔⵠ(Ⲇ, -20 * ᐃ, -17.5 * ᐃ, ᐃ * 40, ᐃ * 35, ⵠΔᐃⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30, ᐃ * 141.7946319580078);
		Ⲇ.bezierCurveTo(47 * ᐃ, 130.2946319580078 * ᐃ, 64 * ᐃ, 119.79463195800781 * ᐃ, 64 * ᐃ, ᐃ * 118.79463195800781);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ]);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		Ⲇ.translate(0, -10 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 98, ᐃ * 41.15177917480469);
		Ⲇ.rotate(.8);
		ᐃΔⵠ(Ⲇ, -16 * ᐃ, -16.5 * ᐃ, 32 * ᐃ, 33 * ᐃ, ᐃ * ᐃⵠᐃⵠΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[4], ⲆΔᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98 * ᐃ, 22.5089111328125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97.5, ᐃ * 41.5089111328125, 97.5 * ᐃ, ᐃ * 41.5089111328125, 97 * ᐃ, 60.5089111328125 * ᐃ);
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[4], 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(147.5 * ᐃ, 69.5089111328125 * ᐃ);
		Ⲇ.rotate(.2);
		ᐃΔⵠ(Ⲇ, -15.5 * ᐃ, -ᐃΔᐃⲆⵠΔⲆ * ᐃ, 31 * ᐃ, 32 * ᐃ, ᐃ * 7);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(163 * ᐃ, ᐃ * 59.50892639160156);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 69.50892639160156, ᐃ * 127, ᐃ * 82.50892639160156, 131 * ᐃ, 79.50892639160156 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ⲆΔΔⵠΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 143.5, ᐃ * 128.2946319580078);
		Ⲇ.rotate(1.24);
		ᐃΔⵠ(Ⲇ, ᐃ * -16.5, -17.5 * ᐃ, 33 * ᐃ, ᐃ * 35, ⵠΔᐃⲆᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[4], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 162, 135.93748474121094 * ᐃ);
		Ⲇ.bezierCurveTo(143.5 * ᐃ, 128.43748474121094 * ᐃ, 129 * ᐃ, ᐃ * 120.93748474121094, ᐃ * 125, ᐃ * 120.93748474121094);
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[Δⵠⵠⵠ], ᐃ * ⲆⵠΔᐃᐃ);
		Ⲇ.save();
		Ⲇ.translate(99 * ᐃ, 156.08035278320312 * ᐃ);
		Ⲇ.rotate(.84);
		ᐃΔⵠ(Ⲇ, ᐃ * -18, -ⲆΔⲆⲆⵠᐃΔ * ᐃ, 36 * ᐃ, 36 * ᐃ, Ⲇⵠᐃᐃᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⲆΔΔ], ᐃ * ⲆΔΔⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98 * ᐃ, ᐃ * 136.08035278320312);
		Ⲇ.bezierCurveTo(98 * ᐃ, 156.08035278320312 * ᐃ, 98 * ᐃ, ᐃ * 156.08035278320312, 98 * ᐃ, 176.08035278320312 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃᐃⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(54 * ᐃ, ᐃ * 72.22320556640625);
		Ⲇ.rotate(1.32);
		ᐃΔⵠ(Ⲇ, ᐃ * -ᐃΔⲆᐃᐃᐃΔ, ᐃ * -ΔⲆᐃⵠΔ, 36 * ᐃ, ᐃ * 38, ᐃ * ΔᐃⵠⲆⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠᐃᐃ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(34 * ᐃ, ᐃ * 60.79463195800781);
		Ⲇ.bezierCurveTo(ᐃ * 53.5, ᐃ * 72.29463195800781, ᐃ * 69, ᐃ * 79.79463195800781, ᐃ * 73, 83.79463195800781 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(49 * ᐃ, 127.29463195800781 * ᐃ);
		Ⲇ.rotate(1.76);
		ᐃΔⵠ(Ⲇ, -ⵠⵠᐃᐃ * ᐃ, -17.5 * ᐃ, 40 * ᐃ, ᐃ * 35, ᐃ * 7);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃᐃ[4], ᐃ * ⲆⵠΔᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30 * ᐃ, 141.7946319580078 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 47, ᐃ * 130.2946319580078, 64 * ᐃ, 119.79463195800781 * ᐃ, 64 * ᐃ, 118.79463195800781 * ᐃ);
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[ⲆⵠⵠⲆΔ], ⵠᐃᐃΔᐃ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, ᐃ * 10);
		Ⲇ.save();
		Ⲇ.translate(98 * ᐃ, 99 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, ⵠⲆⵠⵠᐃ, 70.28669492273468 * ᐃ, ᐃ * ᐃᐃⵠᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠᐃ]);
		Ⲇ.save();
		Ⲇ.translate(98 * ᐃ, 99 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 6, 56.455940020351264 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⲆΔ]);
		Ⲇ.globalAlpha = ΔΔᐃᐃ;
		Ⲇ.translate(0, -ᐃΔᐃᐃⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 98, ᐃ * 99);
		ⲆᐃⵠΔ(Ⲇ, 6, 70.28669492273468 * ᐃ, ᐃ * ⲆⲆᐃⵠΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[6], 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 98, 99 * ᐃ);
		ⲆᐃⵠΔ(Ⲇ, 6, ᐃ * 56.455940020351264, ᐃ * ᐃᐃⲆᐃᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[8], ᐃ * 7);
		return ΔΔ
	}

	function ᐃᐃΔⵠΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 185 * ᐃ;
		ΔΔ.height = ᐃ * 164;
		Ⲇ.translate(ᐃⵠΔ, ⵠⵠⲆⲆ);
		var ⵠⵠ = ⵠᐃⵠΔΔⲆΔⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ);
		Ⲇ.drawImage(ⵠⵠ, ᐃ * -ⲆΔΔⵠⲆ, ᐃ * Ⲇᐃⵠᐃ);
		var ⵠⵠ = ΔΔⵠⵠᐃⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, Δⵠⵠ);
		Ⲇ.drawImage(ⵠⵠ, ᐃ * -83, -40 * ᐃ);
		var ⵠⵠ = ΔΔⵠⵠᐃⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, Math.PI / 1.4);
		Ⲇ.drawImage(ⵠⵠ, -15 * ᐃ, ᐃ * -88);
		var ⵠⵠ = ΔΔⵠⵠᐃⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, Math.PI / -1.4);
		Ⲇ.drawImage(ⵠⵠ, ᐃᐃⵠᐃⲆᐃⵠ * ᐃ, ᐃ * -ΔᐃᐃⵠΔ);
		return ΔΔ
	}

	function ΔⲆΔⵠΔⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 46;
		ΔΔ.height = ᐃ * 140;
		Ⲇ.scale(-1 * ᐃ, ᐃ * ᐃⵠⵠ);
		Ⲇ.translate(ᐃ * -50, ᐃ * 40);
		Ⲇ.translate(ᐃ * -ⵠΔΔΔ, 0);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆᐃⲆⲆ;
		Ⲇ.translate(ᐃ * 10, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(22.599990844726562 * ᐃ, 85.94999694824219 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 17.599990844726562, 83.94999694824219 * ᐃ, ᐃ * 17.599990844726562, ᐃ * 83.94999694824219, 12.599990844726562 * ᐃ, 81.94999694824219 * ᐃ);
		Ⲇ.bezierCurveTo(19.599990844726562 * ᐃ, ᐃ * 73.94999694824219, 2.5999908447265625 * ᐃ, 22.949996948242188 * ᐃ, 33.59999084472656 * ᐃ, ᐃ * 7.9499969482421875);
		Ⲇ.bezierCurveTo(27.599990844726562 * ᐃ, ᐃ * 28.949996948242188, ᐃ * 33.59999084472656, 26.949996948242188 * ᐃ, 35.59999084472656 * ᐃ, 32.94999694824219 * ᐃ);
		Ⲇ.bezierCurveTo(25.599990844726562 * ᐃ, ᐃ * 59.94999694824219, ᐃ * 26.599990844726562, ᐃ * 69.94999694824219, ᐃ * 29.599990844726562, ᐃ * 82.94999694824219);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(-1 * ᐃ, 0);
		Ⲇ.moveTo(ᐃ * 17.599990844726562, ᐃ * 89.75);
		Ⲇ.bezierCurveTo(24.599990844726562 * ᐃ, ᐃ * 99.75, 24.599990844726562 * ᐃ, 101.75 * ᐃ, 20.599990844726562 * ᐃ, ᐃ * 111.75);
		Ⲇ.bezierCurveTo(28.599990844726562 * ᐃ, 110.75 * ᐃ, 26.599990844726562 * ᐃ, 112.75 * ᐃ, ᐃ * 28.599990844726562, 111.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30.599990844726562, ᐃ * 96.75, 32.59999084472656 * ᐃ, ᐃ * 96.75, ᐃ * 30.599990844726562, ᐃ * 87.75);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃ * 1, 0);
		Ⲇ.moveTo(7.5999908447265625 * ᐃ, 86.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 12.599990844726562, ᐃ * 85.34999084472656, 14.599990844726562 * ᐃ, ᐃ * 84.34999084472656, 13.599990844726562 * ᐃ, 84.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21.599990844726562, 83.34999084472656 * ᐃ, 21.599990844726562 * ᐃ, ᐃ * 83.34999084472656, ᐃ * 29.599990844726562, 82.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(33.59999084472656 * ᐃ, ᐃ * 85.84999084472656, ᐃ * 33.59999084472656, 85.84999084472656 * ᐃ, ᐃ * 37.59999084472656, 89.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(34.09999084472656 * ᐃ, ᐃ * 91.84999084472656, 34.09999084472656 * ᐃ, ᐃ * 91.84999084472656, ᐃ * 30.599990844726562, 94.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21.099990844726562, ᐃ * 93.34999084472656, 21.099990844726562 * ᐃ, 93.34999084472656 * ᐃ, 11.599990844726562 * ᐃ, ᐃ * 92.34999084472656);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 23.599990844726562, 110.94999694824219 * ᐃ);
		Ⲇ.rotate(ΔⲆⵠ);
		ᐃΔⵠ(Ⲇ, -ⲆΔᐃⵠΔ * ᐃ, -4 * ᐃ, ᐃ * Δᐃⵠᐃᐃ, ⲆΔΔΔᐃ * ᐃ, ⲆΔΔⵠⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.translate(0 * ᐃ, ΔⵠⲆⲆ);
		Ⲇ.globalAlpha = ⲆΔⵠⲆ;
		Ⲇ.translate(10 * ᐃ, ⲆΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(22.599990844726562 * ᐃ, 85.94999694824219 * ᐃ);
		Ⲇ.bezierCurveTo(17.599990844726562 * ᐃ, ᐃ * 83.94999694824219, ᐃ * 17.599990844726562, 83.94999694824219 * ᐃ, 12.599990844726562 * ᐃ, ᐃ * 81.94999694824219);
		Ⲇ.bezierCurveTo(19.599990844726562 * ᐃ, ᐃ * 73.94999694824219, 2.5999908447265625 * ᐃ, 22.949996948242188 * ᐃ, ᐃ * 33.59999084472656, ᐃ * 7.9499969482421875);
		Ⲇ.bezierCurveTo(ᐃ * 27.599990844726562, ᐃ * 28.949996948242188, 33.59999084472656 * ᐃ, 26.949996948242188 * ᐃ, ᐃ * 35.59999084472656, 32.94999694824219 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 25.599990844726562, 59.94999694824219 * ᐃ, ᐃ * 26.599990844726562, 69.94999694824219 * ᐃ, 29.599990844726562 * ᐃ, ᐃ * 82.94999694824219);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃ * ΔⲆΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃ * -1, 0);
		Ⲇ.moveTo(17.599990844726562 * ᐃ, 89.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 24.599990844726562, 99.75 * ᐃ, 24.599990844726562 * ᐃ, 101.75 * ᐃ, ᐃ * 20.599990844726562, 111.75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 28.599990844726562, ᐃ * 110.75, 26.599990844726562 * ᐃ, ᐃ * 112.75, 28.599990844726562 * ᐃ, ᐃ * 111.75);
		Ⲇ.bezierCurveTo(30.599990844726562 * ᐃ, ᐃ * 96.75, 32.59999084472656 * ᐃ, 96.75 * ᐃ, 30.599990844726562 * ᐃ, ᐃ * 87.75);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * ᐃⵠⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃ * ⵠᐃΔᐃ, ΔΔᐃ);
		Ⲇ.moveTo(ᐃ * 7.5999908447265625, 86.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(12.599990844726562 * ᐃ, 85.34999084472656 * ᐃ, ᐃ * 14.599990844726562, ᐃ * 84.34999084472656, ᐃ * 13.599990844726562, 84.34999084472656 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 21.599990844726562, ᐃ * 83.34999084472656, 21.599990844726562 * ᐃ, 83.34999084472656 * ᐃ, ᐃ * 29.599990844726562, ᐃ * 82.34999084472656);
		Ⲇ.bezierCurveTo(ᐃ * 33.59999084472656, 85.84999084472656 * ᐃ, 33.59999084472656 * ᐃ, ᐃ * 85.84999084472656, 37.59999084472656 * ᐃ, ᐃ * 89.34999084472656);
		Ⲇ.bezierCurveTo(ᐃ * 34.09999084472656, ᐃ * 91.84999084472656, 34.09999084472656 * ᐃ, 91.84999084472656 * ᐃ, 30.599990844726562 * ᐃ, ᐃ * 94.34999084472656);
		Ⲇ.bezierCurveTo(21.099990844726562 * ᐃ, ᐃ * 93.34999084472656, 21.099990844726562 * ᐃ, ᐃ * 93.34999084472656, 11.599990844726562 * ᐃ, 92.34999084472656 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[2], Ⲇᐃⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(23.599990844726562 * ᐃ, 110.94999694824219 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, -ᐃⵠᐃⵠΔ * ᐃ, ᐃ * -Δⵠⵠⵠ, ᐃ * ᐃⵠᐃⲆⵠΔᐃ, 8 * ᐃ, ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃ * ᐃⵠⵠⵠ);
		return ΔΔ
	}

	function ⵠⲆⵠⲆᐃᐃΔⵠᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 254;
		ΔΔ.height = ᐃ * 288;
		Ⲇ.translate(ΔⵠⲆΔ, 5);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(218 * ᐃ, ᐃ * 84.640625);
		Ⲇ.bezierCurveTo(ᐃ * 150, 13.640625 * ᐃ, 186 * ᐃ, 92.640625 * ᐃ, ᐃ * 168, 103.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 151, 107.640625 * ᐃ, ᐃ * 150, ᐃ * 61.640625, ᐃ * 144, 39.640625 * ᐃ);
		Ⲇ.bezierCurveTo(135 * ᐃ, 1.640625 * ᐃ, 113 * ᐃ, ᐃ * 2.640625, 110 * ᐃ, 40.640625 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, 97.640625 * ᐃ, ᐃ * 98, 102.640625 * ᐃ, ᐃ * 83, 100.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, ᐃ * 98.640625, 67 * ᐃ, 77.640625 * ᐃ, ᐃ * 70, ᐃ * 55.640625);
		Ⲇ.bezierCurveTo(ᐃ * 75, ᐃ * 16.640625, 47 * ᐃ, ᐃ * 52.640625, ᐃ * 38, 67.640625 * ᐃ);
		Ⲇ.bezierCurveTo(10 * ᐃ, 113.640625 * ᐃ, ᐃ * ⵠΔⲆⵠᐃ, 181.640625 * ᐃ, 23 * ᐃ, ᐃ * 213.640625);
		Ⲇ.bezierCurveTo(ᐃ * 45, 266.640625 * ᐃ, ᐃ * 97, 277.640625 * ᐃ, ᐃ * 147, ᐃ * 269.640625);
		Ⲇ.bezierCurveTo(217 * ᐃ, 259.640625 * ᐃ, ᐃ * 236, ᐃ * 221.640625, 239 * ᐃ, 166.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 239, ᐃ * 113.640625, 223 * ᐃ, 90.640625 * ᐃ, 219 * ᐃ, 86.640625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ], ᐃᐃ[ⲆⲆⲆ], ᐃⵠⲆⲆⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 175, ᐃ * 220.640625, 29.546573405388315 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, 79 * ᐃ, ᐃ * 222.640625, ᐃ * 28.178005607210743);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		ΔⵠⲆ(Ⲇ, 175 * ᐃ, ᐃ * 214.640625, ᐃ * 27.892651361962706);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ⵠᐃⵠᐃⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, 79 * ᐃ, 215.640625 * ᐃ, ᐃ * 26.570660511172846);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], 4 * ᐃ);
		Ⲇ.translate(ΔΔⲆᐃ, -5);
		Ⲇ.globalAlpha = ΔΔⲆΔ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 218, 84.640625 * ᐃ);
		Ⲇ.bezierCurveTo(150 * ᐃ, ᐃ * 13.640625, 186 * ᐃ, ᐃ * 92.640625, 168 * ᐃ, ᐃ * 103.640625);
		Ⲇ.bezierCurveTo(151 * ᐃ, ᐃ * 107.640625, ᐃ * 150, 61.640625 * ᐃ, ᐃ * 144, 39.640625 * ᐃ);
		Ⲇ.bezierCurveTo(135 * ᐃ, ᐃ * 1.640625, ᐃ * 113, ᐃ * 2.640625, ᐃ * 110, 40.640625 * ᐃ);
		Ⲇ.bezierCurveTo(106 * ᐃ, ᐃ * 97.640625, 98 * ᐃ, ᐃ * 102.640625, ᐃ * 83, 100.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, ᐃ * 98.640625, 67 * ᐃ, 77.640625 * ᐃ, 70 * ᐃ, ᐃ * 55.640625);
		Ⲇ.bezierCurveTo(75 * ᐃ, ᐃ * 16.640625, 47 * ᐃ, ᐃ * 52.640625, ᐃ * 38, ᐃ * 67.640625);
		Ⲇ.bezierCurveTo(10 * ᐃ, 113.640625 * ᐃ, ᐃ * 10, ᐃ * 181.640625, 23 * ᐃ, 213.640625 * ᐃ);
		Ⲇ.bezierCurveTo(45 * ᐃ, 266.640625 * ᐃ, 97 * ᐃ, 277.640625 * ᐃ, ᐃ * 147, 269.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 217, 259.640625 * ᐃ, 236 * ᐃ, 221.640625 * ᐃ, 239 * ᐃ, 166.640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 239, ᐃ * 113.640625, 223 * ᐃ, 90.640625 * ᐃ, ᐃ * 219, 86.640625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃⵠᐃᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, 175 * ᐃ, 222.640625 * ᐃ, ᐃ * 26.546573405388315);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, 79 * ᐃ, ᐃ * 222.640625, ᐃ * 26.178005607210743);
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		ΔⵠⲆ(Ⲇ, 175 * ᐃ, 210.640625 * ᐃ, 26.892651361962706 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃᐃⲆᐃⵠ], ᐃ * 8);
		ΔⵠⲆ(Ⲇ, 79 * ᐃ, 210.640625 * ᐃ, ᐃ * 26.570660511172846);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆᐃᐃΔ], ᐃ * 8);
		return ΔΔ
	}

	function ᐃΔᐃᐃᐃᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 440 * ᐃ;
		ΔΔ.height = 388 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ᐃ * ⲆΔᐃΔ);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 201 * ᐃ, ᐃ * 170.41713528867922);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], 6 * ᐃ);
		Ⲇ.globalAlpha = ⲆΔⵠⲆ;
		Ⲇ.translate(-ⲆⵠΔᐃᐃ * ᐃ, ᐃ * -ⲆⲆᐃⵠ);
		ΔⵠⲆ(Ⲇ, ᐃ * 220, 201 * ᐃ, 170.41713528867922 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], 6 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 220, 201 * ᐃ, 130 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔΔⲆᐃ], ᐃᐃ[ⲆⲆⵠΔ], ᐃ * ᐃⲆᐃᐃΔ);
		ΔⵠⲆ(Ⲇ, ᐃ * 222, ᐃ * 199, 120.74767078498864 * ᐃ);
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[3], ᐃ * 40);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 200 * ᐃ, ᐃ * 95.44108130150245);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃⲆⲆΔ], ⵠᐃΔᐃⲆᐃΔ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠᐃΔᐃ;
		Ⲇ.translate(ⲆⵠΔᐃᐃ * ᐃ, ᐃ * 5);
		ΔⵠⲆ(Ⲇ, 63 * ᐃ, 136 * ᐃ, 49.193495504995376 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ], ᐃᐃ[ⵠⲆⲆᐃ], ⵠᐃⵠᐃⲆ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-5 * ᐃ, -ΔΔⲆᐃᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, 63 * ᐃ, ᐃ * 136, 49.193495504995376 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ⵠⲆΔΔ], ⲆⵠΔΔⲆ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 63, ᐃ * 137, 25.632011235952593 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[2], 4 * ᐃ);
		return ΔΔ
	}

	function ᐃⵠΔⲆΔⵠⵠᐃⵠ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (ᐃⲆ == ⵠⵠⲆⲆ) {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = 393 * ᐃ;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 164.23297119140625, ᐃ * 72.80398559570312);
			Ⲇ.bezierCurveTo(ᐃ * 289.23297119140625, 41.803985595703125 * ᐃ, 413.23297119140625 * ᐃ, 86.80398559570312 * ᐃ, 441.23297119140625 * ᐃ, ᐃ * 105.80398559570312);
			Ⲇ.bezierCurveTo(513.2329711914062 * ᐃ, 149.80398559570312 * ᐃ, ᐃ * 475.23297119140625, 224.80398559570312 * ᐃ, 451.23297119140625 * ᐃ, 258.8039855957031 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 410.23297119140625, ᐃ * 315.8039855957031, 380.23297119140625 * ᐃ, 314.8039855957031 * ᐃ, 289.23297119140625 * ᐃ, 320.8039855957031 * ᐃ);
			Ⲇ.bezierCurveTo(160.23297119140625 * ᐃ, 329.8039855957031 * ᐃ, ᐃ * 102.23297119140625, 312.8039855957031 * ᐃ, ᐃ * 72.23297119140625, ᐃ * 258.8039855957031);
			Ⲇ.bezierCurveTo(32.23297119140625 * ᐃ, 156.80398559570312 * ᐃ, ᐃ * 93.23297119140625, ᐃ * 92.80398559570312, ᐃ * 164.23297119140625, 72.80398559570312 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ])
		} else if (ᐃⲆ == ΔΔᐃᐃ) {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = ᐃ * 470;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(238.23297119140625 * ᐃ, 34.622161865234375 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 423.23297119140625, ᐃ * 21.622161865234375, 474.23297119140625 * ᐃ, ᐃ * 96.62216186523438, 499.23297119140625 * ᐃ, ᐃ * 167.62216186523438);
			Ⲇ.bezierCurveTo(ᐃ * 536.2329711914062, ᐃ * 288.6221618652344, 487.23297119140625 * ᐃ, ᐃ * 367.6221618652344, ᐃ * 403.23297119140625, 412.6221618652344 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 287.23297119140625, 466.6221618652344 * ᐃ, ᐃ * 127.23297119140625, 424.6221618652344 * ᐃ, ᐃ * 50.23297119140625, ᐃ * 318.6221618652344);
			Ⲇ.bezierCurveTo(ᐃ * -.76702880859375, ᐃ * 239.62216186523438, 30.23297119140625 * ᐃ, 110.62216186523438 * ᐃ, 73.23297119140625 * ᐃ, ᐃ * 77.62216186523438);
			Ⲇ.bezierCurveTo(ᐃ * 128.23297119140625, 29.622161865234375 * ᐃ, 202.23297119140625 * ᐃ, 40.622161865234375 * ᐃ, 238.23297119140625 * ᐃ, 34.622161865234375 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ])
		} else {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = 470 * ᐃ;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 268.23297119140625, 23.349441528320312 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 424.23297119140625, -.6505584716796875 * ᐃ, 524.2329711914062 * ᐃ, ᐃ * 44.34944152832031, ᐃ * 519.2329711914062, 186.3494415283203 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 515.2329711914062, ᐃ * 341.3494415283203, ᐃ * 431.23297119140625, ᐃ * 409.3494415283203, ᐃ * 357.23297119140625, 442.3494415283203 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 278.23297119140625, ᐃ * 469.3494415283203, ᐃ * 144.23297119140625, ᐃ * 460.3494415283203, 51.23297119140625 * ᐃ, 348.3494415283203 * ᐃ);
			Ⲇ.bezierCurveTo(3.23297119140625 * ᐃ, ᐃ * 274.3494415283203, 45.23297119140625 * ᐃ, 87.34944152832031 * ᐃ, ᐃ * 268.23297119140625, 23.349441528320312 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ])
		}
		return ΔΔ
	}

	function ΔⲆᐃᐃⵠⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 104 * ᐃ;
		ΔΔ.height = 117 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 4, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 20, 99.5 * ᐃ, ΔⲆΔᐃ * ᐃ, ᐃ * 99.5, ᐃ * 36, 109 * ᐃ);
		Ⲇ.bezierCurveTo(67 * ᐃ, ᐃ * 92, ᐃ * 67, 92 * ᐃ, 98 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, 27 * ᐃ, 91 * ᐃ, ᐃ * 27, ᐃ * 91, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 72.5, ᐃ * 16, 72.5 * ᐃ, ⵠⲆⵠⵠΔ * ᐃ, 54 * ᐃ, 4 * ᐃ);
		Ⲇ.bezierCurveTo(33.5 * ᐃ, ᐃ * 10, 33.5 * ᐃ, ᐃ * 10, 13 * ᐃ, ᐃ * ᐃⲆⵠᐃⲆᐃⵠ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 6, ᐃ * 76);
		Ⲇ.bezierCurveTo(13.5 * ᐃ, ᐃ * 51.5, ᐃ * 13.5, 51.5 * ᐃ, 21 * ᐃ, ᐃ * 27);
		Ⲇ.bezierCurveTo(37.5 * ᐃ, 17 * ᐃ, ᐃ * 37.5, ΔΔΔⲆⲆΔᐃ * ᐃ, ᐃ * 54, ᐃ * ᐃⲆⲆΔᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.5, 12.5 * ᐃ, ᐃ * 33.5, ᐃ * 12.5, ᐃᐃᐃΔᐃⲆΔ * ᐃ, ᐃ * 18);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(24 * ᐃ, 62 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 28.5, 53 * ᐃ, 28.5 * ᐃ, ᐃ * 53, ᐃ * 33, 44 * ᐃ);
		Ⲇ.bezierCurveTo(41.5 * ᐃ, ᐃ * 41, 41.5 * ᐃ, ᐃ * 41, 50 * ᐃ, 38 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 52.5, 35 * ᐃ, ᐃ * 52.5, 35 * ᐃ, ᐃ * 55, ᐃ * 32);
		Ⲇ.bezierCurveTo(ᐃ * 52, ᐃ * 30, 52 * ᐃ, ᐃ * 30, 49 * ᐃ, 28 * ᐃ);
		Ⲇ.bezierCurveTo(38 * ᐃ, 31.5 * ᐃ, ᐃ * 38, 31.5 * ᐃ, 27 * ᐃ, 35 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 36, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 66, 90.5 * ᐃ, 66 * ᐃ, 90.5 * ᐃ, ᐃ * 96, 74 * ᐃ);
		Ⲇ.bezierCurveTo(93 * ᐃ, ᐃ * 52.5, 93 * ᐃ, 52.5 * ᐃ, 90 * ᐃ, 31 * ᐃ);
		Ⲇ.bezierCurveTo(87 * ᐃ, 48 * ᐃ, ᐃ * 87, ᐃ * 48, 84 * ᐃ, 65 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔⲆᐃ, ᐃ * 89);
		Ⲇ.bezierCurveTo(ΔΔⵠⲆΔ * ᐃ, ᐃ * ⵠΔⵠⲆⲆ, ᐃ * 34, ᐃ * 110, ᐃ * 35, 111 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67, ᐃ * 93, ᐃ * 67, ᐃ * 93, 99 * ᐃ, 75 * ᐃ);
		Ⲇ.bezierCurveTo(100 * ᐃ, ᐃ * 78.5, ᐃ * ᐃⵠΔⲆⲆ, ᐃ * 78.5, 101 * ᐃ, 82 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68, 99 * ᐃ, ᐃ * 68, ᐃ * 99, 35 * ᐃ, 116 * ᐃ);
		Ⲇ.bezierCurveTo(18 * ᐃ, 106.5 * ᐃ, ⵠᐃⵠⵠΔⵠⲆ * ᐃ, ᐃ * 106.5, ᐃ * 1, ᐃ * 97);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(66.5 * ᐃ, ᐃ * 91.5, 66.5 * ᐃ, ᐃ * 91.5, ᐃ * 97, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, ᐃ * 52, 94.5 * ᐃ, 52 * ᐃ, ᐃ * 92, 28 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 73, ᐃ * 15.5, 73 * ᐃ, ᐃ * 15.5, 54 * ᐃ, ᐃ * 3);
		Ⲇ.bezierCurveTo(33 * ᐃ, ᐃ * 9.5, ᐃ * 33, ᐃ * 9.5, ᐃ * ⲆⵠⵠⵠⲆᐃⵠ, ᐃᐃᐃⲆⲆ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 8, 53 * ᐃ, 8 * ᐃ, ᐃ * 53, ᐃ * 4, ᐃ * 90);
		Ⲇ.bezierCurveTo(18.5 * ᐃ, ᐃ * 99, 18.5 * ᐃ, ᐃ * 99, ᐃ * 33, ᐃ * 108);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[ⲆⵠⲆΔⲆ], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 22, 71 * ᐃ);
		Ⲇ.bezierCurveTo(30 * ᐃ, ᐃ * 76.5, ᐃ * 30, 76.5 * ᐃ, ᐃ * 38, 82 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53, 72 * ᐃ, ᐃ * 53, 72 * ᐃ, 68 * ᐃ, ᐃ * 62);
		Ⲇ.bezierCurveTo(68 * ᐃ, 52 * ᐃ, 68 * ᐃ, ᐃ * 52, ᐃ * 68, 42 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59.5, ᐃ * 35.5, 59.5 * ᐃ, 35.5 * ᐃ, 51 * ᐃ, 29 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39.5, 32 * ᐃ, ᐃ * 39.5, ᐃ * 32, 28 * ᐃ, ᐃ * 35);
		Ⲇ.bezierCurveTo(25 * ᐃ, 52 * ᐃ, ᐃ * 25, 52 * ᐃ, ᐃ * 22, 69 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * ΔⲆⵠΔΔ, 89 * ᐃ);
		Ⲇ.bezierCurveTo(20 * ᐃ, 73 * ᐃ, 12.5 * ᐃ, 80.5 * ᐃ, ⵠᐃⲆΔ * ᐃ, ᐃ * 72);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[4], ᐃ * ⲆᐃΔᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(35 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 36, 92.5 * ᐃ, ᐃ * 36, 92.5 * ᐃ, ᐃ * 37, ᐃ * 83);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠⵠⲆᐃⲆ, ᐃᐃ[ⲆⵠⲆⲆ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 68, ᐃ * 62);
		Ⲇ.bezierCurveTo(ᐃ * 81, 67.5 * ᐃ, 81 * ᐃ, 67.5 * ᐃ, 94 * ᐃ, ᐃ * 73);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃⵠᐃᐃ], ᐃ * ΔⲆⵠⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(70 * ᐃ, 41 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, 35.5 * ᐃ, 80 * ᐃ, 35.5 * ᐃ, 90 * ᐃ, ᐃ * 30);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔΔᐃ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(28 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(21.5 * ᐃ, ᐃ * 26.5, ᐃ * 21.5, ᐃ * 26.5, ᐃ * 15, ᐃ * ᐃᐃᐃⲆ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[4], ᐃ * ⵠⵠⲆΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(51 * ᐃ, ᐃ * 28);
		Ⲇ.bezierCurveTo(ᐃ * 53, ᐃ * 17, 53 * ᐃ, ᐃ * 17, ᐃ * 55, 6 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆⲆⲆⵠᐃ], ᐃ * 6);
		return ΔΔ
	}

	function ⵠΔⲆᐃΔΔⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 450 * ᐃ;
		ΔΔ.height = 790 * ᐃ;
		Ⲇ.translate(5 * ᐃ, 5 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? ⵠⵠⲆⲆ : ΔΔⲆᐃ;
		ΔⵠⲆ(Ⲇ, 178.5 * ᐃ, 172.828125 * ᐃ, ᐃ * 150);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⵠᐃⵠ], 65 * ᐃ);
		ΔⵠⲆ(Ⲇ, 178.5 * ᐃ, ᐃ * 172.828125, 150 * ᐃ);
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[ⵠⵠⲆⲆ], ᐃ * 55);
		Ⲇ.closePath();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 177, ᐃ * 512.328125);
		ᐃΔⵠ(Ⲇ, -25 * ᐃ, -202.5 * ᐃ, 65 * ᐃ, ᐃ * 405, ᐃ * 25);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.save();
		Ⲇ.translate(136 * ᐃ, 581.828125 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -39, ᐃ * -23, 78 * ᐃ, ᐃ * 46, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 135.5, ᐃ * 663.828125);
		ᐃΔⵠ(Ⲇ, -39.5 * ᐃ, -22 * ᐃ, ᐃ * 79, 44 * ᐃ, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(114 * ᐃ, ᐃ * 594.828125);
		Ⲇ.bezierCurveTo(ᐃ * 175, ᐃ * 596.828125, ᐃ * 163, 596.828125 * ᐃ, 172 * ᐃ, ᐃ * 594.828125);
		Ⲇ.bezierCurveTo(171.5 * ᐃ, 633.828125 * ᐃ, 171.5 * ᐃ, ᐃ * 633.828125, ᐃ * 171, ᐃ * 672.828125);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 673.828125, ᐃ * 140.5, 673.328125 * ᐃ, ᐃ * 110, 673.828125 * ᐃ);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, 661.828125 * ᐃ, ᐃ * 110.5, ᐃ * 661.828125, 111 * ᐃ, 649.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 157, 633.828125 * ᐃ, 134 * ᐃ, ᐃ * 607.828125, ᐃ * 114, ᐃ * 594.828125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃΔⵠⵠ, ᐃ * ᐃⵠⲆⲆΔ);
		Ⲇ.moveTo(ᐃ * 140, ᐃ * 294.828125);
		Ⲇ.bezierCurveTo(ᐃ * 212, ᐃ * 295.828125, 176.5 * ᐃ, 295.328125 * ᐃ, 213 * ᐃ, 295.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201.5, ᐃ * 325.328125, 201.5 * ᐃ, ᐃ * 325.328125, 190 * ᐃ, 354.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 175.5, ᐃ * 355.828125, 175.5 * ᐃ, ᐃ * 355.828125, ᐃ * 161, 356.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154.5, 328.828125 * ᐃ, 154.5 * ᐃ, ᐃ * 328.828125, ᐃ * 148, 300.828125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(3, -ⲆᐃᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(159 * ᐃ, 679.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 180, ᐃ * 665.828125, 155 * ᐃ, ᐃ * 675.828125, 151 * ᐃ, ᐃ * 671.828125);
		Ⲇ.bezierCurveTo(154.5 * ᐃ, ᐃ * 685.328125, 154.5 * ᐃ, 685.328125 * ᐃ, ᐃ * 158, 698.828125 * ᐃ);
		Ⲇ.bezierCurveTo(171 * ᐃ, 699.828125 * ᐃ, ᐃ * 171, 699.828125 * ᐃ, ᐃ * 184, ᐃ * 700.828125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		Ⲇ.save();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(157 * ᐃ, ᐃ * 548.828125);
		Ⲇ.bezierCurveTo(157 * ᐃ, 561.828125 * ᐃ, ᐃ * 157, ᐃ * 561.828125, 157 * ᐃ, ᐃ * 574.828125);
		Ⲇ.bezierCurveTo(132.5 * ᐃ, 580.828125 * ᐃ, ᐃ * 132.5, 580.828125 * ᐃ, ᐃ * 108, ᐃ * 586.828125);
		Ⲇ.bezierCurveTo(ᐃ * 112, 599.828125 * ᐃ, 111 * ᐃ, 593.828125 * ᐃ, 112 * ᐃ, 599.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159, 603.828125 * ᐃ, ᐃ * 126.5, 601.328125 * ᐃ, ᐃ * 141, 602.828125 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 641.828125, ᐃ * 143.5, ᐃ * 623.828125, ᐃ * 146, 644.828125 * ᐃ);
		Ⲇ.bezierCurveTo(129.5 * ᐃ, ᐃ * 645.328125, ᐃ * 129.5, ᐃ * 645.328125, 113 * ᐃ, 645.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107.5, 652.828125 * ᐃ, 107.5 * ᐃ, ᐃ * 652.828125, 102 * ᐃ, ᐃ * 659.828125);
		Ⲇ.bezierCurveTo(104 * ᐃ, ᐃ * 669.328125, 104 * ᐃ, 669.328125 * ᐃ, ᐃ * 106, 678.828125 * ᐃ);
		Ⲇ.bezierCurveTo(145 * ᐃ, 679.328125 * ᐃ, 145 * ᐃ, ᐃ * 679.328125, ᐃ * 184, 679.828125 * ᐃ);
		Ⲇ.bezierCurveTo(185 * ᐃ, ᐃ * 615.828125, ᐃ * 185, 615.828125 * ᐃ, ᐃ * 186, 551.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 172.5, 551.328125 * ᐃ, 172.5 * ᐃ, ᐃ * 551.328125, ᐃ * 159, 550.828125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⲆⲆ], ᐃ * ᐃᐃΔⵠⵠᐃᐃ);
		Ⲇ.restore();
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(15 * ᐃ, 35 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 178.5, 172.828125 * ᐃ, 150 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], 95 * ᐃ);
		ΔⵠⲆ(Ⲇ, 178.5 * ᐃ, ᐃ * 172.828125, 150 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], 55 * ᐃ);
		Ⲇ.closePath();
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 177, 512.328125 * ᐃ);
		ᐃΔⵠ(Ⲇ, -25 * ᐃ, ᐃ * -202.5, ᐃ * 65, ᐃ * 405, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ᐃⲆⵠᐃ], ᐃ * 20);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 136, 581.828125 * ᐃ);
		ᐃΔⵠ(Ⲇ, -39 * ᐃ, -23 * ᐃ, ᐃ * 78, 46 * ᐃ, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * 20);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 135.5, 663.828125 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -39.5, ᐃ * -22, ᐃ * 79, 44 * ᐃ, 25 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⲆⲆΔ], ᐃ * ΔⲆΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(114 * ᐃ, ᐃ * 594.828125);
		Ⲇ.bezierCurveTo(175 * ᐃ, 596.828125 * ᐃ, ᐃ * 163, ᐃ * 596.828125, ᐃ * 172, 594.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 171.5, 633.828125 * ᐃ, 171.5 * ᐃ, ᐃ * 633.828125, 171 * ᐃ, 672.828125 * ᐃ);
		Ⲇ.bezierCurveTo(110 * ᐃ, 673.828125 * ᐃ, 140.5 * ᐃ, ᐃ * 673.328125, 110 * ᐃ, 673.828125 * ᐃ);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 661.828125, 110.5 * ᐃ, ᐃ * 661.828125, 111 * ᐃ, ᐃ * 649.828125);
		Ⲇ.bezierCurveTo(ᐃ * 157, 633.828125 * ᐃ, 134 * ᐃ, ᐃ * 607.828125, ᐃ * 114, 594.828125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(0, ᐃᐃⲆᐃΔ * ᐃ);
		Ⲇ.moveTo(ᐃ * 123, 294.828125 * ᐃ);
		Ⲇ.bezierCurveTo(212 * ᐃ, ᐃ * 295.828125, 190.5 * ᐃ, 295.328125 * ᐃ, 250 * ᐃ, 295.828125 * ᐃ);
		Ⲇ.bezierCurveTo(231.5 * ᐃ, ᐃ * 325.328125, 231.5 * ᐃ, 325.328125 * ᐃ, ᐃ * 220, 354.828125 * ᐃ);
		Ⲇ.bezierCurveTo(175.5 * ᐃ, ᐃ * 355.828125, ᐃ * 175.5, ᐃ * 355.828125, 140 * ᐃ, ᐃ * 356.828125);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, ᐃ * 328.828125, 123.5 * ᐃ, 328.828125 * ᐃ, 123 * ᐃ, ᐃ * 294.828125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ]);
		Ⲇ.translate(0, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(159 * ᐃ, 679.828125 * ᐃ);
		Ⲇ.bezierCurveTo(180 * ᐃ, 665.828125 * ᐃ, ᐃ * 155, 675.828125 * ᐃ, ᐃ * 151, ᐃ * 671.828125);
		Ⲇ.bezierCurveTo(ᐃ * 154.5, 685.328125 * ᐃ, ᐃ * 154.5, ᐃ * 685.328125, 158 * ᐃ, ᐃ * 698.828125);
		Ⲇ.bezierCurveTo(ᐃ * 171, ᐃ * 699.828125, ᐃ * 171, 699.828125 * ᐃ, ᐃ * 184, ᐃ * 700.828125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.save();
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157, ᐃ * 548.828125);
		Ⲇ.bezierCurveTo(157 * ᐃ, 561.828125 * ᐃ, ᐃ * 157, 561.828125 * ᐃ, ᐃ * 157, ᐃ * 574.828125);
		Ⲇ.bezierCurveTo(ᐃ * 132.5, 580.828125 * ᐃ, ᐃ * 132.5, ᐃ * 580.828125, ᐃ * 108, ᐃ * 586.828125);
		Ⲇ.bezierCurveTo(112 * ᐃ, 599.828125 * ᐃ, 111 * ᐃ, ᐃ * 593.828125, 112 * ᐃ, ᐃ * 599.828125);
		Ⲇ.bezierCurveTo(159 * ᐃ, ᐃ * 603.828125, ᐃ * 126.5, 601.328125 * ᐃ, ᐃ * 141, ᐃ * 602.828125);
		Ⲇ.bezierCurveTo(145 * ᐃ, ᐃ * 641.828125, 143.5 * ᐃ, 623.828125 * ᐃ, 146 * ᐃ, ᐃ * 644.828125);
		Ⲇ.bezierCurveTo(ᐃ * 129.5, ᐃ * 645.328125, 129.5 * ᐃ, 645.328125 * ᐃ, 113 * ᐃ, ᐃ * 645.828125);
		Ⲇ.bezierCurveTo(ᐃ * 107.5, 652.828125 * ᐃ, ᐃ * 107.5, ᐃ * 652.828125, 102 * ᐃ, ᐃ * 659.828125);
		Ⲇ.bezierCurveTo(ᐃ * 104, 669.328125 * ᐃ, ᐃ * 104, ᐃ * 669.328125, 106 * ᐃ, 678.828125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 145, 679.328125 * ᐃ, 145 * ᐃ, 679.328125 * ᐃ, 184 * ᐃ, 679.828125 * ᐃ);
		Ⲇ.bezierCurveTo(185 * ᐃ, 615.828125 * ᐃ, 185 * ᐃ, ᐃ * 615.828125, ᐃ * 186, 551.828125 * ᐃ);
		Ⲇ.bezierCurveTo(172.5 * ᐃ, 551.328125 * ᐃ, 172.5 * ᐃ, ᐃ * 551.328125, ᐃ * 159, ᐃ * 550.828125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[1], ᐃ * 7);
		Ⲇ.restore();
		return ΔΔ
	}

	function ⲆⲆᐃᐃⵠᐃΔⵠΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 65;
		ΔΔ.height = 131 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(3, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(21.25 * ᐃ, 88.9375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 19.25, 57.9375 * ᐃ, 19.25 * ᐃ, 57.9375 * ᐃ, ᐃ * 17.25, 26.9375 * ᐃ);
		Ⲇ.bezierCurveTo(24.25 * ᐃ, 20.9375 * ᐃ, 24.25 * ᐃ, ᐃ * 20.9375, 31.25 * ᐃ, ᐃ * 14.9375);
		Ⲇ.bezierCurveTo(32.75 * ᐃ, 54.4375 * ᐃ, ᐃ * 32.75, ᐃ * 54.4375, 34.25 * ᐃ, ᐃ * 93.9375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 30.25, ᐃ * 5.9375);
		Ⲇ.bezierCurveTo(39.25 * ᐃ, ᐃ * 14.9375, ᐃ * 39.25, 14.9375 * ᐃ, 48.25 * ᐃ, 23.9375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 44.75, ᐃ * 56.4375, 44.75 * ᐃ, ᐃ * 56.4375, ᐃ * 41.25, ᐃ * 88.9375);
		Ⲇ.bezierCurveTo(36.25 * ᐃ, ᐃ * 88.9375, 36.25 * ᐃ, ᐃ * 88.9375, 31.25 * ᐃ, ᐃ * 88.9375);
		Ⲇ.bezierCurveTo(30.75 * ᐃ, 47.9375 * ᐃ, ᐃ * 30.75, ᐃ * 47.9375, 30.25 * ᐃ, 6.9375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[Ⲇᐃⵠᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 7.25, 85.4375 * ᐃ);
		Ⲇ.bezierCurveTo(31.75 * ᐃ, ᐃ * 85.4375, 31.75 * ᐃ, ᐃ * 85.4375, ᐃ * 56.25, ᐃ * 85.4375);
		Ⲇ.bezierCurveTo(ᐃ * 51.25, 91.9375 * ᐃ, 51.25 * ᐃ, 91.9375 * ᐃ, ᐃ * 46.25, ᐃ * 98.4375);
		Ⲇ.bezierCurveTo(ᐃ * 30.25, ᐃ * 98.4375, 30.25 * ᐃ, ᐃ * 98.4375, 14.25 * ᐃ, 98.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠ], ᐃᐃ[0], ᐃ * ΔⲆΔⲆ);
		Ⲇ.save();
		Ⲇ.translate(31.25 * ᐃ, ᐃ * 108.9375);
		ᐃΔⵠ(Ⲇ, -6 * ᐃ, -14.5 * ᐃ, ᐃ * 12, 29 * ᐃ, ⵠΔᐃΔᐃ * ᐃ);
		Ⲇ.restore();
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		Ⲇ.translate(-3, 0);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 21.25, ᐃ * 88.9375);
		Ⲇ.bezierCurveTo(19.25 * ᐃ, 57.9375 * ᐃ, 19.25 * ᐃ, 57.9375 * ᐃ, ᐃ * 17.25, ᐃ * 26.9375);
		Ⲇ.bezierCurveTo(24.25 * ᐃ, ᐃ * 20.9375, ᐃ * 24.25, 20.9375 * ᐃ, 31.25 * ᐃ, ᐃ * 14.9375);
		Ⲇ.bezierCurveTo(ᐃ * 32.75, ᐃ * 54.4375, ᐃ * 32.75, ᐃ * 54.4375, 34.25 * ᐃ, 93.9375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(30.25 * ᐃ, 5.9375 * ᐃ);
		Ⲇ.bezierCurveTo(39.25 * ᐃ, ᐃ * 14.9375, 39.25 * ᐃ, ᐃ * 14.9375, ᐃ * 48.25, ᐃ * 23.9375);
		Ⲇ.bezierCurveTo(44.75 * ᐃ, ᐃ * 56.4375, ᐃ * 44.75, 56.4375 * ᐃ, 41.25 * ᐃ, 88.9375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 36.25, ᐃ * 88.9375, ᐃ * 36.25, ᐃ * 88.9375, 31.25 * ᐃ, ᐃ * 88.9375);
		Ⲇ.bezierCurveTo(ᐃ * 30.75, 47.9375 * ᐃ, 30.75 * ᐃ, 47.9375 * ᐃ, 30.25 * ᐃ, 6.9375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔΔ], ᐃᐃ[1], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(7.25 * ᐃ, ᐃ * 85.4375);
		Ⲇ.bezierCurveTo(ᐃ * 31.75, ᐃ * 85.4375, ᐃ * 31.75, ᐃ * 85.4375, ᐃ * 56.25, ᐃ * 85.4375);
		Ⲇ.bezierCurveTo(51.25 * ᐃ, 91.9375 * ᐃ, ᐃ * 51.25, 91.9375 * ᐃ, ᐃ * 46.25, 98.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30.25, ᐃ * 98.4375, 30.25 * ᐃ, ᐃ * 98.4375, ᐃ * 14.25, ᐃ * 98.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ], ᐃᐃ[5], ⲆⵠΔΔⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 31.25, 108.9375 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -ⲆΔᐃⵠᐃ, ᐃ * -14.5, 12 * ᐃ, ᐃ * 29, ⵠΔᐃΔⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆⲆᐃⵠ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31.25, 73.4375 * ᐃ);
		Ⲇ.bezierCurveTo(33.25 * ᐃ, 77.9375 * ᐃ, 33.25 * ᐃ, ᐃ * 77.9375, ᐃ * 35.25, 82.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.25, ᐃ * 87.4375, 33.25 * ᐃ, ᐃ * 87.4375, ᐃ * 31.25, 92.4375 * ᐃ);
		Ⲇ.bezierCurveTo(29.25 * ᐃ, ᐃ * 87.9375, 29.25 * ᐃ, 87.9375 * ᐃ, 27.25 * ᐃ, 83.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⵠⲆΔ], ᐃ * ⵠΔⵠᐃ);
		return ΔΔ
	}

	function ⲆⲆΔΔΔᐃⵠ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 137;
		ΔΔ.height = 129 * ᐃ;
		Ⲇ.globalAlpha = .4;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.000030517578125, 41.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(45.000030517578125 * ᐃ, ᐃ * 38.17047119140625, 49.000030517578125 * ᐃ, ᐃ * 37.17047119140625, 62.000030517578125 * ᐃ, ᐃ * 38.17047119140625);
		Ⲇ.bezierCurveTo(78.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, 78.00003051757812 * ᐃ, ᐃ * 38.17047119140625, 94.00003051757812 * ᐃ, 38.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(100.00003051757812 * ᐃ, ᐃ * 38.17047119140625, 102.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, ᐃ * 101.00003051757812, ᐃ * 47.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 101.00003051757812, ᐃ * 63.67047119140625, 101.00003051757812 * ᐃ, 63.67047119140625 * ᐃ, 101.00003051757812 * ᐃ, 80.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102.00003051757812, ᐃ * 84.17047119140625, ᐃ * 100.00003051757812, ᐃ * 86.17047119140625, ᐃ * 95.00003051757812, 88.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(84.00003051757812 * ᐃ, ᐃ * 94.17047119140625, 89.00003051757812 * ᐃ, 94.17047119140625 * ᐃ, ᐃ * 79.00003051757812, 94.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(59.500030517578125 * ᐃ, 94.17047119140625 * ᐃ, 59.500030517578125 * ᐃ, ᐃ * 94.17047119140625, ᐃ * 40.000030517578125, ᐃ * 94.17047119140625);
		Ⲇ.bezierCurveTo(33.000030517578125 * ᐃ, 94.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, 94.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, 86.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(34.000030517578125 * ᐃ, ᐃ * 69.67047119140625, ᐃ * 34.000030517578125, ᐃ * 69.67047119140625, 34.000030517578125 * ᐃ, ᐃ * 53.17047119140625);
		Ⲇ.bezierCurveTo(33.000030517578125 * ᐃ, 47.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, ᐃ * 47.17047119140625, 40.000030517578125 * ᐃ, 42.17047119140625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 40);
		Ⲇ.globalAlpha = .4;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.000030517578125, ᐃ * 41.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 45.000030517578125, 38.17047119140625 * ᐃ, 49.000030517578125 * ᐃ, 37.17047119140625 * ᐃ, 62.000030517578125 * ᐃ, 38.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 78.00003051757812, 38.17047119140625 * ᐃ, ᐃ * 78.00003051757812, ᐃ * 38.17047119140625, ᐃ * 94.00003051757812, ᐃ * 38.17047119140625);
		Ⲇ.bezierCurveTo(100.00003051757812 * ᐃ, ᐃ * 38.17047119140625, 102.00003051757812 * ᐃ, ᐃ * 38.17047119140625, ᐃ * 101.00003051757812, 47.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 101.00003051757812, 63.67047119140625 * ᐃ, 101.00003051757812 * ᐃ, ᐃ * 63.67047119140625, ᐃ * 101.00003051757812, 80.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102.00003051757812, ᐃ * 84.17047119140625, ᐃ * 100.00003051757812, 86.17047119140625 * ᐃ, ᐃ * 95.00003051757812, ᐃ * 88.17047119140625);
		Ⲇ.bezierCurveTo(84.00003051757812 * ᐃ, 94.17047119140625 * ᐃ, ᐃ * 89.00003051757812, 94.17047119140625 * ᐃ, ᐃ * 79.00003051757812, ᐃ * 94.17047119140625);
		Ⲇ.bezierCurveTo(59.500030517578125 * ᐃ, 94.17047119140625 * ᐃ, 59.500030517578125 * ᐃ, 94.17047119140625 * ᐃ, 40.000030517578125 * ᐃ, ᐃ * 94.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 33.000030517578125, ᐃ * 94.17047119140625, ᐃ * 34.000030517578125, 94.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, 86.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 34.000030517578125, ᐃ * 69.67047119140625, 34.000030517578125 * ᐃ, ᐃ * 69.67047119140625, ᐃ * 34.000030517578125, 53.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.000030517578125, ᐃ * 47.17047119140625, ᐃ * 34.000030517578125, 47.17047119140625 * ᐃ, ᐃ * 40.000030517578125, ᐃ * 42.17047119140625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[1], 20 * ᐃ);
		Ⲇ.globalAlpha = .8;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.000030517578125, 41.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(45.000030517578125 * ᐃ, 38.17047119140625 * ᐃ, 49.000030517578125 * ᐃ, 37.17047119140625 * ᐃ, ᐃ * 62.000030517578125, 38.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(78.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, 78.00003051757812 * ᐃ, ᐃ * 38.17047119140625, ᐃ * 94.00003051757812, ᐃ * 38.17047119140625);
		Ⲇ.bezierCurveTo(100.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, ᐃ * 102.00003051757812, ᐃ * 38.17047119140625, 101.00003051757812 * ᐃ, ᐃ * 47.17047119140625);
		Ⲇ.bezierCurveTo(101.00003051757812 * ᐃ, ᐃ * 63.67047119140625, ᐃ * 101.00003051757812, 63.67047119140625 * ᐃ, ᐃ * 101.00003051757812, ᐃ * 80.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 102.00003051757812, ᐃ * 84.17047119140625, 100.00003051757812 * ᐃ, ᐃ * 86.17047119140625, ᐃ * 95.00003051757812, ᐃ * 88.17047119140625);
		Ⲇ.bezierCurveTo(84.00003051757812 * ᐃ, ᐃ * 94.17047119140625, ᐃ * 89.00003051757812, ᐃ * 94.17047119140625, 79.00003051757812 * ᐃ, 94.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59.500030517578125, 94.17047119140625 * ᐃ, ᐃ * 59.500030517578125, 94.17047119140625 * ᐃ, 40.000030517578125 * ᐃ, ᐃ * 94.17047119140625);
		Ⲇ.bezierCurveTo(33.000030517578125 * ᐃ, ᐃ * 94.17047119140625, ᐃ * 34.000030517578125, 94.17047119140625 * ᐃ, ᐃ * 34.000030517578125, 86.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 34.000030517578125, ᐃ * 69.67047119140625, 34.000030517578125 * ᐃ, ᐃ * 69.67047119140625, ᐃ * 34.000030517578125, ᐃ * 53.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 33.000030517578125, ᐃ * 47.17047119140625, 34.000030517578125 * ᐃ, 47.17047119140625 * ᐃ, ᐃ * 40.000030517578125, 42.17047119140625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ], ᐃᐃ[1], ᐃ * ⲆⵠⲆΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(51.000030517578125 * ᐃ, 37.9886474609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51.000030517578125, 61.9886474609375 * ᐃ, ᐃ * 51.000030517578125, 61.9886474609375 * ᐃ, ᐃ * 51.000030517578125, 85.9886474609375 * ᐃ);
		Ⲇ.bezierCurveTo(75.50003051757812 * ᐃ, ᐃ * 85.9886474609375, 75.50003051757812 * ᐃ, 85.9886474609375 * ᐃ, ᐃ * 100.00003051757812, ᐃ * 85.9886474609375);
		Ⲇ.bezierCurveTo(ᐃ * 100.00003051757812, ᐃ * 61.9886474609375, 100.00003051757812 * ᐃ, 61.9886474609375 * ᐃ, 100.00003051757812 * ᐃ, 37.9886474609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76.00003051757812, 37.9886474609375 * ᐃ, ᐃ * 76.00003051757812, 37.9886474609375 * ᐃ, ᐃ * 52.000030517578125, 37.9886474609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⵠᐃ], Ⲇⵠⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(99.00003051757812 * ᐃ, ᐃ * 38.9886474609375);
		Ⲇ.bezierCurveTo(93.50003051757812 * ᐃ, ᐃ * 44.9886474609375, ᐃ * 93.50003051757812, ᐃ * 44.9886474609375, 88.00003051757812 * ᐃ, 50.9886474609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 88.00003051757812, 72.4886474609375 * ᐃ, 88.00003051757812 * ᐃ, ᐃ * 72.4886474609375, ᐃ * 88.00003051757812, ᐃ * 93.9886474609375);
		Ⲇ.bezierCurveTo(ᐃ * 94.00003051757812, 90.4886474609375 * ᐃ, 94.00003051757812 * ᐃ, ᐃ * 90.4886474609375, 100.00003051757812 * ᐃ, 86.9886474609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], ΔⲆΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 87.00003051757812, ᐃ * 49.625);
		Ⲇ.bezierCurveTo(ᐃ * 61.000030517578125, 49.625 * ᐃ, ᐃ * 61.000030517578125, 49.625 * ᐃ, 35.000030517578125 * ᐃ, ᐃ * 49.625);
		Ⲇ.bezierCurveTo(ᐃ * 35.000030517578125, ᐃ * 70.625, 35.000030517578125 * ᐃ, ᐃ * 70.625, ᐃ * 35.000030517578125, 91.625 * ᐃ);
		Ⲇ.bezierCurveTo(60.500030517578125 * ᐃ, ᐃ * 91.625, 60.500030517578125 * ᐃ, ᐃ * 91.625, 86.00003051757812 * ᐃ, 91.625 * ᐃ);
		Ⲇ.bezierCurveTo(86.50003051757812 * ᐃ, 70.625 * ᐃ, 86.50003051757812 * ᐃ, 70.625 * ᐃ, 87.00003051757812 * ᐃ, ᐃ * 49.625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠΔᐃⲆ], ᐃⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 47.000030517578125, 36.625 * ᐃ);
		Ⲇ.bezierCurveTo(73.00003051757812 * ᐃ, 37.125 * ᐃ, ᐃ * 73.00003051757812, ᐃ * 37.125, 99.00003051757812 * ᐃ, 37.625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 93.50003051757812, 44.125 * ᐃ, 93.50003051757812 * ᐃ, 44.125 * ᐃ, ᐃ * 88.00003051757812, ᐃ * 50.625);
		Ⲇ.bezierCurveTo(60.500030517578125 * ᐃ, ᐃ * 50.125, ᐃ * 60.500030517578125, ᐃ * 50.125, 33.000030517578125 * ᐃ, 49.625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[Δᐃᐃᐃ], ᐃ * ᐃⵠⲆⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 53.000030517578125, 52.625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 40.000030517578125, 54.625 * ᐃ, ᐃ * 39.000030517578125, 59.625 * ᐃ, ᐃ * 40.000030517578125, 67.625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45.000030517578125, 59.625 * ᐃ, ᐃ * 48.000030517578125, ᐃ * 58.625, ᐃ * 54.000030517578125, 53.625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.000030517578125, ᐃ * 41.17047119140625);
		Ⲇ.bezierCurveTo(45.000030517578125 * ᐃ, ᐃ * 38.17047119140625, 49.000030517578125 * ᐃ, 37.17047119140625 * ᐃ, ᐃ * 62.000030517578125, 38.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(78.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, ᐃ * 78.00003051757812, 38.17047119140625 * ᐃ, 94.00003051757812 * ᐃ, ᐃ * 38.17047119140625);
		Ⲇ.bezierCurveTo(100.00003051757812 * ᐃ, 38.17047119140625 * ᐃ, ᐃ * 102.00003051757812, ᐃ * 38.17047119140625, ᐃ * 101.00003051757812, 47.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(101.00003051757812 * ᐃ, 63.67047119140625 * ᐃ, ᐃ * 101.00003051757812, 63.67047119140625 * ᐃ, 101.00003051757812 * ᐃ, 80.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 102.00003051757812, ᐃ * 84.17047119140625, ᐃ * 100.00003051757812, ᐃ * 86.17047119140625, ᐃ * 95.00003051757812, 88.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 84.00003051757812, ᐃ * 94.17047119140625, 89.00003051757812 * ᐃ, ᐃ * 94.17047119140625, ᐃ * 79.00003051757812, ᐃ * 94.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 59.500030517578125, 94.17047119140625 * ᐃ, ᐃ * 59.500030517578125, 94.17047119140625 * ᐃ, ᐃ * 40.000030517578125, 94.17047119140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33.000030517578125, 94.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, 94.17047119140625 * ᐃ, 34.000030517578125 * ᐃ, ᐃ * 86.17047119140625);
		Ⲇ.bezierCurveTo(34.000030517578125 * ᐃ, 69.67047119140625 * ᐃ, 34.000030517578125 * ᐃ, 69.67047119140625 * ᐃ, 34.000030517578125 * ᐃ, ᐃ * 53.17047119140625);
		Ⲇ.bezierCurveTo(ᐃ * 33.000030517578125, 47.17047119140625 * ᐃ, ᐃ * 34.000030517578125, ᐃ * 47.17047119140625, ᐃ * 40.000030517578125, ᐃ * 42.17047119140625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔΔⲆⲆᐃ], 4 * ᐃ);
		return ΔΔ
	}

	function ᐃᐃΔᐃΔⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 105;
		ΔΔ.height = ᐃ * 144;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃⵠΔ;
		Ⲇ.translate(ᐃ * -5, 0 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(52.5 * ᐃ, 91.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -4.5 * ᐃ, ᐃ * -39, ᐃ * 9, ᐃ * 78, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[ΔΔᐃ], Ⲇᐃⵠⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 53, 36 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -29, -17.5 * ᐃ, 58 * ᐃ, ᐃ * 35, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * ᐃⵠⲆⲆⲆ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 53.5, ᐃ * 35.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -26.5, -ⵠⲆⲆᐃⲆ * ᐃ, ᐃ * 53, ᐃ * 30, ᐃ * ⲆΔⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[ΔΔᐃ], 4 * ᐃ);
		Ⲇ.translate(ᐃ * ᐃᐃⲆᐃⵠ, ᐃ * 0);
		Ⲇ.globalAlpha = ⲆᐃⲆⲆ;
		Ⲇ.save();
		Ⲇ.translate(52.5 * ᐃ, 91.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -4.5, -39 * ᐃ, ᐃ * ᐃⲆΔΔᐃ, ᐃ * 78, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⲆⲆᐃ], ⵠΔᐃⲆ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(53 * ᐃ, ᐃ * 36);
		ᐃΔⵠ(Ⲇ, -29 * ᐃ, ᐃ * -17.5, ᐃ * 58, 35 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ], ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃΔⲆΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 53.5, 35.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -26.5, ᐃ * -ⲆΔΔᐃᐃ, ᐃ * 53, 30 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃᐃΔ], ᐃᐃ[ᐃⵠΔⵠⵠ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 49, ᐃ * 60.5);
		Ⲇ.bezierCurveTo(44 * ᐃ, 56.5 * ᐃ, 44 * ᐃ, ᐃ * 56.5, ᐃ * 39, 52.5 * ᐃ);
		Ⲇ.bezierCurveTo(39 * ᐃ, 46.5 * ᐃ, ᐃ * 39, ᐃ * 46.5, 39 * ᐃ, ᐃ * 40.5);
		Ⲇ.bezierCurveTo(44 * ᐃ, 44 * ᐃ, 44 * ᐃ, 44 * ᐃ, ᐃ * 49, ᐃ * 47.5);
		Ⲇ.bezierCurveTo(ᐃ * 49, ᐃ * 54, ᐃ * 49, 54 * ᐃ, ᐃ * 49, 60.5 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[Ⲇᐃᐃᐃⵠ], ⵠⵠⲆⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 66, 40.5 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66, 46.5 * ᐃ, 66 * ᐃ, 46.5 * ᐃ, 66 * ᐃ, ᐃ * 52.5);
		Ⲇ.bezierCurveTo(60.5 * ᐃ, ᐃ * 56.5, 60.5 * ᐃ, ᐃ * 56.5, ᐃ * 55, ᐃ * 60.5);
		Ⲇ.bezierCurveTo(ᐃ * 56, 53 * ᐃ, 56 * ᐃ, ᐃ * 53, ᐃ * 57, 45.5 * ᐃ);
		Ⲇ.bezierCurveTo(61.5 * ᐃ, 43 * ᐃ, ᐃ * 61.5, 43 * ᐃ, 66 * ᐃ, ᐃ * 40.5);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[7], ᐃᐃ[6], ⲆⵠΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, 33.5 * ᐃ);
		Ⲇ.bezierCurveTo(55.5 * ᐃ, 41 * ᐃ, ᐃ * 55.5, ᐃ * 41, ᐃ * 59, ᐃ * 48.5);
		Ⲇ.bezierCurveTo(ᐃ * 56, 58 * ᐃ, 56 * ᐃ, ᐃ * 58, 53 * ᐃ, ᐃ * 67.5);
		Ⲇ.bezierCurveTo(49 * ᐃ, 58 * ᐃ, ᐃ * 49, ᐃ * 58, 45 * ᐃ, ᐃ * 48.5);
		Ⲇ.bezierCurveTo(ᐃ * 48.5, ᐃ * 41, 48.5 * ᐃ, ᐃ * 41, 52 * ᐃ, ᐃ * 33.5);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃᐃΔ], ᐃᐃ[ΔⵠΔᐃⵠᐃΔ], ᐃ * ⵠΔⵠⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 52, 47.5 * ᐃ);
		Ⲇ.bezierCurveTo(54.5 * ᐃ, 50.5 * ᐃ, ᐃ * 54.5, ᐃ * 50.5, 57 * ᐃ, 53.5 * ᐃ);
		Ⲇ.bezierCurveTo(55 * ᐃ, ᐃ * 60, 55 * ᐃ, 60 * ᐃ, 53 * ᐃ, 66.5 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50.5, ᐃ * 61, ᐃ * 50.5, 61 * ᐃ, 48 * ᐃ, 55.5 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 50, ᐃ * 52, 50 * ᐃ, 52 * ᐃ, 52 * ᐃ, 48.5 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆⵠΔΔ], ᐃᐃ[10], ᐃ * 3);
		return ΔΔ
	}

	function ᐃᐃᐃᐃΔᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 440 * ᐃ;
		ΔΔ.height = 388 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ⲆⲆᐃⵠ * ᐃ, ⵠⲆⲆᐃⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 201 * ᐃ, 170.41713528867922 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[ᐃΔⵠⵠ], 6 * ᐃ);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.translate(ᐃ * -5, -ΔⲆⲆⲆⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 201 * ᐃ, ᐃ * 170.41713528867922);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], ⵠⲆᐃⵠᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 201 * ᐃ, ᐃ * 130);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃΔⵠⲆ], ᐃᐃ[ᐃᐃⲆΔ], ⵠᐃΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(218 * ᐃ, ᐃ * 97);
		Ⲇ.bezierCurveTo(219 * ᐃ, ᐃ * 163, 201 * ᐃ, ᐃ * 176, ᐃ * 191, 175 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176, 177 * ᐃ, ᐃ * 168, 167 * ᐃ, 160 * ᐃ, ᐃ * 115);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ᐃⵠΔⵠⵠ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 224, 181 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 225, 138 * ᐃ, ᐃ * 246, 115 * ᐃ, 263 * ᐃ, ᐃ * 137);
		Ⲇ.bezierCurveTo(ᐃ * 282, ᐃ * 174, ᐃ * 279, ᐃ * 217, 265 * ᐃ, 243 * ᐃ);
		Ⲇ.bezierCurveTo(253 * ᐃ, 264 * ᐃ, 240 * ᐃ, ⲆⵠⲆΔᐃΔⲆ * ᐃ, 233 * ᐃ, 238 * ᐃ);
		Ⲇ.bezierCurveTo(221 * ᐃ, ᐃ * 212, ᐃ * 225, ᐃ * 198, ᐃ * 224, ᐃ * 184);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃⵠ], ᐃᐃ[ⵠᐃΔΔⲆ], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(169 * ᐃ, 289 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 234, 168 * ᐃ, 197 * ᐃ, 187 * ᐃ, ᐃ * 195);
		Ⲇ.bezierCurveTo(ᐃ * 219, 189 * ᐃ, 222 * ᐃ, 256 * ᐃ, 216 * ᐃ, 307 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃΔΔΔ], ᐃᐃ[6], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 161, 199 * ᐃ, 151 * ᐃ, ᐃ * 245, 138 * ᐃ, 266 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 120.5, ᐃ * 239.5, ᐃ * 120.5, 239.5 * ᐃ, 103 * ᐃ, 213 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ⵠⲆⵠⵠᐃ], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(283 * ᐃ, 135 * ᐃ);
		Ⲇ.bezierCurveTo(277 * ᐃ, ᐃ * 176, 298 * ᐃ, 194 * ᐃ, 315 * ᐃ, 205 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 323.5, 175 * ᐃ, 323.5 * ᐃ, ᐃ * 175, 332 * ᐃ, ᐃ * 145);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5], ᐃᐃ[ᐃⲆⵠⲆΔ], ᐃ * ⵠᐃⵠᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 318, ᐃ * 223);
		Ⲇ.bezierCurveTo(ᐃ * 290, 195 * ᐃ, ᐃ * 271, ᐃ * 256, ᐃ * 283, 281 * ᐃ);
		Ⲇ.bezierCurveTo(303.5 * ᐃ, ᐃ * 267, ᐃ * 303.5, ᐃ * 267, ᐃ * 324, 253 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆᐃⵠ], ᐃᐃ[ⲆᐃΔᐃᐃ], ᐃⵠⲆⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 142, 223 * ᐃ);
		Ⲇ.bezierCurveTo(128 * ᐃ, 213 * ᐃ, 123 * ᐃ, 214 * ᐃ, ᐃ * 111, 223 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10], ᐃᐃ[ⵠΔⲆⵠᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 251, 133 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 269, ᐃ * 188, ᐃ * 262, ᐃ * 229, ᐃ * 251, ᐃ * 253);
		Ⲇ.bezierCurveTo(288 * ᐃ, ᐃ * 224, 273 * ᐃ, ᐃ * 139, 252 * ᐃ, ᐃ * 133);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10], ᐃᐃ[ΔⲆⵠΔᐃ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(203 * ᐃ, ᐃ * 102);
		Ⲇ.bezierCurveTo(ᐃ * 204, ᐃ * 136, ᐃ * 200, ᐃ * 159, 189 * ᐃ, ᐃ * 174);
		Ⲇ.bezierCurveTo(223 * ᐃ, ᐃ * 164, ᐃ * 219, 87 * ᐃ, ᐃ * 205, ᐃ * 83);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃΔᐃ], ᐃᐃ[10], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(196 * ᐃ, ᐃ * 324);
		Ⲇ.bezierCurveTo(ᐃ * 209, 239 * ᐃ, ᐃ * 200, 219 * ᐃ, ᐃ * 192, 196 * ᐃ);
		Ⲇ.bezierCurveTo(229 * ᐃ, ᐃ * 216, 219 * ᐃ, 316 * ᐃ, ᐃ * 198, 325 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10], ᐃᐃ[ΔΔⵠᐃⵠ], ΔⲆΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 266, ᐃ * 166);
		Ⲇ.bezierCurveTo(249 * ᐃ, ᐃ * 154, 243 * ᐃ, 161 * ᐃ, 233 * ᐃ, 167 * ᐃ);
		Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[6], ᐃ * ᐃΔΔⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(269 * ᐃ, 192 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆᐃⲆΔⵠᐃⵠ, 183 * ᐃ, 241 * ᐃ, ᐃ * 186, 233 * ᐃ, 192 * ᐃ);
		Δⵠ(Ⲇ, ᐃⲆᐃΔΔ, ᐃᐃ[6], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(263 * ᐃ, ᐃ * 217);
		Ⲇ.bezierCurveTo(251 * ᐃ, 211 * ᐃ, 242 * ᐃ, 213 * ᐃ, 236 * ᐃ, 218 * ᐃ);
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[Ⲇᐃᐃᐃⵠ], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(204 * ᐃ, ᐃ * 141);
		Ⲇ.bezierCurveTo(191 * ᐃ, 131 * ᐃ, 187 * ᐃ, ᐃ * 133, 176 * ᐃ, ᐃ * 141);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(207 * ᐃ, 230 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 193, ᐃ * 222, ᐃ * 185, ᐃ * 224, 177 * ᐃ, 231 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆᐃΔᐃᐃ], ᐃ * ᐃⲆⵠⲆΔ);
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(210 * ᐃ, 258 * ᐃ);
		Ⲇ.bezierCurveTo(196 * ᐃ, ᐃ * 247, ᐃ * 191, 250 * ᐃ, ᐃ * 177, 259 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * ⵠⵠⲆΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 145, ᐃ * 196);
		Ⲇ.bezierCurveTo(130 * ᐃ, ᐃ * 186, 124 * ᐃ, 187 * ᐃ, ᐃ * 114, ᐃ * 195);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃ * ⲆΔᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 218, 97 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 219, ᐃ * 163, ᐃ * 201, 176 * ᐃ, ᐃ * 191, ᐃ * 175);
		Ⲇ.bezierCurveTo(ᐃ * 176, ᐃ * 177, 168 * ᐃ, ᐃ * 167, ᐃ * 160, 115 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 224, ᐃ * 181);
		Ⲇ.bezierCurveTo(ᐃ * 225, 138 * ᐃ, 246 * ᐃ, 115 * ᐃ, 263 * ᐃ, ᐃ * 137);
		Ⲇ.bezierCurveTo(ᐃ * 282, ᐃ * 174, ᐃ * 279, ᐃ * 217, 265 * ᐃ, 243 * ᐃ);
		Ⲇ.bezierCurveTo(253 * ᐃ, ᐃ * 264, ᐃ * 240, ᐃ * ⵠⵠᐃᐃᐃΔΔ, 233 * ᐃ, 238 * ᐃ);
		Ⲇ.bezierCurveTo(221 * ᐃ, ᐃ * 212, ᐃ * 225, ᐃ * 198, 224 * ᐃ, ᐃ * 184);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ⵠⲆᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 169, ᐃ * 289);
		Ⲇ.bezierCurveTo(161 * ᐃ, 234 * ᐃ, 168 * ᐃ, ᐃ * 197, ᐃ * 187, 195 * ᐃ);
		Ⲇ.bezierCurveTo(219 * ᐃ, ᐃ * 189, ᐃ * 222, ᐃ * ⵠⲆⲆᐃⵠΔⲆ, 216 * ᐃ, 307 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⲆΔΔᐃ, ᐃᐃ[6], ᐃ * ᐃⵠⵠΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 143, ᐃ * 146);
		Ⲇ.bezierCurveTo(ᐃ * 161, ᐃ * 199, 151 * ᐃ, 245 * ᐃ, 138 * ᐃ, ᐃ * 266);
		Ⲇ.bezierCurveTo(120.5 * ᐃ, 239.5 * ᐃ, 120.5 * ᐃ, 239.5 * ᐃ, ᐃ * 103, ᐃ * 213);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[6], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 283, ᐃ * 135);
		Ⲇ.bezierCurveTo(ᐃ * 277, ᐃ * 176, 298 * ᐃ, ᐃ * 194, ᐃ * 315, ᐃ * 205);
		Ⲇ.bezierCurveTo(323.5 * ᐃ, ᐃ * 175, 323.5 * ᐃ, 175 * ᐃ, ᐃ * 332, 145 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[ΔⲆⵠⲆⲆ], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(318 * ᐃ, ᐃ * 223);
		Ⲇ.bezierCurveTo(290 * ᐃ, 195 * ᐃ, ᐃ * 271, ᐃ * 256, 283 * ᐃ, ᐃ * 281);
		Ⲇ.bezierCurveTo(303.5 * ᐃ, ᐃ * 267, 303.5 * ᐃ, ᐃ * 267, ᐃ * 324, ᐃ * 253);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[6], ᐃⵠΔⵠⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 222 * ᐃ, ᐃ * 199, 120.74767078498864 * ᐃ);
		Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[ᐃⵠⵠⵠ], ᐃ * 40);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, ᐃ * 200, ᐃ * 95.44108130150245);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃⲆⲆΔⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, 201 * ᐃ, ᐃ * 85);
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃ * ᐃᐃⵠⵠⵠ);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 220 * ᐃ, ᐃ * 201, 82 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⵠ]);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃΔⲆⵠ;
		Ⲇ.translate(ᐃ * ΔᐃΔΔⲆ, ᐃ * 5);
		ΔⵠⲆ(Ⲇ, 63 * ᐃ, ᐃ * 136, ᐃ * 49.193495504995376);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆⵠⲆ], ᐃ * 4);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.translate(-5 * ᐃ, ᐃ * -5);
		ΔⵠⲆ(Ⲇ, ᐃ * 63, 136 * ᐃ, 49.193495504995376 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[2], ᐃ * ᐃⵠᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 63, ᐃ * 137, ᐃ * 25.632011235952593);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆᐃ], ᐃᐃ[ΔⲆⲆᐃ], ᐃ * ᐃⵠⲆⲆⲆ);
		return ΔΔ
	}

	function ΔΔΔΔΔΔⵠΔΔ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		if (ᐃⲆ == 0) {
			ΔΔ.width = 543 * ᐃ;
			ΔΔ.height = ᐃ * 393;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(109.5 * ᐃ, 154.046875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 143.5, ᐃ * 96.046875, ᐃ * 208.5, ᐃ * 92.046875, 288.5 * ᐃ, 97.046875 * ᐃ);
			Ⲇ.bezierCurveTo(357.5 * ᐃ, 104.046875 * ᐃ, 414.5 * ᐃ, ᐃ * 132.046875, 422.5 * ᐃ, ᐃ * 166.046875);
			Ⲇ.bezierCurveTo(ᐃ * 431.5, 192.046875 * ᐃ, ᐃ * 400.5, ᐃ * 261.046875, ᐃ * 332.5, 271.046875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 272.5, 279.046875 * ᐃ, 159.5 * ᐃ, 285.046875 * ᐃ, ᐃ * 126.5, ᐃ * 260.046875);
			Ⲇ.bezierCurveTo(ᐃ * 99.5, 238.046875 * ᐃ, 95.5 * ᐃ, 183.046875 * ᐃ, ᐃ * 109.5, 154.046875 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ])
		} else if (ΔᐃᐃⲆ == ᐃⲆ) {
			ΔΔ.width = ᐃ * 543;
			ΔΔ.height = ᐃ * 470;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(216.23297119140625 * ᐃ, 100.34944152832031 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 349.23297119140625, 110.34944152832031 * ᐃ, ᐃ * 422.23297119140625, ᐃ * 142.3494415283203, 434.23297119140625 * ᐃ, ᐃ * 194.3494415283203);
			Ⲇ.bezierCurveTo(451.23297119140625 * ᐃ, ᐃ * 268.3494415283203, ᐃ * 397.23297119140625, ᐃ * 367.3494415283203, 313.23297119140625 * ᐃ, 351.3494415283203 * ᐃ);
			Ⲇ.bezierCurveTo(148.23297119140625 * ᐃ, 330.3494415283203 * ᐃ, 106.23297119140625 * ᐃ, ᐃ * 319.3494415283203, ᐃ * 87.23297119140625, ᐃ * 248.3494415283203);
			Ⲇ.bezierCurveTo(ᐃ * 63.23297119140625, 164.3494415283203 * ᐃ, 102.23297119140625 * ᐃ, ᐃ * 90.34944152832031, 216.23297119140625 * ᐃ, 100.34944152832031 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[0])
		} else {
			ΔΔ.width = ᐃ * 543;
			ΔΔ.height = ᐃ * 470;
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(155.23297119140625 * ᐃ, 126.71307373046875 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 232.23297119140625, 76.71307373046875 * ᐃ, 340.23297119140625 * ᐃ, ᐃ * 67.71307373046875, ᐃ * 411.23297119140625, ᐃ * 106.71307373046875);
			Ⲇ.bezierCurveTo(458.23297119140625 * ᐃ, ᐃ * 131.71307373046875, ᐃ * 465.23297119140625, ᐃ * 280.71307373046875, ᐃ * 353.23297119140625, ᐃ * 363.71307373046875);
			Ⲇ.bezierCurveTo(299.23297119140625 * ᐃ, ᐃ * 404.71307373046875, ᐃ * 143.23297119140625, ᐃ * 415.71307373046875, ᐃ * 88.23297119140625, 327.71307373046875 * ᐃ);
			Ⲇ.bezierCurveTo(48.23297119140625 * ᐃ, ᐃ * 256.71307373046875, ᐃ * 93.23297119140625, 171.71307373046875 * ᐃ, 155.23297119140625 * ᐃ, 126.71307373046875 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ])
		}
		return ΔΔ
	}

	function ᐃⲆΔⵠⵠⵠⲆ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 202 * ᐃ;
		ΔΔ.height = ᐃ * 202;
		Ⲇ.translate(2 * ᐃ, ᐃ * 1);
		Ⲇ.globalAlpha = .3;
		ΔⵠⲆ(Ⲇ, ᐃ * 98, 99 * ᐃ, ᐃ * 100);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = .5;
		ΔⵠⲆ(Ⲇ, 98 * ᐃ, ᐃ * 99, ᐃ * 90);
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠΔ]);
		return ΔΔ
	}

	function ⵠⲆΔΔΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 400;
		ΔΔ.height = ᐃ * 400;
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.translate(ΔⲆΔᐃ * ᐃ, ᐃᐃⲆⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 36.5, ᐃ * 278.0625);
		Ⲇ.bezierCurveTo(67.5 * ᐃ, ᐃ * 316.0625, 134.5 * ᐃ, ᐃ * 334.0625, 199.5 * ᐃ, 319.0625 * ᐃ);
		Ⲇ.bezierCurveTo(254.5 * ᐃ, 304.0625 * ᐃ, ᐃ * 346.5, 270.0625 * ᐃ, 348.5 * ᐃ, 237.0625 * ᐃ);
		Ⲇ.bezierCurveTo(359.5 * ᐃ, ᐃ * 206.0625, ᐃ * 318.5, ᐃ * 129.0625, ᐃ * 262.5, 122.0625 * ᐃ);
		Ⲇ.bezierCurveTo(213.5 * ᐃ, 115.0625 * ᐃ, 166.5 * ᐃ, ᐃ * 133.0625, ᐃ * 104.5, ᐃ * 166.0625);
		Ⲇ.bezierCurveTo(ᐃ * 54.5, ᐃ * 194.0625, 23.5 * ᐃ, ᐃ * 241.0625, 36.5 * ᐃ, 277.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.translate(ᐃ * -20, ᐃ * -20);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36.5 * ᐃ, 278.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 67.5, 316.0625 * ᐃ, ᐃ * 134.5, ᐃ * 334.0625, ᐃ * 199.5, 319.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 254.5, 304.0625 * ᐃ, 346.5 * ᐃ, 270.0625 * ᐃ, 348.5 * ᐃ, 237.0625 * ᐃ);
		Ⲇ.bezierCurveTo(359.5 * ᐃ, ᐃ * 206.0625, ᐃ * 318.5, 129.0625 * ᐃ, ᐃ * 262.5, 122.0625 * ᐃ);
		Ⲇ.bezierCurveTo(213.5 * ᐃ, 115.0625 * ᐃ, ᐃ * 166.5, ᐃ * 133.0625, ᐃ * 104.5, 166.0625 * ᐃ);
		Ⲇ.bezierCurveTo(54.5 * ᐃ, 194.0625 * ᐃ, 23.5 * ᐃ, 241.0625 * ᐃ, ᐃ * 36.5, 277.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆⲆⵠΔ], 19 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, ᐃ * 124.0625);
		Ⲇ.bezierCurveTo(ᐃ * 242.5, ᐃ * 125.0625, 272.5 * ᐃ, 159.0625 * ᐃ, 283.5 * ᐃ, ᐃ * 184.0625);
		Ⲇ.bezierCurveTo(ᐃ * 277.5, ᐃ * 161.0625, ᐃ * 233.5, ᐃ * 128.0625, 219.5 * ᐃ, 122.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[2], ᐃ * 19);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157.5, 145.0625 * ᐃ);
		Ⲇ.bezierCurveTo(176.5 * ᐃ, 148.0625 * ᐃ, ᐃ * 205.5, ᐃ * 176.0625, ᐃ * 212.5, 197.0625 * ᐃ);
		Ⲇ.bezierCurveTo(205.5 * ᐃ, ᐃ * 178.0625, ᐃ * 177.5, 152.0625 * ᐃ, ᐃ * 156.5, ᐃ * 142.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ⵠⲆⵠᐃ], ᐃ * ΔⲆᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(103.5 * ᐃ, ᐃ * 169.0625);
		Ⲇ.bezierCurveTo(160.5 * ᐃ, 166.0625 * ᐃ, ᐃ * 228.5, ᐃ * 312.0625, ᐃ * 162.5, 323.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128.5, 330.0625 * ᐃ, ᐃ * 45.5, ᐃ * 312.0625, 34.5 * ᐃ, 268.0625 * ᐃ);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, 238.0625 * ᐃ, ᐃ * 44.5, 222.0625 * ᐃ, 52.5 * ᐃ, ᐃ * 211.0625);
		Ⲇ.bezierCurveTo(ᐃ * 82.5, 174.0625 * ᐃ, 104.5 * ᐃ, ᐃ * 166.0625, 119.5 * ᐃ, ᐃ * 172.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 19);
		ΔⵠⲆ(Ⲇ, 92.5 * ᐃ, ᐃ * 216.0625, 13.892443989449804 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, 68.5 * ᐃ, 227.0625 * ᐃ, 8.06225774829855 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 85.5, 240.0625 * ᐃ, ᐃ * 6.708203932499369);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, 147.5 * ᐃ, ᐃ * 294.0625, 17.46424919657298 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 166.5, ᐃ * 273.0625, 6.708203932499369 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 114.5, ᐃ * 294.0625, 12.36931687685298 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆΔⲆ]);
		ΔⵠⲆ(Ⲇ, 123.5 * ᐃ, ᐃ * 220.0625, ᐃ * 5.830951894845301);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, ᐃ * 114.5, 259.0625 * ᐃ, 4.123105625617661 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		ΔⵠⲆ(Ⲇ, 63.5 * ᐃ, ᐃ * 265.0625, ᐃ * 5.385164807134504);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠᐃⲆ]);
		ΔⵠⲆ(Ⲇ, 148.5 * ᐃ, ᐃ * 235.0625, ᐃ * 4.47213595499958);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(194.5 * ᐃ, ᐃ * 313.0625);
		Ⲇ.bezierCurveTo(ᐃ * 222.5, 306.0625 * ᐃ, 319.5 * ᐃ, ᐃ * 271.0625, 337.5 * ᐃ, 241.0625 * ᐃ);
		Ⲇ.bezierCurveTo(274.5 * ᐃ, 270.0625 * ᐃ, ᐃ * 216.5, ᐃ * 288.0625, ᐃ * 199.5, 287.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 198.5, ᐃ * 302.0625, ᐃ * 195.5, ᐃ * 311.0625, 193.5 * ᐃ, ᐃ * 312.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		return ΔΔ
	}

	function ΔΔΔᐃⵠⵠⵠ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 376 * ᐃ;
		ΔΔ.height = ᐃ * 371;
		Ⲇ.globalAlpha = .5;
		Ⲇ.translate(ⲆⵠΔᐃᐃ * ᐃ, ᐃ * ⵠⲆⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 191.633544921875, ᐃ * 123.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 215.633544921875, 85.98580932617188 * ᐃ, ᐃ * 187.633544921875, 71.98580932617188 * ᐃ, 202.633544921875 * ᐃ, ᐃ * 19.985809326171875);
		Ⲇ.bezierCurveTo(231.633544921875 * ᐃ, ᐃ * 68.98580932617188, ᐃ * 253.633544921875, 71.98580932617188 * ᐃ, 256.633544921875 * ᐃ, 93.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(306.633544921875 * ᐃ, ᐃ * 64.98580932617188, 319.633544921875 * ᐃ, ᐃ * 61.985809326171875, ᐃ * 350.633544921875, 58.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 280.633544921875, ᐃ * 86.98580932617188, ᐃ * 281.633544921875, ᐃ * 106.98580932617188, 268.633544921875 * ᐃ, ᐃ * 130.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 295.633544921875, 158.98580932617188 * ᐃ, 328.633544921875 * ᐃ, 155.98580932617188 * ᐃ, ᐃ * 353.633544921875, 90.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(371.633544921875 * ᐃ, ᐃ * 158.98580932617188, 337.633544921875 * ᐃ, ᐃ * 210.98580932617188, 286.633544921875 * ᐃ, 209.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(323.633544921875 * ᐃ, ᐃ * 230.98580932617188, ᐃ * 317.633544921875, ᐃ * 274.9858093261719, 356.633544921875 * ᐃ, ᐃ * 305.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 288.633544921875, 297.9858093261719 * ᐃ, 288.633544921875 * ᐃ, 265.9858093261719 * ᐃ, 275.633544921875 * ᐃ, 266.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(280.633544921875 * ᐃ, ᐃ * 294.9858093261719, ᐃ * 315.633544921875, ᐃ * 306.9858093261719, ᐃ * 336.633544921875, ᐃ * 316.9858093261719);
		Ⲇ.bezierCurveTo(295.633544921875 * ᐃ, 318.9858093261719 * ᐃ, ᐃ * 264.633544921875, 302.9858093261719 * ᐃ, ᐃ * 254.633544921875, ᐃ * 289.9858093261719);
		Ⲇ.bezierCurveTo(252.633544921875 * ᐃ, ᐃ * 301.9858093261719, 224.633544921875 * ᐃ, 315.9858093261719 * ᐃ, ᐃ * 201.633544921875, 356.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(195.633544921875 * ᐃ, ᐃ * 313.9858093261719, 195.633544921875 * ᐃ, ᐃ * 308.9858093261719, 196.633544921875 * ᐃ, ᐃ * 307.9858093261719);
		Ⲇ.bezierCurveTo(197.633544921875 * ᐃ, 289.9858093261719 * ᐃ, 207.633544921875 * ᐃ, 283.9858093261719 * ᐃ, 195.633544921875 * ᐃ, ᐃ * 258.9858093261719);
		Ⲇ.bezierCurveTo(182.633544921875 * ᐃ, ᐃ * 282.9858093261719, ᐃ * 190.633544921875, ᐃ * 287.9858093261719, 193.633544921875 * ᐃ, 297.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 195.633544921875, ᐃ * 306.9858093261719, ᐃ * 191.633544921875, 334.9858093261719 * ᐃ, 187.633544921875 * ᐃ, ᐃ * 354.9858093261719);
		Ⲇ.bezierCurveTo(165.633544921875 * ᐃ, 320.9858093261719 * ᐃ, ᐃ * 138.633544921875, 307.9858093261719 * ᐃ, ᐃ * 135.633544921875, 288.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(110.633544921875 * ᐃ, 318.9858093261719 * ᐃ, 68.633544921875 * ᐃ, ᐃ * 323.9858093261719, ᐃ * 49.633544921875, ᐃ * 320.9858093261719);
		Ⲇ.bezierCurveTo(88.633544921875 * ᐃ, 308.9858093261719 * ᐃ, ᐃ * 108.633544921875, ᐃ * 284.9858093261719, 118.633544921875 * ᐃ, ᐃ * 258.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 86.633544921875, 264.9858093261719 * ᐃ, ᐃ * 75.633544921875, ᐃ * 310.9858093261719, 19.633544921875 * ᐃ, 304.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(54.633544921875 * ᐃ, 276.9858093261719 * ᐃ, 59.633544921875 * ᐃ, ᐃ * 214.98580932617188, 105.633544921875 * ᐃ, ᐃ * 205.98580932617188);
		Ⲇ.bezierCurveTo(14.633544921875 * ᐃ, ᐃ * 201.98580932617188, ᐃ * 24.633544921875, ᐃ * 141.98580932617188, 25.633544921875 * ᐃ, ᐃ * 82.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 49.633544921875, 168.98580932617188 * ᐃ, 87.633544921875 * ᐃ, ᐃ * 141.98580932617188, 112.633544921875 * ᐃ, 123.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95.633544921875, 75.98580932617188 * ᐃ, 70.633544921875 * ᐃ, 68.98580932617188 * ᐃ, ᐃ * 35.633544921875, 50.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(70.633544921875 * ᐃ, ᐃ * 53.985809326171875, ᐃ * 102.633544921875, ᐃ * 65.98580932617188, 125.633544921875 * ᐃ, 84.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133.633544921875, 69.98580932617188 * ᐃ, ᐃ * 166.633544921875, ᐃ * 42.985809326171875, 176.633544921875 * ᐃ, ᐃ * 21.985809326171875);
		Ⲇ.bezierCurveTo(185.633544921875 * ᐃ, 49.985809326171875 * ᐃ, ᐃ * 168.633544921875, 95.98580932617188 * ᐃ, ᐃ * 191.633544921875, ᐃ * 121.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ⲆⲆⲆⵠᐃ, ᐃ * -ΔᐃΔΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 191.633544921875, 123.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 215.633544921875, 85.98580932617188 * ᐃ, 187.633544921875 * ᐃ, ᐃ * 71.98580932617188, 202.633544921875 * ᐃ, ᐃ * 19.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 231.633544921875, ᐃ * 68.98580932617188, 253.633544921875 * ᐃ, 71.98580932617188 * ᐃ, ᐃ * 256.633544921875, 93.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(306.633544921875 * ᐃ, 64.98580932617188 * ᐃ, ᐃ * 319.633544921875, 61.985809326171875 * ᐃ, 350.633544921875 * ᐃ, ᐃ * 58.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 280.633544921875, ᐃ * 86.98580932617188, ᐃ * 281.633544921875, 106.98580932617188 * ᐃ, ᐃ * 268.633544921875, 130.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 295.633544921875, ᐃ * 158.98580932617188, ᐃ * 328.633544921875, 155.98580932617188 * ᐃ, ᐃ * 353.633544921875, ᐃ * 90.98580932617188);
		Ⲇ.bezierCurveTo(371.633544921875 * ᐃ, 158.98580932617188 * ᐃ, 337.633544921875 * ᐃ, ᐃ * 210.98580932617188, ᐃ * 286.633544921875, 209.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(323.633544921875 * ᐃ, ᐃ * 230.98580932617188, ᐃ * 317.633544921875, 274.9858093261719 * ᐃ, ᐃ * 356.633544921875, ᐃ * 305.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 288.633544921875, 297.9858093261719 * ᐃ, ᐃ * 288.633544921875, ᐃ * 265.9858093261719, ᐃ * 275.633544921875, ᐃ * 266.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 280.633544921875, ᐃ * 294.9858093261719, 315.633544921875 * ᐃ, 306.9858093261719 * ᐃ, ᐃ * 336.633544921875, ᐃ * 316.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 295.633544921875, 318.9858093261719 * ᐃ, 264.633544921875 * ᐃ, ᐃ * 302.9858093261719, ᐃ * 254.633544921875, 289.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 252.633544921875, ᐃ * 301.9858093261719, 224.633544921875 * ᐃ, 315.9858093261719 * ᐃ, ᐃ * 201.633544921875, ᐃ * 356.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 195.633544921875, ᐃ * 313.9858093261719, ᐃ * 195.633544921875, 308.9858093261719 * ᐃ, ᐃ * 196.633544921875, ᐃ * 307.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 197.633544921875, ᐃ * 289.9858093261719, ᐃ * 207.633544921875, ᐃ * 283.9858093261719, 195.633544921875 * ᐃ, 258.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182.633544921875, ᐃ * 282.9858093261719, ᐃ * 190.633544921875, 287.9858093261719 * ᐃ, 193.633544921875 * ᐃ, ᐃ * 297.9858093261719);
		Ⲇ.bezierCurveTo(195.633544921875 * ᐃ, 306.9858093261719 * ᐃ, ᐃ * 191.633544921875, 334.9858093261719 * ᐃ, ᐃ * 187.633544921875, ᐃ * 354.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 165.633544921875, ᐃ * 320.9858093261719, ᐃ * 138.633544921875, 307.9858093261719 * ᐃ, ᐃ * 135.633544921875, ᐃ * 288.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 110.633544921875, ᐃ * 318.9858093261719, 68.633544921875 * ᐃ, ᐃ * 323.9858093261719, 49.633544921875 * ᐃ, ᐃ * 320.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 88.633544921875, ᐃ * 308.9858093261719, ᐃ * 108.633544921875, ᐃ * 284.9858093261719, ᐃ * 118.633544921875, 258.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 86.633544921875, ᐃ * 264.9858093261719, ᐃ * 75.633544921875, 310.9858093261719 * ᐃ, 19.633544921875 * ᐃ, ᐃ * 304.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 54.633544921875, 276.9858093261719 * ᐃ, ᐃ * 59.633544921875, 214.98580932617188 * ᐃ, 105.633544921875 * ᐃ, 205.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14.633544921875, 201.98580932617188 * ᐃ, 24.633544921875 * ᐃ, 141.98580932617188 * ᐃ, ᐃ * 25.633544921875, ᐃ * 82.98580932617188);
		Ⲇ.bezierCurveTo(49.633544921875 * ᐃ, 168.98580932617188 * ᐃ, ᐃ * 87.633544921875, ᐃ * 141.98580932617188, ᐃ * 112.633544921875, ᐃ * 123.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 95.633544921875, ᐃ * 75.98580932617188, 70.633544921875 * ᐃ, ᐃ * 68.98580932617188, ᐃ * 35.633544921875, ᐃ * 50.985809326171875);
		Ⲇ.bezierCurveTo(70.633544921875 * ᐃ, 53.985809326171875 * ᐃ, 102.633544921875 * ᐃ, 65.98580932617188 * ᐃ, ᐃ * 125.633544921875, 84.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133.633544921875, 69.98580932617188 * ᐃ, ᐃ * 166.633544921875, 42.985809326171875 * ᐃ, ᐃ * 176.633544921875, ᐃ * 21.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 185.633544921875, ᐃ * 49.985809326171875, 168.633544921875 * ᐃ, ᐃ * 95.98580932617188, ᐃ * 191.633544921875, ᐃ * 121.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * ⲆⵠᐃⲆⲆ);
		Ⲇ.translate(-ᐃᐃΔᐃ * ᐃ, ᐃ * ᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 270.633544921875, 88.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 296.633544921875, ᐃ * 65.98580932617188, ᐃ * 318.633544921875, 62.985809326171875 * ᐃ, ᐃ * 348.633544921875, 57.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 309.633544921875, ᐃ * 76.98580932617188, 291.633544921875 * ᐃ, 88.98580932617188 * ᐃ, 280.633544921875 * ᐃ, ᐃ * 99.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆΔᐃΔ], ᐃ * ⵠⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(275.633544921875 * ᐃ, ᐃ * 281.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 303.633544921875, 308.9858093261719 * ᐃ, 321.633544921875 * ᐃ, 308.9858093261719 * ᐃ, ᐃ * 335.633544921875, 315.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 305.633544921875, ᐃ * 320.9858093261719, 278.633544921875 * ᐃ, 307.9858093261719 * ᐃ, ᐃ * 264.633544921875, ᐃ * 293.9858093261719);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⲆΔⵠᐃ], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(124.633544921875 * ᐃ, ᐃ * 291.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 106.633544921875, ᐃ * 316.9858093261719, ᐃ * 72.633544921875, ᐃ * 325.9858093261719, 53.633544921875 * ᐃ, ᐃ * 319.9858093261719);
		Ⲇ.bezierCurveTo(83.633544921875 * ᐃ, 308.9858093261719 * ᐃ, 97.633544921875 * ᐃ, ᐃ * 298.9858093261719, ᐃ * 112.633544921875, 284.9858093261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃᐃⵠⵠ], ᐃⵠᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(113.633544921875 * ᐃ, ᐃ * 80.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 91.633544921875, ᐃ * 54.985809326171875, ᐃ * 72.633544921875, ᐃ * 56.985809326171875, ᐃ * 36.633544921875, 49.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(87.633544921875 * ᐃ, 72.98580932617188 * ᐃ, 95.633544921875 * ᐃ, 82.98580932617188 * ᐃ, 106.633544921875 * ᐃ, 96.98580932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃᐃⵠⵠ], ⲆⲆⲆⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 202.633544921875, ᐃ * 20.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 219.633544921875, 49.985809326171875 * ᐃ, 259.633544921875 * ᐃ, ᐃ * 80.98580932617188, ᐃ * 255.633544921875, 92.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(268.633544921875 * ᐃ, ᐃ * 86.98580932617188, 265.633544921875 * ᐃ, ᐃ * 87.98580932617188, ᐃ * 275.633544921875, 82.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(283.633544921875 * ᐃ, 87.98580932617188 * ᐃ, ᐃ * 283.633544921875, 87.98580932617188 * ᐃ, ᐃ * 291.633544921875, 92.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 269.633544921875, 116.98580932617188 * ᐃ, ᐃ * 270.633544921875, 124.98580932617188 * ᐃ, 267.633544921875 * ᐃ, ᐃ * 130.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 307.633544921875, 168.98580932617188 * ᐃ, 339.633544921875 * ᐃ, ᐃ * 132.98580932617188, ᐃ * 352.633544921875, 93.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 366.633544921875, 145.98580932617188 * ᐃ, ᐃ * 345.633544921875, ᐃ * 207.98580932617188, ᐃ * 286.633544921875, 208.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 315.633544921875, ᐃ * 223.98580932617188, ᐃ * 327.633544921875, ᐃ * 287.9858093261719, 355.633544921875 * ᐃ, ᐃ * 305.9858093261719);
		Ⲇ.bezierCurveTo(293.633544921875 * ᐃ, 298.9858093261719 * ᐃ, 293.633544921875 * ᐃ, 275.9858093261719 * ᐃ, ᐃ * 276.633544921875, ᐃ * 266.9858093261719);
		Ⲇ.bezierCurveTo(274.633544921875 * ᐃ, 282.9858093261719 * ᐃ, 287.633544921875 * ᐃ, 288.9858093261719 * ᐃ, 295.633544921875 * ᐃ, 296.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 287.133544921875, ᐃ * 302.4858093261719, ᐃ * 287.133544921875, 302.4858093261719 * ᐃ, 278.633544921875 * ᐃ, ᐃ * 307.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 261.633544921875, ᐃ * 297.9858093261719, ᐃ * 258.633544921875, ᐃ * 293.9858093261719, 255.633544921875 * ᐃ, 290.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 249.633544921875, 301.9858093261719 * ᐃ, ᐃ * 225.633544921875, 320.9858093261719 * ᐃ, 202.633544921875 * ᐃ, ᐃ * 354.9858093261719);
		Ⲇ.bezierCurveTo(195.633544921875 * ᐃ, ᐃ * 318.9858093261719, ᐃ * 196.633544921875, ᐃ * 306.9858093261719, 198.633544921875 * ᐃ, 300.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(209.633544921875 * ᐃ, ᐃ * 268.9858093261719, 199.633544921875 * ᐃ, 266.9858093261719 * ᐃ, ᐃ * 195.633544921875, 256.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183.633544921875, ᐃ * 274.9858093261719, 182.633544921875 * ᐃ, 281.9858093261719 * ᐃ, 192.633544921875 * ᐃ, 305.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(194.633544921875 * ᐃ, ᐃ * 317.9858093261719, ᐃ * 191.633544921875, ᐃ * 336.9858093261719, 186.633544921875 * ᐃ, ᐃ * 351.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 166.633544921875, 318.9858093261719 * ᐃ, ᐃ * 141.633544921875, ᐃ * 303.9858093261719, 136.633544921875 * ᐃ, 286.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(122.633544921875 * ᐃ, 303.9858093261719 * ᐃ, ᐃ * 115.633544921875, 305.9858093261719 * ᐃ, 109.633544921875 * ᐃ, ᐃ * 306.9858093261719);
		Ⲇ.bezierCurveTo(101.133544921875 * ᐃ, ᐃ * 301.9858093261719, ᐃ * 94.633544921875, 297.9858093261719 * ᐃ, 92.633544921875 * ᐃ, 296.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 116.633544921875, 277.9858093261719 * ᐃ, ᐃ * 116.633544921875, ᐃ * 266.9858093261719, 119.633544921875 * ᐃ, ᐃ * 257.9858093261719);
		Ⲇ.bezierCurveTo(107.633544921875 * ᐃ, ᐃ * 257.9858093261719, 65.633544921875 * ᐃ, ᐃ * 308.9858093261719, ᐃ * 24.633544921875, ᐃ * 303.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 51.633544921875, 275.9858093261719 * ᐃ, 64.633544921875 * ᐃ, 220.98580932617188 * ᐃ, ᐃ * 108.633544921875, 205.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 14.633544921875, ᐃ * 198.98580932617188, 26.633544921875 * ᐃ, ᐃ * 142.98580932617188, 25.633544921875 * ᐃ, ᐃ * 86.98580932617188);
		Ⲇ.bezierCurveTo(41.633544921875 * ᐃ, 155.98580932617188 * ᐃ, ᐃ * 81.633544921875, 148.98580932617188 * ᐃ, 113.633544921875 * ᐃ, ᐃ * 124.98580932617188);
		Ⲇ.bezierCurveTo(102.633544921875 * ᐃ, 93.98580932617188 * ᐃ, ᐃ * 95.633544921875, 88.98580932617188 * ᐃ, ᐃ * 89.633544921875, 81.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(97.633544921875 * ᐃ, 76.48580932617188 * ᐃ, ᐃ * 97.633544921875, 76.48580932617188 * ᐃ, 105.633544921875 * ᐃ, ᐃ * 70.98580932617188);
		Ⲇ.bezierCurveTo(120.633544921875 * ᐃ, 78.98580932617188 * ᐃ, ᐃ * 121.633544921875, ᐃ * 81.98580932617188, 124.633544921875 * ᐃ, 86.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 132.633544921875, ᐃ * 71.98580932617188, ᐃ * 160.633544921875, ᐃ * 56.985809326171875, 175.633544921875 * ᐃ, 23.985809326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182.633544921875, ᐃ * 53.985809326171875, ᐃ * 170.633544921875, 102.98580932617188 * ᐃ, ᐃ * 191.633544921875, 125.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 214.633544921875, ᐃ * 89.98580932617188, ᐃ * 192.633544921875, ᐃ * 58.985809326171875, 202.633544921875 * ᐃ, ᐃ * 20.985809326171875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃ * ⲆΔΔⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(203.633544921875 * ᐃ, ᐃ * 21.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 223.633544921875, ᐃ * 63.985809326171875, ᐃ * 227.633544921875, ᐃ * 72.98580932617188, ᐃ * 235.633544921875, ᐃ * 98.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 241.633544921875, 123.98580932617188 * ᐃ, ᐃ * 225.633544921875, 138.98580932617188 * ᐃ, 196.633544921875 * ᐃ, 122.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.633544921875, ᐃ * 93.98580932617188, 199.633544921875 * ᐃ, ᐃ * 49.985809326171875, 203.633544921875 * ᐃ, 26.985809326171875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(175.633544921875 * ᐃ, ᐃ * 25.985809326171875);
		Ⲇ.bezierCurveTo(ᐃ * 176.633544921875, 51.985809326171875 * ᐃ, 171.633544921875 * ᐃ, 88.98580932617188 * ᐃ, ᐃ * 186.633544921875, 121.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 156.633544921875, ᐃ * 144.98580932617188, ᐃ * 139.633544921875, ᐃ * 120.98580932617188, 147.633544921875 * ᐃ, 97.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152.633544921875, ᐃ * 77.98580932617188, ᐃ * 162.633544921875, 60.985809326171875 * ᐃ, 176.633544921875 * ᐃ, ᐃ * 25.985809326171875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(26.633544921875 * ᐃ, 96.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 38.633544921875, 151.98580932617188 * ᐃ, ᐃ * 61.633544921875, 161.98580932617188 * ᐃ, ᐃ * 88.633544921875, ᐃ * 168.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 117.633544921875, ᐃ * 177.98580932617188, ᐃ * 113.633544921875, ᐃ * 185.98580932617188, ᐃ * 106.633544921875, 204.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 32.633544921875, 204.98580932617188 * ᐃ, 25.633544921875 * ᐃ, 149.98580932617188 * ᐃ, ᐃ * 25.633544921875, ᐃ * 97.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(351.633544921875 * ᐃ, ᐃ * 99.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 365.633544921875, 161.98580932617188 * ᐃ, 333.633544921875 * ᐃ, ᐃ * 203.98580932617188, ᐃ * 287.633544921875, 207.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(255.633544921875 * ᐃ, ᐃ * 208.98580932617188, ᐃ * 266.633544921875, 174.98580932617188 * ᐃ, 285.633544921875 * ᐃ, ᐃ * 176.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 313.633544921875, 178.98580932617188 * ᐃ, ᐃ * 348.633544921875, 135.98580932617188 * ᐃ, 353.633544921875 * ᐃ, 99.98580932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 350.633544921875, ᐃ * 302.9858093261719);
		Ⲇ.bezierCurveTo(310.633544921875 * ᐃ, 280.9858093261719 * ᐃ, ᐃ * 314.633544921875, ᐃ * 244.98580932617188, ᐃ * 292.633544921875, ᐃ * 230.98580932617188);
		Ⲇ.bezierCurveTo(272.633544921875 * ᐃ, ᐃ * 215.98580932617188, ᐃ * 263.633544921875, 222.98580932617188 * ᐃ, ᐃ * 256.633544921875, 236.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(251.633544921875 * ᐃ, 249.98580932617188 * ᐃ, 264.633544921875 * ᐃ, ᐃ * 255.98580932617188, 279.633544921875 * ᐃ, 268.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(306.633544921875 * ᐃ, ᐃ * 295.9858093261719, ᐃ * 325.633544921875, ᐃ * 299.9858093261719, 349.633544921875 * ᐃ, 302.9858093261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(95.633544921875 * ᐃ, ᐃ * 224.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 64.633544921875, ᐃ * 245.98580932617188, ᐃ * 62.633544921875, ᐃ * 280.9858093261719, ᐃ * 32.633544921875, 303.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(59.633544921875 * ᐃ, 301.9858093261719 * ᐃ, 102.633544921875 * ᐃ, 260.9858093261719 * ᐃ, ᐃ * 116.633544921875, 255.98580932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 139.633544921875, 229.98580932617188 * ᐃ, 108.633544921875 * ᐃ, 209.98580932617188 * ᐃ, 97.633544921875 * ᐃ, 224.98580932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(195.633544921875 * ᐃ, ᐃ * 253.98580932617188);
		Ⲇ.bezierCurveTo(209.633544921875 * ᐃ, 282.9858093261719 * ᐃ, ᐃ * 205.633544921875, ᐃ * 278.9858093261719, 199.633544921875 * ᐃ, ᐃ * 307.9858093261719);
		Ⲇ.bezierCurveTo(ᐃ * 198.633544921875, 332.9858093261719 * ᐃ, 201.633544921875 * ᐃ, 340.9858093261719 * ᐃ, ᐃ * 202.633544921875, 348.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(215.633544921875 * ᐃ, 313.9858093261719 * ᐃ, 226.633544921875 * ᐃ, 291.9858093261719 * ᐃ, 235.633544921875 * ᐃ, ᐃ * 270.9858093261719);
		Ⲇ.bezierCurveTo(243.633544921875 * ᐃ, 247.98580932617188 * ᐃ, 219.633544921875 * ᐃ, ᐃ * 235.98580932617188, 196.633544921875 * ᐃ, ᐃ * 252.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(195.633544921875 * ᐃ, ᐃ * 251.98580932617188);
		Ⲇ.bezierCurveTo(ᐃ * 176.633544921875, 275.9858093261719 * ᐃ, ᐃ * 182.633544921875, 285.9858093261719 * ᐃ, 191.633544921875 * ᐃ, 308.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(194.633544921875 * ᐃ, ᐃ * 318.9858093261719, ᐃ * 190.633544921875, ᐃ * 334.9858093261719, 186.633544921875 * ᐃ, 348.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(175.633544921875 * ᐃ, ᐃ * 307.9858093261719, 157.633544921875 * ᐃ, 291.9858093261719 * ᐃ, 155.633544921875 * ᐃ, 272.9858093261719 * ᐃ);
		Ⲇ.bezierCurveTo(150.633544921875 * ᐃ, 243.98580932617188 * ᐃ, ᐃ * 170.633544921875, 236.98580932617188 * ᐃ, ᐃ * 195.633544921875, ᐃ * 251.98580932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(316 * ᐃ, 186.8020782470703 * ᐃ);
		Ⲇ.bezierCurveTo(315 * ᐃ, ᐃ * 173.8020782470703, 298 * ᐃ, ᐃ * 177.8020782470703, 293 * ᐃ, ᐃ * 183.8020782470703);
		Ⲇ.bezierCurveTo(285 * ᐃ, ᐃ * 195.8020782470703, 314 * ᐃ, ᐃ * 197.8020782470703, ᐃ * 315, 187.8020782470703 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(340 * ᐃ, ᐃ * 157.8020782470703);
		Ⲇ.bezierCurveTo(327 * ᐃ, 153.8020782470703 * ᐃ, 321 * ᐃ, ᐃ * 168.8020782470703, 330 * ᐃ, 174.8020782470703 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 341, ᐃ * 178.8020782470703, 347 * ᐃ, 161.8020782470703 * ᐃ, 341 * ᐃ, 157.8020782470703 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(349 * ᐃ, 136.8020782470703 * ᐃ);
		Ⲇ.bezierCurveTo(343 * ᐃ, ᐃ * 135.8020782470703, 342 * ᐃ, ᐃ * 139.8020782470703, 341 * ᐃ, 147.8020782470703 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 343, ᐃ * 155.8020782470703, 353 * ᐃ, 143.8020782470703 * ᐃ, 349 * ᐃ, 137.8020782470703 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⵠⲆ], ᐃᐃ[ⵠⲆⲆⵠⲆ], ᐃ * ⲆⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(278.75 * ᐃ, 246.4375 * ᐃ);
		Ⲇ.bezierCurveTo(288.75 * ᐃ, 242.4375 * ᐃ, ᐃ * 301.75, ᐃ * 248.4375, ᐃ * 298.75, ᐃ * 262.4375);
		Ⲇ.bezierCurveTo(293.75 * ᐃ, 271.4375 * ᐃ, 287.75 * ᐃ, 271.4375 * ᐃ, ᐃ * 278.75, 262.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 271.75, ᐃ * 255.4375, ᐃ * 274.75, 250.4375 * ᐃ, ᐃ * 277.75, ᐃ * 247.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(310.75 * ᐃ, 277.4375 * ᐃ);
		Ⲇ.bezierCurveTo(319.75 * ᐃ, ᐃ * 280.4375, 322.75 * ᐃ, ᐃ * 283.4375, ᐃ * 321.75, 289.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 319.75, 295.4375 * ᐃ, 313.75 * ᐃ, 291.4375 * ᐃ, ᐃ * 308.75, 288.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 301.75, ᐃ * 281.4375, 306.75 * ᐃ, ᐃ * 277.4375, 309.75 * ᐃ, 277.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(217.75 * ᐃ, 257.4375 * ᐃ);
		Ⲇ.bezierCurveTo(227.75 * ᐃ, ᐃ * 269.4375, ᐃ * 220.75, 281.4375 * ᐃ, 212.75 * ᐃ, ᐃ * 280.4375);
		Ⲇ.bezierCurveTo(ᐃ * 206.75, 279.4375 * ᐃ, ᐃ * 206.75, ᐃ * 269.4375, 204.75 * ᐃ, ᐃ * 260.4375);
		Ⲇ.bezierCurveTo(ᐃ * 204.75, 254.4375 * ᐃ, ᐃ * 211.75, 253.4375 * ᐃ, ᐃ * 216.75, ᐃ * 256.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔⲆⲆ], ᐃᐃ[7], Δⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 211.75, 289.4375 * ᐃ);
		Ⲇ.bezierCurveTo(219.75 * ᐃ, 292.4375 * ᐃ, ᐃ * 213.75, ᐃ * 306.4375, 206.75 * ᐃ, ᐃ * 307.4375);
		Ⲇ.bezierCurveTo(ᐃ * 199.75, ᐃ * 303.4375, ᐃ * 209.75, ᐃ * 287.4375, ᐃ * 210.75, 289.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 171.75, ᐃ * 256.4375);
		Ⲇ.bezierCurveTo(ᐃ * 162.75, ᐃ * 273.4375, ᐃ * 166.75, 278.4375 * ᐃ, ᐃ * 175.75, ᐃ * 280.4375);
		Ⲇ.bezierCurveTo(ᐃ * 183.75, ᐃ * 278.4375, 185.75 * ᐃ, ᐃ * 257.4375, ᐃ * 182.75, 255.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 176.75, 251.4375 * ᐃ, ᐃ * 172.75, ᐃ * 253.4375, ᐃ * 172.75, ᐃ * 256.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃΔⵠⵠⲆᐃ], ᐃᐃ[ᐃᐃⲆΔΔΔᐃ], ᐃ * ⵠΔΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 175.75, 289.9375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183.75, ᐃ * 287.9375, ᐃ * 186.75, 301.9375 * ᐃ, ᐃ * 182.75, 305.9375 * ᐃ);
		Ⲇ.bezierCurveTo(176.75 * ᐃ, ᐃ * 307.9375, 171.75 * ᐃ, ᐃ * 292.9375, ᐃ * 174.75, ᐃ * 290.9375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⵠ], ᐃᐃ[ⲆΔᐃⵠΔ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 205.75, 314.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 209.75, ᐃ * 316.4375, ᐃ * 210.75, 320.4375 * ᐃ, ᐃ * 206.75, 323.4375 * ᐃ);
		Ⲇ.bezierCurveTo(201.75 * ᐃ, ᐃ * 324.4375, ᐃ * 201.75, ᐃ * 314.4375, 204.75 * ᐃ, 314.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃΔᐃᐃ], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 186.75, 313.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181.75, 315.4375 * ᐃ, ᐃ * 180.75, 321.4375 * ᐃ, ᐃ * 185.75, ᐃ * 326.4375);
		Ⲇ.bezierCurveTo(190.75 * ᐃ, ᐃ * 327.4375, ᐃ * 190.75, ᐃ * 313.4375, 187.75 * ᐃ, ᐃ * 314.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆᐃⵠᐃ], ᐃᐃ[ⵠᐃⵠⲆᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(103.75 * ᐃ, 244.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 96.75, ᐃ * 239.4375, 83.75 * ᐃ, 240.4375 * ᐃ, 81.75 * ᐃ, 255.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.75, 264.4375 * ᐃ, 89.75 * ᐃ, 269.4375 * ᐃ, 99.75 * ᐃ, 260.4375 * ᐃ);
		Ⲇ.bezierCurveTo(106.75 * ᐃ, 254.4375 * ᐃ, 106.75 * ᐃ, ᐃ * 250.4375, 104.75 * ᐃ, 245.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔΔⲆ], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 86.75, 182.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 82.75, ᐃ * 170.4375, 66.75 * ᐃ, ᐃ * 169.4375, 61.75 * ᐃ, ᐃ * 181.4375);
		Ⲇ.bezierCurveTo(58.75 * ᐃ, 187.4375 * ᐃ, 68.75 * ᐃ, ᐃ * 194.4375, 75.75 * ᐃ, 192.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 83.75, 192.4375 * ᐃ, 86.75 * ᐃ, 187.4375 * ᐃ, 86.75 * ᐃ, ᐃ * 183.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44.75 * ᐃ, ᐃ * 152.4375);
		Ⲇ.bezierCurveTo(55.75 * ᐃ, ᐃ * 159.4375, ᐃ * 54.75, ᐃ * 170.4375, 46.75 * ᐃ, 171.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 39.75, ᐃ * 170.4375, ᐃ * 34.75, ᐃ * 151.4375, ᐃ * 43.75, 152.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ᐃⲆⵠⲆⲆ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31.75, 130.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 35.75, ᐃ * 132.4375, ᐃ * 35.75, 131.4375 * ᐃ, 37.75 * ᐃ, ᐃ * 137.4375);
		Ⲇ.bezierCurveTo(ᐃ * 36.75, 144.4375 * ᐃ, 36.75 * ᐃ, ᐃ * 145.4375, ᐃ * 33.75, ᐃ * 144.4375);
		Ⲇ.bezierCurveTo(ᐃ * 26.75, ᐃ * 137.4375, 29.75 * ᐃ, ᐃ * 131.4375, ᐃ * 31.75, 130.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(69.75 * ᐃ, 274.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.75, ᐃ * 272.4375, ᐃ * 59.75, ᐃ * 277.4375, 57.75 * ᐃ, ᐃ * 284.4375);
		Ⲇ.bezierCurveTo(ᐃ * 56.75, 290.4375 * ᐃ, 63.75 * ᐃ, 289.4375 * ᐃ, 71.75 * ᐃ, ᐃ * 282.4375);
		Ⲇ.bezierCurveTo(ᐃ * 75.75, 277.4375 * ᐃ, 72.75 * ᐃ, ᐃ * 275.4375, 69.75 * ᐃ, 274.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * ᐃΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 165.75, 95.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 177.75, 97.4375 * ᐃ, ᐃ * 182.75, ᐃ * 115.4375, 173.75 * ᐃ, ᐃ * 121.4375);
		Ⲇ.bezierCurveTo(ᐃ * 164.75, ᐃ * 126.4375, ᐃ * 149.75, ᐃ * 102.4375, 164.75 * ᐃ, ᐃ * 96.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ᐃⲆⵠΔᐃ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 216.75, ᐃ * 94.4375);
		Ⲇ.bezierCurveTo(ᐃ * 227.75, ᐃ * 99.4375, 223.75 * ᐃ, ᐃ * 122.4375, 210.75 * ᐃ, 119.4375 * ᐃ);
		Ⲇ.bezierCurveTo(203.75 * ᐃ, 115.4375 * ᐃ, 207.75 * ᐃ, 93.4375 * ᐃ, ᐃ * 216.75, 94.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(211.75 * ᐃ, ᐃ * 68.4375);
		Ⲇ.bezierCurveTo(ᐃ * 218.75, ᐃ * 69.4375, ᐃ * 220.75, 77.4375 * ᐃ, ᐃ * 216.75, ᐃ * 83.4375);
		Ⲇ.bezierCurveTo(ᐃ * 208.75, 89.4375 * ᐃ, ᐃ * 205.75, 68.4375 * ᐃ, ᐃ * 210.75, ᐃ * 68.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ᐃⵠᐃⵠΔ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(169.75 * ᐃ, 71.4375 * ᐃ);
		Ⲇ.bezierCurveTo(162.75 * ᐃ, 72.4375 * ᐃ, ᐃ * 159.75, ᐃ * 83.4375, ᐃ * 167.75, ᐃ * 88.4375);
		Ⲇ.bezierCurveTo(ᐃ * 174.75, ᐃ * 90.4375, ᐃ * 174.75, ᐃ * 72.4375, 170.75 * ᐃ, ᐃ * 71.4375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 193.75, ᐃ * 160.4375);
		Ⲇ.bezierCurveTo(ᐃ * 215.75, 168.4375 * ᐃ, ᐃ * 224.75, ᐃ * 180.4375, 229.75 * ᐃ, ᐃ * 193.4375);
		Ⲇ.bezierCurveTo(223.75 * ᐃ, 211.4375 * ᐃ, ᐃ * 205.75, ᐃ * 225.4375, 193.75 * ᐃ, 229.4375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 167.75, 217.4375 * ᐃ, ᐃ * 161.75, ᐃ * 205.4375, 156.75 * ᐃ, 192.4375 * ᐃ);
		Ⲇ.bezierCurveTo(164.75 * ᐃ, 175.4375 * ᐃ, 176.75 * ᐃ, ᐃ * 166.4375, 192.75 * ᐃ, 160.4375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ᐃᐃΔⲆⵠⲆΔ], ᐃ * 3);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(189.1999969482422 * ᐃ, 182.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190.1999969482422, ᐃ * 184.11249923706055, 190.1999969482422 * ᐃ, 184.11249923706055 * ᐃ, 191.1999969482422 * ᐃ, ᐃ * 185.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 192.1999969482422, 180.61249923706055 * ᐃ, 192.1999969482422 * ᐃ, ᐃ * 180.61249923706055, 193.1999969482422 * ᐃ, 175.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 195.6999969482422, 177.11249923706055 * ᐃ, 195.6999969482422 * ᐃ, ᐃ * 177.11249923706055, ᐃ * 198.1999969482422, 178.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(198.1999969482422 * ᐃ, ᐃ * 181.11249923706055, 198.1999969482422 * ᐃ, 181.11249923706055 * ᐃ, ᐃ * 198.1999969482422, ᐃ * 183.61249923706055);
		Ⲇ.bezierCurveTo(201.6999969482422 * ᐃ, 181.11249923706055 * ᐃ, ᐃ * 201.6999969482422, 181.11249923706055 * ᐃ, ᐃ * 205.1999969482422, 178.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(206.6999969482422 * ᐃ, ᐃ * 180.61249923706055, ᐃ * 206.6999969482422, 180.61249923706055 * ᐃ, ᐃ * 208.1999969482422, ᐃ * 182.61249923706055);
		Ⲇ.bezierCurveTo(206.1999969482422 * ᐃ, ᐃ * 185.61249923706055, ᐃ * 206.1999969482422, ᐃ * 185.61249923706055, ᐃ * 204.1999969482422, ᐃ * 188.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 208.6999969482422, ᐃ * 188.61249923706055, ᐃ * 208.6999969482422, ᐃ * 188.61249923706055, ᐃ * 213.1999969482422, 188.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.1999969482422, 191.11249923706055 * ᐃ, 213.1999969482422 * ᐃ, 191.11249923706055 * ᐃ, 213.1999969482422 * ᐃ, ᐃ * 193.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 209.6999969482422, 194.61249923706055 * ᐃ, 209.6999969482422 * ᐃ, ᐃ * 194.61249923706055, ᐃ * 206.1999969482422, 195.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 210.1999969482422, 198.61249923706055 * ᐃ, 210.1999969482422 * ᐃ, 198.61249923706055 * ᐃ, ᐃ * 214.1999969482422, 201.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 212.1999969482422, ᐃ * 203.61249923706055, ᐃ * 212.1999969482422, 203.61249923706055 * ᐃ, ᐃ * 210.1999969482422, 205.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 207.1999969482422, ᐃ * 204.11249923706055, 207.1999969482422 * ᐃ, 204.11249923706055 * ᐃ, 204.1999969482422 * ᐃ, 202.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(205.6999969482422 * ᐃ, ᐃ * 207.61249923706055, ᐃ * 205.6999969482422, 207.61249923706055 * ᐃ, ᐃ * 207.1999969482422, ᐃ * 212.61249923706055);
		Ⲇ.bezierCurveTo(204.6999969482422 * ᐃ, 213.61249923706055 * ᐃ, 204.6999969482422 * ᐃ, ᐃ * 213.61249923706055, ᐃ * 202.1999969482422, 214.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 200.1999969482422, ᐃ * 210.61249923706055, ᐃ * 200.1999969482422, ᐃ * 210.61249923706055, 198.1999969482422 * ᐃ, ᐃ * 206.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 196.6999969482422, 211.61249923706055 * ᐃ, 196.6999969482422 * ᐃ, 211.61249923706055 * ᐃ, ᐃ * 195.1999969482422, 216.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 192.6999969482422, 216.11249923706055 * ᐃ, 192.6999969482422 * ᐃ, ᐃ * 216.11249923706055, 190.1999969482422 * ᐃ, ᐃ * 215.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 190.1999969482422, ᐃ * 211.61249923706055, 190.1999969482422 * ᐃ, 211.61249923706055 * ᐃ, ᐃ * 190.1999969482422, ᐃ * 207.61249923706055);
		Ⲇ.bezierCurveTo(186.1999969482422 * ᐃ, 210.61249923706055 * ᐃ, 186.1999969482422 * ᐃ, 210.61249923706055 * ᐃ, 182.1999969482422 * ᐃ, 213.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181.1999969482422, 211.11249923706055 * ᐃ, ᐃ * 181.1999969482422, ᐃ * 211.11249923706055, 180.1999969482422 * ᐃ, 208.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(183.1999969482422 * ᐃ, 205.61249923706055 * ᐃ, 183.1999969482422 * ᐃ, ᐃ * 205.61249923706055, ᐃ * 186.1999969482422, ᐃ * 202.61249923706055);
		Ⲇ.bezierCurveTo(180.6999969482422 * ᐃ, ᐃ * 203.11249923706055, 180.6999969482422 * ᐃ, 203.11249923706055 * ᐃ, 175.1999969482422 * ᐃ, ᐃ * 203.61249923706055);
		Ⲇ.bezierCurveTo(174.6999969482422 * ᐃ, ᐃ * 200.11249923706055, ᐃ * 174.6999969482422, 200.11249923706055 * ᐃ, ᐃ * 174.1999969482422, ᐃ * 196.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 177.1999969482422, ᐃ * 195.61249923706055, 177.1999969482422 * ᐃ, ᐃ * 195.61249923706055, 180.1999969482422 * ᐃ, ᐃ * 194.61249923706055);
		Ⲇ.bezierCurveTo(177.1999969482422 * ᐃ, ᐃ * 191.61249923706055, 177.1999969482422 * ᐃ, ᐃ * 191.61249923706055, ᐃ * 174.1999969482422, ᐃ * 188.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 175.6999969482422, ᐃ * 187.11249923706055, 175.6999969482422 * ᐃ, 187.11249923706055 * ᐃ, ᐃ * 177.1999969482422, ᐃ * 185.61249923706055);
		Ⲇ.bezierCurveTo(ᐃ * 180.6999969482422, 187.11249923706055 * ᐃ, ᐃ * 180.6999969482422, 187.11249923706055 * ᐃ, 184.1999969482422 * ᐃ, 188.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(182.6999969482422 * ᐃ, 183.61249923706055 * ᐃ, ᐃ * 182.6999969482422, 183.61249923706055 * ᐃ, ᐃ * 181.1999969482422, 178.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(183.1999969482422 * ᐃ, 177.11249923706055 * ᐃ, ᐃ * 183.1999969482422, ᐃ * 177.11249923706055, ᐃ * 185.1999969482422, 175.61249923706055 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[10]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 185.1999969482422, 173.8125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 187.1999969482422, ᐃ * 179.3125, ᐃ * 187.1999969482422, ᐃ * 179.3125, 189.1999969482422 * ᐃ, 184.8125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 184.1999969482422, ᐃ * 181.8125, ᐃ * 184.1999969482422, ᐃ * 181.8125, ᐃ * 179.1999969482422, 178.8125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 181.1999969482422, 175.8125 * ᐃ, 182.1999969482422 * ᐃ, ᐃ * 174.8125, ᐃ * 185.1999969482422, 173.8125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 192.1999969482422, ᐃ * 173.61249542236328);
		Ⲇ.bezierCurveTo(194.1999969482422 * ᐃ, ᐃ * 172.61249542236328, ᐃ * 196.1999969482422, 171.61249542236328 * ᐃ, 199.1999969482422 * ᐃ, 173.61249542236328 * ᐃ);
		Ⲇ.bezierCurveTo(197.6999969482422 * ᐃ, ᐃ * 179.61249542236328, ᐃ * 197.6999969482422, ᐃ * 179.61249542236328, 196.1999969482422 * ᐃ, 185.61249542236328 * ᐃ);
		Ⲇ.bezierCurveTo(194.1999969482422 * ᐃ, ᐃ * 179.61249542236328, ᐃ * 194.1999969482422, 179.61249542236328 * ᐃ, 192.1999969482422 * ᐃ, ᐃ * 173.61249542236328);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆᐃⲆᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(205.1999969482422 * ᐃ, ᐃ * 176.2125015258789);
		Ⲇ.bezierCurveTo(ᐃ * 210.1999969482422, ᐃ * 178.2125015258789, ᐃ * 211.1999969482422, ᐃ * 179.2125015258789, ᐃ * 211.1999969482422, ᐃ * 181.2125015258789);
		Ⲇ.bezierCurveTo(ᐃ * 206.6999969482422, ᐃ * 184.7125015258789, 206.6999969482422 * ᐃ, ᐃ * 184.7125015258789, 202.1999969482422 * ᐃ, 188.2125015258789 * ᐃ);
		Ⲇ.bezierCurveTo(203.6999969482422 * ᐃ, 182.2125015258789 * ᐃ, ᐃ * 203.6999969482422, 182.2125015258789 * ᐃ, 205.1999969482422 * ᐃ, 176.2125015258789 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 214.1999969482422, ᐃ * 187.21249985694885);
		Ⲇ.bezierCurveTo(ᐃ * 216.1999969482422, ᐃ * 191.21249985694885, 216.1999969482422 * ᐃ, 192.21249985694885 * ᐃ, 215.1999969482422 * ᐃ, 195.21249985694885 * ᐃ);
		Ⲇ.bezierCurveTo(206.1999969482422 * ᐃ, ᐃ * 194.21249985694885, 205.1999969482422 * ᐃ, ᐃ * 194.21249985694885, ᐃ * 205.1999969482422, 194.21249985694885 * ᐃ);
		Ⲇ.bezierCurveTo(209.6999969482422 * ᐃ, 190.71249985694885 * ᐃ, 209.6999969482422 * ᐃ, ᐃ * 190.71249985694885, 214.1999969482422 * ᐃ, ᐃ * 187.21249985694885);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 204.1999969482422, 201.8125 * ᐃ);
		Ⲇ.bezierCurveTo(209.1999969482422 * ᐃ, ᐃ * 201.3125, ᐃ * 209.1999969482422, ᐃ * 201.3125, 214.1999969482422 * ᐃ, ᐃ * 200.8125);
		Ⲇ.bezierCurveTo(215.1999969482422 * ᐃ, ᐃ * 204.8125, ᐃ * 214.1999969482422, ᐃ * 205.8125, ᐃ * 213.1999969482422, 208.8125 * ᐃ);
		Ⲇ.bezierCurveTo(208.6999969482422 * ᐃ, ᐃ * 205.3125, 208.6999969482422 * ᐃ, ᐃ * 205.3125, 204.1999969482422 * ᐃ, ᐃ * 201.8125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 199.1999969482422, 205.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 207.1999969482422, 212.61249923706055 * ᐃ, ᐃ * 203.6999969482422, ᐃ * 209.11249923706055, 208.1999969482422 * ᐃ, 212.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206.1999969482422, 215.61249923706055 * ᐃ, ᐃ * 204.1999969482422, 217.61249923706055 * ᐃ, 203.1999969482422 * ᐃ, 216.61249923706055 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 201.1999969482422, 211.11249923706055 * ᐃ, ᐃ * 201.1999969482422, 211.11249923706055 * ᐃ, ᐃ * 199.1999969482422, 205.61249923706055 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(191.1999969482422 * ᐃ, 207.01250076293945 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 194.1999969482422, 213.01250076293945 * ᐃ, 194.1999969482422 * ᐃ, ᐃ * 216.01250076293945, 196.1999969482422 * ᐃ, ᐃ * 218.01250076293945);
		Ⲇ.bezierCurveTo(193.1999969482422 * ᐃ, ᐃ * 220.01250076293945, 190.1999969482422 * ᐃ, ᐃ * 220.01250076293945, 188.1999969482422 * ᐃ, ᐃ * 218.01250076293945);
		Ⲇ.bezierCurveTo(189.6999969482422 * ᐃ, 213.01250076293945 * ᐃ, ᐃ * 189.6999969482422, ᐃ * 213.01250076293945, ᐃ * 191.1999969482422, ᐃ * 208.01250076293945);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 186.1999969482422, ᐃ * 203.21249961853027);
		Ⲇ.bezierCurveTo(ᐃ * 184.1999969482422, ᐃ * 209.21249961853027, 184.1999969482422 * ᐃ, ᐃ * 209.21249961853027, ᐃ * 182.1999969482422, 215.21249961853027 * ᐃ);
		Ⲇ.bezierCurveTo(177.1999969482422 * ᐃ, 212.21249961853027 * ᐃ, 176.1999969482422 * ᐃ, ᐃ * 211.21249961853027, ᐃ * 177.1999969482422, ᐃ * 210.21249961853027);
		Ⲇ.bezierCurveTo(ᐃ * 181.6999969482422, ᐃ * 206.71249961853027, 181.6999969482422 * ᐃ, 206.71249961853027 * ᐃ, ᐃ * 186.1999969482422, ᐃ * 203.21249961853027);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆⲆᐃΔⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(183.1999969482422 * ᐃ, ᐃ * 196.8125);
		Ⲇ.bezierCurveTo(177.1999969482422 * ᐃ, 196.3125 * ᐃ, ᐃ * 177.1999969482422, 196.3125 * ᐃ, 171.1999969482422 * ᐃ, ᐃ * 195.8125);
		Ⲇ.bezierCurveTo(171.1999969482422 * ᐃ, ᐃ * 199.8125, 171.1999969482422 * ᐃ, 202.8125 * ᐃ, 174.1999969482422 * ᐃ, 204.8125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 178.6999969482422, ᐃ * 200.8125, 178.6999969482422 * ᐃ, ᐃ * 200.8125, 183.1999969482422 * ᐃ, ᐃ * 196.8125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 185.1999969482422, 190.21249771118164 * ᐃ);
		Ⲇ.bezierCurveTo(179.6999969482422 * ᐃ, 186.71249771118164 * ᐃ, 179.6999969482422 * ᐃ, 186.71249771118164 * ᐃ, 174.1999969482422 * ᐃ, ᐃ * 183.21249771118164);
		Ⲇ.bezierCurveTo(ᐃ * 172.1999969482422, ᐃ * 186.21249771118164, 172.1999969482422 * ᐃ, 187.21249771118164 * ᐃ, ᐃ * 172.1999969482422, ᐃ * 190.21249771118164);
		Ⲇ.bezierCurveTo(ᐃ * 178.1999969482422, ᐃ * 190.21249771118164, 178.1999969482422 * ᐃ, ᐃ * 190.21249771118164, 184.1999969482422 * ᐃ, ᐃ * 190.21249771118164);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[11]);
		ΔⵠⲆ(Ⲇ, 126.19999694824219 * ᐃ, 169.8125 * ᐃ, ᐃ * 8.94427190999916);
		Δⵠ(Ⲇ, ᐃᐃ[12]);
		ΔⵠⲆ(Ⲇ, ᐃ * 123.19999694824219, ᐃ * 164.8125, 2.8284271247461903 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[13]);
		ΔⵠⲆ(Ⲇ, 253.1999969482422 * ᐃ, ᐃ * 169.8125, ᐃ * 8.94427190999916);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃⲆᐃ]);
		ΔⵠⲆ(Ⲇ, ᐃ * 255.1999969482422, 164.8125 * ᐃ, ᐃ * 2.23606797749979);
		Δⵠ(Ⲇ, ᐃᐃ[13]);
		return ΔΔ
	}
	const ΔᐃⲆΔ = ⲆⵠⲆ;

	function ⲆⲆᐃΔⲆⵠᐃΔᐃ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 167 * ᐃ;
		ΔΔ.height = 136 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 76.71426391601562, 67.85713195800781 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -57.5, -54.5 * ᐃ, 115 * ᐃ, 109 * ᐃ, ᐃ * ⲆⵠⲆⲆⲆⲆⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = .8;
		Ⲇ.save();
		Ⲇ.translate(76.71426391601562 * ᐃ, ᐃ * 67.85713195800781);
		ᐃΔⵠ(Ⲇ, -57.5 * ᐃ, -54.5 * ᐃ, ᐃ * 115, 109 * ᐃ, ᐃ * ⵠᐃΔᐃⲆᐃΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ⲆΔⵠΔᐃ * ᐃ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 91.21426391601562, ᐃ * 67.35713195800781);
		ᐃΔⵠ(Ⲇ, ᐃ * -56, -55 * ᐃ, ᐃ * 115, 109 * ᐃ, ⲆΔΔᐃᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠᐃΔᐃ;
		Ⲇ.save();
		Ⲇ.translate(91.21426391601562 * ᐃ, ᐃ * 67.35713195800781);
		ᐃΔⵠ(Ⲇ, ᐃ * -56, -55 * ᐃ, ᐃ * 115, ᐃ * 109, ᐃ * 15);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠᐃΔᐃ], ᐃ * ⵠΔᐃⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(131.21426391601562 * ᐃ, 70.35713195800781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133.21426391601562, 95.35713195800781 * ᐃ, ᐃ * 128.21426391601562, ᐃ * 109.35713195800781, ᐃ * 108.21426391601562, ᐃ * 108.35713195800781);
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[1], ΔΔⵠᐃⵠ * ᐃ);
		return ΔΔ
	}

	function ⲆⲆⲆᐃᐃⲆⵠⵠᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 316;
		ΔΔ.height = ᐃ * 365;
		Ⲇ.save();
		Ⲇ.translate(156.07142639160156 * ᐃ, ᐃ * 51.81248474121094);
		Ⲇ.rotate(ΔⵠⲆΔ);
		ᐃΔⵠ(Ⲇ, -21.5 * ᐃ, ᐃ * -34, ᐃ * 43, ᐃ * 68, 8 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ], ᐃᐃ[0], ᐃ * 15);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(126.57142639160156 * ᐃ, 67.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(126.57142639160156 * ᐃ, 57.38392639160156 * ᐃ, 132.57142639160156 * ᐃ, ᐃ * 54.38392639160156, 140.57142639160156 * ᐃ, 54.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(177.57142639160156 * ᐃ, ᐃ * 55.38392639160156, 158.07142639160156 * ᐃ, ᐃ * 54.38392639160156, 175.57142639160156 * ᐃ, 54.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 185.57142639160156, 56.38392639160156 * ᐃ, 185.57142639160156 * ᐃ, ᐃ * 57.38392639160156, ᐃ * 184.57142639160156, ᐃ * 66.38392639160156);
		Ⲇ.bezierCurveTo(184.57142639160156 * ᐃ, ᐃ * 78.38392639160156, 184.57142639160156 * ᐃ, 89.38392639160156 * ᐃ, ᐃ * 184.57142639160156, ᐃ * 90.38392639160156);
		Ⲇ.bezierCurveTo(177.57142639160156 * ᐃ, 107.38392639160156 * ᐃ, ᐃ * 180.57142639160156, ᐃ * 112.38392639160156, ᐃ * 189.57142639160156, ᐃ * 116.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 212.57142639160156, ᐃ * 127.38392639160156, 212.57142639160156 * ᐃ, 132.38392639160156 * ᐃ, 211.57142639160156 * ᐃ, ᐃ * 150.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 211.57142639160156, ᐃ * 227.59821128845215, ᐃ * 211.57142639160156, 227.59821128845215 * ᐃ, 211.57142639160156 * ᐃ, 304.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(212.57142639160156 * ᐃ, 328.81249618530273 * ᐃ, 209.57142639160156 * ᐃ, 330.81249618530273 * ᐃ, 188.57142639160156 * ᐃ, ᐃ * 333.81249618530273);
		Ⲇ.bezierCurveTo(155.07142639160156 * ᐃ, 333.31249618530273 * ᐃ, 155.07142639160156 * ᐃ, ᐃ * 333.31249618530273, 121.57142639160156 * ᐃ, ᐃ * 332.81249618530273);
		Ⲇ.bezierCurveTo(ᐃ * 104.57142639160156, 327.81249618530273 * ᐃ, 105.57142639160156 * ᐃ, 328.81249618530273 * ᐃ, 104.57142639160156 * ᐃ, ᐃ * 312.81249618530273);
		Ⲇ.bezierCurveTo(ᐃ * 104.57142639160156, 228.16963958740234 * ᐃ, 104.57142639160156 * ᐃ, 228.16963958740234 * ᐃ, ᐃ * 104.57142639160156, 143.52678298950195 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106.57142639160156, ᐃ * 124.52678298950195, 110.57142639160156 * ᐃ, 123.52678298950195 * ᐃ, ᐃ * 123.57142639160156, ᐃ * 116.52678298950195);
		Ⲇ.bezierCurveTo(136.57142639160156 * ᐃ, 110.52678298950195 * ᐃ, 130.57142639160156 * ᐃ, 106.52678298950195 * ᐃ, 126.57142639160156 * ᐃ, ᐃ * 98.52678298950195);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⲆᐃⲆ], ᐃ * 15);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125.57142639160156 * ᐃ, ᐃ * 156.66963958740234);
		Ⲇ.bezierCurveTo(125.57142639160156 * ᐃ, ᐃ * 182.66963958740234, ᐃ * 125.57142639160156, 182.66963958740234 * ᐃ, 125.57142639160156 * ᐃ, 208.66963958740234 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔᐃⲆΔ], 15 * ᐃ);
		return ΔΔ
	}

	function ᐃⵠⵠΔⵠΔⲆ(ᐃ, Ⲇⵠⵠᐃⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 218 * ᐃ;
		ΔΔ.height = 185 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 64, ᐃ * 53.135406494140625);
		Ⲇ.bezierCurveTo(92 * ᐃ, ᐃ * 17.135406494140625, ᐃ * 116, 11.135406494140625 * ᐃ, ᐃ * 158, 53.135406494140625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 178, 74.13540649414062 * ᐃ, 181 * ᐃ, ᐃ * 81.13540649414062, 196 * ᐃ, 101.13540649414062 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 214, ᐃ * 127.13540649414062, 192 * ᐃ, ᐃ * 138.13540649414062, 173 * ᐃ, 149.13540649414062 * ᐃ);
		Ⲇ.bezierCurveTo(137 * ᐃ, 166.13540649414062 * ᐃ, 74 * ᐃ, 170.13540649414062 * ᐃ, 36 * ᐃ, ᐃ * 141.13540649414062);
		Ⲇ.bezierCurveTo(13 * ᐃ, ᐃ * 127.13540649414062, ᐃ * ⵠⵠᐃᐃ, 119.13540649414062 * ᐃ, 30 * ᐃ, ᐃ * 103.13540649414062);
		Ⲇ.bezierCurveTo(ᐃ * 48, 71.13540649414062 * ᐃ, 54 * ᐃ, 67.13540649414062 * ᐃ, 63 * ᐃ, 54.135406494140625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107 * ᐃ, ᐃ * 25.135406494140625);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 90.13540649414062, 54 * ᐃ, 129.13540649414062 * ᐃ, ᐃ * 53, 151.13540649414062 * ᐃ);
		Ⲇ.bezierCurveTo(39.5 * ᐃ, ᐃ * 142.13540649414062, 39.5 * ᐃ, 142.13540649414062 * ᐃ, ᐃ * 26, ᐃ * 133.13540649414062);
		Ⲇ.bezierCurveTo(23.5 * ᐃ, 128.63540649414062 * ᐃ, 23.5 * ᐃ, 128.63540649414062 * ᐃ, ᐃ * 21, ᐃ * 124.13540649414062);
		Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 113.13540649414062, 31 * ᐃ, 99.13540649414062 * ᐃ, 40 * ᐃ, 88.13540649414062 * ᐃ);
		Ⲇ.bezierCurveTo(54.5 * ᐃ, ᐃ * 67.13540649414062, 54.5 * ᐃ, 67.13540649414062 * ᐃ, ᐃ * 69, ᐃ * 46.135406494140625);
		Ⲇ.bezierCurveTo(80.5 * ᐃ, 36.635406494140625 * ᐃ, 80.5 * ᐃ, ᐃ * 36.635406494140625, 92 * ᐃ, ᐃ * 27.135406494140625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ]);
		return ΔΔ
	}

	function ᐃⲆⲆⵠⲆⵠⵠᐃⵠ(ᐃⲆⵠⲆ) {
		var ⲆᐃⲆ = [];
		for (var ᐃⲆ = 0; ᐃⲆⵠⲆ.length > ᐃⲆ; ᐃⲆ++) ⲆᐃⲆ.push(ⲆⵠᐃⵠⲆⵠΔⵠⵠ(ᐃⲆⵠⲆ[ᐃⲆ], 2 == ᐃⲆ ? ⲆΔᐃⲆⲆ : ᐃⵠⲆΔⵠ));
		return ⲆᐃⲆ
	}

	function ⵠⵠⵠΔΔᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 158 * ᐃ;
		ΔΔ.height = ᐃ * 201;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96.5, ᐃ * 76.421875);
		Ⲇ.bezierCurveTo(100.5 * ᐃ, 64.421875 * ᐃ, 103.5 * ᐃ, 62.421875 * ᐃ, ᐃ * 110.5, ᐃ * 65.421875);
		Ⲇ.bezierCurveTo(116.5 * ᐃ, 66.421875 * ᐃ, ᐃ * 117.5, 67.421875 * ᐃ, ᐃ * 112.5, ᐃ * 73.421875);
		Ⲇ.bezierCurveTo(107 * ᐃ, 79.921875 * ᐃ, ᐃ * 107, 79.921875 * ᐃ, ᐃ * 101.5, 86.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠᐃ], ᐃᐃ[8], ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(61.5 * ᐃ, 78.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 57.5, 73.421875 * ᐃ, 51.5 * ᐃ, ᐃ * 66.421875, 45.5 * ᐃ, ᐃ * 68.421875);
		Ⲇ.bezierCurveTo(32.5 * ᐃ, ᐃ * 73.421875, 38.5 * ᐃ, 75.421875 * ᐃ, 46.5 * ᐃ, ᐃ * 81.421875);
		Ⲇ.bezierCurveTo(51.5 * ᐃ, 84.921875 * ᐃ, 51.5 * ᐃ, ᐃ * 84.921875, ᐃ * 56.5, 88.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⵠᐃ], ᐃᐃ[8], Ⲇⵠᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116.5, 127.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124.5, ᐃ * 108.421875, 129.5 * ᐃ, ᐃ * 104.421875, 141.5 * ᐃ, 107.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 156.5, ᐃ * 112.421875, ᐃ * 153.5, 113.421875 * ᐃ, ᐃ * 132.5, 134.421875 * ᐃ);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, 141.921875 * ᐃ, 123.5 * ᐃ, 141.921875 * ᐃ, ᐃ * 114.5, 149.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃⲆ], ᐃᐃ[ΔⲆΔⲆⵠ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(41.5 * ᐃ, ᐃ * 134.421875);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, 119.421875 * ᐃ, 25.5 * ᐃ, 111.421875 * ᐃ, 12.5 * ᐃ, 115.421875 * ᐃ);
		Ⲇ.bezierCurveTo(4.5 * ᐃ, 120.421875 * ᐃ, 4.5 * ᐃ, ᐃ * 121.421875, ᐃ * 26.5, ᐃ * 142.421875);
		Ⲇ.bezierCurveTo(35 * ᐃ, ᐃ * 149.921875, ᐃ * 35, 149.921875 * ᐃ, 43.5 * ᐃ, 157.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃΔⲆ], ᐃᐃ[ΔⲆᐃᐃᐃ], ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(78.5 * ᐃ, 51.921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99.5, 75.921875 * ᐃ, ᐃ * 110.5, 96.921875 * ᐃ, ᐃ * 118.5, ᐃ * 120.921875);
		Ⲇ.bezierCurveTo(121.5 * ᐃ, ᐃ * 140.921875, 107.5 * ᐃ, 179.921875 * ᐃ, 75.5 * ᐃ, 183.921875 * ᐃ);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, ᐃ * 169.921875, 37.5 * ᐃ, ᐃ * 131.921875, ᐃ * 34.5, 120.921875 * ᐃ);
		Ⲇ.bezierCurveTo(41.5 * ᐃ, 89.921875 * ᐃ, ᐃ * 61.5, ᐃ * 67.921875, ᐃ * 78.5, 51.921875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ⲆⵠΔᐃⲆ], ΔᐃΔᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72.5, 72.421875 * ᐃ);
		Ⲇ.bezierCurveTo(76.5 * ᐃ, ᐃ * 79.421875, 79.5 * ᐃ, ᐃ * 80.421875, ᐃ * 83.5, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(80.5 * ᐃ, ᐃ * 96.921875, ᐃ * 79.5, 114.421875 * ᐃ, ᐃ * 77.5, 120.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[8], ᐃᐃ[ᐃⵠΔΔᐃ], ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.5, 163.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.5, 185.421875 * ᐃ, ᐃ * 86.5, ᐃ * 186.421875, ᐃ * 111.5, ᐃ * 165.421875);
		Ⲇ.bezierCurveTo(ᐃ * 107.5, ᐃ * 176.421875, 95.5 * ᐃ, 187.421875 * ᐃ, ᐃ * 75.5, 188.421875 * ᐃ);
		Ⲇ.bezierCurveTo(53.5 * ᐃ, ᐃ * 188.421875, 43.5 * ᐃ, ᐃ * 171.421875, 42.5 * ᐃ, 164.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠⵠⵠ], ᐃᐃ[8], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(79.5 * ᐃ, 61.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 88.5, ᐃ * 31.421875, ᐃ * 81.5, ᐃ * 16.421875, ᐃ * 75.5, ᐃ * 7.421875);
		Ⲇ.bezierCurveTo(77.5 * ᐃ, 28.421875 * ᐃ, 77.5 * ᐃ, 37.421875 * ᐃ, ᐃ * 68.5, 42.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 79.5, ᐃ * 57.421875, 79.5 * ᐃ, 58.421875 * ᐃ, 80.5 * ᐃ, ᐃ * 61.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠᐃ], ᐃᐃ[8], ᐃ * ᐃᐃⲆᐃᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72.5, 72.421875 * ᐃ);
		Ⲇ.bezierCurveTo(76.5 * ᐃ, ᐃ * 79.421875, 79.5 * ᐃ, 80.421875 * ᐃ, 83.5 * ᐃ, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.5, 96.921875 * ᐃ, 79.5 * ᐃ, ᐃ * 114.421875, 77.5 * ᐃ, ᐃ * 120.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠᐃ], ᐃᐃ[ⵠᐃⵠⵠⵠ], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96.5, ᐃ * 76.421875);
		Ⲇ.bezierCurveTo(ᐃ * 100.5, ᐃ * 64.421875, 103.5 * ᐃ, 62.421875 * ᐃ, 110.5 * ᐃ, 65.421875 * ᐃ);
		Ⲇ.bezierCurveTo(116.5 * ᐃ, 66.421875 * ᐃ, ᐃ * 117.5, 67.421875 * ᐃ, 112.5 * ᐃ, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 107, ᐃ * 79.921875, ᐃ * 107, 79.921875 * ᐃ, 101.5 * ᐃ, ᐃ * 86.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔᐃ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(61.5 * ᐃ, ᐃ * 78.421875);
		Ⲇ.bezierCurveTo(57.5 * ᐃ, ᐃ * 73.421875, ᐃ * 51.5, ᐃ * 66.421875, 45.5 * ᐃ, 68.421875 * ᐃ);
		Ⲇ.bezierCurveTo(32.5 * ᐃ, 73.421875 * ᐃ, 38.5 * ᐃ, 75.421875 * ᐃ, 46.5 * ᐃ, 81.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51.5, 84.921875 * ᐃ, 51.5 * ᐃ, 84.921875 * ᐃ, ᐃ * 56.5, ᐃ * 88.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆ], ᐃᐃ[ΔᐃⵠⲆ], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116.5, 127.421875 * ᐃ);
		Ⲇ.bezierCurveTo(124.5 * ᐃ, ᐃ * 108.421875, ᐃ * 129.5, 104.421875 * ᐃ, 141.5 * ᐃ, 107.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 156.5, 112.421875 * ᐃ, 153.5 * ᐃ, ᐃ * 113.421875, 132.5 * ᐃ, 134.421875 * ᐃ);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, ᐃ * 141.921875, ᐃ * 123.5, 141.921875 * ᐃ, 114.5 * ᐃ, 149.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⲆᐃⲆᐃ], ᐃ * ⲆⵠⲆΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 41.5, 134.421875 * ᐃ);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, 119.421875 * ᐃ, 25.5 * ᐃ, ᐃ * 111.421875, 12.5 * ᐃ, ᐃ * 115.421875);
		Ⲇ.bezierCurveTo(4.5 * ᐃ, 120.421875 * ᐃ, 4.5 * ᐃ, 121.421875 * ᐃ, ᐃ * 26.5, ᐃ * 142.421875);
		Ⲇ.bezierCurveTo(35 * ᐃ, 149.921875 * ᐃ, ᐃ * 35, ᐃ * 149.921875, 43.5 * ᐃ, ᐃ * 157.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ], ᐃᐃ[2], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(78.5 * ᐃ, 51.921875 * ᐃ);
		Ⲇ.bezierCurveTo(99.5 * ᐃ, ᐃ * 75.921875, 110.5 * ᐃ, ᐃ * 96.921875, ᐃ * 118.5, ᐃ * 120.921875);
		Ⲇ.bezierCurveTo(121.5 * ᐃ, ᐃ * 140.921875, 107.5 * ᐃ, ᐃ * 179.921875, ᐃ * 75.5, 183.921875 * ᐃ);
		Ⲇ.bezierCurveTo(30.5 * ᐃ, ᐃ * 169.921875, 37.5 * ᐃ, 131.921875 * ᐃ, 34.5 * ᐃ, ᐃ * 120.921875);
		Ⲇ.bezierCurveTo(41.5 * ᐃ, 89.921875 * ᐃ, ᐃ * 61.5, ᐃ * 67.921875, 78.5 * ᐃ, 51.921875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[ΔⵠΔΔ], ᐃ * ᐃⵠⲆⲆⲆ);
		ΔⵠⲆ(Ⲇ, ᐃ * 108.5, ᐃ * 148.421875, 9 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
		ΔⵠⲆ(Ⲇ, 106.5 * ᐃ, ᐃ * 144.421875, ᐃ * 3);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		ΔⵠⲆ(Ⲇ, 46.5 * ᐃ, 148.421875 * ᐃ, 9 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		ΔⵠⲆ(Ⲇ, ᐃ * 44.5, ᐃ * 144.421875, ᐃ * 3);
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116.5, ᐃ * 114.421875);
		Ⲇ.bezierCurveTo(121.5 * ᐃ, ᐃ * 137.421875, 118.5 * ᐃ, 133.421875 * ᐃ, ᐃ * 108.5, ᐃ * 139.421875);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, ᐃ * 146.421875, ᐃ * 96.5, ᐃ * 148.421875, 95.5 * ᐃ, ᐃ * 152.421875);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃᐃΔⵠ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.translate(ΔΔⲆᐃ, ᐃ * -ⲆⲆⵠΔ);
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 35.5, 131.421875 * ᐃ);
		Ⲇ.bezierCurveTo(36.5 * ᐃ, ᐃ * 140.421875, ᐃ * 39.5, 140.421875 * ᐃ, ᐃ * 49.5, ᐃ * 143.421875);
		Ⲇ.bezierCurveTo(ᐃ * 59.5, ᐃ * 149.421875, ᐃ * 57.5, 151.421875 * ᐃ, 59.5 * ᐃ, ᐃ * 155.421875);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84.5 * ᐃ, 57.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 101.5, 120.421875 * ᐃ, 92.5 * ᐃ, 127.421875 * ᐃ, 78.5 * ᐃ, ᐃ * 134.421875);
		Ⲇ.bezierCurveTo(51.5 * ᐃ, 131.421875 * ᐃ, ᐃ * 63.5, ᐃ * 102.421875, ᐃ * 70.5, ᐃ * 59.421875);
		Ⲇ.bezierCurveTo(ᐃ * 75, ᐃ * 55.421875, ᐃ * 78.5, 52.421875 * ᐃ, 79.5 * ᐃ, 51.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(79.5 * ᐃ, ᐃ * 61.421875);
		Ⲇ.bezierCurveTo(ᐃ * 88.5, ᐃ * 31.421875, 81.5 * ᐃ, 16.421875 * ᐃ, 75.5 * ᐃ, ᐃ * 7.421875);
		Ⲇ.bezierCurveTo(ᐃ * 77.5, ᐃ * 28.421875, ᐃ * 77.5, 37.421875 * ᐃ, ᐃ * 68.5, ᐃ * 42.421875);
		Ⲇ.bezierCurveTo(79.5 * ᐃ, 57.421875 * ᐃ, 79.5 * ᐃ, ᐃ * 58.421875, 80.5 * ᐃ, 61.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(72.5 * ᐃ, 72.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 76.5, 79.421875 * ᐃ, 79.5 * ᐃ, 80.421875 * ᐃ, 83.5 * ᐃ, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.5, ᐃ * 96.921875, ᐃ * 79.5, 114.421875 * ᐃ, 77.5 * ᐃ, 120.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ], ᐃᐃ[ᐃᐃΔⵠ], ᐃ * ᐃΔᐃⲆⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(87.5 * ᐃ, 154.421875 * ᐃ);
		Ⲇ.bezierCurveTo(93.5 * ᐃ, 163.921875 * ᐃ, ᐃ * 93.5, ᐃ * 163.921875, ᐃ * 99.5, ᐃ * 173.421875);
		Ⲇ.bezierCurveTo(ᐃ * 95, ᐃ * 177.421875, ᐃ * 95, 177.421875 * ᐃ, 90.5 * ᐃ, ᐃ * 181.421875);
		Ⲇ.bezierCurveTo(ᐃ * 89, 167.921875 * ᐃ, 89 * ᐃ, 167.921875 * ᐃ, 87.5 * ᐃ, ᐃ * 154.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃΔΔⲆ], ᐃᐃ[ᐃⵠᐃⵠΔ], ⵠⲆⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(81.5 * ᐃ, ᐃ * 164.421875);
		Ⲇ.bezierCurveTo(ᐃ * 84, 172.921875 * ᐃ, 84 * ᐃ, ᐃ * 172.921875, ᐃ * 86.5, ᐃ * 181.421875);
		Ⲇ.bezierCurveTo(ᐃ * 82.5, 182.421875 * ᐃ, ᐃ * 82.5, ᐃ * 182.421875, 78.5 * ᐃ, ᐃ * 183.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃⵠᐃ], ᐃᐃ[ᐃⲆⲆΔᐃ], ᐃ * ΔⲆⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(72.5 * ᐃ, ᐃ * 164.421875);
		Ⲇ.bezierCurveTo(ᐃ * 73.5, 173.921875 * ᐃ, ᐃ * 73.5, ᐃ * 173.921875, ᐃ * 74.5, ᐃ * 183.421875);
		Ⲇ.bezierCurveTo(70.5 * ᐃ, 182.921875 * ᐃ, 70.5 * ᐃ, 182.921875 * ᐃ, 66.5 * ᐃ, ᐃ * 182.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[7], ᐃ * ⵠⵠⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(65.5 * ᐃ, 156.421875 * ᐃ);
		Ⲇ.bezierCurveTo(65 * ᐃ, 168.421875 * ᐃ, ᐃ * 65, ᐃ * 168.421875, 64.5 * ᐃ, 180.421875 * ᐃ);
		Ⲇ.bezierCurveTo(58.5 * ᐃ, ᐃ * 177.421875, 58.5 * ᐃ, 177.421875 * ᐃ, 52.5 * ᐃ, 174.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6], ᐃᐃ[ΔᐃⵠⲆⵠ], ᐃ * ⲆᐃⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(42.5 * ᐃ, 163.421875 * ᐃ);
		Ⲇ.bezierCurveTo(62.5 * ᐃ, 185.421875 * ᐃ, 86.5 * ᐃ, ᐃ * 186.421875, 111.5 * ᐃ, ᐃ * 165.421875);
		Ⲇ.bezierCurveTo(107.5 * ᐃ, ᐃ * 176.421875, ᐃ * 95.5, ᐃ * 187.421875, ᐃ * 75.5, 188.421875 * ᐃ);
		Ⲇ.bezierCurveTo(53.5 * ᐃ, 188.421875 * ᐃ, 43.5 * ᐃ, ᐃ * 171.421875, ᐃ * 42.5, ᐃ * 164.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * 4);
		return ΔΔ
	}

	function ⵠΔⲆΔⲆᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 168;
		ΔΔ.height = ᐃ * ᐃΔⵠΔᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃᐃⲆ;
		Ⲇ.translate(10 * ᐃ, ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(24.5 * ᐃ, 44.30000305175781 * ᐃ);
		ᐃΔⵠ(Ⲇ, -19.5 * ᐃ, ᐃ * -8.5, 39 * ᐃ, ᐃⵠⲆⲆᐃⵠⲆ * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, 37.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 37.80000305175781, ᐃ * 140, ᐃ * 37.80000305175781, 141 * ᐃ, 37.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 28.800003051757812, 149 * ᐃ, 26.800003051757812 * ᐃ, 153 * ᐃ, 32.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(160 * ᐃ, 42.80000305175781 * ᐃ, 157 * ᐃ, ᐃ * 50.80000305175781, 153 * ᐃ, ᐃ * 58.80000305175781);
		Ⲇ.bezierCurveTo(ᐃ * 148, 62.80000305175781 * ᐃ, 147 * ᐃ, 59.80000305175781 * ᐃ, 143 * ᐃ, 52.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(129 * ᐃ, ᐃ * 52.80000305175781, 129 * ᐃ, ᐃ * 52.80000305175781, 115 * ᐃ, ᐃ * 52.80000305175781);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ΔⵠⲆ(Ⲇ, ᐃ * 78, ᐃ * 44.80000305175781, 39.44616584663204 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃ]);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.translate(ᐃ * -10, -ᐃᐃⲆᐃΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(24.5 * ᐃ, ᐃ * 44.30000305175781);
		ᐃΔⵠ(Ⲇ, -19.5 * ᐃ, ᐃ * -8.5, ᐃ * 39, 17 * ᐃ, ᐃ * ⲆⵠΔⲆⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[3], 6 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115 * ᐃ, 37.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(142 * ᐃ, 37.80000305175781 * ᐃ, 140 * ᐃ, 37.80000305175781 * ᐃ, ᐃ * 141, ᐃ * 37.80000305175781);
		Ⲇ.bezierCurveTo(ᐃ * 147, ᐃ * 28.800003051757812, ᐃ * 149, 26.800003051757812 * ᐃ, 153 * ᐃ, ᐃ * 32.80000305175781);
		Ⲇ.bezierCurveTo(ᐃ * 160, 42.80000305175781 * ᐃ, 157 * ᐃ, 50.80000305175781 * ᐃ, 153 * ᐃ, ᐃ * 58.80000305175781);
		Ⲇ.bezierCurveTo(148 * ᐃ, 62.80000305175781 * ᐃ, 147 * ᐃ, 59.80000305175781 * ᐃ, 143 * ᐃ, 52.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(129 * ᐃ, 52.80000305175781 * ᐃ, ᐃ * 129, ᐃ * 52.80000305175781, 115 * ᐃ, 52.80000305175781 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃ * ᐃⲆᐃᐃΔ);
		ΔⵠⲆ(Ⲇ, ᐃ * 78, 44.80000305175781 * ᐃ, 42.44616584663204 * ᐃ);
		Δⵠ(Ⲇ, ΔΔⵠΔΔ, ᐃᐃ[3], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 24.5, ᐃ * 44.30000305175781);
		ᐃΔⵠ(Ⲇ, ᐃ * -19.5, -8.5 * ᐃ, ᐃ * 39, ᐃ * ⲆⲆᐃⲆⲆ, ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 115, 37.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 142, ᐃ * 37.80000305175781, 140 * ᐃ, 37.80000305175781 * ᐃ, 141 * ᐃ, 37.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(147 * ᐃ, 28.800003051757812 * ᐃ, ᐃ * 149, 26.800003051757812 * ᐃ, ᐃ * 153, 32.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(160 * ᐃ, 42.80000305175781 * ᐃ, 157 * ᐃ, 50.80000305175781 * ᐃ, 153 * ᐃ, ᐃ * 58.80000305175781);
		Ⲇ.bezierCurveTo(ᐃ * 148, 62.80000305175781 * ᐃ, ᐃ * 147, ᐃ * 59.80000305175781, ᐃ * 143, 52.80000305175781 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 129, ᐃ * 52.80000305175781, ᐃ * 129, 52.80000305175781 * ᐃ, ᐃ * 115, 52.80000305175781 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		ΔⵠⲆ(Ⲇ, 78 * ᐃ, 44.80000305175781 * ᐃ, 39.44616584663204 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ᐃ * ⵠⲆᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 78, ᐃ * 44.80000305175781, 29.68164415931166 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⵠΔ], ᐃᐃ[ΔΔᐃᐃ], ᐃ * 4);
		ΔⵠⲆ(Ⲇ, 78 * ᐃ, 44 * ᐃ, 20 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		return ΔΔ
	}

	function ΔᐃᐃᐃⲆΔⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 163 * ᐃ;
		ΔΔ.height = ᐃ * 163;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 82.5, ᐃ * 81.1015625);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -65.5, -66 * ᐃ, 131 * ᐃ, ᐃ * 131, ᐃ * ᐃᐃⲆᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆ;
		Ⲇ.translate(ᐃ * ⵠᐃᐃΔᐃ, ⲆⵠΔᐃᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(80 * ᐃ, 17.1015625 * ᐃ);
		ᐃΔⵠ(Ⲇ, -64 * ᐃ, -4.5 * ᐃ, ᐃ * 129, 9 * ᐃ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -5, ᐃ * -ⲆΔⵠᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 80, ᐃ * 17.1015625);
		ᐃΔⵠ(Ⲇ, -64 * ᐃ, -4.5 * ᐃ, ᐃ * 129, 9 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ], ᐃᐃ[ⲆⵠΔᐃ], 3 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⵠ;
		Ⲇ.translate(ᐃ * 5, 5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(145.5 * ᐃ, ᐃ * 83.6015625);
		ᐃΔⵠ(Ⲇ, -4.5 * ᐃ, -61 * ᐃ, ᐃ * 9, 129 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-5 * ᐃ, -5 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(145.5 * ᐃ, ᐃ * 83.6015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -4.5, -61 * ᐃ, ⵠΔⵠⲆⵠ * ᐃ, ᐃ * 129, ᐃ * ⲆΔⵠᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 3 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ᐃ * ⲆⲆᐃⵠ);
		Ⲇ.save();
		Ⲇ.translate(17.5 * ᐃ, 82.6015625 * ᐃ);
		ᐃΔⵠ(Ⲇ, -4.5 * ᐃ, ᐃ * -65, ΔᐃⵠΔⵠ * ᐃ, 129 * ᐃ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-5 * ᐃ, ᐃ * -5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 17.5, 82.6015625 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -4.5, -65 * ᐃ, 9 * ᐃ, 129 * ᐃ, ⵠᐃᐃΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ], ᐃᐃ[ⵠΔᐃⲆ], 3 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⲆⵠΔ;
		Ⲇ.translate(ᐃ * 5, ᐃ * Δᐃⵠⵠ);
		Ⲇ.save();
		Ⲇ.translate(80.5 * ᐃ, ᐃ * 145.6015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -65.5, ᐃ * -ᐃΔᐃΔ, 129 * ᐃ, ⲆⵠΔᐃⵠ * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -5, ᐃ * -ⲆΔⵠᐃ);
		Ⲇ.save();
		Ⲇ.translate(80.5 * ᐃ, ᐃ * 145.6015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -65.5, ᐃ * -4, 129 * ᐃ, 9 * ᐃ, ᐃᐃⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ], ᐃᐃ[ΔⵠⵠΔ], ᐃⵠⲆⲆ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⲆⲆ;
		Ⲇ.translate(5 * ᐃ, ᐃ * 5);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * ᐃⵠⲆⲆᐃⵠⲆ, ᐃ * 18.1015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -ᐃⲆⵠΔⲆⲆⵠ, -11.5 * ᐃ, ᐃ * 22, 22 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ⵠᐃᐃΔᐃ, -ⲆΔΔⵠΔ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * ⵠᐃⵠⲆⵠ, ᐃ * 18.1015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -11, ᐃ * -11.5, 22 * ᐃ, 22 * ᐃ, ⵠΔⲆⲆΔ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ⵠⵠⲆⵠΔ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ᐃ * ⲆᐃᐃΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 145.5, 16.6015625 * ᐃ);
		ᐃΔⵠ(Ⲇ, -10.5 * ᐃ, -11.5 * ᐃ, ᐃ * 21, 22 * ᐃ, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ᐃⵠⲆⲆΔ, ᐃ * -5);
		Ⲇ.save();
		Ⲇ.translate(145.5 * ᐃ, ᐃ * 16.6015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -10.5, -11.5 * ᐃ, 21 * ᐃ, 22 * ᐃ, Δᐃⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[Ⲇᐃⵠⵠ], ᐃ * ΔⲆΔⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ᐃ * ⵠᐃᐃΔᐃ);
		Ⲇ.save();
		Ⲇ.translate(145.5 * ᐃ, ᐃ * 144.1015625);
		ᐃΔⵠ(Ⲇ, -10.5 * ᐃ, -11 * ᐃ, 22 * ᐃ, ᐃ * 22, 5 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		Ⲇ.translate(ᐃ * -ΔⲆⲆΔ, -ΔⲆⲆⲆⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 145.5, ᐃ * 144.1015625);
		ᐃΔⵠ(Ⲇ, ᐃ * -10.5, ᐃ * -ΔⵠᐃⵠᐃⲆⵠ, 22 * ᐃ, 22 * ᐃ, ᐃ * ⲆΔΔⵠΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⲆⵠⵠΔ], ᐃ * ⵠⲆⲆΔ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(5 * ᐃ, ⵠⲆⲆᐃⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(17.5 * ᐃ, 145.1015625 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -11.5, -ⵠⲆᐃᐃⵠᐃᐃ * ᐃ, 22 * ᐃ, ᐃ * 22, ᐃ * ⵠΔⲆⲆΔ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.translate(ᐃ * -5, -ⵠᐃᐃΔᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 17.5, ᐃ * 145.1015625);
		ᐃΔⵠ(Ⲇ, -11.5 * ᐃ, ᐃ * -12, 22 * ᐃ, 22 * ᐃ, ᐃ * 5);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃⲆᐃΔⵠ * ᐃ);
		return ΔΔ
	}

	function ⲆⲆⵠⵠᐃᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 496;
		ΔΔ.height = ᐃ * 520;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃΔⲆⵠ;
		Ⲇ.translate(0, ᐃ * ⵠΔᐃΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 19.000030517578125, 256.67613983154297 * ᐃ);
		Ⲇ.bezierCurveTo(1.000030517578125 * ᐃ, 332.67613983154297 * ᐃ, ᐃ * 23.000030517578125, 404.67613983154297 * ᐃ, 95.00003051757812 * ᐃ, 463.67613983154297 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 128.00003051757812, 491.67613983154297 * ᐃ, 165.00003051757812 * ᐃ, 507.67613983154297 * ᐃ, ᐃ * 194.00003051757812, 512.676139831543 * ᐃ);
		Ⲇ.bezierCurveTo(280.0000305175781 * ᐃ, 517.676139831543 * ᐃ, 291.0000305175781 * ᐃ, 516.676139831543 * ᐃ, 342.0000305175781 * ᐃ, ᐃ * 497.67613983154297);
		Ⲇ.bezierCurveTo(ᐃ * 425.0000305175781, 454.67613983154297 * ᐃ, ᐃ * 469.0000305175781, 392.67613983154297 * ᐃ, 468.0000305175781 * ᐃ, ᐃ * 300.67613983154297);
		Ⲇ.bezierCurveTo(408.5000305175781 * ᐃ, 365.17613983154297 * ᐃ, 408.5000305175781 * ᐃ, 365.17613983154297 * ᐃ, ᐃ * 349.0000305175781, 429.67613983154297 * ᐃ);
		Ⲇ.bezierCurveTo(256.0000305175781 * ᐃ, 473.67613983154297 * ᐃ, ᐃ * 167.00003051757812, 459.67613983154297 * ᐃ, 78.00003051757812 * ᐃ, 384.67613983154297 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔᐃⲆΔ, ᐃ * -ⲆᐃᐃᐃⲆ);
		ΔⵠⲆ(Ⲇ, 247.01138305664062 * ᐃ, 249.3125 * ᐃ, 161.4465855941215 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[5], undefined, ᐃ * Ⲇⵠⵠⵠⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆⲆΔᐃ;
		Ⲇ.translate(ⵠⵠᐃⵠ, ⵠⵠΔⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 65.00003051757812, 263.4034118652344 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 109.00003051757812, ᐃ * 160.40341186523438, ᐃ * 185.00003051757812, 128.40341186523438 * ᐃ, 222.00003051757812 * ᐃ, ᐃ * 124.40341186523438);
		Ⲇ.bezierCurveTo(277.0000305175781 * ᐃ, 116.40341186523438 * ᐃ, ᐃ * 339.0000305175781, ᐃ * 134.40341186523438, 379.0000305175781 * ᐃ, 195.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(409.0000305175781 * ᐃ, 242.40341186523438 * ᐃ, ᐃ * 416.0000305175781, 256.4034118652344 * ᐃ, ᐃ * 428.0000305175781, 304.4034118652344 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 457.0000305175781, ᐃ * 203.40341186523438, 449.0000305175781 * ᐃ, 183.40341186523438 * ᐃ, 438.0000305175781 * ᐃ, 162.40341186523438 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 381.0000305175781, 73.40341186523438 * ᐃ, 360.0000305175781 * ᐃ, ᐃ * 66.40341186523438, 257.0000305175781 * ᐃ, ᐃ * 46.403411865234375);
		Ⲇ.bezierCurveTo(ᐃ * 191.00003051757812, ᐃ * 45.403411865234375, 142.00003051757812 * ᐃ, ᐃ * 65.40341186523438, ᐃ * 101.00003051757812, ᐃ * 115.40341186523438);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ]);
		Ⲇ.globalAlpha = 1;
		var ⵠⵠ = ᐃⵠⵠⲆᐃᐃⵠΔΔ(ᐃ, ᐃᐃ);
		Ⲇ.drawImage(ⵠⵠ, ⵠⵠⲆⲆ, 0);
		Ⲇ.translate(0, -10 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 247.01138305664062, ᐃ * 249.3125, 161.4465855941215 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⲆΔ], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ᐃⵠⵠ;
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 325.0113830566406, ᐃ * 13.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 349.5113830566406, ᐃ * 25.767059326171875, 349.5113830566406 * ᐃ, 25.767059326171875 * ᐃ, 374.0113830566406 * ᐃ, ᐃ * 37.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 384.0113830566406, ᐃ * 44.767059326171875, 383.0113830566406 * ᐃ, ᐃ * 50.767059326171875, 368.0113830566406 * ᐃ, 68.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(352.5113830566406 * ᐃ, ᐃ * 91.26705932617188, 352.5113830566406 * ᐃ, 91.26705932617188 * ᐃ, 337.0113830566406 * ᐃ, 113.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 328.0113830566406, ᐃ * 119.76705932617188, 328.0113830566406 * ᐃ, 121.76705932617188 * ᐃ, ᐃ * 312.0113830566406, ᐃ * 112.76705932617188);
		Ⲇ.bezierCurveTo(303.0113830566406 * ᐃ, 108.26705932617188 * ᐃ, 303.0113830566406 * ᐃ, 108.26705932617188 * ᐃ, ᐃ * 294.0113830566406, 103.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(287.0113830566406 * ᐃ, 99.76705932617188 * ᐃ, ᐃ * 293.0113830566406, ᐃ * 84.76705932617188, 297.0113830566406 * ᐃ, ᐃ * 67.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 302.0113830566406, 47.767059326171875 * ᐃ, ᐃ * 302.0113830566406, 47.767059326171875 * ᐃ, 307.0113830566406 * ᐃ, 27.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 310.0113830566406, 15.767059326171875 * ᐃ, ᐃ * 317.0113830566406, ᐃ * 12.767059326171875, ᐃ * 323.0113830566406, ᐃ * 13.767059326171875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[ᐃΔⵠⵠ], ᐃ * 12);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 325.0113830566406, 13.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(349.5113830566406 * ᐃ, 25.767059326171875 * ᐃ, ᐃ * 349.5113830566406, ᐃ * 25.767059326171875, ᐃ * 374.0113830566406, ᐃ * 37.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 384.0113830566406, 44.767059326171875 * ᐃ, ᐃ * 383.0113830566406, ᐃ * 50.767059326171875, ᐃ * 368.0113830566406, 68.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(352.5113830566406 * ᐃ, 91.26705932617188 * ᐃ, 352.5113830566406 * ᐃ, ᐃ * 91.26705932617188, 337.0113830566406 * ᐃ, ᐃ * 113.76705932617188);
		Ⲇ.bezierCurveTo(328.0113830566406 * ᐃ, 119.76705932617188 * ᐃ, ᐃ * 328.0113830566406, ᐃ * 121.76705932617188, ᐃ * 312.0113830566406, 112.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(303.0113830566406 * ᐃ, ᐃ * 108.26705932617188, ᐃ * 303.0113830566406, ᐃ * 108.26705932617188, ᐃ * 294.0113830566406, 103.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(287.0113830566406 * ᐃ, ᐃ * 99.76705932617188, ᐃ * 293.0113830566406, 84.76705932617188 * ᐃ, 297.0113830566406 * ᐃ, 67.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 302.0113830566406, 47.767059326171875 * ᐃ, ᐃ * 302.0113830566406, 47.767059326171875 * ᐃ, 307.0113830566406 * ᐃ, ᐃ * 27.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 310.0113830566406, ᐃ * 15.767059326171875, ᐃ * 317.0113830566406, 12.767059326171875 * ᐃ, ᐃ * 323.0113830566406, ᐃ * 13.767059326171875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠᐃᐃⵠ], ᐃ * ⵠⲆⵠⲆΔ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔⲆᐃ;
		Ⲇ.translate(ᐃΔⵠⵠ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 403.0113830566406, 89.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(413.0113830566406 * ᐃ, 76.76705932617188 * ᐃ, 418.0113830566406 * ᐃ, 79.76705932617188 * ᐃ, 428.0113830566406 * ᐃ, ᐃ * 92.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 435.0113830566406, 99.76705932617188 * ᐃ, ᐃ * 435.0113830566406, ᐃ * 99.76705932617188, ᐃ * 442.0113830566406, 106.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(450.0113830566406 * ᐃ, 116.76705932617188 * ᐃ, ᐃ * 445.0113830566406, ᐃ * 119.76705932617188, ᐃ * 433.0113830566406, ᐃ * 128.76705932617188);
		Ⲇ.bezierCurveTo(408.0113830566406 * ᐃ, 146.26705932617188 * ᐃ, 408.0113830566406 * ᐃ, 146.26705932617188 * ᐃ, 383.0113830566406 * ᐃ, 163.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 376.0113830566406, ᐃ * 166.76705932617188, ᐃ * 377.0113830566406, ᐃ * 165.76705932617188, ᐃ * 368.0113830566406, 156.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 359.0113830566406, 144.76705932617188 * ᐃ, ᐃ * 359.0113830566406, ᐃ * 142.76705932617188, ᐃ * 367.0113830566406, ᐃ * 133.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[ⵠᐃⲆᐃ], ⵠⵠᐃᐃⵠ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * -ΔⲆⵠΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(403.0113830566406 * ᐃ, ᐃ * 89.76705932617188);
		Ⲇ.bezierCurveTo(413.0113830566406 * ᐃ, ᐃ * 76.76705932617188, 418.0113830566406 * ᐃ, 79.76705932617188 * ᐃ, 428.0113830566406 * ᐃ, ᐃ * 92.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 435.0113830566406, ᐃ * 99.76705932617188, 435.0113830566406 * ᐃ, 99.76705932617188 * ᐃ, 442.0113830566406 * ᐃ, ᐃ * 106.76705932617188);
		Ⲇ.bezierCurveTo(450.0113830566406 * ᐃ, 116.76705932617188 * ᐃ, ᐃ * 445.0113830566406, 119.76705932617188 * ᐃ, 433.0113830566406 * ᐃ, ᐃ * 128.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 408.0113830566406, 146.26705932617188 * ᐃ, 408.0113830566406 * ᐃ, ᐃ * 146.26705932617188, ᐃ * 383.0113830566406, 163.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(376.0113830566406 * ᐃ, 166.76705932617188 * ᐃ, 377.0113830566406 * ᐃ, ᐃ * 165.76705932617188, 368.0113830566406 * ᐃ, ᐃ * 156.76705932617188);
		Ⲇ.bezierCurveTo(359.0113830566406 * ᐃ, 144.76705932617188 * ᐃ, 359.0113830566406 * ᐃ, ᐃ * 142.76705932617188, ᐃ * 367.0113830566406, ᐃ * 133.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆΔⲆ], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * ⲆⵠᐃⲆⲆ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ⵠⵠᐃⵠ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 228.01138305664062, ᐃ * 1.767059326171875);
		Ⲇ.bezierCurveTo(246.51138305664062 * ᐃ, ᐃ * 3.267059326171875, 246.51138305664062 * ᐃ, ᐃ * 3.267059326171875, ᐃ * 265.0113830566406, ᐃ * 4.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 273.0113830566406, 5.767059326171875 * ᐃ, 275.0113830566406 * ᐃ, ᐃ * 11.767059326171875, ᐃ * 270.0113830566406, 27.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(264.0113830566406 * ᐃ, ᐃ * 54.267059326171875, ᐃ * 264.0113830566406, ᐃ * 54.267059326171875, 258.0113830566406 * ᐃ, 80.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 256.0113830566406, 92.76705932617188 * ᐃ, ᐃ * 256.0113830566406, ᐃ * 94.76705932617188, 242.01138305664062 * ᐃ, 93.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 226.01138305664062, ᐃ * 95.76705932617188, 225.01138305664062 * ᐃ, 91.76705932617188 * ᐃ, ᐃ * 225.01138305664062, 80.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(223.51138305664062 * ᐃ, 50.267059326171875 * ᐃ, 223.51138305664062 * ᐃ, ᐃ * 50.267059326171875, ᐃ * 222.01138305664062, 19.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 219.01138305664062, ᐃ * 8.767059326171875, 224.01138305664062 * ᐃ, 4.767059326171875 * ᐃ, 227.01138305664062 * ᐃ, ᐃ * 2.767059326171875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * ᐃⵠᐃᐃΔ);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.translate(ⲆⵠⲆ, ᐃ * -ⲆᐃΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 228.01138305664062, ᐃ * 1.767059326171875);
		Ⲇ.bezierCurveTo(246.51138305664062 * ᐃ, ᐃ * 3.267059326171875, 246.51138305664062 * ᐃ, ᐃ * 3.267059326171875, ᐃ * 265.0113830566406, 4.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 273.0113830566406, ᐃ * 5.767059326171875, 275.0113830566406 * ᐃ, ᐃ * 11.767059326171875, ᐃ * 270.0113830566406, ᐃ * 27.767059326171875);
		Ⲇ.bezierCurveTo(264.0113830566406 * ᐃ, ᐃ * 54.267059326171875, 264.0113830566406 * ᐃ, 54.267059326171875 * ᐃ, 258.0113830566406 * ᐃ, 80.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(256.0113830566406 * ᐃ, 92.76705932617188 * ᐃ, ᐃ * 256.0113830566406, 94.76705932617188 * ᐃ, 242.01138305664062 * ᐃ, ᐃ * 93.76705932617188);
		Ⲇ.bezierCurveTo(226.01138305664062 * ᐃ, ᐃ * 95.76705932617188, ᐃ * 225.01138305664062, 91.76705932617188 * ᐃ, 225.01138305664062 * ᐃ, ᐃ * 80.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 223.51138305664062, ᐃ * 50.267059326171875, 223.51138305664062 * ᐃ, 50.267059326171875 * ᐃ, 222.01138305664062 * ᐃ, 19.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(219.01138305664062 * ᐃ, 8.767059326171875 * ᐃ, ᐃ * 224.01138305664062, 4.767059326171875 * ᐃ, ᐃ * 227.01138305664062, 2.767059326171875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ], ᐃᐃ[ΔᐃⵠⲆ], 12 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃⵠΔ;
		Ⲇ.translate(0, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(142.01138305664062 * ᐃ, 25.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 158.51138305664062, ᐃ * 19.767059326171875, ᐃ * 158.51138305664062, ᐃ * 19.767059326171875, 175.01138305664062 * ᐃ, 13.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(188.01138305664062 * ᐃ, ᐃ * 11.767059326171875, ᐃ * 188.01138305664062, 16.767059326171875 * ᐃ, 191.01138305664062 * ᐃ, ᐃ * 29.767059326171875);
		Ⲇ.bezierCurveTo(197.01138305664062 * ᐃ, ᐃ * 60.267059326171875, 197.01138305664062 * ᐃ, 60.267059326171875 * ᐃ, ᐃ * 203.01138305664062, ᐃ * 90.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 206.01138305664062, ᐃ * 102.76705932617188, ᐃ * 196.01138305664062, 99.76705932617188 * ᐃ, ᐃ * 181.01138305664062, ᐃ * 105.76705932617188);
		Ⲇ.bezierCurveTo(175.01138305664062 * ᐃ, 108.76705932617188 * ᐃ, 172.01138305664062 * ᐃ, 104.76705932617188 * ᐃ, 164.01138305664062 * ᐃ, 84.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 152.51138305664062, 63.267059326171875 * ᐃ, 152.51138305664062 * ᐃ, ᐃ * 63.267059326171875, ᐃ * 141.01138305664062, ᐃ * 41.767059326171875);
		Ⲇ.bezierCurveTo(138.01138305664062 * ᐃ, 35.767059326171875 * ᐃ, 138.01138305664062 * ᐃ, 29.767059326171875 * ᐃ, ᐃ * 141.01138305664062, 27.767059326171875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⵠΔ], 12 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔΔⲆᐃ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 142.01138305664062, 25.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(158.51138305664062 * ᐃ, 19.767059326171875 * ᐃ, 158.51138305664062 * ᐃ, 19.767059326171875 * ᐃ, 175.01138305664062 * ᐃ, ᐃ * 13.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 188.01138305664062, ᐃ * 11.767059326171875, ᐃ * 188.01138305664062, 16.767059326171875 * ᐃ, 191.01138305664062 * ᐃ, 29.767059326171875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 197.01138305664062, 60.267059326171875 * ᐃ, 197.01138305664062 * ᐃ, ᐃ * 60.267059326171875, 203.01138305664062 * ᐃ, 90.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206.01138305664062, 102.76705932617188 * ᐃ, 196.01138305664062 * ᐃ, 99.76705932617188 * ᐃ, 181.01138305664062 * ᐃ, ᐃ * 105.76705932617188);
		Ⲇ.bezierCurveTo(175.01138305664062 * ᐃ, 108.76705932617188 * ᐃ, ᐃ * 172.01138305664062, 104.76705932617188 * ᐃ, 164.01138305664062 * ᐃ, 84.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(152.51138305664062 * ᐃ, ᐃ * 63.267059326171875, ᐃ * 152.51138305664062, 63.267059326171875 * ᐃ, ᐃ * 141.01138305664062, ᐃ * 41.767059326171875);
		Ⲇ.bezierCurveTo(138.01138305664062 * ᐃ, 35.767059326171875 * ᐃ, ᐃ * 138.01138305664062, ᐃ * 29.767059326171875, 141.01138305664062 * ᐃ, 27.767059326171875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠⵠⲆᐃ], ⵠⲆⵠⲆΔ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ΔᐃⲆΔ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(70.01138305664062 * ᐃ, 76.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(83.01138305664062 * ᐃ, 64.26705932617188 * ᐃ, 83.01138305664062 * ᐃ, ᐃ * 64.26705932617188, 96.01138305664062 * ᐃ, ᐃ * 51.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 104.01138305664062, ᐃ * 44.767059326171875, 110.01138305664062 * ᐃ, ᐃ * 51.767059326171875, ᐃ * 119.01138305664062, 66.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(135.01138305664062 * ᐃ, ᐃ * 88.26705932617188, 135.01138305664062 * ᐃ, ᐃ * 88.26705932617188, ᐃ * 151.01138305664062, ᐃ * 109.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 157.01138305664062, ᐃ * 119.76705932617188, 153.01138305664062 * ᐃ, ᐃ * 122.76705932617188, ᐃ * 147.01138305664062, 129.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(138.01138305664062 * ᐃ, ᐃ * 140.76705932617188, ᐃ * 136.01138305664062, ᐃ * 140.76705932617188, ᐃ * 122.01138305664062, ᐃ * 127.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 99.51138305664062, 110.26705932617188 * ᐃ, ᐃ * 99.51138305664062, 110.26705932617188 * ᐃ, 77.01138305664062 * ᐃ, ᐃ * 92.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 66.01138305664062, ᐃ * 83.76705932617188, 66.01138305664062 * ᐃ, 82.76705932617188 * ᐃ, 69.01138305664062 * ᐃ, 78.76705932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆᐃⲆⲆ;
		Ⲇ.translate(ⲆⵠⲆ, -Δᐃⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 70.01138305664062, ᐃ * 76.76705932617188);
		Ⲇ.bezierCurveTo(83.01138305664062 * ᐃ, ᐃ * 64.26705932617188, ᐃ * 83.01138305664062, 64.26705932617188 * ᐃ, 96.01138305664062 * ᐃ, ᐃ * 51.767059326171875);
		Ⲇ.bezierCurveTo(ᐃ * 104.01138305664062, 44.767059326171875 * ᐃ, 110.01138305664062 * ᐃ, 51.767059326171875 * ᐃ, 119.01138305664062 * ᐃ, 66.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 135.01138305664062, 88.26705932617188 * ᐃ, ᐃ * 135.01138305664062, 88.26705932617188 * ᐃ, 151.01138305664062 * ᐃ, 109.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(157.01138305664062 * ᐃ, ᐃ * 119.76705932617188, ᐃ * 153.01138305664062, ᐃ * 122.76705932617188, ᐃ * 147.01138305664062, ᐃ * 129.76705932617188);
		Ⲇ.bezierCurveTo(138.01138305664062 * ᐃ, 140.76705932617188 * ᐃ, 136.01138305664062 * ᐃ, 140.76705932617188 * ᐃ, 122.01138305664062 * ᐃ, ᐃ * 127.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 99.51138305664062, ᐃ * 110.26705932617188, 99.51138305664062 * ᐃ, 110.26705932617188 * ᐃ, ᐃ * 77.01138305664062, 92.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 66.01138305664062, ᐃ * 83.76705932617188, ᐃ * 66.01138305664062, ᐃ * 82.76705932617188, ᐃ * 69.01138305664062, ᐃ * 78.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆΔ], ᐃᐃ[2], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔΔⲆΔ;
		Ⲇ.translate(ⵠⵠᐃⵠ, ⵠⲆⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 33.011383056640625, ᐃ * 126.76705932617188);
		Ⲇ.bezierCurveTo(22.011383056640625 * ᐃ, 149.76705932617188 * ᐃ, ᐃ * 22.011383056640625, 149.76705932617188 * ᐃ, 11.011383056640625 * ᐃ, 172.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 7.011383056640625, ᐃ * 184.76705932617188, 11.011383056640625 * ᐃ, 189.76705932617188 * ᐃ, 36.011383056640625 * ᐃ, 195.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(61.011383056640625 * ᐃ, ᐃ * 202.26705932617188, 61.011383056640625 * ᐃ, 202.26705932617188 * ᐃ, ᐃ * 86.01138305664062, ᐃ * 208.76705932617188);
		Ⲇ.bezierCurveTo(100.01138305664062 * ᐃ, ᐃ * 214.76705932617188, ᐃ * 102.01138305664062, ᐃ * 203.76705932617188, ᐃ * 109.01138305664062, 189.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(117.01138305664062 * ᐃ, 171.76705932617188 * ᐃ, 116.01138305664062 * ᐃ, 166.76705932617188 * ᐃ, ᐃ * 97.01138305664062, 156.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(74.01138305664062 * ᐃ, 140.76705932617188 * ᐃ, ᐃ * 74.01138305664062, 140.76705932617188 * ᐃ, 51.011383056640625 * ᐃ, ᐃ * 124.76705932617188);
		Ⲇ.bezierCurveTo(42.011383056640625 * ᐃ, 118.76705932617188 * ᐃ, ᐃ * 37.011383056640625, ᐃ * 119.76705932617188, ᐃ * 33.011383056640625, ᐃ * 126.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⵠⲆⲆ], 12 * ᐃ);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		Ⲇ.translate(ΔⵠⲆⲆ, ᐃ * -5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(33.011383056640625 * ᐃ, 126.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 22.011383056640625, 149.76705932617188 * ᐃ, 22.011383056640625 * ᐃ, ᐃ * 149.76705932617188, 11.011383056640625 * ᐃ, 172.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(7.011383056640625 * ᐃ, 184.76705932617188 * ᐃ, 11.011383056640625 * ᐃ, 189.76705932617188 * ᐃ, ᐃ * 36.011383056640625, 195.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61.011383056640625, ᐃ * 202.26705932617188, ᐃ * 61.011383056640625, 202.26705932617188 * ᐃ, ᐃ * 86.01138305664062, ᐃ * 208.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 100.01138305664062, 214.76705932617188 * ᐃ, ᐃ * 102.01138305664062, ᐃ * 203.76705932617188, 109.01138305664062 * ᐃ, 189.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 117.01138305664062, ᐃ * 171.76705932617188, ᐃ * 116.01138305664062, 166.76705932617188 * ᐃ, ᐃ * 97.01138305664062, 156.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74.01138305664062, 140.76705932617188 * ᐃ, 74.01138305664062 * ᐃ, 140.76705932617188 * ᐃ, ᐃ * 51.011383056640625, 124.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 42.011383056640625, 118.76705932617188 * ᐃ, 37.011383056640625 * ᐃ, 119.76705932617188 * ᐃ, ᐃ * 33.011383056640625, 126.76705932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * ⲆΔⵠⵠⲆᐃΔ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆΔⵠⲆ;
		Ⲇ.translate(0, ⲆᐃᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 13.011383056640625, 229.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(45.511383056640625 * ᐃ, 233.76705932617188 * ᐃ, 45.511383056640625 * ᐃ, 233.76705932617188 * ᐃ, 78.01138305664062 * ᐃ, ᐃ * 237.76705932617188);
		Ⲇ.bezierCurveTo(92.01138305664062 * ᐃ, ᐃ * 239.76705932617188, ᐃ * 92.01138305664062, 246.76705932617188 * ᐃ, 91.01138305664062 * ᐃ, ᐃ * 257.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 92.01138305664062, ᐃ * 275.7670593261719, ᐃ * 91.01138305664062, 274.7670593261719 * ᐃ, 68.01138305664062 * ᐃ, ᐃ * 276.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 42.511383056640625, ᐃ * 279.7670593261719, 42.511383056640625 * ᐃ, ᐃ * 279.7670593261719, ᐃ * 17.011383056640625, 282.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(2.011383056640625 * ᐃ, 282.7670593261719 * ᐃ, ᐃ * 3.011383056640625, 276.7670593261719 * ᐃ, 2.011383056640625 * ᐃ, 260.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(2.011383056640625 * ᐃ, ᐃ * 231.76705932617188, 4.011383056640625 * ᐃ, ᐃ * 232.76705932617188, 11.011383056640625 * ᐃ, 230.76705932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ], ᐃᐃ[0], 12 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔᐃⲆΔ, -ⲆΔΔⵠΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(13.011383056640625 * ᐃ, 229.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(45.511383056640625 * ᐃ, ᐃ * 233.76705932617188, 45.511383056640625 * ᐃ, ᐃ * 233.76705932617188, 78.01138305664062 * ᐃ, ᐃ * 237.76705932617188);
		Ⲇ.bezierCurveTo(92.01138305664062 * ᐃ, 239.76705932617188 * ᐃ, 92.01138305664062 * ᐃ, 246.76705932617188 * ᐃ, ᐃ * 91.01138305664062, 257.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92.01138305664062, 275.7670593261719 * ᐃ, ᐃ * 91.01138305664062, 274.7670593261719 * ᐃ, ᐃ * 68.01138305664062, 276.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 42.511383056640625, ᐃ * 279.7670593261719, ᐃ * 42.511383056640625, ᐃ * 279.7670593261719, ᐃ * 17.011383056640625, 282.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 2.011383056640625, ᐃ * 282.7670593261719, 3.011383056640625 * ᐃ, ᐃ * 276.7670593261719, ᐃ * 2.011383056640625, ᐃ * 260.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 2.011383056640625, 231.76705932617188 * ᐃ, ᐃ * 4.011383056640625, ᐃ * 232.76705932617188, 11.011383056640625 * ᐃ, ᐃ * 230.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ⵠⲆΔΔ], ⵠᐃⲆᐃⵠ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(97.01138305664062 * ᐃ, ᐃ * 329.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 68.51138305664062, ᐃ * 343.7670593261719, 68.51138305664062 * ᐃ, ᐃ * 343.7670593261719, ᐃ * 40.011383056640625, ᐃ * 357.7670593261719);
		Ⲇ.bezierCurveTo(29.011383056640625 * ᐃ, 360.7670593261719 * ᐃ, ᐃ * 27.011383056640625, ᐃ * 361.7670593261719, 20.011383056640625 * ᐃ, ᐃ * 346.7670593261719);
		Ⲇ.bezierCurveTo(16.511383056640625 * ᐃ, ᐃ * 336.2670593261719, 16.511383056640625 * ᐃ, 336.2670593261719 * ᐃ, ᐃ * 13.011383056640625, ᐃ * 325.7670593261719);
		Ⲇ.bezierCurveTo(10.011383056640625 * ᐃ, ᐃ * 307.7670593261719, ᐃ * 18.011383056640625, 312.7670593261719 * ᐃ, 34.011383056640625 * ᐃ, 306.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59.511383056640625, 302.2670593261719 * ᐃ, ᐃ * 59.511383056640625, ᐃ * 302.2670593261719, ᐃ * 85.01138305664062, 297.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97.01138305664062, ᐃ * 294.7670593261719, ᐃ * 100.01138305664062, ᐃ * 297.7670593261719, 100.01138305664062 * ᐃ, ᐃ * 307.7670593261719);
		Ⲇ.bezierCurveTo(105.01138305664062 * ᐃ, ᐃ * 326.7670593261719, 103.01138305664062 * ᐃ, ᐃ * 325.7670593261719, ᐃ * 97.01138305664062, ᐃ * 329.7670593261719);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆⲆ], ᐃᐃ[0], ⲆᐃᐃⲆΔ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔⲆᐃⲆ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 97.01138305664062, 329.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 68.51138305664062, 343.7670593261719 * ᐃ, 68.51138305664062 * ᐃ, ᐃ * 343.7670593261719, ᐃ * 40.011383056640625, 357.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(29.011383056640625 * ᐃ, ᐃ * 360.7670593261719, ᐃ * 27.011383056640625, 361.7670593261719 * ᐃ, 20.011383056640625 * ᐃ, 346.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 16.511383056640625, 336.2670593261719 * ᐃ, 16.511383056640625 * ᐃ, ᐃ * 336.2670593261719, 13.011383056640625 * ᐃ, ᐃ * 325.7670593261719);
		Ⲇ.bezierCurveTo(10.011383056640625 * ᐃ, ᐃ * 307.7670593261719, ᐃ * 18.011383056640625, ᐃ * 312.7670593261719, ᐃ * 34.011383056640625, ᐃ * 306.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 59.511383056640625, 302.2670593261719 * ᐃ, 59.511383056640625 * ᐃ, 302.2670593261719 * ᐃ, 85.01138305664062 * ᐃ, ᐃ * 297.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 97.01138305664062, 294.7670593261719 * ᐃ, ᐃ * 100.01138305664062, ᐃ * 297.7670593261719, 100.01138305664062 * ᐃ, ᐃ * 307.7670593261719);
		Ⲇ.bezierCurveTo(105.01138305664062 * ᐃ, 326.7670593261719 * ᐃ, 103.01138305664062 * ᐃ, 325.7670593261719 * ᐃ, ᐃ * 97.01138305664062, ᐃ * 329.7670593261719);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[2], 12 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆΔ;
		Ⲇ.translate(ⲆΔᐃ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(394.0113830566406 * ᐃ, ᐃ * 181.76705932617188);
		Ⲇ.bezierCurveTo(426.5113830566406 * ᐃ, 166.76705932617188 * ᐃ, 426.5113830566406 * ᐃ, 166.76705932617188 * ᐃ, ᐃ * 459.0113830566406, 151.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 469.0113830566406, 152.76705932617188 * ᐃ, 469.0113830566406 * ᐃ, 155.76705932617188 * ᐃ, 472.0113830566406 * ᐃ, 165.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(476.0113830566406 * ᐃ, ᐃ * 177.26705932617188, ᐃ * 476.0113830566406, ᐃ * 177.26705932617188, 480.0113830566406 * ᐃ, 188.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(483.0113830566406 * ᐃ, 199.76705932617188 * ᐃ, 480.0113830566406 * ᐃ, ᐃ * 200.76705932617188, ᐃ * 460.0113830566406, ᐃ * 205.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 433.5113830566406, ᐃ * 210.26705932617188, 433.5113830566406 * ᐃ, ᐃ * 210.26705932617188, 407.0113830566406 * ᐃ, 214.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 395.0113830566406, ᐃ * 218.76705932617188, 397.0113830566406 * ᐃ, ᐃ * 211.76705932617188, 393.0113830566406 * ᐃ, ᐃ * 202.76705932617188);
		Ⲇ.bezierCurveTo(387.0113830566406 * ᐃ, 188.76705932617188 * ᐃ, ᐃ * 387.0113830566406, ᐃ * 187.76705932617188, ᐃ * 394.0113830566406, ᐃ * 181.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ⵠⵠᐃᐃⵠ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ΔᐃⲆΔ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 394.0113830566406, 181.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 426.5113830566406, 166.76705932617188 * ᐃ, ᐃ * 426.5113830566406, ᐃ * 166.76705932617188, ᐃ * 459.0113830566406, 151.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(469.0113830566406 * ᐃ, ᐃ * 152.76705932617188, 469.0113830566406 * ᐃ, ᐃ * 155.76705932617188, 472.0113830566406 * ᐃ, ᐃ * 165.76705932617188);
		Ⲇ.bezierCurveTo(476.0113830566406 * ᐃ, 177.26705932617188 * ᐃ, 476.0113830566406 * ᐃ, ᐃ * 177.26705932617188, 480.0113830566406 * ᐃ, ᐃ * 188.76705932617188);
		Ⲇ.bezierCurveTo(483.0113830566406 * ᐃ, ᐃ * 199.76705932617188, ᐃ * 480.0113830566406, 200.76705932617188 * ᐃ, 460.0113830566406 * ᐃ, 205.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(433.5113830566406 * ᐃ, 210.26705932617188 * ᐃ, ᐃ * 433.5113830566406, ᐃ * 210.26705932617188, 407.0113830566406 * ᐃ, 214.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 395.0113830566406, ᐃ * 218.76705932617188, 397.0113830566406 * ᐃ, ᐃ * 211.76705932617188, 393.0113830566406 * ᐃ, ᐃ * 202.76705932617188);
		Ⲇ.bezierCurveTo(387.0113830566406 * ᐃ, 188.76705932617188 * ᐃ, 387.0113830566406 * ᐃ, 187.76705932617188 * ᐃ, ᐃ * 394.0113830566406, 181.76705932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆᐃᐃ], ᐃᐃ[2], Ⲇⵠⵠⵠⵠ * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ΔⵠⲆΔ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(411.0113830566406 * ᐃ, 234.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 446.0113830566406, 233.26705932617188 * ᐃ, 446.0113830566406 * ᐃ, ᐃ * 233.26705932617188, 481.0113830566406 * ᐃ, ᐃ * 231.76705932617188);
		Ⲇ.bezierCurveTo(491.0113830566406 * ᐃ, 232.76705932617188 * ᐃ, 493.0113830566406 * ᐃ, ᐃ * 239.76705932617188, 491.0113830566406 * ᐃ, ᐃ * 251.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 490.0113830566406, ᐃ * 263.7670593261719, 490.0113830566406 * ᐃ, ᐃ * 263.7670593261719, 489.0113830566406 * ᐃ, ᐃ * 275.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 487.0113830566406, 283.7670593261719 * ᐃ, ᐃ * 483.0113830566406, 284.7670593261719 * ᐃ, 464.0113830566406 * ᐃ, 280.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(437.0113830566406 * ᐃ, 273.7670593261719 * ᐃ, 437.0113830566406 * ᐃ, 273.7670593261719 * ᐃ, 410.0113830566406 * ᐃ, ᐃ * 266.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 400.0113830566406, ᐃ * 261.7670593261719, 401.0113830566406 * ᐃ, ᐃ * 259.7670593261719, 402.0113830566406 * ᐃ, 249.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 401.0113830566406, ᐃ * 237.76705932617188, 403.0113830566406 * ᐃ, 235.76705932617188 * ᐃ, 408.0113830566406 * ᐃ, 234.76705932617188 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃ[0], ᐃ * ⲆᐃᐃⲆΔ);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.translate(0, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(411.0113830566406 * ᐃ, ᐃ * 234.76705932617188);
		Ⲇ.bezierCurveTo(446.0113830566406 * ᐃ, 233.26705932617188 * ᐃ, ᐃ * 446.0113830566406, 233.26705932617188 * ᐃ, ᐃ * 481.0113830566406, ᐃ * 231.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 491.0113830566406, 232.76705932617188 * ᐃ, ᐃ * 493.0113830566406, 239.76705932617188 * ᐃ, ᐃ * 491.0113830566406, 251.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 490.0113830566406, 263.7670593261719 * ᐃ, 490.0113830566406 * ᐃ, 263.7670593261719 * ᐃ, 489.0113830566406 * ᐃ, 275.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 487.0113830566406, 283.7670593261719 * ᐃ, ᐃ * 483.0113830566406, 284.7670593261719 * ᐃ, ᐃ * 464.0113830566406, 280.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(437.0113830566406 * ᐃ, 273.7670593261719 * ᐃ, ᐃ * 437.0113830566406, 273.7670593261719 * ᐃ, 410.0113830566406 * ᐃ, 266.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(400.0113830566406 * ᐃ, 261.7670593261719 * ᐃ, 401.0113830566406 * ᐃ, 259.7670593261719 * ᐃ, 402.0113830566406 * ᐃ, ᐃ * 249.76705932617188);
		Ⲇ.bezierCurveTo(ᐃ * 401.0113830566406, 237.76705932617188 * ᐃ, 403.0113830566406 * ᐃ, ᐃ * 235.76705932617188, ᐃ * 408.0113830566406, ᐃ * 234.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔΔᐃ], ᐃᐃ[2], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(Ⲇᐃⵠᐃ, ᐃ * ⲆΔᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 400.0113830566406, 290.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 437.0113830566406, ᐃ * 301.2670593261719, 437.0113830566406 * ᐃ, ᐃ * 301.2670593261719, ᐃ * 474.0113830566406, ᐃ * 311.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 484.0113830566406, ᐃ * 319.7670593261719, ᐃ * 481.0113830566406, 322.7670593261719 * ᐃ, 474.0113830566406 * ᐃ, ᐃ * 335.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 465.5113830566406, 354.7670593261719 * ᐃ, 465.5113830566406 * ᐃ, ᐃ * 354.7670593261719, ᐃ * 457.0113830566406, ᐃ * 373.7670593261719);
		Ⲇ.bezierCurveTo(449.0113830566406 * ᐃ, 386.7670593261719 * ᐃ, 444.0113830566406 * ᐃ, ᐃ * 384.7670593261719, 427.0113830566406 * ᐃ, 370.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 403.0113830566406, ᐃ * 354.7670593261719, 403.0113830566406 * ᐃ, ᐃ * 354.7670593261719, 379.0113830566406 * ᐃ, ᐃ * 338.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 371.0113830566406, 327.7670593261719 * ᐃ, 373.0113830566406 * ᐃ, 323.7670593261719 * ᐃ, 377.0113830566406 * ᐃ, 313.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 386.0113830566406, ᐃ * 292.7670593261719, ᐃ * 393.0113830566406, 288.7670593261719 * ᐃ, 398.0113830566406 * ᐃ, 291.7670593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[ⵠᐃⲆᐃ], 12 * ᐃ);
		Ⲇ.globalAlpha = ᐃⵠⵠ;
		Ⲇ.translate(ᐃΔⵠⵠ, ᐃ * -ⲆΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(400.0113830566406 * ᐃ, ᐃ * 290.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 437.0113830566406, 301.2670593261719 * ᐃ, ᐃ * 437.0113830566406, 301.2670593261719 * ᐃ, 474.0113830566406 * ᐃ, 311.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(484.0113830566406 * ᐃ, ᐃ * 319.7670593261719, ᐃ * 481.0113830566406, 322.7670593261719 * ᐃ, ᐃ * 474.0113830566406, ᐃ * 335.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 465.5113830566406, ᐃ * 354.7670593261719, 465.5113830566406 * ᐃ, ᐃ * 354.7670593261719, 457.0113830566406 * ᐃ, ᐃ * 373.7670593261719);
		Ⲇ.bezierCurveTo(449.0113830566406 * ᐃ, ᐃ * 386.7670593261719, ᐃ * 444.0113830566406, 384.7670593261719 * ᐃ, ᐃ * 427.0113830566406, ᐃ * 370.7670593261719);
		Ⲇ.bezierCurveTo(403.0113830566406 * ᐃ, 354.7670593261719 * ᐃ, 403.0113830566406 * ᐃ, ᐃ * 354.7670593261719, ᐃ * 379.0113830566406, ᐃ * 338.7670593261719);
		Ⲇ.bezierCurveTo(ᐃ * 371.0113830566406, ᐃ * 327.7670593261719, 373.0113830566406 * ᐃ, 323.7670593261719 * ᐃ, ᐃ * 377.0113830566406, 313.7670593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 386.0113830566406, 292.7670593261719 * ᐃ, ᐃ * 393.0113830566406, 288.7670593261719 * ᐃ, 398.0113830566406 * ᐃ, 291.7670593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * ⵠⵠᐃᐃⵠ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ΔⲆᐃⲆ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(366.0113830566406 * ᐃ, 361.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(393.0113830566406 * ᐃ, 383.2216033935547 * ᐃ, ᐃ * 393.0113830566406, 383.2216033935547 * ᐃ, 420.0113830566406 * ᐃ, 405.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 427.0113830566406, ᐃ * 414.2216033935547, ᐃ * 425.0113830566406, ᐃ * 417.2216033935547, ᐃ * 413.0113830566406, 428.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(405.5113830566406 * ᐃ, 435.2216033935547 * ᐃ, ᐃ * 405.5113830566406, ᐃ * 435.2216033935547, ᐃ * 398.0113830566406, ᐃ * 442.2216033935547);
		Ⲇ.bezierCurveTo(388.0113830566406 * ᐃ, ᐃ * 451.2216033935547, ᐃ * 385.0113830566406, ᐃ * 445.2216033935547, ᐃ * 373.0113830566406, ᐃ * 428.2216033935547);
		Ⲇ.bezierCurveTo(358.5113830566406 * ᐃ, ᐃ * 408.2216033935547, ᐃ * 358.5113830566406, 408.2216033935547 * ᐃ, 344.0113830566406 * ᐃ, 388.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(337.0113830566406 * ᐃ, 378.2216033935547 * ᐃ, 342.0113830566406 * ᐃ, ᐃ * 377.2216033935547, ᐃ * 347.0113830566406, 371.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(359.0113830566406 * ᐃ, 359.2216033935547 * ᐃ, ᐃ * 361.0113830566406, 358.2216033935547 * ᐃ, ᐃ * 364.0113830566406, 361.2216033935547 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔᐃ], ᐃ * ⵠⲆᐃᐃⵠᐃᐃ);
		Ⲇ.globalAlpha = ᐃⲆⵠΔ;
		Ⲇ.translate(0, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(366.0113830566406 * ᐃ, ᐃ * 361.2216033935547);
		Ⲇ.bezierCurveTo(393.0113830566406 * ᐃ, ᐃ * 383.2216033935547, ᐃ * 393.0113830566406, ᐃ * 383.2216033935547, 420.0113830566406 * ᐃ, 405.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(427.0113830566406 * ᐃ, 414.2216033935547 * ᐃ, 425.0113830566406 * ᐃ, ᐃ * 417.2216033935547, ᐃ * 413.0113830566406, 428.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(405.5113830566406 * ᐃ, ᐃ * 435.2216033935547, 405.5113830566406 * ᐃ, ᐃ * 435.2216033935547, ᐃ * 398.0113830566406, ᐃ * 442.2216033935547);
		Ⲇ.bezierCurveTo(388.0113830566406 * ᐃ, 451.2216033935547 * ᐃ, 385.0113830566406 * ᐃ, 445.2216033935547 * ᐃ, ᐃ * 373.0113830566406, ᐃ * 428.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 358.5113830566406, 408.2216033935547 * ᐃ, 358.5113830566406 * ᐃ, 408.2216033935547 * ᐃ, 344.0113830566406 * ᐃ, ᐃ * 388.2216033935547);
		Ⲇ.bezierCurveTo(337.0113830566406 * ᐃ, ᐃ * 378.2216033935547, 342.0113830566406 * ᐃ, ᐃ * 377.2216033935547, ᐃ * 347.0113830566406, ᐃ * 371.2216033935547);
		Ⲇ.bezierCurveTo(359.0113830566406 * ᐃ, 359.2216033935547 * ᐃ, 361.0113830566406 * ᐃ, 358.2216033935547 * ᐃ, 364.0113830566406 * ᐃ, ᐃ * 361.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃΔ], ᐃᐃ[2], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠⵠⲆΔ;
		Ⲇ.translate(0, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(323.0113830566406 * ᐃ, 393.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 338.0113830566406, 424.7216033935547 * ᐃ, 338.0113830566406 * ᐃ, 424.7216033935547 * ᐃ, 353.0113830566406 * ᐃ, ᐃ * 456.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 355.0113830566406, 467.2216033935547 * ᐃ, 354.0113830566406 * ᐃ, 469.2216033935547 * ᐃ, ᐃ * 336.0113830566406, 475.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(326.0113830566406 * ᐃ, ᐃ * 478.2216033935547, 326.0113830566406 * ᐃ, 478.2216033935547 * ᐃ, 316.0113830566406 * ᐃ, ᐃ * 481.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 304.0113830566406, 484.2216033935547 * ᐃ, ᐃ * 304.0113830566406, 477.2216033935547 * ᐃ, 301.0113830566406 * ᐃ, 454.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 295.5113830566406, ᐃ * 429.2216033935547, ᐃ * 295.5113830566406, ᐃ * 429.2216033935547, 290.0113830566406 * ᐃ, ᐃ * 404.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 287.0113830566406, 396.2216033935547 * ᐃ, ᐃ * 297.0113830566406, ᐃ * 394.2216033935547, ᐃ * 303.0113830566406, 392.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(316.0113830566406 * ᐃ, 387.2216033935547 * ᐃ, 318.0113830566406 * ᐃ, ᐃ * 387.2216033935547, ᐃ * 323.0113830566406, ᐃ * 394.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⲆ], ᐃᐃ[ⵠⲆⲆᐃ], ᐃ * 12);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃΔⵠⵠ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(323.0113830566406 * ᐃ, ᐃ * 393.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 338.0113830566406, ᐃ * 424.7216033935547, 338.0113830566406 * ᐃ, 424.7216033935547 * ᐃ, ᐃ * 353.0113830566406, 456.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 355.0113830566406, ᐃ * 467.2216033935547, 354.0113830566406 * ᐃ, ᐃ * 469.2216033935547, 336.0113830566406 * ᐃ, ᐃ * 475.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 326.0113830566406, ᐃ * 478.2216033935547, ᐃ * 326.0113830566406, 478.2216033935547 * ᐃ, 316.0113830566406 * ᐃ, ᐃ * 481.2216033935547);
		Ⲇ.bezierCurveTo(304.0113830566406 * ᐃ, 484.2216033935547 * ᐃ, ᐃ * 304.0113830566406, 477.2216033935547 * ᐃ, ᐃ * 301.0113830566406, ᐃ * 454.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 295.5113830566406, ᐃ * 429.2216033935547, 295.5113830566406 * ᐃ, 429.2216033935547 * ᐃ, ᐃ * 290.0113830566406, ᐃ * 404.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 287.0113830566406, 396.2216033935547 * ᐃ, 297.0113830566406 * ᐃ, ᐃ * 394.2216033935547, ᐃ * 303.0113830566406, 392.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 316.0113830566406, 387.2216033935547 * ᐃ, 318.0113830566406 * ᐃ, ᐃ * 387.2216033935547, ᐃ * 323.0113830566406, ᐃ * 394.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆⲆ], ᐃᐃ[2], ᐃ * 12);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(Ⲇᐃⵠᐃ, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 270.0113830566406, 413.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 271.0113830566406, 445.7216033935547 * ᐃ, 271.0113830566406 * ᐃ, 445.7216033935547 * ᐃ, ᐃ * 272.0113830566406, 478.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 273.0113830566406, 490.2216033935547 * ᐃ, ᐃ * 267.0113830566406, 493.2216033935547 * ᐃ, ᐃ * 249.01138305664062, 490.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 222.01138305664062, 492.2216033935547 * ᐃ, 220.01138305664062 * ᐃ, ᐃ * 485.2216033935547, ᐃ * 225.01138305664062, ᐃ * 467.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 230.51138305664062, ᐃ * 440.2216033935547, ᐃ * 230.51138305664062, 440.2216033935547 * ᐃ, ᐃ * 236.01138305664062, ᐃ * 413.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 237.01138305664062, ᐃ * 405.2216033935547, ᐃ * 238.01138305664062, 404.2216033935547 * ᐃ, 253.01138305664062 * ᐃ, ᐃ * 403.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 269.0113830566406, ᐃ * 405.2216033935547, 270.0113830566406 * ᐃ, 407.2216033935547 * ᐃ, ᐃ * 269.0113830566406, ᐃ * 412.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ], ᐃᐃ[0], ⵠⵠᐃᐃⵠ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(Ⲇᐃⵠᐃ, -5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 270.0113830566406, 413.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 271.0113830566406, 445.7216033935547 * ᐃ, ᐃ * 271.0113830566406, ᐃ * 445.7216033935547, 272.0113830566406 * ᐃ, 478.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(273.0113830566406 * ᐃ, 490.2216033935547 * ᐃ, ᐃ * 267.0113830566406, 493.2216033935547 * ᐃ, ᐃ * 249.01138305664062, ᐃ * 490.2216033935547);
		Ⲇ.bezierCurveTo(222.01138305664062 * ᐃ, ᐃ * 492.2216033935547, ᐃ * 220.01138305664062, ᐃ * 485.2216033935547, 225.01138305664062 * ᐃ, ᐃ * 467.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 230.51138305664062, ᐃ * 440.2216033935547, 230.51138305664062 * ᐃ, ᐃ * 440.2216033935547, ᐃ * 236.01138305664062, 413.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 237.01138305664062, 405.2216033935547 * ᐃ, 238.01138305664062 * ᐃ, ᐃ * 404.2216033935547, ᐃ * 253.01138305664062, ᐃ * 403.2216033935547);
		Ⲇ.bezierCurveTo(269.0113830566406 * ᐃ, ᐃ * 405.2216033935547, ᐃ * 270.0113830566406, 407.2216033935547 * ᐃ, ᐃ * 269.0113830566406, ᐃ * 412.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃᐃ[2], 12 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⵠᐃΔᐃ;
		Ⲇ.translate(ⵠᐃⲆᐃ, 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 207.01138305664062, ᐃ * 406.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 197.51138305664062, ᐃ * 440.7216033935547, 197.51138305664062 * ᐃ, ᐃ * 440.7216033935547, ᐃ * 188.01138305664062, ᐃ * 475.2216033935547);
		Ⲇ.bezierCurveTo(184.01138305664062 * ᐃ, ᐃ * 485.2216033935547, ᐃ * 179.01138305664062, ᐃ * 491.2216033935547, ᐃ * 152.01138305664062, 477.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(136.51138305664062 * ᐃ, 469.7216033935547 * ᐃ, ᐃ * 136.51138305664062, ᐃ * 469.7216033935547, 121.01138305664062 * ᐃ, ᐃ * 462.2216033935547);
		Ⲇ.bezierCurveTo(109.01138305664062 * ᐃ, 453.2216033935547 * ᐃ, ᐃ * 117.01138305664062, ᐃ * 447.2216033935547, ᐃ * 133.01138305664062, 427.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146.51138305664062, ᐃ * 406.7216033935547, 146.51138305664062 * ᐃ, 406.7216033935547 * ᐃ, ᐃ * 160.01138305664062, 386.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(163.01138305664062 * ᐃ, ᐃ * 377.2216033935547, 168.01138305664062 * ᐃ, ᐃ * 378.2216033935547, 187.01138305664062 * ᐃ, ᐃ * 387.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 206.01138305664062, ᐃ * 395.2216033935547, ᐃ * 208.01138305664062, ᐃ * 398.2216033935547, 207.01138305664062 * ᐃ, 405.2216033935547 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * ⲆⵠⲆⵠⵠⲆⲆ);
		Ⲇ.globalAlpha = ⲆᐃⲆⲆ;
		Ⲇ.translate(ᐃⵠΔ, -ⲆᐃΔΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(207.01138305664062 * ᐃ, ᐃ * 406.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 197.51138305664062, 440.7216033935547 * ᐃ, 197.51138305664062 * ᐃ, ᐃ * 440.7216033935547, 188.01138305664062 * ᐃ, 475.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(184.01138305664062 * ᐃ, 485.2216033935547 * ᐃ, ᐃ * 179.01138305664062, ᐃ * 491.2216033935547, 152.01138305664062 * ᐃ, ᐃ * 477.2216033935547);
		Ⲇ.bezierCurveTo(136.51138305664062 * ᐃ, ᐃ * 469.7216033935547, 136.51138305664062 * ᐃ, ᐃ * 469.7216033935547, ᐃ * 121.01138305664062, ᐃ * 462.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 109.01138305664062, 453.2216033935547 * ᐃ, 117.01138305664062 * ᐃ, 447.2216033935547 * ᐃ, ᐃ * 133.01138305664062, 427.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 146.51138305664062, 406.7216033935547 * ᐃ, 146.51138305664062 * ᐃ, 406.7216033935547 * ᐃ, ᐃ * 160.01138305664062, 386.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 163.01138305664062, 377.2216033935547 * ᐃ, 168.01138305664062 * ᐃ, 378.2216033935547 * ᐃ, 187.01138305664062 * ᐃ, 387.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 206.01138305664062, 395.2216033935547 * ᐃ, 208.01138305664062 * ᐃ, ᐃ * 398.2216033935547, ᐃ * 207.01138305664062, ᐃ * 405.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[ΔᐃⵠⲆ], 12 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ΔΔᐃ, ᐃ * ΔᐃΔΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.01138305664062 * ᐃ, ᐃ * 375.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 109.51138305664062, ᐃ * 400.7216033935547, 109.51138305664062 * ᐃ, 400.7216033935547 * ᐃ, 89.01138305664062 * ᐃ, ᐃ * 426.2216033935547);
		Ⲇ.bezierCurveTo(ᐃ * 82.01138305664062, ᐃ * 435.2216033935547, 77.01138305664062 * ᐃ, 435.2216033935547 * ᐃ, ᐃ * 62.011383056640625, 417.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(43.011383056640625 * ᐃ, ᐃ * 397.2216033935547, 47.011383056640625 * ᐃ, 395.2216033935547 * ᐃ, 62.011383056640625 * ᐃ, 382.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(84.01138305664062 * ᐃ, ᐃ * 366.7216033935547, 84.01138305664062 * ᐃ, ᐃ * 366.7216033935547, 106.01138305664062 * ᐃ, 351.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(116.01138305664062 * ᐃ, ᐃ * 344.2216033935547, 120.01138305664062 * ᐃ, 347.2216033935547 * ᐃ, 127.01138305664062 * ᐃ, 356.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(137.01138305664062 * ᐃ, ᐃ * 366.2216033935547, ᐃ * 137.01138305664062, 366.2216033935547 * ᐃ, 131.01138305664062 * ᐃ, ᐃ * 376.2216033935547);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃⵠΔ], ᐃ * ΔΔᐃⵠΔΔⵠ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ⵠⵠⲆⲆ, -ΔᐃΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(130.01138305664062 * ᐃ, 375.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 109.51138305664062, 400.7216033935547 * ᐃ, 109.51138305664062 * ᐃ, ᐃ * 400.7216033935547, ᐃ * 89.01138305664062, 426.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(82.01138305664062 * ᐃ, ᐃ * 435.2216033935547, 77.01138305664062 * ᐃ, 435.2216033935547 * ᐃ, 62.011383056640625 * ᐃ, 417.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(43.011383056640625 * ᐃ, ᐃ * 397.2216033935547, 47.011383056640625 * ᐃ, ᐃ * 395.2216033935547, 62.011383056640625 * ᐃ, 382.2216033935547 * ᐃ);
		Ⲇ.bezierCurveTo(84.01138305664062 * ᐃ, 366.7216033935547 * ᐃ, ᐃ * 84.01138305664062, ᐃ * 366.7216033935547, ᐃ * 106.01138305664062, ᐃ * 351.2216033935547);
		Ⲇ.bezierCurveTo(116.01138305664062 * ᐃ, 344.2216033935547 * ᐃ, ᐃ * 120.01138305664062, 347.2216033935547 * ᐃ, ᐃ * 127.01138305664062, ᐃ * 356.2216033935547);
		Ⲇ.bezierCurveTo(137.01138305664062 * ᐃ, 366.2216033935547 * ᐃ, 137.01138305664062 * ᐃ, ᐃ * 366.2216033935547, ᐃ * 131.01138305664062, 376.2216033935547 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔᐃⲆⵠ], ᐃᐃ[2], 12 * ᐃ);
		return ΔΔ
	}

	function ᐃⲆⲆⵠΔΔⲆ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃ * 600;
		var ΔᐃⲆ = 22 * ᐃ;
		var Δᐃᐃ = ΔⲆΔⲆ * ᐃ;
		var ⵠⲆΔΔΔ = ᐃ * ᐃΔᐃΔ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		ᐃΔⵠ(Ⲇ, ᐃ * 5, 5 * ᐃ, ᐃᐃⲆ - ⲆᐃᐃᐃⲆ * ᐃ, ΔᐃⲆ - 10 * ᐃ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#BBE8EF", ⵠⲆΔΔΔ);
		return ΔΔ
	}

	function ᐃΔⲆΔⲆᐃᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 400;
		ΔΔ.height = ᐃ * 170;
		Ⲇ.translate(ⲆⵠⲆ, ᐃ * -170);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(159.5 * ᐃ, 322.0625 * ᐃ);
		Ⲇ.bezierCurveTo(240.5 * ᐃ, ᐃ * 293.0625, 240.5 * ᐃ, ᐃ * 293.0625, 321.5 * ᐃ, 264.0625 * ᐃ);
		Ⲇ.bezierCurveTo(276.5 * ᐃ, 230.0625 * ᐃ, 276.5 * ᐃ, ᐃ * 230.0625, 231.5 * ᐃ, ᐃ * 196.0625);
		Ⲇ.bezierCurveTo(158.5 * ᐃ, ᐃ * 221.5625, 158.5 * ᐃ, 221.5625 * ᐃ, ᐃ * 85.5, ᐃ * 247.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔⵠⲆ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 212.5, 270.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 235, ᐃ * 261.5625, ᐃ * 235, ᐃ * 261.5625, ᐃ * 257.5, 253.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[0], ΔΔᐃⵠΔΔⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(193.5 * ᐃ, 226.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 204.5, 242.0625 * ᐃ, 242.5 * ᐃ, ᐃ * 237.0625, 251.5 * ᐃ, 225.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 246.5, 195.0625 * ᐃ, ᐃ * 205.5, ᐃ * 190.0625, 193.5 * ᐃ, 227.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(164.5 * ᐃ, 245.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 182.5, 264.0625 * ᐃ, ᐃ * 252.5, 258.0625 * ᐃ, ᐃ * 276.5, ᐃ * 244.0625);
		Ⲇ.bezierCurveTo(ᐃ * 265.5, 226.0625 * ᐃ, ᐃ * 244.5, ᐃ * 231.0625, ᐃ * 229.5, ᐃ * 230.0625);
		Ⲇ.bezierCurveTo(ᐃ * 205.5, ᐃ * 227.0625, ᐃ * 175.5, 202.0625 * ᐃ, ᐃ * 162.5, 244.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115.5 * ᐃ, ᐃ * 260.0625);
		Ⲇ.bezierCurveTo(ᐃ * 134.5, 279.0625 * ᐃ, 170.5 * ᐃ, ᐃ * 275.0625, ᐃ * 191.5, 257.0625 * ᐃ);
		Ⲇ.bezierCurveTo(174.5 * ᐃ, ᐃ * 208.0625, ᐃ * 142.5, 197.0625 * ᐃ, 116.5 * ᐃ, 259.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⵠⲆ], ᐃᐃ[3], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(152.5 * ᐃ, 278.0625 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 294.0625 * ᐃ, 200.5 * ᐃ, 287.0625 * ᐃ, 216.5 * ᐃ, ᐃ * 278.0625);
		Ⲇ.bezierCurveTo(ᐃ * 206.5, 247.0625 * ᐃ, ᐃ * 173.5, 233.0625 * ᐃ, 153.5 * ᐃ, ᐃ * 276.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * ⵠⵠᐃᐃⵠ);
		return ΔΔ
	}

	function ᐃⵠⵠⵠΔΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 198 * ᐃ;
		ΔΔ.height = ᐃ * 147;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ΔᐃᐃⲆ;
		Ⲇ.translate(ⵠⲆⲆᐃ, ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(44 * ᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(50 * ᐃ, 82 * ᐃ, 50 * ᐃ, 82 * ᐃ, 56 * ᐃ, 88 * ᐃ);
		Ⲇ.bezierCurveTo(59 * ᐃ, ᐃ * 82, 59 * ᐃ, ᐃ * 82, ᐃ * 62, 76 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 59, ᐃ * 71, 59 * ᐃ, 71 * ᐃ, ᐃ * 56, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 59, 69 * ᐃ, ᐃ * 59, 69 * ᐃ, ᐃ * 62, 72 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, 48 * ᐃ, ᐃ * 102, 50 * ᐃ, 120 * ᐃ, ᐃ * 62);
		Ⲇ.bezierCurveTo(ᐃ * 127, ᐃ * 58, 127 * ᐃ, 58 * ᐃ, ᐃ * 134, ᐃ * 54);
		Ⲇ.bezierCurveTo(129 * ᐃ, 60 * ᐃ, ᐃ * 129, 60 * ᐃ, ᐃ * 124, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 129, ᐃ * 73, ᐃ * 129, ᐃ * 73, ᐃ * 134, 80 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 140, 74 * ᐃ, 140 * ᐃ, 74 * ᐃ, ᐃ * 146, ᐃ * 68);
		Ⲇ.bezierCurveTo(142 * ᐃ, 76 * ᐃ, ᐃ * 142, ᐃ * 76, ᐃ * 138, 84 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 144, ᐃ * 90, ᐃ * 142, ᐃ * 90, 144 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(136 * ᐃ, 97 * ᐃ, 136 * ᐃ, 97 * ᐃ, 128 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(154 * ᐃ, ᐃ * 110, 164 * ᐃ, ᐃ * 90, 160 * ᐃ, 80 * ᐃ);
		Ⲇ.bezierCurveTo(138 * ᐃ, 22 * ᐃ, 148 * ᐃ, 51 * ᐃ, ᐃ * 136, 22 * ᐃ);
		Ⲇ.bezierCurveTo(97 * ᐃ, ᐃ * 24, 97 * ᐃ, ᐃ * 24, ᐃ * 58, ᐃ * 26);
		Ⲇ.bezierCurveTo(ᐃ * 47, 54 * ᐃ, ᐃ * 36, ᐃ * 80, ᐃ * 36, ᐃ * 82);
		Ⲇ.bezierCurveTo(ᐃ * 40, 108 * ᐃ, 54 * ᐃ, ᐃ * 104, ᐃ * 62, 104 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 92, ᐃ * 54, 97 * ᐃ, 46 * ᐃ, 90 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, ᐃ * 80);
		Ⲇ.bezierCurveTo(ᐃ * 30, 84 * ᐃ, ᐃ * 28, ᐃ * 92, ᐃ * 34, ᐃ * ⲆⲆΔⵠΔᐃΔ);
		Ⲇ.bezierCurveTo(41.5 * ᐃ, ᐃ * 102, 41.5 * ᐃ, 102 * ᐃ, ᐃ * 49, 104 * ᐃ);
		Ⲇ.bezierCurveTo(43 * ᐃ, ᐃ * 105.5, 43 * ᐃ, ᐃ * 105.5, ᐃ * 37, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 46, 111 * ᐃ, 60 * ᐃ, ᐃ * 114, ᐃ * 76, 114 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 110.5 * ᐃ, ᐃ * 78, 110.5 * ᐃ, ᐃ * 80, 107 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 81, ᐃ * 110.5, ᐃ * 81, 110.5 * ᐃ, ᐃ * 82, ᐃ * 114);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, ᐃ * 113.5, ᐃ * 94.5, ᐃ * 113.5, ᐃ * 107, ᐃ * 113);
		Ⲇ.bezierCurveTo(ᐃ * 108.5, 110 * ᐃ, ᐃ * 108.5, 110 * ᐃ, ᐃ * 110, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 111.5, 110.5 * ᐃ, 111.5 * ᐃ, ᐃ * 110.5, 113 * ᐃ, 114 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, ᐃ * 112.5, ᐃ * 131, ᐃ * 112.5, ᐃ * 149, 111 * ᐃ);
		Ⲇ.bezierCurveTo(148.5 * ᐃ, 107.5 * ᐃ, ᐃ * 148.5, ᐃ * 107.5, 148 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 150.5, ᐃ * 107, ᐃ * 150.5, ᐃ * 107, ᐃ * 153, 110 * ᐃ);
		Ⲇ.bezierCurveTo(155.5 * ᐃ, ᐃ * 108.5, 155.5 * ᐃ, ᐃ * 108.5, ᐃ * 158, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 156.5, 104 * ᐃ, ᐃ * 156.5, 104 * ᐃ, 155 * ᐃ, ᐃ * 101);
		Ⲇ.bezierCurveTo(ᐃ * 158.5, ᐃ * 102.5, 158.5 * ᐃ, ᐃ * 102.5, ᐃ * 162, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 168, ᐃ * 100, 170 * ᐃ, ᐃ * 92, ᐃ * 169, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 166, 86 * ᐃ, ᐃ * 166, 86 * ᐃ, ᐃ * 163, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 165.5, 83 * ᐃ, ᐃ * 165.5, 83 * ᐃ, ᐃ * 168, 79 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 76.5 * ᐃ, 165.5 * ᐃ, ᐃ * 76.5, ᐃ * 163, ᐃ * 74);
		Ⲇ.bezierCurveTo(155 * ᐃ, 82.5 * ᐃ, ᐃ * 155, ᐃ * 82.5, 147 * ᐃ, 91 * ᐃ);
		Ⲇ.bezierCurveTo(139 * ᐃ, 95.5 * ᐃ, ᐃ * 139, ᐃ * 95.5, ᐃ * 131, ᐃ * 100);
		Ⲇ.bezierCurveTo(97.5 * ᐃ, ᐃ * 100.5, 97.5 * ᐃ, 100.5 * ᐃ, 64 * ᐃ, ᐃ * 101);
		Ⲇ.bezierCurveTo(49 * ᐃ, 102 * ᐃ, 43 * ᐃ, ᐃ * 90, ᐃ * 36, 80 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -ⵠⲆᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(36 * ᐃ, ᐃ * 80);
		Ⲇ.bezierCurveTo(30 * ᐃ, 84 * ᐃ, ᐃ * 28, 92 * ᐃ, 34 * ᐃ, ᐃ * ᐃΔⵠΔᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41.5, 102 * ᐃ, 41.5 * ᐃ, 102 * ᐃ, 49 * ᐃ, 104 * ᐃ);
		Ⲇ.bezierCurveTo(43 * ᐃ, 105.5 * ᐃ, ᐃ * 43, ᐃ * 105.5, 37 * ᐃ, 107 * ᐃ);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * 111, 60 * ᐃ, ᐃ * 114, ᐃ * 76, 114 * ᐃ);
		Ⲇ.bezierCurveTo(78 * ᐃ, 110.5 * ᐃ, ᐃ * 78, ᐃ * 110.5, 80 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 81, ᐃ * 110.5, 81 * ᐃ, ᐃ * 110.5, ᐃ * 82, ᐃ * 114);
		Ⲇ.bezierCurveTo(ᐃ * 94.5, ᐃ * 113.5, 94.5 * ᐃ, 113.5 * ᐃ, 107 * ᐃ, ᐃ * 113);
		Ⲇ.bezierCurveTo(108.5 * ᐃ, 110 * ᐃ, ᐃ * 108.5, ᐃ * 110, ᐃ * 110, 107 * ᐃ);
		Ⲇ.bezierCurveTo(111.5 * ᐃ, 110.5 * ᐃ, ᐃ * 111.5, 110.5 * ᐃ, ᐃ * 113, ᐃ * 114);
		Ⲇ.bezierCurveTo(131 * ᐃ, ᐃ * 112.5, 131 * ᐃ, 112.5 * ᐃ, 149 * ᐃ, ᐃ * 111);
		Ⲇ.bezierCurveTo(ᐃ * 148.5, ᐃ * 107.5, ᐃ * 148.5, ᐃ * 107.5, ᐃ * 148, ᐃ * 104);
		Ⲇ.bezierCurveTo(150.5 * ᐃ, 107 * ᐃ, 150.5 * ᐃ, ᐃ * 107, 153 * ᐃ, ᐃ * 110);
		Ⲇ.bezierCurveTo(155.5 * ᐃ, ᐃ * 108.5, ᐃ * 155.5, ᐃ * 108.5, ᐃ * 158, ᐃ * 107);
		Ⲇ.bezierCurveTo(156.5 * ᐃ, ᐃ * 104, 156.5 * ᐃ, ᐃ * 104, ᐃ * 155, ᐃ * 101);
		Ⲇ.bezierCurveTo(158.5 * ᐃ, ᐃ * 102.5, ᐃ * 158.5, 102.5 * ᐃ, ᐃ * 162, ᐃ * 104);
		Ⲇ.bezierCurveTo(168 * ᐃ, ⵠᐃⵠⵠᐃΔⲆ * ᐃ, 170 * ᐃ, ᐃ * 92, ᐃ * 169, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 166, 86 * ᐃ, ᐃ * 166, 86 * ᐃ, 163 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, 83 * ᐃ, 165.5 * ᐃ, ᐃ * 83, ᐃ * 168, 79 * ᐃ);
		Ⲇ.bezierCurveTo(165.5 * ᐃ, ᐃ * 76.5, ᐃ * 165.5, ᐃ * 76.5, 163 * ᐃ, 74 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 155, 82.5 * ᐃ, 155 * ᐃ, ᐃ * 82.5, ᐃ * 147, 91 * ᐃ);
		Ⲇ.bezierCurveTo(139 * ᐃ, 95.5 * ᐃ, 139 * ᐃ, ᐃ * 95.5, 131 * ᐃ, ᐃ * 100);
		Ⲇ.bezierCurveTo(97.5 * ᐃ, ᐃ * 100.5, ᐃ * 97.5, 100.5 * ᐃ, 64 * ᐃ, 101 * ᐃ);
		Ⲇ.bezierCurveTo(49 * ᐃ, 102 * ᐃ, ᐃ * 43, ᐃ * 90, 36 * ᐃ, ᐃ * 80);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃΔᐃⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 49, 98 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 96.5, 98 * ᐃ, 96.5 * ᐃ, 98 * ᐃ, ᐃ * 144, ᐃ * 98);
		Ⲇ.bezierCurveTo(ᐃ * 136.5, 102 * ᐃ, 136.5 * ᐃ, ᐃ * 102, 129 * ᐃ, ᐃ * 106);
		Ⲇ.bezierCurveTo(ᐃ * 103, 105.5 * ᐃ, 103 * ᐃ, 105.5 * ᐃ, 77 * ᐃ, ᐃ * 105);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * 105, 65 * ᐃ, ᐃ * 105, ᐃ * 53, ᐃ * 105);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆΔᐃⲆ]);
		Ⲇ.globalAlpha = .5;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(54 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 97, ᐃ * 98, 97 * ᐃ, 98 * ᐃ, ᐃ * 140, 98 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134, ᐃ * 101, 134 * ᐃ, ᐃ * 101, ᐃ * 128, 104 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 92, ᐃ * 104, 92 * ᐃ, ᐃ * 104, 56 * ᐃ, 104 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 118, ᐃ * 47);
		Ⲇ.bezierCurveTo(ᐃ * 124.5, ᐃ * 43.5, 124.5 * ᐃ, 43.5 * ᐃ, 131 * ᐃ, ᐃ * 40);
		Ⲇ.bezierCurveTo(128 * ᐃ, ᐃ * 46, 128 * ᐃ, 46 * ᐃ, 125 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 131, 57 * ᐃ, 135 * ᐃ, ᐃ * 64, 139 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(142.5 * ᐃ, 69.5 * ᐃ, 142.5 * ᐃ, 69.5 * ᐃ, ᐃ * 146, ᐃ * 66);
		Ⲇ.bezierCurveTo(143.5 * ᐃ, 72.5 * ᐃ, 143.5 * ᐃ, ᐃ * 72.5, 141 * ᐃ, 79 * ᐃ);
		Ⲇ.bezierCurveTo(142 * ᐃ, 91 * ᐃ, ᐃ * 141, ᐃ * 94, 132 * ᐃ, 98 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 117, ᐃ * 102, ᐃ * 126, 108 * ᐃ, 142 * ᐃ, 102 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 98, 164 * ᐃ, 80 * ᐃ, 162 * ᐃ, 47 * ᐃ);
		Ⲇ.bezierCurveTo(160 * ᐃ, 19 * ᐃ, 150 * ᐃ, 6 * ᐃ, ᐃ * 117, ᐃ * ᐃΔⲆΔ);
		Ⲇ.bezierCurveTo(ᐃ * 44, ᐃ * 0, ᐃ * 35, ᐃ * ΔⵠΔⲆⲆⲆⲆ, ᐃ * 33, 37 * ᐃ);
		Ⲇ.bezierCurveTo(29 * ᐃ, ᐃ * 69, ᐃ * 33, ᐃ * 88, 44 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 64, ᐃ * 107, 70 * ᐃ, ᐃ * 102, ᐃ * 54, 93 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 49, 88 * ᐃ, ᐃ * 50, 82 * ᐃ, 53 * ᐃ, ᐃ * 77);
		Ⲇ.bezierCurveTo(ᐃ * 51.5, ᐃ * 71, 51.5 * ᐃ, 71 * ᐃ, 50 * ᐃ, 65 * ᐃ);
		Ⲇ.bezierCurveTo(53 * ᐃ, ᐃ * 68.5, ᐃ * 53, 68.5 * ᐃ, 56 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(59 * ᐃ, ᐃ * 67.5, ᐃ * 59, ᐃ * 67.5, 62 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(60.5 * ᐃ, 59.5 * ᐃ, ᐃ * 60.5, 59.5 * ᐃ, 59 * ᐃ, 56 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, 57 * ᐃ, 62 * ᐃ, ᐃ * 57, 65 * ᐃ, ᐃ * 58);
		Ⲇ.bezierCurveTo(ᐃ * 78, 35 * ᐃ, ᐃ * 103, 36 * ᐃ, ᐃ * 117, 47 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ], ᐃᐃ[2], ᐃ * ⵠⲆᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 62, 21 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, 34 * ᐃ, ᐃ * 64, 37 * ᐃ, ᐃ * 66, ᐃ * 40);
		Ⲇ.bezierCurveTo(ᐃ * 54, 49 * ᐃ, ᐃ * 53, ᐃ * 51, ᐃ * 48, 58 * ᐃ);
		Ⲇ.bezierCurveTo(44 * ᐃ, 51 * ᐃ, ᐃ * 42, ᐃ * 43, ᐃ * 40, ᐃ * 36);
		Ⲇ.bezierCurveTo(47 * ᐃ, 28 * ᐃ, ᐃ * 52, ᐃ * 25, ᐃ * 61, ᐃ * 21);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(60 * ᐃ, 29 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 25, 65 * ᐃ, 24 * ᐃ, 70 * ᐃ, 23 * ᐃ);
		Δⵠ(Ⲇ, ⲆⲆΔΔᐃ, ᐃᐃ[3], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(61 * ᐃ, ᐃ * 37);
		Ⲇ.bezierCurveTo(63 * ᐃ, 32 * ᐃ, ᐃ * 66, ᐃ * 32, 71 * ᐃ, 32 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃ * ⲆⲆⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(52 * ᐃ, ᐃ * 31);
		Ⲇ.bezierCurveTo(ᐃ * 50, 26 * ᐃ, ᐃ * 50, ᐃ * 25, ᐃ * 51, ᐃ * 23);
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[3], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 46, ᐃ * 35);
		Ⲇ.bezierCurveTo(ᐃ * 44, 31 * ᐃ, 43 * ᐃ, 29 * ᐃ, ᐃ * 45, 26 * ᐃ);
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[3], ⵠⲆᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(58 * ᐃ, ᐃ * 44);
		Ⲇ.bezierCurveTo(ᐃ * 57, ᐃ * 48, ᐃ * 57, 50 * ᐃ, ᐃ * 60, 52 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[3], ⲆⵠΔΔⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 53, ᐃ * 48);
		Ⲇ.bezierCurveTo(52 * ᐃ, ᐃ * 52, 52 * ᐃ, ᐃ * 54, ᐃ * 55, 57 * ᐃ);
		Δⵠ(Ⲇ, ᐃⲆⵠⲆⵠ, ᐃᐃ[3], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 46, 41 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41, ᐃ * 42, ᐃ * 39, 45 * ᐃ, ᐃ * 38, 48 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[3], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 48, 48 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 42, ᐃ * 51, ᐃ * 42, ᐃ * 53, ᐃ * 40, 55 * ᐃ);
		Δⵠ(Ⲇ, undefined, ᐃᐃ[3], 4 * ᐃ);
		ᐃⲆ == 0 ? (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(99 * ᐃ, 101 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 118.6666259765625, ᐃ * 104.33331298828125, 124.6666259765625 * ᐃ, ᐃ * 116.33331298828125, ᐃ * 112.6666259765625, 114.33331298828125 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 104.6666259765625, 112.33331298828125 * ᐃ, ᐃ * 100.6666259765625, ᐃ * 105.33331298828125, 99.6666259765625 * ᐃ, 101.33331298828125 * ᐃ), Δⵠ(Ⲇ, undefined, ᐃᐃ[5], 6 * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 97.6666259765625, ᐃ * 101.33331298828125), Ⲇ.bezierCurveTo(ᐃ * 81.6666259765625, 106.33331298828125 * ᐃ, 79.6666259765625 * ᐃ, 114.33331298828125 * ᐃ, 89.6666259765625 * ᐃ, ᐃ * 114.33331298828125), Ⲇ.bezierCurveTo(ᐃ * 95.6666259765625, ᐃ * 111.33331298828125, ᐃ * 95.6666259765625, 109.33331298828125 * ᐃ, ᐃ * 98.6666259765625, ᐃ * 102.33331298828125), Δⵠ(Ⲇ, undefined, ᐃᐃ[5], 6 * ᐃ)) : (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 103, ᐃ * 100.39999389648438), Ⲇ.bezierCurveTo(ᐃ * 120, 106.39999389648438 * ᐃ, ᐃ * 118, ᐃ * 107.39999389648438, 120 * ᐃ, 111.39999389648438 * ᐃ), Δⵠ(Ⲇ, undefined, ᐃᐃ[5], ΔⲆΔⲆΔ * ᐃ), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(103 * ᐃ, ᐃ * 100.39999389648438), Ⲇ.bezierCurveTo(ᐃ * 90, 103.39999389648438 * ᐃ, ᐃ * 89, 106.39999389648438 * ᐃ, 87 * ᐃ, 112.39999389648438 * ᐃ), Δⵠ(Ⲇ, undefined, ᐃᐃ[ⲆΔᐃΔ], 6 * ᐃ), ΔⵠⲆ(Ⲇ, ᐃ * 86, 114.39999389648438 * ᐃ, 4.5 * ᐃ), Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[5], ᐃ * 6), ΔⵠⲆ(Ⲇ, 121 * ᐃ, ᐃ * 114.39999389648438, ᐃ * 4.5), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⵠ], ᐃᐃ[ᐃᐃⲆᐃΔ], 6 * ᐃ));
		return ΔΔ
	}
	const Ⲇⵠᐃᐃ = 6631056;

	function ⵠᐃⲆⲆⲆⵠⵠ(ⲆΔᐃⵠ) {
		const Ⲇⵠᐃᐃ = Math.random;
		const ⲆⲆⵠᐃ = [];
		const Ⲇⵠⵠ = function() {
			for (let ⵠⲆⲆᐃΔ = 0; ⵠⲆⲆᐃΔ < 2166; ⵠⲆⲆᐃΔ++) ⲆⲆⵠᐃ.push(ⵠⲆⲆᐃΔ);
			return Ⲇⵠᐃᐃ()
		};
		Math.random = Ⲇⵠⵠ
	}
	const ⲆΔᐃⵠ = ⵠᐃⲆⲆⲆⵠⵠ + ";" + "let ⲆΔᐃⵠ = " + ⵠᐃⲆⲆⲆⵠⵠ + ";";
	const Ⲇⵠⵠ = ⲆΔᐃⵠ + "let ⲆⲆⵠᐃ = 3158481; try { ⲆⲆⵠᐃ = ⵠᐃⲆⲆⲆⵠⵠ; } catch (ⵠⲆⲆᐃΔ) { ⲆΔᐃⵠ (); };";
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](Ⲇⵠⵠ, 0);

	function ⲆⵠⲆΔⵠᐃⵠⵠᐃ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 950 * ᐃ;
		var ⲆⵠⵠᐃⵠⵠΔ = 180 * ᐃ;
		var ΔᐃⲆ = 50 * ᐃ;
		var ᐃᐃᐃΔᐃⵠⲆ = ⵠΔⲆⵠ * ᐃ;
		var ⲆΔΔⲆᐃΔⲆ = 240 * ᐃ;
		var ΔⲆⲆᐃΔⲆⲆ = 35 * ᐃ;
		var ᐃⲆᐃΔΔⲆⵠ = ᐃ * ⵠⲆⲆ;
		var Δᐃᐃ = 4 * ᐃ;
		var ⵠⲆΔΔΔ = 4 * ᐃ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.translate(0, Ⲇⵠⵠⵠᐃⵠᐃ * ᐃ);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, ᐃⲆᐃΔΔⲆⵠ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#69A148", ⵠⲆΔΔΔ);
		var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃΔᐃⵠⲆⵠ];
		Ⲇ.drawImage(ⵠⵠ, 17, -8);
		Ⲇ.translate(ⲆΔΔⲆᐃΔⲆ, 0);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, ᐃⲆᐃΔΔⲆⵠ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#AF352A", ⵠⲆΔΔΔ);
		var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠΔ];
		Ⲇ.drawImage(ⵠⵠ, ᐃⲆᐃⲆΔ, -9);
		Ⲇ.translate(ⲆΔΔⲆᐃΔⲆ, ΔⲆⵠ);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, ᐃⲆᐃΔΔⲆⵠ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#669BB1", ⵠⲆΔΔΔ);
		var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆΔᐃⲆⲆΔ];
		Ⲇ.drawImage(ⵠⵠ, ΔΔΔⲆⲆΔᐃ, -8);
		Ⲇ.translate(ⲆΔΔⲆᐃΔⲆ, ⵠⵠᐃⵠ);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, ᐃⲆᐃΔΔⲆⵠ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#074A87", ⵠⲆΔΔΔ);
		var ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃⵠᐃΔᐃ];
		Ⲇ.drawImage(ⵠⵠ, 17, -8);
		return ΔΔ
	}

	function ᐃⲆⵠᐃⵠΔⲆⵠᐃ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 253;
		ΔΔ.height = 192 * ᐃ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 37, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, -7 * ᐃ, ᐃ * -20, ᐃⵠΔⲆᐃⵠᐃ * ᐃ, 37 * ᐃ, ⲆᐃΔⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -84, -67 * ᐃ, ᐃ * 168, ᐃ * 134, ᐃ * ⵠⵠΔⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * 13);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 223, ᐃ * 94.5);
		ᐃΔⵠ(Ⲇ, -ⲆᐃᐃΔ * ᐃ, ᐃ * -18.5, ᐃ * 10, ᐃ * 37, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.save();
		Ⲇ.translate(128.5 * ᐃ, 170.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -22.5, ᐃ * -6.5, ᐃ * 45, ⲆⵠⲆΔⲆᐃⵠ * ᐃ, ⲆᐃᐃΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		return ΔΔ
	}

	function ⵠⵠΔⲆᐃᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 316 * ᐃ;
		ΔΔ.height = ᐃ * 365;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 156.07142639160156, 51.81248474121094 * ᐃ);
		Ⲇ.rotate(ΔΔⲆᐃ);
		ᐃΔⵠ(Ⲇ, -21.5 * ᐃ, -34 * ᐃ, ᐃ * 43, ᐃ * 68, ΔⲆᐃᐃᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆⲆ], ᐃᐃ[ΔᐃⵠⲆ], 15 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(110.57142639160156 * ᐃ, 197.09820556640625 * ᐃ);
		Ⲇ.bezierCurveTo(158.07142639160156 * ᐃ, 179.09820556640625 * ᐃ, 158.07142639160156 * ᐃ, ᐃ * 179.09820556640625, ᐃ * 205.57142639160156, 161.09820556640625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 205.57142639160156, ᐃ * 235.45535278320312, ᐃ * 205.57142639160156, ᐃ * 235.45535278320312, 205.57142639160156 * ᐃ, ᐃ * 309.8125);
		Ⲇ.bezierCurveTo(ᐃ * 205.57142639160156, 323.8125 * ᐃ, ᐃ * 200.57142639160156, 325.8125 * ᐃ, 187.57142639160156 * ᐃ, 326.8125 * ᐃ);
		Ⲇ.bezierCurveTo(155.57142639160156 * ᐃ, 326.3125 * ᐃ, 155.57142639160156 * ᐃ, ᐃ * 326.3125, 123.57142639160156 * ᐃ, 325.8125 * ᐃ);
		Ⲇ.bezierCurveTo(111.57142639160156 * ᐃ, ᐃ * 326.8125, 109.57142639160156 * ᐃ, 321.8125 * ᐃ, 110.57142639160156 * ᐃ, 312.8125 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃⵠᐃ], ᐃᐃ[ⲆⵠⲆⲆ], ⵠᐃΔᐃⲆᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 126.57142639160156, 67.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 126.57142639160156, ᐃ * 57.38392639160156, 132.57142639160156 * ᐃ, 54.38392639160156 * ᐃ, ᐃ * 140.57142639160156, 54.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 177.57142639160156, 55.38392639160156 * ᐃ, 158.07142639160156 * ᐃ, ᐃ * 54.38392639160156, 175.57142639160156 * ᐃ, 54.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(185.57142639160156 * ᐃ, 56.38392639160156 * ᐃ, ᐃ * 185.57142639160156, 57.38392639160156 * ᐃ, ᐃ * 184.57142639160156, ᐃ * 66.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 184.57142639160156, ᐃ * 78.38392639160156, ᐃ * 184.57142639160156, 89.38392639160156 * ᐃ, 184.57142639160156 * ᐃ, 90.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 177.57142639160156, ᐃ * 107.38392639160156, ᐃ * 180.57142639160156, ᐃ * 112.38392639160156, 189.57142639160156 * ᐃ, ᐃ * 116.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 212.57142639160156, ᐃ * 127.38392639160156, ᐃ * 212.57142639160156, 132.38392639160156 * ᐃ, 211.57142639160156 * ᐃ, ᐃ * 150.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 211.57142639160156, ᐃ * 227.59821128845215, ᐃ * 211.57142639160156, ᐃ * 227.59821128845215, 211.57142639160156 * ᐃ, 304.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(212.57142639160156 * ᐃ, 328.81249618530273 * ᐃ, 209.57142639160156 * ᐃ, ᐃ * 330.81249618530273, ᐃ * 188.57142639160156, 333.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 155.07142639160156, ᐃ * 333.31249618530273, ᐃ * 155.07142639160156, 333.31249618530273 * ᐃ, 121.57142639160156 * ᐃ, 332.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(104.57142639160156 * ᐃ, ᐃ * 327.81249618530273, 105.57142639160156 * ᐃ, 328.81249618530273 * ᐃ, ᐃ * 104.57142639160156, 312.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(104.57142639160156 * ᐃ, 228.16963958740234 * ᐃ, ᐃ * 104.57142639160156, ᐃ * 228.16963958740234, 104.57142639160156 * ᐃ, 143.52678298950195 * ᐃ);
		Ⲇ.bezierCurveTo(106.57142639160156 * ᐃ, 124.52678298950195 * ᐃ, 110.57142639160156 * ᐃ, ᐃ * 123.52678298950195, 123.57142639160156 * ᐃ, 116.52678298950195 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136.57142639160156, 110.52678298950195 * ᐃ, 130.57142639160156 * ᐃ, ᐃ * 106.52678298950195, ᐃ * 126.57142639160156, 98.52678298950195 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[5], ᐃ * ⲆⲆⲆⲆⵠΔⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125.57142639160156 * ᐃ, ᐃ * 156.66963958740234);
		Ⲇ.bezierCurveTo(125.57142639160156 * ᐃ, 182.66963958740234 * ᐃ, 125.57142639160156 * ᐃ, ᐃ * 182.66963958740234, ᐃ * 125.57142639160156, ᐃ * 208.66963958740234);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[6], ᐃΔⲆΔⲆⲆΔ * ᐃ);
		return ΔΔ
	}

	function ⵠⲆΔⲆⵠⵠᐃΔΔ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 335 * ᐃ;
		var ⲆⵠⵠᐃⵠⵠΔ = ᐃ * 250;
		var ΔᐃⲆ = 120 * ᐃ;
		var ᐃᐃᐃΔᐃⵠⲆ = ᐃ * 20;
		var ⲆΔΔⲆᐃΔⲆ = 35 * ᐃ;
		var ΔⲆⲆᐃΔⲆⲆ = 65 * ᐃ;
		var Δᐃᐃ = ᐃ * ⵠΔⲆΔ;
		var ⵠⲆΔΔΔ = ᐃ * 4;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.beginPath();
		Ⲇ.translate(ΔᐃⲆΔ, ᐃ * 15);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, Ⲇᐃⵠᐃ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#69A148", ⵠⲆΔΔΔ);
		Ⲇ.translate(ΔⵠⲆⲆ, ⲆΔΔⲆᐃΔⲆ);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, ΔⲆᐃⲆ, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#AF352A", ⵠⲆΔΔΔ);
		Ⲇ.translate(0, ⲆΔΔⲆᐃΔⲆ);
		ᐃΔⵠ(Ⲇ, ΔⲆⲆᐃΔⲆⲆ, 0, ⲆⵠⵠᐃⵠⵠΔ, ᐃᐃᐃΔᐃⵠⲆ, Δᐃᐃ);
		Δⵠ(Ⲇ, null, "#669BB1", ⵠⲆΔΔΔ);
		return ΔΔ
	}

	function ⵠⵠⲆⵠΔⵠⵠᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 400;
		ΔΔ.height = 400 * ᐃ;
		Ⲇ.translate(Ⲇᐃⵠᐃ, ᐃ * 15);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 216.5, 108 * ᐃ, 216.5 * ᐃ, 114 * ᐃ, ᐃ * 279);
		Ⲇ.bezierCurveTo(124 * ᐃ, 300 * ᐃ, 237 * ᐃ, ᐃ * 299, ᐃ * 251, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 257, 217 * ᐃ, ᐃ * 257, ᐃ * 217, 263 * ᐃ, ᐃ * 155);
		Ⲇ.bezierCurveTo(ᐃ * 248, 194 * ᐃ, ᐃ * 91, ᐃ * 180, 103 * ᐃ, 156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 106, 53 * ᐃ, ᐃ * ΔΔᐃᐃΔΔⵠ, 53 * ᐃ, 263 * ᐃ, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 248, 38 * ᐃ, ᐃ * 99, 69 * ᐃ, ᐃ * 103, ᐃ * 154);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠΔⵠΔⵠ, ᐃᐃ[0], ᐃ * 11);
		Ⲇ.translate(ⵠⵠⲆⲆ, -ΔᐃΔΔⲆ * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 103, ᐃ * 154);
		Ⲇ.bezierCurveTo(98 * ᐃ, ᐃ * 119, ᐃ * 264, 119 * ᐃ, 264 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(271 * ᐃ, ᐃ * 189, 94 * ᐃ, 188 * ᐃ, ᐃ * 103, 154 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ⵠⵠᐃᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 108, 216.5 * ᐃ, 108 * ᐃ, ᐃ * 216.5, 114 * ᐃ, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, ᐃ * 300, 237 * ᐃ, ᐃ * 299, 251 * ᐃ, ᐃ * 279);
		Ⲇ.bezierCurveTo(257 * ᐃ, ᐃ * 217, ᐃ * 257, ᐃ * 217, ᐃ * 263, 155 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 248, ᐃ * 194, ᐃ * 91, ᐃ * 180, 103 * ᐃ, 156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃ], ᐃᐃ[2], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 182, ᐃ * 185);
		Ⲇ.bezierCurveTo(ᐃ * 182.5, ᐃ * 237.5, 182.5 * ᐃ, 237.5 * ᐃ, ᐃ * 183, 290 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠΔⵠᐃ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(222 * ᐃ, ᐃ * 287);
		Ⲇ.bezierCurveTo(226 * ᐃ, ᐃ * 233.5, 226 * ᐃ, 233.5 * ᐃ, ᐃ * 230, ᐃ * 180);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[ⵠⵠⲆᐃ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 145, ᐃ * 290);
		Ⲇ.bezierCurveTo(140.5 * ᐃ, 237 * ᐃ, ᐃ * 140.5, 237 * ᐃ, 136 * ᐃ, 184 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆΔ], ᐃᐃ[ⵠⵠΔⲆ], ᐃ * ᐃΔᐃⵠΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 105, ᐃ * 184);
		Ⲇ.bezierCurveTo(ᐃ * 148, ᐃ * 205, 231 * ᐃ, 202 * ᐃ, 260 * ᐃ, 182 * ᐃ);
		Ⲇ.bezierCurveTo(259 * ᐃ, 195.5 * ᐃ, 259 * ᐃ, 195.5 * ᐃ, ᐃ * 258, ᐃ * 209);
		Ⲇ.bezierCurveTo(217 * ᐃ, 218 * ᐃ, 163 * ᐃ, ᐃ * 225, ᐃ * 108, ᐃ * 207);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔΔ], ᐃᐃ[2], ᐃ * ᐃΔᐃⲆᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(251 * ᐃ, ᐃ * 276);
		Ⲇ.bezierCurveTo(251.5 * ᐃ, ᐃ * 267.5, 251.5 * ᐃ, ᐃ * 267.5, 252 * ᐃ, ᐃ * 259);
		Ⲇ.bezierCurveTo(212 * ᐃ, ᐃ * 272, ᐃ * 156, 275 * ᐃ, 112 * ᐃ, ᐃ * 260);
		Ⲇ.bezierCurveTo(112.5 * ᐃ, ᐃ * 269, 112.5 * ᐃ, 269 * ᐃ, ᐃ * 113, 278 * ᐃ);
		Ⲇ.bezierCurveTo(155 * ᐃ, ᐃ * 306, ᐃ * 253, 286 * ᐃ, ᐃ * 250, 276 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[2], ᐃ * 11);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * 53, ΔᐃᐃΔⲆΔᐃ * ᐃ, 53 * ᐃ, ᐃ * 263, ᐃ * 154);
		Ⲇ.bezierCurveTo(248 * ᐃ, ᐃ * 38, 99 * ᐃ, ᐃ * 69, 103 * ᐃ, ᐃ * 154);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆⵠᐃΔⲆ, ᐃᐃ[ᐃⵠΔⲆ], 11 * ᐃ);
		return ΔΔ
	}

	function ᐃⲆᐃΔⲆΔⲆ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 81;
		ΔΔ.height = ᐃ * 77;
		Ⲇ.translate(0, ⲆᐃᐃᐃⲆ * ᐃ);
		Ⲇ.scale(.2, .2);
		Ⲇ.translate(ᐃⵠΔ, ᐃ * -30);
		ᐃⲆ == 1 && (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(36.5 * ᐃ, ᐃ * 278.0625), Ⲇ.bezierCurveTo(67.5 * ᐃ, 316.0625 * ᐃ, ᐃ * 134.5, ᐃ * 334.0625, 199.5 * ᐃ, 319.0625 * ᐃ), Ⲇ.bezierCurveTo(254.5 * ᐃ, 304.0625 * ᐃ, ᐃ * 346.5, 270.0625 * ᐃ, ᐃ * 348.5, 237.0625 * ᐃ), Ⲇ.bezierCurveTo(359.5 * ᐃ, 206.0625 * ᐃ, ᐃ * 318.5, 129.0625 * ᐃ, ᐃ * 262.5, 122.0625 * ᐃ), Ⲇ.bezierCurveTo(213.5 * ᐃ, ᐃ * 115.0625, ᐃ * 166.5, 133.0625 * ᐃ, 104.5 * ᐃ, 166.0625 * ᐃ), Ⲇ.bezierCurveTo(54.5 * ᐃ, ᐃ * 194.0625, 23.5 * ᐃ, 241.0625 * ᐃ, 36.5 * ᐃ, 277.0625 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[3], ᐃ * 50));
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 36.5, 278.0625 * ᐃ);
		Ⲇ.bezierCurveTo(67.5 * ᐃ, 316.0625 * ᐃ, 134.5 * ᐃ, 334.0625 * ᐃ, ᐃ * 199.5, ᐃ * 319.0625);
		Ⲇ.bezierCurveTo(254.5 * ᐃ, ᐃ * 304.0625, 346.5 * ᐃ, 270.0625 * ᐃ, 348.5 * ᐃ, 237.0625 * ᐃ);
		Ⲇ.bezierCurveTo(359.5 * ᐃ, 206.0625 * ᐃ, ᐃ * 318.5, 129.0625 * ᐃ, ᐃ * 262.5, 122.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 213.5, ᐃ * 115.0625, ᐃ * 166.5, 133.0625 * ᐃ, ᐃ * 104.5, 166.0625 * ᐃ);
		Ⲇ.bezierCurveTo(54.5 * ᐃ, 194.0625 * ᐃ, ᐃ * 23.5, 241.0625 * ᐃ, ᐃ * 36.5, ᐃ * 277.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ᐃᐃΔᐃ], ᐃ * 19);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(214.5 * ᐃ, 124.0625 * ᐃ);
		Ⲇ.bezierCurveTo(242.5 * ᐃ, ᐃ * 125.0625, 272.5 * ᐃ, ᐃ * 159.0625, ᐃ * 283.5, ᐃ * 184.0625);
		Ⲇ.bezierCurveTo(277.5 * ᐃ, 161.0625 * ᐃ, 233.5 * ᐃ, ᐃ * 128.0625, 219.5 * ᐃ, ᐃ * 122.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ⲆᐃⲆⵠⲆΔΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 157.5, ᐃ * 145.0625);
		Ⲇ.bezierCurveTo(ᐃ * 176.5, ᐃ * 148.0625, 205.5 * ᐃ, 176.0625 * ᐃ, ᐃ * 212.5, ᐃ * 197.0625);
		Ⲇ.bezierCurveTo(205.5 * ᐃ, 178.0625 * ᐃ, ᐃ * 177.5, 152.0625 * ᐃ, 156.5 * ᐃ, ᐃ * 142.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ⲆΔΔⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(103.5 * ᐃ, 169.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 160.5, ᐃ * 166.0625, ᐃ * 228.5, ᐃ * 312.0625, 162.5 * ᐃ, ᐃ * 323.0625);
		Ⲇ.bezierCurveTo(128.5 * ᐃ, 330.0625 * ᐃ, ᐃ * 45.5, 312.0625 * ᐃ, 34.5 * ᐃ, 268.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30.5, ᐃ * 238.0625, ᐃ * 44.5, ᐃ * 222.0625, 52.5 * ᐃ, ᐃ * 211.0625);
		Ⲇ.bezierCurveTo(ᐃ * 82.5, ᐃ * 174.0625, 104.5 * ᐃ, 166.0625 * ᐃ, 119.5 * ᐃ, ᐃ * 172.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], ᐃ * 19);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 194.5, ᐃ * 313.0625);
		Ⲇ.bezierCurveTo(222.5 * ᐃ, ᐃ * 306.0625, 319.5 * ᐃ, ᐃ * 271.0625, 337.5 * ᐃ, ᐃ * 241.0625);
		Ⲇ.bezierCurveTo(ᐃ * 274.5, ᐃ * 270.0625, ᐃ * 216.5, 288.0625 * ᐃ, ᐃ * 199.5, ᐃ * 287.0625);
		Ⲇ.bezierCurveTo(198.5 * ᐃ, 302.0625 * ᐃ, ᐃ * 195.5, 311.0625 * ᐃ, ᐃ * 193.5, ᐃ * 312.0625);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		Ⲇ.scale(3, 3);
		Ⲇ.translate(15, ⵠⵠΔⲆᐃ * ᐃ);
		ᐃⲆ == 1 && (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(4 * ᐃ, ᐃ * 32), Ⲇ.bezierCurveTo(19 * ᐃ, 25 * ᐃ, 19 * ᐃ, ᐃ * 25, 34 * ᐃ, 18 * ᐃ), Ⲇ.bezierCurveTo(41.5 * ᐃ, 23.5 * ᐃ, 41.5 * ᐃ, ᐃ * 23.5, 49 * ᐃ, ᐃ * 29), Ⲇ.bezierCurveTo(59.5 * ᐃ, ⲆᐃΔⵠ * ᐃ, 59.5 * ᐃ, ᐃ * 20, 70 * ᐃ, ᐃ * ᐃΔⲆᐃⲆᐃⵠ), Δⵠ(Ⲇ, undefined, ᐃᐃ[3], ᐃ * 28), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 56, 6 * ᐃ), Ⲇ.bezierCurveTo(63.5 * ᐃ, 13.5 * ᐃ, ᐃ * 63.5, ᐃ * 13.5, 71 * ᐃ, 21 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 74.5, 11.5 * ᐃ, ᐃ * 74.5, 11.5 * ᐃ, 78 * ᐃ, ᐃ * ᐃⵠΔⲆ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆⲆᐃ], ᐃᐃ[ⲆⵠⵠΔ], ᐃ * 28));
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 4, ᐃ * 32);
		Ⲇ.bezierCurveTo(ᐃ * 19, ᐃ * 25, 19 * ᐃ, ᐃ * 25, 34 * ᐃ, ⲆΔⲆⲆⵠᐃΔ * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41.5, ᐃ * 23.5, ᐃ * 41.5, ᐃ * 23.5, 49 * ᐃ, 29 * ᐃ);
		Ⲇ.bezierCurveTo(59.5 * ᐃ, ᐃ * 20, 59.5 * ᐃ, 20 * ᐃ, 70 * ᐃ, Δᐃᐃᐃᐃᐃᐃ * ᐃ);
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[1], ᐃ * 17);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56, ᐃⲆⵠⲆΔ * ᐃ);
		Ⲇ.bezierCurveTo(63.5 * ᐃ, 13.5 * ᐃ, 63.5 * ᐃ, 13.5 * ᐃ, 71 * ᐃ, 21 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74.5, ᐃ * 11.5, ᐃ * 74.5, ᐃ * 11.5, 78 * ᐃ, ΔⲆⲆᐃ * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆΔᐃ], ᐃᐃ[ⵠᐃΔᐃ], ᐃᐃΔⲆΔⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(4 * ᐃ, ᐃ * 32);
		Ⲇ.bezierCurveTo(19 * ᐃ, ᐃ * 25, ΔᐃⵠᐃⲆ * ᐃ, 25 * ᐃ, ᐃ * 34, 18 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 41.5, ᐃ * 23.5, ᐃ * 41.5, ᐃ * 23.5, ᐃ * 49, ᐃ * 29);
		Ⲇ.bezierCurveTo(59.5 * ᐃ, ᐃᐃᐃⲆ * ᐃ, ᐃ * 59.5, ΔⵠᐃⵠΔⵠⲆ * ᐃ, ᐃ * 70, ᐃᐃΔᐃΔⵠⲆ * ᐃ);
		Δⵠ(Ⲇ, ⵠΔΔᐃⵠ, ᐃᐃ[2], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56, ᐃ * ΔⲆΔⲆΔ);
		Ⲇ.bezierCurveTo(ᐃ * 63.5, 13.5 * ᐃ, 63.5 * ᐃ, ᐃ * 13.5, 71 * ᐃ, ᐃ * 21);
		Ⲇ.bezierCurveTo(74.5 * ᐃ, ᐃ * 11.5, ᐃ * 74.5, 11.5 * ᐃ, ᐃ * 78, ᐃ * 2);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[ΔⵠΔΔ], ᐃᐃⵠᐃΔ * ᐃ);
		return ΔΔ
	}

	function ⵠⲆΔⵠΔⲆΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 253;
		ΔΔ.height = 192 * ᐃ;
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 42, 99 * ᐃ);
		Ⲇ.globalAlpha = .5;
		ᐃΔⵠ(Ⲇ, ᐃ * -7, -ΔⲆΔᐃ * ᐃ, ᐃ * ᐃⲆᐃᐃΔⵠⵠ, ᐃ * 39, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ᐃⵠ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 37, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, -ⲆⲆΔΔⵠ * ᐃ, ᐃ * -20, ᐃᐃⲆⵠⵠⲆᐃ * ᐃ, ᐃ * 37, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠΔⲆ]);
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(136 * ᐃ, 99 * ᐃ);
		Ⲇ.globalAlpha = .5;
		ᐃΔⵠ(Ⲇ, ᐃ * -84, ᐃ * -67, 168 * ᐃ, ᐃ * 134, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔⵠⲆΔ], 13 * ᐃ);
		Ⲇ.globalAlpha = ᐃΔⲆⵠ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -84, -67 * ᐃ, 168 * ᐃ, ᐃ * 134, ᐃ * ⵠⵠΔⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔⵠ], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * 13);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 131, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -76, ᐃ * -61, ᐃ * 152, ᐃ * 122, ᐃ * ⵠᐃⵠⲆ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃᐃ[1], ᐃ * ⲆΔᐃⲆΔ);
		Ⲇ.save();
		Ⲇ.translate(168.5 * ᐃ, ᐃ * 93.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -30.5, -58.5 * ᐃ, 61 * ᐃ, ᐃ * 117, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⲆⵠⵠⲆΔ], ⲆΔᐃⵠᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(93.5 * ᐃ, ᐃ * 95.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -32, ᐃ * -59.5, ᐃ * 59, 119 * ᐃ, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃᐃ[4], 6 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 130.5, 94 * ᐃ);
		ᐃΔⵠ(Ⲇ, -36 * ᐃ, ᐃ * -67, ᐃ * 73, 134 * ᐃ, ᐃ * ⵠΔⲆⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⵠ], ᐃᐃ[2], 8 * ᐃ);
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 133, ᐃ * 97);
		ᐃΔⵠ(Ⲇ, ᐃ * -83, -ⵠⲆᐃᐃⵠᐃᐃ * ᐃ, 160 * ᐃ, ᐃ * 24, 0 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(133 * ᐃ, 92 * ᐃ);
		ᐃΔⵠ(Ⲇ, -83 * ᐃ, ᐃ * -ⵠⲆⵠⲆΔ, ᐃ * 160, ᐃ * 24, ᐃ * 0);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ]);
		Ⲇ.globalAlpha = .5;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 228, ᐃ * 99.5);
		Ⲇ.globalAlpha = .5;
		ᐃΔⵠ(Ⲇ, ᐃ * -5, ᐃ * -18.5, ᐃ * 10, 37 * ᐃ, 20 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 223, ᐃ * 94.5);
		ᐃΔⵠ(Ⲇ, -5 * ᐃ, ᐃ * -18.5, 10 * ᐃ, ᐃ * 37, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆᐃ]);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 133.5, ᐃ * 175.5);
		Ⲇ.globalAlpha = .5;
		ᐃΔⵠ(Ⲇ, -22.5 * ᐃ, ᐃ * -6.5, 45 * ᐃ, ⲆⲆΔᐃᐃ * ᐃ, ΔⲆΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠⲆⲆ;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 128.5, ᐃ * 170.5);
		ᐃΔⵠ(Ⲇ, -22.5 * ᐃ, -6.5 * ᐃ, 45 * ᐃ, 13 * ᐃ, ᐃ * 20);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃᐃΔⵠ]);
		return ΔΔ
	}

	function ⲆΔΔᐃᐃᐃᐃⲆⵠ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 200 * ᐃ;
		var ΔᐃⲆ = ᐃ * 180;
		var Δᐃᐃ = ᐃ * ⵠΔΔᐃᐃⲆⲆ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ;
		Ⲇ.beginPath();
		ᐃΔⵠ(Ⲇ, ⲆⵠⲆ, 0, ᐃᐃⲆ, ΔᐃⲆ - Δᐃᐃ, Δᐃᐃ);
		Ⲇ.globalAlpha = .8;
		Δⵠ(Ⲇ, "#1D6055");
		Ⲇ.globalAlpha = ⲆΔᐃⲆ;
		var text = ⲆΔΔΔⲆ(ᐃ, "Leaderboard", 25, ⵠ[68]);
		Ⲇ.drawImage(text, (ᐃᐃⲆ - text.width) / 2, ᐃ * 5);
		return ΔΔ
	}

	function ⵠⲆΔⵠⵠⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 465 * ᐃ;
		ΔΔ.height = ᐃ * 310;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(126 * ᐃ, 192 * ᐃ);
		Ⲇ.bezierCurveTo(198 * ᐃ, 202 * ᐃ, ᐃ * 245, 203 * ᐃ, ᐃ * 335, 194 * ᐃ);
		Ⲇ.bezierCurveTo(336 * ᐃ, ᐃ * 232, ᐃ * 326, 235 * ᐃ, ᐃ * 232, ᐃ * 237);
		Ⲇ.bezierCurveTo(ᐃ * 161, 235 * ᐃ, ᐃ * 122, ᐃ * 235, ᐃ * 126, 193 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⲆᐃ], ᐃᐃ[1], ᐃ * ⵠᐃᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 146, ᐃ * 239);
		Ⲇ.bezierCurveTo(174 * ᐃ, 74 * ᐃ, 287 * ᐃ, 88 * ᐃ, 320 * ᐃ, ᐃ * 240);
		Ⲇ.bezierCurveTo(ᐃ * 329, ᐃ * 231, 340 * ᐃ, 219 * ᐃ, 332 * ᐃ, 115 * ᐃ);
		Ⲇ.bezierCurveTo(330 * ᐃ, 40 * ᐃ, 144 * ᐃ, ᐃ * 30, ᐃ * 129, 116 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, 217 * ᐃ, 124 * ᐃ, ᐃ * 228, ᐃ * 143, ᐃ * 237);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], ᐃΔⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 126, ᐃ * 193);
		Ⲇ.bezierCurveTo(173 * ᐃ, 94 * ᐃ, 209 * ᐃ, ᐃΔⵠΔᐃ * ᐃ, 228 * ᐃ, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 190, ᐃ * 112, ᐃ * 165, ᐃ * 115, ᐃ * 127, ᐃ * 184);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[1], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 230, 57 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 266, 117 * ᐃ, 310 * ᐃ, 130 * ᐃ, ᐃ * 332, ᐃ * 183);
		Ⲇ.bezierCurveTo(290 * ᐃ, 112 * ᐃ, 262 * ᐃ, 109 * ᐃ, 230 * ᐃ, ᐃ * 56);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[1], ᐃ * ⲆⲆΔΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 154, 212 * ᐃ);
		Ⲇ.bezierCurveTo(208 * ᐃ, 224 * ᐃ, ᐃ * 252, 219 * ᐃ, 305 * ᐃ, ᐃ * 212);
		Ⲇ.bezierCurveTo(ᐃ * 267, 219 * ᐃ, ᐃ * 204, ᐃ * 222, ᐃ * 155, ᐃ * 212);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ⵠⲆⲆ], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 239, ᐃ * 59);
		Ⲇ.bezierCurveTo(ᐃ * 302, ᐃ * 72, 325 * ᐃ, 84 * ᐃ, 326 * ᐃ, 115 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 289, ᐃ * 80, 270 * ᐃ, ᐃ * 88, ᐃ * 253, 78 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⲆⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(216 * ᐃ, ᐃ * 61);
		Ⲇ.bezierCurveTo(209 * ᐃ, ᐃ * 70, ᐃ * 209, 70 * ᐃ, ᐃ * 202, ᐃ * 79);
		Ⲇ.bezierCurveTo(ᐃ * 173, ᐃ * 87, 162 * ᐃ, ᐃ * 91, ᐃ * 137, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 153, 78 * ᐃ, 174 * ᐃ, 67 * ᐃ, 212 * ᐃ, 62 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 175, 125 * ᐃ);
		Ⲇ.bezierCurveTo(218 * ᐃ, 94 * ᐃ, 238 * ᐃ, ᐃ * 90, ᐃ * 281, ᐃ * 125);
		Ⲇ.bezierCurveTo(ᐃ * 245, 89 * ᐃ, 240 * ᐃ, 80 * ᐃ, 228 * ᐃ, ᐃ * 67);
		Ⲇ.bezierCurveTo(207 * ᐃ, ᐃ * ⵠⵠΔΔⵠ, 192 * ᐃ, 104 * ᐃ, ᐃ * 177, ᐃ * 123);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠᐃ]);
		return ΔΔ
	}

	function ᐃⵠⵠⲆᐃᐃⵠΔΔ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 496 * ᐃ;
		ΔΔ.height = ᐃ * 520;
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, -ⲆᐃΔⵠⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, 247.01138305664062 * ᐃ, 250.13068389892578 * ᐃ, 232.81967270830015 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆⵠ], ᐃᐃ[2], ΔⲆΔⵠⵠΔⲆ * ᐃ);
		Ⲇ.globalCompositeOperation = ⵠ[563];
		ΔⵠⲆ(Ⲇ, ᐃ * 247.01138305664062, 249.3125 * ᐃ, ᐃ * 161.4465855941215);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆⲆ], ᐃᐃ[0], ᐃ * ᐃⲆᐃᐃΔⵠⵠ);
		Ⲇ.globalCompositeOperation = ⵠ[190];
		return ΔΔ
	}

	function ⲆⵠᐃⲆᐃⵠᐃⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 316 * ᐃ;
		ΔΔ.height = ᐃ * 365;
		Ⲇ.save();
		Ⲇ.translate(156.07142639160156 * ᐃ, ᐃ * 51.81248474121094);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -21.5, ᐃ * -34, 43 * ᐃ, 68 * ᐃ, ΔᐃⲆⵠⲆⵠⵠ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * Ⲇⵠⵠⵠᐃⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 126.57142639160156, ᐃ * 67.38392639160156);
		Ⲇ.bezierCurveTo(126.57142639160156 * ᐃ, 57.38392639160156 * ᐃ, ᐃ * 132.57142639160156, 54.38392639160156 * ᐃ, 140.57142639160156 * ᐃ, 54.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(177.57142639160156 * ᐃ, 55.38392639160156 * ᐃ, 158.07142639160156 * ᐃ, 54.38392639160156 * ᐃ, ᐃ * 175.57142639160156, ᐃ * 54.38392639160156);
		Ⲇ.bezierCurveTo(ᐃ * 185.57142639160156, 56.38392639160156 * ᐃ, 185.57142639160156 * ᐃ, ᐃ * 57.38392639160156, 184.57142639160156 * ᐃ, ᐃ * 66.38392639160156);
		Ⲇ.bezierCurveTo(184.57142639160156 * ᐃ, ᐃ * 78.38392639160156, 184.57142639160156 * ᐃ, ᐃ * 89.38392639160156, ᐃ * 184.57142639160156, ᐃ * 90.38392639160156);
		Ⲇ.bezierCurveTo(177.57142639160156 * ᐃ, 107.38392639160156 * ᐃ, 180.57142639160156 * ᐃ, 112.38392639160156 * ᐃ, ᐃ * 189.57142639160156, ᐃ * 116.38392639160156);
		Ⲇ.bezierCurveTo(212.57142639160156 * ᐃ, 127.38392639160156 * ᐃ, ᐃ * 212.57142639160156, ᐃ * 132.38392639160156, 211.57142639160156 * ᐃ, 150.38392639160156 * ᐃ);
		Ⲇ.bezierCurveTo(211.57142639160156 * ᐃ, 227.59821128845215 * ᐃ, 211.57142639160156 * ᐃ, 227.59821128845215 * ᐃ, 211.57142639160156 * ᐃ, ᐃ * 304.81249618530273);
		Ⲇ.bezierCurveTo(212.57142639160156 * ᐃ, ᐃ * 328.81249618530273, ᐃ * 209.57142639160156, 330.81249618530273 * ᐃ, ᐃ * 188.57142639160156, ᐃ * 333.81249618530273);
		Ⲇ.bezierCurveTo(155.07142639160156 * ᐃ, 333.31249618530273 * ᐃ, 155.07142639160156 * ᐃ, ᐃ * 333.31249618530273, ᐃ * 121.57142639160156, ᐃ * 332.81249618530273);
		Ⲇ.bezierCurveTo(104.57142639160156 * ᐃ, 327.81249618530273 * ᐃ, 105.57142639160156 * ᐃ, ᐃ * 328.81249618530273, 104.57142639160156 * ᐃ, 312.81249618530273 * ᐃ);
		Ⲇ.bezierCurveTo(104.57142639160156 * ᐃ, ᐃ * 228.16963958740234, ᐃ * 104.57142639160156, ᐃ * 228.16963958740234, ᐃ * 104.57142639160156, 143.52678298950195 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106.57142639160156, ᐃ * 124.52678298950195, 110.57142639160156 * ᐃ, ᐃ * 123.52678298950195, 123.57142639160156 * ᐃ, 116.52678298950195 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 136.57142639160156, 110.52678298950195 * ᐃ, ᐃ * 130.57142639160156, ᐃ * 106.52678298950195, ᐃ * 126.57142639160156, ᐃ * 98.52678298950195);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[5], 15 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(125.57142639160156 * ᐃ, 156.66963958740234 * ᐃ);
		Ⲇ.bezierCurveTo(125.57142639160156 * ᐃ, 182.66963958740234 * ᐃ, ᐃ * 125.57142639160156, ᐃ * 182.66963958740234, ᐃ * 125.57142639160156, 208.66963958740234 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔΔⲆⲆ, ᐃᐃ[ᐃⵠΔⵠⵠ], ᐃ * ⲆΔⲆⲆⲆⲆᐃ);
		return ΔΔ
	}

	function ΔⲆᐃⲆᐃⲆΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 372 * ᐃ;
		ΔΔ.height = 358 * ᐃ;
		Ⲇ.translate(0 * ᐃ, ᐃ * ⵠⵠΔⲆᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .2 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(247.00003051757812 * ᐃ, 115.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(305.0000305175781 * ᐃ, ᐃ * 124.76704406738281, 335.0000305175781 * ᐃ, 112.76704406738281 * ᐃ, 359.0000305175781 * ᐃ, 93.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(359.5000305175781 * ᐃ, ᐃ * 113.26704406738281, 359.5000305175781 * ᐃ, ᐃ * 113.26704406738281, 360.0000305175781 * ᐃ, 132.7670440673828 * ᐃ);
		Ⲇ.bezierCurveTo(339.0000305175781 * ᐃ, 177.7670440673828 * ᐃ, 281.0000305175781 * ᐃ, ᐃ * 178.7670440673828, ᐃ * 243.00003051757812, ᐃ * 183.7670440673828);
		Ⲇ.bezierCurveTo(ᐃ * 214.50003051757812, 214.2670440673828 * ᐃ, ᐃ * 214.50003051757812, ᐃ * 214.2670440673828, ᐃ * 186.00003051757812, ᐃ * 244.7670440673828);
		Ⲇ.bezierCurveTo(155.00003051757812 * ᐃ, ᐃ * 214.2670440673828, 155.00003051757812 * ᐃ, 214.2670440673828 * ᐃ, ᐃ * 124.00003051757812, 183.7670440673828 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 51.000030517578125, 180.7670440673828 * ᐃ, ᐃ * 21.000030517578125, ᐃ * 161.7670440673828, ᐃ * 9.000030517578125, ᐃ * 129.7670440673828);
		Ⲇ.bezierCurveTo(ᐃ * 8.500030517578125, ᐃ * 110.76704406738281, ᐃ * 8.500030517578125, ᐃ * 110.76704406738281, 8.000030517578125 * ᐃ, 91.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(31.000030517578125 * ᐃ, ᐃ * 112.76704406738281, ᐃ * 87.00003051757812, 119.76704406738281 * ᐃ, ᐃ * 116.00003051757812, ᐃ * 117.76704406738281);
		Ⲇ.bezierCurveTo(ᐃ * 175.00003051757812, ᐃ * 18.767044067382812, 170.00003051757812 * ᐃ, 23.767044067382812 * ᐃ, ᐃ * 181.00003051757812, ᐃ * 14.767044067382812);
		Ⲇ.bezierCurveTo(199.00003051757812 * ᐃ, ᐃ * 34.76704406738281, 203.00003051757812 * ᐃ, 54.76704406738281 * ᐃ, 247.00003051757812 * ᐃ, ᐃ * 115.76704406738281);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ], ᐃᐃ[0], ᐃ * ⲆⲆᐃⵠΔ);
		Ⲇ.translate(ΔΔⵠᐃ * ᐃ, ᐃ * -ᐃᐃⲆᐃᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(107.00003051757812 * ᐃ, ᐃ * 54.13069152832031);
		Ⲇ.bezierCurveTo(ᐃ * 106.50003051757812, 38.63069152832031 * ᐃ, 106.50003051757812 * ᐃ, 38.63069152832031 * ᐃ, 106.00003051757812 * ᐃ, 23.130691528320312 * ᐃ);
		Ⲇ.bezierCurveTo(121.50003051757812 * ᐃ, ᐃ * 38.13069152832031, ᐃ * 121.50003051757812, ᐃ * 38.13069152832031, 137.00003051757812 * ᐃ, ᐃ * 53.13069152832031);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠΔ], ᐃᐃ[3], ᐃ * ⵠΔⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 233.00003051757812, ᐃ * 53.6761474609375);
		Ⲇ.bezierCurveTo(ᐃ * 247.00003051757812, 37.1761474609375 * ᐃ, ᐃ * 247.00003051757812, 37.1761474609375 * ᐃ, 261.0000305175781 * ᐃ, 20.6761474609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 261.0000305175781, 36.1761474609375 * ᐃ, ᐃ * 261.0000305175781, 36.1761474609375 * ᐃ, ᐃ * 261.0000305175781, 51.6761474609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(293.0000305175781 * ᐃ, 54.403411865234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 300.0000305175781, ᐃ * 49.903411865234375, 300.0000305175781 * ᐃ, 49.903411865234375 * ᐃ, ᐃ * 307.0000305175781, 45.403411865234375 * ᐃ);
		Ⲇ.bezierCurveTo(307.0000305175781 * ᐃ, 49.903411865234375 * ᐃ, 307.0000305175781 * ᐃ, ᐃ * 49.903411865234375, 307.0000305175781 * ᐃ, ᐃ * 54.403411865234375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ], ᐃᐃ[3], ΔᐃΔᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(77.00003051757812 * ᐃ, ᐃ * 54.403411865234375);
		Ⲇ.bezierCurveTo(70.00003051757812 * ᐃ, ᐃ * 50.403411865234375, 70.00003051757812 * ᐃ, ᐃ * 50.403411865234375, ᐃ * 63.000030517578125, 46.403411865234375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.500030517578125, 50.903411865234375 * ᐃ, ᐃ * 62.500030517578125, ᐃ * 50.903411865234375, 62.000030517578125 * ᐃ, ᐃ * 55.403411865234375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠᐃ], ᐃᐃ[3], ᐃ * ⲆⵠⲆⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 58.000030517578125, 122.3125 * ᐃ);
		Ⲇ.bezierCurveTo(59.500030517578125 * ᐃ, ᐃ * 97.3125, ᐃ * 59.500030517578125, 97.3125 * ᐃ, ᐃ * 61.000030517578125, ᐃ * 72.3125);
		Ⲇ.bezierCurveTo(91.00003051757812 * ᐃ, 89.3125 * ᐃ, 91.00003051757812 * ᐃ, ᐃ * 89.3125, ᐃ * 121.00003051757812, ᐃ * 106.3125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[1], ᐃΔᐃᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(310.0000305175781 * ᐃ, 127.3125 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 308.0000305175781, ᐃ * 98.3125, 308.0000305175781 * ᐃ, ᐃ * 98.3125, ᐃ * 306.0000305175781, ᐃ * 69.3125);
		Ⲇ.bezierCurveTo(274.5000305175781 * ᐃ, 88.8125 * ᐃ, 274.5000305175781 * ᐃ, ᐃ * 88.8125, 243.00003051757812 * ᐃ, ᐃ * 108.3125);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[1], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(226.00003051757812 * ᐃ, 87.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(243.50003051757812 * ᐃ, 66.85795593261719 * ᐃ, ᐃ * 243.50003051757812, 66.85795593261719 * ᐃ, 261.0000305175781 * ᐃ, 45.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(265.0000305175781 * ᐃ, 83.85795593261719 * ᐃ, 265.0000305175781 * ᐃ, ᐃ * 83.85795593261719, 269.0000305175781 * ᐃ, 121.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(235.00003051757812 * ᐃ, 122.85795593261719 * ᐃ, 233.00003051757812 * ᐃ, ᐃ * 107.85795593261719, ᐃ * 228.00003051757812, 90.85795593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⲆⵠⵠⲆ], ᐃ * ⲆᐃᐃᐃⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.00003051757812 * ᐃ, 128.8579559326172 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 104.50003051757812, ᐃ * 87.85795593261719, ᐃ * 104.50003051757812, 87.85795593261719 * ᐃ, ᐃ * 104.00003051757812, ᐃ * 46.85795593261719);
		Ⲇ.bezierCurveTo(ᐃ * 126.50003051757812, 69.35795593261719 * ᐃ, 126.50003051757812 * ᐃ, 69.35795593261719 * ᐃ, 149.00003051757812 * ᐃ, ᐃ * 91.85795593261719);
		Ⲇ.bezierCurveTo(130.00003051757812 * ᐃ, 123.85795593261719 * ᐃ, ᐃ * 123.00003051757812, ᐃ * 132.8579559326172, 107.00003051757812 * ᐃ, 130.8579559326172 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆᐃⲆⲆ], ᐃᐃ[ᐃⵠ], ᐃ * ⲆⵠΔⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 59.000030517578125, ᐃ * 121.85795593261719);
		Ⲇ.bezierCurveTo(59.500030517578125 * ᐃ, 99.35795593261719 * ᐃ, 59.500030517578125 * ᐃ, ᐃ * 99.35795593261719, ᐃ * 60.000030517578125, ᐃ * 76.85795593261719);
		Ⲇ.bezierCurveTo(84.00003051757812 * ᐃ, ᐃ * 92.35795593261719, 84.00003051757812 * ᐃ, ᐃ * 92.35795593261719, ᐃ * 108.00003051757812, ᐃ * 107.85795593261719);
		Ⲇ.bezierCurveTo(106.00003051757812 * ᐃ, 148.8579559326172 * ᐃ, ᐃ * 86.00003051757812, ᐃ * 148.8579559326172, 62.000030517578125 * ᐃ, 123.85795593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105.00003051757812 * ᐃ, 132.8579559326172 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 104.50003051757812, 93.35795593261719 * ᐃ, 104.50003051757812 * ᐃ, 93.35795593261719 * ᐃ, 104.00003051757812 * ᐃ, ᐃ * 53.85795593261719);
		Ⲇ.bezierCurveTo(ᐃ * 126.50003051757812, 75.85795593261719 * ᐃ, 126.50003051757812 * ᐃ, ᐃ * 75.85795593261719, ᐃ * 149.00003051757812, ᐃ * 97.85795593261719);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ⵠΔᐃΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(311.0000305175781 * ᐃ, ᐃ * 126.85795593261719);
		Ⲇ.bezierCurveTo(ᐃ * 309.0000305175781, ᐃ * 101.35795593261719, 309.0000305175781 * ᐃ, 101.35795593261719 * ᐃ, 307.0000305175781 * ᐃ, 75.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(271.0000305175781 * ᐃ, 96.85795593261719 * ᐃ, 271.0000305175781 * ᐃ, ᐃ * 96.85795593261719, ᐃ * 235.00003051757812, 117.85795593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 228.00003051757812, 96.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(244.50003051757812 * ᐃ, ᐃ * 74.85795593261719, 244.50003051757812 * ᐃ, ᐃ * 74.85795593261719, ᐃ * 261.0000305175781, ᐃ * 52.85795593261719);
		Ⲇ.bezierCurveTo(ᐃ * 265.5000305175781, ᐃ * 89.85795593261719, 265.5000305175781 * ᐃ, ᐃ * 89.85795593261719, 270.0000305175781 * ᐃ, 126.85795593261719 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ], ᐃᐃ[3], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(12.000030517578125 * ᐃ, ᐃ * 86.13069152832031);
		Ⲇ.bezierCurveTo(36.000030517578125 * ᐃ, 113.13069152832031 * ᐃ, ᐃ * 84.00003051757812, ᐃ * 111.13069152832031, ᐃ * 116.00003051757812, ᐃ * 113.13069152832031);
		Ⲇ.bezierCurveTo(164.00003051757812 * ᐃ, ᐃ * 23.130691528320312, 172.00003051757812 * ᐃ, ᐃ * 18.130691528320312, 181.00003051757812 * ᐃ, 9.130691528320312 * ᐃ);
		Ⲇ.bezierCurveTo(199.00003051757812 * ᐃ, ᐃ * 29.130691528320312, ᐃ * 221.00003051757812, ᐃ * 78.13069152832031, ᐃ * 247.00003051757812, 112.13069152832031 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 301.0000305175781, 122.13069152832031 * ᐃ, 338.0000305175781 * ᐃ, ᐃ * 111.13069152832031, ᐃ * 359.0000305175781, ᐃ * 94.13069152832031);
		Ⲇ.bezierCurveTo(359.0000305175781 * ᐃ, ᐃ * 113.13069152832031, 358.5000305175781 * ᐃ, 105.13069152832031 * ᐃ, 358.0000305175781 * ᐃ, ᐃ * 116.13069152832031);
		Ⲇ.bezierCurveTo(ᐃ * 270.5000305175781, ᐃ * 130.1306915283203, ᐃ * 270.5000305175781, ᐃ * 130.1306915283203, ᐃ * 183.00003051757812, 144.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 98.00003051757812, ᐃ * 128.6306915283203, 98.00003051757812 * ᐃ, 128.6306915283203 * ᐃ, 13.000030517578125 * ᐃ, ᐃ * 113.13069152832031);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[1], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(247.00003051757812 * ᐃ, ᐃ * 115.76704406738281);
		Ⲇ.bezierCurveTo(305.0000305175781 * ᐃ, 124.76704406738281 * ᐃ, ᐃ * 335.0000305175781, 112.76704406738281 * ᐃ, ᐃ * 359.0000305175781, 93.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 359.5000305175781, ᐃ * 113.26704406738281, ᐃ * 359.5000305175781, 113.26704406738281 * ᐃ, ᐃ * 360.0000305175781, 132.7670440673828 * ᐃ);
		Ⲇ.bezierCurveTo(339.0000305175781 * ᐃ, 177.7670440673828 * ᐃ, 281.0000305175781 * ᐃ, ᐃ * 178.7670440673828, 243.00003051757812 * ᐃ, 183.7670440673828 * ᐃ);
		Ⲇ.bezierCurveTo(214.50003051757812 * ᐃ, ᐃ * 214.2670440673828, 214.50003051757812 * ᐃ, ᐃ * 214.2670440673828, ᐃ * 186.00003051757812, ᐃ * 244.7670440673828);
		Ⲇ.bezierCurveTo(ᐃ * 155.00003051757812, 214.2670440673828 * ᐃ, ᐃ * 155.00003051757812, ᐃ * 214.2670440673828, 124.00003051757812 * ᐃ, ᐃ * 183.7670440673828);
		Ⲇ.bezierCurveTo(ᐃ * 51.000030517578125, 180.7670440673828 * ᐃ, ᐃ * 21.000030517578125, ᐃ * 161.7670440673828, 9.000030517578125 * ᐃ, 129.7670440673828 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 8.500030517578125, 110.76704406738281 * ᐃ, 8.500030517578125 * ᐃ, 110.76704406738281 * ᐃ, ᐃ * 8.000030517578125, ᐃ * 91.76704406738281);
		Ⲇ.bezierCurveTo(ᐃ * 31.000030517578125, 112.76704406738281 * ᐃ, 87.00003051757812 * ᐃ, 119.76704406738281 * ᐃ, 116.00003051757812 * ᐃ, 117.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 175.00003051757812, 18.767044067382812 * ᐃ, 170.00003051757812 * ᐃ, 23.767044067382812 * ᐃ, ᐃ * 181.00003051757812, ᐃ * 14.767044067382812);
		Ⲇ.bezierCurveTo(199.00003051757812 * ᐃ, ᐃ * 34.76704406738281, 203.00003051757812 * ᐃ, 54.76704406738281 * ᐃ, 247.00003051757812 * ᐃ, ᐃ * 115.76704406738281);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔΔ], ᐃᐃ[3], ΔΔⵠᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 27.000030517578125, 94.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 11.000030517578125, ᐃ * 81.76704406738281, ᐃ * 31.000030517578125, ᐃ * 72.76704406738281, 44.000030517578125 * ᐃ, 59.76704406738281 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 9.000030517578125, ᐃ * 65.76704406738281, ᐃ * 4.000030517578125, 78.76704406738281 * ᐃ, 9.000030517578125 * ᐃ, ᐃ * 89.76704406738281);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠΔΔ], ᐃᐃ[ⵠⵠⲆⵠ], ᐃ * ΔᐃΔᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(352.0000305175781 * ᐃ, 100.76705932617188 * ᐃ);
		Ⲇ.bezierCurveTo(362.0000305175781 * ᐃ, 92.76705932617188 * ᐃ, ᐃ * 352.0000305175781, 84.76705932617188 * ᐃ, 340.0000305175781 * ᐃ, ᐃ * 68.76705932617188);
		Ⲇ.bezierCurveTo(360.0000305175781 * ᐃ, ᐃ * 69.76705932617188, 364.0000305175781 * ᐃ, 79.76705932617188 * ᐃ, 364.0000305175781 * ᐃ, ᐃ * 94.76705932617188);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆΔ], ᐃᐃ[1], ᐃ * 1);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(25.000030517578125 * ᐃ, 97.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(2.000030517578125 * ᐃ, ᐃ * 76.94886779785156, 29.000030517578125 * ᐃ, 62.94886779785156 * ᐃ, 44.000030517578125 * ᐃ, ᐃ * 59.94886779785156);
		Ⲇ.bezierCurveTo(8.000030517578125 * ᐃ, 59.94886779785156 * ᐃ, -.999969482421875 * ᐃ, ᐃ * 81.94886779785156, 4.000030517578125 * ᐃ, 92.94886779785156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 349.0000305175781, ᐃ * 100.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 366.0000305175781, 82.94886779785156 * ᐃ, 353.0000305175781 * ᐃ, 76.94886779785156 * ᐃ, 337.0000305175781 * ᐃ, 67.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 366.0000305175781, ᐃ * 69.94886779785156, 366.0000305175781 * ᐃ, 83.94886779785156 * ᐃ, ᐃ * 363.0000305175781, ᐃ * 101.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 10 * ᐃ);
		ΔⵠⲆ(Ⲇ, 46.000030517578125 * ᐃ, 137.5852279663086 * ᐃ, 9.219544457292887 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔΔⲆ], ᐃᐃ[5], ᐃ * 1);
		ΔⵠⲆ(Ⲇ, ᐃ * 308.0000305175781, ᐃ * 141.5852279663086, ᐃ * 8.54400374531753);
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔⲆⲆΔ], 1 * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 92.00003051757812, 149.58523559570312 * ᐃ, ᐃ * 14.866068747318506);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ], ᐃᐃ[ⵠⲆⲆᐃⵠ], 1 * ᐃ);
		ΔⵠⲆ(Ⲇ, 262.0000305175781 * ᐃ, 148.8579559326172 * ᐃ, ᐃ * 15.620499351813308);
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ], ᐃᐃ[ᐃᐃⲆᐃΔ], ᐃ * 1);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 184.00003051757812, ᐃ * 68.85795593261719);
		Ⲇ.bezierCurveTo(ᐃ * 203.00003051757812, 108.85795593261719 * ᐃ, ᐃ * 203.00003051757812, 108.85795593261719 * ᐃ, 222.00003051757812 * ᐃ, ᐃ * 148.8579559326172);
		Ⲇ.bezierCurveTo(202.50003051757812 * ᐃ, ᐃ * 177.8579559326172, 202.50003051757812 * ᐃ, ᐃ * 177.8579559326172, 183.00003051757812 * ᐃ, ᐃ * 206.8579559326172);
		Ⲇ.bezierCurveTo(162.00003051757812 * ᐃ, ᐃ * 178.8579559326172, 162.00003051757812 * ᐃ, ᐃ * 178.8579559326172, 141.00003051757812 * ᐃ, 150.8579559326172 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔⲆⲆΔ], ᐃᐃⵠᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 183.00003051757812, 104.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 192.50003051757812, 125.44886779785156 * ᐃ, ᐃ * 192.50003051757812, ᐃ * 125.44886779785156, ᐃ * 202.00003051757812, 145.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 192.00003051757812, ᐃ * 163.94886779785156, 192.00003051757812 * ᐃ, ᐃ * 163.94886779785156, ᐃ * 182.00003051757812, ᐃ * 181.94886779785156);
		Ⲇ.bezierCurveTo(172.50003051757812 * ᐃ, ᐃ * 164.44886779785156, ᐃ * 172.50003051757812, 164.44886779785156 * ᐃ, ᐃ * 163.00003051757812, ᐃ * 146.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[6]);
		return ΔΔ
	}

	function ᐃⵠⵠⵠᐃⲆⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 160 * ᐃ;
		ΔΔ.height = 161 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(Δⵠⵠ, ᐃ * 10);
		Ⲇ.save();
		Ⲇ.translate(80.5 * ᐃ, ᐃ * 78);
		ᐃΔⵠ(Ⲇ, ᐃ * -71.5, ᐃ * -71, ᐃ * 143, ᐃ * 143, ᐃ * ⲆᐃΔⵠⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -10);
		Ⲇ.save();
		Ⲇ.translate(80.5 * ᐃ, ᐃ * 78);
		ᐃΔⵠ(Ⲇ, -71.5 * ᐃ, ᐃ * -71, ᐃ * 143, ᐃ * 143, ᐃ * ΔΔⵠᐃⵠ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ΔⵠΔΔ], ⵠⲆΔⲆᐃ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 80, ᐃ * 78.5);
		ᐃΔⵠ(Ⲇ, ᐃ * -17, -72.5 * ᐃ, ᐃ * 34, ᐃ * 145, ΔⲆⵠΔᐃ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃᐃ], ᐃᐃ[4], ᐃ * ⵠⲆⵠⵠᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(0, 10 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(80 * ᐃ, 79.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, -73 * ᐃ, -16.5 * ᐃ, ᐃ * 145, 34 * ᐃ, ⲆΔⵠᐃⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(0, ᐃ * -10);
		Ⲇ.save();
		Ⲇ.translate(80 * ᐃ, 79.5 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -73, -16.5 * ᐃ, ᐃ * 145, 34 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠΔ], ᐃᐃ[4], 6 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆΔⵠⲆ;
		Ⲇ.translate(0, ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 79, 71 * ᐃ);
		Ⲇ.bezierCurveTo(90 * ᐃ, 42 * ᐃ, ᐃ * 98, 36 * ᐃ, 109 * ᐃ, ᐃ * 43);
		Ⲇ.bezierCurveTo(ᐃ * 119, ᐃ * 47, 128 * ᐃ, 62 * ᐃ, ᐃ * 107, ᐃ * 72);
		Ⲇ.bezierCurveTo(96 * ᐃ, ᐃ * 78.5, 96 * ᐃ, 78.5 * ᐃ, 85 * ᐃ, ᐃ * 85);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84 * ᐃ, ᐃ * 78);
		Ⲇ.bezierCurveTo(113 * ᐃ, 82 * ᐃ, 123 * ᐃ, 97 * ᐃ, 115 * ᐃ, ᐃ * 108);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 119, 98 * ᐃ, ᐃ * 124, 87 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 81.5, ᐃ * 94.5, ᐃ * 81.5, 94.5 * ᐃ, 76 * ᐃ, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80 * ᐃ, 73 * ᐃ);
		Ⲇ.bezierCurveTo(64 * ᐃ, ᐃ * 37, 55 * ᐃ, 34 * ᐃ, ᐃ * 45, 42 * ᐃ);
		Ⲇ.bezierCurveTo(30 * ᐃ, 54 * ᐃ, ᐃ * 36, 65 * ᐃ, ᐃ * 51, 72 * ᐃ);
		Ⲇ.bezierCurveTo(62.5 * ᐃ, 77 * ᐃ, 62.5 * ᐃ, 77 * ᐃ, ᐃ * 74, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 82, ᐃ * 83);
		Ⲇ.bezierCurveTo(73 * ᐃ, 107 * ᐃ, ᐃ * 60, ᐃ * 123, ᐃ * 47, 113 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 33, 105 * ᐃ, 33 * ᐃ, 92 * ᐃ, ᐃ * 52, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 74, 73 * ᐃ, ᐃ * 77, 76 * ᐃ, ᐃ * 76, 75 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⲆᐃ]);
		Ⲇ.globalAlpha = ᐃⵠ;
		Ⲇ.translate(ⵠᐃⲆᐃ, -ᐃᐃⵠⵠⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 79, 71 * ᐃ);
		Ⲇ.bezierCurveTo(90 * ᐃ, ᐃ * 42, ᐃ * 98, 36 * ᐃ, 109 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(119 * ᐃ, 47 * ᐃ, 128 * ᐃ, 62 * ᐃ, 107 * ᐃ, 72 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 96, 78.5 * ᐃ, 96 * ᐃ, ᐃ * 78.5, ᐃ * 85, ᐃ * 85);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ⲆᐃΔᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(84 * ᐃ, ᐃ * 78);
		Ⲇ.bezierCurveTo(113 * ᐃ, ᐃ * 82, 123 * ᐃ, 97 * ᐃ, ᐃ * 115, ᐃ * 108);
		Ⲇ.bezierCurveTo(ᐃ * 110, 119 * ᐃ, ᐃ * 98, ᐃ * 124, ᐃ * 87, 107 * ᐃ);
		Ⲇ.bezierCurveTo(81.5 * ᐃ, ᐃ * 94.5, 81.5 * ᐃ, 94.5 * ᐃ, 76 * ᐃ, 82 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[4], ᐃ * ᐃⲆⵠⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(80 * ᐃ, ᐃ * 73);
		Ⲇ.bezierCurveTo(ᐃ * 64, 37 * ᐃ, ᐃ * 55, ᐃ * 34, 45 * ᐃ, ᐃ * 42);
		Ⲇ.bezierCurveTo(30 * ᐃ, ᐃ * 54, 36 * ᐃ, 65 * ᐃ, ᐃ * 51, ᐃ * 72);
		Ⲇ.bezierCurveTo(ᐃ * 62.5, ᐃ * 77, ᐃ * 62.5, 77 * ᐃ, 74 * ᐃ, ᐃ * 82);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], ᐃ * 6);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(82 * ᐃ, 83 * ᐃ);
		Ⲇ.bezierCurveTo(73 * ᐃ, 107 * ᐃ, 60 * ᐃ, ᐃ * 123, 47 * ᐃ, ᐃ * 113);
		Ⲇ.bezierCurveTo(ᐃ * 33, ᐃ * 105, ᐃ * 33, 92 * ᐃ, 52 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(74 * ᐃ, 73 * ᐃ, ᐃ * 77, ᐃ * 76, 76 * ᐃ, 75 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⵠⲆ], ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃ * ⵠⲆᐃⵠᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ⵠᐃⲆᐃ, ΔΔⵠᐃⵠ * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 78.5, 78 * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * -13.5, ᐃ * -ᐃⵠΔⲆᐃⵠᐃ, ᐃ * 27, 27 * ᐃ, ΔⲆⵠⲆⲆ * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = ⵠᐃΔᐃ;
		Ⲇ.translate(0, ᐃ * -ⵠΔᐃΔᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 78.5, ᐃ * 78);
		ᐃΔⵠ(Ⲇ, ᐃ * -13.5, -14 * ᐃ, ᐃ * 27, ᐃ * 27, ᐃ * 6);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔᐃⲆ], ᐃᐃ[ⲆⵠⲆⲆ], ᐃ * Ⲇᐃᐃᐃⵠ);
		return ΔΔ
	}

	function ⲆⵠⵠⵠΔⲆⲆⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 400 * ᐃ;
		ΔΔ.height = 400 * ᐃ;
		Ⲇ.translate(0, ᐃ * ⲆΔΔᐃᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 108, 216.5 * ᐃ, ᐃ * 108, ᐃ * 216.5, ᐃ * 114, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124, 300 * ᐃ, ᐃ * 237, 299 * ᐃ, 251 * ᐃ, ᐃ * 279);
		Ⲇ.bezierCurveTo(257 * ᐃ, ᐃ * 217, 257 * ᐃ, ᐃ * 217, 263 * ᐃ, 155 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 248, 194 * ᐃ, ᐃ * 91, 180 * ᐃ, ᐃ * 103, ᐃ * 156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔᐃⲆΔ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102 * ᐃ, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * 53, ⲆⵠΔΔΔ * ᐃ, ᐃ * 53, ᐃ * 263, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 248, ᐃ * 38, 99 * ᐃ, ᐃ * 69, 103 * ᐃ, 154 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ⲆΔⲆᐃⲆ, ᐃᐃ[0], ⵠΔⵠᐃⵠΔⵠ * ᐃ);
		Ⲇ.translate(0, ᐃ * -5);
		Ⲇ.globalAlpha = ⲆⲆΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 103, ᐃ * 154);
		Ⲇ.bezierCurveTo(98 * ᐃ, 119 * ᐃ, ᐃ * 264, ᐃ * 119, ᐃ * 264, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 271, ᐃ * 189, ᐃ * 94, 188 * ᐃ, ᐃ * 103, ᐃ * 154);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠⵠ], ᐃᐃ[ᐃⲆⵠᐃ], ᐃ * ⲆᐃᐃⲆΔ);
		Ⲇ.translate(ᐃⵠΔ, 25 * ᐃ);
		Ⲇ.globalAlpha = ⵠⵠⲆ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 103, ᐃ * 154);
		Ⲇ.bezierCurveTo(98 * ᐃ, 119 * ᐃ, ᐃ * 264, ᐃ * 119, 264 * ᐃ, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 271, 189 * ᐃ, ᐃ * 94, ᐃ * 188, ᐃ * 103, ᐃ * 154);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆⵠΔΔ]);
		Ⲇ.translate(0, -25 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(102 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 108, 216.5 * ᐃ, ᐃ * 108, 216.5 * ᐃ, ᐃ * 114, 279 * ᐃ);
		Ⲇ.bezierCurveTo(124 * ᐃ, ᐃ * 300, ᐃ * 237, 299 * ᐃ, ᐃ * 251, 279 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 257, ᐃ * 217, 257 * ᐃ, 217 * ᐃ, 263 * ᐃ, ᐃ * 155);
		Ⲇ.bezierCurveTo(248 * ᐃ, ᐃ * 194, 91 * ᐃ, 180 * ᐃ, ᐃ * 103, 156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[2], ΔΔᐃⵠΔΔⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 182, ᐃ * 185);
		Ⲇ.bezierCurveTo(ᐃ * 182.5, ᐃ * 237.5, 182.5 * ᐃ, ᐃ * 237.5, ᐃ * 183, 290 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ΔᐃⵠⲆ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 222, ᐃ * 287);
		Ⲇ.bezierCurveTo(ᐃ * 226, 233.5 * ᐃ, 226 * ᐃ, ᐃ * 233.5, ᐃ * 230, ᐃ * 180);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔⲆⵠᐃᐃ, ᐃᐃ[ⲆⲆⵠΔ], ⲆⵠᐃⲆⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 145, ᐃ * 290);
		Ⲇ.bezierCurveTo(140.5 * ᐃ, 237 * ᐃ, ᐃ * 140.5, 237 * ᐃ, 136 * ᐃ, ᐃ * 184);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ᐃⲆⵠΔⲆⲆⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(105 * ᐃ, ᐃ * 184);
		Ⲇ.bezierCurveTo(ᐃ * 148, 205 * ᐃ, ᐃ * 231, 202 * ᐃ, 260 * ᐃ, 182 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 259, ᐃ * 195.5, 259 * ᐃ, ᐃ * 195.5, ᐃ * 258, ᐃ * 209);
		Ⲇ.bezierCurveTo(217 * ᐃ, 218 * ᐃ, 163 * ᐃ, ᐃ * 225, 108 * ᐃ, 207 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ᐃΔⲆⲆⵠ], ᐃ * 11);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 251, ᐃ * 276);
		Ⲇ.bezierCurveTo(ᐃ * 251.5, 267.5 * ᐃ, 251.5 * ᐃ, 267.5 * ᐃ, ᐃ * 252, 259 * ᐃ);
		Ⲇ.bezierCurveTo(212 * ᐃ, 272 * ᐃ, 156 * ᐃ, ᐃ * 275, 112 * ᐃ, 260 * ᐃ);
		Ⲇ.bezierCurveTo(112.5 * ᐃ, 269 * ᐃ, ᐃ * 112.5, ᐃ * 269, 113 * ᐃ, 278 * ᐃ);
		Ⲇ.bezierCurveTo(155 * ᐃ, 306 * ᐃ, ᐃ * 253, 286 * ᐃ, ᐃ * 250, 276 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[2], 11 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 102, 154 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, 53 * ᐃ, 255 * ᐃ, 53 * ᐃ, 263 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(ᐃ * 248, 38 * ᐃ, 99 * ᐃ, 69 * ᐃ, 103 * ᐃ, 154 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[2], ᐃ * ΔᐃᐃΔᐃ);
		return ΔΔ
	}

	function Ⲇᐃᐃⵠⵠⵠᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 247 * ᐃ;
		ΔΔ.height = 247 * ᐃ;
		Ⲇ.translate(0, 10 * ᐃ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 150, 62 * ᐃ);
		Ⲇ.bezierCurveTo(151.5 * ᐃ, ᐃ * 71.5, ᐃ * 149, ᐃ * 70, ᐃ * 153, 81 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 158, 73.5 * ᐃ, ᐃ * 158, ᐃ * 73.5, ᐃ * 163, ᐃ * 66);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 164, 171 * ᐃ);
		Ⲇ.bezierCurveTo(149 * ᐃ, ᐃ * 159, ᐃ * 156.5, 165 * ᐃ, 149 * ᐃ, ᐃ * 159);
		Ⲇ.bezierCurveTo(149 * ᐃ, 167 * ᐃ, ᐃ * 149, ᐃ * 170, ᐃ * 152, 178 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠᐃⵠ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(132 * ᐃ, 95 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154, 102 * ᐃ, ᐃ * 154, ᐃ * 126, ᐃ * 137, ᐃ * 139);
		Ⲇ.bezierCurveTo(ᐃ * 113, 152 * ᐃ, ᐃ * 89, ᐃ * 136, ᐃ * 80, ᐃ * 121);
		Ⲇ.bezierCurveTo(ᐃ * 57, 89 * ᐃ, 69 * ᐃ, 63 * ᐃ, ᐃ * 79, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110, 20 * ᐃ, ᐃ * 139, 21 * ᐃ, 150 * ᐃ, ᐃ * 25);
		Ⲇ.bezierCurveTo(197 * ᐃ, 36 * ᐃ, ᐃ * 221, ᐃ * 67, 226 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 234, 134 * ᐃ, 214 * ᐃ, 177 * ᐃ, ᐃ * 195, 197 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 144, 242 * ᐃ, 79 * ᐃ, 216 * ᐃ, ᐃ * 58, 206 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * ⲆⲆΔᐃᐃ, 174 * ᐃ, ⵠᐃⵠⲆ * ᐃ, 134 * ᐃ, ᐃ * 23, ᐃ * 107);
		Ⲇ.bezierCurveTo(26 * ᐃ, 78 * ᐃ, ᐃ * 33, 60 * ᐃ, 38 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 42, 32 * ᐃ, ᐃ * 47, ᐃ * 32, 50 * ᐃ, ᐃ * 36);
		Ⲇ.bezierCurveTo(ᐃ * 54, ᐃ * 37, 50 * ᐃ, 52 * ᐃ, 44 * ᐃ, ᐃ * 87);
		Ⲇ.bezierCurveTo(ᐃ * 40, ᐃ * 115, ᐃ * 46, ᐃ * 142, ᐃ * 57, ᐃ * 158);
		Ⲇ.bezierCurveTo(76 * ᐃ, 189 * ᐃ, ᐃ * 129, 182 * ᐃ, 152 * ᐃ, ᐃ * 173);
		Ⲇ.bezierCurveTo(ᐃ * 186, 156 * ᐃ, 191 * ᐃ, ᐃ * 106, ᐃ * 176, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 159, 61 * ᐃ, 132 * ᐃ, 62 * ᐃ, ᐃ * 122, 66 * ᐃ);
		Ⲇ.bezierCurveTo(108 * ᐃ, 74 * ᐃ, ᐃ * 108, 89 * ᐃ, 116 * ᐃ, 90 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 92 * ᐃ, 130 * ᐃ, 93 * ᐃ, 131 * ᐃ, 94 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.translate(0, -10 * ᐃ);
		Ⲇ.globalAlpha = ᐃᐃΔᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 150, ᐃ * 62);
		Ⲇ.bezierCurveTo(151.5 * ᐃ, ᐃ * 71.5, 149 * ᐃ, 70 * ᐃ, 153 * ᐃ, ᐃ * 81);
		Ⲇ.bezierCurveTo(158 * ᐃ, 73.5 * ᐃ, 158 * ᐃ, 73.5 * ᐃ, 163 * ᐃ, 66 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(164 * ᐃ, 171 * ᐃ);
		Ⲇ.bezierCurveTo(149 * ᐃ, ᐃ * 159, ᐃ * 156.5, ᐃ * 165, 149 * ᐃ, ᐃ * 159);
		Ⲇ.bezierCurveTo(149 * ᐃ, 167 * ᐃ, ᐃ * 149, 170 * ᐃ, 152 * ᐃ, ᐃ * 178);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[5]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 132, 95 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154, ᐃ * 102, 154 * ᐃ, 126 * ᐃ, 137 * ᐃ, 139 * ᐃ);
		Ⲇ.bezierCurveTo(113 * ᐃ, ᐃ * 152, ᐃ * 89, ᐃ * 136, ᐃ * 80, 121 * ᐃ);
		Ⲇ.bezierCurveTo(57 * ᐃ, 89 * ᐃ, 69 * ᐃ, ᐃ * 63, ᐃ * 79, ᐃ * 52);
		Ⲇ.bezierCurveTo(110 * ᐃ, ᐃ * 20, 139 * ᐃ, ᐃ * 21, ᐃ * 150, 25 * ᐃ);
		Ⲇ.bezierCurveTo(197 * ᐃ, 36 * ᐃ, 221 * ᐃ, ᐃ * 67, 226 * ᐃ, ᐃ * 90);
		Ⲇ.bezierCurveTo(ᐃ * 234, 134 * ᐃ, ᐃ * 214, ᐃ * 177, 195 * ᐃ, 197 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 144, 242 * ᐃ, ᐃ * 79, ᐃ * 216, 58 * ᐃ, 206 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 13, 174 * ᐃ, ᐃ * 20, ᐃ * 134, ᐃ * 23, ᐃ * 107);
		Ⲇ.bezierCurveTo(26 * ᐃ, 78 * ᐃ, 33 * ᐃ, 60 * ᐃ, 38 * ᐃ, 43 * ᐃ);
		Ⲇ.bezierCurveTo(42 * ᐃ, 32 * ᐃ, ᐃ * 47, 32 * ᐃ, 50 * ᐃ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(54 * ᐃ, 37 * ᐃ, 50 * ᐃ, 52 * ᐃ, 44 * ᐃ, 87 * ᐃ);
		Ⲇ.bezierCurveTo(40 * ᐃ, ᐃ * 115, ᐃ * 46, ᐃ * 142, 57 * ᐃ, ᐃ * 158);
		Ⲇ.bezierCurveTo(ᐃ * 76, ᐃ * 189, ᐃ * 129, ᐃ * 182, 152 * ᐃ, ᐃ * 173);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 156, 191 * ᐃ, ᐃ * 106, ᐃ * 176, ᐃ * 85);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 61, ᐃ * 132, ᐃ * 62, 122 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 74, 108 * ᐃ, ᐃ * 89, ᐃ * 116, 90 * ᐃ);
		Ⲇ.bezierCurveTo(123 * ᐃ, 92 * ᐃ, ᐃ * 130, ᐃ * 93, 131 * ᐃ, 94 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(137 * ᐃ, ᐃ * 137);
		Ⲇ.bezierCurveTo(ᐃ * 145, ᐃ * 125, 138 * ᐃ, 108 * ᐃ, ᐃ * 123, ᐃ * 104);
		Ⲇ.bezierCurveTo(ᐃ * 81, 101 * ᐃ, 88 * ᐃ, 77 * ᐃ, ᐃ * 98, ᐃ * 65);
		Ⲇ.bezierCurveTo(117 * ᐃ, ᐃ * 38, ᐃ * 138, ᐃ * 39, ᐃ * 165, 52 * ᐃ);
		Ⲇ.bezierCurveTo(197 * ᐃ, ᐃ * 72, ᐃ * 207, 111 * ᐃ, ᐃ * 197, ᐃ * 140);
		Ⲇ.bezierCurveTo(ᐃ * 182, 180 * ᐃ, ᐃ * 161, 197 * ᐃ, ᐃ * 112, ᐃ * 194);
		Ⲇ.bezierCurveTo(ᐃ * 58, 194 * ᐃ, ᐃ * 37, 170 * ᐃ, 34 * ᐃ, 142 * ᐃ);
		Ⲇ.bezierCurveTo(29 * ᐃ, 102 * ᐃ, ᐃ * 40, ᐃ * 63, ᐃ * 51, ᐃ * 45);
		Ⲇ.bezierCurveTo(ᐃ * 43, 78 * ᐃ, ᐃ * 41, 103 * ᐃ, ᐃ * 43, ᐃ * 122);
		Ⲇ.bezierCurveTo(ᐃ * 51, ᐃ * 158, 63 * ᐃ, 174 * ᐃ, 95 * ᐃ, ᐃ * 179);
		Ⲇ.bezierCurveTo(ᐃ * 129, 186 * ᐃ, 169 * ᐃ, 172 * ᐃ, 177 * ᐃ, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 197, 105 * ᐃ, ᐃ * 172, ᐃ * 76, ᐃ * 160, ᐃ * 71);
		Ⲇ.bezierCurveTo(125 * ᐃ, ᐃ * 52, ᐃ * 111, ᐃ * 73, 111 * ᐃ, 81 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 106, 93 * ᐃ, ᐃ * 140, ᐃ * 92, ᐃ * 147, 107 * ᐃ);
		Ⲇ.bezierCurveTo(153 * ᐃ, 128 * ᐃ, 140 * ᐃ, ᐃ * 135, 137 * ᐃ, ᐃ * 139);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δᐃᐃᐃ]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 132, 95 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 154, ᐃ * 102, 154 * ᐃ, ᐃ * 126, ᐃ * 137, 139 * ᐃ);
		Ⲇ.bezierCurveTo(113 * ᐃ, 152 * ᐃ, ᐃ * 89, ᐃ * 136, 80 * ᐃ, ᐃ * 121);
		Ⲇ.bezierCurveTo(57 * ᐃ, 89 * ᐃ, ᐃ * 69, 63 * ᐃ, 79 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 110, ᐃ * 20, 139 * ᐃ, 21 * ᐃ, 150 * ᐃ, 25 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 197, 36 * ᐃ, 221 * ᐃ, 67 * ᐃ, ᐃ * 226, 90 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 234, ᐃ * 134, ᐃ * 214, ᐃ * 177, ᐃ * 195, ᐃ * 197);
		Ⲇ.bezierCurveTo(144 * ᐃ, 242 * ᐃ, ᐃ * 79, 216 * ᐃ, ᐃ * 58, 206 * ᐃ);
		Ⲇ.bezierCurveTo(13 * ᐃ, 174 * ᐃ, 20 * ᐃ, ᐃ * 134, 23 * ᐃ, ᐃ * 107);
		Ⲇ.bezierCurveTo(ᐃ * 26, 78 * ᐃ, ᐃ * 33, 60 * ᐃ, ᐃ * 38, ᐃ * 43);
		Ⲇ.bezierCurveTo(42 * ᐃ, ᐃ * 32, ᐃ * 47, 32 * ᐃ, 50 * ᐃ, 36 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54, 37 * ᐃ, ᐃ * 50, ᐃ * 52, ᐃ * 44, 87 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 40, ᐃ * 115, ᐃ * 46, ᐃ * 142, ᐃ * 57, 158 * ᐃ);
		Ⲇ.bezierCurveTo(76 * ᐃ, 189 * ᐃ, ᐃ * 129, 182 * ᐃ, ᐃ * 152, ᐃ * 173);
		Ⲇ.bezierCurveTo(186 * ᐃ, ᐃ * 156, ᐃ * 191, 106 * ᐃ, 176 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 159, ᐃ * 61, 132 * ᐃ, ᐃ * 62, 122 * ᐃ, ᐃ * 66);
		Ⲇ.bezierCurveTo(ᐃ * 108, ᐃ * 74, 108 * ᐃ, ᐃ * 89, ᐃ * 116, ᐃ * 90);
		Ⲇ.bezierCurveTo(ᐃ * 123, 92 * ᐃ, 130 * ᐃ, 93 * ᐃ, 131 * ᐃ, 94 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, undefined, ᐃᐃ[ᐃᐃⲆΔ], ΔΔⲆᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(82 * ᐃ, 63 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 91, 64 * ᐃ, 96 * ᐃ, ᐃ * 62, 98 * ᐃ, ᐃ * 53);
		Ⲇ.bezierCurveTo(ᐃ * 91, 45 * ᐃ, 85 * ᐃ, ᐃ * 42, 78 * ᐃ, 41 * ᐃ);
		Ⲇ.bezierCurveTo(81 * ᐃ, 51 * ᐃ, ᐃ * 82, ᐃ * 57, 82 * ᐃ, 63 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ], ᐃᐃ[Δᐃⵠⵠ], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(148 * ᐃ, ᐃ * 40);
		Ⲇ.bezierCurveTo(140 * ᐃ, ᐃ * 52, ᐃ * 131, ᐃ * 51, ᐃ * 123, 43 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 123, 25 * ᐃ, 129 * ᐃ, 17 * ᐃ, ᐃ * 134, ᐃ * 12);
		Ⲇ.bezierCurveTo(ᐃ * 138, ᐃ * 35, 142 * ᐃ, ᐃ * 31, ᐃ * 148, ᐃ * 40);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠᐃⲆ], ᐃᐃ[ΔⲆⲆⲆⵠ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 189, 43 * ᐃ);
		Ⲇ.bezierCurveTo(191 * ᐃ, 54 * ᐃ, 196 * ᐃ, 58 * ᐃ, ᐃ * 205, ᐃ * 59);
		Ⲇ.bezierCurveTo(211 * ᐃ, 42 * ᐃ, 214 * ᐃ, ᐃ * 37, ᐃ * 216, 31 * ᐃ);
		Ⲇ.bezierCurveTo(202 * ᐃ, 34 * ᐃ, 195 * ᐃ, ᐃ * 39, ᐃ * 190, ᐃ * 43);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆⲆ], ᐃᐃ[ⵠᐃᐃΔᐃ], ⵠᐃᐃΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(216 * ᐃ, ᐃ * 98);
		Ⲇ.bezierCurveTo(219 * ᐃ, ᐃ * 105, 225 * ᐃ, 107 * ᐃ, ᐃ * 230, ᐃ * 109);
		Ⲇ.bezierCurveTo(ᐃ * 227, 113 * ᐃ, ᐃ * 221, ᐃ * 115, 215 * ᐃ, ᐃ * 115);
		Ⲇ.bezierCurveTo(ᐃ * 208, ᐃ * 109, ᐃ * 211, ᐃ * 101, ᐃ * 216, 98 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(180 * ᐃ, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 193, ᐃ * 86, ᐃ * 196, 98 * ᐃ, 191 * ᐃ, 108 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 179, ᐃ * 112, ᐃ * 167, ᐃ * 113, ᐃ * 155, 111 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 169, ⲆⲆⵠⵠⲆ * ᐃ, 176 * ᐃ, 96 * ᐃ, 180 * ᐃ, ᐃ * 85);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * ⲆΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96, 114 * ᐃ);
		Ⲇ.bezierCurveTo(102 * ᐃ, 109 * ᐃ, ᐃ * 112, 110 * ᐃ, ᐃ * 114, 118 * ᐃ);
		Ⲇ.bezierCurveTo(111 * ᐃ, ᐃ * 134, 102 * ᐃ, ᐃ * 143, 95 * ᐃ, ᐃ * 147);
		Ⲇ.bezierCurveTo(ᐃ * 98, 123 * ᐃ, ᐃ * 97, 119 * ᐃ, 96 * ᐃ, 115 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔΔΔ], ᐃᐃ[ⵠⲆⲆᐃⵠ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(79 * ᐃ, 92 * ᐃ);
		Ⲇ.bezierCurveTo(86 * ᐃ, 95 * ᐃ, 89 * ᐃ, 102 * ᐃ, ᐃ * 83, ᐃ * 111);
		Ⲇ.bezierCurveTo(70 * ᐃ, ᐃ * 110, ᐃ * 61, ᐃ * 107, 54 * ᐃ, ᐃ * 100);
		Ⲇ.bezierCurveTo(ᐃ * 70, 97 * ᐃ, ᐃ * 70, ᐃ * 95, ᐃ * 78, ᐃ * 92);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⲆⵠΔᐃᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 39, 130 * ᐃ);
		Ⲇ.bezierCurveTo(37 * ᐃ, ᐃ * 141, ᐃ * 41, ᐃ * 143, 48 * ᐃ, 144 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 54, ᐃ * 134, 55 * ᐃ, 131 * ᐃ, 56 * ᐃ, ᐃ * 123);
		Ⲇ.bezierCurveTo(ᐃ * 47, 129 * ᐃ, ᐃ * 43, 129 * ᐃ, ᐃ * 39, ᐃ * 129);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇⵠⵠᐃᐃ], ᐃᐃ[ⲆΔⵠᐃ], ᐃ * ᐃᐃⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 113, ᐃ * 189);
		Ⲇ.bezierCurveTo(ᐃ * 119, 201 * ᐃ, 127 * ᐃ, ᐃ * 198, 134 * ᐃ, ᐃ * 192);
		Ⲇ.bezierCurveTo(ᐃ * 128, 175 * ᐃ, 128 * ᐃ, ᐃ * 173, ᐃ * 128, 165 * ᐃ);
		Ⲇ.bezierCurveTo(117 * ᐃ, 176 * ᐃ, ᐃ * 116, 182 * ᐃ, ᐃ * 113, ᐃ * 187);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(74 * ᐃ, ᐃ * 154);
		Ⲇ.bezierCurveTo(76 * ᐃ, 163 * ᐃ, ᐃ * 76, ᐃ * 170, ᐃ * 75, 177 * ᐃ);
		Ⲇ.bezierCurveTo(68 * ᐃ, 179 * ᐃ, ᐃ * 66, 176 * ᐃ, 63 * ᐃ, 171 * ᐃ);
		Ⲇ.bezierCurveTo(69 * ᐃ, 164 * ᐃ, 72 * ᐃ, ᐃ * 159, 74 * ᐃ, 154 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[ΔⲆⵠΔΔ], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(206 * ᐃ, 152 * ᐃ);
		Ⲇ.bezierCurveTo(198 * ᐃ, 158 * ᐃ, ᐃ * 198, ᐃ * 166, ᐃ * 201, ᐃ * 171);
		Ⲇ.bezierCurveTo(209 * ᐃ, ᐃ * 170, 221 * ᐃ, 170 * ᐃ, 226 * ᐃ, ᐃ * 172);
		Ⲇ.bezierCurveTo(219 * ᐃ, 159 * ᐃ, 210 * ᐃ, ᐃ * 155, ᐃ * 207, ᐃ * 153);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ⲆᐃᐃΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 181, 184 * ᐃ);
		Ⲇ.bezierCurveTo(170 * ᐃ, ᐃ * 184, 167 * ᐃ, 187 * ᐃ, ᐃ * 163, ᐃ * 195);
		Ⲇ.bezierCurveTo(ᐃ * 171, ᐃ * 207, 183 * ᐃ, ᐃ * 214, 191 * ᐃ, ᐃ * 217);
		Ⲇ.bezierCurveTo(ᐃ * 183, 204 * ᐃ, 184 * ᐃ, 196 * ᐃ, ᐃ * 181, 184 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ], ᐃᐃ[ⵠⲆⲆᐃⵠ], ᐃ * Δᐃⵠⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(66 * ᐃ, 199 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 73, 197 * ᐃ, ᐃ * 78, 199 * ᐃ, ᐃ * 79, ᐃ * 206);
		Ⲇ.bezierCurveTo(71 * ᐃ, ᐃ * 216, 67 * ᐃ, ᐃ * 221, ᐃ * 57, ᐃ * 223);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆΔⲆ], ᐃᐃ[ΔⲆⲆΔ], ᐃᐃⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 182, 143 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 183, ᐃ * 146, 183 * ᐃ, ᐃ * 149, 179 * ᐃ, ᐃ * 152);
		Ⲇ.bezierCurveTo(ᐃ * 174, ᐃ * 146, 174 * ᐃ, 146 * ᐃ, 169 * ᐃ, ᐃ * 140);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], 5 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 32, 159 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 45, ᐃ * 160, 48 * ᐃ, 164 * ᐃ, 45 * ᐃ, ᐃ * 175);
		Ⲇ.bezierCurveTo(ᐃ * 28, ᐃ * 183, 25 * ᐃ, ᐃ * 184, ᐃ * ⲆᐃⲆⵠⲆΔΔ, 184 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30, 170 * ᐃ, ᐃ * 29, ᐃ * 164, ᐃ * 31, 160 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃᐃ[ΔΔⲆᐃᐃ], ᐃ * ⲆΔᐃΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(110 * ᐃ, ᐃ * 214);
		Ⲇ.bezierCurveTo(ᐃ * 106, ᐃ * 212, 104 * ᐃ, 213 * ᐃ, 102 * ᐃ, ᐃ * 218);
		Ⲇ.bezierCurveTo(ᐃ * 104, ᐃ * 220, 107 * ᐃ, ᐃ * 222, 110 * ᐃ, ᐃ * 224);
		Ⲇ.bezierCurveTo(110.5 * ᐃ, ᐃ * 219, 110.5 * ᐃ, 219 * ᐃ, 111 * ᐃ, ᐃ * 214);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[4], ᐃᐃ[5], ᐃ * ΔᐃΔΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(40 * ᐃ, 52 * ᐃ);
		Ⲇ.bezierCurveTo(41 * ᐃ, ᐃ * 57, ᐃ * 40, ᐃ * 61, ᐃ * 34, ᐃ * 60);
		Ⲇ.bezierCurveTo(31.5 * ᐃ, ᐃ * 55, ᐃ * 31.5, ᐃ * 55, 29 * ᐃ, 50 * ᐃ);
		Ⲇ.bezierCurveTo(34 * ᐃ, 50.5 * ᐃ, ᐃ * 34, 50.5 * ᐃ, 39 * ᐃ, 51 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⵠⲆΔ], ᐃᐃ[5], ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 31, ᐃ * 81);
		Ⲇ.bezierCurveTo(37 * ᐃ, 84 * ᐃ, ᐃ * 38, ᐃ * 90, ᐃ * 34, ᐃ * 99);
		Ⲇ.bezierCurveTo(ᐃ * 23, ᐃ * 97, ᐃ * ⲆΔᐃΔⲆ, ᐃ * 96, 16 * ᐃ, ᐃ * 93);
		Ⲇ.bezierCurveTo(ᐃ * 24, 88 * ᐃ, ᐃ * 28, ᐃ * 85, 30 * ᐃ, 81 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠᐃᐃ], ᐃᐃ[5], 5 * ᐃ);
		return ΔΔ
	}

	function ᐃⲆΔᐃᐃⲆΔ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 573 * ᐃ;
		ΔΔ.height = 350 * ᐃ;
		ᐃⲆ == 1 && (Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 336, ᐃ * 72), Ⲇ.bezierCurveTo(366 * ᐃ, ᐃ * ⵠᐃΔᐃⲆᐃΔ, ᐃ * 426, ᐃ * 36, ᐃ * 497, 83 * ᐃ), Ⲇ.bezierCurveTo(522 * ᐃ, 85 * ᐃ, 522 * ᐃ, 85 * ᐃ, 547 * ᐃ, 87 * ᐃ), Ⲇ.bezierCurveTo(476.5 * ᐃ, ᐃ * 205, ᐃ * 476.5, 205 * ᐃ, ᐃ * 406, 323 * ᐃ), Ⲇ.bezierCurveTo(297.5 * ᐃ, ᐃ * 319, ᐃ * 297.5, 319 * ᐃ, ᐃ * 189, ᐃ * 315), Ⲇ.bezierCurveTo(105.5 * ᐃ, ᐃ * 279, 105.5 * ᐃ, 279 * ᐃ, 22 * ᐃ, ᐃ * 243), Ⲇ.bezierCurveTo(ᐃ * 92, 140 * ᐃ, ᐃ * 92, ᐃ * 140, 162 * ᐃ, 37 * ᐃ), Ⲇ.bezierCurveTo(173 * ᐃ, 39 * ᐃ, ᐃ * 173, 39 * ᐃ, ᐃ * 184, ᐃ * 41), Ⲇ.bezierCurveTo(185 * ᐃ, ᐃ * 38.5, 185 * ᐃ, ᐃ * 38.5, 186 * ᐃ, 36 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 323, 13 * ᐃ, ᐃ * 322, ᐃ * 25, 337 * ᐃ, 74 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠⲆΔⲆ], ᐃᐃ[4], ᐃ * 35));
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 168, ᐃ * 42);
		Ⲇ.bezierCurveTo(255 * ᐃ, 60 * ᐃ, ᐃⵠⵠᐃⲆᐃⵠ * ᐃ, ᐃ * 60, 342 * ᐃ, 78 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 443, ᐃ * 81.5, ᐃ * 443, 81.5 * ᐃ, ᐃ * 544, 85 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 475, 204.5 * ᐃ, ᐃ * 475, 204.5 * ᐃ, 406 * ᐃ, ᐃ * 324);
		Ⲇ.bezierCurveTo(297.5 * ᐃ, ᐃ * 320, ᐃ * 297.5, 320 * ᐃ, 189 * ᐃ, ᐃ * 316);
		Ⲇ.bezierCurveTo(ᐃ * 105.5, 279 * ᐃ, ᐃ * 105.5, ᐃ * 279, ᐃ * 22, 242 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⲆΔⵠⲆ], ⲆⵠⵠⵠⲆᐃⵠ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(188 * ᐃ, ᐃ * 41);
		Ⲇ.bezierCurveTo(ᐃ * 308, ᐃ * ⲆΔⲆᐃⵠᐃΔ, 325 * ᐃ, ᐃⲆⵠⵠᐃ * ᐃ, ᐃ * 337, 66 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 191, ᐃ * 305, 196 * ᐃ, 286 * ᐃ, ᐃ * 184, ᐃ * 307);
		Ⲇ.bezierCurveTo(ᐃ * 175, 250 * ᐃ, ᐃ * 90, 254 * ᐃ, ᐃ * 52, ᐃ * 241);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * ΔΔᐃⲆᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(336 * ᐃ, ᐃ * 71);
		Ⲇ.bezierCurveTo(ᐃ * 375, ᐃ * 8, ᐃ * 429, 50 * ᐃ, 518 * ᐃ, ᐃ * 92);
		Ⲇ.bezierCurveTo(ᐃ * 455, ᐃ * 199.5, ᐃ * 455, 199.5 * ᐃ, ᐃ * 392, 307 * ᐃ);
		Ⲇ.bezierCurveTo(227 * ᐃ, 301 * ᐃ, 261 * ᐃ, ᐃ * ⵠⲆⵠᐃΔᐃΔ, ᐃ * 188, ᐃ * 308);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(357 * ᐃ, ᐃ * 76);
		Ⲇ.bezierCurveTo(ᐃ * 390, 67 * ᐃ, 414 * ᐃ, 86 * ᐃ, 435 * ᐃ, ᐃ * 104);
		Ⲇ.bezierCurveTo(ᐃ * 417, ᐃ * 135, 417 * ᐃ, 135 * ᐃ, 399 * ᐃ, ᐃ * 166);
		Ⲇ.bezierCurveTo(352 * ᐃ, ᐃ * 140, 345 * ᐃ, 139 * ᐃ, ᐃ * 319, ᐃ * 142);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔᐃⲆ], ⲆΔᐃᐃⲆ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 309, 168 * ᐃ);
		Ⲇ.bezierCurveTo(345 * ᐃ, ᐃ * 163, 372 * ᐃ, ᐃ * 180, 412 * ᐃ, 203 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ], ᐃᐃ[ⲆⵠΔᐃ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(263 * ᐃ, ᐃ * 54);
		Ⲇ.bezierCurveTo(305 * ᐃ, ᐃ * 44, 307 * ᐃ, ᐃ * 51, 311 * ᐃ, ᐃ * 64);
		Ⲇ.bezierCurveTo(270.5 * ᐃ, 129.5 * ᐃ, 270.5 * ᐃ, 129.5 * ᐃ, 230 * ᐃ, ᐃ * 195);
		Ⲇ.bezierCurveTo(221 * ᐃ, 175 * ᐃ, 203 * ᐃ, ᐃ * 171, ᐃ * 186, 172 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ᐃⵠⵠⵠ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(292 * ᐃ, ᐃ * 198);
		Ⲇ.bezierCurveTo(ᐃ * 328, 191 * ᐃ, 364 * ᐃ, ᐃ * 211, ᐃ * 401, ᐃ * 237);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆΔ], ᐃᐃ[ᐃⵠⲆⲆ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 245, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 210, ᐃ * 72, ᐃ * 210, ᐃ * 72, 189 * ᐃ, ᐃ * 69);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ᐃⲆⲆᐃΔ], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(222 * ᐃ, 96 * ᐃ);
		Ⲇ.bezierCurveTo(196 * ᐃ, ᐃ * 97, ᐃ * 193, 97 * ᐃ, ᐃ * 177, ᐃ * 92);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], ᐃ * ⵠⲆⵠⲆΔ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 207, 124 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 179, 123 * ᐃ, ᐃ * 177, ᐃ * 124, 161 * ᐃ, 119 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[3], 12 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(115 * ᐃ, ᐃ * 183);
		Ⲇ.bezierCurveTo(184 * ᐃ, ᐃ * 185, 203 * ᐃ, 198 * ᐃ, ᐃ * 219, ᐃ * 221);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⲆⵠⵠⲆ], ᐃ * 12);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(98 * ᐃ, 213 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 161, 214 * ᐃ, ᐃ * 193, 227 * ᐃ, 201 * ᐃ, 249 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[ⲆⵠΔᐃ], ⲆΔⲆⲆⲆΔᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 399, ᐃ * 257);
		Ⲇ.bezierCurveTo(287 * ᐃ, ᐃ * 215, ᐃ * 280, 215 * ᐃ, 263 * ᐃ, 222 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 253, 238 * ᐃ, ᐃ * 247, 245 * ᐃ, 243 * ᐃ, ᐃ * 254);
		Ⲇ.bezierCurveTo(267 * ᐃ, ᐃ * 236, ᐃ * 292, 263 * ᐃ, 377 * ᐃ, ᐃ * 284);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠⲆⲆ], ᐃᐃ[ⵠΔᐃⲆ], ΔΔᐃⲆᐃ * ᐃ);
		return ΔΔ
	}

	function ᐃⵠⲆⲆⲆⵠᐃⵠⲆ(ᐃ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 158 * ᐃ;
		ΔΔ.height = 201 * ᐃ;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 96.5, 76.421875 * ᐃ);
		Ⲇ.bezierCurveTo(100.5 * ᐃ, ᐃ * 64.421875, ᐃ * 103.5, ᐃ * 62.421875, 110.5 * ᐃ, ᐃ * 65.421875);
		Ⲇ.bezierCurveTo(116.5 * ᐃ, 66.421875 * ᐃ, 117.5 * ᐃ, 67.421875 * ᐃ, 112.5 * ᐃ, ᐃ * 73.421875);
		Ⲇ.bezierCurveTo(ᐃ * 107, 79.921875 * ᐃ, 107 * ᐃ, ᐃ * 79.921875, 101.5 * ᐃ, 86.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⵠⲆⲆ], ᐃᐃ[0], ᐃ * ᐃⵠⲆᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(61.5 * ᐃ, 78.421875 * ᐃ);
		Ⲇ.bezierCurveTo(57.5 * ᐃ, 73.421875 * ᐃ, 51.5 * ᐃ, 66.421875 * ᐃ, 45.5 * ᐃ, ᐃ * 68.421875);
		Ⲇ.bezierCurveTo(32.5 * ᐃ, 73.421875 * ᐃ, 38.5 * ᐃ, 75.421875 * ᐃ, 46.5 * ᐃ, 81.421875 * ᐃ);
		Ⲇ.bezierCurveTo(51.5 * ᐃ, 84.921875 * ᐃ, ᐃ * 51.5, ᐃ * 84.921875, 56.5 * ᐃ, ᐃ * 88.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[ⵠⲆⲆᐃ], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 116.5, 127.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 124.5, 108.421875 * ᐃ, 129.5 * ᐃ, ᐃ * 104.421875, ᐃ * 141.5, 107.421875 * ᐃ);
		Ⲇ.bezierCurveTo(156.5 * ᐃ, ᐃ * 112.421875, 153.5 * ᐃ, ᐃ * 113.421875, 132.5 * ᐃ, ᐃ * 134.421875);
		Ⲇ.bezierCurveTo(123.5 * ᐃ, ᐃ * 141.921875, 123.5 * ᐃ, 141.921875 * ᐃ, 114.5 * ᐃ, 149.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ], ᐃᐃ[0], ᐃ * 10);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 41.5, 134.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30.5, ᐃ * 119.421875, 25.5 * ᐃ, 111.421875 * ᐃ, 12.5 * ᐃ, ᐃ * 115.421875);
		Ⲇ.bezierCurveTo(4.5 * ᐃ, 120.421875 * ᐃ, 4.5 * ᐃ, ᐃ * 121.421875, 26.5 * ᐃ, 142.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 35, 149.921875 * ᐃ, ᐃ * 35, ᐃ * 149.921875, ᐃ * 43.5, ᐃ * 157.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⵠⵠ], ᐃᐃ[0], ᐃ * ⲆⵠΔⲆⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 78.5, 51.921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 99.5, 75.921875 * ᐃ, ᐃ * 110.5, 96.921875 * ᐃ, 118.5 * ᐃ, 120.921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 121.5, ᐃ * 140.921875, 107.5 * ᐃ, 179.921875 * ᐃ, 75.5 * ᐃ, 183.921875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 30.5, ᐃ * 169.921875, ᐃ * 37.5, ᐃ * 131.921875, 34.5 * ᐃ, 120.921875 * ᐃ);
		Ⲇ.bezierCurveTo(41.5 * ᐃ, ᐃ * 89.921875, ᐃ * 61.5, 67.921875 * ᐃ, ᐃ * 78.5, ᐃ * 51.921875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔᐃⲆΔ], ᐃ * ΔᐃΔᐃⵠ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72.5, ᐃ * 72.421875);
		Ⲇ.bezierCurveTo(76.5 * ᐃ, ᐃ * 79.421875, ᐃ * 79.5, 80.421875 * ᐃ, 83.5 * ᐃ, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.5, 96.921875 * ᐃ, 79.5 * ᐃ, ᐃ * 114.421875, 77.5 * ᐃ, ᐃ * 120.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ], ᐃᐃ[ⲆΔᐃ], 10 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 42.5, ᐃ * 163.421875);
		Ⲇ.bezierCurveTo(62.5 * ᐃ, 185.421875 * ᐃ, 86.5 * ᐃ, 186.421875 * ᐃ, 111.5 * ᐃ, ᐃ * 165.421875);
		Ⲇ.bezierCurveTo(ᐃ * 107.5, 176.421875 * ᐃ, ᐃ * 95.5, 187.421875 * ᐃ, 75.5 * ᐃ, 188.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 53.5, ᐃ * 188.421875, ᐃ * 43.5, 171.421875 * ᐃ, 42.5 * ᐃ, ᐃ * 164.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], ᐃ * ΔⲆⵠΔᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(79.5 * ᐃ, 61.421875 * ᐃ);
		Ⲇ.bezierCurveTo(88.5 * ᐃ, ᐃ * 31.421875, ᐃ * 81.5, 16.421875 * ᐃ, 75.5 * ᐃ, 7.421875 * ᐃ);
		Ⲇ.bezierCurveTo(77.5 * ᐃ, ᐃ * 28.421875, ᐃ * 77.5, ᐃ * 37.421875, 68.5 * ᐃ, 42.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 79.5, 57.421875 * ᐃ, 79.5 * ᐃ, ᐃ * 58.421875, 80.5 * ᐃ, 61.421875 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠᐃⲆᐃ], Ⲇⵠᐃⵠᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 72.5, ᐃ * 72.421875);
		Ⲇ.bezierCurveTo(ᐃ * 76.5, 79.421875 * ᐃ, 79.5 * ᐃ, ᐃ * 80.421875, 83.5 * ᐃ, 73.421875 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 80.5, ᐃ * 96.921875, ᐃ * 79.5, 114.421875 * ᐃ, ᐃ * 77.5, ᐃ * 120.421875);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[0], 10 * ᐃ);
		return ΔΔ
	}

	function ᐃⵠⲆⵠⵠᐃᐃ() {
		var ⵠΔⲆᐃⵠΔⵠⲆⵠ = (new Date).getTime();
		ⲆⵠⵠⵠᐃΔⲆⲆⲆ();

		function ᐃᐃⲆᐃ(ⲆⲆΔⵠⵠ) {
			var ⲆᐃⵠⲆ = 0;
			for (var ᐃⲆ = 0, ΔΔΔ = 0; ⲆⲆΔⵠⵠ.length > ᐃⲆ; ᐃⲆ++) {
				var ᐃΔⵠⲆ = ⲆⲆΔⵠⵠ.charAt(ᐃⲆ);
				if ("_" === ᐃΔⵠⲆ || ᐃⲆ === 5) continue;
				"1" === ᐃΔⵠⲆ && (ⲆᐃⵠⲆ += Math.pow(ⲆⲆⵠΔ, ΔΔΔ));
				ΔΔΔ++
			}
			return ⲆᐃⵠⲆ
		}
		Ⲇᐃ[Δ.ⲆᐃⵠⲆΔΔⲆ] = [ⵠᐃ.ⵠⲆΔⲆΔⵠΔ, ⵠᐃ.ᐃΔⵠᐃⲆⲆⵠ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[208])] = [ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⵠΔⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[481])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[208])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[175])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[208])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[200])] = [ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[562])] = [ⵠᐃ.ⲆᐃⲆΔⲆΔⲆ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[234])] = [ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠⵠΔⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[310])] = [ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ᐃΔᐃⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[67])] = [ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ⵠⲆᐃΔᐃΔᐃᐃΔ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ᐃΔᐃⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[528])] = [ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[457])] = [ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ⲆᐃⲆΔⲆΔⲆ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[541])] = [ⵠᐃ.ⵠⵠΔⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[419])] = [ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[328])] = [ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⲆΔΔᐃⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[315])] = [ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])] = [ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[139])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[500])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[285])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[586])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[430])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[108])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[306])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[276])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[582])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[66])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[47])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[460])] = [ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⲆΔΔᐃⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[403])] = [ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[170])] = [ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ⲆᐃⲆΔⲆΔⲆ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[570])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[403])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[320])] = [ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[213])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[320])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[82])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[320])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[113])] = [ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⲆᐃⲆΔⲆΔⲆ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[379])] = [ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ΔⲆⵠΔⲆⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[517])] = [ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[433])] = [ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[362])] = [ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ΔⲆⵠΔⲆⲆΔ, ⵠᐃ.ᐃᐃⵠⵠⲆΔᐃ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[357])] = [ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ᐃᐃⵠⵠⲆΔᐃ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[424])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[491])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[197])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[476])] = [ⵠᐃ.ΔΔΔᐃΔ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ᐃᐃⵠⵠⲆΔᐃ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[23])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[476])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[177])] = [ⵠᐃ.ΔⲆⵠΔⲆⲆΔ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ᐃᐃⵠⵠⲆΔᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[235])] = [ⵠᐃ.ΔⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⵠΔΔΔᐃ, ⵠᐃ.ⵠᐃΔⲆⵠ, ⵠᐃ.ⲆᐃⲆΔⲆΔⲆ, ⵠᐃ.ⲆΔΔΔⵠ, ⵠᐃ.ΔⵠΔᐃᐃ, ⵠᐃ.ΔⵠⲆᐃᐃ, ⵠᐃ.ΔⲆΔⵠⲆⲆΔ, ⵠᐃ.ΔⲆⲆᐃⲆΔᐃ, ⵠᐃ.ᐃᐃΔᐃⵠ, ⵠᐃ.ⵠᐃᐃΔᐃᐃΔ, ⵠᐃ.ⲆⵠⲆⲆΔⵠΔ, ⵠᐃ.ⵠⵠᐃΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⲆⵠⲆΔⵠ, ⵠᐃ.ΔᐃᐃⵠᐃΔΔ, ⵠᐃ.ⵠⵠΔⵠⲆ, ⵠᐃ.ⵠⲆⲆⲆⲆ, ⵠᐃ.ⵠⲆⵠⲆᐃⲆⵠ, ⵠᐃ.ⲆᐃᐃⲆΔᐃΔ, ⵠᐃ.ⵠⲆⵠⵠⵠⵠⲆ, ⵠᐃ.ⵠᐃᐃⲆᐃ, ⵠᐃ.ⲆΔΔᐃⲆ, ⵠᐃ.ΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[146])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[476])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[208])] = [ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⵠⵠⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[481])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[208])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[175])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[208])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[200])] = [ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[562])] = [ⵠᐃ.ⲆⲆⲆᐃⵠΔⲆ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[234])] = [ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ᐃⵠⵠⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[310])] = [ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ᐃᐃⵠⲆΔⵠᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[67])] = [ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ⵠΔΔⲆⵠΔᐃⵠⲆ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ᐃᐃⵠⲆΔⵠᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[528])] = [ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[457])] = [ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⲆⲆⲆᐃⵠΔⲆ, ⵠᐃ.ΔᐃΔΔΔᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[541])] = [ⵠᐃ.ᐃⵠⵠⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[419])] = [ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[328])] = [ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[315])] = [ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])] = [ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[139])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[500])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[285])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[586])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[430])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[108])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[306])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[276])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[582])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[66])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[47])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[460])] = [ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[403])] = [ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[170])] = [ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⲆⲆⲆᐃⵠΔⲆ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[570])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[403])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[320])] = [ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[213])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[320])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[82])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[320])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[113])] = [ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ⲆⲆⲆᐃⵠΔⲆ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[379])] = [ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⵠⵠᐃᐃᐃⲆ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[517])] = [ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[433])] = [ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[362])] = [ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔⵠⵠᐃᐃᐃⲆ, ⵠᐃ.ⲆΔⵠⲆᐃΔᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[357])] = [ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ⲆΔⵠⲆᐃΔᐃ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[424])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[491])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[197])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[357])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[476])] = [ⵠᐃ.ⲆⵠⲆⵠΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ⲆΔⵠⲆᐃΔᐃ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃΔΔᐃⲆⲆΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[23])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[476])];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[177])] = [ⵠᐃ.ΔⵠⵠᐃᐃᐃⲆ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ⲆΔⵠⲆᐃΔᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[235])] = [ⵠᐃ.ᐃΔΔᐃⲆⲆΔ, ⵠᐃ.ᐃᐃΔΔᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃ, ⵠᐃ.ⲆⲆⲆᐃⵠΔⲆ, ⵠᐃ.ΔⵠΔⵠⲆ, ⵠᐃ.ⵠᐃⲆⲆᐃ, ⵠᐃ.Δᐃᐃᐃⵠ, ⵠᐃ.ᐃⲆΔΔΔΔΔ, ⵠᐃ.ⵠᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃΔⵠᐃΔ, ⵠᐃ.ΔᐃΔΔΔᐃΔ, ⵠᐃ.ᐃΔⲆⵠⵠΔΔ, ⵠᐃ.ᐃᐃⵠᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠⵠ, ⵠᐃ.ⵠᐃᐃⲆⵠΔᐃ, ⵠᐃ.ⵠΔⲆᐃⲆⲆᐃ, ⵠᐃ.ᐃⵠⵠⵠΔ, ⵠᐃ.ᐃⵠⵠⲆΔ, ⵠᐃ.ΔⲆⲆⲆⲆᐃᐃ, ⵠᐃ.ΔᐃΔⵠΔⲆⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠⵠ, ⵠᐃ.ⲆⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[146])] = Ⲇᐃ[Δ.ΔⵠⲆᐃ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[476])];
		Ⲇᐃ[Δ.ⲆΔΔΔ] = [];
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[208])] = ⵠᐃ.ᐃⲆᐃⵠⲆᐃⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[481])] = ⵠᐃ.ⵠⲆᐃⵠⲆⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[175])] = ⵠᐃ.ᐃⵠᐃⵠΔᐃΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[200])] = ⵠᐃ.ⲆᐃΔⲆⲆⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[562])] = ⵠᐃ.ΔᐃⵠⵠⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[234])] = ⵠᐃ.ᐃᐃᐃⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[310])] = ⵠᐃ.ᐃΔⲆⵠⲆᐃⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[67])] = ⵠᐃ.ΔⵠΔᐃᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[528])] = ⵠᐃ.ⲆⲆⵠᐃⲆⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[47])] = ⵠᐃ.ᐃⲆΔᐃⵠⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[285])] = ⵠᐃ.ⵠΔⵠᐃⲆᐃΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[66])] = ⵠᐃ.ⵠΔⲆⵠⵠⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[457])] = ⵠᐃ.ΔⵠⲆᐃⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[541])] = ⵠᐃ.ⵠᐃⵠⵠⵠⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[419])] = ⵠᐃ.ⲆⵠΔⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[328])] = ⵠᐃ.ΔⵠᐃΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[139])] = ⵠᐃ.ΔⵠⲆᐃᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[500])] = ⵠᐃ.ⵠᐃⲆⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[315])] = ⵠᐃ.ᐃΔⵠⵠⵠΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[586])] = ⵠᐃ.ⵠᐃᐃΔΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[253])] = ⵠᐃ.ⵠᐃᐃⵠⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[430])] = ⵠᐃ.ΔⲆΔΔⲆΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[108])] = ⵠᐃ.ⲆΔⲆⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[306])] = ⵠᐃ.ᐃⵠⵠⵠⵠΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[276])] = ⵠᐃ.ΔⲆᐃⲆⵠⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[582])] = ⵠᐃ.ⲆΔⵠΔⵠⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[460])] = ⵠᐃ.ⲆⵠⲆⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[403])] = ⵠᐃ.ΔΔⵠΔⲆⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[170])] = ⵠᐃ.ᐃⵠΔᐃᐃⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[570])] = ⵠᐃ.ⲆΔⲆᐃⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[320])] = ⵠᐃ.ⵠᐃᐃⵠΔΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[213])] = ⵠᐃ.ⲆΔΔⲆΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[82])] = ⵠᐃ.ⵠⲆᐃⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[113])] = ⵠᐃ.ⲆⵠΔⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[379])] = ⵠᐃ.ΔⵠⲆⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[517])] = ⵠᐃ.ᐃⲆΔⵠΔⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[433])] = ⵠᐃ.ᐃⲆΔⵠΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[362])] = ⵠᐃ.ⲆΔΔⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[197])] = ⵠᐃ.ᐃⵠⵠΔⲆΔᐃⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[491])] = ⵠᐃ.ⲆΔᐃΔΔⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[357])] = ⵠᐃ.ⲆΔⵠᐃᐃⲆⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[424])] = ⵠᐃ.ΔⵠᐃⲆⵠΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[23])] = ⵠᐃ.ⲆⵠᐃᐃΔΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[476])] = ⵠᐃ.ᐃⲆΔⵠᐃⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[23])] = ⵠᐃ.ⲆⵠᐃᐃΔΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[177])] = ⵠᐃ.ΔⲆᐃⵠⵠⵠᐃΔᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[235])] = ⵠᐃ.ΔΔⲆⵠⵠⵠⲆΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ΔⲆΔ][ᐃᐃⲆᐃ(ⵠ[146])] = ⵠᐃ.ΔᐃΔⵠⲆⵠᐃᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[208])] = ⵠᐃ.ΔⲆᐃⲆᐃⵠⵠⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[481])] = ⵠᐃ.ΔᐃⵠⵠⲆᐃⵠΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[175])] = ⵠᐃ.ΔⵠᐃⲆΔᐃΔΔᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[200])] = ⵠᐃ.ᐃᐃᐃΔⲆΔⲆΔᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[562])] = ⵠᐃ.ᐃΔⵠⵠⵠⵠᐃⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[234])] = ⵠᐃ.ⲆⵠΔᐃⵠⲆⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[310])] = ⵠᐃ.ΔⵠⵠΔᐃΔΔᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[67])] = ⵠᐃ.ΔᐃᐃⵠⵠⲆΔΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[528])] = ⵠᐃ.ⲆΔΔⲆⵠⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[47])] = ⵠᐃ.ⵠᐃⲆᐃⲆⲆᐃᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[285])] = ⵠᐃ.ⲆΔᐃⵠⲆⵠΔⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[66])] = ⵠᐃ.ⵠᐃᐃᐃⲆΔⲆⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[457])] = ⵠᐃ.ⲆⵠᐃΔΔΔᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[541])] = ⵠᐃ.ⵠΔᐃᐃᐃᐃΔⲆᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[419])] = ⵠᐃ.ΔⵠⵠⲆΔᐃⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[328])] = ⵠᐃ.ⵠΔΔΔΔⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[139])] = ⵠᐃ.ᐃΔⵠΔⵠⵠⲆⲆΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[500])] = ⵠᐃ.ᐃᐃⵠᐃᐃΔΔⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[315])] = ⵠᐃ.ᐃⲆΔⵠⲆⲆⲆⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[586])] = ⵠᐃ.ᐃΔⲆⲆⵠⲆᐃⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[253])] = ⵠᐃ.ⲆⵠⲆⵠⵠⲆⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[430])] = ⵠᐃ.ΔΔΔⲆⵠⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[108])] = ⵠᐃ.ᐃⵠⵠⵠΔⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[306])] = ⵠᐃ.ⵠⵠᐃΔΔᐃⵠΔᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[276])] = ⵠᐃ.ΔⲆᐃᐃᐃⵠⲆⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[582])] = ⵠᐃ.ⵠΔᐃⲆⲆⲆᐃⵠΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[460])] = ⵠᐃ.ⲆΔᐃⵠⵠⵠⲆΔᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[403])] = ⵠᐃ.ᐃᐃΔᐃⲆΔⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[170])] = ⵠᐃ.ⲆᐃΔⵠΔᐃᐃΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[570])] = ⵠᐃ.ᐃⵠΔⲆⵠΔΔⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[320])] = ⵠᐃ.ⲆᐃⲆΔᐃⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[213])] = ⵠᐃ.ⲆᐃᐃᐃΔⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[82])] = ⵠᐃ.ⲆⲆⵠᐃᐃᐃΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[113])] = ⵠᐃ.ⲆΔᐃΔⵠⲆⵠᐃΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[379])] = ⵠᐃ.ΔⵠⲆⵠᐃⲆᐃⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[517])] = ⵠᐃ.ⵠⲆⲆᐃᐃⵠⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[433])] = ⵠᐃ.ᐃⵠⲆΔΔᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[362])] = ⵠᐃ.ⲆΔⵠⲆⲆⵠᐃΔⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[197])] = ⵠᐃ.ⲆΔᐃΔⲆᐃⵠᐃⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[491])] = ⵠᐃ.ᐃⲆΔⵠΔⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[357])] = ⵠᐃ.ΔΔΔⲆᐃᐃᐃΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[424])] = ⵠᐃ.ᐃⲆⵠΔΔⲆⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[23])] = ⵠᐃ.ⵠⲆⵠΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[476])] = ⵠᐃ.ᐃᐃΔΔⲆᐃⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[23])] = ⵠᐃ.ⵠⲆⵠΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[177])] = ⵠᐃ.ⲆΔᐃΔᐃⵠⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[235])] = ⵠᐃ.ⵠᐃⲆΔΔᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔΔΔ][Δ.ⲆⵠΔ][ᐃᐃⲆᐃ(ⵠ[146])] = ⵠᐃ.ᐃᐃΔᐃⵠᐃΔΔᐃ;
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔᐃⲆⲆⵠⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⵠⲆⵠⲆⲆ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠⲆⲆΔᐃΔ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⵠⲆᐃⲆΔ;
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⲆⲆᐃᐃΔ;
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⵠⲆᐃΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⲆⵠⵠΔⲆ;
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⵠⵠⲆⲆᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⲆⵠⵠΔⲆ;
		Ⲇᐃ[Δ.ⵠΔⵠΔΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠΔΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⵠᐃⵠⲆΔΔ;
		Ⲇᐃ[Δ.ⵠΔⵠΔΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠΔΔᐃⵠ;
		Ⲇᐃ[Δ.ᐃΔⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃᐃⵠⲆᐃ;
		Ⲇᐃ[Δ.ᐃΔⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆΔⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃΔⵠᐃΔΔ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠᐃΔⲆᐃ;
		Ⲇᐃ[Δ.ΔⲆⲆⲆⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆⲆⲆᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔΔⵠⲆⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆⲆⲆⲆᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆⲆⲆΔΔᐃ;
		Ⲇᐃ[Δ.ΔΔΔᐃᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ΔΔΔᐃᐃΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃⲆΔⵠⵠ;
		Ⲇᐃ[Δ.ΔΔΔᐃᐃΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃⵠⲆᐃⲆ;
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃ][Δ.ΔⲆΔ] = [ⵠᐃ.ᐃⲆⲆⲆⲆⲆᐃ];
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃ][Δ.ⲆⵠΔ] = [ⵠᐃ.ΔⵠΔΔⲆᐃⲆ];
		Ⲇᐃ[Δ.ᐃⵠⵠⲆⲆ] = [], Ⲇᐃ[Δ.ᐃⵠⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃⲆΔΔⵠ;
		Ⲇᐃ[Δ.ᐃⵠⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔᐃⵠᐃᐃᐃ;
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃ] = [], Ⲇᐃ[Δ.ΔⲆⲆⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃΔⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠΔⲆⲆᐃΔ;
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔΔᐃⵠⲆⲆ;
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⲆᐃᐃⵠᐃ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⲆᐃΔⲆΔ;
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆⵠⵠΔᐃᐃ;
		Ⲇᐃ[Δ.ΔⲆΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔⲆⵠΔΔΔ;
		Ⲇᐃ[Δ.ΔⲆΔⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃΔⵠⵠΔᐃ;
		Ⲇᐃ[Δ.ⵠⲆᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⵠⵠᐃΔΔ;
		Ⲇᐃ[Δ.ⵠⲆᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆᐃᐃΔⵠΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⵠᐃⲆΔⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠⲆⲆᐃⲆ;
		Ⲇᐃ[Δ.ᐃᐃΔΔΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⵠᐃⲆᐃⲆ;
		Ⲇᐃ[Δ.ᐃᐃΔΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⲆⲆΔᐃᐃ;
		Ⲇᐃ[Δ.ΔⵠᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠⲆᐃᐃⲆⲆ;
		Ⲇᐃ[Δ.ΔⵠᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠᐃⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃᐃᐃⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠᐃᐃᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔΔⲆⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃᐃᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⲆⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ᐃΔᐃⲆⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃⲆⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⵠⵠⲆΔⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃⲆⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔΔΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃⲆⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆⵠᐃᐃⵠⵠ;
		Ⲇᐃ[Δ.ΔᐃᐃΔⵠⵠⲆ] = ⵠᐃ.ΔᐃᐃΔⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⲆᐃ] = ⵠᐃ.ⲆᐃⵠⵠᐃⲆᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⲆΔᐃⵠᐃⵠ);
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆᐃΔⵠΔⵠⵠ);
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆΔᐃΔᐃᐃⵠ);
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆΔᐃⵠⲆᐃᐃ);
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃⲆⲆⵠᐃⲆⲆ);
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠΔⵠⵠΔΔ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠᐃⲆΔⲆⵠⵠ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠⵠⲆⲆΔᐃ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠⵠᐃᐃⵠΔᐃ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠΔᐃⵠΔⵠ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆⲆΔⵠᐃᐃⲆ);
		Ⲇᐃ[Δ.ΔΔⵠⵠΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃⵠᐃΔⲆᐃ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃΔⵠⵠΔΔⵠ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆΔⲆⲆΔⲆᐃ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃᐃⵠⲆⲆΔⲆ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⲆᐃΔΔⲆⵠ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃΔΔⲆⵠⵠΔ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃⵠⵠⵠΔΔΔ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠᐃᐃⵠⵠΔ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃⵠΔⲆᐃⲆ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃΔᐃΔⲆⲆ);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆΔⲆΔⵠⵠⲆ);
		Ⲇᐃ[Δ.ᐃⵠΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃΔⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ᐃⵠΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⵠⲆᐃΔⲆ;
		Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃⵠⲆΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃΔᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠⵠⵠⲆⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆⲆⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃⲆⲆⲆΔ;
		Ⲇᐃ[Δ.ⵠⵠⵠⲆⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃᐃᐃⵠΔⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆⵠᐃ] = ⵠᐃ.ᐃⲆⲆⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆᐃΔⵠⲆΔΔ] = ⵠᐃ.ⲆᐃΔⵠⲆΔΔ;
		Ⲇᐃ[Δ.ⵠⵠⵠΔᐃⵠⲆ] = ⵠᐃ.ⵠⵠⵠΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ΔⲆΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃᐃⵠⲆᐃ;
		Ⲇᐃ[Δ.ΔⲆΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠᐃⵠᐃⵠᐃ;
		Ⲇᐃ[Δ.ⵠⲆⵠΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃⵠⵠⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃΔΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ΔΔΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔΔΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⵠΔⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ΔΔΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⲆᐃΔⲆΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃⵠⵠⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃΔΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ⲆⲆⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔᐃⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ⲆⲆⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⵠᐃⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃⵠᐃΔⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⲆⵠⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔᐃᐃⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃⵠⲆΔᐃ;
		Ⲇᐃ[Δ.ᐃⵠⲆΔΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆΔᐃᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃⵠⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⵠⲆΔⲆⵠ;
		Ⲇᐃ[Δ.ⲆᐃΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ⲆᐃΔⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⵠᐃᐃᐃⵠ;
		Ⲇᐃ[Δ.ᐃᐃⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆᐃᐃΔΔΔ;
		Ⲇᐃ[Δ.ᐃᐃⵠⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃⲆⵠⲆᐃ;
		Ⲇᐃ[Δ.ΔΔⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃⵠΔΔⲆⵠⵠΔ;
		Ⲇᐃ[Δ.ΔΔⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔᐃⵠⲆΔᐃΔᐃ;
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⵠⲆᐃᐃΔⵠᐃΔ;
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠΔᐃⵠᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆΔᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠΔᐃⵠⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠⵠΔΔⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠⵠΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆΔⵠΔⵠΔⵠⲆ;
		Ⲇᐃ[Δ.ⵠⵠΔΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃᐃΔⲆΔⵠΔΔ;
		Ⲇᐃ[Δ.ⵠΔⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠΔⵠᐃⲆΔΔⵠ;
		Ⲇᐃ[Δ.ⵠΔⵠⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔΔⲆΔΔᐃΔⲆ;
		Ⲇᐃ[Δ.ⲆⲆⵠΔΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⵠᐃⲆⵠΔⵠⵠⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⲆΔΔΔⵠΔΔ;
		Ⲇᐃ[Δ.ΔΔⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆᐃⵠⲆΔⲆ;
		Ⲇᐃ[Δ.ΔΔⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔΔΔᐃΔ;
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃⲆⲆΔᐃ;
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠΔⵠᐃⵠ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔΔⲆΔⲆⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⵠᐃᐃᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ⵠⵠΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⵠⲆⲆⲆⵠⲆⲆ;
		Ⲇᐃ[Δ.ⵠⵠΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⲆᐃⵠᐃΔΔΔ;
		Ⲇᐃ[Δ.ⵠΔⲆΔΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃⲆⲆⲆΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠⵠⲆᐃΔᐃΔᐃ;
		Ⲇᐃ[Δ.ⵠΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠⵠΔⲆΔᐃᐃ;
		Ⲇᐃ[Δ.ⵠΔΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⵠⵠⵠΔⵠⲆΔ;
		Ⲇᐃ[Δ.ⲆⲆΔΔΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆⵠᐃⵠᐃⵠᐃΔ;
		Ⲇᐃ[Δ.ⲆⲆΔΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⵠⵠⵠⲆΔⲆΔ;
		Ⲇᐃ[Δ.ᐃⵠⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃΔⲆⵠⲆᐃΔΔ;
		Ⲇᐃ[Δ.ᐃⵠⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.Δᐃᐃⵠᐃⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠΔᐃΔᐃᐃ;
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔᐃⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔⵠΔΔⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃΔⲆᐃⲆⲆᐃⲆ;
		Ⲇᐃ[Δ.ΔⵠΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ΔⵠΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⵠⵠⵠⲆⲆⲆ;
		Ⲇᐃ[Δ.ΔⵠΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠᐃᐃᐃⲆᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃⵠᐃⲆⵠᐃⵠᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃⵠⵠⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⵠΔΔΔⵠ;
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃᐃΔΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃΔΔⵠΔΔᐃ;
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠⵠⲆⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⲆⲆΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠⲆᐃⲆᐃᐃ;
		Ⲇᐃ[Δ.ⲆⲆΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆⲆⲆᐃⲆΔ;
		Ⲇᐃ[Δ.ⲆⲆΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃⲆᐃᐃⵠⵠΔⲆ;
		Ⲇᐃ[Δ.ⲆⲆΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠΔΔᐃⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ΔΔᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ΔΔᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠⵠΔⲆᐃ;
		Ⲇᐃ[Δ.ΔΔᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠΔΔⲆⲆΔ;
		Ⲇᐃ[Δ.ⲆⲆᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃᐃⲆΔⲆⵠΔ;
		Ⲇᐃ[Δ.ⲆⲆᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆᐃⵠᐃΔⲆΔΔ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔⲆⵠᐃᐃᐃ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⵠⵠⵠΔⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠΔΔⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠᐃΔᐃⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠΔΔⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠⵠΔⵠᐃᐃⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆΔⵠⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠⲆⲆᐃⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔⵠⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⵠᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃΔᐃΔⲆᐃⵠΔ;
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔⵠⲆΔᐃΔⲆⵠ;
		Ⲇᐃ[Δ.ᐃⲆⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠⵠⲆΔⲆⲆ;
		Ⲇᐃ[Δ.ᐃⲆⵠⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔΔⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃⲆᐃⲆⲆ;
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔᐃᐃⲆᐃⵠ;
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠ] = [];
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⲆⲆⵠⲆΔ;
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠⵠᐃⵠⵠ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃΔΔᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆⲆᐃⵠΔΔ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃⵠΔΔⲆⵠΔⲆⵠ);
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠΔⲆᐃᐃᐃΔΔ);
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠΔⲆᐃᐃᐃΔΔ);
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃᐃⲆⵠⵠᐃΔⵠᐃ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠᐃⵠᐃΔᐃᐃ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔΔⲆⲆᐃΔⲆ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃⵠᐃᐃⵠⲆⲆ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠᐃⲆΔᐃᐃⲆ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔΔⲆⲆⵠᐃᐃ);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠᐃᐃᐃΔⲆⲆ);
		Ⲇᐃ[Δ.ⵠΔΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⲆⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ⵠΔΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠΔⵠⲆⲆⲆ;
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃⲆⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆᐃΔⵠᐃⲆ;
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆᐃⵠⵠⲆⵠᐃ);
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆΔⲆⵠΔⵠⲆ);
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠΔⵠᐃΔⵠΔ);
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆⲆⲆⵠⲆⵠⵠ);
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⲆΔⲆΔⲆΔ);
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⵠⲆⵠⲆⲆΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔΔⲆⵠⲆᐃΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⲆΔⲆᐃⵠΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠΔΔΔᐃⲆΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃⵠᐃᐃᐃΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆⵠᐃⲆⵠᐃΔ);
		Ⲇᐃ[Δ.ᐃΔⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃΔᐃᐃⵠᐃⲆ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠⲆᐃⲆΔⵠⵠ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠⵠⵠⲆΔΔ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃⵠΔᐃΔΔᐃ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠᐃΔⲆⵠΔⲆ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃⲆΔⵠΔⵠΔ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⲆᐃⵠΔΔΔ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆᐃⵠᐃⵠⲆΔ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃⵠΔΔⲆⲆ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠᐃⲆⲆΔⲆⲆ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⲆⵠΔⵠⵠᐃ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⲆᐃⲆΔⲆᐃ);
		Ⲇᐃ[Δ.ⲆⵠΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠᐃΔΔⲆΔΔ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆᐃΔᐃⲆⵠⵠ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠΔⵠΔᐃᐃ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆᐃⵠⲆⲆⲆⵠ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠᐃⵠⲆⲆⲆⲆ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⵠΔΔΔΔⲆ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠᐃⵠΔᐃᐃ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠΔⵠᐃⵠⲆᐃ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠΔᐃᐃᐃⲆ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆᐃⲆⲆᐃΔᐃ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃᐃⵠᐃᐃΔⲆ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔΔⵠᐃⲆⵠᐃ);
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃΔΔⵠᐃΔᐃ);
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⲆⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃⵠᐃΔᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⲆⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.Ⲇᐃᐃᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ᐃᐃⵠᐃⲆᐃⲆ] = ⵠᐃ.ⵠⲆΔⲆᐃⵠⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⲆΔΔⲆⲆΔΔ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⲆⲆΔΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ΔΔⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ΔΔⲆᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃΔⵠⲆⵠ;
		Ⲇᐃ[Δ.ΔΔⲆᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⲆⲆⵠⵠⲆ;
		Ⲇᐃ[Δ.ⵠᐃⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃᐃⲆᐃΔ;
		Ⲇᐃ[Δ.ⵠᐃⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⲆΔΔΔΔ;
		Ⲇᐃ[Δ.ⲆᐃΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⵠⵠᐃᐃⵠΔ;
		Ⲇᐃ[Δ.ⲆᐃΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃΔΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⲆΔⵠΔⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆⵠⲆᐃΔΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠΔⲆΔⵠ] = ⵠᐃ.ⵠⲆⵠΔⲆΔⵠ;
		Ⲇᐃ[Δ.ΔΔΔⵠⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔΔΔⵠⲆⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠⵠᐃⵠΔᐃ;
		Ⲇᐃ[Δ.ΔΔΔⵠⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔⲆΔΔᐃΔ;
		Ⲇᐃ[Δ.ᐃⲆⵠΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃⵠⲆΔⲆ;
		Ⲇᐃ[Δ.ᐃⲆⵠΔΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔⲆΔⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆⵠΔⵠΔⲆⲆ] = ⵠᐃ.ⲆⵠΔⵠΔⲆⲆ;
		Ⲇᐃ[Δ.ᐃⵠΔⲆᐃᐃᐃ] = ⵠᐃ.ᐃⵠΔⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃⲆⵠⲆⵠⵠⵠ] = ⵠᐃ.ᐃⲆⵠⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ᐃΔᐃⵠΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃⵠΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃᐃⵠⵠᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃⵠΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠᐃΔⵠⲆΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⲆΔⵠᐃⲆ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠⵠΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃⵠᐃⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠᐃⲆΔⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆᐃΔ] = ⵠᐃ.ⲆΔⲆᐃⲆᐃΔ;
		Ⲇᐃ[Δ.ΔⵠᐃᐃΔⲆᐃ] = ⵠᐃ.ΔⵠᐃᐃΔⲆᐃ;
		Ⲇᐃ[Δ.ᐃⵠΔⲆⵠᐃᐃ] = ⵠᐃ.ᐃⵠΔⲆⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆΔΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃⵠⵠᐃⲆ;
		Ⲇᐃ[Δ.ⵠⲆⲆΔⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃⵠᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆⵠⲆⲆᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⲆᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃᐃⵠᐃⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆⲆᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠⲆⲆⵠⲆᐃ;
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⵠᐃⲆⲆⲆ;
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠᐃΔΔΔⵠ;
		Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃΔΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆΔⲆⵠⵠΔ;
		Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⵠᐃΔᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔΔⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆΔΔⲆⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃΔᐃᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔΔⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆᐃⲆⲆΔΔ;
		Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⲆΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆⵠΔΔᐃⵠ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⲆⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⲆⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⲆΔᐃⵠⵠ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⲆⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆⵠⲆᐃⲆⲆ;
		Ⲇᐃ[Δ.ΔⲆⲆⲆⵠⵠᐃ] = ⵠᐃ.ΔⲆⲆⲆⵠⵠᐃ;
		Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃΔ] = ⵠᐃ.ΔΔᐃⵠᐃᐃΔ;
		Ⲇᐃ[Δ.ᐃⵠᐃⵠᐃΔᐃ] = ⵠᐃ.ᐃⵠᐃⵠᐃΔᐃ;
		Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆⵠ] = ⵠᐃ.ᐃⲆⵠⵠΔⲆⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⲆᐃⲆ] = ⵠᐃ.ⲆⲆⵠᐃⲆᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔⲆᐃΔΔⵠ] = ⵠᐃ.ᐃΔⲆᐃΔΔⵠ;
		Ⲇᐃ[Δ.ⲆΔᐃᐃⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃᐃⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠΔⵠⲆⲆΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔᐃᐃⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠΔΔⲆᐃⵠΔⲆ;
		Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃⵠΔΔⲆⲆΔ;
		Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃⵠᐃΔᐃⲆⲆⵠ;
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃΔᐃᐃⲆⵠΔⲆ;
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆⲆⵠⲆⵠᐃⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆΔⵠⵠᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⵠⵠᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔΔⵠᐃΔᐃᐃⵠ;
		Ⲇᐃ[Δ.ⵠⲆΔⵠⵠᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆΔᐃⲆᐃⲆⲆᐃ;
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠⲆⵠ] = ⵠᐃ.ⲆⲆⲆⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ⵠⵠΔⲆΔⲆⵠ] = ⵠᐃ.ⵠⵠΔⲆΔⲆⵠ;
		Ⲇᐃ[Δ.ᐃⵠΔᐃⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠΔᐃⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⵠⲆⵠⲆΔ;
		Ⲇᐃ[Δ.ᐃⵠΔᐃⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃΔᐃΔⲆΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠⲆⵠᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆΔᐃⲆⲆᐃ;
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆΔⲆⵠΔᐃ;
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃΔᐃⵠⲆⲆ;
		Ⲇᐃ[Δ.ΔⵠⲆⵠᐃᐃΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆⵠᐃᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆΔᐃΔⵠⲆ;
		Ⲇᐃ[Δ.ΔⵠⲆⵠᐃᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⲆⲆᐃΔΔ;
		Ⲇᐃ[Δ.ⵠⲆᐃᐃⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆᐃᐃⵠⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⵠⲆⵠⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆᐃᐃⵠⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆΔⲆΔᐃⵠ;
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆᐃⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ⵠΔΔΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠΔΔΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠΔⲆᐃᐃⲆ;
		Ⲇᐃ[Δ.ⵠΔΔΔΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠΔⲆᐃΔᐃ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆⵠᐃᐃᐃΔ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆⵠΔⵠΔΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆᐃⲆⵠⲆΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠΔⲆⵠⵠⲆ;
		Ⲇᐃ[Δ.ΔⵠᐃᐃΔᐃᐃ] = ⵠᐃ.ΔⵠᐃᐃΔᐃᐃ;
		Ⲇᐃ[Δ.ⵠⵠᐃΔⵠⵠⵠ] = ⵠᐃ.ⵠⵠᐃΔⵠⵠⵠ;
		Ⲇᐃ[Δ.ΔΔⵠⲆⲆΔᐃ] = ⵠᐃ.ΔΔⵠⲆⲆΔᐃ;
		Ⲇᐃ[Δ.ⲆΔᐃⲆⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃⲆⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆⲆᐃᐃΔⵠ;
		Ⲇᐃ[Δ.ⲆΔᐃⲆⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⵠΔⵠⲆⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔⵠⲆⲆⲆⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⲆⵠⵠⵠⵠ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃΔⲆᐃⵠᐃ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃᐃΔⵠⲆⲆ;
		Ⲇᐃ[Δ.ᐃⵠΔⵠΔⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠΔⵠΔⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⵠⲆⵠⵠΔΔ;
		Ⲇᐃ[Δ.ᐃⵠΔⵠΔⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔᐃΔⲆⲆᐃ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃΔΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃᐃᐃⵠⵠ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⵠΔΔᐃᐃ;
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠΔΔΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.Ⲇⵠᐃⵠⵠⵠᐃ;
		Ⲇᐃ[Δ.ᐃⲆᐃᐃᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆᐃᐃᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔᐃΔΔᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆᐃᐃᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔᐃⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃΔᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ΔⵠⲆΔⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆᐃⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ⵠΔΔⵠⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⵠⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⵠΔⲆⵠⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔΔⵠⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔΔᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ⲆⲆⵠΔᐃΔⵠ] = ⵠᐃ.ⲆⲆⵠΔᐃΔⵠ;
		Ⲇᐃ[Δ.ᐃᐃᐃⵠΔᐃⵠ] = ⵠᐃ.ᐃᐃᐃⵠΔᐃⵠ;
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃⲆΔ] = ⵠᐃ.ᐃΔᐃΔᐃⲆΔ;
		Ⲇᐃ[Δ.ⲆⵠⵠΔΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠΔΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆΔΔⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠΔΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠΔΔⵠᐃΔ;
		Ⲇᐃ[Δ.ΔᐃⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃⲆⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃΔⲆΔᐃ;
		Ⲇᐃ[Δ.ΔᐃⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔΔᐃᐃⵠᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃΔΔΔⲆ] = ⵠᐃ.ⵠᐃᐃΔΔΔⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔΔⵠΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃΔⵠᐃⵠⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃⵠᐃΔᐃᐃ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⲆᐃⲆⲆⲆ;
		Ⲇᐃ[Δ.ΔⵠΔᐃⲆᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔᐃⲆᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⵠⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ΔⵠΔᐃⲆᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⲆⵠⵠⲆΔ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔᐃΔⲆⵠΔ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆⵠⵠⵠΔΔ;
		Ⲇᐃ[Δ.ⵠΔᐃᐃⵠΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃᐃⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃⲆΔⲆⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃᐃⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔⲆⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⵠⵠⵠΔⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠΔⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ⵠⵠⵠΔⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⲆᐃΔⲆⵠ;
		Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃⲆⵠⵠΔᐃ;
		Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔᐃΔΔⲆΔ;
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃΔΔ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔᐃⲆᐃᐃⵠ;
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆΔΔΔᐃⲆ;
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔᐃⵠᐃⵠᐃ;
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃⵠⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ᐃⲆᐃΔᐃΔΔ] = ⵠᐃ.ᐃⲆᐃΔᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔᐃᐃⲆⵠⲆ] = ⵠᐃ.ⲆΔᐃᐃⲆⵠⲆ;
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆⵠᐃ] = ⵠᐃ.ΔᐃⲆⵠⲆⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠΔⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔⲆΔⲆⲆ;
		Ⲇᐃ[Δ.Ⲇᐃᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.Ⲇᐃᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆᐃⲆᐃⲆⵠ;
		Ⲇᐃ[Δ.Ⲇᐃᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⲆⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ⵠⲆⲆᐃΔⲆΔ] = ⵠᐃ.ⵠⲆⲆᐃΔⲆΔ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆⲆⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠΔⵠⲆᐃΔ;
		Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃᐃⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠᐃⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⲆⵠΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆⵠΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆᐃΔᐃⲆⵠ;
		Ⲇᐃ[Δ.ⵠⲆⲆⵠΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⲆᐃΔΔᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠᐃⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔⵠⵠᐃⵠⵠ;
		Ⲇᐃ[Δ.ΔΔᐃΔⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔΔᐃΔⲆⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⵠⲆᐃⲆⵠ;
		Ⲇᐃ[Δ.ΔΔᐃΔⲆⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔΔΔⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⲆⲆᐃᐃⵠ;
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔᐃᐃⲆⲆⲆⲆ;
		Ⲇᐃ[Δ.ⵠⵠⵠⲆΔⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆΔⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔᐃᐃⲆΔⲆᐃ;
		Ⲇᐃ[Δ.ⵠⵠⵠⲆΔⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⲆⲆᐃΔΔ;
		Ⲇᐃ[Δ.ᐃΔΔᐃⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔΔᐃⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⲆΔᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔΔᐃⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠᐃΔΔⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃⵠΔᐃΔᐃ;
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⲆᐃⵠᐃΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⲆⵠ] = ⵠᐃ.ⵠⲆⵠᐃⵠⲆⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⵠⵠΔ] = ⵠᐃ.ⲆⲆⵠᐃⵠⵠΔ;
		Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠⲆΔ] = ⵠᐃ.ᐃⲆⵠᐃⵠⲆΔ;
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔᐃⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⲆΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⲆⲆᐃⲆᐃ;
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔᐃΔⵠΔⵠ;
		Ⲇᐃ[Δ.ⲆΔⵠΔⲆⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆΔⵠΔⲆⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔᐃⲆⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆΔⵠΔⲆⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔᐃⲆᐃΔ;
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠᐃΔⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆⵠᐃΔⵠⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠⲆⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠⲆⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆⵠᐃΔΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃΔΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⵠᐃΔΔᐃⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃΔΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠᐃΔΔᐃⲆ;
		Ⲇᐃ[Δ.ᐃⵠΔⵠⵠᐃᐃ] = ⵠᐃ.ᐃⵠΔⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠⵠΔΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔⲆᐃΔⵠⲆ;
		Ⲇᐃ[Δ.ΔⲆᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆᐃᐃⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ΔⲆᐃⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆᐃⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆ][Δ.ΔⲆΔ] = [ⵠᐃ.ᐃⲆⲆΔⲆⵠⲆ, ⵠᐃ.ⲆᐃΔΔⵠᐃⵠ, ⵠᐃ.ⲆⵠΔᐃΔᐃᐃ, ⵠᐃ.ᐃⵠⵠⵠⲆⲆⲆ, ⵠᐃ.ⲆⲆⵠΔΔΔⵠ, ⵠᐃ.ⲆⵠⲆᐃⲆᐃᐃ, ⵠᐃ.ΔⲆⵠⵠΔⲆᐃ, ⵠᐃ.ⵠΔⲆⵠᐃᐃᐃ, ⵠᐃ.ⲆⵠⲆⲆᐃⲆⵠ];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆ][Δ.ⲆⵠΔ] = [ⵠᐃ.ⲆⵠⵠⲆᐃⵠΔ, ⵠᐃ.ⵠⲆΔⵠᐃⵠᐃ, ⵠᐃ.ᐃΔᐃⵠᐃⲆΔ, ⵠᐃ.ᐃⵠᐃᐃᐃⲆᐃ, ⵠᐃ.ⵠᐃᐃΔΔᐃⵠ, ⵠᐃ.ⲆⲆⲆⲆᐃⲆΔ, ⵠᐃ.ⲆⵠΔΔⲆⲆΔ, ⵠᐃ.ⵠΔⲆⵠᐃᐃᐃ, ⵠᐃ.ΔΔⵠᐃᐃΔⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠΔⲆⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃΔⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⲆⲆΔΔⲆⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃⲆⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃⲆⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃᐃᐃΔⵠΔ;
		Ⲇᐃ[Δ.ⵠΔᐃⲆⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⵠΔᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆⵠⲆΔⵠΔ;
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⲆᐃⵠⵠΔⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⵠᐃᐃⵠⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔⲆᐃⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⵠⵠⲆᐃΔΔⵠ;
		Ⲇᐃ[Δ.ΔⲆⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⲆᐃΔⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆΔΔΔⵠⵠᐃΔ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃΔⲆⲆᐃⲆᐃⲆᐃ;
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆⲆΔΔΔⵠ;
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆΔⲆᐃΔᐃ;
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔⵠΔΔⲆⲆⵠⲆᐃ);
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔᐃᐃΔΔΔⵠⲆⲆ);
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆΔⵠⲆⵠΔΔⲆⲆ);
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⲆΔΔᐃΔⵠᐃⲆ);
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆⵠΔⲆΔΔⲆᐃⵠ);
		Ⲇᐃ[Δ.ΔⵠⲆᐃΔ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⲆⵠⲆⲆᐃⲆⵠΔ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃΔᐃΔⲆᐃⵠΔⲆ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠⲆᐃⲆⵠᐃⲆΔⵠ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⵠΔᐃⲆⵠΔᐃᐃᐃ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃΔᐃᐃⲆᐃΔᐃⲆ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔᐃΔⵠⵠⵠΔΔᐃ);
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ΔⵠⵠⲆⲆᐃΔⲆᐃ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ΔΔΔⵠΔᐃⲆⵠΔ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ⲆⲆᐃΔⲆⵠⵠⲆΔ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃ.ᐃΔⵠΔᐃⵠΔΔⲆ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⲆⲆᐃⵠⲆⵠΔⲆⲆ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ⵠⵠΔΔᐃΔⲆⲆΔ);
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃ.ᐃΔⵠⲆᐃⲆᐃⵠΔ);
		ΔⲆΔΔ["g"] = [];
		ΔⲆΔΔ["g"][ⲆΔᐃ] = [ⵠᐃ.ⲆⵠΔⲆᐃᐃⵠ, ⵠᐃ.ΔⵠⲆⵠⵠⲆᐃ];
		ΔⲆΔΔ["g"][1] = ΔⲆΔΔ["g"][ⵠⵠᐃⵠ];
		ΔⲆΔΔ["g"][2] = [ⵠᐃ.ΔⵠⲆⲆΔᐃᐃ, ⵠᐃ.ⵠᐃⲆⲆᐃᐃΔ];
		ΔⲆΔΔ["m"] = [];
		ΔⲆΔΔ["m"][ⵠⵠⲆⲆ] = [ⵠᐃ.ⵠΔᐃΔⵠΔΔ, ⵠᐃ.ⵠⵠᐃΔⲆⵠⲆ];
		ΔⲆΔΔ["m"][1] = ΔⲆΔΔ["m"][ΔⵠⲆΔ];
		ΔⲆΔΔ["m"][2] = [ⵠᐃ.ⵠΔΔⵠΔᐃⲆ, ⵠᐃ.ᐃᐃᐃⵠΔⲆⵠ];
		ΔⲆΔΔ[ⵠ[220]] = [];
		ΔⲆΔΔ[ⵠ[220]][ⲆΔᐃ] = [ⵠᐃ.ⵠᐃΔⵠⵠΔⵠ, ⵠᐃ.ⲆⵠⲆΔᐃΔᐃ];
		ΔⲆΔΔ[ⵠ[220]][ⵠⲆⲆ] = ΔⲆΔΔ[ⵠ[220]][0];
		ΔⲆΔΔ[ⵠ[220]][2] = ΔⲆΔΔ[ⵠ[220]][ᐃⵠΔ];
		ΔⲆΔΔ[ⵠ[220]][Δᐃᐃᐃ] = ΔⲆΔΔ[ⵠ[220]][0];
		ΔⲆΔΔ[ⵠ[220]][ⲆⵠⲆΔⲆ] = ΔⲆΔΔ[ⵠ[220]][0];
		ΔⲆΔΔ[ⵠ[220]][5] = ΔⲆΔΔ[ⵠ[220]][0];
		ΔⲆΔΔ["s"] = [];
		ΔⲆΔΔ["s"][0] = [ⵠᐃ.ⵠⲆⵠⵠΔᐃᐃ, ⵠᐃ.ᐃΔⵠΔᐃⵠᐃ];
		ΔⲆΔΔ["s"][1] = ΔⲆΔΔ["s"][0];
		ΔⲆΔΔ["s"][ⵠⵠⲆᐃ] = [ⵠᐃ.ⲆΔΔⲆΔⲆΔ, ⵠᐃ.ⲆⵠⵠΔⵠΔⲆ];
		ΔⲆΔΔ["p"] = [];
		ΔⲆΔΔ["p"][ΔⵠⲆⲆ] = [ⵠᐃ.ⵠᐃⲆᐃΔⲆⵠ, ⵠᐃ.ⵠᐃⲆᐃΔⲆⵠ];
		ΔⲆΔΔ["a"] = [];
		ΔⲆΔΔ["a"][0] = [ⵠᐃ.ⵠΔᐃᐃⵠⲆΔ, ⵠᐃ.ᐃΔᐃᐃⵠᐃᐃ];
		ΔⲆΔΔ["a"][ΔΔᐃᐃ] = ΔⲆΔΔ["a"][ΔⲆⵠ];
		ΔⲆΔΔ["a"][2] = ΔⲆΔΔ["a"][ⵠᐃⲆᐃ];
		ΔⲆΔΔ["d"] = [];
		ΔⲆΔΔ["d"][ⵠⵠⲆⲆ] = [ⵠᐃ.ᐃⵠΔⲆⵠⵠᐃ, ⵠᐃ.ΔΔⲆΔᐃΔΔ];
		ΔⲆΔΔ["d"][ᐃⵠⵠ] = ΔⲆΔΔ["d"][0];
		ΔⲆΔΔ["d"][ⵠⵠⲆᐃ] = ΔⲆΔΔ["d"][ΔΔⵠᐃ];
		ΔⲆΔΔ[ⵠ[239]] = [];
		ΔⲆΔΔ[ⵠ[239]][0] = [ⵠᐃ.ⵠⵠⵠΔᐃⵠⵠ, ⵠᐃ.ⵠⵠΔⵠⵠⲆⲆ];
		ΔⲆΔΔ[ⵠ[239]][1] = ΔⲆΔΔ[ⵠ[239]][0];
		ΔⲆΔΔ[ⵠ[239]][2] = ΔⲆΔΔ[ⵠ[239]][ΔᐃⲆΔ];
		ΔⲆΔΔ["f"] = [];
		ΔⲆΔΔ["f"][0] = [ⵠᐃ.ᐃⲆΔᐃΔⲆⲆ, ⵠᐃ.ᐃⲆⵠⲆⵠⲆᐃ];
		ΔⲆΔΔ["f"][ⲆΔⵠⲆ] = ΔⲆΔΔ["f"][0];
		ΔⲆΔΔ["f"][2] = ΔⲆΔΔ["f"][0];
		ΔⲆΔΔ[ⵠ[398]] = [];
		ΔⲆΔΔ[ⵠ[398]][0] = [ⵠᐃ.ᐃᐃᐃⲆᐃⵠᐃ, ⵠᐃ.ⵠΔΔⲆᐃΔᐃ];
		ΔⲆΔΔ[ⵠ[398]][ⲆⲆΔᐃ] = ΔⲆΔΔ[ⵠ[398]][ΔⵠⲆΔ];
		ΔⲆΔΔ[ⵠ[398]][ⵠᐃⵠΔ] = ΔⲆΔΔ[ⵠ[398]][0];
		ΔⲆΔΔ["c"] = [];
		ΔⲆΔΔ["c"][0] = [ⵠᐃ.ΔⵠⲆⵠⵠᐃⵠ, ⵠᐃ.ⲆⲆΔⵠⵠΔᐃ];
		ΔⲆΔΔ["c"][ᐃⵠ] = ΔⲆΔΔ["c"][ΔⵠⲆⲆ];
		ΔⲆΔΔ["c"][2] = ΔⲆΔΔ["c"][ⲆⲆⲆ];
		ΔⲆΔΔ[ⵠ[293]] = [];
		ΔⲆΔΔ[ⵠ[293]][0] = [ⵠᐃ.ΔⵠⵠᐃΔⲆᐃ, ⵠᐃ.ⵠᐃΔᐃⲆΔⲆ];
		ΔⲆΔΔ["PIRANHA"] = [ⵠᐃ.ⵠᐃΔᐃΔⵠⵠ, ⵠᐃ.ⵠᐃⲆⲆᐃⲆᐃ];
		ΔⲆΔΔ["KRAKEN"] = [ⵠᐃ.ⲆᐃⲆᐃᐃΔⵠ, ⵠᐃ.ⵠⲆΔᐃᐃᐃⵠ];
		ΔⲆΔΔ["FOX"] = [ⵠᐃ.ᐃΔⵠΔᐃⵠⵠ, ⵠᐃ.ⵠΔΔⵠΔⲆⲆ];
		ΔⲆΔΔ["WOLF"] = [ⵠᐃ.ΔᐃΔΔΔⲆⲆ, ⵠᐃ.ΔᐃΔΔᐃⲆᐃ];
		ΔⲆΔΔ["SPIDER"] = [ⵠᐃ.ⲆⲆᐃΔⲆⵠⵠ, ⵠᐃ.ⵠⲆⵠⲆΔⲆᐃ];
		ΔⲆΔΔ["BEAR"] = [ⵠᐃ.ⲆΔΔⲆⲆⲆΔ, ⵠᐃ.ⵠΔᐃΔᐃΔⵠ];
		ΔⲆΔΔ["CAVE"] = [ⵠᐃ.ΔⲆⲆⵠⲆΔⵠ, ⵠᐃ.ⵠΔᐃⲆΔᐃΔ];
		ΔⲆΔΔ["MAP"] = [ⵠᐃ.ᐃΔⲆᐃΔΔᐃ, ⵠᐃ.ⲆⵠΔᐃⵠⵠΔ];
		ΔⲆΔΔ[ⵠ[262]] = [ⵠᐃ.ᐃⲆΔΔΔⵠᐃ, ⵠᐃ.ⵠᐃᐃᐃⵠᐃΔ];
		ΔⲆΔΔ[ⵠ[256]] = [ⵠᐃ.ΔΔⲆᐃⵠᐃⲆ, ⵠᐃ.ᐃΔⵠᐃⲆᐃΔ];
		ΔⲆΔΔ[ⵠ[552]] = [ⵠᐃ.ΔⲆΔⵠΔΔΔ, ⵠᐃ.ⲆΔΔᐃⲆΔⲆ];
		ΔⲆΔΔ[ⵠ[162]] = [ⵠᐃ.ⲆΔⲆΔᐃᐃⲆ, ⵠᐃ.ⵠᐃᐃᐃΔΔⵠ];
		for (var ⲆⵠⲆΔΔᐃᐃᐃⵠ in ΔⲆΔΔ) {
			var ΔⲆᐃΔⲆⲆΔ = ΔⲆΔΔ[ⲆⵠⲆΔΔᐃᐃᐃⵠ];
			for (var ᐃⲆ = ⲆⲆⲆ; ᐃⲆ < ΔⲆᐃΔⲆⲆΔ.length; ᐃⲆ++) {
				var ΔⲆᐃⵠⵠΔΔ = ΔⲆᐃΔⲆⲆΔ[ᐃⲆ];
				if (ΔⲆᐃⵠⵠΔΔ.Δᐃᐃᐃⵠᐃⵠ !== ⵠᐃΔᐃΔ) ΔⲆᐃⵠⵠΔΔ.Δᐃᐃᐃⵠᐃⵠ();
				else if (ΔⲆᐃⵠⵠΔΔ.length > ⵠⲆⲆᐃ) {
					for (var ΔΔΔ = ΔⵠⲆⲆ; ΔΔΔ < ΔⲆᐃⵠⵠΔΔ.length; ΔΔΔ++) {
						if (ΔⲆᐃⵠⵠΔΔ[ΔΔΔ].Δᐃᐃᐃⵠᐃⵠ !== ᐃᐃⲆⵠⲆ) ΔⲆᐃⵠⵠΔΔ[ΔΔΔ].Δᐃᐃᐃⵠᐃⵠ()
					}
				}
			}
		}
		console.log(ⵠΔⵠΔⵠ, undefined)
	}

	function ᐃⵠΔΔᐃⲆΔΔⵠ() {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 460;
		ΔΔ.height = 220;
		Ⲇ.fillStyle = "#3a2a0d";
		Ⲇ.fillRect(0, ᐃΔⵠⵠ, ΔΔ.width, ΔΔ.height);
		Ⲇ.lineWidth = 4;
		Ⲇ.beginPath();
		Ⲇ.strokeStyle = "#513810";
		for (var ᐃⲆᐃ = ⵠΔΔΔ; ᐃⲆᐃ < 220; ᐃⲆᐃ += 20) {
			Ⲇ.moveTo(0, ᐃⲆᐃ);
			Ⲇ.lineTo(460, ᐃⲆᐃ);
			Ⲇ.closePath();
			Ⲇ.stroke()
		}
		return ΔΔ
	}

	function ΔᐃⵠⵠᐃᐃⲆΔᐃ(ᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = 200 * ᐃ;
		var ΔᐃⲆ = ᐃ * 270;
		var Δᐃᐃ = ᐃ * 8;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ + ᐃᐃᐃⲆ;
		Ⲇ.beginPath();
		ᐃΔⵠ(Ⲇ, ΔⲆⵠ, ΔΔᐃ, ᐃᐃⲆ, ΔᐃⲆ - Δᐃᐃ, Δᐃᐃ);
		Ⲇ.globalAlpha = .5;
		Δⵠ(Ⲇ, "#1D6055");
		Ⲇ.globalAlpha = ΔᐃᐃⲆ;
		var text = ⲆΔΔΔⲆ(ᐃ, "Leaderboard", 25, ⵠ[68]);
		Ⲇ.drawImage(text, (ᐃᐃⲆ - text.width) / 2, ᐃ * ᐃᐃⵠⵠ);
		return ΔΔ
	}

	function ᐃΔⲆⲆΔΔᐃ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 144 * ᐃ;
		ΔΔ.height = ᐃ * 280;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : ⲆⲆΔᐃ;
		Ⲇ.translate(ᐃ * 5, ᐃ * 5);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 62, 103.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 62.5, 148.79999542236328 * ᐃ, 62.5 * ᐃ, ᐃ * 148.79999542236328, 63 * ᐃ, 193.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 63, 219.79999542236328 * ᐃ, 47 * ᐃ, 217.79999542236328 * ᐃ, ᐃ * 51, 230.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, 255.79999542236328 * ᐃ, ᐃ * 74, 260.7999954223633 * ᐃ, ᐃ * 72, 248.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * 226.79999542236328, 71 * ᐃ, 229.79999542236328 * ᐃ, ᐃ * 76, ᐃ * 225.79999542236328);
		Ⲇ.bezierCurveTo(90 * ᐃ, 224.79999542236328 * ᐃ, ᐃ * 89, 232.79999542236328 * ᐃ, 90 * ᐃ, 243.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 95, ᐃ * 253.79999542236328, 99 * ᐃ, 249.79999542236328 * ᐃ, ⵠΔⵠⲆⲆ * ᐃ, ᐃ * 229.79999542236328);
		Ⲇ.bezierCurveTo(102 * ᐃ, 213.79999542236328 * ᐃ, ᐃ * 98, 214.79999542236328 * ᐃ, ᐃ * 90, ᐃ * 205.79999542236328);
		Ⲇ.bezierCurveTo(82 * ᐃ, ᐃ * 201.79999542236328, ᐃ * 82, 185.79999542236328 * ᐃ, 82 * ᐃ, ᐃ * 114.79999542236328);
		Ⲇ.bezierCurveTo(ᐃ * 80, 73 * ᐃ, ᐃ * 82, 68 * ᐃ, 93 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(98 * ᐃ, 37 * ᐃ, ᐃ * 65, ⲆᐃⵠΔᐃⵠⲆ * ᐃ, 74 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(82 * ᐃ, ᐃ * 56, 77 * ᐃ, 52 * ᐃ, 69 * ᐃ, ᐃ * 54);
		Ⲇ.bezierCurveTo(ᐃ * 55, ᐃ * 57, 57 * ᐃ, 53 * ᐃ, ᐃ * 54, ᐃ * 39);
		Ⲇ.bezierCurveTo(46 * ᐃ, ᐃ * ᐃΔΔⲆΔⲆⲆ, 37 * ᐃ, ᐃ * 61, ᐃ * 50, ᐃ * 68);
		Ⲇ.bezierCurveTo(65 * ᐃ, 81 * ᐃ, 60 * ᐃ, ᐃ * 89, 62 * ᐃ, 102 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔⲆᐃⲆ]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(ᐃ * -ΔⲆⵠΔΔ, ᐃ * -ⲆΔⵠᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 62, 103.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(62.5 * ᐃ, 148.79999542236328 * ᐃ, ᐃ * 62.5, 148.79999542236328 * ᐃ, 63 * ᐃ, 193.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(63 * ᐃ, ᐃ * 219.79999542236328, 47 * ᐃ, 217.79999542236328 * ᐃ, 51 * ᐃ, 230.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(62 * ᐃ, ᐃ * 255.79999542236328, 74 * ᐃ, 260.7999954223633 * ᐃ, ᐃ * 72, ᐃ * 248.79999542236328);
		Ⲇ.bezierCurveTo(65 * ᐃ, 226.79999542236328 * ᐃ, ᐃ * 71, ᐃ * 229.79999542236328, 76 * ᐃ, ᐃ * 225.79999542236328);
		Ⲇ.bezierCurveTo(ᐃ * 90, 224.79999542236328 * ᐃ, ᐃ * 89, ᐃ * 232.79999542236328, 90 * ᐃ, ᐃ * 243.79999542236328);
		Ⲇ.bezierCurveTo(ᐃ * 95, ᐃ * 253.79999542236328, 99 * ᐃ, 249.79999542236328 * ᐃ, 100 * ᐃ, ᐃ * 229.79999542236328);
		Ⲇ.bezierCurveTo(102 * ᐃ, ᐃ * 213.79999542236328, ᐃ * 98, ᐃ * 214.79999542236328, ᐃ * 90, ᐃ * 205.79999542236328);
		Ⲇ.bezierCurveTo(82 * ᐃ, ᐃ * 201.79999542236328, 82 * ᐃ, 185.79999542236328 * ᐃ, 82 * ᐃ, 114.79999542236328 * ᐃ);
		Ⲇ.bezierCurveTo(80 * ᐃ, ᐃ * 73, 82 * ᐃ, ᐃ * 68, 93 * ᐃ, 53 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 98, 37 * ᐃ, ᐃ * 65, 14 * ᐃ, 74 * ᐃ, ᐃ * 33);
		Ⲇ.bezierCurveTo(ᐃ * 82, ᐃ * 56, ᐃ * 77, 52 * ᐃ, ᐃ * 69, ᐃ * 54);
		Ⲇ.bezierCurveTo(55 * ᐃ, 57 * ᐃ, ᐃ * 57, ᐃ * 53, ᐃ * 54, ᐃ * 39);
		Ⲇ.bezierCurveTo(46 * ᐃ, 20 * ᐃ, 37 * ᐃ, ᐃ * 61, ᐃ * 50, 68 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 65, ᐃ * 81, 60 * ᐃ, ᐃ * 89, 62 * ᐃ, 102 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[2], ᐃ * 6);
		return ΔΔ
	}

	function ⵠⲆⵠΔᐃᐃᐃ(ᐃ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 109;
		ΔΔ.height = ᐃ * 110;
		ΔⵠⲆ(Ⲇ, 54.5 * ᐃ, 55 * ᐃ, ᐃ * 48.038209575038294);
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[1], 8 * ᐃ);
		if (0 == ᐃⲆ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(54.928558349609375 * ᐃ, 43.72320556640625 * ᐃ);
			Ⲇ.bezierCurveTo(66.92855834960938 * ᐃ, 31.72320556640625 * ᐃ, ᐃ * 69.92855834960938, ᐃ * 29.72320556640625, 74.92855834960938 * ᐃ, ᐃ * 29.72320556640625);
			Ⲇ.bezierCurveTo(86.92855834960938 * ᐃ, 28.72320556640625 * ᐃ, ᐃ * 91.92855834960938, ᐃ * 42.72320556640625, 89.92855834960938 * ᐃ, 52.72320556640625 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 88.92855834960938, 63.72320556640625 * ᐃ, ᐃ * 73.92855834960938, 75.72320556640625 * ᐃ, ᐃ * 55.928558349609375, ᐃ * 87.72320556640625);
			Ⲇ.bezierCurveTo(37.928558349609375 * ᐃ, 78.72320556640625 * ᐃ, 26.928558349609375 * ᐃ, ᐃ * 65.72320556640625, 19.928558349609375 * ᐃ, ᐃ * 54.72320556640625);
			Ⲇ.bezierCurveTo(13.928558349609375 * ᐃ, 42.72320556640625 * ᐃ, ᐃ * 21.928558349609375, ᐃ * 28.72320556640625, 35.928558349609375 * ᐃ, ᐃ * 29.72320556640625);
			Ⲇ.bezierCurveTo(ᐃ * 45.928558349609375, ᐃ * 31.72320556640625, ᐃ * 51.928558349609375, ᐃ * 40.72320556640625, ᐃ * 53.928558349609375, ᐃ * 44.72320556640625);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[2])
		} else if (ᐃⲆ == 1) {
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 55, ᐃ * 39.48748779296875);
			ᐃΔⵠ(Ⲇ, -11.5 * ᐃ, -36 * ᐃ, 23 * ᐃ, ᐃ * 72, 10 * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠᐃ], ᐃᐃ[3], ᐃ * ⵠΔΔᐃ);
			ΔⵠⲆ(Ⲇ, ᐃ * 54.5, ᐃ * 78.48748779296875, ᐃ * 22.02271554554524);
			Δⵠ(Ⲇ, ᐃᐃ[Δⵠⵠⵠ], ᐃᐃ[ΔⲆΔⵠ], ᐃ * ⵠᐃᐃⲆ);
			Ⲇ.save();
			Ⲇ.translate(55.5 * ᐃ, 57.287506103515625 * ᐃ);
			ᐃΔⵠ(Ⲇ, -9 * ᐃ, -Ⲇᐃᐃⵠᐃ * ᐃ, ΔΔⵠⲆΔ * ᐃ, 32 * ᐃ, ᐃᐃⲆᐃᐃ * ᐃ);
			Ⲇ.restore();
			Δⵠ(Ⲇ, ᐃᐃ[4]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 66.5, ᐃ * 25.287506103515625);
			Ⲇ.bezierCurveTo(ᐃ * 60.5, 25.287506103515625 * ᐃ, 63.5 * ᐃ, ᐃ * 25.287506103515625, ᐃ * 54.5, ᐃ * 25.287506103515625);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃΔⲆⲆ, ᐃᐃ[5], ᐃ * Ⲇⵠⵠᐃᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(66.5 * ᐃ, 37.287506103515625 * ᐃ);
			Ⲇ.bezierCurveTo(60.5 * ᐃ, ᐃ * 37.287506103515625, ᐃ * 60.5, 37.287506103515625 * ᐃ, ᐃ * 54.5, 37.287506103515625 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ΔⵠᐃΔⵠ, ᐃᐃ[5], ᐃ * 4);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 66.5, ᐃ * 50.287506103515625);
			Ⲇ.bezierCurveTo(ᐃ * 61, ᐃ * 50.287506103515625, ᐃ * 61, ᐃ * 50.287506103515625, ᐃ * 55.5, ᐃ * 50.287506103515625);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ⵠᐃΔᐃΔ, ᐃᐃ[ⲆᐃΔΔΔ], ᐃ * ⲆⲆⲆⵠᐃ)
		} else if (2 == ᐃⲆ) {
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(45.928558349609375 * ᐃ, ᐃ * 55.29463195800781);
			Ⲇ.bezierCurveTo(ᐃ * 38.928558349609375, ᐃ * 67.29463195800781, ᐃ * 38.928558349609375, ᐃ * 67.29463195800781, ᐃ * 31.928558349609375, 79.29463195800781 * ᐃ);
			Ⲇ.bezierCurveTo(15.928558349609375 * ᐃ, ᐃ * 85.29463195800781, ᐃ * 17.928558349609375, 86.29463195800781 * ᐃ, 17.928558349609375 * ᐃ, 90.29463195800781 * ᐃ);
			Ⲇ.bezierCurveTo(19.928558349609375 * ᐃ, ᐃ * 94.29463195800781, 21.928558349609375 * ᐃ, ᐃ * 94.29463195800781, 27.928558349609375 * ᐃ, ᐃ * 92.29463195800781);
			Ⲇ.bezierCurveTo(29.928558349609375 * ᐃ, 98.29463195800781 * ᐃ, 30.928558349609375 * ᐃ, ᐃ * 99.29463195800781, ᐃ * 33.928558349609375, 99.29463195800781 * ᐃ);
			Ⲇ.bezierCurveTo(ᐃ * 38.928558349609375, 97.29463195800781 * ᐃ, 38.928558349609375 * ᐃ, 93.29463195800781 * ᐃ, ᐃ * 37.928558349609375, ᐃ * 86.29463195800781);
			Ⲇ.bezierCurveTo(45.428558349609375 * ᐃ, ᐃ * 73.29463195800781, ᐃ * 51.928558349609375, ᐃ * 64.29463195800781, 52.928558349609375 * ᐃ, 60.29463195800781 * ᐃ);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆΔΔ]);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(55.928558349609375 * ᐃ, ᐃ * 8.866058349609375);
			Ⲇ.bezierCurveTo(ᐃ * 35.928558349609375, 35.866058349609375 * ᐃ, ᐃ * 37.928558349609375, 48.866058349609375 * ᐃ, 46.928558349609375 * ᐃ, ᐃ * 62.866058349609375);
			Ⲇ.bezierCurveTo(65.92855834960938 * ᐃ, 72.86605834960938 * ᐃ, 80.92855834960938 * ᐃ, ᐃ * 55.866058349609375, ᐃ * 93.92855834960938, ᐃ * 36.866058349609375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔΔᐃ], 6 * ᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(93.92855834960938 * ᐃ, ᐃ * 36.866058349609375);
			Ⲇ.bezierCurveTo(82.92855834960938 * ᐃ, 37.866058349609375 * ᐃ, 77.92855834960938 * ᐃ, 36.866058349609375 * ᐃ, ᐃ * 67.92855834960938, ᐃ * 28.866058349609375);
			Ⲇ.bezierCurveTo(ᐃ * 53.928558349609375, ᐃ * 16.866058349609375, 53.928558349609375 * ᐃ, 14.866058349609375 * ᐃ, 55.928558349609375 * ᐃ, ᐃ * 7.866058349609375);
			Ⲇ.bezierCurveTo(65.92855834960938 * ᐃ, ᐃ * 4.866058349609375, ᐃ * 71.92855834960938, 7.866058349609375 * ᐃ, ᐃ * 83.92855834960938, ᐃ * 13.866058349609375);
			Ⲇ.bezierCurveTo(ᐃ * 96.92855834960938, ᐃ * 21.866058349609375, ᐃ * 95.92855834960938, ᐃ * 31.866058349609375, 92.92855834960938 * ᐃ, ᐃ * 36.866058349609375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⵠⵠ], ᐃᐃ[ⵠⲆᐃᐃ], ᐃ * ⵠⲆⵠⵠᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.lineJoin = ⵠ[244];
			Ⲇ.moveTo(ᐃ * 68.92855834960938, ᐃ * 16.866058349609375);
			Ⲇ.bezierCurveTo(71.92855834960938 * ᐃ, 13.866058349609375 * ᐃ, 76.92855834960938 * ᐃ, 16.866058349609375 * ᐃ, ᐃ * 79.92855834960938, 21.866058349609375 * ᐃ);
			Ⲇ.bezierCurveTo(82.92855834960938 * ᐃ, 24.866058349609375 * ᐃ, ᐃ * 81.92855834960938, ᐃ * 27.866058349609375, 73.92855834960938 * ᐃ, ᐃ * 24.866058349609375);
			Ⲇ.bezierCurveTo(67.92855834960938 * ᐃ, 20.866058349609375 * ᐃ, 66.92855834960938 * ᐃ, ᐃ * 19.866058349609375, 67.92855834960938 * ᐃ, ᐃ * 17.866058349609375);
			Ⲇ.closePath();
			Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔⲆ])
		} else 3 == ᐃⲆ && (Ⲇ.scale(.9, .9), Ⲇ.translate(ⵠΔⵠⵠⲆ * ᐃ, 0), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(54 * ᐃ, ᐃ * .421875), Ⲇ.bezierCurveTo(ᐃ * 84, ᐃ * 45.421875, 89 * ᐃ, ᐃ * 51.421875, ᐃ * 83, 74.421875 * ᐃ), Ⲇ.bezierCurveTo(74 * ᐃ, 95.421875 * ᐃ, 46 * ᐃ, ᐃ * 98.421875, ᐃ * 30, 78.421875 * ᐃ), Ⲇ.bezierCurveTo(22 * ᐃ, ᐃ * 59.421875, ᐃ * 27, 49.421875 * ᐃ, ᐃ * 34, 36.421875 * ᐃ), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠᐃ], ᐃᐃ[3], ᐃ * 6), Ⲇ.beginPath(), Ⲇ.lineCap = ⵠ[244], Ⲇ.lineJoin = ⵠ[244], Ⲇ.moveTo(ᐃ * 74, 52.421875 * ᐃ), Ⲇ.bezierCurveTo(77 * ᐃ, ᐃ * 73.421875, 69 * ᐃ, 81.421875 * ᐃ, 58 * ᐃ, 81.421875 * ᐃ), Ⲇ.bezierCurveTo(ᐃ * 66, ᐃ * 71.421875, ᐃ * 70, 66.421875 * ᐃ, 74 * ᐃ, ᐃ * 52.421875), Ⲇ.closePath(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⲆᐃΔ]));
		return ΔΔ
	}

	function ⲆⵠᐃⵠⲆⵠΔⵠⵠ(ᐃⲆⵠⲆ, ⵠⵠⵠᐃΔⲆΔᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		var ᐃᐃⲆ = ᐃⲆⵠⲆ.w + ᐃⲆⵠⲆ.ⵠⲆΔΔΔ;
		var ΔᐃⲆ = ᐃⲆⵠⲆ.ΔᐃⲆ + ᐃⲆⵠⲆ.ⵠⲆΔΔΔ;
		var ΔⵠᐃΔ = .1 * ΔᐃⲆ;
		ΔΔ.width = ᐃᐃⲆ;
		ΔΔ.height = ΔᐃⲆ + ΔⵠᐃΔ;
		Ⲇ.beginPath();
		Ⲇ.translate(ᐃᐃⲆ / 2, ΔᐃⲆ / 2 + ΔⵠᐃΔ);
		Ⲇ.globalAlpha = .5;
		ᐃΔⵠ(Ⲇ, -ᐃⲆⵠⲆ.w / 2, -ᐃⲆⵠⲆ.ΔᐃⲆ / ᐃΔⲆⲆⵠ, ᐃⲆⵠⲆ.w, ᐃⲆⵠⲆ.ΔᐃⲆ, ᐃⲆⵠⲆ.r);
		Δⵠ(Ⲇ, ⵠ[151], ⵠ[151], ᐃⲆⵠⲆ.ⵠⲆΔΔΔ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		if (!ⵠⵠⵠᐃΔⲆΔᐃⲆ) Ⲇ.translate(0, -ΔⵠᐃΔ);
		ᐃΔⵠ(Ⲇ, -ᐃⲆⵠⲆ.w / ⲆᐃⲆᐃ, -ᐃⲆⵠⲆ.ΔᐃⲆ / 2, ᐃⲆⵠⲆ.w, ᐃⲆⵠⲆ.ΔᐃⲆ, ᐃⲆⵠⲆ.r);
		Δⵠ(Ⲇ, ᐃⲆⵠⲆ.ΔᐃⵠΔⵠⵠᐃ, ᐃⲆⵠⲆ.ⲆᐃⲆᐃⲆᐃΔΔᐃ, ᐃⲆⵠⲆ.ⵠⲆΔΔΔ);
		Ⲇ.beginPath();
		Ⲇ.fillStyle = ᐃⲆⵠⲆ.color;
		Ⲇ.textBaseline = ⵠ[230], Ⲇ.textAlign = "center", Ⲇ.font = ᐃⲆⵠⲆ.size + "px " + ᐃⲆⵠⲆ.font;
		Ⲇ.fillText(ᐃⲆⵠⲆ.text, 0, ⲆⲆⲆ);
		return ΔΔ
	}

	function ⵠⵠᐃⲆⵠᐃΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ, ᐃⲆ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 170;
		ΔΔ.height = ᐃ * 200;
		Ⲇ.translate(ⵠⲆⲆᐃⵠ * ᐃ, ᐃ * 15);
		ᐃⲆ == ΔⲆᐃ && (Ⲇ.translate(ⵠⵠᐃⵠ, -ⲆΔᐃΔ * ᐃ), ΔⵠⲆ(Ⲇ, ᐃ * 77.00003051757812, 104.49432373046875 * ᐃ, ᐃ * 71.84010022264724), Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[5], ᐃ * ⲆᐃᐃΔᐃ), ΔⵠⲆ(Ⲇ, 77.00003051757812 * ᐃ, 104.22160339355469 * ᐃ, ᐃ * 61.554853586049575), Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[5], ᐃ * 20), Ⲇ.save(), Ⲇ.translate(ᐃ * 77.00003051757812, ᐃ * 31.267044067382812), ᐃΔⵠ(Ⲇ, -6 * ᐃ, -12.5 * ᐃ, ᐃ * ⵠⵠᐃᐃⵠ, 25 * ᐃ, 10 * ᐃ), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠ], ᐃᐃ[5], ᐃ * ᐃᐃᐃⲆ), Ⲇ.save(), Ⲇ.translate(ᐃ * 77.00003051757812, ᐃ * 13.267044067382812), ᐃΔⵠ(Ⲇ, -ⲆΔⲆᐃⵠᐃΔ * ᐃ, -10.5 * ᐃ, 30 * ᐃ, ᐃ * 21, ᐃ * 10), Ⲇ.restore(), Δⵠ(Ⲇ, ᐃᐃ[ⲆΔⵠⲆ], ᐃᐃ[5], ⵠᐃⲆΔ * ᐃ));
		ΔⵠⲆ(Ⲇ, 77.00003051757812 * ᐃ, 104.49432373046875 * ᐃ, 71.84010022264724 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃΔⵠᐃ], ᐃ * ᐃᐃΔⵠⵠᐃᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 77.00003051757812, 104.22160339355469 * ᐃ, 61.554853586049575 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[2], ⵠᐃⵠⲆᐃ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(18.000030517578125 * ᐃ, 105.85795593261719 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 134.00003051757812, 104.85795593261719 * ᐃ, 77.00003051757812 * ᐃ, ᐃ * 104.85795593261719, 136.00003051757812 * ᐃ, ᐃ * 103.85795593261719);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔᐃᐃ], ᐃᐃ[2], Δⵠⵠⵠᐃ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 77.00003051757812, ᐃ * 104.6761474609375, 32.55764119219941 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⲆΔΔ], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(78.00003051757812 * ᐃ, ᐃ * 112.03977966308594);
		Ⲇ.bezierCurveTo(78.00003051757812 * ᐃ, ᐃ * 87.03977966308594, 78.00003051757812 * ᐃ, 87.03977966308594 * ᐃ, 78.00003051757812 * ᐃ, 62.03977966308594 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], 8 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 78.00003051757812, ᐃ * 48.03977966308594);
		Ⲇ.bezierCurveTo(ᐃ * 82.00003051757812, ᐃ * 55.53977966308594, 82.00003051757812 * ᐃ, 55.53977966308594 * ᐃ, ᐃ * 86.00003051757812, 63.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(78.00003051757812 * ᐃ, ᐃ * 63.03977966308594, ᐃ * 78.00003051757812, 63.03977966308594 * ᐃ, ᐃ * 70.00003051757812, 63.03977966308594 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 80.00003051757812, ᐃ * 111.6761474609375);
		Ⲇ.bezierCurveTo(95.00003051757812 * ᐃ, ᐃ * 97.1761474609375, 95.00003051757812 * ᐃ, ᐃ * 97.1761474609375, ᐃ * 110.00003051757812, ᐃ * 82.6761474609375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⵠΔᐃ], ᐃᐃ[ΔᐃⵠⲆ], ᐃ * 8);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 107.00003051757812, 76.6761474609375 * ᐃ);
		Ⲇ.bezierCurveTo(111.50003051757812 * ᐃ, ᐃ * 82.6761474609375, 111.50003051757812 * ᐃ, 82.6761474609375 * ᐃ, 116.00003051757812 * ᐃ, ᐃ * 88.6761474609375);
		Ⲇ.bezierCurveTo(ᐃ * 118.50003051757812, 81.6761474609375 * ᐃ, ᐃ * 118.50003051757812, ᐃ * 81.6761474609375, 121.00003051757812 * ᐃ, 74.6761474609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[ⵠΔⵠᐃ], ᐃΔᐃⲆⵠ * ᐃ);
		ΔⵠⲆ(Ⲇ, ᐃ * 77.00003051757812, ᐃ * 105.03977966308594, ᐃ * 15.556349186104045);
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 77.00003051757812, ᐃ * 31.267044067382812);
		Ⲇ.rotate(ᐃΔⵠⵠ);
		ᐃΔⵠ(Ⲇ, -6 * ᐃ, -12.5 * ᐃ, ⵠᐃⲆΔΔ * ᐃ, 25 * ᐃ, ᐃ * 10);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ⵠⵠΔⲆ], 7 * ᐃ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 77.00003051757812, 13.267044067382812 * ᐃ);
		Ⲇ.rotate(0);
		ᐃΔⵠ(Ⲇ, ᐃ * -15, -10.5 * ᐃ, 30 * ᐃ, 21 * ᐃ, 10 * ᐃ);
		Ⲇ.restore();
		Δⵠ(Ⲇ, ᐃᐃ[1], ᐃᐃ[ᐃⵠΔⲆ], ⲆΔⵠΔᐃ * ᐃ);
		return ΔΔ
	}

	function ΔΔⲆᐃΔΔΔ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 102 * ᐃ;
		ΔΔ.height = ᐃ * 102;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(3, 3);
		ᐃΔⵠ(Ⲇ, 24 * ᐃ, ᐃ * 26, ᐃ * 70, ᐃ * 9, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ΔΔⵠᐃ]);
		ᐃΔⵠ(Ⲇ, ᐃ * 26, ᐃ * 70, ᐃ * 70, ᐃ * 9, ᐃ * ⵠΔᐃΔᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ᐃΔⵠ(Ⲇ, ᐃ * 5, 3 * ᐃ, 22 * ᐃ, ᐃ * 94, ᐃ * 5);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⵠΔ]);
		ᐃΔⵠ(Ⲇ, ᐃ * 40, ᐃ * ΔⲆΔⵠ, ᐃ * 22, 94 * ᐃ, ᐃ * ⲆⵠΔᐃᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		ᐃΔⵠ(Ⲇ, 75 * ᐃ, ⵠΔⵠⲆ * ᐃ, ᐃ * 22, ᐃ * 94, ᐃ * ᐃᐃⲆᐃⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.globalAlpha = 1;
		Ⲇ.translate(-ⲆⵠⵠⲆ, -ⵠⵠⲆⵠ);
		ᐃΔⵠ(Ⲇ, 24 * ᐃ, ᐃ * 26, 70 * ᐃ, ᐃ * ⲆⵠΔᐃⵠ, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ]);
		ᐃΔⵠ(Ⲇ, 26 * ᐃ, 70 * ᐃ, 70 * ᐃ, 9 * ᐃ, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[1]);
		ᐃΔⵠ(Ⲇ, Δᐃⵠⵠ * ᐃ, ᐃ * 3, ᐃ * 22, ᐃ * 94, ᐃ * 5);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃⵠΔ], ᐃᐃ[ⵠⵠⲆⵠΔ], ᐃ * ᐃΔΔΔ);
		ᐃΔⵠ(Ⲇ, 40 * ᐃ, ᐃ * 3, 22 * ᐃ, ᐃ * 94, ᐃ * ⲆⲆᐃⵠ);
		Δⵠ(Ⲇ, ᐃᐃ[ⲆⲆⵠΔ], ᐃᐃ[3], ⲆⲆΔΔ * ᐃ);
		ᐃΔⵠ(Ⲇ, ᐃ * 75, ᐃ * ⵠᐃᐃᐃ, ᐃ * 22, 94 * ᐃ, 5 * ᐃ);
		Δⵠ(Ⲇ, ᐃᐃ[ⵠᐃᐃⵠ], ᐃᐃ[3], ᐃ * ⵠⲆᐃᐃ);
		return ΔΔ
	}

	function ΔΔⲆΔⲆⵠⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 272;
		ΔΔ.height = 264 * ᐃ;
		Ⲇ.translate(ΔⵠⲆΔ, ᐃ * ᐃᐃᐃⲆ);
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(56.999969482421875 * ᐃ, ᐃ * 84.517333984375);
		Ⲇ.bezierCurveTo(ᐃ * 61.999969482421875, 58.517333984375 * ᐃ, ᐃ * 79.99996948242188, 50.517333984375 * ᐃ, ᐃ * 102.99996948242188, ᐃ * 50.517333984375);
		Ⲇ.bezierCurveTo(119.99996948242188 * ᐃ, 26.517333984375 * ᐃ, 137.99996948242188 * ᐃ, ᐃ * 32.517333984375, 156.99996948242188 * ᐃ, 44.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(187.99996948242188 * ᐃ, ᐃ * 42.517333984375, 195.99996948242188 * ᐃ, 50.517333984375 * ᐃ, ᐃ * 202.99996948242188, ᐃ * 77.517333984375);
		Ⲇ.bezierCurveTo(229.99996948242188 * ᐃ, 80.517333984375 * ᐃ, ᐃ * 231.99996948242188, 96.517333984375 * ᐃ, 229.99996948242188 * ᐃ, 118.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(241.99996948242188 * ᐃ, ᐃ * 147.517333984375, ᐃ * 236.99996948242188, ᐃ * 148.517333984375, ᐃ * 220.99996948242188, 165.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(222.99996948242188 * ᐃ, ᐃ * 192.517333984375, 209.99996948242188 * ᐃ, ᐃ * 212.517333984375, 177.99996948242188 * ᐃ, 213.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(159.99996948242188 * ᐃ, ᐃ * 234.517333984375, ᐃ * 141.99996948242188, 234.517333984375 * ᐃ, 116.99996948242188 * ᐃ, 222.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 72.99996948242188, 226.517333984375 * ᐃ, 66.99996948242188 * ᐃ, ᐃ * 207.517333984375, ᐃ * 65.99996948242188, 190.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(35.999969482421875 * ᐃ, ᐃ * 180.517333984375, ᐃ * 30.999969482421875, ᐃ * 162.517333984375, ᐃ * 39.999969482421875, 135.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(23.999969482421875 * ᐃ, ᐃ * 110.517333984375, 43.999969482421875 * ᐃ, ᐃ * 90.517333984375, ᐃ * 55.999969482421875, 85.517333984375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.translate(0, -20 * ᐃ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 56.999969482421875, 84.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 61.999969482421875, ᐃ * 58.517333984375, 79.99996948242188 * ᐃ, 50.517333984375 * ᐃ, 102.99996948242188 * ᐃ, 50.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(119.99996948242188 * ᐃ, 26.517333984375 * ᐃ, 137.99996948242188 * ᐃ, ᐃ * 32.517333984375, 156.99996948242188 * ᐃ, 44.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(187.99996948242188 * ᐃ, 42.517333984375 * ᐃ, 195.99996948242188 * ᐃ, ᐃ * 50.517333984375, ᐃ * 202.99996948242188, 77.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 229.99996948242188, ᐃ * 80.517333984375, 231.99996948242188 * ᐃ, 96.517333984375 * ᐃ, 229.99996948242188 * ᐃ, ᐃ * 118.517333984375);
		Ⲇ.bezierCurveTo(ᐃ * 241.99996948242188, ᐃ * 147.517333984375, ᐃ * 236.99996948242188, ᐃ * 148.517333984375, 220.99996948242188 * ᐃ, 165.517333984375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 222.99996948242188, ᐃ * 192.517333984375, ᐃ * 209.99996948242188, 212.517333984375 * ᐃ, 177.99996948242188 * ᐃ, ᐃ * 213.517333984375);
		Ⲇ.bezierCurveTo(ᐃ * 159.99996948242188, 234.517333984375 * ᐃ, ᐃ * 141.99996948242188, ᐃ * 234.517333984375, ᐃ * 116.99996948242188, ᐃ * 222.517333984375);
		Ⲇ.bezierCurveTo(ᐃ * 72.99996948242188, ᐃ * 226.517333984375, ᐃ * 66.99996948242188, 207.517333984375 * ᐃ, 65.99996948242188 * ᐃ, ᐃ * 190.517333984375);
		Ⲇ.bezierCurveTo(35.999969482421875 * ᐃ, ᐃ * 180.517333984375, ᐃ * 30.999969482421875, 162.517333984375 * ᐃ, ᐃ * 39.999969482421875, ᐃ * 135.517333984375);
		Ⲇ.bezierCurveTo(ᐃ * 23.999969482421875, ᐃ * 110.517333984375, ᐃ * 43.999969482421875, 90.517333984375 * ᐃ, 55.999969482421875 * ᐃ, ᐃ * 85.517333984375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⵠⲆ], ᐃᐃ[ⵠᐃᐃⵠ], ᐃ * ⵠᐃᐃΔⲆ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 123.99996948242188, 116.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(115.99996948242188 * ᐃ, 99.18402099609375 * ᐃ, 109.99996948242188 * ᐃ, ᐃ * 74.18402099609375, 109.99996948242188 * ᐃ, 63.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 115.99996948242188, ᐃ * 69.18402099609375, ᐃ * 125.99996948242188, 87.18402099609375 * ᐃ, 137.99996948242188 * ᐃ, ᐃ * 112.18402099609375);
		Ⲇ.bezierCurveTo(142.99996948242188 * ᐃ, ᐃ * 84.18402099609375, 143.99996948242188 * ᐃ, 76.18402099609375 * ᐃ, ᐃ * 153.99996948242188, ᐃ * 62.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 155.99996948242188, ᐃ * 79.18402099609375, ᐃ * 149.99996948242188, 110.18402099609375 * ᐃ, 151.99996948242188 * ᐃ, ᐃ * 117.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 162.99996948242188, ᐃ * 104.18402099609375, 180.99996948242188 * ᐃ, ᐃ * 91.18402099609375, ᐃ * 191.99996948242188, 91.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(185.99996948242188 * ᐃ, ᐃ * 102.18402099609375, 180.99996948242188 * ᐃ, 106.18402099609375 * ᐃ, ᐃ * 160.99996948242188, ᐃ * 124.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 190.99996948242188, 121.18402099609375 * ᐃ, ᐃ * 199.99996948242188, 120.18402099609375 * ᐃ, ᐃ * 207.99996948242188, 123.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(199.99996948242188 * ᐃ, 129.18402099609375 * ᐃ, 181.99996948242188 * ᐃ, 132.18402099609375 * ᐃ, ᐃ * 160.99996948242188, ᐃ * 135.18402099609375);
		Ⲇ.bezierCurveTo(179.99996948242188 * ᐃ, ᐃ * 142.18402099609375, 193.99996948242188 * ᐃ, 151.18402099609375 * ᐃ, 196.99996948242188 * ᐃ, ᐃ * 156.18402099609375);
		Ⲇ.bezierCurveTo(185.99996948242188 * ᐃ, 156.18402099609375 * ᐃ, 163.99996948242188 * ᐃ, 149.18402099609375 * ᐃ, ᐃ * 152.99996948242188, 147.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 157.99996948242188, ᐃ * 155.18402099609375, ᐃ * 165.99996948242188, ᐃ * 176.18402099609375, 169.99996948242188 * ᐃ, ᐃ * 195.18402099609375);
		Ⲇ.bezierCurveTo(162.99996948242188 * ᐃ, ᐃ * 190.18402099609375, ᐃ * 147.99996948242188, ᐃ * 167.18402099609375, ᐃ * 139.99996948242188, 153.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 137.99996948242188, 167.18402099609375 * ᐃ, 126.99996948242188 * ᐃ, ᐃ * 194.18402099609375, ᐃ * 119.99996948242188, ᐃ * 204.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 117.99996948242188, ᐃ * 186.18402099609375, ᐃ * 123.99996948242188, ᐃ * 165.18402099609375, ᐃ * 126.99996948242188, ᐃ * 149.18402099609375);
		Ⲇ.bezierCurveTo(110.99996948242188 * ᐃ, 163.18402099609375 * ᐃ, 103.99996948242188 * ᐃ, 170.18402099609375 * ᐃ, ᐃ * 82.99996948242188, 177.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(90.99996948242188 * ᐃ, ᐃ * 162.18402099609375, ᐃ * 99.99996948242188, 153.18402099609375 * ᐃ, ᐃ * 117.99996948242188, ᐃ * 140.18402099609375);
		Ⲇ.bezierCurveTo(97.99996948242188 * ᐃ, 140.18402099609375 * ᐃ, 83.99996948242188 * ᐃ, ᐃ * 139.18402099609375, 65.99996948242188 * ᐃ, ᐃ * 132.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 77.99996948242188, ᐃ * 127.18402099609375, 95.99996948242188 * ᐃ, 127.18402099609375 * ᐃ, ᐃ * 115.99996948242188, ᐃ * 127.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 91.99996948242188, ᐃ * 113.18402099609375, ᐃ * 84.99996948242188, 107.18402099609375 * ᐃ, 76.99996948242188 * ᐃ, ᐃ * 96.18402099609375);
		Ⲇ.bezierCurveTo(ᐃ * 94.99996948242188, ᐃ * 99.18402099609375, 109.99996948242188 * ᐃ, ᐃ * 109.18402099609375, 123.99996948242188 * ᐃ, 116.18402099609375 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(131.99996948242188 * ᐃ, 119.18402099609375 * ᐃ);
		Ⲇ.bezierCurveTo(141.99996948242188 * ᐃ, 119.18402099609375 * ᐃ, 145.99996948242188 * ᐃ, ᐃ * 116.18402099609375, ᐃ * 147.99996948242188, ᐃ * 109.18402099609375);
		Ⲇ.bezierCurveTo(151.99996948242188 * ᐃ, ᐃ * 107.18402099609375, 159.99996948242188 * ᐃ, 107.18402099609375 * ᐃ, ᐃ * 156.99996948242188, ᐃ * 123.18402099609375);
		Ⲇ.bezierCurveTo(155.99996948242188 * ᐃ, 140.18402099609375 * ᐃ, 142.99996948242188 * ᐃ, ᐃ * 149.18402099609375, 132.99996948242188 * ᐃ, ᐃ * 147.18402099609375);
		Ⲇ.bezierCurveTo(119.99996948242188 * ᐃ, 144.18402099609375 * ᐃ, ᐃ * 113.99996948242188, 122.18402099609375 * ᐃ, 131.99996948242188 * ᐃ, ᐃ * 119.18402099609375);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ᐃΔⲆΔ], ᐃᐃ[5], 6 * ᐃ);
		return ΔΔ
	}

	function ᐃᐃᐃᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = 80 * ᐃ;
		ΔΔ.height = 160 * ᐃ;
		Ⲇ.globalAlpha = ⲆⲆⲆⵠ ? .5 : 1;
		Ⲇ.translate(ᐃ * 5, ᐃ * ΔⲆⲆΔ);
		Ⲇ.save();
		ᐃΔⵠ(Ⲇ, ᐃ * 33, ᐃ * 53, ᐃ * ⲆᐃΔⵠⵠ, ᐃ * 98, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[0]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(-150 * ᐃ, ᐃ * -ⲆⲆΔⵠΔᐃΔ);
		Ⲇ.moveTo(167.5 * ᐃ, 171.0625 * ᐃ);
		Ⲇ.bezierCurveTo(188 * ᐃ, 171.0625 * ᐃ, ᐃ * 188, 171.0625 * ᐃ, 208.5 * ᐃ, 171.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 208.5, 156.0625 * ᐃ, 208.5 * ᐃ, 156.0625 * ᐃ, 208.5 * ᐃ, 141.0625 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 203.5, 113.0625 * ᐃ, ᐃ * 179.5, 96.0625 * ᐃ, 167.5 * ᐃ, 141.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠⲆⲆᐃ]);
		Ⲇ.restore();
		Ⲇ.globalAlpha = ΔᐃⵠΔ;
		Ⲇ.translate(-5 * ᐃ, ᐃ * -5);
		Ⲇ.save();
		ᐃΔⵠ(Ⲇ, ᐃ * 33, ᐃ * 53, ᐃ * 10, ᐃ * 98, ᐃ * 10);
		Δⵠ(Ⲇ, ᐃᐃ[ᐃⲆⵠΔ], ᐃᐃ[2], ᐃ * 4);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(-150 * ᐃ, -100 * ᐃ);
		Ⲇ.moveTo(ᐃ * 167.5, 171.0625 * ᐃ);
		Ⲇ.bezierCurveTo(188 * ᐃ, ᐃ * 171.0625, ᐃ * 188, ᐃ * 171.0625, 208.5 * ᐃ, 171.0625 * ᐃ);
		Ⲇ.bezierCurveTo(208.5 * ᐃ, ᐃ * 156.0625, ᐃ * 208.5, 156.0625 * ᐃ, 208.5 * ᐃ, ᐃ * 141.0625);
		Ⲇ.bezierCurveTo(203.5 * ᐃ, ᐃ * 113.0625, ᐃ * 179.5, 96.0625 * ᐃ, ᐃ * 167.5, 141.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3], ᐃᐃ[4], 4 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.translate(ᐃ * 0, 1 * ᐃ);
		Ⲇ.moveTo(ᐃ * 180.5, ᐃ * 169.0625);
		Ⲇ.bezierCurveTo(180.5 * ᐃ, ᐃ * 157.5625, ᐃ * 180.5, ᐃ * 157.5625, ᐃ * 180.5, ᐃ * 146.0625);
		Ⲇ.bezierCurveTo(ᐃ * 181.5, 134.0625 * ᐃ, 193.5 * ᐃ, 129.0625 * ᐃ, ᐃ * 196.5, ᐃ * 146.0625);
		Ⲇ.bezierCurveTo(196.5 * ᐃ, 157.5625 * ᐃ, 196.5 * ᐃ, ᐃ * 157.5625, 196.5 * ᐃ, 169.0625 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[ⵠΔⲆⲆΔ]);
		Ⲇ.restore();
		return ΔΔ
	}

	function ⵠΔᐃΔΔᐃⵠ(ᐃ, ⲆⲆⲆⵠ, ᐃᐃ) {
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		ΔΔ.width = ᐃ * 465;
		ΔΔ.height = 405 * ᐃ;
		Ⲇ.globalAlpha = ⲆΔⵠⲆ;
		Ⲇ.translate(ᐃ * 6, ΔⵠⲆΔ * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(39.000030517578125 * ᐃ, ᐃ * 162.03977966308594);
		Ⲇ.bezierCurveTo(125.00003051757812 * ᐃ, 84.03977966308594 * ᐃ, 108.50003051757812 * ᐃ, 115.03977966308594 * ᐃ, ᐃ * 178.00003051757812, 68.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(299.0000305175781 * ᐃ, ᐃ * 146.53977966308594, 299.0000305175781 * ᐃ, ᐃ * 146.53977966308594, 420.0000305175781 * ᐃ, 225.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(400.0000305175781 * ᐃ, 288.53977966308594 * ᐃ, ᐃ * 400.0000305175781, 288.53977966308594 * ᐃ, 380.0000305175781 * ᐃ, 352.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 216.50003051757812, 345.53977966308594 * ᐃ, ᐃ * 216.50003051757812, 345.53977966308594 * ᐃ, ᐃ * 53.000030517578125, 339.03977966308594 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[3]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 23.000030517578125, ᐃ * 306.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 5.000030517578125, 275.94886779785156 * ᐃ, 6.000030517578125 * ᐃ, 201.94886779785156 * ᐃ, ᐃ * 14.000030517578125, 150.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 40.000030517578125, 34.94886779785156 * ᐃ, 157.00003051757812 * ᐃ, ᐃ * 14.948867797851562, ᐃ * 199.00003051757812, 11.948867797851562 * ᐃ);
		Ⲇ.bezierCurveTo(331.0000305175781 * ᐃ, .9488677978515625 * ᐃ, ᐃ * 409.0000305175781, 61.94886779785156 * ᐃ, ᐃ * 428.0000305175781, ᐃ * 133.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 445.0000305175781, 207.94886779785156 * ᐃ, 439.0000305175781 * ᐃ, ᐃ * 274.94886779785156, ᐃ * 426.0000305175781, ᐃ * 342.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 355.0000305175781, ᐃ * 207.94886779785156, 345.0000305175781 * ᐃ, 208.94886779785156 * ᐃ, 333.0000305175781 * ᐃ, 202.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 262.0000305175781, ᐃ * 143.94886779785156, ᐃ * 236.00003051757812, 148.94886779785156 * ᐃ, 189.00003051757812 * ᐃ, 162.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(82.00003051757812 * ᐃ, 190.94886779785156 * ᐃ, ᐃ * 78.00003051757812, ᐃ * 235.94886779785156, 62.000030517578125 * ᐃ, 279.94886779785156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ΔΔᐃᐃ], 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(17.000030517578125 * ᐃ, ᐃ * 149.94886779785156);
		Ⲇ.bezierCurveTo(76.00003051757812 * ᐃ, 67.94886779785156 * ᐃ, 177.00003051757812 * ᐃ, 40.94886779785156 * ᐃ, 232.00003051757812 * ᐃ, ᐃ * 45.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 316.0000305175781, 46.94886779785156 * ᐃ, ᐃ * 359.0000305175781, 74.94886779785156 * ᐃ, ᐃ * 428.0000305175781, ᐃ * 145.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 414.0000305175781, ᐃ * 73.94886779785156, 386.0000305175781 * ᐃ, ᐃ * 68.94886779785156, 359.0000305175781 * ᐃ, ᐃ * 43.94886779785156);
		Ⲇ.bezierCurveTo(295.0000305175781 * ᐃ, 5.9488677978515625 * ᐃ, ᐃ * 239.00003051757812, ᐃ * 10.948867797851562, 207.00003051757812 * ᐃ, 10.948867797851562 * ᐃ);
		Ⲇ.bezierCurveTo(121.00003051757812 * ᐃ, 20.948867797851562 * ᐃ, 104.00003051757812 * ᐃ, 34.94886779785156 * ᐃ, ᐃ * 45.000030517578125, ᐃ * 84.94886779785156);
		Ⲇ.bezierCurveTo(14.000030517578125 * ᐃ, ᐃ * 128.94886779785156, ᐃ * 18.000030517578125, ᐃ * 142.94886779785156, ᐃ * 16.000030517578125, 151.94886779785156 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2]);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(23.000030517578125 * ᐃ, 306.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 5.000030517578125, ᐃ * 275.94886779785156, 6.000030517578125 * ᐃ, 201.94886779785156 * ᐃ, 14.000030517578125 * ᐃ, ᐃ * 150.94886779785156);
		Ⲇ.bezierCurveTo(ᐃ * 40.000030517578125, ᐃ * 34.94886779785156, ᐃ * 157.00003051757812, ᐃ * 14.948867797851562, ᐃ * 199.00003051757812, ᐃ * 11.948867797851562);
		Ⲇ.bezierCurveTo(ᐃ * 331.0000305175781, ᐃ * .9488677978515625, 409.0000305175781 * ᐃ, 61.94886779785156 * ᐃ, 428.0000305175781 * ᐃ, 133.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 445.0000305175781, 207.94886779785156 * ᐃ, ᐃ * 439.0000305175781, ᐃ * 274.94886779785156, ᐃ * 426.0000305175781, 342.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(355.0000305175781 * ᐃ, 207.94886779785156 * ᐃ, ᐃ * 345.0000305175781, ᐃ * 208.94886779785156, 333.0000305175781 * ᐃ, 202.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(262.0000305175781 * ᐃ, 143.94886779785156 * ᐃ, ᐃ * 236.00003051757812, 148.94886779785156 * ᐃ, ᐃ * 189.00003051757812, 162.94886779785156 * ᐃ);
		Ⲇ.bezierCurveTo(82.00003051757812 * ᐃ, 190.94886779785156 * ᐃ, ᐃ * 78.00003051757812, ᐃ * 235.94886779785156, ᐃ * 62.000030517578125, ᐃ * 279.94886779785156);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ΔΔⵠⲆⵠ, ᐃᐃ[1], ᐃ * 16);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 60.000030517578125, ᐃ * 288.03977966308594);
		Ⲇ.bezierCurveTo(183.00003051757812 * ᐃ, ᐃ * 320.03977966308594, ᐃ * 342.0000305175781, ᐃ * 306.03977966308594, ᐃ * 399.0000305175781, ᐃ * 286.03977966308594);
		Ⲇ.bezierCurveTo(420.0000305175781 * ᐃ, 345.03977966308594 * ᐃ, ᐃ * 410.0000305175781, 335.03977966308594 * ᐃ, ᐃ * 415.0000305175781, 362.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(351.0000305175781 * ᐃ, 384.03977966308594 * ᐃ, ᐃ * 299.0000305175781, ᐃ * 389.03977966308594, 215.00003051757812 * ᐃ, ᐃ * 391.03977966308594);
		Ⲇ.bezierCurveTo(ᐃ * 128.00003051757812, ᐃ * 388.03977966308594, ᐃ * 69.00003051757812, ᐃ * 373.03977966308594, 39.000030517578125 * ᐃ, ᐃ * 359.03977966308594);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[Ⲇᐃⵠᐃ], ᐃᐃ[1], 13 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(47.000030517578125 * ᐃ, ᐃ * 327.03977966308594);
		Ⲇ.bezierCurveTo(203.00003051757812 * ᐃ, 377.03977966308594 * ᐃ, 331.0000305175781 * ᐃ, ᐃ * 349.03977966308594, ᐃ * 410.0000305175781, ᐃ * 330.03977966308594);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠᐃΔᐃ], 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(9.000030517578125 * ᐃ, 339.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 2.000030517578125, 280.1306915283203 * ᐃ, 30.000030517578125 * ᐃ, 219.1306915283203 * ᐃ, ᐃ * 85.00003051757812, ᐃ * 167.1306915283203);
		Ⲇ.bezierCurveTo(ᐃ * 174.00003051757812, 82.13069152832031 * ᐃ, ᐃ * 241.00003051757812, 101.13069152832031 * ᐃ, 284.0000305175781 * ᐃ, ᐃ * 115.13069152832031);
		Ⲇ.bezierCurveTo(ᐃ * 333.0000305175781, 134.1306915283203 * ᐃ, ᐃ * 376.0000305175781, 177.1306915283203 * ᐃ, 410.0000305175781 * ᐃ, ᐃ * 247.1306915283203);
		Ⲇ.bezierCurveTo(439.0000305175781 * ᐃ, 300.1306915283203 * ᐃ, 442.0000305175781 * ᐃ, ᐃ * 346.1306915283203, ᐃ * 430.0000305175781, 363.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 418.0000305175781, ᐃ * 366.1306915283203, ᐃ * 395.0000305175781, 295.1306915283203 * ᐃ, 355.0000305175781 * ᐃ, 223.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 299.0000305175781, 156.1306915283203 * ᐃ, 262.0000305175781 * ᐃ, ᐃ * 155.1306915283203, ᐃ * 215.00003051757812, 159.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 133.00003051757812, ᐃ * 171.1306915283203, ᐃ * 120.00003051757812, 193.1306915283203 * ᐃ, 96.00003051757812 * ᐃ, 221.1306915283203 * ᐃ);
		Ⲇ.bezierCurveTo(49.000030517578125 * ᐃ, 262.1306915283203 * ᐃ, ᐃ * 47.000030517578125, 306.1306915283203 * ᐃ, 38.000030517578125 * ᐃ, ᐃ * 336.1306915283203);
		Ⲇ.bezierCurveTo(ᐃ * 30.000030517578125, 349.1306915283203 * ᐃ, ᐃ * 30.000030517578125, ᐃ * 349.1306915283203, 22.000030517578125 * ᐃ, ᐃ * 362.1306915283203);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[2], ᐃᐃ[1], 20 * ᐃ);
		Ⲇ.beginPath();
		Ⲇ.lineCap = ⵠ[244];
		Ⲇ.lineJoin = ⵠ[244];
		Ⲇ.moveTo(ᐃ * 228.00003051757812, 128.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 315.0000305175781, ᐃ * 131.03977966308594, ᐃ * 349.0000305175781, ᐃ * 178.03977966308594, ᐃ * 386.0000305175781, ᐃ * 234.03977966308594);
		Ⲇ.bezierCurveTo(444.0000305175781 * ᐃ, ᐃ * 329.03977966308594, ᐃ * 446.0000305175781, 354.03977966308594 * ᐃ, ᐃ * 427.0000305175781, ᐃ * 373.03977966308594);
		Ⲇ.bezierCurveTo(ᐃ * 389.0000305175781, 389.03977966308594 * ᐃ, ᐃ * 399.0000305175781, 329.03977966308594 * ᐃ, ᐃ * 361.0000305175781, ᐃ * 277.03977966308594);
		Ⲇ.bezierCurveTo(306.0000305175781 * ᐃ, ᐃ * 191.03977966308594, ᐃ * 266.0000305175781, ᐃ * 183.03977966308594, ᐃ * 220.00003051757812, ᐃ * 181.03977966308594);
		Ⲇ.bezierCurveTo(138.00003051757812 * ᐃ, 184.03977966308594 * ᐃ, ᐃ * 123.00003051757812, 212.03977966308594 * ᐃ, ᐃ * 89.00003051757812, ᐃ * 271.03977966308594);
		Ⲇ.bezierCurveTo(ᐃ * 52.000030517578125, 349.03977966308594 * ᐃ, ᐃ * 68.00003051757812, ᐃ * 364.03977966308594, ᐃ * 33.000030517578125, 369.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(6.000030517578125 * ᐃ, 366.03977966308594 * ᐃ, 5.000030517578125 * ᐃ, ᐃ * 341.03977966308594, 26.000030517578125 * ᐃ, 288.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(ᐃ * 60.000030517578125, 207.03977966308594 * ᐃ, ᐃ * 100.00003051757812, 180.03977966308594 * ᐃ, ᐃ * 113.00003051757812, 170.03977966308594 * ᐃ);
		Ⲇ.bezierCurveTo(159.00003051757812 * ᐃ, 132.03977966308594 * ᐃ, 196.00003051757812 * ᐃ, ᐃ * 133.03977966308594, 226.00003051757812 * ᐃ, 129.03977966308594 * ᐃ);
		Ⲇ.closePath();
		Δⵠ(Ⲇ, ᐃᐃ[0], ᐃᐃ[ⵠⲆⲆ], 20 * ᐃ);
		return ΔΔ
	}
	const ΔΔᐃⵠ = ⵠⵠⲆ;

	function ⲆᐃΔⵠᐃΔⲆ(ⵠᐃᐃᐃⲆⲆⲆ, ΔᐃⲆⵠᐃᐃᐃ, ⵠⲆᐃⲆᐃΔΔ, ᐃᐃΔᐃⲆᐃΔ) {
		ⲆⲆⲆⲆⲆⵠⵠ(ᐃΔΔΔⲆ, ⵠᐃᐃᐃⲆⲆⲆ, ΔᐃⲆⵠᐃᐃᐃ, ⵠⲆᐃⲆᐃΔΔ, ᐃᐃΔᐃⲆᐃΔ);
		const ΔⲆᐃⵠᐃⲆⵠ = ΔⵠⲆΔⲆΔⵠ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[3]);
		const ⵠΔᐃΔΔᐃᐃ = ⲆⲆⲆⲆⵠΔᐃ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ΔΔᐃᐃ], ⲆᐃΔⲆ[ⵠᐃᐃⵠ]);
		const ⲆΔⲆⵠᐃΔⲆⵠΔ = (24 << ((ΔⲆᐃⵠᐃⲆⵠ ^ ⵠΔᐃΔΔᐃᐃ) >> ᐃΔⵠⵠ & 255)) + (16 << ((ΔⲆᐃⵠᐃⲆⵠ ^ ⵠΔᐃΔΔᐃᐃ) >> 8 & 255)) + (0 << ((ΔⲆᐃⵠᐃⲆⵠ ^ ⵠΔᐃΔΔᐃᐃ) >> 16 & 255)) + (8 << ((ΔⲆᐃⵠᐃⲆⵠ ^ ⵠΔᐃΔΔᐃᐃ) >> 24 & 255));
		return ⲆΔⲆⵠᐃΔⲆⵠΔ
	}

	function ⵠⲆⵠΔⲆⲆⵠ(ΔΔΔΔΔⲆⲆ, ⲆΔⵠⵠΔᐃᐃ, ⲆᐃᐃⵠᐃᐃⵠΔᐃ, ⵠⵠⲆⲆᐃᐃⲆ, ⲆΔⵠᐃΔⵠⲆⲆⵠ, ⲆⵠⲆΔΔⵠΔ) {
		const ⵠⵠⵠⲆⵠΔⲆ = (ᐃΔⵠⵠ << (ΔΔΔΔΔⲆⲆ >> 16 & ᐃⲆΔⲆⵠⵠⲆ)) + (16 << (ΔΔΔΔΔⲆⲆ >> 8 & 255)) + (24 << (ΔΔΔΔΔⲆⲆ >> 0 & ΔⲆᐃᐃⲆΔⵠ)) + (8 << (ΔΔΔΔΔⲆⲆ >> 24 & 255));
		const ΔΔⵠᐃᐃⲆΔ = (754 | ⲆΔⵠⵠΔᐃᐃ) & ~(754 & ⲆΔⵠⵠΔᐃᐃ);
		const ᐃΔΔΔΔΔΔ = ((ⲆᐃᐃⵠᐃᐃⵠΔᐃ + 30744) * 1103515245 + 12345) % 2147483648;
		const ᐃⵠⵠᐃⵠᐃⲆⵠⲆ = (ⵠⵠⲆⲆᐃᐃⲆ | 55326) & ~(55326 & ⵠⵠⲆⲆᐃᐃⲆ);
		const ᐃⲆⲆⲆᐃⲆⵠᐃⲆ = (1103515245 * (ⲆΔⵠᐃΔⵠⲆⲆⵠ + 63102) + 12345) % 2147483648;
		const ᐃᐃᐃⵠⲆᐃⲆⵠⵠ = ~(54292 & ⲆⵠⲆΔΔⵠΔ) & (54292 | ⲆⵠⲆΔΔⵠΔ);
		const ⵠⵠᐃΔΔᐃⲆ = ⲆⲆⲆᐃⵠⲆΔ(ⵠⵠⵠⲆⵠΔⲆ, ΔΔⵠᐃᐃⲆΔ, ᐃΔΔΔΔΔΔ, ᐃⵠⵠᐃⵠᐃⲆⵠⲆ);
		const ᐃΔΔᐃⵠⲆΔⲆᐃ = ΔᐃΔΔⵠⵠⵠ(ᐃⲆⲆⲆᐃⲆⵠᐃⲆ, ᐃᐃᐃⵠⲆᐃⲆⵠⵠ, ⵠⵠⵠⲆⵠΔⲆ, ΔΔⵠᐃᐃⲆΔ, ᐃΔΔΔΔΔΔ);
		const ᐃⵠΔᐃΔᐃⲆⲆⵠ = ~(ⵠⵠᐃΔΔᐃⲆ & 18514) & ⵠⵠᐃΔΔᐃⲆ | ~(ⵠⵠᐃΔΔᐃⲆ & 18514) & 18514;
		return ᐃⵠΔᐃΔᐃⲆⲆⵠ
	}

	function ⵠⵠⲆᐃΔⵠⲆ() {
		var ᐃ = ΔΔⲆΔ;
		var ⵠᐃΔ = ΔⵠⲆΔⲆ.time;
		if (Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ]) {
			Ⲇ.drawImage(Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][ⵠᐃΔ][1], ᐃΔΔᐃ + 480, ⲆⲆΔⲆ + 190);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][ⵠᐃΔ][2], ᐃΔΔᐃ + 180, ⲆⲆΔⲆ - 430);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][ⵠᐃΔ][ΔᐃⵠΔ], ᐃΔΔᐃ - 855, ⲆⲆΔⲆ + ⵠΔᐃᐃⲆ);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][ⵠᐃΔ][ΔⲆⵠ], ᐃΔΔᐃ - 550, ⲆⲆΔⲆ - 300);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][ⵠᐃΔ][ⵠᐃⲆᐃ], ᐃΔΔᐃ - 1020, ⲆⲆΔⲆ - 520)
		}
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ] && (Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][1], ᐃΔΔᐃ - 80, ⲆⲆΔⲆ - 640), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ⲆᐃⲆⲆ], ᐃΔΔᐃ + 80, ⲆⲆΔⲆ + 490), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][2], ᐃΔΔᐃ - 180, ⲆⲆΔⲆ - 700), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ⲆΔᐃ], ᐃΔΔᐃ + 550, ⲆⲆΔⲆ + 100), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ΔΔⲆΔ], ᐃΔΔᐃ + 450, ⲆⲆΔⲆ + 300), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ΔᐃᐃⲆ], ᐃΔΔᐃ + 780, ⲆⲆΔⲆ + 300), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][2], ᐃΔΔᐃ + 980, ⲆⲆΔⲆ + 200), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ⵠΔⵠᐃ], ᐃΔΔᐃ + 680, ⲆⲆΔⲆ + 600), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ⵠΔⵠᐃ], ᐃΔΔᐃ - 380, ⲆⲆΔⲆ + ⵠΔⵠⲆⲆ), Ⲇ.drawImage(Ⲇᐃ[Δ.ΔⵠΔΔᐃ][ⵠᐃΔ][ⲆᐃⲆᐃ], ᐃΔΔᐃ + 280, ⲆⲆΔⲆ + 250));
		if (Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ]) {
			Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ][ⵠᐃΔ][ⲆΔᐃ], ᐃΔΔᐃ - 590, ⲆⲆΔⲆ);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ][ⵠᐃΔ][0], ᐃΔΔᐃ + 120, ⲆⲆΔⲆ - 390);
			Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ][ⵠᐃΔ][0], ᐃΔΔᐃ - 270, ⲆⲆΔⲆ + 340)
		}
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ] && (Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ᐃΔⲆΔ], ᐃΔΔᐃ - 700, ⲆⲆΔⲆ - 600), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][2], ᐃΔΔᐃ - 970, ⲆⲆΔⲆ - 250), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ⲆΔᐃΔ], ᐃΔΔᐃ - 720, ⲆⲆΔⲆ - 200), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ⵠⵠⲆᐃ], ᐃΔΔᐃ - 1020, ⲆⲆΔⲆ + 340), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ᐃⵠΔ], ᐃΔΔᐃ - 1120, ⲆⲆΔⲆ - 0), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][1], ᐃΔΔᐃ - 650, ⲆⲆΔⲆ - 330), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ΔⲆΔⲆ], ᐃΔΔᐃ - 495, ⲆⲆΔⲆ - 90), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][ᐃᐃⵠᐃ], ᐃΔΔᐃ - 520, ⲆⲆΔⲆ + 340), Ⲇ.drawImage(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][ⵠᐃΔ][2], ᐃΔΔᐃ + 830, ⲆⲆΔⲆ - 520));
		if (Ⲇᐃ[Δ.ΔΔⵠᐃᐃ]) {}
		if (ⲆΔⲆ && ⲆΔΔ) {
			var ᐃᐃΔ = ⲆΔⲆ.ⵠΔΔ.x;
			var ᐃⲆᐃ = ⲆΔⲆ.ⵠΔΔ.y;
			ⲆΔⲆ.ⵠΔΔ.x = ᐃΔΔᐃ;
			ⲆΔⲆ.ⵠΔΔ.y = ⲆⲆΔⲆ;
			var ⲆⵠⲆᐃᐃⵠΔⵠᐃ = ⲆΔΔ.time;
			ⲆΔΔ.time = ΔⵠⲆΔⲆ.time;
			var ⲆᐃΔΔᐃ = ΔⵠⲆΔⲆ.items;
			ⲆᐃΔΔᐃ[ⲆᐃⲆᐃ].x = 400;
			ⲆᐃΔΔᐃ[ⵠᐃᐃⵠ].y = 100;
			ⲆᐃΔΔᐃ[2].ⲆⵠᐃⲆ(Δ.ΔᐃΔⵠΔ);
			var ΔⵠᐃⲆ = ⲆᐃΔΔᐃ[1];
			ΔⵠᐃⲆ.x = -500;
			ΔⵠᐃⲆ.y = 100;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ΔⲆᐃⲆ].x = ΔⵠᐃⲆ.x - 20.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ⵠⲆⲆᐃ].y = ΔⵠᐃⲆ.y - 22.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[1].x = ΔⵠᐃⲆ.x - 35.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[1].y = ΔⵠᐃⲆ.y + 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ⵠⲆⵠᐃ].x = ΔⵠᐃⲆ.x + 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[2].y = ΔⵠᐃⲆ.y - 30;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ⵠⲆⲆΔ].x = ΔⵠᐃⲆ.x + 22.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃⵠⲆⲆ].y = ΔⵠᐃⲆ.y;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃΔⲆΔ].x = ΔⵠᐃⲆ.x - 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[4].y = ΔⵠᐃⲆ.y + 14.5;
			for (var ᐃⲆ = ΔⵠⲆⲆ; ΔⵠᐃⲆ.info > ᐃⲆ; ᐃⲆ++) {
				ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃⲆ].ⲆⵠᐃⲆ(Δ.ᐃΔᐃⲆⲆ)
			}
			var ΔⵠᐃⲆ = ⲆᐃΔΔᐃ[ⵠⵠⲆⵠ];
			ΔⵠᐃⲆ.x = 210;
			ΔⵠᐃⲆ.y = -290;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ⵠᐃⲆᐃ].x = ΔⵠᐃⲆ.x - 20.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[Ⲇᐃⵠᐃ].y = ΔⵠᐃⲆ.y - 22.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ⵠⲆⲆ].x = ΔⵠᐃⲆ.x - 35.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[1].y = ΔⵠᐃⲆ.y + 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃⲆⵠᐃ].x = ΔⵠᐃⲆ.x + 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[2].y = ΔⵠᐃⲆ.y - 30;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[3].x = ΔⵠᐃⲆ.x + 22.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[3].y = ΔⵠᐃⲆ.y;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃⵠᐃᐃ].x = ΔⵠᐃⲆ.x - 7.5;
			ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃΔᐃΔ].y = ΔⵠᐃⲆ.y + 14.5;
			for (var ᐃⲆ = 0; ΔⵠᐃⲆ.info > ᐃⲆ; ᐃⲆ++) {
				ΔⵠᐃⲆ.ΔⵠᐃⲆ[ᐃⲆ].ⲆⵠᐃⲆ(Δ.ᐃΔᐃⲆⲆ)
			}
			ⲆᐃΔΔᐃ[0].x = 450;
			ⲆᐃΔΔᐃ[ⵠⲆⲆᐃ].y = -100;
			ⲆᐃΔΔᐃ[ⵠⵠᐃⵠ].ᐃᐃᐃᐃᐃ(Δ.ᐃᐃᐃΔⲆᐃⵠ);
			ⲆᐃΔΔᐃ[0].ⵠᐃΔⵠΔ();
			ⲆΔⲆ.ⵠΔΔ.x = ᐃᐃΔ;
			ⲆΔⲆ.ⵠΔΔ.y = ᐃⲆᐃ;
			ⲆΔΔ.time = ⲆⵠⲆᐃᐃⵠΔⵠᐃ
		}
	}

	function ΔⵠⵠⵠⲆⲆⵠᐃⲆ(ᐃᐃᐃⲆⲆᐃᐃ, ⲆᐃΔᐃⵠΔⲆ, ΔΔᐃⲆΔᐃΔ, ⵠΔⵠᐃᐃⲆᐃ) {
		const ᐃᐃΔⵠⵠᐃⲆ = ᐃᐃᐃⲆⲆᐃᐃ ^ 64391;
		const ΔᐃᐃⲆⲆΔⲆ = (27048 | ⲆᐃΔᐃⵠΔⲆ) & ~(ⲆᐃΔᐃⵠΔⲆ & 27048);
		const ⵠⲆᐃⵠᐃᐃⵠⲆⲆ = ~(ΔΔᐃⲆΔᐃΔ & 42783) & ΔΔᐃⲆΔᐃΔ | ~(ΔΔᐃⲆΔᐃΔ & 42783) & 42783;
		const ΔⲆΔⵠᐃⵠᐃᐃⲆ = ~(23684 & ⵠΔⵠᐃᐃⲆᐃ) & ⵠΔⵠᐃᐃⲆᐃ | ~(ⵠΔⵠᐃᐃⲆᐃ & 23684) & 23684;
		const ⵠⵠᐃΔⵠᐃⵠ = ⵠΔΔⲆⵠᐃᐃⵠΔ(ᐃᐃΔⵠⵠᐃⲆ, ΔᐃᐃⲆⲆΔⲆ);
		const ΔⲆⲆⵠⵠΔΔ = ⲆⵠⲆΔⵠᐃᐃ(ⵠⲆᐃⵠᐃᐃⵠⲆⲆ, ΔⲆΔⵠᐃⵠᐃᐃⲆ, ᐃᐃΔⵠⵠᐃⲆ, ΔᐃᐃⲆⲆΔⲆ);
		const ⲆⲆⲆⵠⵠΔΔⵠⵠ = (16 << ((ⵠⵠᐃΔⵠᐃⵠ ^ ΔⲆⲆⵠⵠΔΔ) >> 16 & 255)) + (8 << ((ⵠⵠᐃΔⵠᐃⵠ ^ ΔⲆⲆⵠⵠΔΔ) >> 24 & 255)) + (0 << ((ⵠⵠᐃΔⵠᐃⵠ ^ ΔⲆⲆⵠⵠΔΔ) >> 8 & 255)) + (24 << ((ⵠⵠᐃΔⵠᐃⵠ ^ ΔⲆⲆⵠⵠΔΔ) >> ⲆΔᐃ & 255));
		return ⲆⲆⲆⵠⵠΔΔⵠⵠ
	}

	function ⵠΔⲆΔⲆⲆⵠ(ⵠᐃΔᐃᐃᐃΔ, ⵠⵠΔᐃⵠⲆⲆ, ΔᐃⵠⲆᐃⲆᐃ, ⵠᐃⵠΔᐃΔΔ) {
		const ΔΔΔᐃⲆⵠⵠ = (0 << (ⵠᐃΔᐃᐃᐃΔ >> 8 & 255)) + (8 << (ⵠᐃΔᐃᐃᐃΔ >> 24 & 255)) + (16 << (ⵠᐃΔᐃᐃᐃΔ >> 0 & 255)) + (24 << (ⵠᐃΔᐃᐃᐃΔ >> 16 & 255));
		const ΔⵠΔⵠᐃⵠΔ = ~(28082 & ⵠⵠΔᐃⵠⲆⲆ) & 28082 | ~(28082 & ⵠⵠΔᐃⵠⲆⲆ) & ⵠⵠΔᐃⵠⲆⲆ;
		const ⵠⲆⲆΔⲆⲆⲆ = (2147483629 * (ΔᐃⵠⲆᐃⲆᐃ + 27774) + 2147483587) % 2147483647;
		const ⲆΔΔⵠᐃΔᐃ = (43413 | ⵠᐃⵠΔᐃΔΔ) & ~(43413 & ⵠᐃⵠΔᐃΔΔ);
		const ΔΔⵠⵠⵠᐃⵠ = ⲆⲆⵠᐃᐃⵠΔ(ΔΔΔᐃⲆⵠⵠ, ΔⵠΔⵠᐃⵠΔ, ⵠⲆⲆΔⲆⲆⲆ, ⲆΔΔⵠᐃΔᐃ, ΔΔΔᐃⲆⵠⵠ);
		const ᐃⲆⵠⵠⵠΔⲆⵠⲆ = Δᐃⵠⵠᐃᐃᐃ(ΔⵠΔⵠᐃⵠΔ, ⵠⲆⲆΔⲆⲆⲆ, ⲆΔΔⵠᐃΔᐃ, ΔΔΔᐃⲆⵠⵠ);
		const ᐃⲆΔΔⲆⲆⵠΔΔ = ~(ΔΔⵠⵠⵠᐃⵠ & 54103) & ΔΔⵠⵠⵠᐃⵠ | ~(ΔΔⵠⵠⵠᐃⵠ & 54103) & 54103;
		return ᐃⲆΔΔⲆⲆⵠΔΔ
	}

	function ⲆⲆⲆⵠⲆⲆΔΔᐃ() {
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[166]).style.backgroundColor = Δ.ⲆⵠⵠΔⲆ[ΔⵠⲆΔⲆ.time];
		ΔⵠⲆΔⲆ.items.push(new ΔⵠⵠⲆⲆΔⲆ(ᐃⲆΔ.ⲆⵠΔⲆΔ, ⵠⲆⲆᐃ, ⵠⲆⲆᐃ, 0, 0, Math.random() * Math.PI * 2, 2, 1));
		ΔⵠⲆΔⲆ.items.push(new ΔⵠⵠⲆⲆΔⲆ(ᐃⲆΔ.ᐃΔᐃⲆⲆ, 0, ΔΔⵠᐃ, ⵠⵠⲆⲆ, ⲆⲆⲆ, 0, ⲆΔᐃ, 5));
		ΔⵠⲆΔⲆ.items.push(new ΔⵠⵠⲆⲆΔⲆ(ᐃⲆΔ.ΔᐃΔⵠΔ, 0, ᐃⵠΔ, 0, 0, Math.PI / 4, 0, 0));
		ΔⵠⲆΔⲆ.items.push(new ΔⵠⵠⲆⲆΔⲆ(ᐃⲆΔ.ᐃΔᐃⲆⲆ, ⲆⵠⲆ, ᐃⵠΔ, ⵠⵠⲆⲆ, ΔⲆᐃⲆ, 0, 0, ᐃⵠⲆⲆΔ))
	}

	function ⲆᐃⵠⲆΔᐃΔⲆⲆ() {
		var ᐃ = ⵠⵠⲆ;
		var ⵠΔⲆᐃⵠΔⵠⲆⵠ = (new Date).getTime();
		ᐃⵠⲆⵠⵠᐃᐃ();
		ⲆᐃᐃⲆⲆΔᐃᐃⵠ();
		Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][Δ.ⲆⵠΔ] = [];
		for (var ᐃⲆ = 0; Δ.ⲆᐃᐃΔⵠΔᐃ > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, Ⲇⵠⵠᐃᐃ + ᐃⲆ, "#59B8CE")));
			Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, ᐃⵠⲆⲆⲆ + ᐃⲆ, "#90DDD9")))
		}
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⵠⵠᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⵠⵠⵠᐃ][Δ.ⲆⵠΔ] = [];
		for (var ᐃⲆ = 0; Δ.ⲆᐃᐃⲆᐃΔⵠ > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ᐃⲆⲆⵠⵠⵠᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, 4 + ᐃⲆ, ⵠ[274])));
			Ⲇᐃ[Δ.ᐃⲆⲆⵠⵠⵠᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, ᐃΔᐃⲆⵠ + ᐃⲆ, ⵠ[274])))
		}
		Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠΔᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠΔᐃ][Δ.ⲆⵠΔ] = [];
		for (var ᐃⲆ = 0; Δ.ⲆᐃᐃⲆᐃΔⵠ > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, ᐃⲆⵠⲆΔ + ᐃⲆ, "#DDCD8A")));
			Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, ᐃⲆᐃᐃΔ + ᐃⲆ, "#155E57")))
		}
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔΔᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔΔᐃ][Δ.ⲆⵠΔ] = [];
		for (var ᐃⲆ = 0; Δ.ⲆⵠΔᐃⵠⵠⵠ > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ⲆᐃᐃⵠΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, ΔⲆΔⲆ + ᐃⲆ, "#353326")));
			Ⲇᐃ[Δ.ⲆᐃᐃⵠΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⲆᐃⲆΔⵠⲆ(ᐃ, 4 + ᐃⲆ, "#1D2526")))
		}
		Ⲇᐃ[Δ.ᐃⵠΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(1.5 * ᐃ, ΔΔⲆⲆⲆ, ["#ee71a9"]));
		Ⲇᐃ[Δ.ᐃⵠΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, ⲆΔⲆΔᐃ, ["#ee71a9"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ] = [Ⲇᐃ[Δ.ᐃⵠΔᐃΔ]];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][1] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][ⲆⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][3] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][4] = [];
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][ΔᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, true, ["#e2d63b"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][1][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, true, ["#e2d63b"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][2][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, ΔⲆΔΔⵠ, ["#309cbd"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][ⵠⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, ᐃⵠᐃⵠⲆ, ["#309cbd"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][3][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, true, ["#cd232d"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][ⵠΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, ⲆⲆᐃⵠⲆ, ["#cd232d"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][4][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(1.5 * ᐃ, ⲆΔᐃⲆⲆ, ["#42b672"]));
		Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][4][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆᐃⵠ(ᐃ * 1.5, Δⵠⵠⵠⵠ, ["#42b672"]));
		var ⵠΔⵠᐃᐃᐃⲆΔΔ = Ⲇᐃⵠ.ΔᐃⲆⲆΔⲆᐃ("cti", ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[329]][ⲆⵠΔᐃᐃᐃΔ[208]]);
		if (ⵠΔⵠᐃᐃᐃⲆΔΔ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("version")[ⲆⵠΔᐃᐃᐃΔ[359]] += "[CTI]";
		else ⵠᐃᐃ = function(ⵠⵠⵠ) {
			ⵠⵠⵠ.loaded = ᐃⲆⵠΔ;
			return ⵠⵠⵠ
		};
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠⵠᐃ] = ⵠᐃᐃ(ᐃⵠΔΔᐃⲆΔΔⵠ());
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(ᐃ * 1.1, false, [ⵠ[165], "#c3d1cb", ⵠ[65]])));
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(ᐃ * .9, ᐃⵠᐃⵠᐃ, [ⵠ[165], "#c3d1cb", ⵠ[65]])));
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(.6 * ᐃ, false, [ⵠ[165], "#c3d1cb", ⵠ[65]])));
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(1.1 * ᐃ, Ⲇᐃⵠⵠᐃ, [ⵠ[409], "#3c8e88", "#40a39b"])));
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(.9 * ᐃ, false, [ⵠ[409], "#3c8e88", "#40a39b"])));
		Ⲇᐃ[Δ.ΔⵠΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⵠⲆ(ᐃ * .6, false, [ⵠ[409], "#3c8e88", "#40a39b"])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(ᐃ * 1.5, ΔᐃΔᐃᐃ, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.3 * ᐃ, ⲆᐃⲆᐃΔ, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.1 * ᐃ, ⲆᐃⲆᐃΔ, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.5 * ᐃ, Ⲇᐃⵠⵠᐃ, [ⵠ[280], "#1b4444", "#16605a"])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.3 * ᐃ, false, [ⵠ[280], "#1b4444", "#16605a"])));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.1 * ᐃ, false, [ⵠ[280], "#1b4444", "#16605a"])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * 1.1, false, [ⵠ[504], ⵠ[535], ⵠ[435]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(.9 * ᐃ, false, [ⵠ[504], ⵠ[535], ⵠ[435]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(.7 * ᐃ, false, [ⵠ[504], ⵠ[535], ⵠ[435]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(1.1 * ᐃ, ΔᐃⲆⵠⲆ, [ⵠ[280], ⵠ[451], "#57bcb5"])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(.9 * ᐃ, ᐃⲆⲆΔΔ, [ⵠ[280], ⵠ[451], "#57bcb5"])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(.7 * ᐃ, false, [ⵠ[280], ⵠ[451], "#57bcb5"])));
		Ⲇᐃ[Δ.ⲆⵠᐃⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⵠᐃΔᐃΔ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆⵠᐃΔⲆΔᐃ;
		Ⲇᐃ[Δ.Ⲇⵠᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.Ⲇⵠᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃΔⲆᐃᐃⵠ(ᐃ * .6, [ⵠ[493]]));
		Ⲇᐃ[Δ.Ⲇⵠᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃΔⲆᐃᐃⵠ(ᐃ * .6, [ⵠ[280]]));
		Ⲇᐃ[Δ.ⵠⵠⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔⲆΔⵠⵠᐃ(ᐃ * .6, [ⵠ[345], ⵠ[413]]));
		Ⲇᐃ[Δ.ⵠⵠⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔⲆΔⵠⵠᐃ(.6 * ᐃ, ["#1b1e30", "#161921"]));
		Ⲇᐃ[Δ.ᐃᐃⲆⵠⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃᐃⲆⵠⲆⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠΔΔⵠⲆΔ(ᐃ * .6, true, [ⵠ[493], "#759e6e", "#55604b", "#7d7252", "#575043"]));
		Ⲇᐃ[Δ.ᐃᐃⲆⵠⲆⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠΔΔⵠⲆΔ(.6 * ᐃ, true, [ⵠ[280], "#11635e", "#02373e", "#0b524d", "#07423f"]));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠᐃⲆᐃᐃⵠᐃ(.6 * ᐃ, ⲆΔᐃⲆⲆ, [ⵠ[493], "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", ⵠ[557]]));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠᐃⲆᐃᐃⵠᐃ(.6 * ᐃ, ᐃⲆⲆΔΔⵠⲆ, [ⵠ[280], "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", ⵠ[557]]));
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆⵠᐃ(ᐃ * .4, [ⵠ[493], "#759e6e", "#55604b"]));
		Ⲇᐃ[Δ.ⲆΔⲆⵠᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆⵠᐃ(ᐃ * .4, [ⵠ[280], "#11635e", "#02373e"]));
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆΔ] = ⵠᐃᐃ(ᐃΔΔᐃⲆⵠΔ(.6 * ᐃ, [ⵠ[296]]));
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⵠᐃᐃ] = ⵠᐃᐃ(ᐃΔΔᐃⲆⵠΔ(.6 * ᐃ, ["#DBE71C"]));
		Ⲇᐃ[Δ.ΔᐃΔⵠᐃᐃΔ] = ⵠᐃᐃ(ᐃΔΔᐃⲆⵠΔ(.6 * ᐃ, ["#00BB00"]));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(1.1 * ᐃ, ["#13402d", "#0f9862", "#0b8750", "#26ab6e"], ΔᐃⲆⵠⲆ, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(1.1 * ᐃ, [ⵠ[246], "#0f9862", "#0b8750", "#26ab6e"], ⵠⵠⵠΔΔ, ΔΔⵠᐃ));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .9, [ⵠ[246], "#0e7d4c", "#258a4d", "#248c4d"], false, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(.9 * ᐃ, [ⵠ[246], ⵠ[463], "#1f7b43", "#1f7b43"], true, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .7, [ⵠ[246], "#124c34", "#0E3D26", "#155136"], ΔᐃⲆⵠⲆ, ᐃⵠΔ));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .7, [ⵠ[246], "#124c34", "#0E3D26", "#155136"], true, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(ᐃ * 1.1, [ⵠ[280], ⵠ[24], ⵠ[194], ⵠ[377]], ΔᐃΔᐃᐃ, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(1.1 * ᐃ, [ⵠ[280], ⵠ[24], ⵠ[194], ⵠ[377]], true, ΔⲆᐃⲆ));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .9, [ⵠ[280], "#0b3534", "#144443", "#174240"], false, 0));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(.9 * ᐃ, [ⵠ[280], "#0b3534", "#144443", "#174240"], true, ᐃⵠΔ));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .7, [ⵠ[280], "#082b1f", "#073328", "#073327", "#16695f"], ⵠⲆⵠΔⵠ, ΔⵠⲆΔ));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ].push(ᐃΔⲆⵠᐃ(ᐃ * .7, [ⵠ[280], "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], ΔᐃⲆⲆᐃ, 0));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * 1.1, [ⵠ[246], ⵠ[70], ⵠ[284], ⵠ[463], "#08562e", ⵠ[129]], false), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][0])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(1.1 * ᐃ, [ⵠ[246], ⵠ[70], ⵠ[284], ⵠ[463], "#08562e", ⵠ[129]], ΔⲆΔΔⵠ), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][ΔᐃᐃⲆ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * 1.1, [ⵠ[280], ⵠ[89], ⵠ[279], "#0a3333", ⵠ[298], ⵠ[298]], ᐃⲆⲆΔΔ), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ΔΔᐃ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * 1.1, [ⵠ[280], ⵠ[89], ⵠ[279], "#0a3333", ⵠ[298], ⵠ[298]], ⵠⲆᐃⵠⵠ), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ᐃⵠ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(.9 * ᐃ, [ⵠ[246], ⵠ[70], ⵠ[284], ⵠ[463], ⵠ[129], ⵠ[129]], false), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][ⵠⵠⲆᐃ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * .9, [ⵠ[246], ⵠ[70], ⵠ[284], ⵠ[463], ⵠ[129], ⵠ[129]], ᐃⵠᐃⵠⲆ), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][ⵠⲆΔΔ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * .9, [ⵠ[280], ⵠ[89], ⵠ[279], "#082b29", ⵠ[158], ⵠ[158]], false), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ᐃᐃⲆΔ])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆⵠΔΔᐃ(ΔΔᐃΔᐃⲆⲆ(ᐃ * .9, [ⵠ[280], ⵠ[89], ⵠ[279], "#082b29", ⵠ[158], ⵠ[158]], true), Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][3])));
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][ⲆⲆᐃⵠ] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][5]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][4] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][4]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][3] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][3]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][2] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][2]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][1] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][ⲆᐃⲆⲆ]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][0] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ΔⲆΔ][0]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ΔⲆⲆⲆⵠ] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ⵠΔⲆⲆΔ]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][Ⲇⵠⵠᐃᐃ] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][4]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][3] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][3]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ᐃΔⵠᐃ] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ΔⲆⲆᐃ]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][1] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][1]);
		Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][0] = ⵠᐃᐃ(Ⲇᐃ[Δ.ⵠⵠⵠⲆ][Δ.ⲆⵠΔ][ⵠⵠᐃⵠ]);
		Ⲇᐃ[Δ.ⵠᐃΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠⲆⲆ, ⲆⵠⲆⲆⵠ(ᐃ * .75, true, [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[70], ⵠ[284]])));
		Ⲇᐃ[Δ.ⵠᐃΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠᐃᐃ, ⲆⵠⲆⲆⵠ(.75 * ᐃ, true, [ⵠ[280], ⵠ[252], ⵠ[280], ⵠ[478], ⵠ[55], ⵠ[478], ⵠ[55]])));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃΔΔΔ, ⲆⵠⲆⲆⵠ(ᐃ * .75, ⵠⵠⵠΔΔ, [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[361], ⵠ[516]])));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃΔΔΔ, ⲆⵠⲆⲆⵠ(ᐃ * .75, ⲆΔⲆΔᐃ, [ⵠ[280], ⵠ[252], ⵠ[280], ⵠ[478], ⵠ[55], ⵠ[572], ⵠ[512]])));
		Ⲇᐃ[Δ.ᐃᐃΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(4, ⲆⵠⲆⲆⵠ(.75 * ᐃ, Δⵠⵠⵠⵠ, [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584]])));
		Ⲇᐃ[Δ.ᐃᐃΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠΔⲆᐃΔ, ⲆⵠⲆⲆⵠ(ᐃ * .75, true, [ⵠ[280], ⵠ[252], ⵠ[280], ⵠ[525], ⵠ[525], ⵠ[513], ⵠ[540]])));
		Ⲇᐃ[Δ.ᐃᐃΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(4, ⲆⵠⲆⲆⵠ(ᐃ * .75, ΔΔⲆⲆⲆ, [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33]])));
		Ⲇᐃ[Δ.ᐃᐃΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃΔᐃⲆⵠ, ⲆⵠⲆⲆⵠ(ᐃ * .75, true, [ⵠ[280], ⵠ[252], ⵠ[280], ⵠ[228], ⵠ[486], ⵠ[128], ⵠ[217]])));
		Ⲇᐃ[Δ.ᐃΔΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(4, ⲆⵠⲆⲆⵠ(.75 * ᐃ, true, [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373]])));
		Ⲇᐃ[Δ.ᐃΔΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠᐃᐃ, ⲆⵠⲆⲆⵠ(.75 * ᐃ, true, [ⵠ[280], ⵠ[252], ⵠ[280], ⵠ[228], ⵠ[486], ⵠ[555], ⵠ[229]])));
		Ⲇᐃ[Δ.ΔⲆⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠⵠⲆ, ⵠⵠᐃⵠᐃⲆᐃ(ᐃ * .17, ΔᐃⲆΔⵠ, [ⵠ[493], "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", ⵠ[266], "#d6d1d1"])));
		Ⲇᐃ[Δ.ΔⲆⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ⵠⵠᐃⵠᐃⲆᐃ(ᐃ * .17, true, [ⵠ[493], ⵠ[478], ⵠ[55], "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
		Ⲇᐃ[Δ.ΔᐃⲆΔΔ] = [];
		Ⲇᐃ[Δ.ΔᐃⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ⲆⲆΔΔⵠⲆΔ(ᐃ * .32, ⵠⵠⵠⵠΔⵠⲆ, [ⵠ[493], ⵠ[142], ⵠ[516], "#eb2933", "#57b74e", "#42a54d", ⵠ[326], ⵠ[30]])));
		Ⲇᐃ[Δ.ΔᐃⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⵠⲆⵠ, ⲆⲆΔΔⵠⲆΔ(ᐃ * .42, ⵠⵠⵠΔΔ, [ⵠ[493], ⵠ[572], ⵠ[512], ⵠ[478], ⵠ[55]])));
		Ⲇᐃ[Δ.Ⲇᐃⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.Ⲇᐃⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃᐃⵠᐃ, ᐃⲆᐃΔⵠⲆⵠ(ᐃ * .4, true, [ⵠ[493], ⵠ[210], "#493425", ⵠ[251], "#5e4530", "#473221", "#745840"])));
		Ⲇᐃ[Δ.Ⲇᐃⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⵠⲆⵠ, ᐃⲆᐃΔⵠⲆⵠ(ᐃ * .4, ⲆΔᐃⲆⲆ, [ⵠ[493], "#0b3d3a", "#092b2a", "#144642", "#082927", ⵠ[34]])));
		Ⲇᐃ[Δ.ⵠⲆⵠΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⵠⵠ, ᐃΔΔΔᐃⵠⲆ(ᐃ * .4, ⲆⲆᐃⵠⲆ, [ⵠ[493], ⵠ[361], ⵠ[516], "#b1afaf", "#493d36", "#332b28"])));
		Ⲇᐃ[Δ.ⵠⲆⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⲆⲆ, ᐃΔΔΔᐃⵠⲆ(.4 * ᐃ, true, [ⵠ[493], ⵠ[572], ⵠ[512], "#5d757e", ⵠ[478], ⵠ[55]])));
		Ⲇᐃ[Δ.ⲆᐃΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Δᐃᐃᐃ, ΔΔᐃᐃⵠⵠⲆ(.4 * ᐃ, true, [ⵠ[493], ⵠ[85], ⵠ[584], ⵠ[85], ⵠ[269], ⵠ[114]])));
		Ⲇᐃ[Δ.ⲆᐃΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ΔΔᐃᐃⵠⵠⲆ(.4 * ᐃ, true, [ⵠ[493], ⵠ[513], ⵠ[540], "#54bf96", ⵠ[525], ⵠ[341]])));
		Ⲇᐃ[Δ.ΔⲆᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⵠⲆⵠ, ᐃⲆᐃΔΔⲆΔ(.4 * ᐃ, true, [ⵠ[493], "#6ad9e8", ⵠ[33], "#95e9f5", "#022320", "#011e19", ⵠ[557]])));
		Ⲇᐃ[Δ.ΔⲆᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⲆⲆ, ᐃⲆᐃΔΔⲆΔ(.4 * ᐃ, true, [ⵠ[493], ⵠ[128], ⵠ[217], "#93eaf1", ⵠ[228], ⵠ[486]])));
		Ⲇᐃ[Δ.ΔᐃΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Ⲇᐃⵠⵠ, ΔⲆΔΔⵠⵠⵠ(ᐃ * .4, true, [ⵠ[493], ⵠ[408], ⵠ[373], "#cc81e7", ⵠ[305], ⵠ[421], ⵠ[557]])));
		Ⲇᐃ[Δ.ΔᐃΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠΔⵠⲆ, ΔⲆΔΔⵠⵠⵠ(ᐃ * .4, ᐃⵠᐃⵠⲆ, [ⵠ[493], ⵠ[555], ⵠ[229], "#966de6", ⵠ[228], ⵠ[486]])));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(.9 * ᐃ, ⵠⲆⲆⵠΔ, ["#0d4f35"], 0)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(.9 * ᐃ, ΔᐃΔΔᐃ, ["#0d4f35"], ⲆΔⵠⲆ)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(.9 * ᐃ, ΔᐃΔΔᐃ, ["#0d4f35"], ᐃΔⲆⲆⵠ)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(.9 * ᐃ, false, ["#053339"], 0)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(.9 * ᐃ, false, ["#053339"], ⲆⲆΔᐃ)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⵠΔⲆⵠⲆ(ᐃ * .9, ΔᐃΔΔΔ, ["#053339"], ΔⵠΔΔ)));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠⲆᐃ(ᐃ * .8, ["#241301", "#ba6b0e", "#6d3f04"])));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠⲆᐃ(.8 * ᐃ, ["#292002", "#ba930e", "#6d5704"])));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠⲆᐃ(ᐃ * .9, ["#052919", "#0a4738", "#06321f"])));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠⲆᐃ(ᐃ * .8, ["#052918", "#08491c", "#063417"])));
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ⵠᐃⵠΔⵠΔᐃ(.25 * ᐃ, ΔⲆΔΔⵠ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28]])));
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ⵠᐃⵠΔⵠΔᐃ(ᐃ * .25, true, [ⵠ[280], ⵠ[302], ⵠ[367], ⵠ[447]])));
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠΔⵠ].push(ⵠᐃᐃ(ΔΔⵠᐃⲆΔᐃ(.25 * ᐃ, [ⵠ[202], ⵠ[394], ⵠ[28]], 0)));
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠΔⵠ].push(ⵠᐃᐃ(ΔΔⵠᐃⲆΔᐃ(ᐃ * .25, ["#4f371e", "#624d30", "#5e472c", ⵠ[25]], 1)));
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠΔⵠ].push(ⵠᐃᐃ(ΔΔⵠᐃⲆΔᐃ(ᐃ * .25, ["#382715", "#4e3c25", "#473620", ⵠ[511]], ᐃᐃⲆΔ)));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / ᐃΔⲆⲆⵠ, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, ᐃⵠᐃⵠᐃ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28], ⵠ[324]], 1))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, false, [ⵠ[280], ⵠ[302], ⵠ[367], ⵠ[447], ⵠ[324]], ⵠⵠⲆΔ))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, false, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28], "#4f9246"], 2))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, false, [ⵠ[280], ⵠ[302], ⵠ[367], ⵠ[447], "#4f9246"], 2))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / ᐃΔⵠᐃ, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, ⵠⲆⲆⵠΔ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28], ⵠ[324], ⵠ[142]], ⵠⵠⲆⵠ))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, false, [ⵠ[280], ⵠ[302], ⵠ[367], ⵠ[447], ⵠ[324], ⵠ[142]], ΔⲆΔⵠ))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / ⵠΔⵠᐃ, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, ᐃⵠⲆΔⵠ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28], ⵠ[324], "#362513"], ⲆⲆΔΔ))));
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 2, ᐃⲆΔⵠⲆⵠᐃ(ᐃ * .25, ᐃⲆⲆΔΔ, [ⵠ[280], ⵠ[302], ⵠ[367], ⵠ[447], ⵠ[324], "#664d2e"], 4))));
		Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ][Δ.ΔⲆΔ] = [ⵠᐃᐃ(ⲆΔᐃᐃΔ(1.2 * ᐃ, true, [ⵠ[246], "#0b8052", ⵠ[164]]))];
		Ⲇᐃ[Δ.ⵠⵠᐃΔᐃ][Δ.ⲆⵠΔ] = [ⵠᐃᐃ(ⲆΔᐃᐃΔ(1.2 * ᐃ, ⵠⵠⵠΔΔ, [ⵠ[280], "#084442", ⵠ[590]]))];
		Ⲇᐃ[Δ.ᐃⵠᐃᐃΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃᐃΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔᐃᐃΔ(ᐃ * .8, true, [ⵠ[246], ⵠ[375], ⵠ[62]]));
		Ⲇᐃ[Δ.ᐃⵠᐃᐃΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔᐃᐃΔ(ᐃ * .8, ⵠⵠⵠΔΔ, [ⵠ[280], ⵠ[288], ⵠ[240]]));
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔⲆΔⲆⵠⵠ(ᐃ * .5, true, [ⵠ[233], ⵠ[450], "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔⲆΔⲆⵠⵠ(.5 * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[280], "#0a3429", ⵠ[367], "#082f25", "#082925", "#0a3630"]));
		Ⲇᐃ[Δ.ⵠΔΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆΔΔ(.5 * ᐃ, true, [ⵠ[233], ⵠ[406], "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
		Ⲇᐃ[Δ.ⵠΔΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆΔΔ(.5 * ᐃ, true, [ⵠ[280], "#2b5254", "#264a46", "#396260", "#244743"]));
		Ⲇᐃ[Δ.ΔⵠⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠⵠⵠᐃ(.5 * ᐃ, true, [ⵠ[233], "#349970", "#245c45", "#348361", ⵠ[406], ⵠ[266]]));
		Ⲇᐃ[Δ.ΔⵠⵠⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠⵠⵠᐃ(.5 * ᐃ, true, [ⵠ[280], "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
		Ⲇᐃ[Δ.ⵠᐃⵠΔᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃⵠΔᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔᐃᐃΔ(.8 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[233], "#0b8052", ⵠ[164]]));
		Ⲇᐃ[Δ.ⵠᐃⵠΔᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔᐃᐃΔ(.8 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[280], "#084442", ⵠ[590]]));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔⲆΔⲆⵠⵠ(.5 * ᐃ, true, [ⵠ[233], ⵠ[375], ⵠ[62], "#5e5823", "#86683e", "#6e502d"]));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔⲆΔⲆⵠⵠ(.5 * ᐃ, ΔⲆΔΔⵠ, [ⵠ[280], ⵠ[288], ⵠ[240], "#0c301e", "#062a1f", "#083b2b"]));
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆΔΔ(ᐃ * .5, true, [ⵠ[233], "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠΔⵠⲆΔΔ(.5 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[280], "#164a44", "#124244", "#13373b", "#133e3e"]));
		Ⲇᐃ[Δ.ᐃⲆΔΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠⵠⵠᐃ(.5 * ᐃ, true, [ⵠ[233], "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
		Ⲇᐃ[Δ.ᐃⲆΔΔΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠⵠⵠᐃ(.5 * ᐃ, true, [ⵠ[280], "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
		Ⲇᐃ[Δ.ⲆⲆΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠᐃⲆⵠ(.45 * ᐃ, ⵠⲆᐃⲆᐃ, [ⵠ[246], ⵠ[326], "#98171e", "#22a84f", "#1f924a"]));
		Ⲇᐃ[Δ.ⲆⲆΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠᐃⲆⵠ(.45 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[246], "#19386e", "#0b2752", "#124252", "#0d3441"]));
		Ⲇᐃ[Δ.ΔΔⲆᐃΔⲆΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠᐃⲆⵠ(ᐃ * .65, ⵠⲆᐃⲆᐃ, ["rgba(14, 48, 34, 0)", ⵠ[296], ⵠ[296], ⵠ[296], ⵠ[296]]));
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆΔᐃⵠ(1.4 * ᐃ, ᐃⵠᐃⵠᐃ, [ⵠ[326], ⵠ[30]]));
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆΔᐃⵠ(1.4 * ᐃ, ΔΔᐃⵠⵠ, ["#46195e", "#744188"]));
		Ⲇᐃ[Δ.ⲆⵠΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃⲆᐃⲆΔⵠ(.9 * ᐃ, false, [ⵠ[322], "#ec8d35", "#e96132"]));
		Ⲇᐃ[Δ.ⲆⵠΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃⲆᐃⲆΔⵠ(.9 * ᐃ, false, ["#efdb7b", "#efe854", "#e8ef62"]));
		Ⲇᐃ[Δ.ΔΔΔΔᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔΔΔΔᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔⲆⵠᐃⲆᐃ(ᐃ * .9, false, [ⵠ[70], ⵠ[284]]));
		Ⲇᐃ[Δ.ΔΔΔΔᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔⲆⵠᐃⲆᐃ(ᐃ * .9, false, ["#282404", "#0a0a01"]));
		Ⲇᐃ[Δ.ᐃᐃᐃΔⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃΔⲆᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆΔᐃⵠⲆⲆ(ᐃ * .9, ⵠΔⲆᐃⲆ, [ⵠ[70], ⵠ[284]]));
		Ⲇᐃ[Δ.ᐃᐃᐃΔⲆᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆΔᐃⵠⲆⲆ(ᐃ * .9, ᐃⲆⲆΔΔ, ["#282404", "#0a0a01"]));
		Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔⲆΔ(.9 * ᐃ, ΔᐃΔᐃᐃ, [ⵠ[322]]));
		Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔⲆΔ(.9 * ᐃ, false, ["#fffabb"]));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔᐃⵠⵠΔⵠ(.9 * ᐃ, ΔⲆᐃⲆΔ, [ⵠ[322]]));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔᐃⵠⵠΔⵠ(.9 * ᐃ, ᐃⲆⲆΔΔ, ["#fffabb"]));
		Ⲇᐃ[Δ.ΔᐃᐃⵠⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃᐃⵠⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔⲆΔ(.9 * ᐃ, false, [ⵠ[322]]));
		Ⲇᐃ[Δ.ΔᐃᐃⵠⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔⲆΔ(.9 * ᐃ, ΔᐃΔᐃᐃ, ["rgba(255, 84, 0, 1)"]));
		Ⲇᐃ[Δ.ΔᐃⵠᐃⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠᐃⲆⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔᐃⵠⵠΔⵠ(.9 * ᐃ, ⵠⲆⵠΔⵠ, [ⵠ[322]]));
		Ⲇᐃ[Δ.ΔᐃⵠᐃⲆⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔᐃⵠⵠΔⵠ(.9 * ᐃ, ΔΔᐃⵠⵠ, ["#ff5704"]));
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠΔ] = ⵠᐃᐃ(ⲆΔⵠΔⵠⲆⵠ(ᐃ, ⵠ[142], 1));
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⲆᐃⲆ] = ⵠᐃᐃ(ⲆΔⵠΔⵠⲆⵠ(1.5 * ᐃ, ⵠ[142], ⲆΔᐃⲆ));
		Ⲇᐃ[Δ.ⲆΔᐃⵠΔΔᐃ] = ⵠᐃᐃ(ⲆΔΔΔⲆ(ᐃ, "Your score:", ᐃ * ᐃΔⵠⲆΔ, ⵠ[68]));
		Ⲇᐃ[Δ.ᐃⵠΔⵠᐃΔᐃ] = ⵠᐃᐃ(ᐃᐃᐃⲆᐃᐃⵠⵠⲆ(ᐃ * .9, [ⵠ[ⵠⵠⲆᐃ], ⵠ[566], "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
		Ⲇᐃ[Δ.ⵠΔⵠᐃⵠᐃᐃ] = ⵠᐃ.ⵠΔⵠᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠⵠⲆΔΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔΔⲆⲆᐃᐃ(ᐃ * 1.5, ⵠⵠⵠⵠΔⵠⲆ, [ⵠ[493], ⵠ[2], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[ᐃᐃⵠⵠ], ⵠ[76], ⵠ[ᐃᐃⲆΔ], ⵠ[566]]));
		Ⲇᐃ[Δ.ⵠⵠⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔΔⲆⲆᐃᐃ(1.5 * ᐃ, true, [ⵠ[280], ⵠ[407], ⵠ[185], ⵠ[44], "#225755", "#07393D", "#07454a", "#0c484d", ⵠ[407], ⵠ[185]]));
		Ⲇᐃ[Δ.ᐃⲆᐃⵠⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆᐃⵠⲆⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⲆΔⵠᐃⵠⲆ(ᐃ * ⵠⵠⲆᐃ, true, [ⵠ[493], ⵠ[ⵠᐃᐃⵠ], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[ⲆᐃᐃΔ], ⵠ[76], ⵠ[2], ⵠ[566]]));
		Ⲇᐃ[Δ.ᐃⲆᐃⵠⲆⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⲆΔⵠᐃⵠⲆ(ᐃ * 2, true, [ⵠ[280], ⵠ[407], ⵠ[185], ⵠ[44], "#225755", "#07393D", "#07454a", "#0c484d", ⵠ[407], ⵠ[185]]));
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃⵠΔⲆΔΔ(ᐃ * 1.5, ⲆΔᐃⲆⲆ, [ⵠ[493], ⵠ[ⵠⵠΔⲆ], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[5], ⵠ[76], ⵠ[2], ⵠ[566]]));
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃⵠΔⲆΔΔ(1.5 * ᐃ, true, [ⵠ[280], ⵠ[407], ⵠ[185], ⵠ[44], "#225755", "#07393D", "#07454a", "#0c484d", ⵠ[407], ⵠ[185]]));
		Ⲇᐃ[Δ.ΔⲆⲆΔΔ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⲆᐃⲆ(ᐃ * 2.2, ΔᐃⲆⲆᐃ, [ⵠ[564], ⵠ[530]]));
		Ⲇᐃ[Δ.ΔⲆⲆΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⲆᐃⲆ(ᐃ * 2.2, true, ["#0B4049", "#08383D"]));
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⲆᐃⲆ(2.2 * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[375], ⵠ[62]]));
		Ⲇᐃ[Δ.ΔⵠⵠΔⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⲆᐃⲆ(ᐃ * 2.2, ⵠⵠⵠⵠΔⵠⲆ, [ⵠ[288], ⵠ[240]]));
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, true, [ⵠ[564], ⵠ[530]]));
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, true, ["#15514F", "#0F3F3D"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, ΔΔⲆⲆⲆ, [ⵠ[450], "#b17238"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, [ⵠ[264], ⵠ[412]]));
		Ⲇᐃ[Δ.ⵠΔⵠᐃⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠᐃⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, ᐃⵠᐃⵠⲆ, ["#3a8214", "#4a9c1e"]));
		Ⲇᐃ[Δ.ⵠΔⵠᐃⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, ⵠⲆⵠⵠⲆ, ["#032d29", "#044640"]));
		Ⲇᐃ[Δ.ΔᐃⵠΔΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠΔΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, [ⵠ[406], ⵠ[266]]));
		Ⲇᐃ[Δ.ΔᐃⵠΔΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, ⲆⵠΔⵠΔ, ["#1c6161", "#07413f"]));
		Ⲇᐃ[Δ.ΔⵠᐃⵠⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⵠⲆⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, ⲆΔᐃⲆⲆ, ["#328a56", "#449573"]));
		Ⲇᐃ[Δ.ΔⵠᐃⵠⲆⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, ᐃⵠᐃⵠⲆ, [ⵠ[264], ⵠ[412]]));
		Ⲇᐃ[Δ.ᐃΔⵠΔᐃΔΔ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠΔᐃΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, ["#c98e2f", "#a36b11"]));
		Ⲇᐃ[Δ.ᐃΔⵠΔᐃΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, [ⵠ[264], ⵠ[412]]));
		Ⲇᐃ[Δ.ᐃⵠⵠΔΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠΔΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(ᐃ * .8, ΔᐃⲆⲆᐃ, ["#b22419", "#99110e"]));
		Ⲇᐃ[Δ.ᐃⵠⵠΔΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, ᐃⵠᐃⵠⲆ, ["#04323c", "#03222b"]));
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, ["#13a56d", "#098a58"]));
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃᐃⲆ(.8 * ᐃ, true, [ⵠ[264], ⵠ[412]]));
		Ⲇᐃ[Δ.ⵠⵠⲆΔΔᐃⵠ] = ΔᐃΔᐃ(ᐃⵠ, [{
			f: ⵠⲆΔⵠⲆᐃⲆ,
			x: 0,
			y: ⲆΔᐃ,
			a: ⲆΔᐃⲆ,
			r: Δⵠⵠ,
			c: [ⵠ[564], ⵠ[530]]
		}], 1.2, [ⵠ[359], ⵠ[227], ⵠ[339]], .7);
		Ⲇᐃ[Δ.ΔⲆⵠΔΔⲆⵠ] = ΔᐃΔᐃ(ΔΔᐃᐃ, [{
			f: ΔⲆΔᐃⵠⲆⲆ,
			x: 0,
			y: 0,
			a: ΔΔᐃᐃ,
			r: -Math.PI / 5,
			c: [ⵠ[70], ⵠ[284]]
		}], .3, [ⵠ[359], ⵠ[227], ⵠ[339]], .7);
		Ⲇᐃ[Δ.ᐃⵠⵠᐃⵠⲆΔ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: ⵠⲆΔΔΔΔΔ,
			x: 0,
			y: -5,
			a: ΔᐃⵠΔ,
			r: ⵠⵠⲆⲆ,
			c: [ⵠ[98], "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
		}], .15, [ⵠ[359], ⵠ[227], ⵠ[339]], .7);
		Ⲇᐃ[Δ.ᐃⵠΔⵠᐃᐃⵠ] = ΔᐃΔᐃ(.9, [], .3, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔⲆⵠᐃⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆⵠᐃⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ΔᐃⲆⵠⲆ, ["#7d613e", "#9e7e5a"]));
		Ⲇᐃ[Δ.ΔⲆⵠᐃⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ΔᐃΔᐃᐃ, ["#084442", "#125e5a"]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, [ⵠ[530], ⵠ[564]]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ⲆΔᐃⵠⲆ, ["#1b6f6a", "#0d4e4c"]));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, [ⵠ[62], ⵠ[375]]));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, [ⵠ[240], ⵠ[288]]));
		Ⲇᐃ[Δ.ⲆⲆΔΔᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔΔᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ᐃⵠⲆΔⵠ, [ⵠ[450], "#ec952d"]));
		Ⲇᐃ[Δ.ⲆⲆΔΔᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ΔᐃⲆⵠⲆ, ["#0e6553", "#094437"]));
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃᐃⲆ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ΔᐃΔΔΔ, ["#375809", "#4b770e"]));
		Ⲇᐃ[Δ.ΔΔⵠⲆᐃᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#09542d", "#0d5d2f"]));
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#585809", "#72770e"]));
		Ⲇᐃ[Δ.ⵠⵠΔᐃᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ⵠⲆⵠΔⵠ, ["#295209", "#305d0d"]));
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ΔᐃΔΔΔ, ["#b9b094", "#e2d2c0"]));
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ᐃⲆⲆΔΔ, ["#126366", "#0d484b"]));
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#3f8662", "#30915d"]));
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#0e6553", "#094437"]));
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ΔᐃⲆⵠⲆ, ["#c79153", "#dfa868"]));
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#073927", "#075040"]));
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#768b5b", "#819984"]));
		Ⲇᐃ[Δ.ΔⲆⵠᐃΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#0c4540", "#0e5153"]));
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ΔᐃΔᐃᐃ, ["#567465", "#627c6e"]));
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#073927", "#075040"]));
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#996b3a", "#bf956b"]));
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ⲆⵠᐃΔΔ, ["#0e6553", "#094437"]));
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ⲆᐃⲆᐃΔ, ["#7a634a", "#a68f77"]));
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#1e4d43", "#113c32"]));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#99403c", "#bc796c"]));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ⲆⲆⲆᐃⲆ, ["#1e434d", "#11303c"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠⲆᐃⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ⲆⲆⲆᐃⲆ, ["#88504e", "#b3857c"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆᐃⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, ΔᐃⲆⵠⲆ, ["#253b41", "#162930"]));
		Ⲇᐃ[Δ.ⵠΔΔⵠⵠᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⵠⵠᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, ⲆⲆⲆᐃⲆ, ["#0f8870", "#23af93"]));
		Ⲇᐃ[Δ.ⵠΔΔⵠⵠᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#032829", "#083233"]));
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(ᐃ * .9, false, ["#618a20", "#84a74e"]));
		Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠⵠ(.9 * ᐃ, false, ["#1f4632", "#335d47"]));
		Ⲇᐃ[Δ.ΔᐃΔⵠΔ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠΔⲆⵠᐃ(1.2 * ᐃ, true, [ⵠ[493], ⵠ[70], ⵠ[284], "#756e52", "#663f22", "#9e9577"]));
		Ⲇᐃ[Δ.ΔᐃΔⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠΔⲆⵠᐃ(1.2 * ᐃ, ΔᐃⲆΔⲆ, [ⵠ[280], ⵠ[478], "#072322", "#3e706b", "#123d3f", "#4e827c"]));
		Ⲇᐃ[Δ.ⲆΔᐃⲆᐃ] = [], Ⲇᐃ[Δ.ⲆΔᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔΔⲆΔⵠΔ(ⲆΔᐃⲆ * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[390], ⵠ[314], ⵠ[ᐃⲆⲆΔⵠ], ⵠ[314], ⵠ[390]]));
		Ⲇᐃ[Δ.ⲆΔᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔΔⲆΔⵠΔ(1 * ᐃ, ΔⲆΔΔⵠ, [ⵠ[280], ⵠ[478], ⵠ[506], ⵠ[168], ⵠ[478], "#174444"]));
		Ⲇᐃ[Δ.ΔⲆΔΔᐃ] = [], Ⲇᐃ[Δ.ΔⲆΔΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⲆΔⲆΔⲆΔ(ᐃ * ᐃⵠⵠ, true, [ⵠ[493], ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]));
		Ⲇᐃ[Δ.ΔⲆΔΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⲆΔⲆΔⲆΔ(1 * ᐃ, true, [ⵠ[280], ⵠ[451], ⵠ[336], ⵠ[336], "#4bbcb4", ⵠ[568], ⵠ[465]]));
		Ⲇᐃ[Δ.ΔΔⵠΔⲆ] = [], Ⲇᐃ[Δ.ΔΔⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Δⵠⵠᐃᐃᐃⵠ(ᐃⵠ * ᐃ, ⲆΔᐃⲆⲆ, [ⵠ[493], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]));
		Ⲇᐃ[Δ.ΔΔⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Δⵠⵠᐃᐃᐃⵠ(1 * ᐃ, true, [ⵠ[280], ⵠ[555], ⵠ[229], "#8f65de", "#7f55cc", "#9d77e6"]));
		Ⲇᐃ[Δ.ᐃᐃᐃΔⲆ] = [], Ⲇᐃ[Δ.ᐃᐃᐃΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Δⵠⵠᐃᐃᐃⵠ(ᐃ * ΔΔᐃⵠ, true, [ⵠ[493], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[497], ⵠ[214]]));
		Ⲇᐃ[Δ.ᐃᐃᐃΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Δⵠⵠᐃᐃᐃⵠ(ⵠⵠⲆΔ * ᐃ, true, [ⵠ[280], ⵠ[456], "#214c4b", ⵠ[130], "#295957", "#1f5955"]));
		Ⲇᐃ[Δ.ΔΔⵠⵠⵠ] = [], Ⲇᐃ[Δ.ΔΔⵠⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠᐃᐃⵠ(ⵠⲆⲆ * ᐃ, true, [ⵠ[493], ⵠ[472], ⵠ[550], ⵠ[ᐃⵠᐃⵠΔ], ⵠ[83], ⵠ[ᐃᐃΔᐃ]]));
		Ⲇᐃ[Δ.ΔΔⵠⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Ⲇᐃᐃⵠᐃᐃⵠ(ᐃ * ΔⲆᐃ, true, [ⵠ[280], ⵠ[130], "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
		Ⲇᐃ[Δ.Δᐃⵠⵠᐃ] = [], Ⲇᐃ[Δ.Δᐃⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆΔⲆΔΔΔ(ᐃ * .8, true, [ⵠ[493], ⵠ[516], ⵠ[361], ⵠ[390], ⵠ[314], ⵠ[15], ⵠ[314], ⵠ[390]]));
		Ⲇᐃ[Δ.Δᐃⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆΔⲆΔΔΔ(ᐃ * .8, true, [ⵠ[280], ⵠ[512], ⵠ[572], ⵠ[478], ⵠ[506], ⵠ[168], ⵠ[478], "#174444"]));
		Ⲇᐃ[Δ.Δⵠⵠᐃⵠ] = [], Ⲇᐃ[Δ.Δⵠⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠᐃⲆΔΔΔΔ(ᐃ * .8, ᐃⵠⲆⵠⵠ, [ⵠ[493], "#69685a", "#9c9683", ⵠ[472], ⵠ[550], ⵠ[ⵠᐃⲆⲆⲆ], ⵠ[83], ⵠ[ⲆᐃⲆⲆ]]));
		Ⲇᐃ[Δ.Δⵠⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠᐃⲆΔΔΔΔ(.8 * ᐃ, ΔᐃⲆΔⵠ, [ⵠ[280], "#1a3732", "#1e544c", ⵠ[130], "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆΔ] = [], Ⲇᐃ[Δ.ⲆᐃⵠⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔΔᐃⲆᐃⲆ(.8 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[493], "#7d8b90", "#9facaa", ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔΔᐃⲆᐃⲆ(ᐃ * .8, true, [ⵠ[280], "#2c4b55", "#546d77", ⵠ[451], ⵠ[336], ⵠ[336], "#4bbcb4", ⵠ[568], ⵠ[465]]));
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠ] = [], Ⲇᐃ[Δ.ⲆΔⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔᐃⵠᐃⵠᐃ(ᐃ * .8, true, [ⵠ[493], ⵠ[400], ⵠ[361], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[497], ⵠ[214]]));
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔᐃⵠᐃⵠᐃ(ᐃ * .8, true, [ⵠ[280], ⵠ[512], ⵠ[572], ⵠ[456], "#214c4b", ⵠ[130], "#295957", "#1f5955"]));
		Ⲇᐃ[Δ.ⲆⵠΔⲆᐃ] = [], Ⲇᐃ[Δ.ⲆⵠΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔᐃⵠᐃⵠᐃ(ᐃ * .8, true, [ⵠ[493], ⵠ[400], ⵠ[361], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]));
		Ⲇᐃ[Δ.ⲆⵠΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔᐃⵠᐃⵠᐃ(ᐃ * .8, Δⵠⵠⵠⵠ, [ⵠ[280], ⵠ[512], ⵠ[572], ⵠ[555], ⵠ[229], "#8f65de", "#7f55cc", "#9d77e6"]));
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(ᐃ * 1.5, true, [ⵠ[493], ⵠ[91], ⵠ[160], "#644928", ⵠ[160], "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(1.5 * ᐃ, true, [ⵠ[280], ⵠ[478], ⵠ[506], ⵠ[168], ⵠ[478], "#174444"]));
		Ⲇᐃ[Δ.ᐃΔⲆⵠΔΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⵠΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(ΔΔᐃᐃ * ᐃ, false, [ⵠ[411], ⵠ[411], ⵠ[405], ⵠ[405], ⵠ[411], ⵠ[405]]));
		Ⲇᐃ[Δ.ᐃΔⲆⵠΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(1 * ᐃ, false, [ⵠ[482], ⵠ[482], "#0b342b", "#0b342b", ⵠ[482], "#0b342b"]));
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ᐃ * 1.5, ΔᐃⲆⲆᐃ, [ⵠ[493], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[214], ⵠ[497]]));
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(1.5 * ᐃ, true, [ⵠ[280], ⵠ[456], "#214c4b", ⵠ[130], "#164542", "#295957"]));
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ΔΔⲆΔ * ᐃ, ᐃⵠⲆΔⵠ, [ⵠ[411], ⵠ[411], ⵠ[405], ⵠ[405], ⵠ[411], ⵠ[405]]));
		Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(1 * ᐃ, false, [ⵠ[384], ⵠ[384], ⵠ[374], ⵠ[374], ⵠ[384], ⵠ[374]]));
		Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ᐃ * 1.5, true, [ⵠ[493], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]));
		Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ᐃ * 1.5, true, [ⵠ[280], ⵠ[555], ⵠ[229], "#8f65de", "#7f55cc", "#9d77e6"]));
		Ⲇᐃ[Δ.ⲆΔⲆⵠⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆⵠⲆᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ᐃ * 1, ᐃⵠᐃⵠᐃ, [ⵠ[411], ⵠ[411], ⵠ[405], ⵠ[405], ⵠ[411], ⵠ[405]]));
		Ⲇᐃ[Δ.ⲆΔⲆⵠⲆᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(1 * ᐃ, ⲆᐃⲆᐃΔ, [ⵠ[384], ⵠ[384], ⵠ[374], ⵠ[374], ⵠ[384], ⵠ[374]]));
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(1.5 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[472], ⵠ[550], ⵠ[7], "#9a8636", ⵠ[ΔΔᐃⵠ]]));
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(ᐃ * 1.5, ⵠⲆᐃⵠⵠ, [ⵠ[280], ⵠ[130], "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
		Ⲇᐃ[Δ.ⵠᐃΔΔᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃΔΔᐃᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(ΔΔⲆΔ * ᐃ, false, [ⵠ[411], ⵠ[411], ⵠ[405], ⵠ[405], ⵠ[411], ⵠ[405]]));
		Ⲇᐃ[Δ.ⵠᐃΔΔᐃᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(ᐃ * 1, false, [ⵠ[384], ⵠ[384], ⵠ[374], ⵠ[374], ⵠ[384], ⵠ[374]]));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(1.5 * ᐃ, true, [ⵠ[493], ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(1.5 * ᐃ, true, [ⵠ[280], ⵠ[451], ⵠ[336], ⵠ[336], "#4bbcb4", ⵠ[568], ⵠ[465]]));
		Ⲇᐃ[Δ.ΔⲆⲆⵠΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆⵠΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(ᐃ * ᐃΔⲆⵠ, ⲆΔⲆΔⵠ, [ⵠ[411], ⵠ[411], ⵠ[405], ⵠ[405], ⵠ[411], ⵠ[405]]));
		Ⲇᐃ[Δ.ΔⲆⲆⵠΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(ΔⲆᐃ * ᐃ, false, [ⵠ[384], ⵠ[384], ⵠ[374], ⵠ[374], ⵠ[384], ⵠ[374]]));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔΔⲆⵠᐃᐃ(ᐃ * .5, ⲆΔⲆΔᐃ, [ⵠ[411], "#9e8838", ⵠ[203], ⵠ[91], ⵠ[209], ⵠ[209], ⵠ[209], ⵠ[203], ⵠ[203], ⵠ[203]]));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔΔⲆⵠᐃᐃ(ᐃ * .5, ⲆⲆᐃⵠⲆ, [ⵠ[384], "#266161", ⵠ[368], ⵠ[265], ⵠ[86], ⵠ[86], ⵠ[86], ⵠ[368], ⵠ[368], ⵠ[368]]));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆΔⵠΔⲆΔ(.5 * ᐃ, [ⵠ[411], "#9e8838", ⵠ[203], ⵠ[91], ⵠ[209]]));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆΔⵠΔⲆΔ(.5 * ᐃ, [ⵠ[384], "#266161", ⵠ[368], ⵠ[265], ⵠ[86]]));
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⵠⲆΔⲆΔⲆ(.9 * ᐃ, [ⵠ[246], "#ee97bf", ⵠ[557], ⵠ[252], ⵠ[142]]));
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⵠⲆΔⲆΔⲆ(ᐃ * .9, [ⵠ[280], "#4d1b59", "#5d3f77", "#220e26", ⵠ[142]]));
		Ⲇᐃ[Δ.ⵠΔⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI, ᐃⲆΔᐃᐃᐃⵠ(.9 * ᐃ, [ⵠ[252], ⵠ[268], ⵠ[268], ⵠ[268], ⵠ[557], ⵠ[252]])));
		Ⲇᐃ[Δ.ⵠΔⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI, ᐃⲆΔᐃᐃᐃⵠ(ᐃ * .9, [ⵠ[280], "#401d49", ⵠ[268], "#401d49", ⵠ[557], ⵠ[252]])));
		Ⲇᐃ[Δ.ⵠⵠᐃΔᐃΔⵠ] = ⵠᐃᐃ(ᐃⲆⵠΔⲆⲆⲆΔⲆ(.6 * ᐃ, [ⵠ[557]]));
		Ⲇᐃ[Δ.ⲆⲆⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⲆⵠΔᐃᐃⲆ(ᐃ * 1.1, [ⵠ[246], "#231f20", ⵠ[268], "#7d7679", ⵠ[142]]));
		Ⲇᐃ[Δ.ⲆⲆⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⲆⵠΔᐃᐃⲆ(1.1 * ᐃ, [ⵠ[280], "#1e181c", ⵠ[437], "#3e3e4a", ⵠ[142]]));
		Ⲇᐃ[Δ.ⲆⲆⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃᐃᐃⲆΔΔ(.6 * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[52], ⵠ[237], ⵠ[410], ⵠ[587]]));
		Ⲇᐃ[Δ.ⲆⲆⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃᐃᐃⲆΔΔ(ᐃ * .6, true, ["#478e8b", "#327e73", ⵠ[464], "#08403f"]));
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⲆᐃΔΔⵠΔ(ᐃ * .6, true, [ⵠ[410], ⵠ[587], ⵠ[52], ⵠ[237]]));
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⲆᐃΔΔⵠΔ(.6 * ᐃ, ΔⲆΔΔⵠ, [ⵠ[464], "#08403f", "#478e8b", "#327e73"]));
		Ⲇᐃ[Δ.ΔⲆᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⵠΔᐃⵠᐃⲆ(ᐃ * .63, true, [ⵠ[291], "#dee7e7", "#b8cccb", ⵠ[142], "#e3e8e8"]));
		Ⲇᐃ[Δ.ΔⲆᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⵠΔᐃⵠᐃⲆ(.63 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[464], "#368981", "#1c635e", "#7bbab4", "#469e95"]));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠᐃⲆⵠΔΔ(ᐃ * .6, true, [ⵠ[291], "#c5232c", "#84191d", "#a72027", ⵠ[236], ⵠ[392]]));
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠᐃⲆⵠΔΔ(.6 * ᐃ, ᐃⵠⲆⵠⵠ, [ⵠ[464], "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
		Ⲇᐃ[Δ.ⵠⵠⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃᐃⵠΔᐃⲆ(ᐃ * .6, true, [ⵠ[291], "#0f964c", "#106e3b", "#138344", ⵠ[236], ⵠ[392], "#C5232C", "#A92D2D"]));
		Ⲇᐃ[Δ.ⵠⵠⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃᐃⵠΔᐃⲆ(.6 * ᐃ, ᐃⵠᐃⵠⲆ, [ⵠ[464], ⵠ[24], ⵠ[194], ⵠ[377], "#66aaa3", "#469e95", "#292f66", "#202559"]));
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃᐃᐃᐃΔᐃᐃ(.42 * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[493], "#515C57", "#3A4942", "#68736F", ⵠ[92], ⵠ[508], ⵠ[539], "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃᐃᐃᐃΔᐃᐃ(ᐃ * .42, true, [ⵠ[493], "#485E66", ⵠ[48], "#60757D", ⵠ[92], ⵠ[508], ⵠ[539], ⵠ[48], "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
		Ⲇᐃ[Δ.ΔᐃⵠⵠⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠⵠⲆᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠⵠⵠⵠᐃⲆ(.9 * ᐃ, ["#e4c027"]));
		Ⲇᐃ[Δ.ΔᐃⵠⵠⲆᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠⵠⵠⵠᐃⲆ(.9 * ᐃ, ["#D8E57F"]));
		Ⲇᐃ[Δ.ᐃⲆⵠΔᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠΔᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃΔᐃᐃᐃᐃⵠ(.42 * ᐃ, Δⵠⵠⵠⵠ, [ⵠ[493], "#515C57", "#3A4942", "#68736F", ⵠ[92], ⵠ[508], ⵠ[539], "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
		Ⲇᐃ[Δ.ᐃⲆⵠΔᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃΔᐃᐃᐃᐃⵠ(ᐃ * .42, true, [ⵠ[493], "#485E66", ⵠ[48], "#60757D", ⵠ[92], ⵠ[508], ⵠ[539], ⵠ[48], "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
		Ⲇᐃ[Δ.ΔᐃᐃⵠⵠΔⲆ] = ⵠᐃᐃ(ⵠᐃᐃⵠⵠⵠᐃⵠᐃ(ᐃ * ⵠⲆⲆ, [ⵠ[2], ⵠ[566], "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔⲆⵠΔⲆⲆ(.5 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[361], ⵠ[516], "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔⲆⵠΔⲆⲆ(.5 * ᐃ, true, [ⵠ[493], ⵠ[572], ⵠ[512], "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃⲆᐃⵠΔⵠ(ᐃ * .5, true, [ⵠ[493], ⵠ[361], ⵠ[516], "#c0c0c0", "#4f4f4f", "#6c6c6c", ⵠ[319]]));
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃⲆᐃⵠΔⵠ(.5 * ᐃ, true, [ⵠ[493], ⵠ[572], ⵠ[512], "#60757d", "#152229", "#0c1113", "#0c1113"]));
		Ⲇᐃ[Δ.ᐃⲆⵠΔΔᐃⲆ] = ⵠᐃᐃ(ΔⵠᐃⵠᐃⵠΔᐃⲆ(.8 * ᐃ, true, [ⵠ[516], ⵠ[361]]));
		Ⲇᐃ[Δ.ⲆᐃΔᐃΔᐃᐃ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ΔⲆΔᐃⵠⲆⲆ,
			x: 0,
			y: 0,
			a: 1,
			r: Math.PI / 2.5,
			c: [ⵠ[70], ⵠ[284]]
		}], .3, ["#494949", "#5b5858", "#3d3b3b"], ᐃⵠ);
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆΔⵠΔⲆᐃ(ΔᐃᐃⲆ * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[493], ⵠ[198], ⵠ[282], "#261912", "#eee6c5", "#d1c599", ⵠ[198], ⵠ[282], "#86509b", "#703a99"]));
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆΔⵠΔⲆᐃ(ΔᐃᐃⲆ * ᐃ, true, [ⵠ[493], ⵠ[589], ⵠ[34], "#052120", "#104d5b", "#0b424f", ⵠ[589], ⵠ[34], "#2b0b4a", "#23073e"]));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠΔⵠᐃΔⵠ(ᐃ * ⵠⲆⲆ, ⲆΔᐃⲆⲆ, [ⵠ[493], ⵠ[198], ⵠ[282], "#261912", "#eee6c5", "#d1c599", ⵠ[198], ⵠ[282], "#86509b", "#703a99"]));
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠΔⵠᐃΔⵠ(ᐃ * ⲆⲆΔᐃ, true, [ⵠ[493], ⵠ[589], ⵠ[34], "#052120", "#104d5b", "#083b37", ⵠ[589], ⵠ[34], "#2b0b4a", "#23073e"]));
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⲆⲆ, ΔΔⵠΔᐃᐃΔ(.7 * ᐃ, ⲆΔᐃⲆⲆ, [ⵠ[493], ⵠ[353], ⵠ[176], ⵠ[ΔᐃᐃΔᐃ], ⵠ[193], ⵠ[193], ⵠ[467], ⵠ[551], ⵠ[281]])));
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ΔΔⵠΔᐃᐃΔ(ᐃ * .7, ⵠⲆⵠⵠⲆ, [ⵠ[493], ⵠ[589], ⵠ[34], ⵠ[531], "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
		Ⲇᐃ[Δ.ΔΔΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔΔΔⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠΔⵠⲆ, ⵠⲆⵠΔΔᐃⲆ(.7 * ᐃ, true, [ⵠ[493], ⵠ[353], ⵠ[176], "#765d42", ⵠ[551], ⵠ[281]])));
		Ⲇᐃ[Δ.ΔΔΔⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ⵠⲆⵠΔΔᐃⲆ(.7 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[493], ⵠ[589], ⵠ[34], "#0e4d49", "#1a6c67", "#07322f"])));
		Ⲇᐃ[Δ.ⲆΔⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⲆΔⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Δᐃᐃᐃ, ⲆᐃᐃΔⲆΔⲆ(ᐃ * .65, true, [ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[551], ⵠ[281], "#7a7575", "#454749", "#8c8787", ⵠ[361], ⵠ[516], "#aaa6a6"])));
		Ⲇᐃ[Δ.ⲆΔⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⲆⲆ, ⲆᐃᐃΔⲆΔⲆ(.65 * ᐃ, ⲆⵠΔⵠΔ, [ⵠ[493], ⵠ[478], ⵠ[55], "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", ⵠ[572], ⵠ[512], "#546e78"])));
		Ⲇᐃ[Δ.ⵠⲆΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Ⲇᐃⵠⵠ, ᐃᐃΔΔΔΔⲆ(ᐃ * .67, true, [ⵠ[493], ⵠ[269], ⵠ[114], "#a69e39", "#9c8828", "#bab143", ⵠ[85], ⵠ[584], "#d2ca59"])));
		Ⲇᐃ[Δ.ⵠⲆΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃΔΔΔΔⲆ(.67 * ᐃ, ⵠⵠⵠΔΔ, [ⵠ[280], ⵠ[525], ⵠ[341], "#33916d", "#197c62", "#3eab81", ⵠ[513], ⵠ[540], "#52be94"])));
		Ⲇᐃ[Δ.ΔⲆⲆᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⲆⵠⵠ, ΔⵠᐃᐃⲆᐃⵠ(.67 * ᐃ, true, [ⵠ[493], ⵠ[305], ⵠ[421], "#4ba8b4", "#198a82", "#6ccad7", ⵠ[123], ⵠ[33], "#7bd9e6"])));
		Ⲇᐃ[Δ.ΔⲆⲆᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ΔⵠᐃᐃⲆᐃⵠ(.67 * ᐃ, true, [ⵠ[493], ⵠ[228], ⵠ[486], "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", ⵠ[217], ⵠ[128]])));
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃᐃⵠᐃ, ᐃᐃⵠⲆⵠΔᐃ(ᐃ * .67, true, [ⵠ[493], ⵠ[305], ⵠ[421], "#9443b1", "#6f1988", "#a752c6", "#9e35be", ⵠ[373], ⵠ[408]])));
		Ⲇᐃ[Δ.ᐃⲆⵠⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃⵠⲆⵠΔᐃ(.67 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[493], ⵠ[228], ⵠ[486], "#6e43bf", "#673fa4", "#784bcc", "#845bc6", ⵠ[229], "#966be7"])));
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⵠⲆⵠΔ, ᐃⵠⲆⲆⵠⵠⵠ(ᐃ * ᐃⲆⵠΔ, Δⵠⵠⵠⵠ, [ⵠ[493], "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃⵠⲆⲆⵠⵠⵠ(ᐃ * ⵠⵠⲆΔ, true, [ⵠ[493], "#1c2026", ⵠ[486], "#7dc6d9", "#6cbacf", ⵠ[422], "#49b2cf", ⵠ[422]])));
		Ⲇᐃ[Δ.ΔⲆΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⵠⵠⵠ, ᐃᐃⵠⵠᐃ(ᐃ * ᐃᐃΔᐃ, true, [ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[361], ⵠ[516]])));
		Ⲇᐃ[Δ.ΔⲆΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ΔΔⲆⲆᐃ, ᐃᐃⵠⵠᐃ(1 * ᐃ, ⲆⵠΔⵠΔ, [ⵠ[280], ⵠ[525], ⵠ[341], ⵠ[572], ⵠ[512]])));
		Ⲇᐃ[Δ.ⲆΔΔΔΔ] = [];
		Ⲇᐃ[Δ.ⲆΔΔΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Ⲇᐃⵠⵠ, ᐃΔⲆⲆΔΔᐃ(.5 * ᐃ, ᐃⵠᐃⵠⲆ, [ⵠ[493], ⵠ[361], ⵠ[516]])));
		Ⲇᐃ[Δ.ⲆΔΔΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃᐃⵠᐃ, ᐃΔⲆⲆΔΔᐃ(ᐃ * .5, ᐃⵠⲆⵠⵠ, [ⵠ[280], ⵠ[572], ⵠ[512]])));
		Ⲇᐃ[Δ.ⵠΔᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⲆⵠⵠ, ᐃᐃΔᐃΔⲆΔ(ᐃ * ᐃⲆⵠΔ, Δⵠⵠⵠⵠ, [ⵠ[493], "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
		Ⲇᐃ[Δ.ⵠΔᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃΔᐃΔⲆΔ(ᐃ * 1, ⲆΔⲆΔᐃ, [ⵠ[493], "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠⵠΔ, ᐃᐃⵠⵠᐃ(ⵠⲆⲆ * ᐃ, true, [ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584]])));
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃⵠⵠᐃ(ⵠⲆⲆ * ᐃ, ᐃⵠᐃⵠⲆ, [ⵠ[493], ⵠ[478], ⵠ[55], ⵠ[513], ⵠ[540]])));
		Ⲇᐃ[Δ.ⲆᐃΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃⵠⵠᐃ(ΔᐃᐃⲆ * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33]])));
		Ⲇᐃ[Δ.ⲆᐃΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Δᐃᐃᐃ, ᐃᐃⵠⵠᐃ(1 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[228], ⵠ[486], ⵠ[128], ⵠ[217]])));
		Ⲇᐃ[Δ.ᐃΔⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠΔᐃⲆ, ᐃᐃⵠⵠᐃ(ᐃ * 1, true, [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373]])));
		Ⲇᐃ[Δ.ᐃΔⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Ⲇᐃⵠⵠ, ᐃᐃⵠⵠᐃ(ⵠⵠⲆΔ * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[493], ⵠ[228], ⵠ[486], ⵠ[555], ⵠ[229]])));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠΔΔⲆⲆ(.55 * ᐃ, ⲆᐃⲆᐃΔ, [ⵠ[452], ⵠ[232], ⵠ[203], "#3a3a3a"]));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠΔΔⲆⲆ(ᐃ * .55, false, ["#080707", "#133d3c", ⵠ[368], "#1b2529"]));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ].push(ⵠᐃᐃ(ⵠⲆⵠΔΔⲆⲆ(ᐃ * .8, Ⲇᐃⵠⵠᐃ, [ⵠ[452], ⵠ[232], ⵠ[203], "#3a3a3a"])));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ].push(ⵠᐃᐃ(ⵠⲆⵠΔΔⲆⲆ(.8 * ᐃ, false, [ⵠ[452], "#9f7d17", "#dab33c", "#474545"])));
		Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ].push(ⵠᐃᐃ(ⵠⲆⵠΔΔⲆⲆ(.8 * ᐃ, ΔᐃⲆⵠⲆ, [ⵠ[452], "#73590d", "#a88a2c", "#2a2828"])));
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆⲆᐃ].push(Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ][0]);
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆⲆᐃ].push(Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ][ⵠⲆⲆᐃ]);
		Ⲇᐃ[Δ.ᐃᐃΔΔⲆⲆᐃ].push(Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ][0]);
		Ⲇᐃ[Δ.ⲆΔⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔⲆᐃΔΔⲆ(.06 * ᐃ, ᐃⵠᐃⵠᐃ, [ⵠ[452], ⵠ[203], ⵠ[232]]));
		Ⲇᐃ[Δ.ⲆΔⲆᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔⲆᐃΔΔⲆ(.06 * ᐃ, ⵠⲆⲆⵠΔ, [ⵠ[280], ⵠ[368], "#133d3c"]));
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆΔ].push(ⵠᐃᐃ(ⵠΔⲆᐃΔΔⲆ(ᐃ * .08, ΔⲆⵠᐃⵠ, [ⵠ[452], ⵠ[203], ⵠ[232]])));
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆΔ].push(ⵠᐃᐃ(ⵠΔⲆᐃΔΔⲆ(ᐃ * .08, false, [ⵠ[452], "#e2bd4e", "#a38018"])));
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆΔ].push(ⵠᐃᐃ(ⵠΔⲆᐃΔΔⲆ(ᐃ * .08, ΔᐃΔᐃᐃ, [ⵠ[452], "#b0902e", "#634d09"])));
		Ⲇᐃ[Δ.ΔⵠⵠⵠΔ] = ΔᐃΔᐃ(1.5, [{
			f: ⵠⲆᐃⵠΔᐃΔ,
			x: Ⲇᐃⵠᐃ,
			y: 0,
			a: ⲆᐃⲆⲆ,
			r: 0,
			c: [ⵠ[452], "#178a99", "#0a6372", "#03282e"]
		}], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9);
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⲆΔⵠⵠⵠⲆ(ᐃ * .8, true, [ⵠ[94], ⵠ[272]]));
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⲆΔⵠⵠⵠⲆ(ᐃ * .8, ⲆΔᐃⲆⲆ, ["#98ede3", "#94f2e7"]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆΔⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔᐃΔⵠⲆⲆ(ᐃ * .8, true, [ⵠ[427], ⵠ[283], "#418ba5", "#59b8ce"]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔᐃΔⵠⲆⲆ(ᐃ * .8, ⵠⲆΔⲆⵠ, [ⵠ[465], ⵠ[568], "#3fa097", "#90ddd9"]));
		Ⲇᐃ[Δ.ΔᐃⵠΔⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠΔⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠᐃⵠⵠⵠⲆΔ(.8 * ᐃ, true, [ⵠ[427], ⵠ[283]]));
		Ⲇᐃ[Δ.ΔᐃⵠΔⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠᐃⵠⵠⵠⲆΔ(ᐃ * .8, ⲆⲆᐃⵠⲆ, [ⵠ[568], ⵠ[572]]));
		Ⲇᐃ[Δ.ⲆΔⵠΔΔ] = [];
		Ⲇᐃ[Δ.ⲆΔⵠΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃΔⵠΔⲆᐃ(ᐃ * .8, true, [ⵠ[94], ⵠ[272], "#1c2528", ⵠ[427], ⵠ[283], "#959da0", "#697072", "#929da0", "#afb9bc"]));
		Ⲇᐃ[Δ.ⲆΔⵠΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃΔⵠΔⲆᐃ(.8 * ᐃ, ΔᐃⲆⲆᐃ, ["#98ede3", "#94f2e7", ⵠ[512], ⵠ[465], ⵠ[568], ⵠ[572], "#2d484f", "#546d6d", "#597b84"]));
		Ⲇᐃ[Δ.ⵠΔᐃΔΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃΔΔᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⲆⲆⲆᐃⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔᐃΔΔᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆⵠⲆⵠᐃᐃ;
		Ⲇᐃ[Δ.ΔⵠΔᐃⵠΔⲆ] = [];
		Ⲇᐃ[Δ.ΔⵠΔᐃⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠⵠᐃᐃΔᐃⵠ;
		Ⲇᐃ[Δ.ΔⵠΔᐃⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃⲆᐃⵠⵠΔⲆ;
		Ⲇᐃ[Δ.ⲆᐃΔΔᐃᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔΔᐃᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆΔⲆΔᐃΔ;
		Ⲇᐃ[Δ.ⲆᐃΔΔᐃᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠⵠⲆⵠⲆⲆ;
		Ⲇᐃ[Δ.ΔΔΔΔΔ] = [];
		Ⲇᐃ[Δ.ΔΔΔΔΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃⵠⵠⵠΔ;
		Ⲇᐃ[Δ.ΔΔΔΔΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⵠΔⲆΔᐃΔ;
		Ⲇᐃ[Δ.ΔᐃⲆⵠⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃⲆⵠⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃᐃᐃᐃⲆᐃⵠ;
		Ⲇᐃ[Δ.ΔᐃⲆⵠⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆΔⵠⲆⵠᐃ;
		Ⲇᐃ[Δ.ΔⲆᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃΔⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆΔⲆⲆΔᐃⲆ;
		Ⲇᐃ[Δ.ΔⲆᐃΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔΔⲆᐃᐃⵠᐃ;
		Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⵠᐃΔⲆᐃ;
		Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⵠᐃⲆⲆᐃ;
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃΔΔΔᐃ;
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠᐃⲆᐃⲆΔⲆ;
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃⲆᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠⵠΔΔΔᐃ;
		Ⲇᐃ[Δ.ⵠⲆⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ΔΔⲆᐃⲆⲆᐃ;
		Ⲇᐃ[Δ.ⵠⲆⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ΔⲆᐃⲆⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃΔⲆⲆⵠⵠΔ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⲆΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠᐃᐃᐃⲆᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠΔΔⲆΔᐃⲆ;
		Ⲇᐃ[Δ.ⲆⵠⲆᐃΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆᐃΔΔᐃ][Δ.ΔⲆΔ] = ⵠᐃ.ⲆⲆⵠⵠⲆᐃΔ;
		Ⲇᐃ[Δ.ⲆⵠⲆᐃΔΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃ.ⵠⵠᐃⵠᐃΔΔ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ΔⲆᐃΔⵠⲆᐃ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ᐃᐃⵠⲆΔΔΔ;
		Ⲇᐃ[Δ.ᐃΔᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ⵠΔⲆⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ᐃΔᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆᐃᐃᐃᐃᐃⲆ;
		Ⲇᐃ[Δ.ΔⵠⲆΔᐃΔⲆ] = ⵠᐃ.ΔⵠⲆΔᐃΔⲆ;
		Ⲇᐃ[Δ.ΔⵠⲆΔᐃ] = [], Ⲇᐃ[Δ.ΔⵠⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃᐃΔⵠΔΔΔ(.75 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[493], ⵠ[390], ⵠ[314], ⵠ[ⲆⵠⲆⲆⲆⲆⵠ]]));
		Ⲇᐃ[Δ.ΔⵠⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃᐃΔⵠΔΔΔ(.75 * ᐃ, ΔⲆΔΔⵠ, [ⵠ[280], ⵠ[478], ⵠ[506], ⵠ[168]]));
		Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠⲆᐃ] = ⵠᐃᐃ(ᐃⲆΔⵠⵠΔⵠ(.3 * ᐃ, [ⵠ[126], ⵠ[143]], 0));
		Ⲇᐃ[Δ.ⲆⵠΔⲆᐃᐃᐃ] = ⵠᐃᐃ(ᐃⲆΔⵠⵠΔⵠ(.3 * ᐃ, [ⵠ[126], ⵠ[143]], ᐃⵠⵠ));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠΔΔΔ] = ⵠᐃᐃ(ᐃᐃΔⲆΔΔⲆΔᐃ(ᐃ * .6, [ⵠ[126], ⵠ[143]]));
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(.7 * ᐃ, [ⵠ[126], ⵠ[143], "#165b2b", ⵠ[390], ⵠ[143]], ΔⵠⲆⲆ)));
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], ᐃΔⵠⵠ)));
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(.7 * ᐃ, ["#092a14", "#186733", "#124a23", ⵠ[390], "#1b6735"], Ⲇᐃⵠᐃ)));
		Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃⲆ] = [];
		var ⵠⵠ = ⵠᐃᐃ(ⵠᐃⲆᐃΔ(.7 * ᐃ, [ⵠ[496], ⵠ[0], ⵠ[496], "#2e2410", ⵠ[Δⵠⵠ]], 0));
		Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃⲆ].push(ⵠⵠ);
		Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃⲆ].push(ⵠⵠ);
		Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃⲆ].push(ⵠⵠ);
		Ⲇᐃ[Δ.ⲆⵠⵠᐃⲆⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠᐃⲆⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, [ⵠ[126], ⵠ[143], "#165b2b", ⵠ[390], ⵠ[143]], ⲆΔⵠⲆ)));
		Ⲇᐃ[Δ.ⲆⵠⵠᐃⲆⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
		Ⲇᐃ[Δ.ⲆⵠⵠᐃⲆⲆΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(.7 * ᐃ, ["#092a14", "#186733", "#124a23", ⵠ[390], "#1b6735"], 1)));
		Ⲇᐃ[Δ.ⵠⲆᐃᐃⲆⵠᐃ] = ⵠᐃᐃ(ᐃⵠⲆⲆⲆⲆⲆΔⲆ(ᐃ * .3, [ⵠ[557]]));
		Ⲇᐃ[Δ.ΔⵠⲆⲆΔⵠᐃ] = ⵠᐃᐃ(ΔⲆⵠⲆⲆⲆΔΔᐃ(ᐃ * .3, [ⵠ[557]]));
		Ⲇᐃ[Δ.ⵠΔⲆⵠⵠᐃΔ] = ⵠᐃᐃ(ᐃⲆΔⵠⵠΔⵠ(ᐃ * .4, [ⵠ[ᐃⵠⵠΔⲆ], ⵠ[557]], 0));
		Ⲇᐃ[Δ.ΔⵠⵠⵠⵠᐃⲆ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI / 5, ⲆⲆⲆᐃᐃⲆⵠⵠᐃ(ᐃ * .2, [ⵠ[557]])));
		Ⲇᐃ[Δ.ⲆᐃⲆΔⵠ] = [], Ⲇᐃ[Δ.ⲆᐃⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆΔⵠᐃΔΔⵠ(.85 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
		Ⲇᐃ[Δ.ⲆᐃⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆΔⵠᐃΔΔⵠ(.85 * ᐃ, ΔᐃⲆⲆᐃ, [ⵠ[493], "#4e4e93", "#393977", "#444187", ⵠ[451], "#277a74", "#7da8db"]));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, [ⵠ[496], ⵠ[ⵠᐃⲆᐃ], ⵠ[496], "#2e2410", ⵠ[0]], 1)));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⵠΔ].push(ⵠᐃᐃ(ⵠᐃⲆᐃΔ(ᐃ * .7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
		Ⲇᐃ[Δ.ᐃⲆΔᐃⵠ] = [], Ⲇᐃ[Δ.ᐃⲆΔᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⵠⵠᐃ(ᐃ * .37, ⵠⵠⵠΔΔ, [ⵠ[345], ⵠ[413], ⵠ[444]]));
		Ⲇᐃ[Δ.ᐃⲆΔᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆΔⵠⵠⵠᐃ(.37 * ᐃ, ⲆⲆᐃⵠⲆ, ["#1b1e30", "#161921", "#252f3e"]));
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠ] = [], Ⲇᐃ[Δ.ᐃᐃΔΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔᐃΔΔᐃⵠ(ᐃ * .17, ᐃⵠⲆⵠⵠ, [ⵠ[345], ⵠ[413], ⵠ[444], "#1b1a25", "#d62c0e"]));
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔᐃΔΔᐃⵠ(ᐃ * .17, true, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
		Ⲇᐃ[Δ.ⲆΔⵠⲆⲆ] = [], Ⲇᐃ[Δ.ⲆΔⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠΔΔᐃ(ᐃ * .55, true, [ⵠ[471], "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
		Ⲇᐃ[Δ.ⲆΔⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠΔΔᐃ(ᐃ * .55, ᐃⵠⲆⵠⵠ, [ⵠ[471], "#216661", "#134945", "#2b8079", "#17504c"], ᐃⵠ));
		Ⲇᐃ[Δ.ΔΔᐃᐃΔ] = [], Ⲇᐃ[Δ.ΔΔᐃᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠΔΔᐃ(.55 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[471], "#8c7654", ⵠ[542], "#a88e6c", ⵠ[542], "#705845"], 0));
		Ⲇᐃ[Δ.ΔΔᐃᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠⵠⵠΔΔᐃ(ᐃ * .55, true, [ⵠ[471], "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
		Ⲇᐃ[Δ.ᐃᐃⵠᐃⵠ] = [], Ⲇᐃ[Δ.ᐃᐃⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(ᐃ * .2, true, [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#49B669", "#19994C", "#71C187"]));
		Ⲇᐃ[Δ.ᐃᐃⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(.2 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[488], "#114933", "#1b6656", ⵠ[212], "#3db76f", "#118254", "#40c696"]));
		Ⲇᐃ[Δ.ᐃⵠΔⵠⲆ] = [], Ⲇᐃ[Δ.ᐃⵠΔⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(ᐃ * .2, true, [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#C45727", "#994617", "#DB9358"]));
		Ⲇᐃ[Δ.ᐃⵠΔⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(ᐃ * .2, ⲆⵠΔⵠΔ, [ⵠ[488], "#114933", "#1b6656", ⵠ[212], "#69b681", "#509a75", "#7ec387"]));
		Ⲇᐃ[Δ.ⵠᐃⵠᐃᐃ] = [], Ⲇᐃ[Δ.ⵠᐃⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(ᐃ * .2, ΔᐃⲆΔⲆ, [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#2792C1", "#196599", "#59C0D8"]));
		Ⲇᐃ[Δ.ⵠᐃⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆᐃⲆᐃⲆΔ(ᐃ * .2, ⲆⲆᐃⵠⲆ, [ⵠ[488], "#114933", "#1b6656", ⵠ[212], "#19899e", "#16688b", "#4ea3c7"]));
		Ⲇᐃ[Δ.ᐃᐃⲆΔⵠ] = [], Ⲇᐃ[Δ.ᐃᐃⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⵠⵠᐃⵠⲆᐃ(.24 * ᐃ, ΔᐃⲆΔⲆ, [ⵠ[252], "#b03431", "#94312d", "#bd3c33", ⵠ[385]]));
		Ⲇᐃ[Δ.ᐃᐃⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⵠⵠᐃⵠⲆᐃ(.24 * ᐃ, true, [ⵠ[252], "#1b103e", "#190f3b", "#261a4e", ⵠ[531]]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃ] = [], Ⲇᐃ[Δ.ⵠᐃⲆΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃΔᐃᐃⵠᐃ(.32 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[493], "#cae9eb", "#75bcae", ⵠ[142], "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃΔᐃᐃⵠᐃ(ᐃ * .32, ᐃⵠⲆⵠⵠ, [ⵠ[493], "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠⵠΔ, ΔⲆΔⵠΔⲆⵠ(.9 * ᐃ, true, [ⵠ[493], "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠⵠΔ, ΔⲆΔⵠΔⲆⵠ(ᐃ * .9, true, [ⵠ[493], "#18332e", "#112320", ⵠ[422], "#49b2cf"])));
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ΔⲆΔⵠΔⲆⵠ(1 * ᐃ, ᐃⵠᐃⵠⲆ, [undefined, ΔⲆⵠᐃᐃ, undefined, "#c8efef", "#c8efef"])));
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⲆⵠⵠ, ΔⲆΔⵠΔⲆⵠ(ᐃΔⲆⵠ * ᐃ, true, [undefined, undefined, undefined, ⵠ[422], ⵠ[422]])));
		Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ].push(ⵠᐃᐃ(ⵠⵠᐃⲆⵠᐃΔ(.3 * ᐃ, ᐃⲆⲆΔΔⵠⲆ, [ⵠ[493], ⵠ[387], ⵠ[225], "#704821", ⵠ[63], ⵠ[25]], 0)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ].push(ⵠᐃᐃ(ⵠⵠᐃⲆⵠᐃΔ(ᐃ * .3, true, [ⵠ[493], ⵠ[387], ⵠ[225], "#704821", ⵠ[63], ⵠ[25]], 1)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ].push(ⵠᐃᐃ(ⵠⵠᐃⲆⵠᐃΔ(.3 * ᐃ, true, [ⵠ[493], ⵠ[387], ⵠ[225], "#704821", ⵠ[63], ⵠ[511]], 1)));
		Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ].push(ⵠᐃᐃ(ᐃⲆᐃΔⲆΔⲆ(.7 * ᐃ, [ⵠ[387], ⵠ[225], "#85592c", ⵠ[25]], 0)));
		Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ].push(ⵠᐃᐃ(ᐃⲆᐃΔⲆΔⲆ(ᐃ * .7, [ⵠ[387], ⵠ[225], "#85592c", ⵠ[25]], 1)));
		Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ].push(ⵠᐃᐃ(ᐃⲆᐃΔⲆΔⲆ(ᐃ * .7, [ⵠ[387], ⵠ[225], "#85592c", ⵠ[25]], 1)));
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠΔΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠΔΔ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(ᐃ * .4, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[25]], ΔᐃⲆΔ, ⲆⲆΔᐃ)));
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠΔΔ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(.4 * ᐃ, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[25]], ⵠⵠⲆ, 1)));
		Ⲇᐃ[Δ.ⵠⲆΔΔⵠΔΔ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(ᐃ * .4, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[511]], 1, ᐃⵠ)));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(.4 * ᐃ, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[25]], 0, 0)));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(ᐃ * .4, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[25]], ⲆⲆΔᐃ, 0)));
		Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ].push(ⵠᐃᐃ(ΔⵠⲆᐃⵠⲆⵠ(ᐃ * .4, [ⵠ[493], ⵠ[387], ⵠ[225], ⵠ[511]], ᐃⵠ, ᐃΔⵠⵠ)));
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃⲆᐃΔⵠ, ᐃᐃᐃᐃⵠ(.7 * ᐃ, ⲆΔᐃⲆⲆ, [ⵠ[493], "#6d5041", "#4f3d35", ⵠ[361], ⵠ[516], "#757575"])));
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⵠⲆⲆΔ, ᐃᐃᐃᐃⵠ(ᐃ * .7, ᐃⵠⲆⵠⵠ, [ⵠ[493], ⵠ[478], ⵠ[55], ⵠ[572], ⵠ[512], "#274352"])));
		Ⲇᐃ[Δ.ᐃᐃⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃᐃⲆᐃⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ⲆⵠΔᐃ, ᐃᐃᐃᐃⵠ(.7 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584], "#ada437"])));
		Ⲇᐃ[Δ.ᐃᐃⲆᐃⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃᐃᐃⵠ(ᐃ * .7, ⵠⲆΔⲆⵠ, [ⵠ[493], ⵠ[525], ⵠ[341], ⵠ[513], ⵠ[540], "#32916c"])));
		Ⲇᐃ[Δ.ᐃⵠΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃⵠΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃᐃᐃⵠ(ᐃ * .7, true, [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33], "#42aab8"])));
		Ⲇᐃ[Δ.ᐃⵠΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃᐃᐃⵠ(.7 * ᐃ, true, [ⵠ[493], ⵠ[228], ⵠ[486], ⵠ[128], ⵠ[217], "#49bdc6"])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃᐃᐃⵠ(.7 * ᐃ, ⲆΔⲆΔᐃ, [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373], "#9641b5"])));
		Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3, ᐃᐃᐃᐃⵠ(ᐃ * .7, true, [ⵠ[493], ⵠ[228], ⵠ[486], ⵠ[555], ⵠ[229], "#6f45c2"])));
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠⲆⲆ].push(ⵠᐃᐃ(ⵠᐃΔΔᐃΔΔ(ᐃ * .7, ["#3b330d", "#b5a118", "#c8ac16"], ⲆⵠⲆ)));
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠⲆⲆ].push(ⵠᐃᐃ(ⵠᐃΔΔᐃΔΔ(.7 * ᐃ, ["#524712", "#c7b11c", "#d9ba18"], 0)));
		Ⲇᐃ[Δ.ᐃⲆΔΔⵠⲆⲆ].push(ⵠᐃᐃ(ⵠᐃΔΔᐃΔΔ(.7 * ᐃ, ["#2a2409", "#9f8e14", "#ad9511"], ⵠⵠᐃⵠ)));
		Ⲇᐃ[Δ.ⵠⲆᐃᐃⲆⲆⵠ] = ⵠᐃᐃ(ΔᐃⲆᐃΔΔⲆⲆⵠ(1.1 * ᐃ, [ⵠ[296]]));
		Ⲇᐃ[Δ.ⵠⵠⲆΔᐃⵠⵠ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(Math.PI, ΔΔⲆᐃΔⲆᐃⲆⵠ(.9 * ᐃ, ⵠ[296])));
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠΔⵠᐃⲆⵠ(.55 * ᐃ, ᐃⵠᐃⵠⲆ, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠΔⵠᐃⲆⵠ(ᐃ * .55, true, [ⵠ[377], "#0f3f3d", ⵠ[265], "#0d2d2b", ⵠ[368], "#070d16"]));
		Ⲇᐃ[Δ.Δᐃⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.Δᐃⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(Δⵠⵠᐃⵠᐃⵠ(ᐃ * .55, ΔΔⲆⲆⲆ, [ⵠ[458], ⵠ[210], "#573f29", ⵠ[251]]));
		Ⲇᐃ[Δ.Δᐃⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(Δⵠⵠᐃⵠᐃⵠ(.55 * ᐃ, true, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃᐃΔΔᐃᐃ(.6 * ᐃ, ⵠⲆⵠⵠⲆ, [ⵠ[458], "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", ⵠ[42], "#747474", "#969696", ⵠ[319]]));
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃᐃΔΔᐃᐃ(ᐃ * .6, true, [ⵠ[280], "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", ⵠ[456]]));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃᐃΔⲆⲆᐃ(.58 * ᐃ, ΔᐃⲆΔⲆ, ["#dbce71", ⵠ[584], ⵠ[85]]));
		Ⲇᐃ[Δ.ⵠⲆⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃᐃΔⲆⲆᐃ(.58 * ᐃ, ΔᐃⲆΔⲆ, [ⵠ[488], "#15543c", ⵠ[212]]));
		Ⲇᐃ[Δ.ᐃΔⵠⲆⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⵠⲆΔΔᐃⲆ(ᐃ * .69, ᐃⵠᐃⵠⲆ, ["#717171", "#485252", ⵠ[42], "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
		Ⲇᐃ[Δ.ᐃΔⵠⲆⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⵠⲆΔΔᐃⲆ(ᐃ * .69, true, [ⵠ[383], "#092121", ⵠ[265], ⵠ[451], "#277a74", "#1f665f", ⵠ[568], ⵠ[465]]));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆᐃᐃᐃᐃΔ(ᐃ * 1.3, [ⵠ[165], "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", ⵠ[165], ⵠ[65]])));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⲆΔ(ᐃ * 1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", ⵠ[65]])));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃΔᐃΔΔⵠ(ᐃ * 1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆᐃᐃᐃᐃΔ(ᐃ * 1.3, [ⵠ[252], "#0e3638", ⵠ[418], ⵠ[46], ⵠ[418], "#1d5559", ⵠ[46], "#48a8aa", ⵠ[409], "#56afac"])));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⲆⲆᐃⵠⲆΔ(ᐃ * 1.5, [ⵠ[252], "#0e3638", ⵠ[418], ⵠ[46], "#48a8aa", "#56afac"])));
		Ⲇᐃ[Δ.ΔΔⵠᐃᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃΔᐃΔΔⵠ(ᐃ * 1.5, [ⵠ[252], "#0e3638", ⵠ[418], ⵠ[46], ⵠ[409], "#56afac"])));
		Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆΔⵠΔᐃ(1 * ᐃ, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", ⵠ[142], "#57aba6", ⵠ[142]]));
		Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆΔⵠΔᐃ(ΔᐃᐃⲆ * ᐃ, ["#050505", "#1d3a38", "#0b514a", ⵠ[241], "#327570", "#1d3a38", ⵠ[142], "#0b514a", "#63afa9"]));
		Ⲇᐃ[Δ.ΔᐃⲆΔⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ΔᐃⲆΔⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔᐃⲆⵠΔᐃ(ᐃ * ΔᐃⵠΔ, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
		Ⲇᐃ[Δ.ΔᐃⲆΔⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔᐃⲆⵠΔᐃ(1 * ᐃ, ["#050505", "#327570", "#021724", ⵠ[241]]));
		Ⲇᐃ[Δ.ΔΔᐃᐃΔΔⲆ] = [];
		Ⲇᐃ[Δ.ΔΔᐃᐃΔΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔΔⵠⲆᐃⲆ(ᐃ * 1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
		Ⲇᐃ[Δ.ΔΔᐃᐃΔΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔΔⵠⲆᐃⲆ(ΔᐃᐃⲆ * ᐃ, ["#050505", "#327570", "#021724", ⵠ[241]]));
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃⵠ][Δ.ΔⲆΔ] = [ⵠᐃ.ᐃⲆΔᐃⲆⵠⵠ, ⵠᐃ.ⵠΔⲆⲆΔⵠⵠ, ⵠᐃ.ⲆⲆⵠΔΔΔⲆ, ⵠᐃ.ᐃⵠⲆᐃᐃⲆΔ, ⵠᐃ.ᐃΔΔⲆΔΔⲆ, ⵠᐃ.ᐃⵠⵠⵠΔⵠΔ, ⵠᐃ.ⲆΔΔⵠᐃⵠᐃ, ⵠᐃ.ᐃⵠᐃᐃⲆΔᐃ, ⵠᐃ.ⵠΔᐃΔΔⵠΔ, ⵠᐃ.ΔΔⲆΔⲆᐃᐃ, ⵠᐃ.ⵠⵠⵠⲆⵠⲆⲆ, ⵠᐃ.ⲆΔⵠΔⲆΔⲆ, ⵠᐃ.ⲆⵠΔⵠΔΔⵠ, ⵠᐃ.ⵠⲆᐃⵠᐃᐃⲆ, ⵠᐃ.ΔΔⲆⲆⵠΔᐃ, ⵠᐃ.ⵠΔΔⲆΔⵠΔ, ⵠᐃ.ΔⵠⲆⲆⲆᐃⲆ, ⵠᐃ.ΔⲆⵠⲆⲆⵠⲆ, ⵠᐃ.ᐃΔⵠⵠⲆⵠᐃ, ⵠᐃ.ⲆΔⵠᐃᐃⵠⲆ, ⵠᐃ.ⵠⲆⲆᐃⵠⵠᐃ, ⵠᐃ.ΔⲆⵠⲆⲆᐃⵠ, ⵠᐃ.ᐃⲆⵠΔΔᐃᐃ, ⵠᐃ.ᐃⲆⵠⲆᐃⲆΔ, ⵠᐃ.ΔΔᐃⲆⲆⲆᐃ, ⵠᐃ.ⲆⲆΔⲆⵠᐃΔ, ⵠᐃ.ΔᐃⲆⲆΔΔⵠ, ⵠᐃ.ⵠⲆΔⵠᐃΔΔ, ⵠᐃ.ⲆⵠⲆᐃΔⲆΔ, ⵠᐃ.ⵠⵠⵠⲆᐃⵠⲆ, ⵠᐃ.ⲆⵠⵠΔᐃᐃⲆ, ⵠᐃ.ΔⲆⲆΔΔᐃⵠ, ⵠᐃ.ΔΔΔⵠΔΔⵠ, ⵠᐃ.ΔᐃᐃⲆΔᐃⵠ, ⵠᐃ.ⵠΔⵠΔⲆⲆᐃ, ⵠᐃ.ⵠᐃⵠΔⲆΔⵠ, ⵠᐃ.ⵠΔⲆᐃΔΔⵠ, ⵠᐃ.ⵠᐃⲆΔⵠΔᐃ, ⵠᐃ.ⲆΔⲆⵠⲆⵠᐃ, ⵠᐃ.ᐃⲆⵠⲆⲆΔᐃ, ⵠᐃ.ⲆᐃᐃⵠⵠⲆⲆ, ⵠᐃ.ⵠⵠΔᐃⲆΔΔ, ⵠᐃ.ΔⲆⵠⲆⵠⲆⲆ, ⵠᐃ.ⲆⵠᐃΔᐃⵠΔ, ⵠᐃ.ΔΔⵠΔⲆⵠⵠ, ⵠᐃ.ⲆᐃΔⵠΔⵠⲆ, ⵠᐃ.Ⲇⵠᐃᐃᐃᐃᐃ, ⵠᐃ.ⵠᐃᐃᐃⵠΔᐃ, ⵠᐃ.ⵠⲆⲆⲆⲆⵠᐃ, ⵠᐃ.ⲆⵠⲆΔⵠⲆⲆ, ⵠᐃ.ΔⲆⵠⵠᐃΔⵠ, ⵠᐃ.ⲆⵠΔᐃΔᐃΔ, ⵠᐃ.ᐃᐃⲆⵠⵠⲆⲆ, ⵠᐃ.ᐃΔΔᐃⵠᐃΔ, ⵠᐃ.ΔⲆⲆᐃⵠⲆⲆ, ⵠᐃ.ΔᐃᐃᐃⲆᐃᐃ];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃⵠ][Δ.ⲆⵠΔ] = [ⵠᐃ.ⲆΔⲆᐃⲆⲆΔ, ⵠᐃ.ᐃⵠⵠᐃΔⵠⲆ, ⵠᐃ.ᐃᐃΔΔⲆᐃᐃ, ⵠᐃ.ΔΔⲆⵠΔⵠᐃ, ⵠᐃ.ⲆⲆⲆΔⵠⲆᐃ, ⵠᐃ.ⲆⵠⵠᐃΔᐃⵠ, ⵠᐃ.ᐃᐃΔΔΔΔΔ, ⵠᐃ.ᐃⵠᐃΔⵠᐃⲆ, ⵠᐃ.ⵠΔΔⵠᐃⲆᐃ, ⵠᐃ.ᐃᐃᐃⵠᐃⵠⲆ, ⵠᐃ.ᐃΔᐃᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠΔⲆΔᐃ, ⵠᐃ.ⵠⵠᐃᐃⵠⲆⵠ, ⵠᐃ.ΔⵠⲆⲆᐃΔⵠ, ⵠᐃ.ⲆⲆⲆⵠⵠᐃⲆ, ⵠᐃ.ⲆΔᐃΔⵠΔⲆ, ⵠᐃ.ⲆΔΔⵠⲆⲆᐃ, ⵠᐃ.ⵠⲆⲆⵠⲆΔΔ, ⵠᐃ.ⲆⲆⲆⵠᐃⲆᐃ, ⵠᐃ.ⵠⲆⲆⲆΔⵠΔ, ⵠᐃ.ⵠⲆᐃΔⲆⲆᐃ, ⵠᐃ.ⵠᐃᐃⲆⲆᐃⵠ, ⵠᐃ.ΔΔᐃⵠᐃΔⲆ, ⵠᐃ.ΔⵠⲆΔⲆⲆⲆ, ⵠᐃ.ᐃᐃΔΔᐃⲆⲆ, ⵠᐃ.ⲆᐃⲆⲆⵠᐃⵠ, ⵠᐃ.ᐃⲆᐃΔⲆᐃΔ, ⵠᐃ.ⵠⲆⵠΔᐃᐃΔ, ⵠᐃ.ᐃΔⲆΔΔⲆⵠ, ⵠᐃ.ⵠⵠΔᐃⵠⵠᐃ, ⵠᐃ.ⵠΔΔⲆᐃⲆΔ, ⵠᐃ.ΔⲆⲆⲆΔⲆⲆ, ⵠᐃ.ⲆⲆⲆⵠᐃⵠΔ, ⵠᐃ.ᐃⲆᐃⵠⲆΔΔ, ⵠᐃ.ᐃΔΔⲆᐃΔⲆ, ⵠᐃ.ΔᐃᐃⲆᐃΔΔ, ⵠᐃ.ᐃⵠΔᐃⵠⵠⵠ, ⵠᐃ.ᐃΔⲆⵠᐃΔᐃ, ⵠᐃ.ᐃⲆⵠᐃᐃⵠᐃ, ⵠᐃ.ⲆᐃΔⲆⵠΔⲆ, ⵠᐃ.ᐃⵠᐃⵠΔⲆᐃ, ⵠᐃ.ⲆⲆΔⲆᐃᐃⲆ, ⵠᐃ.ⲆⵠⵠΔⵠΔⵠ, ⵠᐃ.ⲆᐃⵠᐃᐃΔⵠ, ⵠᐃ.ⲆΔᐃⵠΔⵠΔ, ⵠᐃ.ΔⵠΔᐃᐃᐃᐃ, ⵠᐃ.ΔΔᐃᐃⲆΔⵠ, ⵠᐃ.ΔⲆⵠⲆⵠΔΔ, ⵠᐃ.ⵠᐃⲆⵠΔⲆⵠ, ⵠᐃ.ⵠⵠⵠᐃᐃᐃⵠ, ⵠᐃ.ᐃⵠⲆᐃⲆᐃΔ, ⵠᐃ.ⲆⵠΔⵠⵠΔⲆ, ⵠᐃ.ᐃⵠⵠᐃⲆΔᐃ, ⵠᐃ.ᐃΔⲆⲆⲆⲆⲆ, ⵠᐃ.ᐃᐃⲆⵠⲆᐃΔ, ⵠᐃ.ⲆΔⲆⵠᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(1.1 * ᐃ, ΔⲆⵠᐃⵠ, [ⵠ[9], ⵠ[462], ⵠ[334]], ΔᐃⲆΔ)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(.9 * ᐃ, false, [ⵠ[ᐃⵠⵠΔⵠ], ⵠ[462], ⵠ[334]], 1)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(1 * ᐃ, false, [ⵠ[ΔⵠᐃⲆᐃᐃΔ], ⵠ[462], ⵠ[334]], 2)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(.9 * ᐃ, false, [ⵠ[ⵠⲆᐃⵠⲆᐃⲆ], ⵠ[462], ⵠ[334]], ᐃⲆⲆΔ)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(1.1 * ᐃ, false, [ⵠ[280], ⵠ[265], ⵠ[383]], 0)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * .9, false, [ⵠ[280], ⵠ[265], ⵠ[383]], ᐃⲆⵠΔ)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃΔⲆⵠ * ᐃ, ᐃⵠᐃⵠᐃ, [ⵠ[280], ⵠ[265], ⵠ[383]], ᐃⵠΔⲆ)));
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * .9, false, [ⵠ[280], ⵠ[265], ⵠ[383]], ⵠΔⵠᐃ)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * 1.1, true, [ⵠ[ΔᐃΔⵠⲆΔⲆ], ⵠ[532], ⵠ[417]], ᐃⵠΔⲆ)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(.9 * ᐃ, ⵠⲆᐃⲆᐃ, [ⵠ[9], ⵠ[532], ⵠ[417]], ᐃⲆⲆΔ)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ⲆⲆΔᐃ * ᐃ, true, [ⵠ[9], ⵠ[532], ⵠ[417]], 2)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * .9, true, [ⵠ[ΔⲆᐃᐃΔ], ⵠ[532], ⵠ[417]], 2)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * 1.1, true, [ⵠ[280], ⵠ[265], ⵠ[383]], 2)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(.9 * ᐃ, ΔΔⲆⲆⲆ, [ⵠ[280], ⵠ[265], ⵠ[383]], 2)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ⵠᐃΔᐃ * ᐃ, true, [ⵠ[280], ⵠ[265], ⵠ[383]], ΔⲆⲆᐃ)));
		Ⲇᐃ[Δ.ΔⵠΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆⲆⵠⲆ(ᐃ * .9, ΔᐃⲆΔⵠ, [ⵠ[280], ⵠ[265], ⵠ[383]], ⵠⵠⲆᐃ)));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(ᐃ * 1.5, ⲆⵠᐃΔΔ, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(ᐃ * 1.3, false, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.1 * ᐃ, ⵠⲆⵠΔⵠ, [ⵠ[180], ⵠ[117], ⵠ[196]])));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(ᐃ * 1.5, false, [ⵠ[409], "#3e8989", "#50a09c"])));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(ᐃ * 1.3, false, [ⵠ[409], "#3e8989", "#50a09c"])));
		Ⲇᐃ[Δ.ⵠⲆΔΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃⲆⲆⲆ(1.1 * ᐃ, ⵠⲆⵠΔⵠ, [ⵠ[409], "#3e8989", "#50a09c"])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(1.1 * ᐃ, ΔΔᐃⵠⵠ, [ⵠ[207], "#70e0dd", "#95efea"])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * .9, ⲆᐃⲆᐃΔ, [ⵠ[207], "#70e0dd", "#95efea"])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * .7, ⲆΔᐃⵠⲆ, [ⵠ[207], "#70e0dd", "#95efea"])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * 1.1, ⲆΔᐃⵠⲆ, [ⵠ[207], "#47b2ac", ⵠ[127]])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * .9, ⵠΔⲆᐃⲆ, [ⵠ[207], "#47b2ac", ⵠ[127]])));
		Ⲇᐃ[Δ.ⵠΔⲆΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⵠⵠⲆⵠ(ᐃ * .7, ᐃⵠⲆΔⵠ, [ⵠ[207], "#47b2ac", ⵠ[127]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(ᐃ * 1.7, true, [ⵠ[98], ⵠ[329], ⵠ[297]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(1.5 * ᐃ, true, [ⵠ[98], ⵠ[329], ⵠ[297]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(ᐃ * 1.3, true, [ⵠ[98], ⵠ[329], ⵠ[297]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(ᐃ * 1.7, true, [ⵠ[98], "#41aaa0", ⵠ[127]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(ᐃ * 1.5, true, [ⵠ[98], "#41aaa0", ⵠ[127]])));
		Ⲇᐃ[Δ.ⲆⵠΔⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ᐃᐃᐃⲆⲆΔⲆ(1.3 * ᐃ, ⵠⲆᐃⵠⵠ, [ⵠ[98], "#41aaa0", ⵠ[127]])));
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆΔᐃ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆΔᐃ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆΔᐃ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ᐃΔⵠⲆⵠⲆⵠ(ᐃ, ["#2d53c4"])));
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆΔᐃ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ᐃΔⵠⲆⵠⲆⵠ(ᐃ, ["#2d53c4"])));
		Ⲇᐃ[Δ.ⲆΔᐃΔⲆⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃΔⲆⲆΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃΔⲆⲆΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃΔⲆⲆΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ᐃΔⵠⲆⵠⲆⵠ(ᐃ, ["#c4912d"])));
		Ⲇᐃ[Δ.ⲆΔᐃΔⲆⲆΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ᐃΔⵠⲆⵠⲆⵠ(ᐃ, ["#c4912d"])));
		Ⲇᐃ[Δ.ⵠⵠΔΔⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠΔΔⵠⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#414040"]));
		Ⲇᐃ[Δ.ⵠⵠΔΔⵠⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#153635"]));
		Ⲇᐃ[Δ.Δⵠⵠⵠⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.Δⵠⵠⵠⵠᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(1 * ᐃ, false, [ⵠ[16], ⵠ[ⵠΔⵠᐃⵠ], ⵠ[449], ⵠ[449], ⵠ[16], ⵠ[449]]));
		Ⲇᐃ[Δ.Δⵠⵠⵠⵠᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⵠᐃⲆⵠΔᐃ(ⲆᐃⲆⲆ * ᐃ, false, [ⵠ[37], ⵠ[37], ⵠ[323], ⵠ[323], ⵠ[37], ⵠ[323]]));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠΔⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ΔᐃⵠΔ * ᐃ, false, [ⵠ[16], ⵠ[16], ⵠ[449], ⵠ[449], ⵠ[16], ⵠ[449]]));
		Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ⲆⲆΔᐃ * ᐃ, false, [ⵠ[37], ⵠ[37], ⵠ[323], ⵠ[323], ⵠ[37], ⵠ[323]]));
		Ⲇᐃ[Δ.ⲆⲆⲆΔΔⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆΔΔⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(1 * ᐃ, ΔΔᐃⵠⵠ, [ⵠ[ⲆⲆΔᐃⵠΔᐃ], ⵠ[16], ⵠ[449], ⵠ[449], ⵠ[ᐃᐃᐃⲆⲆ], ⵠ[449]]));
		Ⲇᐃ[Δ.ⲆⲆⲆΔΔⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔᐃⲆ(ᐃ * ΔᐃᐃⲆ, false, [ⵠ[37], ⵠ[37], ⵠ[323], ⵠ[323], ⵠ[37], ⵠ[323]]));
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(1 * ᐃ, ΔⲆᐃⲆΔ, [ⵠ[16], ⵠ[ⲆⲆΔᐃⵠΔᐃ], ⵠ[449], ⵠ[449], ⵠ[ⲆⲆⵠᐃⲆ], ⵠ[449]]));
		Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⵠⵠΔΔΔ(ΔΔᐃⵠ * ᐃ, ⵠⲆⲆⵠΔ, [ⵠ[37], ⵠ[37], ⵠ[323], ⵠ[323], ⵠ[37], ⵠ[323]]));
		Ⲇᐃ[Δ.ᐃΔΔⵠΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔΔⵠΔⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(ᐃⵠⵠ * ᐃ, false, [ⵠ[16], ⵠ[16], ⵠ[449], ⵠ[449], ⵠ[16], ⵠ[449]]));
		Ⲇᐃ[Δ.ᐃΔΔⵠΔⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃⵠᐃⲆᐃⲆ(ᐃ * ⲆΔⵠⲆ, ⲆᐃⲆᐃΔ, [ⵠ[37], ⵠ[37], ⵠ[323], ⵠ[323], ⵠ[37], ⵠ[323]]));
		Ⲇᐃ[Δ.ᐃⲆΔΔΔ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔⵠⲆᐃᐃⵠ(.9 * ᐃ, [ⵠ[98], ⵠ[142], "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
		Ⲇᐃ[Δ.ᐃⲆΔΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔⵠⲆᐃᐃⵠ(.9 * ᐃ, [ⵠ[207], "#1a847f", ⵠ[241], "#131919", "#01333a", "#b6f2db"]));
		Ⲇᐃ[Δ.ⵠⵠⲆⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⲆΔᐃⲆΔⵠ(ᐃ * .9, [ⵠ[98], ⵠ[142], "#c41c50", "#c63450", ⵠ[142], "#f7e7f0", "#2b2d2d"]));
		Ⲇᐃ[Δ.ⵠⵠⲆⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⲆΔᐃⲆΔⵠ(ᐃ * .9, [ⵠ[207], "#1a847f", ⵠ[241], "#01333a", ⵠ[142], "#b6f2db", "#2b2d2d"]));
		Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ] = [];
		for (var ᐃⲆ = 0; 2 > ᐃⲆ; ᐃⲆ++) {
			Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ][ᐃⲆ] = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ][ᐃⲆ].width = 193;
			Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ][ᐃⲆ].height = 193;
			Ⲇᐃ[Δ.ⲆⲆⲆᐃΔ][ᐃⲆ] = Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ][ᐃⲆ].getContext(ⵠ[140]);
			Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ][ᐃⲆ] = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ][ᐃⲆ].width = 600;
			Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ][ᐃⲆ].height = 600;
			Ⲇᐃ[Δ.ⵠⵠᐃⵠΔ][ᐃⲆ] = Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ][ᐃⲆ].getContext(ⵠ[140])
		}
		Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠⵠⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#c8e0de"]));
		Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠⵠⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#147071"]));
		Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#231912"]));
		Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#021719"]));
		Ⲇᐃ[Δ.ΔⵠΔᐃᐃΔⵠ] = ⵠᐃᐃ(ᐃⲆⵠᐃⵠΔⲆⵠᐃ(ᐃ * .5, [ⵠ[296]]));
		Ⲇᐃ[Δ.ΔᐃⲆΔᐃΔⲆ] = ⵠᐃᐃ(ⲆᐃⵠΔᐃⵠⲆⵠΔ(ᐃ * .9, ⵠ[296]));
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆᐃⲆ] = ⵠᐃᐃ(ΔⲆⵠᐃⵠⲆΔⲆᐃ(ᐃ * .9, ⵠ[296]));
		Ⲇᐃ[Δ.ᐃⵠᐃᐃΔΔΔ] = ⵠᐃᐃ(ΔΔⲆⲆΔΔⲆᐃΔ(1 * ᐃ, [ⵠ[296]]));
		Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃⲆⲆ] = ⵠᐃᐃ(ΔᐃⵠⵠⲆⲆᐃΔⲆ(.8 * ᐃ, ⵠ[296]));
		Ⲇᐃ[Δ.ⵠⵠΔΔⵠᐃⲆ] = ⵠᐃᐃ(ᐃⲆⵠΔⲆⲆⵠᐃΔ(.8 * ᐃ, ⵠ[296]));
		Ⲇᐃ[Δ.ⵠⲆᐃⵠⵠⵠⵠ] = ⵠᐃᐃ(ⲆⲆΔΔΔᐃΔⲆΔ(ᐃ * .9, ⵠ[296]));
		Ⲇᐃ[Δ.ΔᐃⲆⲆ] = ⵠᐃᐃ(ⵠᐃⲆⲆΔⵠⲆ(ᐃ * .6, ⵠ[296]));
		Ⲇᐃ[Δ.ᐃⵠΔᐃⲆ] = ⵠᐃᐃ(ⵠᐃⲆⲆΔⵠⲆ(.6 * ᐃ, "#1CE7E0"));
		Ⲇᐃ[Δ.Ⲇⵠⵠⵠⵠⵠⵠ] = ⵠᐃᐃ(ⵠᐃⲆⲆΔⵠⲆ(.6 * ᐃ, "#DBE71C"));
		Ⲇᐃ[Δ.ᐃⵠⲆⲆⲆⵠⵠ] = ⵠᐃᐃ(ⵠᐃⲆⲆΔⵠⲆ(ᐃ * .6, "#00BB00"));
		Ⲇᐃ[Δ.ΔᐃⵠΔⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠΔⲆΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#dac291"]));
		Ⲇᐃ[Δ.ΔᐃⵠΔⲆΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#0D423D"]));
		Ⲇᐃ[Δ.ⵠⲆΔᐃᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔᐃᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#dac291"]));
		Ⲇᐃ[Δ.ⵠⲆΔᐃᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆᐃΔⵠΔ(ᐃ, ["#0D423D"]));
		Ⲇᐃ[Δ.ΔᐃᐃΔⵠΔᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃᐃΔⵠΔᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⲆⵠⵠᐃᐃΔ(.3 * ᐃ, ΔΔⲆⲆⲆ, [ⵠ[74], "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
		Ⲇᐃ[Δ.ΔᐃᐃΔⵠΔᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⲆⵠⵠᐃᐃΔ(.3 * ᐃ, ⵠⵠⵠⵠΔⵠⲆ, [ⵠ[74], ⵠ[44], ⵠ[456], "#245d5d", "#1f5454", ⵠ[492]]));
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⲆⲆⵠⵠᐃᐃΔ(ᐃ * .3, ᐃⵠᐃⵠⲆ, [ⵠ[74], "#717273", "#606162", "#a09f9f", "#878787", ⵠ[319]]));
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⲆⲆⵠⵠᐃᐃΔ(ᐃ * .3, ⵠⲆΔⲆⵠ, [ⵠ[74], ⵠ[44], ⵠ[456], "#245d5d", "#1f5454", "#0b2121"]));
		Ⲇᐃ[Δ.ⵠΔΔⲆⵠ] = [ⵠᐃᐃ(ⵠⵠΔⲆᐃᐃⵠ(ᐃ, true, [ⵠ[248], ⵠ[287], ⵠ[69], ⵠ[29], ⵠ[118], ⵠ[92], ⵠ[526]]))];
		Ⲇᐃ[Δ.ᐃⲆᐃᐃⵠ] = [ⵠᐃᐃ(ⵠⵠΔⲆᐃᐃⵠ(ᐃ, true, [ⵠ[248], ⵠ[287], ⵠ[69], ⵠ[29], ⵠ[118], ⵠ[92], ⵠ[526]]))];
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔᐃⲆΔΔΔⲆ(ᐃ * 1, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔⲆᐃⲆΔⵠⵠ(ΔΔᐃⵠ * ᐃ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃᐃⵠⲆⵠⵠ(1 * ᐃ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ΔᐃⵠᐃⵠⲆⲆ(ᐃ * ⲆᐃⲆⲆ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆⲆᐃᐃᐃⵠⵠ(ᐃ * ᐃⲆⵠΔ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠΔΔΔⲆⵠⲆ(1 * ᐃ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠⵠΔⲆⲆⵠ(1 * ᐃ, [ⵠ[224]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔᐃⲆΔΔΔⲆ(1 * ᐃ, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔⲆᐃⲆΔⵠⵠ(1 * ᐃ, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃᐃⵠⲆⵠⵠ(ᐃ * 1, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ΔᐃⵠᐃⵠⲆⲆ(ⵠⵠⲆΔ * ᐃ, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆⲆᐃᐃᐃⵠⵠ(1 * ᐃ, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠΔΔΔⲆⵠⲆ(ᐃ * 1, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠⵠΔⲆⲆⵠ(ᐃ * ᐃΔⲆⵠ, [ⵠ[492]])));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.7 * ᐃ, ["#FBEFBC"], ΔⲆᐃⲆ)));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.9, ["#FBEFBC"], ᐃΔⲆⵠ)));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.7 * ᐃ, ["#FBEFBC"], 2)));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.7 * ᐃ, ["#0F4C48"], ΔᐃⲆΔ)));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.9, ["#0F4C48"], 1)));
		Ⲇᐃ[Δ.ᐃΔΔΔΔ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.7, ["#0F4C48"], ⵠⵠΔⲆ)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.8, [ⵠ[524]], ⲆⲆⲆ)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 2, [ⵠ[524]], ΔΔᐃᐃ)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.8 * ᐃ, [ⵠ[524]], 2)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.8 * ᐃ, [ⵠ[191]], ⲆΔᐃ)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * ΔᐃⵠⲆ, [ⵠ[191]], ΔᐃᐃⲆ)));
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.8 * ᐃ, [ⵠ[191]], ⵠᐃᐃⵠ)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.9, [ⵠ[356]], 0)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(2.1 * ᐃ, [ⵠ[356]], ᐃⵠ)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.9, [ⵠ[356]], ⵠⲆΔΔ)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(1.9 * ᐃ, [ⵠ[509]], 0)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 2.1, [ⵠ[509]], 1)));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⵠⵠΔⵠⵠ(ᐃ * 1.9, [ⵠ[509]], 2)));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(ᐃ * .8, ["#231F20", "#0c8e5b", "#037542", ⵠ[164]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(ᐃ * ⵠⵠⲆ, ["#231F20", "#0c8e5b", "#037542", ⵠ[164]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ΔⲆΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(ᐃ * 1.2, ["#231F20", "#0c8e5b", "#037542", ⵠ[164]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(ᐃ * .8, ["#041e22", ⵠ[24], ⵠ[194], ⵠ[590]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(ΔⲆᐃ * ᐃ, ["#041e22", ⵠ[24], ⵠ[194], ⵠ[590]])));
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠ][Δ.ⲆⵠΔ].push(ⵠᐃᐃ(ⲆᐃᐃΔⲆᐃΔ(1.2 * ᐃ, ["#041e22", ⵠ[24], ⵠ[194], ⵠ[590]])));
		Ⲇᐃ[Δ.ⵠΔⵠΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠΔⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔΔᐃⵠⵠⵠ(ᐃ * .8, [ⵠ[74], ⵠ[579], "#201851", ⵠ[122], "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", ⵠ[122], "#052830", ⵠ[526], ⵠ[579], ⵠ[557]]));
		Ⲇᐃ[Δ.ⵠΔⵠΔⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔΔᐃⵠⵠⵠ(ᐃ * .8, [ⵠ[490], ⵠ[437], "#081B2D", ⵠ[122], "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", ⵠ[526], ⵠ[437], "#72898C"]));
		Ⲇᐃ[Δ.ᐃΔᐃΔⲆΔΔ] = ⵠᐃᐃ(ⲆᐃⵠⲆⲆΔΔᐃΔ(.8 * ᐃ, [ⵠ[579]]));
		Ⲇᐃ[Δ.ΔⵠΔΔⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠⵠΔΔᐃΔ(.8 * ᐃ, true, [ⵠ[74], "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
		Ⲇᐃ[Δ.ΔⵠΔΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠⵠΔΔᐃΔ(ᐃ * .8, ⵠⲆⵠⵠⲆ, [ⵠ[490], ⵠ[300], ⵠ[510], ⵠ[437], "#321C56", "#1C073D", ⵠ[557], "#1C0833", "#1B1238"]));
		Ⲇᐃ[Δ.ΔⵠⵠⲆⲆⵠⵠ] = ⵠᐃᐃ(ᐃⵠⲆⲆⲆⵠᐃⵠⲆ(.8 * ᐃ, [ⵠ[579]]));
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⵠΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(.4 * ᐃ, true, [ⵠ[74], "#db6f26", ⵠ[142], ⵠ[252], "#833813"], 0));
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⵠΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(.4 * ᐃ, true, [ⵠ[490], ⵠ[300], ⵠ[510], ⵠ[437]], ΔΔⲆᐃ));
		Ⲇᐃ[Δ.ⲆᐃⲆΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(ᐃ * .4, ⲆⵠΔⵠΔ, [ⵠ[74], "#d35e35", ⵠ[142], ⵠ[252], ⵠ[252]], ΔΔᐃᐃ));
		Ⲇᐃ[Δ.ⲆᐃⲆΔΔⲆΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(.4 * ᐃ, ΔᐃⲆΔⵠ, [ⵠ[490], ⵠ[300], ⵠ[510], ⵠ[437]], ᐃⵠⵠ));
		Ⲇᐃ[Δ.ⵠⵠⲆᐃΔⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃΔⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(.4 * ᐃ, true, [ⵠ[74], "#2973a5", ⵠ[142], "#ffff00", ⵠ[252], "#03243f", "#f2ec30", "#162f6d"], ⵠⵠᐃⵠ));
		Ⲇᐃ[Δ.ⵠⵠⲆᐃΔⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔⲆⲆⲆᐃⲆᐃ(ᐃ * .4, ⵠⵠⵠΔΔ, [ⵠ[490], ⵠ[300], ⵠ[510], ⵠ[437]], ΔⲆᐃⲆ));
		Ⲇᐃ[Δ.ⲆᐃᐃᐃΔⵠΔ] = ⵠᐃᐃ(ⲆΔΔⵠⵠΔⲆ(ᐃ * .4, [ⵠ[579]]));
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⵠΔᐃ] = ⵠᐃᐃ(ⲆΔΔⵠⵠΔⲆ(ᐃ * .4, [ⵠ[579]]));
		Ⲇᐃ[Δ.ΔᐃⲆᐃⵠΔⵠⵠᐃ] = ⵠᐃᐃ(ⲆΔΔⵠⵠΔⲆ(.4 * ᐃ, [ⵠ[579]]));
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆ] = ⵠᐃᐃ(ΔⲆΔΔΔⵠⵠ(.35 * ᐃ, true, [ⵠ[493], ⵠ[193], ⵠ[467], ⵠ[ΔΔᐃΔΔᐃᐃ], ⵠ[193]], ⲆᐃⲆⲆ));
		Ⲇᐃ[Δ.ΔᐃᐃΔΔ] = ⵠᐃᐃ(ᐃⵠᐃᐃΔᐃΔ(ᐃ * .35, ΔᐃⲆΔⵠ, [ⵠ[74], "#ed5f4f", "#ce4545", ⵠ[142], "#e2dad7"], ⲆⲆΔᐃ));
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠⲆΔΔ(ᐃ * .35, ⵠⵠⵠΔΔ, [ⵠ[74], ⵠ[385], ⵠ[579], ⵠ[579], ⵠ[557]], ⵠⲆⲆ));
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠⲆΔΔ(.35 * ᐃ, ⵠΔΔΔⲆ, [ⵠ[490], "#613577", ⵠ[437], "#1C073D", ⵠ[557]], 1));
		Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠⲆΔΔ(ᐃ * .35, true, [ⵠ[74], ⵠ[385], ⵠ[142], "#181414", ⵠ[557]], 0));
		Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠⲆΔΔ(.35 * ᐃ, true, [ⵠ[490], ⵠ[531], "#563f83", "#180f21", ⵠ[557]], 0));
		Ⲇᐃ[Δ.Ⲇⵠᐃᐃᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.Ⲇⵠᐃᐃᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(.35 * ᐃ, true, [ⵠ[74], ⵠ[385], ⵠ[142]]));
		Ⲇᐃ[Δ.Ⲇⵠᐃᐃᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(.35 * ᐃ, ⵠⲆΔⲆⵠ, [ⵠ[490], ⵠ[531], "#563f83"]));
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(.42 * ᐃ, ⲆΔⲆΔᐃ, [ⵠ[74], ⵠ[385], ⵠ[142]]));
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(ᐃ * .42, ⵠΔΔΔⲆ, [ⵠ[490], ⵠ[531], "#563f83"]));
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(.35 * ᐃ, true, [ⵠ[74], ⵠ[385], ⵠ[579]]));
		Ⲇᐃ[Δ.ⲆⲆᐃΔⵠΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(ᐃ * .35, Δⵠⵠⵠⵠ, [ⵠ[490], "#613577", ⵠ[437]]));
		Ⲇᐃ[Δ.ᐃᐃᐃᐃᐃᐃΔ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃᐃᐃᐃΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(.42 * ᐃ, ⲆⲆᐃⵠⲆ, [ⵠ[74], ⵠ[385], ⵠ[579]]));
		Ⲇᐃ[Δ.ᐃᐃᐃᐃᐃᐃΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(ᐃ * .42, true, [ⵠ[490], "#613577", ⵠ[437]]));
		Ⲇᐃ[Δ.ⲆⲆᐃᐃΔⵠΔ] = ⵠᐃᐃ(ⵠΔᐃⲆⲆⲆΔ(ᐃ * .35, [ⵠ[579]]));
		Ⲇᐃ[Δ.ΔΔΔΔⵠⲆⵠ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(.35 * ᐃ, true, [undefined, ⵠ[579]]));
		Ⲇᐃ[Δ.ᐃᐃⲆⵠΔⲆⵠ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(.35 * ᐃ, true, [undefined, ⵠ[579]]));
		Ⲇᐃ[Δ.ΔᐃΔᐃΔΔⲆ] = ⵠᐃᐃ(ⵠΔᐃⲆⲆⲆΔ(ᐃ * .35, ["#22E066"]));
		Ⲇᐃ[Δ.ⵠᐃⵠᐃⲆⲆⵠ] = ⵠᐃᐃ(ΔΔᐃᐃⲆΔᐃ(ᐃ * .35, true, [ΔⲆⵠᐃᐃ, "#22E066"]));
		Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠⲆⵠ] = ⵠᐃᐃ(ⵠⵠᐃⲆΔᐃⵠ(ᐃ * .35, ⵠⲆᐃⲆᐃ, [ΔΔΔⲆⲆ, "#22E066"]));
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃᐃᐃᐃⵠᐃⵠ(ᐃ * .3, ΔΔⲆⲆⲆ, [ⵠ[74], "#65A8B7", ⵠ[61], "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", ⵠ[61]]));
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃᐃᐃᐃⵠᐃⵠ(.3 * ᐃ, true, [ⵠ[490], "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
		Ⲇᐃ[Δ.ⵠΔᐃΔΔ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⵠⵠᐃⲆᐃⵠ(ᐃ * .45, true, ["#C4BC51", "#B29C32", "#201851", "#652D8E", ⵠ[74], ⵠ[61]]));
		Ⲇᐃ[Δ.ⵠΔᐃΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⵠⵠᐃⲆᐃⵠ(.45 * ᐃ, true, ["#235050", "#357472", "#081B2D", ⵠ[122], ⵠ[490], "#135367"]));
		Ⲇᐃ[Δ.ⵠᐃⲆᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆᐃᐃ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔᐃᐃᐃⲆΔⵠ(.63 * ᐃ, ⲆΔⲆΔᐃ, [ⵠ[74], "#352E1E", ⵠ[480], ⵠ[160]]));
		Ⲇᐃ[Δ.ⵠᐃⲆᐃᐃ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔᐃᐃᐃⲆΔⵠ(.63 * ᐃ, true, [ⵠ[490], "#071f22", ⵠ[478], ⵠ[506]]));
		Ⲇᐃ[Δ.ⲆΔᐃΔΔ] = [];
		Ⲇᐃ[Δ.ⲆΔᐃΔΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ΔΔⲆᐃΔΔΔ(ᐃ, true, [ⵠ[74], "#332715", ⵠ[480], ⵠ[160]]));
		Ⲇᐃ[Δ.ⲆΔᐃΔΔ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ΔΔⲆᐃΔΔΔ(ᐃ, true, [ⵠ[490], "#071f22", ⵠ[478], ⵠ[506]]));
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⵠ][Δ.ΔⲆΔ] = ⵠᐃ.ᐃⲆᐃⵠΔΔⲆⲆᐃ;
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⵠ][Δ.ⲆⵠΔ] = ⵠᐃ.ⲆΔΔΔᐃⵠᐃⲆⵠ;
		Ⲇᐃ[Δ.ⵠΔⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆᐃⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃΔΔΔᐃᐃΔ(ᐃ * .59, true, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28]]));
		Ⲇᐃ[Δ.ⵠΔⲆᐃⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃΔΔΔᐃᐃΔ(.59 * ᐃ, ⲆⵠΔⵠΔ, [ⵠ[490], "#062124", "#10373d", "#0f3333"]));
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ] = [Ⲇᐃ[Δ.ⵠΔⲆᐃⵠ]];
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][ⲆΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][2] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][ΔΔⲆΔ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠΔΔⲆ(ᐃ * .59, ΔⲆΔΔⵠ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28]]));
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][1][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃⵠᐃⵠΔΔⲆ(.59 * ᐃ, true, [ⵠ[490], "#062124", "#10373d", "#0f3333"]));
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][ᐃΔⲆⲆⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ᐃΔΔⲆΔᐃΔ(ᐃ * .59, ⵠⵠⵠΔΔ, [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28]]));
		Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][2][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ᐃΔΔⲆΔᐃΔ(.59 * ᐃ, true, [ⵠ[490], "#062124", "#10373d", "#0f3333"]));
		Ⲇᐃ[Δ.ᐃΔⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆΔⵠ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(ᐃᐃⵠᐃ - Math.PI / 2, ⵠΔⲆΔⲆᐃⵠ(ᐃ * .6, ⲆⲆᐃⵠⲆ, [ⵠ[74], ⵠ[5], ⵠ[480], "#594225", ⵠ[544]])));
		Ⲇᐃ[Δ.ᐃΔⲆΔⵠ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(3 - Math.PI / 2, ⵠΔⲆΔⲆᐃⵠ(.6 * ᐃ, true, [ⵠ[490], "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
		Ⲇᐃ[Δ.ⲆⲆⵠΔᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠΔᐃⲆⲆ][Δ.ΔⲆΔ] = ⵠᐃᐃ(ⵠΔⵠΔⲆᐃⲆ(.3 * ᐃ, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
		Ⲇᐃ[Δ.ⲆⲆⵠΔᐃⲆⲆ][Δ.ⲆⵠΔ] = ⵠᐃᐃ(ⵠΔⵠΔⲆᐃⲆ(.3 * ᐃ, ["#1F5453", ⵠ[265], "#1D4947", "#1F5453", "#0c2629"], ΔⲆⵠ));
		Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃⵠΔ] = ⵠᐃᐃ(ⲆⲆⵠⲆᐃⵠⵠᐃΔ(ᐃ * .3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
		Ⲇᐃ[Δ.ⵠΔⲆⲆᐃⲆΔ] = ⵠᐃᐃ(ᐃⲆΔΔΔᐃⲆΔⲆ(.3 * ᐃ, [ⵠ[296]]));
		Ⲇᐃ[Δ.ⲆᐃᐃⵠΔⲆⵠ] = ΔᐃΔᐃ(1, [{
			f: ᐃΔⲆΔⲆᐃᐃ,
			x: ΔΔᐃ,
			y: 0,
			a: 1,
			r: 0,
			c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
		}], .25, [ⵠ[359], ⵠ[227], ⵠ[339]], .7);
		Ⲇᐃ[Δ.ΔⵠⵠΔᐃ] = ΔᐃΔᐃ(1.5, [{
			f: ⵠⲆᐃⵠΔᐃΔ,
			x: ΔΔⲆᐃ,
			y: ΔⵠⲆΔ,
			a: 1,
			r: ⲆΔᐃ,
			c: [ⵠ[396], "#750a0a", "#991616", ⵠ[396]]
		}], .45, ["#5bbcc9", "#73d2df", "#4daab6"], .9);
		Ⲇᐃ[Δ.ⵠᐃΔᐃⵠⲆⵠ] = ⵠⲆⵠΔᐃᐃᐃ(ᐃ * .35, ["#072428", "#67A242", "#67A242"], ᐃⵠΔ);
		Ⲇᐃ[Δ.ᐃⲆΔᐃⲆⲆΔ] = ⵠⲆⵠΔᐃᐃᐃ(.35 * ᐃ, ["#172130", "#649BB2", ⵠ[557], ⵠ[557], "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], ⲆⲆΔᐃ);
		Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠΔ] = ⵠⲆⵠΔᐃᐃᐃ(ᐃ * .35, ["#3F0B11", "#B13424", ⵠ[557], "#B13424", "#7e180b"], 2);
		Ⲇᐃ[Δ.ΔΔᐃⵠᐃΔᐃ] = ⵠⲆⵠΔᐃᐃᐃ(ᐃ * .35, ["#1B2F4C", "#29488E", "#76c3e8", ⵠ[142]], ᐃⲆⲆᐃΔ);
		if (!ⲆⲆᐃⵠᐃΔⲆ) Ⲇᐃ[Δ.ᐃⲆⵠᐃΔᐃᐃ] = ⵠᐃᐃ(ΔᐃⵠⵠᐃᐃⲆΔᐃ(ᐃ));
		else Ⲇᐃ[Δ.ᐃⲆⵠᐃΔᐃᐃ] = ⵠᐃᐃ(ⲆΔΔᐃᐃᐃᐃⲆⵠ(ᐃ));
		if (!ⲆⲆᐃⵠᐃΔⲆ) Ⲇᐃ[Δ.ΔⵠᐃΔᐃⵠⲆ] = ⵠᐃᐃ(ⲆⵠⲆΔⵠᐃⵠⵠᐃ(ᐃ));
		else Ⲇᐃ[Δ.ΔⵠᐃΔᐃⵠⲆ] = ⵠᐃᐃ(ⵠⲆΔⲆⵠⵠᐃΔΔ(.75));
		!ⲆⲆᐃⵠᐃΔⲆ ? Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆᐃ] = ⵠᐃᐃ(ᐃⲆⲆⵠΔΔⲆ(ᐃ)) : Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆᐃ] = ⵠᐃᐃ(ᐃⲆⲆⵠΔΔⲆ(.75));
		Ⲇᐃ[Δ.ᐃΔⲆᐃΔⵠⵠ] = ⵠᐃᐃ(ΔᐃᐃΔΔᐃᐃ(ᐃ * .16, ⲆΔⲆΔᐃ, ["rgba(0, 0, 0, 0)", ⵠ[557], ⵠ[557], ⵠ[557], ⵠ[557]]));
		Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆⲆ] = ⵠᐃᐃ(ⵠⲆⲆⵠ(5.8, ΔᐃⲆΔⲆⵠⵠ(.15 * ᐃ, ΔᐃⲆⲆᐃ, ["rgba(0, 0, 0, 0)", ⵠ[557], ⵠ[557], ⵠ[557], ⵠ[557]])));
		Ⲇᐃ[Δ.Δᐃ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆᐃⲆ] = [];
		for (var ᐃⲆ = ᐃⵠΔ; ⲆⵠΔΔ.ΔⲆⲆⵠⲆⵠΔ + ⵠⵠΔⲆ > ᐃⲆ; ᐃⲆ++) Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆᐃⲆ][ᐃⲆ] = ⲆΔΔΔⲆ(ᐃ, "" + (ᐃⲆ + ⵠⵠⲆ), 12, ⵠ[68]);
		Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ].push(ⵠᐃᐃ(ᐃⲆΔᐃᐃⲆΔ(.12 * ᐃ, ["#442F19", "#2C2112", ⵠ[388], ⵠ[163], ⵠ[25]])));
		Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ].push(ⵠᐃᐃ(ᐃⲆΔᐃᐃⲆΔ(.12 * ᐃ, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", ⵠ[25]], ⲆᐃⲆⲆ)));
		Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ].push(ⵠᐃᐃ(ᐃⲆΔᐃᐃⲆΔ(.12 * ᐃ, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], ⲆⲆΔᐃ)));
		Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⲆᐃ].push(ⵠᐃᐃ(ⵠᐃⲆⵠᐃⲆⲆⵠΔ(.22 * ᐃ)));
		Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⲆᐃ].push(ⵠᐃᐃ(ⵠᐃᐃⲆΔⲆⲆΔⵠ(ᐃ * .22)));
		Ⲇᐃ[Δ.ΔⲆᐃⲆⲆⵠᐃ] = ⵠᐃᐃ(ⵠᐃⵠⲆⵠⵠΔᐃᐃ(.22 * ᐃ));
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ].push(ⵠᐃᐃ(ⵠΔⲆⲆⵠⵠⲆ(ᐃ * 1.5, ["#795026", ⵠ[63], ⵠ[25]], ΔⵠⲆⲆ)));
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ].push(ⵠᐃᐃ(ⵠΔⲆⲆⵠⵠⲆ(ᐃ * 1.5, ["#8f5e2c", "#7a5126", ⵠ[25]], 1)));
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ].push(ⵠᐃᐃ(ⵠΔⲆⲆⵠⵠⲆ(ᐃ * 1.5, ["#67441f", "#573819", "#9c6e08"], ᐃⵠ)));
		Ⲇᐃ[Δ.ⲆⲆΔᐃᐃΔΔ] = ⵠᐃ.ⲆⲆΔᐃᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔⵠΔᐃᐃⲆ] = ⵠᐃ.ⲆΔⵠΔᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃⲆΔ] = ⵠᐃ.ᐃⲆⲆⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ᐃᐃⵠᐃΔᐃⵠ] = ⵠᐃ.ᐃᐃⵠᐃΔᐃⵠ;
		Ⲇᐃ[Δ.ⲆᐃΔᐃⵠᐃⵠ] = ⲆΔΔΔⲆ(ᐃ, "Show spectators", 25, ⵠ[68], ᐃⲆᐃΔΔ, undefined, ⵠ[151], 5, 220);
		Ⲇᐃ[Δ.ΔΔᐃᐃⵠΔΔ] = ⲆΔΔΔⲆ(ᐃ, "Reconnecting...", 30, ⵠ[68]);
		console.log(ⲆⲆΔΔᐃ, ΔⵠᐃΔⵠ)
	}

	function ⲆᐃᐃⲆⲆΔᐃᐃⵠ() {
		Ⲇᐃ[Δ.ᐃⵠⵠᐃⲆⲆⵠ] = ΔᐃΔᐃ(1, [{
			f: ΔΔⲆΔⲆⵠⵠ,
			x: ΔⲆⵠ,
			y: ⵠᐃⲆᐃ,
			a: ᐃⵠⵠ,
			r: 0,
			c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
		}], .2, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃᐃⵠ] = Ⲇᐃ[Δ.ᐃⵠⵠᐃⲆⲆⵠ];
		Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ][0] = ⵠᐃ.ⵠⲆⵠᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ][ⲆⲆΔᐃ] = ⵠᐃ.ⵠᐃⵠᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ][2] = ⵠᐃ.ᐃⲆΔᐃΔᐃΔ;
		Ⲇᐃ[Δ.ⲆΔΔᐃⵠΔᐃ] = Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ];
		Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ][ⵠⵠᐃⵠ] = ⵠᐃ.ᐃⵠⵠᐃᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ][1] = ⵠᐃ.ⲆΔΔⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ][2] = ⵠᐃ.ΔⲆΔᐃΔⵠⵠ;
		Ⲇᐃ[Δ.ΔᐃᐃⵠⲆⲆΔ] = Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ];
		Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ][0] = ⵠᐃ.ⵠⵠᐃⲆΔᐃⲆ;
		Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ][1] = ⵠᐃ.ⵠᐃΔⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ][2] = ⵠᐃ.ᐃⲆⲆΔⵠⲆⲆ;
		Ⲇᐃ[Δ.ΔⵠΔΔᐃᐃᐃ] = Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ][ⲆⵠⲆ] = ⵠᐃ.ᐃᐃⵠⵠᐃⲆⵠ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ][1] = ⵠᐃ.ⲆⲆⲆΔⵠᐃΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ][ⲆⲆⵠΔ] = ⵠᐃ.ᐃᐃΔΔⲆⵠΔ;
		Ⲇᐃ[Δ.ⵠΔᐃΔᐃΔΔ] = Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ];
		Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ][0] = ⵠᐃ.ΔΔᐃΔⵠⲆΔ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ][1] = ⵠᐃ.ⲆΔⲆΔᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ][ΔⲆⲆᐃ] = ⵠᐃ.ΔⲆⵠⵠᐃᐃΔ;
		Ⲇᐃ[Δ.ᐃⵠΔᐃΔⵠⲆ] = Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ];
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ][ⵠⵠⲆⲆ] = ⵠᐃ.ⵠΔΔⲆⵠΔΔ;
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ][ᐃΔⲆⵠ] = ⵠᐃ.ⲆΔᐃΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ][ΔᐃⵠⲆ] = ⵠᐃ.ᐃᐃΔᐃⵠⵠᐃ;
		Ⲇᐃ[Δ.ΔⲆᐃⲆⵠΔⲆ] = Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ];
		Ⲇᐃ[Δ.ⲆΔⲆⵠΔᐃᐃ] = Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ];
		Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ][ⲆΔᐃ] = ⵠᐃ.ᐃⲆΔⵠᐃᐃᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ][ΔΔᐃⵠ] = ⵠᐃ.ⲆᐃⵠⵠΔⲆⲆΔⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ][2] = ⵠᐃ.Ⲇⵠᐃᐃⵠⵠᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃᐃΔΔᐃⲆΔ] = Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⲆⵠⲆᐃⲆΔ] = Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ];
		Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ] = [];
		Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ][0] = ⵠᐃ.ΔⵠᐃΔΔΔΔ;
		Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ][ᐃΔⲆⵠ] = ⵠᐃ.ⲆᐃΔΔΔᐃⵠ;
		Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ][2] = ⵠᐃ.ᐃⵠΔⲆΔᐃΔ;
		Ⲇᐃ[Δ.ⲆⵠⲆⲆΔΔⵠ] = Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆⵠᐃⲆ] = Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ];
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ][0] = ⵠᐃ.ᐃⵠΔⲆⵠᐃⲆ;
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ][1] = ⵠᐃ.ⲆⲆᐃΔⵠⲆΔ;
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ][2] = ⵠᐃ.ⲆΔⵠⲆΔΔᐃ;
		Ⲇᐃ[Δ.ᐃⵠⵠΔⵠΔΔ] = Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆⵠⵠΔⵠ] = Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ];
		Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ][0] = ⵠᐃ.ᐃⵠⵠᐃⲆᐃΔΔⵠ;
		Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ][1] = ⵠᐃ.ΔⲆᐃᐃⵠᐃΔⵠⵠ;
		Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ][2] = ⵠᐃ.ⵠⵠΔⲆⲆⵠⲆᐃᐃ;
		Ⲇᐃ[Δ.ΔΔⵠΔΔⵠⲆ] = Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ][ΔΔⵠᐃ] = ⵠᐃ.ΔⲆⵠΔΔᐃⵠⲆᐃ;
		Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ][1] = ⵠᐃ.ΔⲆᐃⲆⲆᐃΔΔΔ;
		Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ][2] = ⵠᐃ.ⲆᐃᐃΔΔⵠΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃΔᐃΔᐃ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ];
		Ⲇᐃ[Δ.ΔⵠⲆⲆᐃⵠⲆ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ][0] = ⵠᐃ.ⲆΔⲆⲆΔⲆᐃⲆᐃ;
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ][1] = ⵠᐃ.ᐃᐃᐃᐃΔⲆΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ][2] = ⵠᐃ.ⵠⵠⵠᐃⵠᐃᐃΔⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆᐃᐃᐃⲆ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆΔⵠⲆⵠ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ];
		Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ][0] = ⵠᐃ.ⲆⵠΔⵠΔⲆⵠΔᐃ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ][ΔΔⲆΔ] = ⵠᐃ.ᐃᐃΔⵠⵠⲆᐃΔΔ;
		Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ][2] = ⵠᐃ.ⵠᐃⲆᐃΔΔᐃⲆⵠ;
		Ⲇᐃ[Δ.ⲆⲆⵠⵠᐃⲆᐃ] = Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ];
		Ⲇᐃ[Δ.ᐃΔⵠᐃᐃΔΔ] = Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ][0] = ⵠᐃ.ⲆᐃΔⵠᐃⲆΔⲆΔ;
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ][ⵠⵠⲆΔ] = ⵠᐃ.ᐃⵠΔⲆᐃⵠⲆⵠⵠ;
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ][ΔⲆⲆᐃ] = ⵠᐃ.ᐃⵠⲆᐃᐃⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ᐃᐃΔⲆⲆΔⵠ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔⲆⲆᐃᐃⵠ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ][Δⵠⵠ] = ⵠᐃ.ⵠⲆⲆⵠΔᐃⵠⲆΔ;
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ][1] = ⵠᐃ.Δᐃᐃᐃᐃᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ][2] = ⵠᐃ.ΔΔⲆⲆΔⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ΔⲆⲆⵠᐃᐃⲆ] = Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ];
		Ⲇᐃ[Δ.ΔΔⲆⵠᐃᐃΔ] = Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ];
		Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ][ⵠᐃⲆᐃ] = ⵠᐃ.ᐃⵠΔᐃⲆⵠΔⵠᐃ;
		Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ][ᐃΔⲆⵠ] = ⵠᐃ.ᐃᐃᐃⵠⲆⵠᐃⵠΔ;
		Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ][2] = ⵠᐃ.ᐃⲆᐃⵠΔⵠΔᐃᐃ;
		Ⲇᐃ[Δ.ΔΔⵠⵠⵠΔᐃ] = Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ];
		Ⲇᐃ[Δ.ΔΔⲆⵠΔⲆⵠ] = Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ][0] = ⵠᐃ.ⲆΔⵠⵠⵠᐃⵠⲆᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ][1] = ⵠᐃ.ᐃⵠΔⵠΔΔⲆⲆⲆ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ][2] = ⵠᐃ.ⲆⵠᐃⲆΔⲆΔⵠⵠ;
		Ⲇᐃ[Δ.ᐃⲆⲆΔⲆᐃΔ] = Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ];
		Ⲇᐃ[Δ.ΔᐃⲆᐃⵠΔΔ] = Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ];
		Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ][0] = ⵠᐃ.ⲆⵠΔⵠⲆᐃᐃΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ][1] = ⵠᐃ.ⵠΔⲆⵠᐃⲆΔΔΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ][ⵠⵠΔⲆ] = ⵠᐃ.ⲆⲆⲆΔᐃⵠⲆⵠⵠ;
		Ⲇᐃ[Δ.ᐃᐃⲆΔⲆᐃΔ] = Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ];
		Ⲇᐃ[Δ.ⵠⲆⵠⲆΔⵠΔ] = Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ][0] = ⵠᐃ.ᐃᐃⵠΔΔⲆΔᐃⲆ;
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ][1] = ⵠᐃ.ⲆᐃΔΔⵠᐃⵠᐃⲆ;
		Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ][2] = ⵠᐃ.ⵠΔⲆᐃᐃᐃⲆΔΔ;
		Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃΔⲆ] = Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ΔⲆⲆⲆΔΔⵠ] = Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ][0] = ⵠᐃ.ⲆⲆⵠΔᐃⵠᐃⲆⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ][ᐃⵠ] = ⵠᐃ.ᐃⵠᐃⲆⵠⵠⲆⲆⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ][ⵠⲆΔΔ] = ⵠᐃ.ⲆΔΔΔⵠΔⲆⵠⵠ;
		Ⲇᐃ[Δ.ΔⵠᐃⲆⵠᐃΔ] = Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ];
		Ⲇᐃ[Δ.ΔΔᐃⲆᐃⵠᐃ] = Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ];
		Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ][ΔⵠⲆⲆ] = ⵠᐃ.ᐃⵠᐃⵠΔΔᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ][1] = ⵠᐃ.ⵠΔᐃⲆᐃΔⵠⲆᐃ;
		Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ][2] = ⵠᐃ.ᐃΔⵠⲆᐃⵠΔⵠΔ;
		Ⲇᐃ[Δ.ᐃΔⵠⵠᐃΔᐃ] = Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ];
		Ⲇᐃ[Δ.ΔΔΔⲆⲆⵠⵠ] = Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ];
		Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ][0] = ⵠᐃ.ᐃⵠⲆⵠⲆⲆⵠΔΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ][1] = ⵠᐃ.ⵠΔᐃΔⲆⲆᐃΔⲆ;
		Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ][2] = ⵠᐃ.ⲆᐃᐃⲆΔᐃΔⵠΔ;
		Ⲇᐃ[Δ.ⵠⲆⵠⲆΔⲆⵠ] = Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ];
		Ⲇᐃ[Δ.ⲆΔᐃᐃᐃⲆΔ] = Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ];
		Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ] = [];
		Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ][0] = ⵠᐃ.ⲆᐃᐃΔⵠⵠᐃᐃⲆ;
		Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ][1] = ⵠᐃ.ᐃⲆⵠⲆⲆⵠⲆⲆⵠ;
		Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ][2] = ⵠᐃ.ᐃⲆⲆⲆⵠⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠΔ] = Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ];
		Ⲇᐃ[Δ.ⲆΔΔⵠᐃⵠΔ] = Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ];
		Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ][0] = ⵠᐃ.ΔᐃᐃΔⲆᐃⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ][1] = ⵠᐃ.ⲆΔᐃⲆᐃⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ][ᐃΔⲆⲆⵠ] = ⵠᐃ.ᐃⵠⵠᐃⵠⵠᐃⲆⲆ;
		Ⲇᐃ[Δ.Δᐃⵠⵠⵠᐃᐃ] = Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ];
		Ⲇᐃ[Δ.ⲆⲆⵠⵠⲆⵠᐃ] = Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ];
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ][ΔΔⲆᐃ] = ⵠᐃ.ᐃΔⲆⵠⵠⲆⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ][1] = ⵠᐃ.ⲆΔᐃⵠⲆⲆΔΔⲆ;
		Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ][2] = ⵠᐃ.ⵠᐃⵠᐃΔⵠΔⵠᐃ;
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆⵠᐃ] = Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ];
		Ⲇᐃ[Δ.Δⵠᐃⵠⵠⵠⵠ] = Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ];
		Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ][0] = ⵠᐃ.ⵠⵠᐃⵠᐃⲆⲆᐃᐃ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ][1] = ⵠᐃ.ΔᐃΔⵠᐃⵠΔⵠᐃ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ][2] = ⵠᐃ.ΔⲆⵠᐃⵠⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆⲆⲆⲆᐃⲆᐃ] = Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.ⵠΔⵠⵠⵠᐃΔ] = Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ][0] = ⵠᐃ.ⲆⵠᐃᐃᐃΔΔᐃΔ;
		Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ][ⲆΔᐃⲆ] = ⵠᐃ.ᐃΔⵠⵠΔΔⲆΔΔ;
		Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ][2] = ⵠᐃ.ⵠᐃᐃⲆⵠᐃᐃᐃΔ;
		Ⲇᐃ[Δ.ⵠΔᐃᐃⲆⲆⵠ] = Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ⵠⲆⲆⵠⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ][ⵠⵠⲆⲆ] = ⵠᐃ.ᐃⲆⵠⲆᐃⵠΔⵠⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ][ᐃⵠⵠ] = ⵠᐃ.ΔⲆΔᐃᐃᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ][2] = ⵠᐃ.ᐃΔΔⵠΔⵠⵠⵠⵠ;
		Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⲆΔ] = Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ];
		Ⲇᐃ[Δ.ⲆⲆΔΔᐃⲆΔ] = Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ] = [];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ][ΔⲆᐃⲆ] = ⵠᐃ.ⲆᐃⵠΔΔⵠⲆⵠⲆ;
		Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ][1] = ⵠᐃ.ⵠᐃᐃⵠΔⲆΔⲆΔ;
		Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ][2] = ⵠᐃ.ᐃΔⲆᐃⲆΔⲆΔᐃ;
		Ⲇᐃ[Δ.ᐃΔᐃΔⲆⵠⲆ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆⲆᐃⲆⲆ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ];
		Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ][ᐃⵠΔ] = ⵠᐃ.ⵠᐃⵠᐃᐃΔᐃᐃΔ;
		Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ][ᐃⲆⵠΔ] = ⵠᐃ.ⵠⵠᐃᐃⲆⲆΔᐃΔ;
		Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ][2] = ⵠᐃ.ⲆⲆⲆᐃΔΔⵠᐃᐃ;
		Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠⵠ] = Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ];
		Ⲇᐃ[Δ.ᐃᐃⵠⲆⲆⲆⵠ] = Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ][0] = ⵠᐃ.ⲆⲆⲆΔⵠⲆⲆⲆΔ;
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ][ⲆᐃⲆⲆ] = ⵠᐃ.ⲆᐃΔⵠⲆⵠⲆᐃⵠ;
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ][2] = ⵠᐃ.ᐃⲆᐃⲆΔⵠⵠⲆⲆ;
		Ⲇᐃ[Δ.ⵠᐃⵠᐃⲆⵠΔ] = Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ];
		Ⲇᐃ[Δ.ⲆⲆᐃⲆΔⲆᐃ] = Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ];
		Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ][0] = ⵠᐃ.ΔᐃΔⲆⵠΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ][ⵠᐃΔᐃ] = ⵠᐃ.ⵠⲆⲆⵠΔⲆΔⲆⲆ;
		Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ][2] = ⵠᐃ.ⲆᐃᐃⵠΔⲆΔⲆⵠ;
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠΔΔ] = Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ];
		Ⲇᐃ[Δ.ΔⲆⵠⵠⲆⵠΔ] = Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ];
		Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ][ⵠᐃⲆᐃ] = ⵠᐃ.ᐃⵠⲆⲆᐃⲆΔᐃΔ;
		Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ][ΔᐃᐃⲆ] = ⵠᐃ.ᐃⵠΔΔⵠᐃΔᐃⵠ;
		Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ][2] = ⵠᐃ.ᐃᐃᐃⵠᐃⵠΔⲆⲆ;
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆⵠΔ] = Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ];
		Ⲇᐃ[Δ.ⵠΔⲆⲆᐃΔⵠ] = Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ][0] = ⵠᐃ.ᐃᐃⵠΔⵠΔΔΔᐃ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ][ΔΔᐃⵠ] = ⵠᐃ.ᐃⲆᐃΔΔⵠΔΔⵠ;
		Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ][ⵠⵠΔⲆ] = ⵠᐃ.ⵠⵠⵠⵠΔⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ⵠᐃΔΔⵠⵠΔ] = Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ];
		Ⲇᐃ[Δ.ⲆⵠᐃⵠΔΔⲆ] = Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ];
		Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ][ⲆⲆⲆ] = ⵠᐃ.ⵠⵠⵠⲆⲆⵠⲆᐃⵠ;
		Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ][ΔᐃⵠΔ] = ⵠᐃ.ⵠᐃⵠⲆⲆⵠⲆΔᐃ;
		Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ][2] = ⵠᐃ.ᐃⲆᐃⵠⲆᐃⲆⲆⲆ;
		Ⲇᐃ[Δ.ΔᐃⵠᐃᐃΔᐃ] = Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ];
		Ⲇᐃ[Δ.ⵠⵠΔⲆⲆⵠᐃ] = Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ];
		Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ] = [];
		Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ][ᐃⵠΔ] = ⵠᐃ.ΔⲆⲆⲆᐃΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ][1] = ⵠᐃ.ⲆⲆᐃⵠᐃⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ][2] = ⵠᐃ.ⵠⵠΔⵠⵠⲆⲆⵠⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠΔⲆⵠΔ] = Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ];
		Ⲇᐃ[Δ.ᐃⵠⲆΔⲆⲆⲆ] = Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ];
		Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ][0] = ⵠᐃ.ⵠⲆᐃΔⲆⲆⲆΔΔ;
		Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ][1] = ⵠᐃ.ⲆⲆΔΔⲆΔᐃⲆΔ;
		Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ][2] = ⵠᐃ.ᐃΔⲆᐃⵠΔΔᐃⵠ;
		Ⲇᐃ[Δ.ΔΔᐃᐃΔⵠᐃ] = Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ];
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⵠⵠ] = Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ][0] = ⵠᐃ.ΔᐃΔᐃΔΔᐃⵠΔ;
		Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ][ⵠⵠⲆΔ] = ⵠᐃ.ᐃΔⵠᐃᐃΔⵠⲆⲆ;
		Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ][2] = ⵠᐃ.ⲆᐃᐃⲆⲆΔⲆᐃⵠ;
		Ⲇᐃ[Δ.ᐃⵠⲆΔΔΔᐃ] = Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ];
		Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠᐃ] = Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ];
		Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ] = [];
		Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ][0] = ⵠᐃ.ⲆᐃⲆᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ][1] = ⵠᐃ.ᐃΔⲆΔᐃᐃΔ;
		Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ][ΔⵠΔΔ] = ⵠᐃ.ⵠⵠⲆΔⲆΔⲆ;
		Ⲇᐃ[Δ.ⲆᐃᐃΔⲆⲆΔ] = Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ];
		Ⲇᐃ[Δ.ⲆΔⵠⲆⵠᐃⵠᐃⲆ] = Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ];
		Ⲇᐃ[Δ.ΔᐃᐃⵠΔᐃΔ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ⵠⵠΔⵠⲆΔΔ,
			x: 0,
			y: ⵠⲆⲆᐃ,
			a: ΔⲆᐃ,
			r: ΔΔᐃ,
			c: ["#352b10", ⵠ[406], ⵠ[266], "#e0e1e0", "#c4c4c4"]
		}], .22, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃᐃⲆⵠⲆΔ] = Ⲇᐃ[Δ.ΔᐃᐃⵠΔᐃΔ];
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆⵠΔ] = ΔᐃΔᐃ(1, [{
			f: Ⲇᐃᐃⵠⵠⵠᐃ,
			x: ΔΔⵠᐃ,
			y: 0,
			a: 1,
			r: 0,
			c: ["#352b10", "#349970", "#245c45", "#348361", ⵠ[406], ⵠ[266]]
		}], .2, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⲆⵠⵠΔⵠᐃ] = Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆⵠΔ];
		Ⲇᐃ[Δ.ΔᐃᐃⲆⲆⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ⲆΔΔⲆⲆᐃᐃ,
			x: -ⲆΔⵠⲆ,
			y: 0,
			a: 1,
			r: 0,
			c: [ⵠ[493], ⵠ[2], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[5], ⵠ[76], ⵠ[ΔⵠΔΔ], ⵠ[566]]
		}, {
			f: ⲆⲆΔⵠᐃⵠⲆ,
			x: -ⲆⲆΔᐃ,
			y: 0,
			a: ᐃΔⲆⵠ,
			r: 0,
			c: [ⵠ[493], ⵠ[ΔᐃⵠⲆ], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[5], ⵠ[76], ⵠ[ΔⵠΔΔ], ⵠ[566]]
		}, {
			f: ΔᐃⵠΔⲆΔΔ,
			x: -1,
			y: 0,
			a: ⵠⵠⲆ,
			r: 0,
			c: [ⵠ[493], ⵠ[ⲆᐃⲆᐃ], ⵠ[566], ⵠ[558], ⵠ[295], ⵠ[480], ⵠ[ᐃᐃⲆᐃⵠ], ⵠ[76], ⵠ[ᐃⲆⲆΔ], ⵠ[566]]
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⲆⲆΔᐃⵠᐃ] = Ⲇᐃ[Δ.ΔᐃᐃⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ⲆΔᐃᐃΔⲆᐃ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔⵠⲆᐃⲆ,
			x: ΔᐃⲆΔ,
			y: 0,
			a: ΔΔᐃⵠ,
			r: 0,
			c: [ⵠ[564], ⵠ[530]]
		}], 1.2, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠᐃ] = ΔᐃΔᐃ(1, [{
			f: ⵠᐃⵠΔⵠΔᐃ,
			x: 0,
			y: 0,
			a: ΔΔⲆΔ,
			r: ⵠⵠⲆⲆ,
			c: [ⵠ[493], ⵠ[202], ⵠ[394], ⵠ[28]]
		}], .14, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠΔⵠ] = Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠᐃ];
		Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃᐃ] = ΔᐃΔᐃ(ⲆᐃⲆⲆ, [{
			f: ΔⲆᐃᐃⲆ,
			x: ⲆⲆⲆ,
			y: Ⲇᐃⵠᐃ,
			a: ⲆᐃⲆⲆ,
			r: 0,
			c: [ⵠ[564], ⵠ[530]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠᐃⵠ] = Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃᐃ];
		Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃⲆ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃᐃⲆ,
			x: 0,
			y: ⵠᐃⲆᐃ,
			a: 1,
			r: ΔᐃⲆΔ,
			c: ["#493d36", "#332b28"]
		}], .7, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠⵠⵠⵠⲆⵠ] = Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆⵠΔ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ΔⲆᐃᐃⲆ,
			x: ᐃⵠΔ,
			y: 0,
			a: ⲆΔⵠⲆ,
			r: 0,
			c: [ⵠ[450], "#b17238"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔⵠⵠᐃΔⲆ] = Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆⵠΔ];
		Ⲇᐃ[Δ.ᐃΔᐃΔⲆΔⲆ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃᐃⲆ,
			x: 0,
			y: 0,
			a: ᐃΔⲆⵠ,
			r: 0,
			c: [ⵠ[406], ⵠ[266]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃΔⵠⵠⵠᐃⲆ] = Ⲇᐃ[Δ.ᐃΔᐃΔⲆΔⲆ];
		Ⲇᐃ[Δ.ⲆⵠⲆΔᐃΔΔ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: ΔⲆᐃᐃⲆ,
			x: ΔΔⵠᐃ,
			y: ⵠⵠⲆⲆ,
			a: ᐃⵠ,
			r: 0,
			c: ["#328a56", "#449573"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⵠⲆ] = Ⲇᐃ[Δ.ⲆⵠⲆΔᐃΔΔ];
		Ⲇᐃ[Δ.ΔⲆⲆΔⲆΔΔ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃᐃⲆ,
			x: 0,
			y: 0,
			a: 1,
			r: ⵠⲆⲆᐃ,
			c: ["#c98e2f", "#a36b11"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃᐃΔ] = Ⲇᐃ[Δ.ΔⲆⲆΔⲆΔΔ];
		Ⲇᐃ[Δ.ΔⲆⵠΔⲆⲆⵠ] = Ⲇᐃ[Δ.ΔⲆⲆΔⲆΔΔ];
		Ⲇᐃ[Δ.ΔⵠⲆⲆⵠΔⵠ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃᐃⲆ,
			x: Δⵠⵠ,
			y: ⵠⲆⲆᐃ,
			a: 1,
			r: 0,
			c: ["#13a56d", "#098a58"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠΔᐃΔΔⲆ] = Ⲇᐃ[Δ.ΔⵠⲆⲆⵠΔⵠ];
		Ⲇᐃ[Δ.ᐃⲆⵠⲆⵠΔⲆ] = Ⲇᐃ[Δ.ΔⵠⲆⲆⵠΔⵠ];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆᐃⵠ] = ΔᐃΔᐃ(ⲆΔᐃⲆ, [{
			f: ΔⲆᐃᐃⲆ,
			x: ⲆΔᐃ,
			y: Ⲇᐃⵠᐃ,
			a: 1,
			r: 0,
			c: ["#3a8214", "#4a9c1e"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⵠΔΔⲆᐃΔ] = Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃⲆᐃⵠᐃΔⵠ] = Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃⵠⲆⵠΔⲆⲆ] = ΔᐃΔᐃ(ᐃⵠⵠ, [{
			f: ΔⲆᐃᐃⲆ,
			x: 0,
			y: ΔΔⲆᐃ,
			a: ΔΔᐃⵠ,
			r: 0,
			c: ["#b22419", "#99110e"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔᐃⲆΔⵠⵠ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠΔⲆⲆ];
		Ⲇᐃ[Δ.ΔⲆⵠᐃⵠᐃᐃ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠΔⲆⲆ];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃΔ] = ΔᐃΔᐃ(ⵠⵠⲆ, [{
			f: ΔⲆΔᐃⵠⲆⲆ,
			x: -2,
			y: -2,
			a: 1,
			r: -Math.PI / 7,
			c: [ⵠ[70], ⵠ[284]]
		}, {
			f: ΔᐃⲆᐃⲆΔⵠ,
			x: -ⵠⲆΔΔ,
			y: -ᐃⵠΔⲆ,
			a: 1,
			r: -Math.PI / 7,
			c: [ⵠ[322], "#ec8d35", "#e96132"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔⲆᐃᐃᐃⲆ] = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃΔ];
		Ⲇᐃ[Δ.ΔⲆᐃᐃⵠⵠⵠ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ⵠΔⲆⵠᐃⲆᐃ,
			x: -ⵠᐃᐃⵠ,
			y: -ΔΔⲆΔ,
			a: 1,
			r: -Math.PI / 7,
			c: [ⵠ[70], ⵠ[284], ⵠ[532], ⵠ[417], "#0c2c2e"]
		}, {
			f: ΔᐃⲆᐃⲆΔⵠ,
			x: -2,
			y: -ⵠⵠⲆΔ,
			a: 1,
			r: -Math.PI / 7,
			c: [ⵠ[322], "#ec8d35", "#e96132"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔΔⲆΔᐃΔ] = Ⲇᐃ[Δ.ΔⲆᐃᐃⵠⵠⵠ];
		Ⲇᐃ[Δ.ⲆⲆΔᐃⲆᐃⵠ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ⵠⵠᐃⵠᐃⲆᐃ,
			x: 2,
			y: 0,
			a: 1,
			r: Math.PI / ΔⲆⵠΔΔ,
			c: [ⵠ[493], "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", ⵠ[266], "#d6d1d1"]
		}], .1, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⲆᐃⲆᐃᐃΔ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ⲆⲆΔΔⵠⲆΔ,
			x: ᐃΔⵠᐃ,
			y: 0,
			a: ᐃΔⲆⵠ,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[142], ⵠ[516], "#eb2933", "#57b74e", "#42a54d", ⵠ[326], ⵠ[30]]
		}], .3, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⲆΔⵠⲆⲆΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃⲆᐃΔⵠⲆⵠ,
			x: 2,
			y: ⵠⲆⲆᐃ,
			a: 1,
			r: Math.PI / ⲆΔᐃΔ,
			c: [ⵠ[458], ⵠ[210], "#493425", ⵠ[251], "#5e4530", "#563e2b"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔⲆᐃ] = ΔᐃΔᐃ(1, [{
			f: ᐃΔΔΔᐃⵠⲆ,
			x: ΔⵠΔΔ,
			y: 0,
			a: ΔⲆᐃ,
			r: Math.PI / ΔⲆⲆΔ,
			c: [ⵠ[493], ⵠ[361], ⵠ[516], "#b1afaf", "#493d36", "#332b28"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃⲆΔⲆⵠⲆ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ΔΔᐃᐃⵠⵠⲆ,
			x: 2,
			y: ⲆⵠⲆ,
			a: 1,
			r: Math.PI / ⲆⲆᐃⵠ,
			c: [ⵠ[493], ⵠ[85], ⵠ[584], ⵠ[85], ⵠ[269], ⵠ[114]]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆᐃᐃᐃΔΔⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃⲆᐃΔΔⲆΔ,
			x: ΔⵠΔΔ,
			y: ⵠⵠᐃⵠ,
			a: ΔΔⲆΔ,
			r: Math.PI / 5,
			c: [ⵠ[493], "#6ad9e8", ⵠ[33], "#95e9f5", "#022320", "#011e19", ⵠ[557]]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃⲆ] = ΔᐃΔᐃ(ⵠⵠⲆ, [{
			f: ΔⲆΔΔⵠⵠⵠ,
			x: ᐃⲆⵠᐃ,
			y: ⲆⲆⲆ,
			a: 1,
			r: Math.PI / ᐃᐃⵠⵠ,
			c: [ⵠ[493], ⵠ[408], ⵠ[373], "#cc81e7", ⵠ[305], ⵠ[421], ⵠ[557]]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃⲆᐃᐃᐃⲆ] = ΔᐃΔᐃ(1, [{
			f: ⲆⵠⲆⲆⵠ,
			x: -ⵠΔⵠᐃ,
			y: ⲆⵠΔᐃᐃ,
			a: 1,
			r: -Math.PI / 5,
			c: [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[70], ⵠ[284]]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆⵠⲆⲆⵠ,
			x: -ⵠᐃᐃⵠ,
			y: ⵠΔⲆⲆΔ,
			a: 1,
			r: -Math.PI / 5,
			c: [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[361], ⵠ[516]]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆⵠΔ] = ΔᐃΔᐃ(ⵠⲆⲆ, [{
			f: ⲆⵠⲆⲆⵠ,
			x: -2,
			y: ᐃⵠⲆⲆΔ,
			a: ΔᐃᐃⲆ,
			r: -Math.PI / ᐃᐃⲆᐃⵠ,
			c: [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584]]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠᐃⲆ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: ⲆⵠⲆⲆⵠ,
			x: -2,
			y: 5,
			a: 1,
			r: -Math.PI / ⲆⲆᐃⵠ,
			c: [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33]]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃΔΔⵠⲆᐃⵠ] = ΔᐃΔᐃ(1, [{
			f: ⲆⵠⲆⲆⵠ,
			x: -ᐃⲆⵠᐃ,
			y: ⵠᐃᐃΔᐃ,
			a: ᐃⵠⵠ,
			r: -Math.PI / ΔΔⲆᐃᐃ,
			c: [ⵠ[493], ⵠ[252], ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373]]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ] = [];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ][0] = ⵠᐃ.ⲆΔΔⵠᐃⲆⲆ;
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ][ⲆΔⵠⲆ] = ⵠᐃ.ᐃⵠⵠⵠᐃᐃⵠ;
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ][ΔᐃⵠⲆ] = ⵠᐃ.ⵠⵠⲆⲆΔⲆΔ;
		Ⲇᐃ[Δ.ΔⲆᐃⲆΔⵠⲆ] = Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ];
		Ⲇᐃ[Δ.ΔⲆⵠⵠⵠⵠΔ] = Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ];
		Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃᐃ] = ΔᐃΔᐃ(ⲆᐃⲆⲆ, [{
			f: ⵠⲆⲆᐃⵠⵠⲆ,
			x: -ΔΔⲆᐃᐃ,
			y: -5,
			a: ᐃⲆⵠΔ,
			r: ⲆΔᐃ,
			c: [ⵠ[ⲆⵠΔᐃⵠ], ⵠ[532], ⵠ[417]]
		}], .23, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆᐃⲆⲆⲆ,
			x: -5,
			y: -5,
			a: ᐃⵠⵠ,
			r: 0,
			c: ["#282823", "#877c2d", ⵠ[85]]
		}], .43, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃᐃⲆⲆⲆΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆⵠⵠⲆⵠ,
			x: -ΔᐃΔΔⲆ,
			y: -5,
			a: ᐃⲆⵠΔ,
			r: ᐃⵠΔ,
			c: [ⵠ[504], ⵠ[535], ⵠ[435]]
		}], .33, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔⵠᐃΔⵠᐃᐃ] = ΔᐃΔᐃ(ΔⲆᐃ, [{
			f: ΔⲆΔᐃⵠⲆⲆ,
			x: 0,
			y: -5,
			a: ΔΔⲆΔ,
			r: Math.PI / 2.5,
			c: [ⵠ[70], ⵠ[284]]
		}], .3, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔᐃⵠⲆⲆⲆⲆ] = Ⲇᐃ[Δ.ⲆⲆΔⵠⲆⲆΔ];
		Ⲇᐃ[Δ.ᐃⲆΔΔⲆΔΔ] = Ⲇᐃ[Δ.ⲆΔᐃⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ᐃᐃΔⲆⲆⵠᐃ] = Ⲇᐃ[Δ.ΔᐃⲆΔⲆⵠⲆ];
		Ⲇᐃ[Δ.ⵠⲆⲆΔᐃᐃⲆ] = Ⲇᐃ[Δ.ⲆᐃᐃᐃΔΔⲆ];
		Ⲇᐃ[Δ.ᐃᐃᐃⲆᐃᐃᐃ] = Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃⲆ];
		Ⲇᐃ[Δ.ⵠΔΔΔΔᐃᐃ] = Ⲇᐃ[Δ.ΔᐃⲆᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠᐃⵠⵠⵠΔⵠ] = Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆΔΔ];
		Ⲇᐃ[Δ.ᐃⵠΔⲆΔⵠᐃ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ⲆⵠⲆᐃⲆⲆⲆ] = Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠᐃⲆ];
		Ⲇᐃ[Δ.ΔΔᐃᐃᐃⵠⵠ] = Ⲇᐃ[Δ.ᐃΔΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ΔᐃⲆⵠⲆⲆΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆⵠᐃⲆᐃΔᐃᐃ,
			x: ⵠⲆⲆᐃ,
			y: 0,
			a: ΔΔᐃⵠ,
			r: ΔⲆᐃⲆ
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆᐃⵠⲆΔⲆⵠ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ⵠⲆⵠΔⲆⵠᐃ,
			x: ΔⲆⵠ,
			y: ⵠⵠⲆⲆ,
			a: ᐃⲆⵠΔ,
			r: ᐃΔⵠⵠ,
			c: [ⵠ[493], ⵠ[70], ⵠ[284], "#756e52", "#663f22", "#9e9577"]
		}], .45, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⲆⲆΔΔᐃⵠ] = Ⲇᐃ[Δ.ⲆᐃⵠⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ΔⵠΔⲆⲆᐃⵠ] = ΔᐃΔᐃ(ΔΔᐃⵠ, [{
			f: Δⵠⵠᐃᐃᐃⵠ,
			x: -ΔᐃⵠⲆ,
			y: -2,
			a: ΔⲆᐃ,
			r: 0,
			c: [ⵠ[493], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[497], ⵠ[214]]
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⵠⲆ] = Ⲇᐃ[Δ.ΔⵠΔⲆⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃᐃᐃᐃⵠⲆᐃ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ᐃⲆΔⲆΔⲆΔ,
			x: 0,
			y: ⵠⵠᐃⵠ,
			a: ΔᐃᐃⲆ,
			r: 0,
			c: [ⵠ[493], ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃΔᐃᐃⵠⲆⲆ] = Ⲇᐃ[Δ.ᐃᐃᐃᐃⵠⲆᐃ];
		Ⲇᐃ[Δ.ⲆΔⵠⲆⵠΔΔ] = ΔᐃΔᐃ(1, [{
			f: Δⵠⵠᐃᐃᐃⵠ,
			x: ⲆⲆⲆ,
			y: ΔᐃⲆΔ,
			a: ΔΔᐃᐃ,
			r: ⲆΔᐃ,
			c: [ⵠ[493], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔⵠⵠᐃⲆⵠ] = Ⲇᐃ[Δ.ⲆΔⵠⲆⵠΔΔ];
		Ⲇᐃ[Δ.ΔⲆⲆᐃⲆᐃᐃ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: Ⲇᐃᐃⵠᐃᐃⵠ,
			x: ΔⵠⲆⲆ,
			y: ΔΔᐃ,
			a: ⵠⲆⲆ,
			r: ⵠⵠⲆⲆ,
			c: [ⵠ[493], ⵠ[472], ⵠ[550], ⵠ[ⵠᐃⵠⲆᐃ], ⵠ[83], ⵠ[1]]
		}], .4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⲆᐃᐃᐃᐃⲆ] = Ⲇᐃ[Δ.ΔⲆⲆᐃⲆᐃᐃ];
		Ⲇᐃ[Δ.ⲆΔᐃⲆΔᐃᐃ] = ΔᐃΔᐃ(1, [{
			f: ⲆΔΔⲆΔⵠΔ,
			x: ᐃΔⵠⵠ,
			y: 0,
			a: ᐃⵠⵠ,
			r: ⵠⵠⲆⲆ,
			c: [ⵠ[493], ⵠ[390], ⵠ[314], ⵠ[ⲆⵠΔⲆΔΔⵠ], ⵠ[314], ⵠ[390]]
		}], .45, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⲆⲆ] = Ⲇᐃ[Δ.ⲆΔᐃⲆΔᐃᐃ];
		Ⲇᐃ[Δ.ᐃΔⵠⵠⵠΔᐃ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ΔⲆΔⲆΔΔΔ,
			x: 0,
			y: 0,
			a: ΔΔᐃⵠ,
			r: 0,
			c: [ⵠ[493], ⵠ[516], ⵠ[361], ⵠ[390], ⵠ[314], ⵠ[15], ⵠ[314], ⵠ[390]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⲆΔ] = Ⲇᐃ[Δ.ᐃΔⵠⵠⵠΔᐃ];
		Ⲇᐃ[Δ.ⵠΔΔᐃⵠᐃᐃ] = ΔᐃΔᐃ(1, [{
			f: ⵠᐃⲆΔΔΔΔ,
			x: ΔⲆⵠ,
			y: ᐃⵠΔ,
			a: ᐃᐃΔᐃ,
			r: 0,
			c: [ⵠ[493], ⵠ[516], ⵠ[361], ⵠ[472], ⵠ[550], ⵠ[7], ⵠ[83], ⵠ[1]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⲆᐃᐃⲆΔΔ] = Ⲇᐃ[Δ.ⵠΔΔᐃⵠᐃᐃ];
		Ⲇᐃ[Δ.ⵠⵠᐃᐃⵠᐃᐃ] = ΔᐃΔᐃ(ⲆΔᐃⲆ, [{
			f: ⵠᐃⲆΔΔΔΔ,
			x: 0,
			y: ⲆⵠⲆ,
			a: 1,
			r: 0,
			c: [ⵠ[493], "#7d8b90", "#9facaa", ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⲆ] = Ⲇᐃ[Δ.ⵠⵠᐃᐃⵠᐃᐃ];
		Ⲇᐃ[Δ.ⲆⲆᐃᐃⵠⵠⲆ] = ΔᐃΔᐃ(ΔᐃᐃⲆ, [{
			f: ⵠΔᐃⵠᐃⵠᐃ,
			x: 0,
			y: ΔΔⲆᐃ,
			a: 1,
			r: ⵠⵠᐃⵠ,
			c: [ⵠ[493], ⵠ[516], ⵠ[361], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[497], ⵠ[214]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃΔⲆⵠᐃⵠ] = Ⲇᐃ[Δ.ⲆⲆᐃᐃⵠⵠⲆ];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃⲆΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠΔᐃⵠᐃⵠᐃ,
			x: 0,
			y: 0,
			a: 1,
			r: ΔΔⵠᐃ,
			c: [ⵠ[493], ⵠ[516], ⵠ[361], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠΔⵠⵠᐃⲆΔ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃⲆΔ];
		Ⲇᐃ[Δ.ⵠΔᐃᐃΔΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆⵠᐃⲆⵠΔᐃ,
			x: 0,
			y: 0,
			a: ⵠⵠⲆΔ,
			r: ᐃΔⵠⵠ,
			c: [ⵠ[493], ⵠ[91], ⵠ[160], "#644928", ⵠ[160], "#735534"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⵠΔΔⵠΔⲆ] = Ⲇᐃ[Δ.ⵠΔᐃᐃΔΔΔ];
		Ⲇᐃ[Δ.ᐃⵠΔᐃⲆⲆΔ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ⲆᐃΔᐃⲆ,
			x: 0,
			y: ΔⲆᐃⲆ,
			a: 1,
			r: 0,
			c: [ⵠ[493], ⵠ[400], ⵠ[473], ⵠ[340], ⵠ[214], ⵠ[497]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆᐃⵠⲆΔᐃΔ] = Ⲇᐃ[Δ.ᐃⵠΔᐃⲆⲆΔ];
		Ⲇᐃ[Δ.ᐃΔⲆΔⵠᐃᐃ] = ΔᐃΔᐃ(ΔΔᐃⵠ, [{
			f: ⲆᐃΔᐃⲆ,
			x: 0,
			y: 0,
			a: ⲆᐃⲆⲆ,
			r: Δⵠⵠ,
			c: [ⵠ[493], ⵠ[503], ⵠ[373], ⵠ[124], ⵠ[159], ⵠ[333]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃᐃⵠΔⲆⵠΔ] = Ⲇᐃ[Δ.ᐃΔⲆΔⵠᐃᐃ];
		Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆᐃⵠᐃⲆᐃⲆ,
			x: 0,
			y: ΔⵠⲆⲆ,
			a: 1,
			r: 0,
			c: [ⵠ[493], ⵠ[472], ⵠ[550], ⵠ[7], "#9a8636", ⵠ[ΔΔⲆΔ]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⲆᐃΔΔⵠᐃ] = Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ΔᐃⵠΔⵠⲆΔ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ⵠⲆⵠⵠΔΔΔ,
			x: 0,
			y: 0,
			a: ⲆᐃⲆⲆ,
			r: Ⲇᐃⵠᐃ,
			c: [ⵠ[493], ⵠ[537], ⵠ[116], ⵠ[554], ⵠ[461], ⵠ[393], ⵠ[111]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔΔΔⲆΔΔ] = Ⲇᐃ[Δ.ΔᐃⵠΔⵠⲆΔ];
		Ⲇᐃ[Δ.ΔΔΔⵠΔⲆⵠ] = ΔᐃΔᐃ(ΔΔᐃⵠ, [{
			f: ΔΔΔⲆⵠᐃᐃ,
			x: ⲆⵠⲆ,
			y: 2,
			a: 1,
			r: ΔᐃⲆΔ,
			c: [ⵠ[411], "#9e8838", ⵠ[203], ⵠ[91], ⵠ[209], ⵠ[209], ⵠ[209], ⵠ[203], ⵠ[203], ⵠ[203]]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⲆΔⲆᐃΔⲆ] = Ⲇᐃ[Δ.ΔΔΔⵠΔⲆⵠ];
		Ⲇᐃ[Δ.ⲆᐃΔⵠⵠⲆΔ] = ΔᐃΔᐃ(ᐃⵠ, [{
			f: ⲆΔΔⲆᐃᐃᐃ,
			x: 0,
			y: -ⲆⵠΔᐃ,
			a: ⲆΔᐃⲆ,
			r: ΔᐃⲆΔ,
			c: ["#dd5d57", ⵠ[142], "#5e5d5e", ⵠ[142]]
		}], 1.4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠᐃⵠΔⵠᐃ] = ΔᐃΔᐃ(1, [{
			f: ⲆΔΔⲆᐃᐃᐃ,
			x: ⲆⲆⲆ,
			y: -3,
			a: 1,
			r: 0,
			c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
		}], 1.4, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆΔΔ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠΔⵠᐃ];
		Ⲇᐃ[Δ.ᐃΔⵠΔⵠⵠΔ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ⵠⵠΔⲆΔΔⵠ,
			x: -3,
			y: -3,
			a: ᐃΔⲆⵠ,
			r: ᐃⵠΔ,
			c: ["#cec0c4", ⵠ[142], "#6d6768"]
		}], .9, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃⵠⵠⲆⲆⲆ] = ΔᐃΔᐃ(1, [{
			f: ⵠⵠΔⲆΔΔⵠ,
			x: -ⵠⲆⵠⵠ,
			y: -3,
			a: ⵠᐃΔᐃ,
			r: ΔΔᐃ,
			c: ["#d4e9ec", "#37b1d7", "#506c71"]
		}], .9, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔΔⲆΔᐃᐃᐃ] = Ⲇᐃ[Δ.ΔᐃⵠⵠⲆⲆⲆ];
		Ⲇᐃ[Δ.ⲆᐃΔᐃⲆΔⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔΔᐃᐃⲆ,
			x: -ᐃᐃⵠᐃ,
			y: -ⵠⵠⲆⵠ,
			a: 1,
			r: 0,
			c: ["#ef96be", ⵠ[142]]
		}], .5, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠⲆΔⵠᐃⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔΔᐃᐃⲆ,
			x: -ΔⲆΔⵠ,
			y: -Δᐃᐃᐃ,
			a: 1,
			r: ᐃⵠΔ,
			c: ["#55423e", ⵠ[142]]
		}], .5, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆΔⲆᐃⵠᐃⵠ] = ΔᐃΔᐃ(ⵠⵠⲆ, [{
			f: ᐃᐃⵠⵠⵠⲆⵠ,
			x: 0,
			y: ΔΔⲆᐃ,
			a: ⲆᐃⲆⲆ,
			r: 0,
			c: [ⵠ[142], "#e7e2e2", "#b35c46", "#a34d37"]
		}], .25, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃⵠⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃⵠⵠⵠⲆⵠ,
			x: ΔⵠⲆⲆ,
			y: 0,
			a: ⲆⲆΔᐃ,
			r: ΔⵠⲆⲆ,
			c: ["#14151b", ⵠ[252], "#b35c46", "#a34d37"]
		}], .25, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆΔⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔΔᐃᐃⲆ,
			x: 0,
			y: ΔⵠⲆⲆ,
			a: 1,
			r: ⲆⲆⲆ,
			c: ["#201851", "#b6222a"]
		}], .5, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃΔⵠⵠᐃᐃⲆ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔΔᐃᐃⲆ,
			x: -3,
			y: -ⵠⵠⲆⵠΔ,
			a: 1,
			r: 0,
			c: ["#231f20", "#b6222a"]
		}], .5, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⲆⵠ] = ΔᐃΔᐃ(ΔᐃᐃⲆ, [{
			f: ⵠⲆΔΔᐃᐃⲆ,
			x: -ⲆⵠΔᐃ,
			y: -3,
			a: ⵠⲆⲆ,
			r: 0,
			c: [ⵠ[142], "#b6222a"]
		}], .5, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆᐃᐃᐃⲆΔΔ,
			x: ᐃΔⵠⵠ,
			y: 0,
			a: 1,
			r: 0,
			c: [ⵠ[52], ⵠ[237], ⵠ[410], ⵠ[587]]
		}], .4, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⲆⵠⲆᐃᐃⵠ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠΔ];
		Ⲇᐃ[Δ.ᐃⵠΔᐃᐃⲆⲆ] = ΔᐃΔᐃ(1, [{
			f: ⲆⲆᐃΔΔⵠΔ,
			x: ΔⵠⲆΔ,
			y: ⲆⵠⲆ,
			a: ⵠᐃΔᐃ,
			r: ⵠⲆⲆᐃ,
			c: [ⵠ[410], ⵠ[587], ⵠ[52], ⵠ[237]]
		}], .4, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⵠΔ] = Ⲇᐃ[Δ.ᐃⵠΔᐃᐃⲆⲆ];
		Ⲇᐃ[Δ.ᐃⵠⵠΔΔⵠⲆ] = ΔᐃΔᐃ(1, [{
			f: ΔⵠΔᐃⵠᐃⲆ,
			x: 0,
			y: ⵠⵠⲆⲆ,
			a: ⲆΔⵠⲆ,
			r: 0,
			c: [ⵠ[291], "#dee7e7", "#b8cccb", ⵠ[142], "#e3e8e8"]
		}], .4, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠΔΔᐃⵠⲆΔ] = Ⲇᐃ[Δ.ᐃⵠⵠΔΔⵠⲆ];
		Ⲇᐃ[Δ.ⵠΔΔᐃⲆΔⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃⵠᐃⲆⵠΔΔ,
			x: ⲆⲆⲆ,
			y: 5,
			a: ⲆΔᐃⲆ,
			r: 0,
			c: [ⵠ[291], "#c5232c", "#84191d", "#a72027", ⵠ[236], ⵠ[392]]
		}], .35, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⵠΔᐃⵠⲆᐃ] = Ⲇᐃ[Δ.ⵠΔΔᐃⲆΔⲆ];
		Ⲇᐃ[Δ.ⵠⵠΔⲆⵠⵠΔ] = ΔᐃΔᐃ(ᐃΔⲆⵠ, [{
			f: ⲆᐃᐃⵠΔᐃⲆ,
			x: 0,
			y: ⵠᐃᐃΔᐃ,
			a: ΔΔⲆΔ,
			r: 0,
			c: [ⵠ[291], "#0f964c", "#106e3b", "#138344", ⵠ[236], ⵠ[392], "#C5232C", "#A92D2D"]
		}], .35, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⵠⵠᐃ] = Ⲇᐃ[Δ.ⵠⵠΔⲆⵠⵠΔ];
		Ⲇᐃ[Δ.ΔⲆΔⲆⵠΔΔ] = ΔᐃΔᐃ(ⵠⲆⲆ, [{
			f: ⲆⲆᐃⵠⵠⵠⲆᐃᐃ,
			x: -2,
			y: -ⵠⲆΔΔ,
			a: 1,
			r: 0,
			c: [ⵠ[142], "#cec0c4"]
		}], .35, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⲆᐃⵠⵠᐃᐃ] = Ⲇᐃ[Δ.ΔⲆΔⲆⵠΔΔ];
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ][ΔⲆᐃⲆ] = ⵠᐃ.ⵠΔΔⵠⲆΔⵠ;
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ][1] = ⵠᐃ.ᐃΔᐃⲆⵠΔᐃ;
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ][2] = ⵠᐃ.ᐃΔᐃΔⲆᐃΔ;
		Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠⵠ] = Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ];
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ][0] = ⵠᐃ.ⵠΔⲆⲆⵠⵠΔ;
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ][ⵠⵠⲆΔ] = ⵠᐃ.ⲆⲆᐃΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ][2] = ⵠᐃ.ᐃⵠᐃⵠΔΔᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔⲆⵠᐃⲆ] = Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠⵠⲆΔ] = Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ][ΔᐃⲆΔ] = ⵠᐃ.ⲆᐃΔᐃΔᐃΔ;
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ][1] = ⵠᐃ.ΔᐃⲆⵠⵠⵠΔ;
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ][2] = ⵠᐃ.ᐃΔᐃⵠΔⵠΔ;
		Ⲇᐃ[Δ.ⵠΔᐃⲆᐃᐃⲆ] = Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ];
		Ⲇᐃ[Δ.ⵠᐃΔᐃᐃⵠΔ] = Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ];
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ][ⲆⲆⲆ] = ⵠᐃ.ᐃᐃⲆⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ][ⲆΔⵠⲆ] = ⵠᐃ.ᐃᐃⲆⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ][2] = ⵠᐃ.ᐃᐃⲆⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃΔΔⲆⲆΔⵠ] = Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ];
		Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ][0] = ⵠᐃ.ⵠΔⵠⲆᐃᐃΔ;
		Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ][ᐃⵠⵠ] = ⵠᐃ.ᐃⵠⲆᐃᐃΔⲆ;
		Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ][ⵠΔⲆΔ] = ⵠᐃ.ⵠᐃⵠᐃᐃⲆⵠ;
		Ⲇᐃ[Δ.Δᐃᐃᐃⵠⵠᐃ] = Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ];
		Ⲇᐃ[Δ.ⵠΔᐃΔᐃⲆⲆ] = Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ][0] = ⵠᐃ.ΔΔⵠᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ][ⵠⵠⲆ] = ⵠᐃ.ΔΔⵠᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ][ⵠΔⵠᐃ] = ⵠᐃ.ΔΔⵠᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⲆᐃΔⲆⵠᐃΔ] = Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ];
		Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ][0] = ⵠᐃ.ⵠⲆᐃⵠΔⲆⲆᐃⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ][1] = ⵠᐃ.ⲆⲆᐃΔⵠⵠᐃⲆⵠ;
		Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ][ⵠⵠΔⲆ] = ⵠᐃ.ⲆᐃᐃΔΔⵠⲆᐃΔ;
		Ⲇᐃ[Δ.ΔΔⵠΔᐃⲆΔ] = Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔⲆⲆⵠⵠⲆ] = Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ][0] = ⵠᐃ.ΔᐃΔᐃⲆΔᐃ;
		Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ][ⵠⵠⲆ] = ⵠᐃ.ΔΔᐃᐃᐃⲆᐃ;
		Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ][ⵠΔⵠᐃ] = ⵠᐃ.ⵠⲆⵠᐃⲆⲆⵠ;
		Ⲇᐃ[Δ.ᐃᐃᐃᐃΔⵠΔ] = Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ];
		Ⲇᐃ[Δ.ΔⲆᐃᐃΔᐃⵠ] = Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ];
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ][0] = ⵠᐃ.ⲆᐃΔᐃΔΔᐃ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ][1] = ⵠᐃ.ᐃᐃⵠⲆᐃᐃⵠ;
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ][2] = ⵠᐃ.ⵠⲆⵠΔΔⵠᐃ;
		Ⲇᐃ[Δ.ᐃⵠΔⵠᐃⲆⲆ] = Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ];
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠᐃⲆ] = Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ];
		Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ][0] = ⵠᐃ.ᐃΔⵠᐃΔⲆⲆ;
		Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ][ⲆΔⵠⲆ] = ⵠᐃ.ⲆⵠᐃᐃΔⵠᐃ;
		Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ][2] = ⵠᐃ.ⲆΔⵠⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ⵠᐃΔⵠΔᐃΔ] = Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ];
		Ⲇᐃ[Δ.ⲆΔⲆⲆᐃΔⵠ] = Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ];
		Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ][ΔⲆᐃⲆ] = ⵠᐃ.ⵠΔΔⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ][ΔΔᐃᐃ] = ⵠᐃ.ⵠᐃⵠⵠⵠᐃⵠ;
		Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ][ΔᐃⵠⲆ] = ⵠᐃ.ᐃΔᐃΔΔΔⵠ;
		Ⲇᐃ[Δ.ⲆⵠⵠᐃⵠⲆⲆ] = Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ];
		Ⲇᐃ[Δ.ⵠᐃΔᐃΔⲆΔ] = Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ][ᐃΔⵠⵠ] = ⵠᐃ.ⲆⵠᐃΔⲆΔⵠ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ][ᐃⲆⵠΔ] = ⵠᐃ.ⵠᐃⲆⵠᐃΔΔ;
		Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ][ⵠΔⲆΔ] = ⵠᐃ.ΔⲆᐃΔΔⲆᐃ;
		Ⲇᐃ[Δ.ᐃᐃᐃⵠᐃᐃⲆ] = Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ];
		Ⲇᐃ[Δ.ᐃΔΔᐃⵠᐃᐃ] = Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ];
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ][ΔΔⵠᐃ] = ⵠᐃ.ⲆⲆⵠᐃⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ][ΔⲆᐃ] = ⵠᐃ.ᐃⲆᐃⲆᐃⲆⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ][ᐃᐃⲆΔ] = ⵠᐃ.ᐃⲆΔⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ⵠᐃⵠⲆΔΔⵠ] = Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ⵠᐃᐃⵠΔⵠⵠ] = Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ][ⲆⵠⲆ] = ⵠᐃ.ΔᐃΔⲆΔᐃΔ;
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ][1] = ⵠᐃ.ΔΔⲆⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ][2] = ⵠᐃ.ΔᐃⵠⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠΔⵠ] = Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃⲆⲆΔ] = Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ];
		Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ][ⵠⲆⲆᐃ] = ⵠᐃ.ᐃⵠΔᐃᐃⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ][ᐃⲆⵠΔ] = ⵠᐃ.ᐃⵠΔΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ][ᐃΔⲆⲆⵠ] = ⵠᐃ.ⲆᐃᐃΔΔΔᐃ;
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔⲆⲆ] = Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆᐃᐃⵠⵠ] = Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ];
		Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ][ΔⲆᐃⲆ] = ⵠᐃ.ᐃΔΔΔⲆᐃᐃ;
		Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ][1] = ⵠᐃ.ΔΔⵠⲆᐃΔΔ;
		Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ][ⵠΔⵠᐃ] = ⵠᐃ.ΔⵠⵠⲆⲆΔⵠ;
		Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⲆᐃ] = Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ];
		Ⲇᐃ[Δ.ΔⵠΔⵠⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ];
		Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ] = [];
		Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ][ⵠⵠⲆⲆ] = ⵠᐃ.ᐃⲆᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ][1] = ⵠᐃ.ᐃⲆᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ][ⵠᐃᐃⵠ] = ⵠᐃ.ᐃⲆᐃᐃⲆ;
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⲆⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃΔᐃ] = Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ];
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ][0] = ⵠᐃ.ᐃᐃⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ][ᐃᐃΔᐃ] = ⵠᐃ.ᐃᐃⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ][2] = ⵠᐃ.ᐃᐃⵠΔⵠ;
		Ⲇᐃ[Δ.ⵠΔΔᐃⵠΔⲆⵠᐃ] = Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ];
		Ⲇᐃ[Δ.ⵠΔΔΔⲆᐃⲆ] = Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ];
		Ⲇᐃ[Δ.ΔᐃⵠΔᐃ] = [];
		Ⲇᐃ[Δ.ΔᐃⵠΔᐃ][Δⵠⵠ] = ⵠᐃ.ΔᐃⵠΔᐃ;
		Ⲇᐃ[Δ.ΔᐃⵠΔᐃ][1] = ⵠᐃ.ΔᐃⵠΔᐃ;
		Ⲇᐃ[Δ.ΔᐃⵠΔᐃ][ⵠᐃᐃⵠ] = ⵠᐃ.ΔᐃⵠΔᐃ;
		Ⲇᐃ[Δ.ᐃⲆΔΔᐃⵠΔΔᐃ] = Ⲇᐃ[Δ.ΔᐃⵠΔᐃ];
		Ⲇᐃ[Δ.ⲆⲆⵠΔⲆᐃᐃ] = Ⲇᐃ[Δ.ΔᐃⵠΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆⵠΔΔᐃ][0] = ⵠᐃ.ⲆⵠΔΔᐃ;
		Ⲇᐃ[Δ.ⲆⵠΔΔᐃ][1] = ⵠᐃ.ⲆⵠΔΔᐃ;
		Ⲇᐃ[Δ.ⲆⵠΔΔᐃ][ⵠΔⵠᐃ] = ⵠᐃ.ⲆⵠΔΔᐃ;
		Ⲇᐃ[Δ.ᐃΔᐃΔΔΔᐃ] = Ⲇᐃ[Δ.ⲆⵠΔΔᐃ];
		Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ] = [];
		Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ][ΔᐃⲆΔ] = ⵠᐃ.ⵠⵠⲆⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ][ⲆᐃⲆⲆ] = ⵠᐃ.ⵠⲆⵠΔΔⵠΔ;
		Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ][ⵠΔⲆΔ] = ⵠᐃ.ᐃᐃⲆΔⲆⲆΔ;
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠΔΔ] = Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ];
		Ⲇᐃ[Δ.ᐃΔᐃⵠᐃᐃⵠ] = Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ][Ⲇᐃⵠᐃ] = ⵠᐃ.ΔⲆᐃⵠⵠᐃⵠ;
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ][ΔΔᐃᐃ] = ⵠᐃ.ᐃᐃⲆⲆᐃⲆΔ;
		Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ][ⵠᐃᐃⵠ] = ⵠᐃ.ⵠⲆᐃⵠⲆᐃᐃ;
		Ⲇᐃ[Δ.ΔΔᐃΔΔΔⲆ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ];
		Ⲇᐃ[Δ.ᐃⲆᐃⵠΔᐃⵠ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ][ΔⵠⲆΔ] = ⵠᐃ.ΔⲆΔⲆⲆⲆⵠ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ][ΔᐃⵠΔ] = ⵠᐃ.ⲆⵠΔᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ][ⵠᐃⵠΔ] = ⵠᐃ.ⵠⲆⲆΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⲆᐃ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ];
		Ⲇᐃ[Δ.ΔᐃᐃⵠⵠΔΔ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ][ⲆⵠⲆ] = ⵠᐃ.ΔᐃΔᐃΔΔᐃ;
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ][1] = ⵠᐃ.ᐃⲆΔⲆⵠⲆΔ;
		Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ][ᐃᐃΔⵠ] = ⵠᐃ.ⵠⲆⵠⵠⲆᐃⵠ;
		Ⲇᐃ[Δ.ⵠⵠⵠⲆΔᐃΔ] = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ⲆᐃⵠΔΔᐃⲆ] = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ] = [];
		Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ][0] = ⵠᐃ.ᐃΔΔΔᐃᐃᐃ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ][1] = ⵠᐃ.ΔᐃⲆⵠᐃⲆᐃ;
		Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ][2] = ⵠᐃ.ΔΔΔⵠᐃⵠⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔΔⲆⲆⲆ] = Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ];
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆΔΔ] = Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ];
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ][0] = ⵠᐃ.ⵠⲆᐃΔⲆᐃᐃ;
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ][1] = ⵠᐃ.ᐃᐃᐃᐃᐃᐃᐃ;
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ][2] = ⵠᐃ.ⵠᐃⵠⵠⲆⲆⲆ;
		Ⲇᐃ[Δ.ⲆⵠᐃΔΔΔⲆ] = Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ];
		Ⲇᐃ[Δ.ᐃᐃᐃⵠΔᐃΔ] = Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ];
		Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ][ⵠⵠⲆⲆ] = ⵠᐃ.ᐃΔΔⵠⲆⵠⵠᐃΔ;
		Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ][1] = ⵠᐃ.ⲆⲆⵠⲆᐃⲆⲆⵠΔ;
		Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ][2] = ⵠᐃ.ᐃⲆΔⵠΔⵠΔΔⲆ;
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠⲆ] = Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔΔᐃΔⵠᐃ] = Ⲇᐃ[Δ.ᐃΔⵠΔΔⵠⵠ];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ][ⵠⵠᐃⵠ] = ⵠᐃ.ⲆⲆΔΔᐃΔᐃ;
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ][ⲆΔⵠⲆ] = ⵠᐃ.ΔⵠᐃⲆⵠᐃⲆ;
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ][2] = ⵠᐃ.ΔⵠΔΔᐃⲆⵠ;
		Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆΔⲆ] = Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠΔⲆ] = Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ][0] = ⵠᐃ.ΔᐃⵠⵠΔⵠΔ;
		Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ][1] = ⵠᐃ.ⵠᐃⵠⵠⵠⵠΔ;
		Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ][2] = ⵠᐃ.ⲆΔⲆⲆΔⵠⵠ;
		Ⲇᐃ[Δ.ⵠⲆⲆⵠⵠΔΔ] = Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠⵠⵠᐃⵠΔ] = Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ];
		Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ][ⲆⵠⲆ] = ⵠᐃ.ⲆᐃⲆᐃᐃⲆⲆ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ][1] = ⵠᐃ.ⲆΔⵠⲆⵠⵠⵠ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ][2] = ⵠᐃ.ΔⲆᐃⵠᐃᐃᐃ;
		Ⲇᐃ[Δ.ⲆⵠΔⲆᐃⲆΔ] = Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ];
		Ⲇᐃ[Δ.ⵠΔᐃⵠⲆⲆᐃ] = Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ] = [];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ][ΔΔᐃ] = ⵠᐃ.ᐃᐃⲆⵠⲆΔⲆ;
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ][ᐃᐃΔᐃ] = ⵠᐃ.ᐃⲆⵠⲆⲆⵠᐃ;
		Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ][2] = ⵠᐃ.ⵠΔⵠⵠⲆⲆᐃ;
		Ⲇᐃ[Δ.ⵠⵠⵠΔᐃⲆⵠ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆⲆⵠᐃᐃ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ] = [];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ][ΔⵠⲆΔ] = ⵠᐃ.ᐃᐃⵠᐃⵠⲆⲆⲆᐃ;
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ][1] = ⵠᐃ.ΔⲆΔⵠⲆⲆⲆΔΔ;
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ][2] = ⵠᐃ.ΔΔⲆΔᐃⵠᐃΔΔ;
		Ⲇᐃ[Δ.ⵠⵠⵠⵠⲆᐃⵠ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ];
		Ⲇᐃ[Δ.ΔⲆΔΔΔⵠᐃ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ];
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ][0] = ⵠᐃ.ⵠⲆΔΔᐃΔᐃ;
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ][1] = ⵠᐃ.ΔⵠⲆⲆᐃⵠΔ;
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ][2] = ⵠᐃ.ΔⲆⵠⵠⵠΔⵠ;
		Ⲇᐃ[Δ.ᐃⲆΔⵠΔⲆⵠ] = Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ⲆᐃᐃΔⵠΔΔ] = Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⵠⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃᐃᐃΔᐃᐃ,
			x: 0,
			y: 0,
			a: 1,
			r: ᐃΔⵠⵠ,
			c: [ⵠ[493], "#515C57", "#3A4942", "#68736F", ⵠ[92], ⵠ[508], ⵠ[539], "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
		}, {
			f: ⵠⵠⵠⵠⵠᐃⲆ,
			x: ΔⲆᐃⲆ,
			y: ᐃⵠΔ,
			a: 1,
			r: 0,
			c: ["#e4c027"]
		}], .14, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃΔΔⵠⵠⵠΔ] = Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⵠⲆ];
		Ⲇᐃ[Δ.ⲆⵠᐃⵠⵠᐃⲆ] = ΔᐃΔᐃ(ΔⲆᐃ, [{
			f: ⲆΔⲆⵠΔⲆⲆ,
			x: ΔⲆᐃⲆ,
			y: 0,
			a: 1,
			r: 0,
			c: [ⵠ[493], ⵠ[361], ⵠ[516], "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
		}], .18, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⵠⲆΔΔΔΔ] = Ⲇᐃ[Δ.ⲆⵠᐃⵠⵠᐃⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠΔⲆ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆΔⵠΔⲆᐃ,
			x: 0,
			y: ΔⲆⵠ,
			a: ΔΔⲆΔ,
			r: 0,
			c: [ⵠ[493], ⵠ[198], ⵠ[282], "#261912", "#eee6c5", "#d1c599", ⵠ[198], ⵠ[282], "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", ⵠ[142], "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
		}], .32, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆⲆ] = Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠΔⲆ];
		Ⲇᐃ[Δ.ΔᐃⵠᐃⲆΔᐃ] = Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠΔⲆ];
		Ⲇᐃ[Δ.ⲆⲆΔΔⲆⲆⵠ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: ΔⲆΔΔΔⵠⵠ,
			x: 0,
			y: ΔΔⲆᐃ,
			a: 1,
			r: 0,
			c: [ⵠ[493], ⵠ[193], ⵠ[467], ⵠ[11], ⵠ[193]]
		}], .17, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆΔⵠⲆⲆⲆⲆ] = Ⲇᐃ[Δ.ⲆⲆΔΔⲆⲆⵠ];
		Ⲇᐃ[Δ.ⵠⲆᐃΔΔΔᐃ] = ΔᐃΔᐃ(1, [{
			f: ΔΔⵠΔᐃᐃΔ,
			x: ⵠᐃᐃⵠ,
			y: 0,
			a: ⲆΔⵠⲆ,
			r: Math.PI / ᐃᐃⵠⵠ,
			c: [ⵠ[493], ⵠ[353], ⵠ[176], ⵠ[ᐃΔⲆᐃⲆᐃⵠ], ⵠ[193], ⵠ[193], ⵠ[467], ⵠ[551], ⵠ[281]]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃᐃⵠⲆΔΔⵠ] = Ⲇᐃ[Δ.ⵠⲆᐃΔΔΔᐃ];
		Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠᐃ] = Ⲇᐃ[Δ.ⵠⲆᐃΔΔΔᐃ];
		Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⲆᐃ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ⵠⲆⵠΔΔᐃⲆ,
			x: ⵠᐃⵠΔ,
			y: ΔⵠⲆⲆ,
			a: 1,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[353], ⵠ[176], "#765d42", ⵠ[551], ⵠ[281]]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⲆⲆᐃΔⵠⵠ] = Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⲆᐃ];
		Ⲇᐃ[Δ.ᐃⲆΔⵠⲆᐃᐃ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ⲆᐃᐃΔⲆΔⲆ,
			x: ⵠΔⵠᐃ,
			y: 0,
			a: ⵠⵠⲆΔ,
			r: Math.PI / ᐃⵠⲆⲆΔ,
			c: [ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[551], ⵠ[281], "#7a7575", "#454749", "#8c8787", ⵠ[361], ⵠ[516], "#aaa6a6"]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠⵠⲆᐃⵠᐃⲆ] = Ⲇᐃ[Δ.ᐃⲆΔⵠⲆᐃᐃ];
		Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃΔΔΔΔⲆ,
			x: 2,
			y: ΔᐃⲆΔ,
			a: ᐃⵠ,
			r: Math.PI / ᐃᐃⵠⵠ,
			c: [ⵠ[493], ⵠ[269], ⵠ[114], "#a69e39", "#9c8828", "#bab143", ⵠ[85], ⵠ[584], "#d2ca59"]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔⵠᐃ] = Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠΔ];
		Ⲇᐃ[Δ.ⵠΔⵠᐃᐃΔⵠ] = ΔᐃΔᐃ(ⵠⵠⲆΔ, [{
			f: ΔⵠᐃᐃⲆᐃⵠ,
			x: ⵠⵠⲆᐃ,
			y: 0,
			a: 1,
			r: Math.PI / ΔᐃΔΔⲆ,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], "#4ba8b4", "#198a82", "#6ccad7", ⵠ[123], ⵠ[33], "#7bd9e6"]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⲆⵠΔΔⲆⲆ] = Ⲇᐃ[Δ.ⵠΔⵠᐃᐃΔⵠ];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃⵠⲆⵠΔᐃ,
			x: ᐃᐃⲆΔ,
			y: ⵠᐃⲆᐃ,
			a: 1,
			r: Math.PI / ᐃⵠⲆⲆΔ,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], "#9443b1", "#6f1988", "#a752c6", "#9e35be", ⵠ[373], ⵠ[408]]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⵠⲆ] = Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⵠΔ];
		Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ᐃⵠⲆⲆⵠⵠⵠ,
			x: 2,
			y: 0,
			a: 1,
			r: Math.PI / ᐃᐃⲆᐃⵠ,
			c: [ⵠ[493], "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
		}], .38, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⵠⵠⵠᐃᐃΔ] = Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ];
		Ⲇᐃ[Δ.ᐃΔⵠΔⵠᐃᐃ] = Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ];
		Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃⵠⵠᐃ,
			x: 2,
			y: 0,
			a: ΔΔᐃⵠ,
			r: Math.PI / ⵠᐃᐃΔᐃ,
			c: [ⵠ[493], ⵠ[70], ⵠ[284], ⵠ[361], ⵠ[516]]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠⲆΔⵠΔᐃ] = Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⵠⵠ];
		Ⲇᐃ[Δ.ᐃᐃⵠΔΔⵠΔ] = ΔᐃΔᐃ(ΔΔⲆΔ, [{
			f: ᐃΔⲆⲆΔΔᐃ,
			x: 0,
			y: ⲆⵠⲆ,
			a: 1,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[361], ⵠ[516]]
		}], .3, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃⲆⵠᐃⲆⲆ] = Ⲇᐃ[Δ.ᐃᐃⵠΔΔⵠΔ];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆΔⲆΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃΔᐃΔⲆΔ,
			x: 2,
			y: 0,
			a: ΔⲆᐃ,
			r: Math.PI / ΔⲆⵠΔΔ,
			c: [ⵠ[493], "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆᐃᐃⲆΔⵠⲆ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆΔⲆΔ];
		Ⲇᐃ[Δ.ⵠⵠⲆΔᐃΔᐃ] = ΔᐃΔᐃ(ᐃⵠ, [{
			f: ᐃᐃⵠⵠᐃ,
			x: ⵠⵠⲆᐃ,
			y: ᐃΔⵠⵠ,
			a: 1,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584]]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃᐃⲆⵠΔⲆΔ] = Ⲇᐃ[Δ.ⵠⵠⲆΔᐃΔᐃ];
		Ⲇᐃ[Δ.ΔⵠᐃΔⲆΔᐃ] = ΔᐃΔᐃ(ⲆⲆΔᐃ, [{
			f: ᐃᐃⵠⵠᐃ,
			x: 2,
			y: ΔΔⲆᐃ,
			a: ⲆᐃⲆⲆ,
			r: Math.PI / ⵠⲆⲆᐃⵠ,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33]]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠⵠΔⵠᐃⵠΔ] = Ⲇᐃ[Δ.ΔⵠᐃΔⲆΔᐃ];
		Ⲇᐃ[Δ.ᐃⵠⲆⲆⵠⵠⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃⵠⵠᐃ,
			x: ᐃⵠΔⲆ,
			y: ᐃⵠΔ,
			a: ⵠⵠⲆΔ,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373]]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠⲆΔⵠⵠⲆⵠ] = Ⲇᐃ[Δ.ᐃⵠⲆⲆⵠⵠⲆ];
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ][ⲆⵠⲆ] = ⵠᐃ.ⲆⲆⲆⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ][ᐃⵠⵠ] = ⵠᐃ.ⵠΔᐃⵠⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ][2] = ⵠᐃ.ⲆⲆⲆᐃⵠⵠΔ;
		Ⲇᐃ[Δ.ⵠⵠⲆⵠΔⵠΔ] = Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ];
		Ⲇᐃ[Δ.ⲆⲆΔᐃΔᐃᐃ] = Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ];
		Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ] = [];
		Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ][0] = ⵠᐃ.ⵠΔⵠⲆⲆⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ][ⲆᐃⲆⲆ] = ⵠᐃ.ΔⲆⵠΔⲆⵠΔ;
		Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ][ΔᐃⵠⲆ] = ⵠᐃ.ⲆᐃΔⲆᐃΔΔ;
		Ⲇᐃ[Δ.ⵠⵠᐃΔⲆΔⲆ] = Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ];
		Ⲇᐃ[Δ.ⵠΔΔᐃⵠⵠΔ] = Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ][ⲆⲆⲆ] = ⵠᐃ.ᐃᐃⵠⲆΔᐃᐃ;
		Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ][1] = ⵠᐃ.ΔΔᐃΔⲆᐃⲆ;
		Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ][ᐃⲆⵠᐃ] = ⵠᐃ.ᐃΔΔⲆΔⲆΔ;
		Ⲇᐃ[Δ.ⲆΔΔΔΔⲆᐃ] = Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ];
		Ⲇᐃ[Δ.ⵠΔΔⲆΔΔⲆ] = Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ];
		Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ] = [];
		Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ][0] = ⵠᐃ.ⲆⲆᐃᐃⵠⲆᐃ;
		Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ][ΔΔⲆΔ] = ⵠᐃ.ΔⲆⵠⲆⵠᐃⵠ;
		Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ][2] = ⵠᐃ.ΔᐃΔΔΔΔΔ;
		Ⲇᐃ[Δ.ⵠΔⵠΔⵠⲆᐃ] = Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ];
		Ⲇᐃ[Δ.ⲆᐃⵠΔⲆⵠⵠ] = Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ];
		Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ] = [];
		Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ][ΔΔᐃ] = ⵠᐃ.ⲆⲆⵠⵠⵠΔⵠ;
		Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ][1] = ⵠᐃ.ΔΔⲆΔᐃⲆⲆ;
		Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ][ᐃⲆⲆΔ] = ⵠᐃ.ΔΔⲆⵠⲆⲆⲆ;
		Ⲇᐃ[Δ.ⵠⵠΔᐃⵠᐃΔ] = Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ⵠⵠⵠⲆⵠⲆΔ] = Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ][0] = ⵠᐃ.ᐃⵠΔΔᐃⲆΔ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ][ΔⲆᐃ] = ⵠᐃ.ⲆᐃᐃⵠᐃⲆΔ;
		Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ][ⵠΔⲆΔ] = ⵠᐃ.ΔⲆⲆⲆᐃΔⲆ;
		Ⲇᐃ[Δ.ⵠΔⵠΔᐃᐃⵠ] = Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ];
		Ⲇᐃ[Δ.ⲆⲆⵠΔⵠⵠΔ] = Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ] = [];
		Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ][ΔᐃⲆΔ] = ⵠᐃ.ⲆᐃΔΔᐃⵠⲆ;
		Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ][ᐃⲆⵠΔ] = ⵠᐃ.ⲆⲆᐃⵠᐃᐃⲆ;
		Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ][2] = ⵠᐃ.ᐃᐃⲆΔΔⲆⵠ;
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠᐃⵠ] = Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ];
		Ⲇᐃ[Δ.ⲆΔΔᐃⵠᐃᐃ] = Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ];
		Ⲇᐃ[Δ.ΔΔᐃΔᐃΔⵠ] = ΔᐃΔᐃ(ⵠᐃΔᐃ, [{
			f: ⵠⲆⵠΔΔⲆⲆ,
			x: -ᐃᐃⲆΔ,
			y: -2,
			a: ⵠⵠⲆ,
			r: 0,
			c: [ⵠ[452], ⵠ[232], ⵠ[203], "#3a3a3a"]
		}], .8, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃⲆⵠΔⲆᐃⲆ] = Ⲇᐃ[Δ.ΔΔᐃΔᐃΔⵠ];
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠΔⲆᐃΔΔⲆ,
			x: -ᐃⲆⵠᐃ,
			y: -ᐃⵠΔⲆ,
			a: ⲆᐃⲆⲆ,
			r: -Math.PI / 5,
			c: [ⵠ[452], ⵠ[203], ⵠ[232]]
		}], .08, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆᐃᐃⵠⲆΔΔ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠⵠ];
		Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆᐃ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ⵠⲆᐃⵠΔᐃΔ,
			x: -2,
			y: -ᐃⵠΔⲆ,
			a: ΔΔᐃⵠ,
			r: 0,
			c: [ⵠ[452], "#178a99", "#0a6372", "#03282e"]
		}], .3, [ⵠ[401], ⵠ[401], ⵠ[401]], .7);
		Ⲇᐃ[Δ.ᐃΔⵠΔⵠΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆᐃⵠΔᐃΔ,
			x: -2,
			y: -ᐃᐃΔⵠ,
			a: ΔΔⲆΔ,
			r: 0,
			c: [ⵠ[396], "#991616", "#750a0a", ⵠ[396]]
		}], .3, [ⵠ[401], ⵠ[401], ⵠ[401]], .7);
		Ⲇᐃ[Δ.ⵠᐃΔⲆⲆΔΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃⲆΔⵠⵠⵠⲆ,
			x: ΔΔⲆᐃ,
			y: ΔᐃⲆΔ,
			a: 1,
			r: Ⲇᐃⵠᐃ,
			c: [ⵠ[94], ⵠ[272]]
		}, {
			f: ΔᐃΔⵠΔⲆᐃ,
			x: 0,
			y: ⵠᐃⲆᐃ,
			a: ΔⲆᐃ,
			r: ⵠⲆⲆᐃ,
			c: [ⵠ[94], ⵠ[272], "#1c2528", ⵠ[427], ⵠ[283], "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
		}, {
			f: ⵠᐃⵠⵠⵠⲆΔ,
			x: ⲆⵠⲆ,
			y: 0,
			a: ΔΔᐃⵠ,
			r: ΔΔᐃ,
			c: [ⵠ[427], ⵠ[283]]
		}, {
			f: ⲆΔᐃΔⵠⲆⲆ,
			x: 0,
			y: 0,
			a: 1,
			r: 0,
			c: [ⵠ[427], ⵠ[283], "#418ba5", "#59b8ce"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⲆΔⲆΔⵠᐃ] = Ⲇᐃ[Δ.ⵠᐃΔⲆⲆΔΔ];
		Ⲇᐃ[Δ.ⲆⵠᐃⵠΔⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ΔΔⵠⵠᐃⵠⵠ,
			x: 45,
			y: 70,
			a: ΔⲆᐃ,
			r: ΔⵠⲆⲆ,
			c: [ⵠ[493], ⵠ[390], ⵠ[314], ⵠ[ᐃⲆⲆΔⵠ]]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃⲆⲆⲆᐃⵠ] = Ⲇᐃ[Δ.ⲆⵠᐃⵠΔⵠΔ];
		Ⲇᐃ[Δ.ⲆΔⲆΔⲆΔΔ] = ΔᐃΔᐃ(ⵠⵠⲆ, [{
			f: ⲆΔⵠᐃΔΔⵠ,
			x: ΔΔⵠᐃ,
			y: 0,
			a: 1,
			r: ⵠⵠⲆⲆ,
			c: [ⵠ[493], "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
		}], .52, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⲆΔⲆᐃⲆΔ] = Ⲇᐃ[Δ.ⲆΔⲆΔⲆΔΔ];
		Ⲇᐃ[Δ.ⵠⵠᐃⲆΔΔⲆ] = ΔᐃΔᐃ(ⵠⲆⲆ, [{
			f: ⵠΔᐃΔΔᐃⵠ,
			x: 0,
			y: 0,
			a: ⵠⲆⲆ,
			r: 0,
			c: [ⵠ[345], ⵠ[413], ⵠ[444], "#1b1a25"]
		}], .12, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠΔⲆΔⲆᐃ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆΔΔⲆ];
		Ⲇᐃ[Δ.ΔΔᐃⵠⲆΔⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔⵠⵠⵠᐃ,
			x: 0,
			y: Δⵠⵠ,
			a: 1,
			r: ΔᐃⲆΔ,
			c: [ⵠ[345], ⵠ[413], ⵠ[444]]
		}], .25, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠΔⲆΔⲆⵠⵠ] = Ⲇᐃ[Δ.ΔΔᐃⵠⲆΔⵠ];
		Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠᐃ] = ΔᐃΔᐃ(1, [{
			f: ᐃⵠⵠⵠΔΔᐃ,
			x: 0,
			y: ᐃⲆᐃΔⵠ,
			a: ΔΔᐃᐃ,
			r: ΔΔᐃ,
			c: [ⵠ[471], "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
		}], .39, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃᐃⵠᐃΔⵠⵠ] = Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠᐃ];
		Ⲇᐃ[Δ.ⲆΔⵠⵠⲆᐃⵠ] = ΔᐃΔᐃ(1, [{
			f: ᐃⵠⵠⵠΔΔᐃ,
			x: 0,
			y: ᐃⲆᐃΔⵠ,
			a: 1,
			r: ᐃⵠΔ,
			c: [ⵠ[471], "#8c7654", ⵠ[542], "#a88e6c", ⵠ[542], "#705845"]
		}], .39, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠᐃⵠ] = Ⲇᐃ[Δ.ⲆΔⵠⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃⵠⲆΔⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃⲆᐃⲆΔ,
			x: 0,
			y: ⲆᐃΔⵠⵠ,
			a: ᐃⵠ,
			r: 0,
			c: [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#49B669", "#19994C", "#71C187"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃⲆΔⵠᐃⲆ] = Ⲇᐃ[Δ.ⵠᐃⵠⲆΔⵠΔ];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆⲆΔⲆ] = ΔᐃΔᐃ(ⲆΔⵠⲆ, [{
			f: ΔⲆᐃⲆᐃⲆΔ,
			x: ΔᐃⲆΔ,
			y: 10,
			a: ⵠⵠⲆ,
			r: Ⲇᐃⵠᐃ,
			c: [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#C45727", "#994617", "#DB9358"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃⲆᐃ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆⲆΔⲆ];
		Ⲇᐃ[Δ.ᐃⵠⵠΔⵠⵠΔ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃⲆᐃⲆΔ,
			x: ΔΔⲆᐃ,
			y: 10,
			a: ⵠᐃΔᐃ,
			r: 0,
			c: [ⵠ[493], ⵠ[115], ⵠ[261], ⵠ[376], "#2792C1", "#196599", "#59C0D8"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔΔⵠᐃⵠⲆⲆ] = Ⲇᐃ[Δ.ᐃⵠⵠΔⵠⵠΔ];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⵠΔ] = ΔᐃΔᐃ(ΔΔᐃⵠ, [{
			f: ⲆⵠⵠᐃⵠⲆᐃ,
			x: -1,
			y: ΔᐃⲆΔ,
			a: ᐃⲆⵠΔ,
			r: 0,
			c: [ⵠ[252], "#b03431", "#94312d", "#bd3c33", "#de5445"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃᐃᐃⲆⵠΔ] = Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⵠΔ];
		Ⲇᐃ[Δ.ΔᐃᐃⵠΔᐃⲆ] = Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⵠΔ];
		Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆⲆ] = ΔᐃΔᐃ(ΔΔᐃᐃ, [{
			f: ΔᐃΔᐃᐃⵠᐃ,
			x: 0,
			y: 0,
			a: 1,
			r: ΔΔⵠᐃ,
			c: [ⵠ[493], "#cae9eb", "#75bcae", ⵠ[142], "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
		}], .2, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⲆΔΔⵠᐃΔ] = Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆⲆ];
		Ⲇᐃ[Δ.ⵠⵠⵠΔⲆᐃⲆ] = ΔᐃΔᐃ(ΔΔᐃⵠ, [{
			f: ΔⲆΔⵠΔⲆⵠ,
			x: ΔΔⲆᐃ,
			y: 0,
			a: ΔΔᐃᐃ,
			r: Math.PI / 5,
			c: [ⵠ[493], "#284c4a", "#193533", "#c7efef", "#7fccca"]
		}], .75, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠⲆΔΔⵠⲆ] = Ⲇᐃ[Δ.ⵠⵠⵠΔⲆᐃⲆ];
		Ⲇᐃ[Δ.ⲆⵠⵠΔᐃⲆⲆ] = ΔᐃΔᐃ(ᐃΔⲆⵠ, [{
			f: ⲆⲆΔΔΔᐃⵠ,
			x: ᐃⵠΔ,
			y: 0,
			a: ᐃΔⲆⵠ,
			r: Ⲇᐃⵠᐃ,
			c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
		}], .55, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃⵠⲆⲆΔᐃⵠ] = ΔᐃΔᐃ(ⲆΔⵠⲆ, [{
			f: ⲆΔⵠⲆᐃᐃᐃ,
			x: 0,
			y: 0,
			a: ΔᐃⵠΔ,
			r: ΔⵠⲆΔ,
			c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
		}], .55, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠⲆ] = ΔᐃΔᐃ(1, [{
			f: ⲆⲆΔΔΔᐃⵠ,
			x: 0,
			y: ΔᐃⲆΔ,
			a: 1,
			r: ΔⲆᐃⲆ,
			c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
		}], .55, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃᐃᐃⲆΔΔⵠ] = ΔᐃΔᐃ(1, [{
			f: ⲆΔⵠⲆᐃᐃᐃ,
			x: 0,
			y: ΔᐃⲆΔ,
			a: ᐃⲆⵠΔ,
			r: Δⵠⵠ,
			c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
		}], .55, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆⵠᐃⲆΔⵠⵠ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ΔⲆᐃᐃⵠⵠΔ,
			x: ⵠᐃⲆᐃ,
			y: ΔΔⲆᐃ,
			a: 1,
			r: ⲆΔᐃ,
			c: ["#59ba72", "#94d966", "#5aa628", ⵠ[493], "#38874d"]
		}], .35, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔⲆⵠⵠΔⲆⵠ] = ΔᐃΔᐃ(1, [{
			f: ΔⲆᐃᐃⵠⵠΔ,
			x: ⲆⲆⲆ,
			y: 0,
			a: 1,
			r: 0,
			c: ["#C45727", "#de7d46", "#DB9358", ⵠ[493], "#994617"]
		}], .35, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔΔ] = ΔᐃΔᐃ(ΔΔⲆΔ, [{
			f: ΔⲆᐃᐃⵠⵠΔ,
			x: 0,
			y: 0,
			a: 1,
			r: 0,
			c: ["#3a9dbd", "#59C0D8", "#48abcb", ⵠ[493], "#196599"]
		}], .35, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃᐃⲆⵠᐃⵠⲆ] = ΔᐃΔᐃ(ⲆⲆΔᐃ, [{
			f: ᐃᐃᐃᐃⵠ,
			x: ΔΔⲆᐃ,
			y: ⵠⵠⲆⲆ,
			a: 1,
			r: Math.PI / ⲆΔᐃΔ,
			c: [ⵠ[493], "#6d5041", "#4f3d35", ⵠ[361], ⵠ[516], "#757575"]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃᐃᐃ] = Ⲇᐃ[Δ.ᐃᐃⲆⵠᐃⵠⲆ];
		Ⲇᐃ[Δ.ΔΔⲆΔΔᐃⵠ] = ΔᐃΔᐃ(ΔⲆᐃ, [{
			f: ᐃᐃᐃᐃⵠ,
			x: 0,
			y: ⲆⵠⲆ,
			a: 1,
			r: Math.PI / Δᐃⵠⵠ,
			c: [ⵠ[493], ⵠ[269], ⵠ[114], ⵠ[85], ⵠ[584], "#b4ac45"]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃⲆΔⲆᐃⲆ] = Ⲇᐃ[Δ.ΔΔⲆΔΔᐃⵠ];
		Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆⲆ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃᐃᐃⵠ,
			x: ⲆⵠⲆ,
			y: 0,
			a: ΔᐃᐃⲆ,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[123], ⵠ[33], "#42aab8"]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⵠⲆΔΔᐃⲆ] = Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆⲆ];
		Ⲇᐃ[Δ.ΔΔΔⲆᐃΔΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃᐃᐃᐃⵠ,
			x: ⲆΔᐃ,
			y: 0,
			a: ⵠⲆⲆ,
			r: Math.PI / 5,
			c: [ⵠ[493], ⵠ[305], ⵠ[421], ⵠ[408], ⵠ[373], "#a853c7"]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆⲆ] = Ⲇᐃ[Δ.ΔΔΔⲆᐃΔΔ];
		Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆΔᐃ] = ΔᐃΔᐃ(ⲆΔⵠⲆ, [{
			f: ⵠⵠΔⵠᐃⲆⵠ,
			x: 0,
			y: ΔⵠⲆⲆ,
			a: 1,
			r: ⵠⵠᐃⵠ,
			c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
		}], .35, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃΔⲆᐃ] = Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆΔᐃ];
		Ⲇᐃ[Δ.ⲆΔⲆᐃⲆᐃⵠ] = ΔᐃΔᐃ(ᐃⲆⵠΔ, [{
			f: Δⵠⵠᐃⵠᐃⵠ,
			x: 0,
			y: ᐃΔⵠⵠ,
			a: 1,
			r: ⵠⲆⲆᐃ,
			c: [ⵠ[458], ⵠ[210], "#493425", ⵠ[251]]
		}], .35, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆΔᐃ] = Ⲇᐃ[Δ.ⲆΔⲆᐃⲆᐃⵠ];
		Ⲇᐃ[Δ.ⲆⵠᐃᐃΔⲆⵠ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ΔᐃᐃΔΔᐃᐃ,
			x: ΔⵠⲆΔ,
			y: -2,
			a: ΔᐃⵠΔ,
			r: ΔⵠⲆΔ,
			c: [ⵠ[458], "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", ⵠ[42], "#747474", "#969696", ⵠ[319]]
		}], .4, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠᐃᐃⲆᐃᐃ] = Ⲇᐃ[Δ.ⲆⵠᐃᐃΔⲆⵠ];
		Ⲇᐃ[Δ.ⲆⲆᐃⲆΔᐃⵠ] = ΔᐃΔᐃ(1, [{
			f: ΔᐃᐃΔⲆⲆᐃ,
			x: 0,
			y: 0,
			a: ᐃⵠⵠ,
			r: 0,
			c: ["#dbce71", ⵠ[584], ⵠ[85]]
		}], .35, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠᐃ] = Ⲇᐃ[Δ.ⲆⲆᐃⲆΔᐃⵠ];
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃΔⲆ] = ΔᐃΔᐃ(ⲆΔⵠⲆ, [{
			f: ⲆⵠⲆΔΔᐃⲆ,
			x: 0,
			y: 0,
			a: ΔᐃⵠΔ,
			r: ΔΔⲆᐃ,
			c: ["#717171", "#485252", ⵠ[42], "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
		}], .45, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔⵠⲆᐃⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃΔΔᐃᐃΔⲆ];
		Ⲇᐃ[Δ.ΔⲆⲆⵠⵠᐃⲆ] = ΔᐃΔᐃ(ⲆᐃⲆⲆ, [{
			f: ᐃⵠⵠⲆⲆⵠⲆⲆⲆ,
			x: ⵠⵠⲆⲆ,
			y: ⵠᐃⲆᐃ,
			a: ⲆᐃⲆⲆ,
			r: Δⵠⵠ,
			c: ["#511f00", "#2f1300", ⵠ[142], "#d4d4d4", "#5b2400", "#984e21"]
		}], .15, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⲆⵠΔΔᐃΔᐃ] = Ⲇᐃ[Δ.ΔⲆⲆⵠⵠᐃⲆ];
		Ⲇᐃ[Δ.ⵠΔΔᐃΔⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ᐃΔⵠΔⵠᐃⲆᐃΔ,
			x: 0,
			y: 0,
			a: ᐃⲆⵠΔ,
			r: 0,
			c: ["#221e1b", ⵠ[142], "#f6f0e7"]
		}], .3, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆΔᐃⲆⲆᐃⵠ] = Ⲇᐃ[Δ.ⵠΔΔᐃΔⵠⵠ];
		Ⲇᐃ[Δ.ⵠᐃⵠΔⲆⵠⲆ] = ΔᐃΔᐃ(ᐃΔⲆⵠ, [{
			f: ᐃᐃᐃⲆⲆΔⲆ,
			x: -ΔⲆⲆΔ,
			y: -ΔᐃΔΔⲆ,
			a: 1,
			r: ᐃΔⵠⵠ,
			c: [ⵠ[98], ⵠ[329], ⵠ[297]]
		}], .31, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆᐃⲆΔⵠΔΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃⵠⵠΔⵠΔⲆ,
			x: 0,
			y: ⲆⵠⲆ,
			a: 1,
			r: 0,
			c: ["#D7C393", "#a48c6c"]
		}], .22, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆⲆᐃ] = ΔᐃΔᐃ(1, [{
			f: ⲆⲆᐃΔⲆⵠᐃΔᐃ,
			x: 0,
			y: 0,
			a: ⵠⲆⲆ,
			r: 0,
			c: ["#93CBCE", "#E9F6F6"]
		}], .3, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠⲆⲆ] = ΔᐃΔᐃ(ᐃⵠ, [{
			f: ᐃⵠⵠΔⵠΔⲆ,
			x: 0,
			y: 0,
			a: 1,
			r: ΔⲆᐃⲆ,
			c: ["#866432", "#6b4f25"]
		}], .22, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆᐃΔ] = ΔᐃΔᐃ(ΔᐃᐃⲆ, [{
			f: ⲆⵠⵠⵠΔⲆⲆⵠⵠ,
			x: ᐃⵠⵠⵠ,
			y: ΔᐃⵠⲆ,
			a: ΔΔᐃⵠ,
			r: 0,
			c: [ⵠ[74], ⵠ[ⲆⵠΔᐃᐃ], ⵠ[480], "#2f2211", "#785931", ⵠ[544]]
		}], .22, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⲆΔΔⲆⲆΔᐃ] = ΔᐃΔᐃ(ⲆΔᐃⲆ, [{
			f: ⵠⵠⲆⵠΔⵠⵠᐃⵠ,
			x: ⵠⲆⵠⵠ,
			y: 2,
			a: ⲆᐃⲆⲆ,
			r: ⵠⵠᐃⵠ,
			c: [ⵠ[74], ⵠ[ⵠᐃᐃΔᐃ], ⵠ[480], "#2f2211", "#785931", ⵠ[544]]
		}], .22, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ΔΔΔⲆⵠⲆⵠ] = Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ⵠⲆⵠΔᐃΔⵠ] = Ⲇᐃ[Δ.ⲆΔΔⲆⲆΔᐃ];
		Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃΔᐃ] = ΔᐃΔᐃ(ΔⲆᐃ, [{
			f: ⲆⲆⵠⵠᐃᐃΔ,
			x: ⵠⵠⲆⲆ,
			y: ⵠⲆⲆᐃ,
			a: 1,
			r: 0,
			c: [ⵠ[74], "#717273", "#606162", "#a09f9f", "#878787", ⵠ[319]]
		}], .1, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠᐃⵠᐃⵠᐃⵠ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠΔⲆⲆᐃΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠⵠΔⲆᐃᐃⵠ,
			x: 0,
			y: 0,
			a: ᐃⲆⵠΔ,
			r: Math.PI / 5,
			c: [ⵠ[248], ⵠ[287], ⵠ[69], ⵠ[29], ⵠ[118], ⵠ[92], ⵠ[526]]
		}], .18, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠᐃⵠ] = ΔᐃΔᐃ(ΔᐃᐃⲆ, [{
			f: ⲆⵠᐃⲆᐃⵠᐃⵠᐃ,
			x: 0,
			y: ⲆΔᐃ,
			a: 1,
			r: Math.PI / 5,
			c: [ⵠ[248], ⵠ[287], ⵠ[69], ⵠ[29], ⵠ[118], ⵠ[92], ⵠ[526]]
		}], .18, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃΔⵠⲆᐃⵠᐃ] = Ⲇᐃ[Δ.ⲆⵠΔⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ᐃΔᐃⵠΔΔⲆ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃⲆΔⲆΔⵠ] = ΔᐃΔᐃ(ᐃⲆⵠΔ, [{
			f: ΔᐃⵠᐃᐃⵠⲆⵠⲆ,
			x: ⲆⲆⲆ,
			y: 0,
			a: 1,
			r: 0,
			c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃⲆᐃᐃⲆⵠ] = Ⲇᐃ[Δ.ⵠᐃⲆΔⲆΔⵠ];
		Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃΔ] = ΔᐃΔᐃ(1, [{
			f: ᐃΔᐃΔΔᐃᐃΔⵠ,
			x: 0,
			y: ⲆⵠⲆ,
			a: ᐃⵠ,
			r: ⵠⵠⲆⲆ,
			c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆΔΔᐃⲆᐃⲆ] = ΔᐃΔᐃ(ᐃᐃΔᐃ, [{
			f: ᐃΔᐃⵠᐃⵠⲆⵠΔ,
			x: ⲆⵠⲆ,
			y: 0,
			a: 1,
			r: 0,
			c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
		}], .6, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⲆΔΔⲆᐃᐃ] = ΔᐃΔᐃ(ⲆΔᐃⲆ, [{
			f: ⵠⲆΔΔΔΔΔ,
			x: 0,
			y: -2,
			a: ΔⲆᐃ,
			r: 0,
			c: [ⵠ[98], "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
		}], .17, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆⲆΔᐃⵠΔΔ] = Ⲇᐃ[Δ.ᐃⲆΔΔⲆᐃᐃ];
		Ⲇᐃ[Δ.ⵠΔⲆⵠⵠΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠᐃᐃⲆⵠⵠᐃⲆⲆ,
			x: -3,
			y: -5,
			a: ᐃΔⲆⵠ,
			r: ⵠⲆⲆᐃ,
			c: [ⵠ[98], "#63767c", "#424f51", "#6c8288", "#536468", "#202020", ⵠ[142], "#806f60", "#514942", "#756557"]
		}], .23, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃᐃ] = ΔᐃΔᐃ(1, [{
			f: ⵠⲆΔᐃᐃⵠⲆᐃᐃ,
			x: ⵠⵠⲆⲆ,
			y: 0,
			a: ᐃΔⲆⵠ,
			r: 0,
			c: [ⵠ[98], "#42261A", "#281818"]
		}], .23, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃΔⲆᐃⲆᐃΔ] = Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃᐃ];
		Ⲇᐃ[Δ.ᐃᐃⲆᐃᐃⵠΔ] = ΔᐃΔᐃ(ᐃⲆⵠΔ, [{
			f: ᐃᐃᐃᐃⵠᐃⵠ,
			x: -ΔⵠⵠΔ,
			y: 0,
			a: 1,
			r: ΔᐃⲆΔ,
			c: [ⵠ[74], "#65A8B7", ⵠ[61], "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", ⵠ[61]]
		}], .2, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ΔᐃΔᐃⵠΔⵠ] = Ⲇᐃ[Δ.ᐃᐃⲆᐃᐃⵠΔ];
		Ⲇᐃ[Δ.ⲆⲆᐃΔⲆᐃΔ] = ΔᐃΔᐃ(1, [{
			f: ⲆᐃΔᐃΔⲆⵠΔΔ,
			x: ⲆΔᐃ,
			y: 0,
			a: ΔᐃⵠΔ,
			r: ⵠᐃⲆᐃ,
			c: [ⵠ[74], "#961B1B", "#702727", "#C43B3B"]
		}], .15, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⵠⵠ] = ΔᐃΔᐃ(1, [{
			f: ⵠⵠⵠᐃⲆᐃⵠ,
			x: 0,
			y: ΔⲆⵠ,
			a: ΔⲆᐃ,
			r: ΔⵠⲆⲆ,
			c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", ⵠ[74]]
		}], .3, [ⵠ[189], ⵠ[136], ⵠ[371]], .5);
		Ⲇᐃ[Δ.ⵠᐃⵠⵠⵠⲆⵠ] = Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⵠⵠ];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠⲆᐃ] = ΔᐃΔᐃ(1, [{
			f: ΔᐃᐃᐃⲆΔⵠ,
			x: 0,
			y: ΔᐃⲆΔ,
			a: ΔⲆᐃ,
			r: 0,
			c: [ⵠ[74], "#352E1E", ⵠ[480], ⵠ[160]]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ᐃⵠⵠⲆᐃΔⵠ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠⲆᐃ];
		Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃⵠΔ] = ΔᐃΔᐃ(ᐃⵠ, [{
			f: ⵠⲆⵠᐃΔⵠΔⲆΔ,
			x: -ⲆΔᐃΔ,
			y: -5,
			a: ΔΔᐃᐃ,
			r: ΔⲆᐃⲆ,
			c: ["#e2d63b", "#ee71a9", "#42b672"]
		}], 1, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔⲆⵠᐃⵠΔⲆ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃⵠΔ];
		Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠΔ] = ΔᐃΔᐃ(ΔᐃⵠΔ, [{
			f: ΔΔⲆᐃΔΔΔ,
			x: 0,
			y: ᐃⵠΔ,
			a: ΔᐃᐃⲆ,
			r: 0,
			c: [ⵠ[74], "#332715", ⵠ[480], ⵠ[160]]
		}], .5, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃᐃᐃⵠᐃⲆ] = Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠΔ];
		Ⲇᐃ[Δ.ⵠⵠⲆⲆΔⲆⵠ] = ΔᐃΔᐃ(1, [{
			f: ᐃΔΔΔᐃᐃΔ,
			x: ᐃⵠΔ,
			y: 0,
			a: 1,
			r: 0,
			c: [ⵠ[74], "#352618", "#402b18", ⵠ[91], ⵠ[160], "#52391e"]
		}], .3, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ⵠⵠⲆⵠΔⵠⵠ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠΔΔ] = ΔᐃΔᐃ(1, [{
			f: ⵠΔⲆΔⲆᐃⵠ,
			x: -ⵠᐃΔᐃ,
			y: ⲆΔᐃ,
			a: 1,
			r: -Math.PI / 5,
			c: [ⵠ[74], ⵠ[ⵠᐃᐃΔᐃ], ⵠ[480], "#594225", ⵠ[544]]
		}], .4, [ⵠ[189], ⵠ[136], ⵠ[371]], .7);
		Ⲇᐃ[Δ.ⵠΔⲆⲆⵠⲆⲆ] = Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠΔΔ];
		Ⲇᐃ[Δ.ⵠⲆΔⵠⲆᐃⵠ] = ΔᐃΔᐃ(ᐃⲆⵠΔ, [{
			f: ⵠΔⲆΔⲆᐃⵠ,
			x: -ⵠᐃΔᐃ,
			y: ⵠᐃⲆᐃ,
			a: 1,
			r: -Math.PI / 5,
			c: [ⵠ[74], ⵠ[5], ⵠ[480], "#594225", "#3F2D18", "#2D2112"]
		}], .4, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠⵠ] = Ⲇᐃ[Δ.ⵠⲆΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ⲆΔⵠⲆᐃⲆᐃ] = ΔᐃΔᐃ(ᐃⲆⵠΔ, [{
			f: ᐃΔⲆΔⲆᐃᐃ,
			x: 0,
			y: ᐃΔⵠⵠ,
			a: 1,
			r: 0,
			c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
		}], .25, [ⵠ[401], ⵠ[401], ⵠ[401]], .5);
		Ⲇᐃ[Δ.ⵠΔΔΔⵠΔᐃ] = ΔᐃΔᐃ(1, [{
			f: ᐃⵠᐃᐃΔᐃΔ,
			x: 0,
			y: ⲆⲆⲆ,
			a: ⲆΔᐃⲆ,
			r: ⵠᐃⲆᐃ,
			c: [ⵠ[74], "#ed5f4f", "#ce4545", ⵠ[142], "#e2dad7"]
		}], .2, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃⵠⲆⲆⵠΔ] = Ⲇᐃ[Δ.ⵠΔΔΔⵠΔᐃ];
		Ⲇᐃ[Δ.ᐃⲆᐃΔⵠⲆΔ] = ΔᐃΔᐃ(ΔΔᐃᐃ, [{
			f: ΔᐃⲆΔⵠⲆⲆΔᐃ,
			x: ᐃⵠΔ,
			y: 0,
			a: ᐃᐃΔᐃ,
			r: 0,
			c: [ⵠ[74], "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", ⵠ[326], ⵠ[30]]
		}], .25, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃΔᐃⲆᐃⵠ] = Ⲇᐃ[Δ.ᐃⲆᐃΔⵠⲆΔ];
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆᐃᐃ] = ΔᐃΔᐃ(1, [{
			f: ⵠΔᐃⲆᐃΔᐃⵠΔ,
			x: -2,
			y: -ⲆΔᐃⲆΔ,
			a: 1,
			r: ⵠⵠⲆⲆ,
			c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
		}], .25, [ⵠ[574], ⵠ[477], ⵠ[378]], .5);
		Ⲇᐃ[Δ.ΔᐃⵠΔΔⵠΔ] = Ⲇᐃ[Δ.ᐃΔᐃⲆⲆᐃᐃ];
		Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ] = [];
		Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ][0] = ⵠᐃ.ⵠⵠΔⵠᐃᐃⲆ;
		Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ][1] = ⵠᐃ.ΔⵠⵠⲆΔᐃΔ;
		Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ][2] = ⵠᐃ.ⵠⲆΔᐃⲆᐃΔ;
		Ⲇᐃ[Δ.ⵠᐃⵠⲆⵠΔⲆ] = Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ];
		Ⲇᐃ[Δ.ΔᐃΔᐃΔᐃΔ] = Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ];
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ] = [];
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ][Ⲇᐃⵠᐃ] = ⵠᐃ.ⲆΔΔΔᐃⲆΔ;
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ][ΔΔⲆΔ] = ⵠᐃ.ΔⵠᐃⲆΔΔᐃ;
		Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ][2] = ⵠᐃ.ᐃΔΔⲆᐃΔΔ;
		Ⲇᐃ[Δ.ⲆⵠᐃⲆⲆⲆⲆ] = Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ];
		Ⲇᐃ[Δ.ⵠΔΔΔᐃᐃⵠ] = Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ];
		Ⲇᐃ[Δ.ⲆΔᐃᐃⲆⲆΔ] = Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⵠⲆΔ] = Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ] = [];
		Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ][0] = ⵠᐃ.ΔⲆΔⲆᐃᐃΔ;
		Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ][ΔᐃᐃⲆ] = ⵠᐃ.ΔᐃΔⵠᐃΔⲆ;
		Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ][2] = ⵠᐃ.ⵠᐃᐃⲆⵠᐃᐃ;
		Ⲇᐃ[Δ.ⲆΔᐃᐃⲆⲆΔ] = Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.ⵠⲆⵠⵠⵠⲆΔ] = Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ];
		Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ] = [];
		Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ][ΔⵠⲆΔ] = ⵠᐃ.ᐃⵠⲆⵠΔⲆᐃ;
		Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ][ᐃᐃΔᐃ] = ⵠᐃ.ΔⲆⲆᐃΔⲆΔ;
		Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ][ⲆᐃⲆᐃ] = ⵠᐃ.ᐃΔΔⵠΔⲆΔ;
		Ⲇᐃ[Δ.ΔⲆⵠⲆᐃⵠᐃ] = Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ⵠᐃⵠⲆⲆⵠⵠ] = Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ][0] = ⵠᐃ.ᐃⲆⵠⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ][1] = ⵠᐃ.ᐃᐃⵠΔⵠᐃΔ;
		Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ][2] = ⵠᐃ.ᐃΔΔΔⵠΔᐃ;
		Ⲇᐃ[Δ.ⲆΔⲆⲆΔᐃΔ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ];
		Ⲇᐃ[Δ.ⵠⵠⵠᐃⲆⵠΔ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ][0] = ⵠᐃ.ΔᐃⲆᐃᐃⲆⲆ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ][ΔᐃⵠΔ] = ⵠᐃ.ⲆᐃⵠⵠⵠΔⵠ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ][ⲆᐃⲆᐃ] = ⵠᐃ.ⲆⲆᐃⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ΔⲆΔⲆⵠⲆᐃ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⲆ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ];
		Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ][ᐃⵠΔ] = ⵠᐃ.ᐃᐃΔⲆⵠⵠᐃ;
		Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ][ᐃⵠ] = ⵠᐃ.ᐃⲆΔᐃⵠⵠⲆ;
		Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ][2] = ⵠᐃ.ⲆⲆⲆΔⲆⵠⲆ;
		Ⲇᐃ[Δ.ⵠᐃⲆΔΔⵠⲆ] = Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ];
		Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆΔⵠ] = Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ] = [];
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ][ⵠᐃⲆᐃ] = ⵠᐃ.Δⵠᐃⵠⵠᐃᐃ;
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ][1] = ⵠᐃ.ΔⵠⵠⵠΔⵠΔ;
		Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ][ⵠᐃⵠΔ] = ⵠᐃ.ⲆⵠⲆⵠᐃⵠⲆ;
		Ⲇᐃ[Δ.ⲆⵠⲆⵠⲆΔΔ] = Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ];
		Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃΔⵠ] = Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ];
		Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ][ᐃΔⵠⵠ] = ⵠᐃ.ⵠⵠⲆⵠⲆᐃᐃ;
		Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ][ⲆΔᐃⲆ] = ⵠᐃ.ΔⲆⵠΔΔᐃΔ;
		Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ][ⵠΔⵠᐃ] = ⵠᐃ.ⲆᐃⲆⵠⲆᐃⵠ;
		Ⲇᐃ[Δ.ⲆⲆΔΔⵠᐃⲆ] = Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ];
		Ⲇᐃ[Δ.ΔᐃⵠΔΔⵠⲆ] = Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ];
		Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ] = [];
		Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ][ⵠⲆⲆᐃ] = ⵠᐃ.ⵠΔⲆᐃᐃⲆᐃ;
		Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ][1] = ⵠᐃ.ΔᐃⵠⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ][2] = ⵠᐃ.ᐃᐃᐃΔⵠⵠΔ;
		Ⲇᐃ[Δ.ᐃΔᐃⲆΔᐃⲆⲆⵠ] = Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃⵠΔⵠⲆΔ] = Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ] = [];
		Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ][0] = ⵠᐃ.ⲆᐃⲆΔᐃᐃⵠ;
		Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ][1] = ⵠᐃ.ⵠᐃⵠⵠΔⵠⵠ;
		Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ][2] = ⵠᐃ.ⲆΔⵠⲆᐃⲆΔ;
		Ⲇᐃ[Δ.ΔⲆΔᐃΔᐃⲆ] = Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ];
		Ⲇᐃ[Δ.ⲆⲆΔΔⲆᐃⲆ] = Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ];
		Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ] = [];
		Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ][ⲆⵠⲆ] = ⵠᐃ.ⵠΔⲆⵠⲆⵠΔ;
		Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ][ⲆⲆΔᐃ] = ⵠᐃ.ⲆⵠⲆⲆᐃᐃᐃ;
		Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ][2] = ⵠᐃ.ᐃⲆⲆⵠᐃΔⵠ;
		Ⲇᐃ[Δ.ΔⲆΔⲆΔⲆΔ] = Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ];
		Ⲇᐃ[Δ.ΔᐃⵠᐃΔⵠᐃ] = Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ];
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ] = [];
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ][ΔΔⲆᐃ] = ⵠᐃ.ᐃᐃⲆⵠⵠⲆⵠ;
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ][1] = ⵠᐃ.ⲆᐃΔΔᐃΔⲆ;
		Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ][ⵠⲆⵠᐃ] = ⵠᐃ.ᐃⲆᐃⲆⵠⲆⵠ;
		Ⲇᐃ[Δ.ᐃᐃΔⵠⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ] = [];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ][0] = ⵠᐃ.ⲆⲆΔΔⵠⵠᐃ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ][ΔΔᐃⵠ] = ⵠᐃ.ⵠΔᐃΔⲆΔᐃ;
		Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ][2] = ⵠᐃ.ⵠΔΔΔΔᐃΔ;
		Ⲇᐃ[Δ.ΔΔᐃⲆΔⵠΔ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ];
		Ⲇᐃ[Δ.ΔΔⲆⵠⲆΔΔ] = Ⲇᐃ[Δ.ᐃᐃⲆⵠᐃⵠⲆ];
		Ⲇᐃ[Δ.ᐃᐃΔᐃΔⵠⵠ] = Ⲇᐃ[Δ.ΔΔⲆΔΔᐃⵠ];
		Ⲇᐃ[Δ.ᐃᐃⵠⲆⲆⵠΔ] = Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆⲆ];
		Ⲇᐃ[Δ.ΔᐃⲆΔΔⵠΔ] = Ⲇᐃ[Δ.ΔΔΔⲆᐃΔΔ];
		Ⲇᐃ[Δ.ⵠΔⵠⵠⲆᐃⲆ] = Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⲆΔΔⵠⵠⵠⵠ] = Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃᐃ];
		Ⲇᐃ[Δ.ⵠᐃΔΔⵠΔⵠ] = Ⲇᐃ[Δ.ΔᐃᐃⲆⲆⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃⲆ] = Ⲇᐃ[Δ.ⲆΔᐃᐃΔⲆᐃ];
		Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃᐃⵠ] = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃΔ];
		Ⲇᐃ[Δ.ⵠᐃΔⵠᐃⵠΔ] = Ⲇᐃ[Δ.ᐃⵠⲆⲆΔᐃⵠ];
		Ⲇᐃ[Δ.ⵠⲆⲆⵠΔⲆΔ] = Ⲇᐃ[Δ.ⲆⵠⵠΔᐃⲆⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⲆᐃⵠ] = Ⲇᐃ[Δ.ᐃᐃᐃⲆΔΔⵠ];
		Ⲇᐃ[Δ.ⵠᐃⲆΔⲆᐃᐃ] = Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠⲆ];
		Ⲇᐃ[Δ.ΔΔᐃΔᐃⲆΔ] = Ⲇᐃ[Δ.ΔⲆᐃᐃⵠⵠⵠ];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠΔⲆⲆ] = Ⲇᐃ[Δ.ΔⲆᐃⲆᐃᐃΔ];
		Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⲆΔ] = Ⲇᐃ[Δ.ⲆⲆΔᐃⲆᐃⵠ];
		Ⲇᐃ[Δ.ᐃⵠᐃⵠᐃⲆⲆ] = Ⲇᐃ[Δ.ⲆⲆΔⵠⲆⲆΔ];
		Ⲇᐃ[Δ.ⵠᐃΔⲆⲆᐃⵠ] = Ⲇᐃ[Δ.ⲆΔᐃⲆΔⲆᐃ];
		Ⲇᐃ[Δ.ⲆⵠⲆᐃⲆᐃΔ] = Ⲇᐃ[Δ.ΔΔⲆⵠΔΔᐃ];
		Ⲇᐃ[Δ.ᐃⵠᐃⵠⲆᐃⵠ] = Ⲇᐃ[Δ.ΔᐃⲆΔⲆⵠⲆ];
		Ⲇᐃ[Δ.ΔⲆⵠΔⵠΔᐃ] = Ⲇᐃ[Δ.ⲆᐃᐃᐃΔΔⲆ];
		Ⲇᐃ[Δ.ⵠᐃⵠΔⲆᐃΔ] = Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃⲆ];
		Ⲇᐃ[Δ.ⲆᐃᐃⲆⲆⵠΔ] = Ⲇᐃ[Δ.ΔᐃⲆᐃᐃᐃⲆ];
		Ⲇᐃ[Δ.ⵠⵠⲆⵠᐃⲆᐃ] = Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆΔΔ];
		Ⲇᐃ[Δ.ⵠⲆΔᐃΔᐃⲆ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆⵠΔ];
		Ⲇᐃ[Δ.ⵠᐃΔⲆΔᐃⵠ] = Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠᐃⲆ];
		Ⲇᐃ[Δ.ᐃΔᐃΔᐃΔⲆ] = Ⲇᐃ[Δ.ᐃΔΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃΔᐃᐃⵠⲆ] = Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃᐃ];
		Ⲇᐃ[Δ.ΔΔΔⲆⵠⲆᐃ] = Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆΔΔ];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⵠ] = Ⲇᐃ[Δ.ᐃᐃⲆⲆⲆΔΔ];
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⲆⵠ] = Ⲇᐃ[Δ.ΔⵠᐃΔⵠᐃᐃ];
		Ⲇᐃ[Δ.ⲆΔⲆⲆⲆΔΔ] = Ⲇᐃ[Δ.ΔᐃⲆⵠⲆⲆΔ];
		Ⲇᐃ[Δ.ⵠⲆΔΔΔⲆᐃ] = Ⲇᐃ[Δ.ⲆᐃⵠⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ⲆΔⲆⲆⵠⵠⵠ] = Ⲇᐃ[Δ.ΔⵠΔⲆⲆᐃⵠ];
		Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⵠᐃ] = Ⲇᐃ[Δ.ᐃᐃᐃᐃⵠⲆᐃ];
		Ⲇᐃ[Δ.ⲆⵠⲆⵠΔΔⵠ] = Ⲇᐃ[Δ.ΔⲆⲆᐃⲆᐃᐃ];
		Ⲇᐃ[Δ.ᐃᐃⵠᐃⵠⲆᐃ] = Ⲇᐃ[Δ.ⲆΔⵠⲆⵠΔΔ];
		Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃⵠ] = Ⲇᐃ[Δ.ⲆΔᐃⲆΔᐃᐃ];
		Ⲇᐃ[Δ.ΔΔΔΔⲆᐃΔ] = Ⲇᐃ[Δ.ᐃΔⵠⵠⵠΔᐃ];
		Ⲇᐃ[Δ.ΔΔⲆᐃΔΔⵠ] = Ⲇᐃ[Δ.ⲆᐃΔⵠⵠⲆΔ];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠΔⲆᐃ] = Ⲇᐃ[Δ.ⵠⵠᐃⵠΔⵠᐃ];
		Ⲇᐃ[Δ.ⵠⲆⵠΔΔⵠⵠ] = Ⲇᐃ[Δ.ᐃΔⵠΔⵠⵠΔ];
		Ⲇᐃ[Δ.ᐃΔᐃΔΔⲆᐃ] = Ⲇᐃ[Δ.ΔᐃⵠⵠⲆⲆⲆ];
		Ⲇᐃ[Δ.ⲆⲆⲆⵠᐃᐃΔ] = Ⲇᐃ[Δ.ΔⲆΔⲆⵠΔΔ];
		Ⲇᐃ[Δ.ᐃΔⵠΔΔᐃⲆ] = Ⲇᐃ[Δ.ΔΔᐃΔᐃΔⵠ];
		Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆⲆΔ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔΔΔΔⵠΔ] = Ⲇᐃ[Δ.ⵠᐃΔⲆⲆΔΔ];
		Ⲇᐃ[Δ.ᐃⵠΔΔⵠΔⲆ] = Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆᐃ];
		Ⲇᐃ[Δ.ᐃΔΔⵠⵠⲆⵠ] = Ⲇᐃ[Δ.ᐃΔⵠΔⵠΔΔ];
		Ⲇᐃ[Δ.ΔⵠΔⲆⵠⲆⲆ] = Ⲇᐃ[Δ.ⵠⵠⵠΔⲆᐃⲆ];
		Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆⵠᐃ] = Ⲇᐃ[Δ.ⲆⵠᐃⵠΔⵠΔ];
		Ⲇᐃ[Δ.ⲆᐃⲆΔᐃⵠⵠ] = Ⲇᐃ[Δ.ⵠΔᐃᐃΔΔΔ];
		Ⲇᐃ[Δ.ⵠⲆᐃΔᐃⵠⵠ] = Ⲇᐃ[Δ.ΔΔΔⵠΔⲆⵠ];
		Ⲇᐃ[Δ.ⵠᐃΔΔᐃⲆΔ] = ⵠᐃᐃ(ᐃΔⲆΔΔᐃⲆⵠᐃ(.8, ΔᐃⲆⲆᐃ, [ⵠ[91], ⵠ[203], ⵠ[203], ⵠ[203]]));
		Ⲇᐃ[Δ.ᐃΔΔⵠⵠΔΔ] = ΔᐃΔᐃ(.5, [{
			f: ⵠΔⲆΔⵠⲆΔⲆΔ,
			x: ΔⵠⲆⲆ,
			y: ⵠΔⵠᐃ,
			a: 1,
			r: ᐃΔⵠⵠ,
			c: [ⵠ[142]]
		}], .16, [ⵠ[203], "#d0ad41", "#b89733"], .9);
		Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃⵠ] = Ⲇᐃ[Δ.ⲆⲆᐃᐃⵠⵠⲆ];
		Ⲇᐃ[Δ.ⲆⵠΔⲆᐃⲆᐃ] = Ⲇᐃ[Δ.ⵠΔΔᐃⵠᐃᐃ];
		Ⲇᐃ[Δ.ⲆᐃᐃΔΔⲆᐃ] = Ⲇᐃ[Δ.ⵠⵠᐃᐃⵠᐃᐃ];
		Ⲇᐃ[Δ.ᐃⵠⵠΔⲆᐃΔ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃⲆΔ];
		Ⲇᐃ[Δ.ᐃᐃⲆΔⲆΔᐃ] = Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ];
		Ⲇᐃ[Δ.ᐃⵠΔΔⵠⵠΔ] = Ⲇᐃ[Δ.ⲆΔⲆᐃⵠᐃⵠ];
		Ⲇᐃ[Δ.ΔᐃᐃⲆᐃⲆⵠ] = Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃⵠⲆ];
		Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆᐃⵠ] = Ⲇᐃ[Δ.ⲆᐃΔᐃⲆΔⵠ];
		Ⲇᐃ[Δ.ᐃᐃⵠΔⵠᐃⵠ] = Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆΔⵠ];
		Ⲇᐃ[Δ.ⵠⲆᐃΔᐃᐃⲆ] = Ⲇᐃ[Δ.ᐃΔⵠⵠᐃᐃⲆ];
		Ⲇᐃ[Δ.ΔΔᐃΔᐃⵠᐃ] = Ⲇᐃ[Δ.ⵠⲆΔⵠᐃⵠⵠ];
		Ⲇᐃ[Δ.ᐃΔᐃᐃΔᐃⲆ] = Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⲆⵠ];
		Ⲇᐃ[Δ.ᐃⵠⲆⲆΔᐃᐃ] = Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠΔ];
		Ⲇᐃ[Δ.ⵠΔⵠⵠΔΔⲆ] = Ⲇᐃ[Δ.ᐃⵠⵠΔΔⵠⲆ];
		Ⲇᐃ[Δ.ᐃΔⲆⵠⵠᐃΔ] = Ⲇᐃ[Δ.ᐃⵠΔᐃⲆⲆΔ];
		Ⲇᐃ[Δ.ⵠⲆΔⲆⵠⲆⲆ] = Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ⲆΔⲆⲆΔⵠΔ] = Ⲇᐃ[Δ.ΔᐃⵠΔⵠⲆΔ];
		Ⲇᐃ[Δ.ΔΔⲆⵠⵠᐃⵠ] = Ⲇᐃ[Δ.ᐃΔⲆΔⵠᐃᐃ];
		Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠᐃ] = Ⲇᐃ[Δ.ᐃⵠΔᐃᐃⲆⲆ];
		Ⲇᐃ[Δ.ⵠⲆⵠᐃΔΔᐃ] = Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⲆᐃ];
		Ⲇᐃ[Δ.ⲆⵠΔΔΔⵠᐃ] = Ⲇᐃ[Δ.ᐃⲆΔⵠⲆᐃᐃ];
		Ⲇᐃ[Δ.ΔΔⲆΔᐃⲆΔ] = Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠΔ];
		Ⲇᐃ[Δ.ⲆⵠΔⲆΔΔⲆ] = Ⲇᐃ[Δ.ⵠΔⵠᐃᐃΔⵠ];
		Ⲇᐃ[Δ.ΔΔᐃΔⵠΔⲆ] = Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⵠΔ];
		Ⲇᐃ[Δ.ᐃΔⵠΔⵠᐃᐃ] = Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ];
		Ⲇᐃ[Δ.ΔΔᐃᐃⲆⲆⵠ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆΔⲆΔ];
		Ⲇᐃ[Δ.Ⲇᐃⵠᐃᐃⵠⵠ] = Ⲇᐃ[Δ.ᐃᐃⵠΔΔⵠΔ];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠᐃⵠ] = Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⵠⵠ];
		Ⲇᐃ[Δ.ⲆΔⲆᐃᐃⲆΔ] = Ⲇᐃ[Δ.ⵠⵠⲆΔᐃΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠⵠⵠⵠⵠⲆ] = Ⲇᐃ[Δ.ΔⵠᐃΔⲆΔᐃ];
		Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⲆᐃ] = Ⲇᐃ[Δ.ᐃⵠⲆⲆⵠⵠⲆ];
		Ⲇᐃ[Δ.ⵠΔⵠΔⲆⵠΔ] = Ⲇᐃ[Δ.ⲆⵠᐃⵠⵠᐃⲆ];
		Ⲇᐃ[Δ.ⵠⵠΔⲆΔᐃΔ] = Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⵠⲆ];
		Ⲇᐃ[Δ.ⲆᐃΔᐃⲆⲆⲆ] = Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆΔᐃ];
		Ⲇᐃ[Δ.ᐃⲆⵠᐃΔΔᐃ] = Ⲇᐃ[Δ.ⲆⵠᐃᐃΔⲆⵠ];
		Ⲇᐃ[Δ.ΔᐃΔΔᐃᐃⵠ] = Ⲇᐃ[Δ.ⲆⲆᐃⲆΔᐃⵠ];
		Ⲇᐃ[Δ.ᐃⲆⵠΔⵠΔᐃ] = Ⲇᐃ[Δ.ᐃΔΔᐃᐃΔⲆ];
		Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⲆⲆ] = Ⲇᐃ[Δ.ⲆΔⲆΔⲆΔΔ];
		Ⲇᐃ[Δ.ⲆᐃᐃⲆᐃᐃΔ] = Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆⲆ];
		Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆΔ] = Ⲇᐃ[Δ.ΔⲆⲆⵠⵠᐃⲆ];
		Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃᐃᐃ] = Ⲇᐃ[Δ.ⵠΔΔᐃΔⵠⵠ];
		Ⲇᐃ[Δ.ⲆⵠΔⵠⲆᐃΔ] = Ⲇᐃ[Δ.ⵠᐃⵠΔⲆⵠⲆ];
		Ⲇᐃ[Δ.ⲆΔᐃᐃΔᐃⲆ] = Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠΔ];
		Ⲇᐃ[Δ.ⲆⲆⵠᐃⲆΔⲆ] = Ⲇᐃ[Δ.ⵠⵠⲆⲆΔⲆⵠ];
		Ⲇᐃ[Δ.ᐃΔᐃΔΔᐃᐃ] = Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠⲆᐃ];
		Ⲇᐃ[Δ.ΔⲆΔⲆⵠᐃⲆ] = Ⲇᐃ[Δ.ⲆᐃⲆΔⵠΔΔ];
		Ⲇᐃ[Δ.ᐃΔⲆⲆⲆⲆⵠ] = Ⲇᐃ[Δ.ᐃⲆΔΔⲆᐃᐃ];
		Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠⲆ] = Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆⲆᐃ];
		Ⲇᐃ[Δ.ΔⵠⵠⵠⵠΔⲆ] = Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠⲆⲆ];
		Ⲇᐃ[Δ.ΔᐃⲆᐃΔⲆⵠ] = Ⲇᐃ[Δ.ⲆⵠΔⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ᐃᐃⲆΔⲆᐃᐃ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠᐃⵠ];
		Ⲇᐃ[Δ.ⵠᐃΔⵠⲆᐃᐃ] = Ⲇᐃ[Δ.ⵠⲆΔⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ⲆΔᐃⲆⲆⲆⵠ] = Ⲇᐃ[Δ.ⲆΔⵠⲆᐃⲆᐃ];
		Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃᐃ] = Ⲇᐃ[Δ.ⵠᐃⲆΔⲆΔⵠ];
		Ⲇᐃ[Δ.ΔΔⲆᐃⵠᐃⵠ] = Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃΔ];
		Ⲇᐃ[Δ.ΔⵠⲆᐃᐃⵠᐃ] = Ⲇᐃ[Δ.ⲆΔΔᐃⲆᐃⲆ];
		Ⲇᐃ[Δ.ⲆΔⲆΔⲆᐃΔ] = Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⵠⵠ];
		Ⲇᐃ[Δ.ᐃⵠᐃΔΔᐃᐃ] = Ⲇᐃ[Δ.ᐃᐃⲆᐃᐃⵠΔ];
		Ⲇᐃ[Δ.ΔⲆⲆΔⵠΔΔ] = Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠΔΔ];
		Ⲇᐃ[Δ.ⲆᐃᐃⵠⲆᐃᐃ] = Ⲇᐃ[Δ.ᐃⲆᐃΔⵠⲆΔ];
		Ⲇᐃ[Δ.ΔᐃⵠⲆⲆⵠΔ] = Ⲇᐃ[Δ.ⵠΔΔΔⵠΔᐃ];
		Ⲇᐃ[Δ.ⵠᐃΔⲆⲆⲆⵠ] = Ⲇᐃ[Δ.ⵠΔⲆⵠⵠΔΔ];
		Ⲇᐃ[Δ.ΔΔⲆⲆᐃⲆΔ] = Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃᐃ];
		Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠᐃⲆ] = Ⲇᐃ[Δ.ⲆⲆᐃΔⲆᐃΔ];
		Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠⲆ] = Ⲇᐃ[Δ.ᐃΔᐃⲆⲆᐃᐃ];
		Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃⲆ] = Ⲇᐃ[Δ.ⵠᐃⵠⲆΔⵠΔ];
		Ⲇᐃ[Δ.ⲆᐃᐃⵠᐃⲆⲆ] = Ⲇᐃ[Δ.ⲆⵠᐃⲆΔⵠⵠ];
		Ⲇᐃ[Δ.ⲆᐃᐃᐃⵠΔᐃ] = Ⲇᐃ[Δ.ⵠⲆⲆⲆⲆΔⲆ];
		Ⲇᐃ[Δ.ⵠⲆΔᐃᐃⲆΔ] = Ⲇᐃ[Δ.ΔⲆⵠⵠΔⲆⵠ];
		Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆᐃ] = Ⲇᐃ[Δ.ᐃⵠⵠΔⵠⵠΔ];
		Ⲇᐃ[Δ.ΔⲆⵠⲆΔⲆⵠ] = Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔΔ];
		Ⲇᐃ[Δ.ΔᐃᐃᐃᐃⲆⲆ] = Ⲇᐃ[Δ.ΔΔᐃⵠⲆΔⵠ];
		Ⲇᐃ[Δ.ΔΔᐃⲆⵠᐃΔ] = Ⲇᐃ[Δ.ⲆΔⵠⵠⲆᐃⵠ];
		Ⲇᐃ[Δ.ΔⲆⲆⲆΔΔᐃ] = Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠᐃ];
		Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆᐃⵠ] = Ⲇᐃ[Δ.ⵠⵠᐃⲆΔΔⲆ];
		Ⲇᐃ[Δ.ΔⵠΔᐃᐃᐃⵠ] = Ⲇᐃ[Δ.ⲆΔΔⲆⲆΔᐃ];
		Ⲇᐃ[Δ.ΔΔⲆⲆⲆⲆΔ] = Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆᐃΔ];
		Ⲇᐃ[Δ.ⵠΔⵠⵠᐃᐃⲆ] = Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃΔᐃ];
		Ⲇᐃ[Δ.ΔᐃⵠⵠΔΔᐃ] = Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠᐃ];
		Ⲇᐃ[Δ.ᐃⵠΔⵠΔΔⲆ] = Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆⵠΔ];
		Ⲇᐃ[Δ.ΔⲆᐃⲆⲆΔᐃ] = Ⲇᐃ[Δ.ᐃΔᐃΔⲆΔⲆ];
		Ⲇᐃ[Δ.ⲆⲆΔᐃⲆⲆⵠ] = Ⲇᐃ[Δ.ⲆⵠⲆΔᐃΔΔ];
		Ⲇᐃ[Δ.ΔⵠⲆⲆⵠⲆⲆ] = Ⲇᐃ[Δ.ⲆΔⲆᐃⲆᐃⵠ]
	}
	ⲆΔᐃΔᐃ = [];
	ᐃΔΔⲆⵠᐃᐃ = [];
	const ⲆⲆ = 6448801;
	const ⵠΔ = ⲆⲆ["ᐃΔ"];
	const Ⲇⵠ = `const ᐃΔⲆ = (typeof Ⲇᐃᐃ === "${ⵠΔ}") ? 1 : 0; return ᐃΔⲆ;`;

	function Ⲇᐃᐃ() {
		ⵠΔ;
		ⲆⲆ();
		return Ⲇⵠ
	}
	const ᐃΔⲆ = 16344718;
	const Δⵠᐃ = new Function(Ⲇᐃᐃ + Ⲇⵠ);
	const Δᐃⵠ = 10999097;
	if (Δⵠᐃ(ᐃΔⲆ, Δᐃⵠ) === 1) {
		const ⲆⲆ = Math.random;
		const ᐃΔ = [];
		const ⵠΔ = function() {
			for (let Ⲇⵠ = 0; Ⲇⵠ < 7830; Ⲇⵠ++) ᐃΔ.push(Ⲇⵠ);
			return ⲆⲆ()
		};
		Math.random = ⵠΔ
	}

	function ⲆᐃΔᐃⲆⲆⲆΔΔ() {
		if (ⲆΔⲆ.reconnect.enabled) {
			Ⲇ.globalAlpha = .9;
			Ⲇ.fillStyle = ⵠ[151];
			ᐃΔⵠ(Ⲇ, ᐃΔΔᐃ - 150, ⲆⲆΔⲆ - 90, 300, 180, 15);
			Ⲇ.fill();
			Ⲇ.globalAlpha = ᐃⵠ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃᐃⲆⲆᐃⲆ];
			Ⲇ.save();
			ⲆΔⲆ.reconnect.rotate = (ⲆΔⲆ.reconnect.rotate + ᐃᐃΔⲆ * 2) % (Math.PI * ᐃᐃΔⵠ);
			Ⲇ.translate(Ⲇⵠⵠⵠ / ⲆᐃⲆᐃ, ᐃΔⲆᐃ / ⵠᐃⵠΔ - 25);
			Ⲇ.rotate(ⲆΔⲆ.reconnect.rotate);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠⵠⲆᐃ, -ⵠⵠ.height / ⵠⵠⲆᐃ);
			Ⲇ.restore();
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃᐃⵠΔΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, (Ⲇⵠⵠⵠ - ⵠⵠ.width) / 2, (ᐃΔⲆᐃ - ⵠⵠ.height) / 2 + 25)
		}
	}

	function ᐃΔⵠⵠⵠᐃᐃⲆⵠ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ⲆᐃᐃⲆ = 0;
		ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ⲆⵠΔᐃⲆΔΔ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = ⲆⲆⲆ; ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ].length > ᐃⲆ; ᐃⲆ++) {
			var ᐃⵠᐃⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃⵠᐃⵠⵠ, ⵠΔᐃ);
			Δᐃⵠᐃ < ΔⵠΔᐃ && (ΔⵠΔᐃ = Δᐃⵠᐃ, ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ⵠΔΔΔⲆ, ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ⲆᐃᐃⲆ = ᐃⵠᐃⵠⵠ.info, ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ΔΔΔⵠ = ᐃⵠᐃⵠⵠ.ΔΔΔⵠ, ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ⵠᐃΔⵠⲆ = ᐃⵠᐃⵠⵠ.id)
		}
		if (ΔⵠΔᐃ < ⲆⵠΔΔ.ⲆⵠΔᐃⲆΔΔ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠΔΔᐃⲆ];
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ΔΔⵠⲆⲆⲆⵠ;
			var ᐃᐃΔ = Math.floor(ΔΔⵠⵠ.info.translate.x + (ΔΔⵠⵠ.info.ⵠⵠ[ΔⵠⲆⲆ].width - ⵠⵠ.width) / 2);
			var ᐃⲆᐃ = Math.floor(ΔΔⵠⵠ.info.translate.y + (ΔΔⵠⵠ.info.ⵠⵠ[0].height - ⵠⵠ.height) / ᐃⵠΔⲆ) + 3;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			if (ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ⲆᐃᐃⲆ > 0) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ᐃⵠᐃⵠⵠ.ⲆᐃᐃⲆ;
				1 < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
		}
	}

	function ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ) {
		!Ⲇᐃ[Δ.Δᐃ][ᐃⵠⲆ] && (Ⲇᐃ[Δ.Δᐃ][ᐃⵠⲆ] = ⲆΔΔΔⲆ(ᐃ, "x" + ᐃⵠⲆ, 17, ⵠ[68]));
		var ⵠⵠ = Ⲇᐃ[Δ.Δᐃ][ᐃⵠⲆ];
		var ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x + ΔΔⵠⵠ.info.ⵠⵠ[ⵠᐃⲆᐃ].width - ⵠⵠ.width - ᐃ * ᐃⲆᐃᐃΔⵠⵠ;
		var ᐃⲆᐃ = ΔΔⵠⵠ.info.translate.y + ΔΔⵠⵠ.info.ⵠⵠ[0].height - ⵠⵠ.height - 19 * ᐃ;
		ⲆΔⲆⵠ == ΔΔⵠⵠ.info.state && (ᐃⲆᐃ += ⵠΔⲆⲆΔ * ᐃ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ)
	}

	function ⲆⵠᐃᐃᐃⲆⲆⵠⲆ() {
		if (!ⲆΔⲆ.ⲆΔᐃᐃᐃⵠⵠ) return;
		Ⲇ.globalAlpha = .5;
		Ⲇ.fillStyle = ⵠ[151];
		Ⲇ.fillRect(ΔΔᐃ, ΔΔⵠᐃ, Ⲇⵠⵠⵠ, ᐃΔⲆᐃ);
		Ⲇ.globalAlpha = .8;
		var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⲆⲆⵠᐃ][ⲆΔΔ.time];
		var ᐃᐃΔ = ᐃΔΔᐃ - ⵠⵠ.width / ᐃᐃΔⵠ;
		var ᐃⲆᐃ = ⲆⲆΔⲆ - ⵠⵠ.height / ᐃΔⲆⲆⵠ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
		Ⲇ.globalAlpha = ᐃⵠ;
		ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.x > -1 && (Ⲇ.fillStyle = ⵠ[470], ΔⵠⲆ(Ⲇ, ᐃᐃΔ + ᐃ * (ⵠⲆⲆΔ * ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.x), ᐃⲆᐃ + ᐃ * (ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.y * 3), ᐃ * ⵠΔⲆⵠΔᐃⵠ), Ⲇ.fill());
		var ᐃⵠⵠΔ = ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ᐃⵠⵠΔ;
		for (var ᐃⲆ = ⵠⲆⲆᐃ; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			Ⲇ.fillStyle = !ⲆΔΔ.time ? ⵠ[112] : ⵠ[112];
			ΔⵠⲆ(Ⲇ, ᐃᐃΔ + ᐃ * (ⵠΔᐃ.x / (ᐃⵠⲆⵠⲆ * ⲆΔΔ.Δᐃᐃⵠⵠ) * 600), ᐃⲆᐃ + ᐃ * (ⵠΔᐃ.y / (ᐃⲆⵠᐃⲆ * ⲆΔΔ.ΔⲆᐃⵠⵠ) * 600), ᐃ * 6);
			Ⲇ.fill()
		}
		var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		if (ΔⲆⵠᐃ) {
			Ⲇ.fillStyle = !ⲆΔΔ.time ? "#e39716" : ⵠ[274];
			ΔⵠⲆ(Ⲇ, ᐃᐃΔ + 600 * (ΔⲆⵠᐃ.x / (100 * ⲆΔΔ.Δᐃᐃⵠⵠ)) * ᐃ, ᐃⲆᐃ + ΔⲆⵠᐃ.y / (ⲆΔΔ.ΔⲆᐃⵠⵠ * 100) * 600 * ᐃ, ᐃ * 12);
			Ⲇ.fill()
		}
	}

	function ᐃᐃᐃⵠᐃΔⵠ() {
		ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id = -ⵠⵠⲆ;
		ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ = -1;
		if (ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ || ⲆΔⲆ.ⵠⲆⵠᐃⲆ.wait || ⲆΔⲆ.ΔⵠⲆΔΔ) return;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ΔΔⵠⵠⲆⵠⵠΔᐃ;
		if (ⵠΔᐃ) {
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ].length; ᐃⲆ++) {
				var ⵠⲆⵠᐃⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ][ᐃⲆ];
				var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ⵠⲆⵠᐃⲆ, ⵠΔᐃ);
				if (ΔⵠΔᐃ > Δᐃⵠᐃ) {
					ΔⵠΔᐃ = Δᐃⵠᐃ;
					ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id = ⵠⲆⵠᐃⲆ.id;
					ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ = ⵠⲆⵠᐃⲆ.ΔΔΔⵠ;
					ⲆΔⲆ.ⵠⲆⵠᐃⲆ.info = ⵠⲆⵠᐃⲆ.info;
					ⲆΔⲆ.ⵠⲆⵠᐃⲆ.lock = (ⵠⲆⵠᐃⲆ.info & ⵠⵠᐃⲆⵠⲆΔ) >> ᐃⵠⲆⲆⲆ
				}
			}
		}
		var ᐃⲆΔᐃⲆⲆⵠᐃΔ = ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ;
		ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = -1;
		if (-1 != ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ && (ⲆⵠⲆ == ⲆΔⲆ.ΔⵠΔⵠΔ.length || ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ == ⲆΔⲆ.id)) {
			if (ⲆΔⲆ.ΔⵠΔⵠΔ.length == ΔⲆⵠ && 8 <= ⲆΔⲆ.ⵠⲆⵠᐃⲆ.info) ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ΔⲆⲆⲆΔᐃⵠ;
			else if (ⲆΔⲆ.ΔⵠΔⵠΔ.length == ⵠᐃⲆᐃ) ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ⲆⵠⲆΔⲆⲆⵠ;
			else ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ⵠᐃᐃΔⵠᐃΔ
		} else if (ᐃⵠΔ != ⲆΔⲆ.ΔⵠΔⵠΔ.length && ⲆΔⲆ.id != ⲆΔⲆ.ΔⵠΔⵠΔ[ΔΔⲆᐃ]) ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ΔⵠΔⲆⲆΔⲆ;
		else if (ⲆΔⲆ.ΔⵠΔⵠΔ.length != 0 && ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃⵠΔ] == ⲆΔⲆ.id) ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ⵠⵠᐃⵠΔΔΔ;
		else if (ⲆΔⲆ.ΔⵠΔⵠΔ.length != Ⲇᐃⵠᐃ) ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ = ᐃΔᐃᐃΔ.ⲆⵠⲆΔⲆⲆⵠ;
		if (-1 != ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ) ⵠΔᐃⵠ.Ⲇᐃⵠᐃᐃ[ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ].button.ⲆⵠᐃⲆ(Ⲇ);
		var ᐃⲆⵠⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style; - ᐃᐃΔᐃ != ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ && ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ != ᐃⲆΔᐃⲆⲆⵠᐃΔ && ⵠ[489] == ᐃⲆⵠⲆ.display && ⵠΔᐃⵠ.Ⲇᐃⵠᐃᐃ[ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ].action()
	}

	function ᐃΔⵠᐃᐃΔΔⵠⵠ() {
		ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⵠⲆΔⵠ;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ⵠⲆᐃᐃⲆⵠΔ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = ΔᐃⲆΔ; ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ].length > ᐃⲆ; ᐃⲆ++) {
			var ᐃΔᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃΔᐃⵠᐃ, ⵠΔᐃ);
			ΔⵠΔᐃ > Δᐃⵠᐃ && (ΔⵠΔᐃ = Δᐃⵠᐃ, ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = true, ⲆΔⲆ.ᐃΔᐃⵠᐃ.ΔΔΔⵠ = ᐃΔᐃⵠᐃ.ΔΔΔⵠ, ⲆΔⲆ.ᐃΔᐃⵠᐃ.ⵠᐃΔⵠⲆ = ᐃΔᐃⵠᐃ.id)
		}
		ΔⵠΔᐃ < ⲆⵠΔΔ.ⵠⲆᐃᐃⲆⵠΔ && ⵠΔᐃⵠ.ᐃΔᐃⵠᐃ.ⲆⵠᐃⲆ(Ⲇ)
	}

	function ᐃⵠⲆⲆⵠⲆΔᐃΔ() {
		ⲆΔⲆ.ⵠᐃⵠᐃ.id = -1;
		ⲆΔⲆ.ⵠᐃⵠᐃ.lock = false;
		ⲆΔⲆ.ⵠᐃⵠᐃ.locked = false;
		ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ = ᐃⲆⲆΔΔ;
		ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ = false;
		ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔᐃⲆⵠⲆ;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ⲆⵠⲆⵠⲆᐃⲆ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ].length; ᐃⲆ++) {
			var ⵠᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ⵠᐃⵠᐃ, ⵠΔᐃ);
			if (ΔⵠΔᐃ > Δᐃⵠᐃ) {
				ΔⵠΔᐃ = Δᐃⵠᐃ;
				ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⵠⲆⵠⵠ;
				ⲆΔⲆ.ⵠᐃⵠᐃ.id = 2 > ⵠᐃⵠᐃ.action ? -ΔᐃⵠΔ : Math.floor((ⵠᐃⵠᐃ.action - ΔΔⲆΔ) / ⲆᐃⲆᐃ);
				ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆᐃᐃⲆ = ⵠᐃⵠᐃ.info;
				ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔΔⵠ = ⵠᐃⵠᐃ.ΔΔΔⵠ;
				ⲆΔⲆ.ⵠᐃⵠᐃ.ⵠᐃΔⵠⲆ = ⵠᐃⵠᐃ.id;
				ⲆΔⲆ.ⵠᐃⵠᐃ.locked = ⵠᐃⵠᐃ.lock;
				ⲆΔⲆ.ⵠᐃⵠᐃ.lock = ⵠᐃⵠᐃ.lock && ⲆΔⲆ.id != ⵠᐃⵠᐃ.ΔΔΔⵠ && !ⲆΔⲆ.ⲆΔΔΔⲆⲆⲆ(ⵠᐃⵠᐃ.ΔΔΔⵠ) ? ΔᐃⲆΔⵠ : false;
				ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ = ⲆΔⲆ.id === ⵠᐃⵠᐃ.ΔΔΔⵠ && !ⲆΔⲆ.ⵠᐃⵠᐃ.locked && -1 != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠⲆⵠᐃⵠ) ? true : ⲆΔᐃⵠⲆ;
				ⲆΔⲆ.ⵠᐃⵠᐃ.locked && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⲆΔⲆᐃΔ) != -ΔⲆᐃ && (ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ = ⵠΔΔΔⲆ)
			}
		}
		if (ⲆⵠΔΔ.ⲆⵠⲆⵠⲆᐃⲆ > ΔⵠΔᐃ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃΔΔᐃⲆΔ];
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⲆⲆⵠ[0];
			var ᐃᐃΔ = Math.floor(ΔΔⵠⵠ.info.translate.x + (ΔΔⵠⵠ.info.ⵠⵠ[Δⵠⵠ].width - ⵠⵠ.width) / ᐃⲆⲆΔ);
			var ᐃⲆᐃ = Math.floor(ΔΔⵠⵠ.info.translate.y + (ΔΔⵠⵠ.info.ⵠⵠ[ΔΔᐃ].height - ⵠⵠ.height) / ⵠᐃⵠΔ) + 3;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock || ⲆΔⲆ.id === ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔΔⵠ) {
				if (ΔⲆⵠ <= ⲆΔⲆ.ⵠᐃⵠᐃ.id) {
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⲆⲆⵠ[ⲆΔⲆ.ⵠᐃⵠᐃ.id];
					ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
					var ᐃⵠⲆ = ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆᐃᐃⲆ;
					ΔΔᐃⵠ < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
				}
			}
			if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock) {
				ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ && ⵠΔᐃⵠ.ᐃⲆΔΔᐃᐃⲆ.ⲆⵠᐃⲆ(Ⲇ)
			} else ⵠΔᐃⵠ.ΔΔⵠⵠⲆⵠᐃ.ⲆⵠᐃⲆ(Ⲇ);
			ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ && ⵠΔᐃⵠ.ⵠⵠⵠΔΔΔⲆ.ⲆⵠᐃⲆ(Ⲇ)
		}
	}

	function ⵠΔΔΔⵠᐃᐃΔⲆ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ⲆⲆⵠΔⵠᐃΔ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ].length; ᐃⲆ++) {
			var ΔⲆⵠⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ΔⲆⵠⲆ, ⵠΔᐃ);
			if (Δᐃⵠᐃ < ΔⵠΔᐃ) {
				ΔⵠΔᐃ = Δᐃⵠᐃ;
				ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = ⲆⵠΔⵠΔ;
				ⲆΔⲆ.ΔⲆⵠⲆ.ᐃⲆⵠⵠΔΔⵠ = ΔⲆⵠⲆ.info & 255;
				ⲆΔⲆ.ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ = (ΔⲆⵠⲆ.info & 65280) >> ΔᐃⲆⵠⲆⵠⵠ;
				ⲆΔⲆ.ΔⲆⵠⲆ.ΔΔΔⵠ = ΔⲆⵠⲆ.ΔΔΔⵠ;
				ⲆΔⲆ.ΔⲆⵠⲆ.ⵠᐃΔⵠⲆ = ΔⲆⵠⲆ.id
			}
		}
		if (ΔⵠΔᐃ < ⲆⵠΔΔ.ⲆⲆⵠΔⵠᐃΔ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔⵠᐃΔᐃ];
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⵠⲆΔᐃΔⲆⵠ;
			var ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x - 33;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ΔΔⵠᐃ);
			if (ⲆΔⲆ.ΔⲆⵠⲆ.ᐃⲆⵠⵠΔΔⵠ > ΔΔⵠᐃ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ.ᐃⲆⵠⵠΔΔⵠ;
				1 < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⲆΔΔⵠⵠᐃⵠ;
			if (ⲆΔⲆ.ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ > ⵠⵠⲆⲆ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ;
				ᐃⵠⲆ > ᐃⵠ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
		}
	}

	function ⲆᐃⵠΔⲆᐃᐃⲆᐃ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⵠⲆΔⵠ;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ᐃⲆᐃᐃⵠⵠᐃⲆⵠ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ].length; ᐃⲆ++) {
			var ᐃⲆΔⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃⲆΔⲆᐃ, ⵠΔᐃ);
			ΔⵠΔᐃ > Δᐃⵠᐃ && (ΔⵠΔᐃ = Δᐃⵠᐃ, ⲆΔⲆ.ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = ⲆΔᐃⲆⲆ, ⲆΔⲆ.ᐃⲆΔⲆᐃ.ΔΔΔⵠ = ᐃⲆΔⲆᐃ.ΔΔΔⵠ, ⲆΔⲆ.ᐃⲆΔⲆᐃ.ⵠᐃΔⵠⲆ = ᐃⲆΔⲆᐃ.id)
		}
	}

	function ᐃΔᐃΔⲆⲆⲆΔⵠ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ᐃΔᐃⲆᐃΔᐃ;
		if (!ⵠΔᐃ) return;
		for (var ΔΔΔ = ⵠⵠⲆⲆ; ΔⵠⲆᐃⵠΔⲆ.length > ΔΔΔ; ΔΔΔ++) {
			var ⵠⲆᐃΔ = ΔⵠⲆᐃⵠΔⲆ[ΔΔΔ][0];
			var ᐃΔΔΔΔᐃⲆ = ΔⵠⲆᐃⵠΔⲆ[ΔΔΔ][1];
			for (var ᐃⲆ = Δⵠⵠ; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ⵠⲆᐃΔ].length; ᐃⲆ++) {
				var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ⵠⲆᐃΔ][ᐃⲆ];
				var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃⵠΔΔ, ⵠΔᐃ);
				Δᐃⵠᐃ < ΔⵠΔᐃ && (ΔⵠΔᐃ = Δᐃⵠᐃ, ⲆΔⲆ.ᐃⵠΔΔ.ᐃΔΔΔΔᐃⲆ = ᐃΔΔΔΔᐃⲆ, ⲆΔⲆ.ᐃⵠΔΔ.type = ⵠⲆᐃΔ, ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] = ⲆⲆᐃⵠⲆ, ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⵠΔⲆⵠΔ = ᐃⵠΔΔ.info & 255, ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ = (ᐃⵠΔΔ.info & 65280) >> ᐃⵠΔΔᐃ, ⲆΔⲆ.ᐃⵠΔΔ.ΔΔΔⵠ = ᐃⵠΔΔ.ΔΔΔⵠ, ⲆΔⲆ.ᐃⵠΔΔ.ⵠᐃΔⵠⲆ = ᐃⵠΔΔ.id)
			}
		}
		if (ΔⵠΔᐃ < ⲆⵠΔΔ.ᐃΔᐃⲆᐃΔᐃ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔⵠᐃⵠᐃᐃ];
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ΔΔⲆᐃⵠⲆᐃ;
			var ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x - 33;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ⵠⵠᐃⵠ);
			if (0 < ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⵠΔⲆⵠΔ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⵠΔⲆⵠΔ;
				1 < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
			switch (ⲆΔⲆ.ᐃⵠΔΔ.ᐃΔΔΔΔᐃⲆ) {
				case ⵠⲆ.ⵠᐃΔⲆ:
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⲆⲆΔⲆᐃΔᐃ;
					break;
				case ⵠⲆ.ⲆᐃⲆⵠ:
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ᐃΔⲆΔⵠⲆΔ;
					break;
				case ⵠⲆ.ⲆⵠⲆⵠ:
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⵠⵠⲆᐃΔᐃΔ;
					break;
				case ⵠⲆ.ⲆⵠΔⵠ:
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⵠΔΔⲆⵠⲆΔ;
					break;
				case ⵠⲆ.ᐃΔⲆⲆ:
					var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⵠⲆΔⲆΔⵠⵠ;
					break
			}
			if (ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ > ⵠᐃⲆᐃ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ;
				1 < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
		}
	}

	function ᐃⵠᐃⵠⵠⵠᐃΔᐃ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ΔᐃⵠⵠΔⲆᐃ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ].length; ᐃⲆ++) {
			var ΔΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ΔΔᐃΔ, ⵠΔᐃ);
			Δᐃⵠᐃ < ΔⵠΔᐃ && ΔΔᐃΔ.info === 0 && ⲆΔⲆ.id === ΔΔᐃΔ.ΔΔΔⵠ && (ⲆΔⲆ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] = true, ΔⵠΔᐃ = Δᐃⵠᐃ, ⲆΔⲆ.sign.ⵠᐃΔⵠⲆ = ΔΔᐃΔ.id)
		}
		if (ΔⵠΔᐃ < ⲆⵠΔΔ.ΔᐃⵠⵠΔⲆᐃ) {
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.sign.button;
			ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ)
		}
	}

	function ⲆᐃᐃΔⲆᐃᐃΔⲆ() {
		if (ᐃΔⵠⵠ < ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length) var ⲆᐃⵠⵠⲆ = {
			x: ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.translate.x,
			y: ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.translate.y - 120 * ᐃ
		};
		else var ⲆᐃⵠⵠⲆ = {
			x: ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.translate.x,
			y: ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.translate.y - 50 * ᐃ
		};
		Ⲇ.globalAlpha = .8;
		var ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃΔΔⵠᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠⵠⲆ.x, ⲆᐃⵠⵠⲆ.y);
		Ⲇ.globalAlpha = 1;
		ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.x > -1 && (Ⲇ.fillStyle = ⵠ[470], ΔⵠⲆ(Ⲇ, ⲆᐃⵠⵠⲆ.x + ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.x * ᐃ, ⲆᐃⵠⵠⲆ.y + ᐃ * ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.y, ᐃᐃⵠⵠ * ᐃ), Ⲇ.fill());
		var ΔⲆᐃΔⲆⲆⲆ = ᐃ;
		var ᐃⵠⵠΔ = ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ᐃⵠⵠΔ;
		for (var ᐃⲆ = ΔⲆⵠ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			Ⲇ.fillStyle = !ⲆΔΔ.time ? ⵠ[112] : ⵠ[112];
			ΔⵠⲆ(Ⲇ, ⲆᐃⵠⵠⲆ.x + ⵠΔᐃ.x / (ⲆΔΔ.Δᐃᐃⵠⵠ * ᐃⲆⵠΔΔ) * 193 * ᐃ, ⲆᐃⵠⵠⲆ.y + ᐃ * (ⵠΔᐃ.y / (ⲆΔΔ.ΔⲆᐃⵠⵠ * 100) * 193), ᐃᐃⲆΔ * ᐃ);
			Ⲇ.fill()
		}
		var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		ΔⲆⵠᐃ && (Ⲇ.fillStyle = !ⲆΔΔ.time ? "#e39716" : ⵠ[274], ΔⵠⲆ(Ⲇ, ⲆᐃⵠⵠⲆ.x + ᐃ * (193 * (ΔⲆⵠᐃ.x / (100 * ⲆΔΔ.Δᐃᐃⵠⵠ))), ⲆᐃⵠⵠⲆ.y + ᐃ * (ΔⲆⵠᐃ.y / (ⲆΔΔ.ΔⲆᐃⵠⵠ * 100) * 193), ᐃ * ᐃΔᐃⲆⵠ), Ⲇ.fill());
		ᐃ = ΔⲆᐃΔⲆⲆⲆ
	}

	function ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⵠΔ, ᐃΔⵠⲆ, ⲆΔⲆᐃ, ΔΔⵠ, ᐃⵠᐃ, ⵠⵠᐃΔⵠⵠⲆ, ΔᐃⲆ, ᐃⲆ) {
		if (ⵠⵠ.Δᐃᐃᐃⵠᐃⵠ === ⲆⵠᐃΔⲆ || ⵠⵠ.Δᐃᐃᐃⵠᐃⵠ() === ⵠⲆⲆ) {
			if (Settings.Xray.enabled) Ⲇ.globalAlpha = .3;
			if (ᐃⲆ !== ⵠᐃΔᐃΔ) Ⲇ.drawImage(ⵠⵠ, ⲆΔⵠΔ, ᐃΔⵠⲆ, Math.max(1, ⲆΔⲆᐃ), Math.max(ⲆᐃⲆⲆ, ΔΔⵠ), ᐃⵠᐃ, ⵠⵠᐃΔⵠⵠⲆ, ΔᐃⲆ, ᐃⲆ);
			else if (ΔΔⵠ !== undefined) Ⲇ.drawImage(ⵠⵠ, ⲆΔⵠΔ, ᐃΔⵠⲆ, ⲆΔⲆᐃ, ΔΔⵠ);
			else Ⲇ.drawImage(ⵠⵠ, ⲆΔⵠΔ, ᐃΔⵠⲆ)
		}
	}

	function ΔΔⵠⵠⵠⲆΔⵠⲆ(ᐃⵠⲆ, ΔΔⵠⵠ, ᐃᐃⵠ) {
		var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃᐃⲆᐃⲆ][ᐃⵠⲆ];
		var ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x + 5 * ᐃ;
		var ᐃⲆᐃ = ΔΔⵠⵠ.info.translate.y + ᐃ * ⵠᐃᐃΔᐃ;
		if (ΔΔⵠⵠ.info.state == ⲆΔⲆⵠ || ᐃᐃⵠ) ᐃⲆᐃ += 5 * ᐃ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ)
	}

	function ⵠᐃΔΔⵠᐃᐃᐃⵠ() {
		var ⲆᐃⲆⲆⵠ = ⵠΔᐃⵠ.ΔΔΔⵠⲆ;
		var ⵠΔᐃᐃ = ⲆᐃⲆⲆⵠ.id;
		if (ⲆᐃⲆⲆⵠ.ᐃΔΔⲆΔ === ⵠⲆⲆ && ⲆᐃⲆⲆⵠ.display === 1) {
			if (ⲆΔᐃΔᐃ[ⵠΔᐃᐃ] === ᐃΔΔⲆⵠ) ⲆΔᐃΔᐃ[ⵠΔᐃᐃ] = ⵠΔΔᐃᐃⲆⵠⲆΔ(ⵠΔᐃᐃ);
			if (ⲆΔⵠⲆ === ⲆᐃⲆⲆⵠ.ᐃΔⵠΔ) ⵠⲆΔⲆ(Ⲇ, ⲆΔᐃΔᐃ[ⵠΔᐃᐃ], ⲆᐃⲆⲆⵠ.x, ⲆᐃⲆⲆⵠ.y);
			else {
				if (Ⲇⵠⵠⵠ < ⲆᐃⲆⲆⵠ.x - 80 + ⲆΔᐃΔᐃ[ⵠΔᐃᐃ].width) ⵠⲆΔⲆ(Ⲇ, ⲆΔᐃΔᐃ[ⵠΔᐃᐃ], Ⲇⵠⵠⵠ - ⲆΔᐃΔᐃ[ⵠΔᐃᐃ].width - 10, ⲆᐃⲆⲆⵠ.y - ⲆΔᐃΔᐃ[ⵠΔᐃᐃ].height - ᐃᐃⵠᐃΔ);
				else ⵠⲆΔⲆ(Ⲇ, ⲆΔᐃΔᐃ[ⵠΔᐃᐃ], ⲆᐃⲆⲆⵠ.x - 80, ⲆᐃⲆⲆⵠ.y - ⲆΔᐃΔᐃ[ⵠΔᐃᐃ].height - 10)
			}
		}
	}

	function ᐃⵠⲆⵠΔΔΔᐃᐃ() {
		if (ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
		ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] = ⵠⲆⲆⵠΔ;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		var ΔⵠΔᐃ = ⲆⵠΔΔ.ⲆⵠⲆᐃⲆΔⵠ;
		if (!ⵠΔᐃ) return;
		for (var ᐃⲆ = 0; ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ].length > ᐃⲆ; ᐃⲆ++) {
			var ⵠΔⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ][ᐃⲆ];
			var Δᐃⵠᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ⵠΔⵠΔ, ⵠΔᐃ);
			if (ΔⵠΔᐃ > Δᐃⵠᐃ) {
				ΔⵠΔᐃ = Δᐃⵠᐃ;
				ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] = true;
				ⲆΔⲆ.ⵠΔⵠΔ.ⵠⵠⵠΔⲆⵠΔ = ⵠΔⵠΔ.info & 31;
				ⲆΔⲆ.ⵠΔⵠΔ.ⲆⵠⵠΔⵠ = (ⵠΔⵠΔ.info & 992) >> ΔⲆⲆΔ;
				ⲆΔⲆ.ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ = (ⵠΔⵠΔ.info & 31744) >> 10;
				ⲆΔⲆ.ⵠΔⵠΔ.ΔΔΔⵠ = ⵠΔⵠΔ.ΔΔΔⵠ;
				ⲆΔⲆ.ⵠΔⵠΔ.ⵠᐃΔⵠⲆ = ⵠΔⵠΔ.id
			}
		}
		if (ⲆⵠΔΔ.ⲆⵠⲆᐃⲆΔⵠ > ΔⵠΔᐃ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃᐃⵠⵠΔⲆ];
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⲆΔⵠⵠΔΔᐃ;
			var ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x - 32;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ⲆⵠⲆ);
			if (ⲆΔⲆ.ⵠΔⵠΔ.ⵠⵠⵠΔⲆⵠΔ > ΔⵠⲆΔ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ⵠΔⵠΔ.ⵠⵠⵠΔⲆⵠΔ;
				ᐃⵠⲆ > ⵠⲆⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ⵠⲆᐃⲆΔᐃΔ;
			if (ⲆⵠⲆ < ⲆΔⲆ.ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ;
				if (1 < ᐃⵠⲆ) ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
			var ΔΔⵠⵠ = ⵠΔᐃⵠ.ΔΔΔᐃⵠΔΔ;
			if (ⵠⵠⲆⲆ < ⲆΔⲆ.ⵠΔⵠΔ.ⲆⵠⵠΔⵠ) {
				ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
				var ᐃⵠⲆ = ⲆΔⲆ.ⵠΔⵠΔ.ⲆⵠⵠΔⵠ;
				ⵠᐃΔᐃ < ᐃⵠⲆ && ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ)
			}
		}
	}
	const ⵠⵠᐃᐃΔ = ΔΔⲆᐃ;
	var ⲆΔⵠΔⵠᐃΔ = [];

	function ᐃⲆⵠᐃᐃᐃⵠᐃᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ΔⵠᐃⵠⲆⵠᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⲆⵠᐃ, -ΔᐃⲆ / ⲆⲆⵠΔ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ΔⵠΔΔⵠⵠΔⲆⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠᐃⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃᐃⲆΔ, -ΔᐃⲆ / ᐃᐃⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⵠⲆⵠΔⲆⵠⵠⵠⵠ() {
		var ᐃΔⵠΔ = ⲆΔⲆ.ᐃΔⵠΔ;
		if (ᐃΔⵠΔ.ⲆΔⲆⲆⲆ) {
			var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			Ⲇ.save();
			Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ΔⲆⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ΔⲆⵠᐃ.y);
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠΔ];
			var ᐃᐃΔ = -ⵠⵠ.width / 2;
			var ᐃⲆᐃ = -ⵠⵠ.height / 2 - ᐃ * 125;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineWidth = ᐃ * 5;
			Ⲇ.strokeStyle = Δ.ⵠΔⲆᐃᐃᐃⲆ[ⲆΔΔ.time];
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.arc(ΔΔᐃ, ᐃⲆᐃ + ⵠⵠ.height / 2, 25 * ᐃ, ΔⲆᐃⲆ, ΔⲆⲆᐃ * Math.PI * ᐃΔⵠΔ.timeout.ⵠⵠΔ);
			Ⲇ.stroke();
			Ⲇ.restore()
		}
	}

	function ⵠⵠⲆᐃⲆΔΔⵠᐃ() {
		var ᐃᐃΔⲆᐃ = ⲆΔⲆ.ᐃᐃΔⲆᐃ;
		if (ᐃᐃΔⲆᐃ.wait) {
			var ⵠᐃⵠⵠᐃ = ᐃᐃΔⲆᐃ.timeout.ⵠᐃⵠ();
			Ⲇ.save();
			var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⲆⲆΔⵠᐃ];
			Ⲇ.translate(ⵠⵠ.width - ᐃ * 12, ⵠΔᐃⵠ.ΔΔⵠⲆ.translate.y - ᐃ * 190);
			var ᐃᐃΔ = -ⵠⵠ.width / 2 + 9;
			var ᐃⲆᐃ = -ⵠⵠ.height / 2 - 4;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineWidth = ⵠΔⲆⲆΔ * ᐃ;
			Ⲇ.strokeStyle = Δ.ᐃⲆⵠⵠΔⲆΔ[ⲆΔΔ.time];
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.arc(9, ᐃⲆᐃ + ⵠⵠ.height / 2, 25 * ᐃ, 0, Math.PI * 2 * ᐃᐃΔⲆᐃ.timeout.ⵠⵠΔ);
			Ⲇ.stroke();
			Ⲇ.restore();
			ⵠᐃⵠⵠᐃ && (ᐃᐃΔⲆᐃ.wait = false, ᐃᐃΔⲆᐃ.timeout.ⵠⵠΔ = 0, ᐃᐃΔⲆᐃ.timeout.ⵠⲆⵠ = ⲆΔᐃⵠⲆ)
		}
	}

	function ⵠᐃⲆΔⵠ(ⵠⵠⲆᐃΔ) {
		var ⵠⵠⲆᐃΔ = ⵠⵠⲆᐃΔ / ᐃΔⵠΔᐃ;
		if (ⵠⵠⲆᐃΔ > .95) return;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ⲆᐃⲆᐃΔ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = ⵠΔⲆᐃⲆ;
			var ⵠⵠΔ = ᐃ * (600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)));
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = ΔⲆᐃⲆ
		}
		Ⲇ.globalAlpha = .5;
		ᐃⵠᐃΔΔΔΔ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ᐃ * 28, ⵠⵠⲆᐃΔ);
		Δⵠ(Ⲇ, null, ⵠ[252], 18 * ᐃ);
		Ⲇ.globalAlpha = ΔΔᐃᐃ;
		ᐃⵠᐃΔΔΔΔ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, 28 * ᐃ, ⵠⵠⲆᐃΔ);
		Δⵠ(Ⲇ, null, Δ.ⵠΔⲆᐃᐃᐃⲆ[ⲆΔΔ.time], ᐃ * 6);
		Ⲇ.restore()
	}

	function ⵠΔⵠᐃⲆΔΔⵠⲆ() {
		var ᐃΔⵠⲆ = ⲆΔΔ.ΔᐃⲆᐃᐃ;
		var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⲆᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔⵠⲆ.translate.x, ᐃΔⵠⲆ.translate.y);
		Ⲇ.save();
		Ⲇ.translate(ᐃΔⵠⲆ.translate.x + ⵠⵠ.width / 2, ᐃΔⵠⲆ.translate.y + ⵠⵠ.height / 2);
		ⲆΔΔ.ΔᐃⲆᐃᐃ.now = ((new Date).getTime() - ᐃΔⵠⲆ.ⲆΔⲆΔΔ + ᐃΔⵠⲆ.ⲆⲆⲆⲆᐃ) % ⲆⵠΔΔ.ΔⲆΔ;
		var ΔᐃΔ = ⲆΔΔ.ΔᐃⲆᐃᐃ.now * (ⵠⲆⵠᐃ * Math.PI) / ⲆⵠΔΔ.ΔⲆΔ - Math.PI / ᐃⲆⲆΔ;
		Ⲇ.rotate(ΔᐃΔ);
		ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[Δ.ΔⲆᐃⲆⲆⵠᐃ], -ⵠⵠ.width / ⲆᐃⲆᐃ, -ⵠⵠ.height / 2);
		Ⲇ.restore()
	}

	function ⲆⲆᐃⵠⵠΔⲆᐃᐃ() {
		var ᐃⲆᐃ = -8;
		if (ⲆΔⲆ.ᐃⲆΔⲆⵠ.enabled) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆΔᐃᐃΔΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
			ᐃⲆᐃ += 70
		}
		if (1 === ⲆΔⲆ.ΔΔᐃⵠᐃᐃⲆ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⵠᐃΔᐃⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
			ᐃⲆᐃ += 70
		} else if (.25 > ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.x || ⲆΔⲆ.ΔΔⵠⲆ.ᐃᐃΔᐃⲆΔΔ.x < .25 || .25 > ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃΔΔⲆⲆΔ.x || .25 > ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.x || .25 > ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠΔⵠ.x) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃⲆΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
			ᐃⲆᐃ += 70
		}
		if (ⲆΔⲆ.ΔᐃᐃΔⲆ > 0) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⵠΔᐃᐃⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
			var ΔᐃᐃΔⲆ = ⲆΔⵠΔⵠᐃΔ[ⲆΔⲆ.ΔᐃᐃΔⲆ];
			if (ΔᐃᐃΔⲆ === ᐃⲆⵠⲆⵠ) {
				ΔᐃᐃΔⲆ = ⲆΔΔΔⲆ(ᐃ, ⲆΔⲆ.ΔᐃᐃΔⲆ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
				ⲆΔⵠΔⵠᐃΔ[ⲆΔⲆ.ΔᐃᐃΔⲆ] = ΔᐃᐃΔⲆ
			}
			ⲆΔⲆ.ΔᐃᐃΔⲆ < 9 ? ⵠⲆΔⲆ(Ⲇ, ΔᐃᐃΔⲆ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x - 39, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ + 20) : ⵠⲆΔⲆ(Ⲇ, ΔᐃᐃΔⲆ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x - 46, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ + 20);
			ᐃⲆᐃ += 70
		}
		if (Settings.DaysCounter.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#fff";
			Ⲇ.fillStyle = "#000";
			Ⲇ.lineWidth = 6;
			Ⲇ.font = "32px Baloo Paaji";
			Ⲇ.strokeText("Days: " + ⲆΔⲆ.ⲆⲆΔ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x - 150, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y - 45);
			Ⲇ.fillText("Days: " + ⲆΔⲆ.ⲆⲆΔ, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x - 150, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y - 45);
			Ⲇ.restore()
		}
		if (Settings.WeatherInfo.enabled) {
			if (ⲆΔⲆ.ΔⵠᐃⵠⲆ.ⵠᐃⲆⵠⵠ) {
				Ⲇ.save();
				Ⲇ.drawImage(BlizzardImage, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
				ᐃⲆᐃ += 70
			}
			if (ⲆΔⲆ.ΔΔⵠᐃΔ.ⵠᐃⲆⵠⵠ) {
				Ⲇ.save();
				Ⲇ.drawImage(SandstormImage, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x, ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃⲆᐃ);
				ᐃⲆᐃ += 70
			}
		}
	}

	function ⵠᐃⵠⲆⲆΔⲆⵠΔ() {
		var ᐃΔⵠΔ = ⲆΔⲆ.ᐃΔⵠΔ;
		if (!ᐃΔⵠΔ.ⲆΔⲆⲆⲆ && ᐃΔⵠΔ.ⲆⲆⵠⵠ > 0) {
			var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			if (!ΔⲆⵠᐃ) return;
			Ⲇ.save();
			if (ᐃΔᐃᐃ[ᐃΔⵠΔ.ⲆⲆⵠⵠ].Ⲇᐃᐃᐃ === 0 && ᐃΔⵠΔ.mode === ⵠⵠⲆⲆ) {
				Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ΔⲆⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ΔⲆⵠᐃ.y);
				Ⲇ.rotate(ΔⲆⵠᐃ.angle);
				Ⲇ.translate(120, 0)
			} else {
				var ᐃᐃΔ = Math.floor(ΔⲆⵠᐃ.x + 120 * Math.sin(ΔⲆⵠᐃ.angle));
				var ᐃⲆᐃ = Math.floor(ΔⲆⵠᐃ.y + 120 * Math.cos(ΔⲆⵠᐃ.angle));
				ᐃᐃΔ = ⲆΔⲆ.ⵠΔΔ.x + (ᐃᐃΔ - ᐃᐃΔ % ⵠᐃⵠⵠᐃΔⲆ + 50);
				ᐃⲆᐃ = ⲆΔⲆ.ⵠΔΔ.y + (ᐃⲆᐃ - ᐃⲆᐃ % ⲆΔⲆᐃᐃⲆⵠ + 50);
				Ⲇ.translate(ᐃᐃΔ, ᐃⲆᐃ)
			}
			var ⵠⵠ = Ⲇᐃ[ᐃΔⵠΔ.ⲆⲆⵠⵠ][ⲆΔΔ.time];
			Ⲇ.globalAlpha = .5;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ᐃᐃⲆΔ);
			Ⲇ.globalAlpha = 1;
			Ⲇ.restore();
			if (ᐃΔᐃᐃ[ᐃΔⵠΔ.ⲆⲆⵠⵠ].Ⲇᐃᐃᐃ === 0) {
				if (!ᐃΔⵠΔ.label[ᐃΔⵠΔ.mode]) {
					ᐃΔⵠΔ.mode === 0 ? ᐃΔⵠΔ.label[ΔⵠⲆⲆ] = ⲆΔΔΔⲆ(ᐃ, ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃⲆΔᐃΔ], ⵠⵠΔⵠ, "#e2c340") : ᐃΔⵠΔ.label[1] = ⲆΔΔΔⲆ(ᐃ, ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆⲆⲆᐃⲆ], 20, "#e2c340")
				}
				var ⵠⵠ = ᐃΔⵠΔ.label[ᐃΔⵠΔ.mode];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ + -ⵠⵠ.width / ΔⵠΔΔ, ⵠΔᐃⵠ.ΔΔⵠⲆ.y - 26)
			}
		}
		if (ᐃΔⵠΔ.ⲆΔⲆⲆⲆ) {
			var ⵠᐃⵠⵠᐃ = ᐃΔⵠΔ.timeout.ⵠᐃⵠ();
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃΔⵠΔ.ΔΔⵠΔᐃ.length; ᐃⲆ++) {
				var ΔΔⵠⵠ = ᐃΔⵠΔ.ΔΔⵠΔᐃ[ᐃⲆ];
				if (ΔΔⵠⵠ.id == ᐃΔⵠΔ.id) {
					var ΔᐃⲆ = 42 * ᐃ;
					var ⵠⵠᐃⵠⵠ = ᐃ * 17;
					ᐃΔⵠ(Ⲇ, ΔΔⵠⵠ.info.translate.x, ΔΔⵠⵠ.info.translate.y + ΔᐃⲆ * (ΔᐃⵠΔ - ᐃΔⵠΔ.timeout.ⵠⵠΔ), ΔΔⵠⵠ.info.width, ᐃΔⵠΔ.timeout.ⵠⵠΔ * ΔᐃⲆ + ⵠⵠᐃⵠⵠ, ᐃ * 10);
					Ⲇ.fillStyle = "#55B973";
					Ⲇ.fill();
					Ⲇ.globalAlpha = .8;
					ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ)
				} else {
					Ⲇ.globalAlpha = .5;
					ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ)
				}
				Ⲇ.globalAlpha = 1
			}
			ⵠᐃⵠⵠᐃ && (ᐃΔⵠΔ.ⲆΔⲆⲆⲆ = false, ᐃΔⵠΔ.timeout.ⵠⵠΔ = 0, ᐃΔⵠΔ.timeout.ⵠⲆⵠ = false);
			return true
		} else {
			for (var ᐃⲆ = ⵠⲆⲆᐃ; ᐃⲆ < ᐃΔⵠΔ.ΔΔⵠΔᐃ.length; ᐃⲆ++) ᐃΔⵠΔ.ΔΔⵠΔᐃ[ᐃⲆ].ⲆⵠᐃⲆ(Ⲇ)
		}
		return ⲆⵠᐃΔΔ
	}

	function ᐃⵠⵠΔⵠᐃᐃᐃΔ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * (600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = ΔᐃⲆΔ
		}
		if (Δ.ᐃⲆⵠⵠⲆΔᐃ === ⲆΔ && !ⲆΔΔ.transition) {
			var ⵠᐃᐃⲆⲆ = 0;
			var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
			for (var ᐃⲆ = ΔⵠⲆⲆ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				var ⵠⵠΔᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃⵠⵠΔ[ᐃⲆ], this);
				if (140 > ⵠⵠΔᐃ && 35 < ⵠⵠΔᐃ) {
					ⵠᐃᐃⲆⲆ = ⲆΔᐃ;
					break
				} else if (ⵠⵠΔᐃ <= 35) ⵠᐃᐃⲆⲆ = ⵠⵠⲆΔ
			}
			if (ⵠᐃᐃⲆⲆ === 0) this.opacity = Math.max(.5, this.opacity - ᐃᐃΔⲆ / 1.5);
			else this.opacity = Math.min(1, this.opacity + ᐃᐃΔⲆ / 1.5);
			Ⲇ.globalAlpha = this.opacity
		}
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / ⲆⲆⵠΔ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.restore()
	}

	function ⲆⲆⵠΔⵠᐃⲆⵠⲆ() {
		var ⵠΔᐃᐃ = ⲆΔⲆ.ⵠΔᐃᐃ;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		for (var ᐃⲆ = ΔⵠⲆⲆ; ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length > ᐃⲆ; ᐃⲆ++) {
			var ΔΔⵠⵠ = ⵠΔᐃᐃ.ᐃⲆΔΔⲆ[ᐃⲆ];
			var ᐃᐃⵠ = ⲆΔᐃⵠⲆ;
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			ⵠΔᐃ && (ΔΔⵠⵠ.id == ⵠΔᐃ.right || ΔΔⵠⵠ.id == ⵠΔᐃ.ᐃⲆΔⲆΔ && ⵠΔᐃ.ᐃⲆΔⲆΔ > 0) ? (ᐃᐃⵠ = true, ⵠⲆΔⲆ(Ⲇ, ΔΔⵠⵠ.info.ⵠⵠ[2], ΔΔⵠⵠ.info.translate.x, ΔΔⵠⵠ.info.translate.y, ΔΔⵠⵠ.info.width, ΔΔⵠⵠ.info.height)) : ΔΔⵠⵠ.ⲆⵠᐃⲆ(Ⲇ);
			var ᐃⵠⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ΔΔⵠⵠ.id];
			if (1 < ᐃⵠⲆ) ⵠⲆⵠΔΔ(ᐃⵠⲆ, ΔΔⵠⵠ);
			ⵠⵠⲆⲆ < ᐃⵠⲆ && ΔΔⵠⵠⵠⲆΔⵠⲆ(ᐃⲆ, ΔΔⵠⵠ, ᐃᐃⵠ);
			var ⵠᐃⵠᐃ = ⲆΔⲆ.ⵠᐃⵠᐃ;
			ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⵠᐃᐃΔ > ⵠᐃⵠᐃ.id || ⵠᐃⵠᐃ.id == ΔΔⵠⵠ.id) && (!ⵠᐃⵠᐃ.lock || ⵠᐃⵠᐃ.ΔΔΔⵠ == ⲆΔⲆ.id) && ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ);
			var ᐃⵠᐃⵠⵠ = ⲆΔⲆ.ᐃⵠᐃⵠⵠ;
			ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⵠⲆ.ᐃⲆΔᐃ == ΔΔⵠⵠ.id && ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ);
			var ᐃⲆΔⲆᐃ = ⲆΔⲆ.ᐃⲆΔⲆᐃ;
			ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && ΔΔⵠⵠ.id == ⵠⲆ.ᐃⵠΔΔⵠ && ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ);
			var ΔⲆⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ;
			ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ΔΔⵠⵠ.id == ⵠⲆ.ΔⲆⲆΔΔ && ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ);
			var ᐃⵠΔΔ = ⲆΔⲆ.ᐃⵠΔΔ;
			ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ΔΔⵠⵠ.id == ⵠⲆ.ᐃⲆΔᐃ && ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ);
			var ⵠΔⵠΔ = ⲆΔⲆ.ⵠΔⵠΔ;
			if (ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ΔΔⵠⵠ.id == ⵠⲆ.ᐃⲆΔᐃ || ⵠⲆ.ⲆⲆⲆΔⵠ == ΔΔⵠⵠ.id)) ⵠΔᐃⵠ.ⵠⵠⵠⲆⵠ[ΔΔⵠⵠ.id].ⲆⵠᐃⲆ(Ⲇ)
		}
		if (ΔΔⵠⵠ && ⵠΔᐃᐃ.max > ᐃⲆ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔⵠᐃᐃⵠ][ΔᐃⵠⲆ];
			ᐃᐃΔ = ΔΔⵠⵠ.info.translate.x;
			ᐃⲆᐃ = ΔΔⵠⵠ.info.translate.y;
			for (ΔΔΔ = ⲆΔⵠⲆ; ᐃⲆ < ⵠΔᐃᐃ.max; ᐃⲆ++, ΔΔΔ++) ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ + ΔΔΔ * (ⵠⵠ.width + ᐃᐃⵠⵠ), ᐃⲆᐃ)
		}
	}

	function ᐃΔΔΔΔⵠⲆⲆᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆΔⲆⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⵠΔⲆ, -ΔᐃⲆ / ᐃᐃΔⵠ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⵠΔᐃⵠΔⵠⲆ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = Ⲇᐃⵠⵠᐃ);
			var ⵠⵠΔ = (ⵠᐃΔᐃ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600 * ᐃ;
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ΔΔⵠᐃ;
			var ᐃⲆᐃ = 0
		}
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore();
		if (this.type == 29 && Settings.TotemInfo.enabled) {
			Ⲇ.save();
			Ⲇ.lineWidth = 8;
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.font = "22px Baloo Paaji";
			Ⲇ.strokeText(player(this), this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y);
			Ⲇ.fillText(player(this), this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y);
			Ⲇ.strokeText(this.info >= 16 ? this.info % 16 : this.info, this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y + 20);
			Ⲇ.fillText(this.info >= 16 ? this.info % 16 : this.info, this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y + 20);
			Ⲇ.strokeText(this.info >= 16 ? "L" : "U", this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y + 40);
			Ⲇ.fillText(this.info >= 16 ? "L" : "U", this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y + 40);
			Ⲇ.restore()
		}
	}

	function ⲆᐃΔⲆᐃᐃᐃ(ⵠⵠⲆᐃΔ) {
		var ⵠⵠⲆᐃΔ = ⵠⵠⲆᐃΔ / 100;
		if (ⵠⵠⲆᐃΔ > .8) return;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == ΔᐃΔΔᐃ) this.ⲆⲆᐃ.ⵠᐃⵠ = ᐃⵠⲆΔⵠ;
			var ⵠⵠΔ = 600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ) * ᐃ;
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = ΔⵠⲆⲆ
		}
		Ⲇ.globalAlpha = .5;
		ᐃⵠᐃΔΔΔΔ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ᐃ * 18, ⵠⵠⲆᐃΔ);
		Δⵠ(Ⲇ, null, ⵠ[252], 18 * ᐃ);
		Ⲇ.globalAlpha = 1;
		ᐃⵠᐃΔΔΔΔ(Ⲇ, ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃᐃⵠⲆⲆΔ * ᐃ, ⵠⵠⲆᐃΔ);
		Δⵠ(Ⲇ, null, Δ.ΔΔⵠⵠⲆⵠΔ[ⲆΔΔ.time], 6 * ᐃ);
		Ⲇ.restore()
	}

	function ⵠⲆⲆᐃⵠⲆΔⵠᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * ((ⲆΔⵠⲆ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600);
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = ΔΔⲆᐃ
		}
		ⵠⵠ = Ⲇᐃ[Δ.ΔⵠΔⲆᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.lock) {
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ - ᐃ * ᐃⵠⵠ, -ΔᐃⲆ / ⵠⲆⵠᐃ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		}
		Ⲇ.restore();
		if (this.action && Settings.ChestInfo.enabled) {
			Ⲇ.save();
			Ⲇ.globalAlpha = .9;
			ⵠⲆΔⲆ(Ⲇ, ⵠΔᐃⵠ.ⲆⲆⵠ[this.action / 2 - 1].info.ⵠⵠ[0], ⲆΔⲆ.ⵠΔΔ.x + this.x - 33, ⲆΔⲆ.ⵠΔΔ.y + this.y - 25, 67, 52);
			Ⲇ.globalAlpha = 1;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeStyle = "rgb(0,0,0)";
			Ⲇ.lineWidth = 7;
			Ⲇ.strokeText(this.action / 2 - 1, ⲆΔⲆ.ⵠΔΔ.x + this.x - 32, ⲆΔⲆ.ⵠΔΔ.y + this.y - 12);
			Ⲇ.strokeText("x" + this.info, ⲆΔⲆ.ⵠΔΔ.x + this.x - 32, ⲆΔⲆ.ⵠΔΔ.y + this.y + 20);
			Ⲇ.fillStyle = this.lock ? "rgb(255,0,0)" : "rgb(255,255,255)";
			Ⲇ.fillText(this.action / 2 - 1, ⲆΔⲆ.ⵠΔΔ.x + this.x - 32, ⲆΔⲆ.ⵠΔΔ.y + this.y - 12);
			Ⲇ.fillText("x" + this.info, ⲆΔⲆ.ⵠΔΔ.x + this.x - 32, ⲆΔⲆ.ⵠΔΔ.y + this.y + 20);
			Ⲇ.restore()
		}
	}

	function ΔᐃⲆⵠⵠⵠΔΔᐃ() {
		var ⵠΔᐃⲆΔ = ⲆΔⲆ.ⵠΔᐃⲆΔ;
		if (ⵠΔᐃⲆΔ.wait) {
			var ⵠᐃⵠⵠᐃ = ⵠΔᐃⲆΔ.timeout.ⵠᐃⵠ();
			Ⲇ.save();
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃΔⲆᐃΔⵠⵠ];
			Ⲇ.translate(ⵠⵠ.width - 2 * ᐃ, ⵠΔᐃⵠ.ΔΔⵠⲆ.translate.y - 125 * ᐃ);
			var ᐃᐃΔ = -ⵠⵠ.width / ᐃⲆⲆΔ + 10;
			var ᐃⲆᐃ = -ⵠⵠ.height / ᐃⲆⲆΔ - 4;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineWidth = ⲆⲆᐃⵠ * ᐃ;
			Ⲇ.strokeStyle = Δ.ᐃⲆⵠⵠΔⲆΔ[ⲆΔΔ.time];
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.arc(ᐃⵠⵠΔⵠ, ᐃⲆᐃ + ⵠⵠ.height / 2, ᐃ * 25, 0, Math.PI * 2 * ⵠΔᐃⲆΔ.timeout.ⵠⵠΔ);
			Ⲇ.stroke();
			Ⲇ.restore();
			ⵠᐃⵠⵠᐃ && (ⵠΔᐃⲆΔ.wait = ΔⲆⵠᐃⵠ, ⵠΔᐃⲆΔ.timeout.ⵠⵠΔ = ΔⲆⵠ, ⵠΔᐃⲆΔ.timeout.ⵠⲆⵠ = ⲆⵠᐃΔΔ)
		}
	}

	function ⵠⵠΔⲆⵠᐃΔᐃⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⵠⲆⵠⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠᐃᐃⵠ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⲆⵠᐃⵠΔⲆᐃΔⲆ() {
		var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
		if (ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔΔⵠΔ || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔⲆⵠⵠ || ⲆΔΔ.mode === ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ || ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ === ⲆΔΔ.mode || ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ === ⲆΔΔ.mode) {
			for (var ᐃⲆ = 0; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				ᐃⵠⵠΔ[ᐃⲆ].ⲆⲆⲆΔⲆⵠᐃ()
			}
		} else if (ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ) {
			for (var ᐃⲆ = ⲆⲆⲆ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				if (ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ || ⲆΔⲆ.ⵠⵠⵠⲆΔ.enabled) ᐃⵠⵠΔ[ᐃⲆ].ⲆⲆⲆΔⲆⵠᐃ();
				else if (ᐃⵠⵠΔ[ᐃⲆ].ΔⲆⵠΔ.ᐃΔⲆᐃⵠ !== ⵠ[211]) ᐃⵠⵠΔ[ᐃⲆ].ⲆⲆⲆΔⲆⵠᐃ()
			}
		}
	}

	function ΔΔⲆΔⲆᐃⵠΔⵠ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = ΔᐃⲆⵠⲆ);
			var ⵠⵠΔ = ᐃ * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ΔᐃⲆΔ;
			var ᐃⲆᐃ = ⲆΔᐃ
		}
		if (this.ⵠΔᐃⲆⵠ.ⵠᐃⵠ()) this.color += .2 + Math.random() * .3;
		ⵠⵠ = Ⲇᐃ[Δ.ΔⲆΔⵠⲆ][Math.floor(this.id + this.color) % ΔⲆⲆⲆⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ⵠΔᐃⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height * this.ⵠΔᐃⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / ⵠΔⵠᐃ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⲆᐃᐃⵠΔⵠΔⲆᐃ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = ΔᐃΔΔΔ;
			var ⵠⵠΔ = ᐃ * (600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ΔΔⲆᐃ;
			var ᐃⲆᐃ = 0
		}
		var ΔᐃᐃⵠⲆ = Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ].length;
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠᐃΔᐃΔΔ][(this.ΔΔΔ + this.ᐃⲆ % ᐃⵠΔⲆ) % ΔᐃᐃⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		if (Settings.Roofs.enabled) {
			this.opacity = .3
		} else if (ⵠΔᐃ && (this.ΔΔΔⵠ === ⲆΔⲆ.id || ⲆΔⲆ.ⲆΔΔΔⲆⲆⲆ(this.ΔΔΔⵠ))) {
			if (550 > Ⲇᐃⵠ.ⵠⵠΔᐃ(this, ⵠΔᐃ)) this.opacity = Math.max(this.opacity - ᐃᐃΔⲆ, .3);
			else this.opacity = Math.min(this.opacity + ᐃᐃΔⲆ, 1)
		} else ⵠΔᐃ && 150 > Ⲇᐃⵠ.ⵠⵠΔᐃ(this, ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ]) ? this.opacity = Math.max(this.opacity - ᐃᐃΔⲆ, .3) : this.opacity = Math.min(this.opacity + ᐃᐃΔⲆ, ΔΔᐃⵠ);
		var ᐃᐃⵠⲆᐃᐃΔᐃⲆ = Ⲇ.globalAlpha;
		Ⲇ.globalAlpha *= this.opacity;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠᐃⵠΔ + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.globalAlpha = ᐃᐃⵠⲆᐃᐃΔᐃⲆ;
		Ⲇ.restore()
	}

	function ⲆᐃⲆΔⲆⲆᐃᐃⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⵠΔΔᐃⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ΔⲆΔⵠΔᐃⵠⵠⲆ() {
		var ⵠⲆⵠᐃⲆ = ⲆΔⲆ.ⵠⲆⵠᐃⲆ;
		if (ⵠⲆⵠᐃⲆ.wait) {
			var ⵠᐃⵠⵠᐃ = ⵠⲆⵠᐃⲆ.timeout.ⵠᐃⵠ();
			Ⲇ.save();
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔⲆⵠⵠᐃΔ];
			var ⵠⵠⲆⵠⵠ = Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆⲆ].height + 25 * ᐃ;
			Ⲇ.translate(ⵠⵠ.width, ⵠΔᐃⵠ.ΔΔⵠⲆ.translate.y - ᐃ * 188 - ⵠⵠⲆⵠⵠ);
			var ᐃᐃΔ = -ⵠⵠ.width / ΔⲆⲆᐃ - 2;
			var ᐃⲆᐃ = -ⵠⵠ.height / 2 - ᐃΔᐃΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ + 2, ᐃⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineWidth = ᐃ * 5;
			Ⲇ.strokeStyle = Δ.ᐃᐃⵠⵠⵠⵠⲆ[ⲆΔΔ.time];
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.arc(0, ᐃⲆᐃ + ⵠⵠ.height / 2, 25 * ᐃ, 0, ⵠⲆⵠᐃⲆ.timeout.ⵠⵠΔ * (2 * Math.PI));
			Ⲇ.stroke();
			Ⲇ.restore();
			if (ⵠᐃⵠⵠᐃ) {
				ⵠⲆⵠᐃⲆ.wait = false;
				ⵠⲆⵠᐃⲆ.timeout.ⵠⵠΔ = 0;
				ⵠⲆⵠᐃⲆ.timeout.ⵠⲆⵠ = ΔⵠⵠΔⲆ
			}
		}
	}

	function ⲆⲆⲆΔᐃⵠᐃⲆΔ() {
		Ⲇ.save();
		var ΔⲆᐃΔⲆⲆⲆ = ᐃ;
		if (.25 > ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃΔ.x) Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠⵠΔΔᐃ.ⵠⵠΔ;
		var ᐃⲆᐃ = ⲆⲆⲆ < ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length ? -70 : ⵠⵠᐃⵠ;
		(ⲆΔⲆ.ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && -ⲆⲆΔᐃ != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃⲆΔᐃ) || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && -ΔΔᐃⵠ != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔⲆⲆΔΔ) || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃⲆΔᐃ) != -ΔⲆᐃ || ⲆΔⲆ.ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && -ᐃⵠⵠ != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃⵠΔΔⵠ) || ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && (-1 != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃⲆΔᐃ) || -1 != ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⲆⲆⲆΔⵠ))) && (ᐃⲆᐃ -= 50 * ᐃ);
		Ⲇ.translate((Ⲇⵠⵠⵠ - ᐃ * 950) / ⲆⲆⵠΔ, ᐃⲆᐃ);
		Ⲇ.fillStyle = "#69A148";
		Ⲇ.fillRect(this.translate.x + 37 * ᐃ, this.translate.y + ⲆΔΔᐃⲆⲆᐃ * ᐃ, ᐃ * (ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃΔ.x * 178), 18 * ᐃ);
		Ⲇ.globalAlpha = ⵠⵠⲆΔ;
		ⲆΔⲆ.ΔΔⵠⲆ.ᐃᐃΔᐃⲆΔΔ.x < .35 && (Ⲇ.fillStyle = "#8F050A", Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃᐃⵠΔⲆⲆ.ⵠⵠΔ, Ⲇ.fillRect(this.translate.x + 277 * ᐃ, this.translate.y + ᐃ * 17, 178 * ᐃ, 18 * ᐃ), Ⲇ.globalAlpha = ᐃΔⲆⵠ);
		Ⲇ.fillStyle = "#AF352A";
		Ⲇ.fillRect(this.translate.x + ᐃ * 277, this.translate.y + ᐃ * 17, ᐃ * (178 * ⲆΔⲆ.ΔΔⵠⲆ.ᐃᐃΔᐃⲆΔΔ.x), ᐃ * ⲆΔΔⵠΔⲆⵠ);
		.35 > ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.x && (Ⲇ.fillStyle = "#366B91", Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆΔΔⵠΔⲆ.ⵠⵠΔ, Ⲇ.fillRect(this.translate.x + ᐃ * 517, this.translate.y + ᐃ * 17, 178 * ᐃ, ΔⵠΔⵠᐃⵠⲆ * ᐃ), Ⲇ.globalAlpha = 1);
		if (Settings.ShowHP.enabled) {
			Ⲇ.save();
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "34px Baloo Paaji";
			Ⲇ.fillStyle = "#69A148";
			Ⲇ.strokeStyle = "black";
			Ⲇ.strokeText(Math.round(ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃΔ.x * 200) + "hp", this.translate.x + 87 * ᐃ, this.translate.y * ᐃ);
			Ⲇ.fillText(Math.round(ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃΔ.x * 200) + "hp", this.translate.x + 87 * ᐃ, this.translate.y * ᐃ);
			Ⲇ.restore()
		}
		if (Settings.Timers.enabled) {
			Ⲇ.save();
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "34px Baloo Paaji";
			Ⲇ.strokeStyle = "black";
			Ⲇ.fillStyle = "#69A148";
			Ⲇ.strokeText(~~(11 - (Date.now() - Timers.HealTimer) / 1e3) + "s", this.translate.x + 216 * ᐃ, this.translate.y + 35 * ᐃ);
			Ⲇ.fillText(~~(11 - (Date.now() - Timers.HealTimer) / 1e3) + "s", this.translate.x + 216 * ᐃ, this.translate.y + 35 * ᐃ);
			Ⲇ.fillStyle = "#AF352A";
			Ⲇ.strokeText(~~(6 - (Date.now() - Timers.GaugeTimer) / 1e3) + "s", this.translate.x + 460 * ᐃ, this.translate.y + 35 * ᐃ);
			Ⲇ.fillText(~~(6 - (Date.now() - Timers.GaugeTimer) / 1e3) + "s", this.translate.x + 460 * ᐃ, this.translate.y + 35 * ᐃ);
			Ⲇ.restore()
		}
		Ⲇ.fillStyle = "#669BB1";
		Ⲇ.fillRect(this.translate.x + 517 * ᐃ, this.translate.y + ᐃ * ΔⵠΔⲆΔⲆΔ, ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.x * 178 * ᐃ, ᐃ * ⵠⲆⲆΔΔⵠⲆ);
		if (ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.x > .99) {
			if (ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠΔⵠ.x < .35) {
				Ⲇ.fillStyle = "#6C4036";
				Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ⲆⵠⲆⲆΔⲆⲆ.ⵠⵠΔ;
				Ⲇ.fillRect(this.translate.x + ᐃ * 517, this.translate.y + ᐃ * ᐃΔⲆⲆᐃⵠⵠ, ᐃ * 178, ΔⵠΔⵠᐃⵠⲆ * ᐃ);
				Ⲇ.globalAlpha = ΔΔᐃᐃ
			}
			Ⲇ.fillStyle = "#9C4036";
			Ⲇ.fillRect(this.translate.x + ᐃ * 517, this.translate.y + ⲆⲆᐃⵠⵠⵠⲆ * ᐃ, 178 * (1 - ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠΔⵠ.x) * ᐃ, 18 * ᐃ)
		}
		ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃΔΔⲆⲆΔ.x < .35 && (Ⲇ.fillStyle = "#001A57", Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ᐃΔⲆⵠᐃⵠⵠ.ⵠⵠΔ, Ⲇ.fillRect(this.translate.x + 757 * ᐃ, this.translate.y + ⵠⲆⵠΔΔⲆⵠ * ᐃ, ᐃ * 178, ᐃ * ⲆⵠᐃᐃⲆ), Ⲇ.globalAlpha = 1);
		Ⲇ.fillStyle = "#074A87";
		Ⲇ.fillRect(this.translate.x + 757 * ᐃ, this.translate.y + ᐃ * 17, 178 * ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃΔΔⲆⲆΔ.x * ᐃ, 18 * ᐃ);
		ᐃ = ΔⲆᐃΔⲆⲆⲆ;
		ⵠⲆΔⲆ(Ⲇ, this.ⵠⵠ, this.translate.x, this.translate.y);
		this.y = this.translate.y + ᐃⲆᐃ;
		Ⲇ.restore();
		if (ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.x < .99) {
			var ᐃᐃΔ = Math.floor(ᐃΔΔᐃ - Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆᐃ].width / 2);
			ᐃⲆᐃ += this.translate.y - Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆᐃ].height - ᐃ * 5;
			Ⲇ.fillStyle = "#BBE8EF";
			Ⲇ.fillRect(ᐃᐃΔ + 5, ᐃⲆᐃ + ᐃ * 5, 588 * ᐃ * ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.x, ᐃ * ⲆᐃᐃᐃⲆ);
			ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.x < .35 && (Ⲇ.fillStyle = "#9BA8AF", Ⲇ.globalAlpha = ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠΔⵠⲆⲆΔ.ⵠⵠΔ, Ⲇ.fillRect(ᐃᐃΔ + ΔⲆⵠΔΔ, ᐃⲆᐃ + ⲆᐃΔΔΔ, ᐃ * 588, 10 * ᐃ), Ⲇ.globalAlpha = 1);
			ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆᐃ], ᐃᐃΔ, ᐃⲆᐃ);
			this.y = ᐃⲆᐃ
		}
	}

	function ⵠⲆⵠᐃⲆΔⵠᐃΔ() {
		var ⲆΔⵠᐃΔ = ⲆΔⲆ.ⲆΔⵠᐃΔ;
		if (ⲆΔⵠᐃΔ.wait) {
			var ⵠᐃⵠⵠᐃ = ⲆΔⵠᐃΔ.timeout.ⵠᐃⵠ();
			Ⲇ.save();
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆⲆ];
			Ⲇ.translate(ⵠⵠ.width - ⵠᐃᐃⵠ * ᐃ, ⵠΔᐃⵠ.ΔΔⵠⲆ.translate.y - 60 * ᐃ);
			var ᐃᐃΔ = -ⵠⵠ.width / ᐃⲆⲆΔ - 2;
			var ᐃⲆᐃ = -ⵠⵠ.height / 2 - ⲆⲆΔΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			Ⲇ.beginPath();
			Ⲇ.lineWidth = ⵠⲆⲆᐃⵠ * ᐃ;
			Ⲇ.strokeStyle = Δ.ᐃᐃⵠⵠⵠⵠⲆ[ⲆΔΔ.time];
			Ⲇ.lineCap = ⵠ[244];
			Ⲇ.arc(0, ᐃⲆᐃ + ⵠⵠ.height / ΔᐃⵠⲆ, ᐃ * 25, ΔⵠⲆⲆ, 2 * Math.PI * ⲆΔⵠᐃΔ.timeout.ⵠⵠΔ);
			Ⲇ.stroke();
			Ⲇ.restore();
			ⵠᐃⵠⵠᐃ && (ⲆΔⵠᐃΔ.wait = false, ⲆΔⵠᐃΔ.timeout.ⵠⵠΔ = 0, ⲆΔⵠᐃΔ.timeout.ⵠⲆⵠ = ⵠⲆⵠΔⵠ)
		}
	}

	function ⲆᐃΔΔⲆⲆΔᐃᐃ() {
		var ⲆⵠⲆᐃⲆ = ⲆΔⲆ.ⲆⵠⲆᐃⲆ;
		var ᐃⵠⲆⵠⲆᐃᐃ = ⵠΔᐃⵠ.ⲆⲆΔⵠⲆ;
		if (ⲆⵠⲆᐃⲆ.ⵠᐃⵠ) {
			ⲆⵠⲆᐃⲆ.ⵠᐃⵠ = ΔⲆᐃⲆΔ;
			var ⵠΔⲆⵠⵠ = ⲆⵠⲆᐃⲆ.ⵠΔⲆⵠⵠ;
			var ᐃᐃⲆ = ᐃⵠⲆⵠⲆᐃᐃ.ΔΔ.width;
			var ΔᐃⲆ = ᐃⵠⲆⵠⲆᐃᐃ.ΔΔ.height;
			var ⵠⲆΔⵠⲆΔΔ = ᐃⵠⲆⵠⲆᐃᐃ.Ⲇ;
			var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
			var ᐃⲆⵠᐃⲆΔᐃ = false;
			ⵠⲆΔⵠⲆΔΔ.clearRect(ΔΔⲆᐃ, ⵠᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			ⵠⲆΔⵠⲆΔΔ.drawImage(ᐃⵠⲆⵠⲆᐃᐃ.ⵠⵠ, ΔⵠⲆΔ, ΔⲆⵠ);
			for (var ᐃⲆ = 0; ᐃⲆ < ⵠΔⲆⵠⵠ.length; ᐃⲆ++) {
				var ⵠΔᐃ = ᐃⵠⵠΔ[ⵠΔⲆⵠⵠ[ᐃⲆ]];
				if (ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ === ⲆΔΔ.mode && ⵠ[211] === ⵠΔᐃ.ᐃΔⲆᐃⵠ) continue;
				if (ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⵠΔᐃ.ᐃᐃᐃΔ === ⲆⵠΔΔ.ΔΔⵠᐃΔᐃⲆ) continue;
				if (ⲆΔⲆ.id == ⵠΔⲆⵠⵠ[ᐃⲆ]) {
					ᐃⲆⵠᐃⲆΔᐃ = ⵠΔΔΔⲆ;
					ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ && ⲆⵠΔΔ.ᐃᐃΔⵠΔⵠᐃ === ⵠΔᐃ.ᐃᐃᐃΔ ? ᐃᐃ = "#FF0000" : ᐃᐃ = ⵠ[68]
				} else {
					if (ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ === ⲆΔΔ.mode && ⲆⵠΔΔ.ᐃᐃΔⵠΔⵠᐃ === ⵠΔᐃ.ᐃᐃᐃΔ) ᐃᐃ = "#990000";
					else ᐃᐃ = "#A1BDCD"
				}
				ⵠⲆΔⵠⲆΔΔ.drawImage(ⲆΔΔΔⲆ(ᐃ, "" + (ᐃⲆ + ΔΔⲆΔ), 15 * ᐃ, ᐃᐃ), 20 * ᐃ, (40 + 22 * ᐃⲆ) * ᐃ);
				!ⵠΔᐃ.ΔⵠᐃⲆⵠᐃᐃ && (ⵠΔᐃ.ΔⵠᐃⲆⵠᐃᐃ = ⲆΔΔΔⲆ(ᐃ, ⵠΔᐃ.ᐃΔⲆᐃⵠ, ΔΔⵠΔⵠΔⲆ * ᐃ, ᐃᐃ, undefined, ᐃⲆⵠⲆⵠ, ᐃⵠⲆᐃⲆ, ⵠΔⵠΔⵠ, ᐃ * 110));
				ⵠⲆΔⵠⲆΔΔ.drawImage(ⵠΔᐃ.ΔⵠᐃⲆⵠᐃᐃ, 39 * ᐃ, (40 + ᐃⲆ * 22) * ᐃ);
				ⵠⲆΔⵠⲆΔΔ.drawImage(ⲆΔΔΔⲆ(ᐃ, Ⲇᐃⵠ.ⵠΔⵠᐃⲆΔⲆ(ⵠΔᐃ.ⵠⲆⲆᐃᐃ), ᐃ * 15, ᐃᐃ), ᐃ * 156, ᐃ * (40 + 22 * ᐃⲆ))
			}
			if (!ᐃⲆⵠᐃⲆΔᐃ) {
				if (ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ === ⲆΔΔ.mode || ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ === ⲆΔΔ.mode || ⲆⵠΔΔ.ᐃΔⲆⵠⵠ === ⲆΔΔ.mode || ⲆΔΔ.mode === ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔΔⵠΔ || ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ === ⲆΔΔ.mode && !ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ || ⲆⵠΔΔ.ᐃᐃΔᐃⲆ === ⲆΔΔ.mode && !ⲆΔⲆ.ΔⵠⲆΔΔ) {
					ⵠⲆΔⵠⲆΔΔ.drawImage(Ⲇᐃ[Δ.ⲆΔᐃⵠΔΔᐃ], ᐃ * ⵠⲆᐃΔⲆ, ᐃ * (46 + ᐃⲆ * 22));
					ⵠⲆΔⵠⲆΔΔ.drawImage(ⲆΔΔΔⲆ(ᐃ, Ⲇᐃⵠ.ⵠΔⵠᐃⲆΔⲆ(ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.id].ⵠⲆⲆᐃᐃ), 15 * ᐃ, ⵠ[68]), ᐃΔⵠΔᐃ * ᐃ, (46 + ᐃⲆ * 22) * ᐃ)
				}
			}
		}
		ⵠⲆΔⲆ(Ⲇ, ᐃⵠⲆⵠⲆᐃᐃ.ΔΔ, ᐃⵠⲆⵠⲆᐃᐃ.translate.x, ᐃⵠⲆⵠⲆᐃᐃ.translate.y)
	}

	function ⵠᐃΔᐃⵠⵠᐃΔΔ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == ΔⲆⵠᐃⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = ⲆΔᐃⵠⲆ);
			var ⵠⵠΔ = ᐃ * (600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}
	const ΔΔⵠΔⵠ = ⵠⵠⲆΔ;
	var ᐃⵠⵠⵠΔⵠᐃ = 0;

	function ⵠⵠᐃΔⲆⲆΔⲆΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ⵠΔᐃⲆⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆⵠᐃⲆᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ⵠΔᐃⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height * this.ⵠΔᐃⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ᐃᐃΔⵠ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ᐃᐃⲆⵠᐃⵠΔⵠⲆ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			var ⵠⵠΔ = 600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)) * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		if (this.info & 255 && 65280 != (this.info & 65280)) this.rotate = (this.rotate + ᐃᐃΔⲆ * .5) % (2 * Math.PI);
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.save();
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆᐃⵠⲆⵠⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⵠᐃ, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.rotate(this.ⲆᐃΔⲆⵠᐃⲆⵠᐃ);
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆⲆⵠⵠⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⲆⲆⵠΔ);
		Ⲇ.restore();
		Ⲇ.restore();
		if (Settings.BuildsInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "24px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ΔΔⵠΔΔⵠΔΔⵠ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && Ⲇᐃⵠⵠᐃ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = ΔᐃΔᐃᐃ);
			var ⵠⵠΔ = ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ⲆⵠⲆ;
			var ᐃⲆᐃ = ⵠⵠᐃⵠ
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (this.info === 10 || ⲆᐃᐃⲆ === ⲆΔᐃ) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠⵠ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ᐃΔᐃΔᐃⵠᐃ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⲆⵠΔ + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠΔ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃ][ⲆΔΔ.time];
			Ⲇ.translate(ⲆΔᐃ, ⵠⵠ.height / 2);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / 2, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ᐃᐃⵠΔⵠΔΔᐃΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.info & 31 && this.info & 992 && (this.info & 31744) != 31744 && (this.ⲆⲆᐃᐃⲆ.length == 0 || this.ⲆⲆᐃᐃⲆ[this.ⲆⲆᐃᐃⲆ.length - 1] <= Δ.ⲆⵠⲆᐃⲆⵠᐃ) && this.ⲆⲆᐃᐃⲆ.push(Δ.ⵠⵠⵠᐃᐃΔⵠ);
		for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < this.ⲆⲆᐃᐃⲆ.length; ᐃⲆ++) {
			this.ⲆⲆᐃᐃⲆ[ᐃⲆ] = Math.max(ΔⲆᐃⲆ, this.ⲆⲆᐃᐃⲆ[ᐃⲆ] - Δ.ⵠᐃᐃⵠᐃⲆⵠ * ᐃᐃΔⲆ);
			Ⲇ.globalAlpha = this.ⲆⲆᐃᐃⲆ[ᐃⲆ] / 1.3;
			var ⵠⵠΔ = 40 * (ⵠⵠⲆΔ - this.ⲆⲆᐃᐃⲆ[ᐃⲆ]);
			var Δᐃᐃ = 35 * (1 - this.ⲆⲆᐃᐃⲆ[ᐃⲆ]) + 10;
			ΔⵠⲆ(Ⲇ, ᐃ * -68 + ⵠⵠΔ * Math.sin(-this.angle - Math.PI / 2), ᐃ * -ⵠⲆΔⵠ + Math.cos(-this.angle - Math.PI / ᐃⲆⵠᐃ) * ⵠⵠΔ, Δᐃᐃ);
			Δⵠ(Ⲇ, "#333333")
		}
		Ⲇ.globalAlpha = 1;
		0 < this.ⲆⲆᐃᐃⲆ.length && this.ⲆⲆᐃᐃⲆ[0] === 0 && this.ⲆⲆᐃᐃⲆ.shift();
		Ⲇ.restore()
	}

	function ᐃΔᐃᐃⵠⲆⵠΔⵠ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ⵠⲆⲆⵠΔ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃ * (600 * ((ΔᐃⵠΔ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ΔΔⲆᐃ;
			var ᐃⲆᐃ = 0
		}
		Ⲇ.save();
		this.info & 255 && 65280 != (this.info & 65280) && (ᐃᐃΔ += Math.random() * 2 - ⲆⲆΔᐃ, ᐃⲆᐃ += Math.random() * 2 - ⵠᐃΔᐃ);
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠⲆⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃᐃΔⵠ, -ⵠⵠ.height / ⲆᐃⲆᐃ);
		if (this.info & 255 && 65280 != (this.info & 65280)) this.rotate = (this.rotate + ⵠⲆⵠⵠ * ᐃᐃΔⲆ) % (Math.PI * 2);
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆΔᐃⲆΔⵠᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		if (Settings.ExtractorInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ⵠᐃⲆΔⲆᐃΔᐃΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ⲆⵠᐃΔΔ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃ * (600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ⵠⵠᐃⵠ;
			var ᐃⲆᐃ = ΔΔⵠᐃ
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (ᐃᐃⲆᐃᐃ === this.info || 0 === ⲆᐃᐃⲆ) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠΔᐃᐃᐃᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⵠⲆᐃᐃⲆ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⵠΔⲆ + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ΔΔΔᐃᐃΔᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆⲆⲆᐃⲆ][ⲆΔΔ.time];
			Ⲇ.translate(0, ⵠⵠ.height / ⵠΔⲆΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / 2, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ᐃΔᐃᐃⲆᐃΔⲆⲆ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ⲆⲆⲆ;
			var ᐃⲆᐃ = ΔᐃⲆΔ
		}
		Ⲇ.save();
		if (this.info & 255 && (this.info & 65280) != 65280) {
			ᐃᐃΔ += Math.random() * ⲆᐃⲆᐃ - ΔΔᐃⵠ;
			ᐃⲆᐃ += 2 * Math.random() - 1
		}
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃΔⲆΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		this.info & 255 && 65280 != (this.info & 65280) && (this.rotate = (this.rotate + ᐃᐃΔⲆ * ΔⲆΔⵠ) % (ΔᐃⵠⲆ * Math.PI));
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆⲆⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⵠᐃ, -ⵠⵠ.height / ⵠΔⵠᐃ);
		Ⲇ.restore();
		if (Settings.ExtractorInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ⵠⲆᐃΔⵠᐃⵠⲆⵠ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = ⲆⵠᐃΔΔ;
			var ⵠⵠΔ = (ΔΔⲆΔ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600 * ᐃ;
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		this.ⵠᐃᐃⲆΔΔΔ = (this.ⵠᐃᐃⲆΔΔΔ + ⵠΔⵠⲆ * ᐃᐃΔⲆ) % (Math.PI * ᐃᐃⲆΔ);
		this.ᐃⲆⵠΔⵠⵠⲆ = (this.ᐃⲆⵠΔⵠⵠⲆ - ⵠⲆⵠⵠ * ᐃᐃΔⲆ) % (Math.PI * ΔᐃⵠⲆ);
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.save();
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ΔΔΔΔΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.rotate(this.ⵠᐃᐃⲆΔΔΔ);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃΔΔᐃᐃⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃᐃⲆΔ, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.rotate(this.ᐃⲆⵠΔⵠⵠⲆ);
		ⵠⵠ = Ⲇᐃ[Δ.ΔⵠΔᐃⵠΔⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ΔⲆⲆᐃ, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.restore();
		if (Settings.BuildsInfo.enabled) {
			Ⲇ.save();
			Ⲇ.lineWidth = 8;
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.font = "22px Baloo Paaji";
			Ⲇ.strokeText(player(this), this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y);
			Ⲇ.fillText(player(this), this.x + ⲆΔⲆ.ⵠΔΔ.x - 25, this.y + ⲆΔⲆ.ⵠΔΔ.y);
			Ⲇ.restore()
		}
	}

	function ⲆⵠΔᐃΔⵠⲆΔᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == ⲆⲆⲆᐃⲆ) this.ⲆⲆᐃ.ⵠᐃⵠ = ⵠⲆⵠΔⵠ;
			var ⵠⵠΔ = ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (ΔᐃΔᐃⵠ === this.info || ⲆᐃᐃⲆ === 0) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆᐃⲆⲆΔᐃ][ⲆΔΔ.time];
			var ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
			var ΔᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆΔΔΔⲆΔ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⵠⲆᐃ][ⲆΔΔ.time];
			Ⲇ.translate(ⵠⵠⲆⲆ, ⵠⵠ.height / ⵠΔⵠᐃ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / ⵠⵠΔⲆ, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ⲆΔΔΔⵠᐃⵠΔΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (300 < Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r)) this.scale = Math.min(this.scale + ᐃᐃΔⲆ / 2, 1.8);
		else this.scale = Math.max(this.scale - ᐃᐃΔⲆ, ΔᐃⵠΔ);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height * this.scale;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / Δⵠⵠⵠ, -ΔᐃⲆ / 4, ᐃᐃⲆ / ᐃΔⵠᐃ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == false && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆⵠᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / ᐃⲆⲆΔ);
			Ⲇ.globalAlpha = ⵠᐃΔᐃ
		}
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		Ⲇ.save();
		Ⲇ.translate(-60 * ᐃ, 20 * ᐃ);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, ᐃ * -ΔᐃⲆ / ᐃΔᐃⲆⵠ, ᐃᐃⲆ / ᐃΔⲆⲆⵠ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃΔⵠⲆΔΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / ⲆⲆⲆⵠᐃ, ᐃ * -ΔᐃⲆ / ⵠΔΔᐃ, ᐃᐃⲆ / ΔᐃⵠⲆ, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⵠⲆⲆⵠᐃ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 60, ᐃ * ⵠᐃⵠⲆ);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / 4, ᐃ * -ΔᐃⲆ / ⲆⵠⲆΔⲆ, ᐃᐃⲆ / 2, ΔᐃⲆ / ⲆᐃⲆᐃ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⵠΔᐃⵠⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / ⲆⵠΔΔⲆ, -ΔᐃⲆ * ᐃ / ΔⲆΔⲆ, ᐃᐃⲆ / ᐃⵠΔⲆ, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = ⲆᐃⲆⲆ
		}
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ᐃⲆΔΔⵠΔᐃ(ⵠⵠᐃΔ, ᐃᐃΔ, ᐃⲆᐃ) {
		if (ΔΔᐃ <= ⵠⵠᐃΔ) {
			ⵠⵠ = Ⲇᐃ[ⵠⵠᐃΔ][ⲆΔΔ.time];
			switch (ⵠⵠᐃΔ) {
				case Δ.ᐃⵠᐃⲆΔ:
				case Δ.ᐃᐃΔⵠᐃ:
				case Δ.ᐃᐃΔᐃΔ:
				case Δ.ⵠᐃΔⵠᐃ:
				case Δ.ᐃΔΔᐃΔ:
				case Δ.ᐃΔᐃΔᐃ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃⲆⵠᐃ - ᐃ * (45 + ᐃᐃΔ), -ⵠⵠ.height / ᐃΔⵠᐃ + ᐃ * (ᐃⲆᐃ + 22));
					break;
				case Δ.ΔΔⵠⲆⲆ:
				case Δ.ⲆⵠΔⵠᐃ:
				case Δ.ⲆΔᐃⵠⵠ:
				case Δ.ⵠⵠΔΔᐃ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (52 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ⵠᐃⵠᐃⲆ + (ᐃⲆᐃ + ΔⲆΔᐃ) * ᐃ);
					break;
				case Δ.ⵠΔⵠⵠΔ:
				case Δ.ⲆⲆⵠΔΔ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃΔᐃⲆⵠ - (57 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + (ᐃⲆᐃ + ΔⵠᐃⵠΔⵠⲆ) * ᐃ);
					break;
				case Δ.Ⲇᐃⵠᐃⵠ:
				case Δ.ⵠⲆⵠΔⲆ:
				case Δ.ⲆᐃΔΔⲆ:
				case Δ.ΔⲆᐃⲆᐃ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃΔΔΔ - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ᐃⵠⲆⲆⲆ + ᐃ * (ᐃⲆᐃ + 45));
					break;
				case Δ.ΔᐃΔⲆⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (52 + ᐃᐃΔ), -ⵠⵠ.height / 4 + (ᐃⲆᐃ + 45) * ᐃ);
					break;
				case Δ.ⵠⲆⲆΔⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (47 + ᐃᐃΔ), -ⵠⵠ.height / ⵠᐃⵠᐃⲆ + (ᐃⲆᐃ + 44) * ᐃ);
					break;
				case Δ.ΔⲆⲆΔⲆ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃⲆⵠᐃ - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 2 + (ᐃⲆᐃ + 44) * ᐃ);
					break;
				case Δ.ᐃⲆΔΔⵠ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 2 - ᐃ * (40 + ᐃᐃΔ), -ⵠⵠ.height / ᐃᐃΔⵠ + ᐃ * (ᐃⲆᐃ + 65));
					break;
				case Δ.ΔΔΔⲆⵠ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃΔᐃΔ - (37 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ⵠⲆᐃᐃ + ᐃ * (ᐃⲆᐃ + 85));
					break;
				case Δ.ⲆⲆⲆⵠⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⵠΔΔᐃ - (37 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + ᐃ * (ᐃⲆᐃ + 85));
					break;
				case Δ.ᐃᐃⲆΔᐃ:
				case Δ.ⵠΔΔᐃⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃⵠⲆⲆⲆ - ᐃ * (26 + ᐃᐃΔ), -ⵠⵠ.height / ⲆⵠⲆⲆ + (ᐃⲆᐃ + 77) * ᐃ);
					break;
				case Δ.ᐃⵠⲆΔΔ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⲆⲆⵠᐃ - ᐃ * (37 + ᐃᐃΔ), -ⵠⵠ.height / ⲆⵠⲆⲆ + (ᐃⲆᐃ + 85) * ᐃ);
					break;
				case Δ.ⲆᐃΔⲆⵠ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (47 + ᐃᐃΔ), -ⵠⵠ.height / ⵠΔΔᐃ + (ᐃⲆᐃ + 44) * ᐃ);
					break;
				case Δ.ᐃΔⵠᐃⵠ:
				case Δ.ᐃⲆΔⵠΔ:
				case Δ.ⲆⵠⲆΔⵠ:
				case Δ.ⲆⲆΔⲆⲆ:
				case Δ.ⲆⲆᐃⵠⵠ:
				case Δ.ⵠΔΔⵠΔ:
				case Δ.ᐃᐃΔΔⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (37 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + (ᐃⲆᐃ + 30) * ᐃ);
					break;
				case Δ.ⲆⲆⵠⵠᐃ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ΔⲆΔⲆ + (ᐃⲆᐃ + 35) * ᐃ);
					break;
				case Δ.ΔⲆᐃⵠⲆ:
				case Δ.ᐃΔⲆΔⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃᐃⲆ - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + (ᐃⲆᐃ + 40) * ᐃ);
					break;
				case Δ.ⵠᐃⲆᐃⲆ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ⵠⲆᐃᐃ + (ᐃⲆᐃ + 34) * ᐃ);
					break;
				case Δ.ⲆΔⵠᐃⵠ:
				case Δ.ⵠⲆΔᐃⲆ:
				case Δ.ΔⲆⲆᐃᐃ:
				case Δ.ᐃⲆⵠⲆᐃ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (37 + ᐃᐃΔ), -ⵠⵠ.height / 4 + (ᐃⲆᐃ + 90) * ᐃ);
					break;
				case Δ.ⵠⲆⲆⲆᐃ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ΔⲆΔⲆ - ᐃ * (40 + ᐃᐃΔ), -ⵠⵠ.height / ᐃⵠⲆⲆⲆ + (ᐃⲆᐃ + 85) * ᐃ);
					break;
				case Δ.ⵠⵠΔᐃⵠ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 2 - (39 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ⲆⲆⵠΔ + (ᐃⲆᐃ + 90) * ᐃ);
					break;
				case Δ.ΔⲆΔⲆᐃ:
				case Δ.ⲆⲆΔⲆⵠ:
				case Δ.ⲆᐃΔⵠᐃ:
				case Δ.ᐃΔⵠⵠᐃ:
				case Δ.ⲆⲆⵠᐃⵠ:
				case Δ.ⵠΔᐃⵠⵠ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⵠᐃ - (46 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 2 + (ᐃⲆᐃ + 35) * ᐃ);
					break;
				case Δ.ᐃΔⲆΔⵠ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 2 - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 2 + (ᐃⲆᐃ + 54) * ᐃ);
					break;
				case Δ.ⵠⵠⲆᐃᐃ:
				case Δ.ᐃᐃⲆᐃⲆ:
				case Δ.ᐃⵠΔⲆΔ:
				case Δ.ᐃⵠⵠⵠᐃ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⵠᐃ - (46 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 2 + (ᐃⲆᐃ + 35) * ᐃ);
					break;
				case Δ.ⲆΔΔΔΔ:
					ⵠⵠⲆⲆⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 2 - (47 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ΔᐃⵠⲆ + ᐃ * (ᐃⲆᐃ + ΔⵠᐃⵠΔⵠⲆ));
					break
			}
		}
	}

	function ⵠⵠⵠⵠᐃᐃᐃⵠⵠ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = ⲆⲆⲆᐃⲆ);
			var ⵠⵠΔ = ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = ⵠⵠᐃᐃΔ
		}
		this.ⵠᐃᐃⲆΔΔΔ = (this.ⵠᐃᐃⲆΔΔΔ + 3 * ᐃᐃΔⲆ) % (2 * Math.PI);
		this.ᐃⲆⵠΔⵠⵠⲆ = (this.ᐃⲆⵠΔⵠⵠⲆ - 3 * ᐃᐃΔⲆ) % (2 * Math.PI);
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.save();
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⵠΔΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.rotate(this.ⵠᐃᐃⲆΔΔΔ);
		ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⵠΔⵠᐃⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.rotate(this.ᐃⲆⵠΔⵠⵠⲆ);
		ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃⲆΔⵠΔⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⵠᐃᐃⵠ);
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ⲆΔⵠⲆᐃⲆⲆⲆᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ᐃⵠᐃⵠᐃ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = ΔⲆᐃⲆΔ);
			var ⵠⵠΔ = ᐃ * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (this.info === ᐃᐃⵠᐃΔ || ΔⵠⲆⲆ === ⲆᐃᐃⲆ) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⵠᐃΔᐃⵠ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃΔⵠⵠⲆⵠ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / ⵠⵠⲆᐃ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃⲆΔᐃⲆ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⵠᐃ][ⲆΔΔ.time];
			Ⲇ.translate(0, ⵠⵠ.height / ⵠᐃⵠΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / ⵠⲆⵠᐃ, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ⵠᐃᐃᐃᐃᐃΔⵠΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ΔΔⵠⲆΔⵠⵠ = Math.min(ⲆⲆΔᐃ, this.ΔΔⵠⲆΔⵠⵠ + ᐃᐃΔⵠ * ᐃᐃΔⲆ);
		Ⲇ.globalAlpha = this.ΔΔⵠⲆΔⵠⵠ * Math.min(1, Math.max(0, Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r) / 80));
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆ][ⲆΔΔ.time][this.ⲆⲆᐃⲆΔ];
		if (this.ⲆⲆᐃⲆΔ < 2) {
			ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ;
			ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ
		} else {
			this.ᐃᐃⵠΔⵠⵠⵠ === ΔΔⵠᐃ ? (ᐃᐃⲆ = -ⵠⵠ.width, ΔᐃⲆ = -ⵠⵠ.height) : (ᐃᐃⲆ = 1.35 * -ⵠⵠ.width, ΔᐃⲆ = 1.35 * -ⵠⵠ.height)
		}
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⲆⵠᐃ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.restore()
	}

	function ΔᐃⲆⲆᐃⲆΔⲆⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = ΔᐃΔΔΔ;
			var ⵠⵠΔ = 600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ) * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ⵠⵠᐃᐃΔ;
			var ᐃⲆᐃ = 0
		}
		if (this.info & 31 && this.info & 992 && 31744 != (this.info & 31744)) {
			ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠⵠᐃ][ⲆΔΔ.time];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⵠᐃ + ᐃᐃΔ, -ⵠⵠ.height / 2 + ᐃⲆᐃ);
			this.up.ⵠᐃⵠ();
			var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⵠⵠⲆᐃⵠ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.up.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = -ⵠⵠ.height * this.up.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⵠⲆᐃ + ᐃ * 1, -ΔᐃⲆ / ᐃⵠΔⲆ + ᐃ * Ⲇᐃⵠⵠ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠΔᐃΔⵠ][ⲆΔΔ.time];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2 + ᐃᐃΔ, -ⵠⵠ.height / ⵠᐃⵠΔ + ᐃⲆᐃ)
		}
		Ⲇ.restore();
		if (Settings.BuildsInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "24px Baloo Paaji";
			Ⲇ.strokeText((this.info & 31) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 15);
			Ⲇ.fillText((this.info & 31) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 15);
			Ⲇ.strokeText(((this.info & 992) >> 5) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 5);
			Ⲇ.fillText(((this.info & 992) >> 5) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 5);
			Ⲇ.strokeText(((this.info & 31744) >> 10) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 25);
			Ⲇ.fillText(((this.info & 31744) >> 10) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 25);
			Ⲇ.restore()
		}
	}

	function ⵠⵠᐃⵠⵠΔᐃΔᐃ() {
		if (this.info < 10) return;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = ΔⵠⵠΔⲆ;
			var ⵠⵠΔ = ᐃ * (600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)));
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = 0
		}
		this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
		var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⵠᐃⵠⵠᐃ][ⲆΔΔ.time];
		var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⵠΔΔ + ᐃᐃΔ, -ΔᐃⲆ / ⵠⵠΔⲆ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ᐃⵠᐃᐃΔⵠⵠⲆΔ(ⲆΔ, ᐃⵠΔⵠⲆΔⲆ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⵠⲆΔⲆ, -ΔᐃⲆ / ⲆⵠⲆΔⲆ, ᐃᐃⲆ / ᐃΔⲆⲆⵠ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && ⵠΔⲆᐃⲆ == this.ⲆⲆᐃ.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[ᐃⵠΔⵠⲆΔⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ⵠᐃᐃⲆ, ᐃᐃⲆ / ⵠⲆΔΔ, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = ΔⲆᐃ
		}
		Ⲇ.restore()
	}

	function ⵠᐃⲆΔΔⵠΔⲆΔ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ΔⵠⵠΔⲆ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ΔⲆᐃⲆ;
			var ᐃⲆᐃ = 0
		}
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⲆΔΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ΔⲆⲆᐃ, -ⵠⵠ.height / ⵠΔⵠᐃ);
		Ⲇ.restore()
	}

	function ΔⵠΔΔΔⵠΔΔΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * (ᐃᐃΔⲆ * (ΔᐃⵠΔ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ΔⲆᐃⲆ;
			var ᐃⲆᐃ = ΔⵠⲆⲆ
		}
		if (0 === this.info) ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ΔᐃΔⲆⵠ][ⲆΔΔ.time][this.info - ᐃΔⲆⵠ];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ΔᐃⵠⲆ + ᐃᐃΔ, -ⵠⵠ.height / 2 + ᐃⲆᐃ);
		Ⲇ.restore()
	}

	function ⵠΔⵠⲆⲆᐃⲆⲆⵠ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r) > 300) this.scale = Math.min(this.scale + ᐃᐃΔⲆ / ᐃΔⲆⲆⵠ, 1.8);
		else this.scale = Math.max(this.scale - ᐃᐃΔⲆ, 1);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		0 === this.info ? ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆᐃⲆ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⲆΔᐃⲆⵠᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
		ΔᐃⲆ = this.scale * (-ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ᐃΔΔΔ, ᐃᐃⲆ / ΔᐃⵠⲆ, ΔᐃⲆ / ⵠⲆⵠᐃ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == ⵠⲆⲆⵠΔ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⵠΔᐃΔⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃΔⲆΔ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = ⲆΔᐃⲆ
		}
		if (ⲆⲆⲆ === this.info) ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔⵠΔⵠΔ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		Ⲇ.save();
		Ⲇ.translate(-40 * ᐃ, ᐃ * 10);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / ⲆⲆΔΔ, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃᐃⵠΔᐃⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / 4, -ΔᐃⲆ * ᐃ / ⵠⲆᐃᐃ, ᐃᐃⲆ / 2, ΔᐃⲆ / ΔᐃⵠⲆ);
			Ⲇ.globalAlpha = ΔⲆᐃ
		}
		Ⲇ.restore();
		if (this.info === 0) ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆᐃΔΔᐃᐃ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆᐃᐃᐃⲆⲆ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(40 * ᐃ, ᐃ * 10);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / ᐃΔΔΔ, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / ⵠⵠⲆᐃ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃΔᐃΔᐃⲆΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / ⵠᐃᐃⲆ, ᐃ * -ΔᐃⲆ / ⲆⲆΔΔ, ᐃᐃⲆ / 2, ΔᐃⲆ / ᐃⵠΔⲆ);
			Ⲇ.globalAlpha = ᐃΔⲆⵠ
		}
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ΔⲆⲆΔΔᐃΔⲆᐃ() {
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.info === 0) ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆΔᐃΔ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⵠΔⲆⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃᐃⲆΔ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔⵠⵠᐃᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ⵠⲆⲆ
		}
		Ⲇ.restore()
	}

	function ⵠⵠᐃΔⲆΔⲆΔⲆ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ, ⲆΔⵠᐃᐃ) {
		ᐃΔΔⲆⵠ === ΔⵠΔᐃ && (ΔⵠΔᐃ = 0);
		for (var ᐃⲆ = ΔⲆᐃᐃ; ᐃⲆ <= ⲆⲆᐃⲆ; ᐃⲆ++) {
			for (var ΔΔΔ = ⵠᐃΔΔ; ᐃⵠⵠᐃ >= ΔΔΔ; ΔΔΔ++) {
				var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
				if (ⲆᐃⵠⲆ === undefined || ⲆᐃⵠⲆ[ᐃⲆⵠ] === ᐃⲆᐃᐃᐃ) continue;
				var ⵠⲆᐃⵠⲆ = ⲆᐃⵠⲆ[ᐃⲆⵠ];
				var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ⵠⲆᐃⵠⲆ.ΔⵠΔᐃⵠⵠΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ⵠⵠ.width / (ΔⲆⵠᐃⲆ * 4), ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ⵠⵠ.height / (ΔⲆⵠᐃⲆ * ⵠΔΔᐃ), ⵠⵠ.width / (ΔⲆⵠᐃⲆ * 2), ⵠⵠ.height / (2 * ΔⲆⵠᐃⲆ));
				if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ) {
					var Δᐃⵠᐃ = 2147483648;
					var ⵠⵠⵠ = 1103515245;
					var ᐃΔⵠⲆ = 12345;
					var ΔⲆᐃΔ = (ⵠⵠⵠ * (1e3 * ᐃⲆ + ΔΔΔ) + ᐃΔⵠⲆ) % Δᐃⵠᐃ / Δᐃⵠᐃ;
					if (ΔⲆᐃΔ < .2) {
						ΔⲆᐃΔ = Math.floor(Ⲇᐃ[Δ.ΔⵠⲆᐃ][ⲆΔΔ.time][ⵠⲆᐃⵠⲆ.ΔⵠΔᐃⵠⵠΔ].length * (ⲆⲆᐃⵠ * ΔⲆᐃΔ));
						var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⲆᐃ][ⲆΔΔ.time][ⵠⲆᐃⵠⲆ.ΔⵠΔᐃⵠⵠΔ][ΔⲆᐃΔ];
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ⵠⵠ.width / (ΔⲆⵠᐃⲆ * ⵠⲆᐃᐃ), ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ⵠⵠ.height / (4 * ΔⲆⵠᐃⲆ), ⵠⵠ.width / (ⵠⲆⵠᐃ * ΔⲆⵠᐃⲆ), ⵠⵠ.height / (ΔⲆⵠᐃⲆ * ⵠⵠⲆᐃ))
					} else if (ᐃⵠΔ !== ⵠⲆᐃⵠⲆ.ᐃΔⲆⵠΔⲆⲆ) {
						var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⵠⲆΔΔⲆ][ⲆΔΔ.time];
						var ᐃⲆΔⲆⵠᐃΔ = (ᐃⵠⵠⵠΔⵠᐃ + 30 * (ᐃⲆ % 2)) % 60;
						Ⲇ.globalAlpha = ᐃⲆΔⲆⵠᐃΔ < 30 ? ᐃⲆΔⲆⵠᐃΔ / 30 : ΔΔⲆΔ - (ᐃⲆΔⲆⵠᐃΔ - 30) / 30;
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ⵠⵠ.width / (ⲆⵠⲆΔⲆ * ΔⲆⵠᐃⲆ), ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ⵠⵠ.height / (4 * ΔⲆⵠᐃⲆ) - 30 + ᐃⲆΔⲆⵠᐃΔ, ⵠⵠ.width / (ΔⲆⵠᐃⲆ * ΔᐃⵠⲆ), ⵠⵠ.height / (ΔⲆⵠᐃⲆ * ⵠⵠⲆᐃ));
						Ⲇ.globalAlpha = 1
					}
				}
			}
		}
	}

	function ΔΔⲆⲆⵠⵠΔⲆΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃ * (ᐃᐃΔⲆ * (ᐃⵠ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ⵠᐃⲆᐃ;
			var ᐃⲆᐃ = 0
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (ⵠⵠΔⲆᐃ === this.info || ⲆᐃᐃⲆ === ΔΔⲆᐃ) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃⲆΔᐃᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃⲆΔⲆ][ⲆΔΔ.time];
			var ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
			var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			this.ΔΔⵠᐃⲆⵠΔ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⵠΔⵠᐃᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆΔΔ][ⲆΔΔ.time];
			Ⲇ.translate(0, ⵠⵠ.height / 2);
			Ⲇ.rotate(this.ΔΔⵠᐃⲆⵠΔ.ⵠⵠΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / ᐃΔⲆⲆⵠ, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ΔᐃᐃᐃᐃⵠΔⵠⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (300 < Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r)) this.scale = Math.min(this.scale + ᐃᐃΔⲆ / ⲆᐃⲆᐃ, 1.8);
		else this.scale = Math.max(this.scale - ᐃᐃΔⲆ, ΔΔᐃⵠ);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		if (0 === this.info) ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠΔᐃⵠⵠᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (-ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		ΔᐃⲆ = this.scale * (-ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ᐃΔⲆΔ, ᐃᐃⲆ / ⵠⵠⲆᐃ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == false) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠᐃᐃΔᐃᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⲆΔⲆ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = ⲆᐃⲆⲆ
		}
		this.info === ⲆⵠⲆ ? ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⲆⵠᐃᐃΔ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠⵠⵠᐃᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
		ΔᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -40, ⵠΔᐃΔᐃ * ᐃ);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / ᐃΔᐃⲆⵠ, -ΔᐃⲆ * ᐃ / ⲆⵠⵠⲆΔ, ᐃᐃⲆ / ⵠᐃⵠΔ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃΔⵠⵠⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, ᐃ * -ΔᐃⲆ / ⲆⲆⲆⵠᐃ, ᐃᐃⲆ / 2, ΔᐃⲆ / ᐃⵠΔⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		if (0 === this.info) ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆᐃᐃⵠⵠΔ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔΔΔⲆΔ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 40, ᐃ * 10);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / ⵠᐃⵠᐃⲆ, -ΔᐃⲆ * ᐃ / ΔⲆΔⲆ, ᐃᐃⲆ / ⵠⲆΔΔ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⵠⲆⲆΔᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / Δⵠⵠⵠ, ᐃ * -ΔᐃⲆ / ⵠᐃᐃⲆ, ᐃᐃⲆ / ΔⲆⲆᐃ, ΔᐃⲆ / ᐃⵠΔⲆ);
			Ⲇ.globalAlpha = ᐃᐃΔᐃ
		}
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ΔΔⵠᐃⲆΔⲆ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⵠⲆΔΔ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⲆΔΔᐃᐃⵠⲆⵠᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
		Ⲇ.globalAlpha = .3;
		var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃⵠⲆ][ⲆΔΔ.time];
		var ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⵠΔⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.globalAlpha = 1;
		Ⲇ.restore()
	}

	function ⵠΔⲆᐃⵠⵠΔⵠⲆ() {
		var ⵠⵠ = ᐃᐃΔⲆⲆ;
		var Δⵠᐃⵠᐃᐃⵠ = ⲆΔⲆᐃⲆ;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		if (this.ⲆⲆⵠΔᐃ >= .1 && 1.1 >= this.ⲆⲆⵠΔᐃ) {
			var ΔᐃΔΔ = Math.max(0, Math.min(1, this.ⲆⲆⵠΔᐃ - .1));
			if (.2 > ΔᐃΔΔ) ΔᐃΔΔ *= ⲆΔΔⵠΔ;
			else if (ΔᐃΔΔ > .8) ΔᐃΔΔ = (1 - ΔᐃΔΔ) * 5;
			else ΔᐃΔΔ = 1;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔΔⵠⲆⵠᐃ][ⲆΔΔ.time];
			ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height;
			Ⲇ.globalAlpha = ΔᐃΔΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			var Δⵠᐃⵠᐃᐃⵠ = Ⲇᐃ[Δ.ᐃⵠΔⲆᐃᐃᐃ]
		}
		if (.9 <= this.ⲆⲆⵠΔᐃ) {
			var ΔᐃΔΔ = Math.max(0, Math.min(ⵠᐃΔᐃ, this.ⲆⲆⵠΔᐃ - .9));
			ΔᐃΔΔ < .2 ? ΔᐃΔΔ *= 5 : ΔᐃΔΔ = 1;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠΔΔⲆΔ][ⲆΔΔ.time];
			ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ;
			Ⲇ.globalAlpha = ΔᐃΔΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⵠᐃᐃ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / ᐃΔⵠᐃ);
			var Δⵠᐃⵠᐃᐃⵠ = Ⲇᐃ[Δ.ᐃⲆⵠⲆⵠⵠⵠ]
		}
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ && undefined !== Δⵠᐃⵠᐃᐃⵠ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ⵠⲆⵠ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = (.6 - this.ⲆⲆᐃ.ⵠⵠΔ) * ΔᐃΔΔ;
			ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -Δⵠᐃⵠᐃᐃⵠ.width;
			ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -Δⵠᐃⵠᐃᐃⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, Δⵠᐃⵠᐃᐃⵠ, -ᐃᐃⲆ / ⵠΔⲆᐃΔ, -ΔᐃⲆ / ᐃⵠᐃᐃ, ᐃᐃⲆ / 2, ΔᐃⲆ / 2)
		}
		Ⲇ.globalAlpha = 1;
		Ⲇ.restore()
	}

	function ᐃΔΔⲆᐃΔᐃᐃᐃ() {
		var ⵠⵠⵠΔᐃ = Math.PI / 2;
		var ΔᐃΔΔΔⵠⵠ = Math.PI / ⲆⵠⲆΔⲆ;
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.ⲆᐃΔΔᐃⵠᐃ.ⵠᐃⵠ();
		this.ⵠᐃΔᐃᐃⲆⲆ.ⵠᐃⵠ();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (0 === this.info) ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⵠᐃΔᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⵠⲆᐃ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == false && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆᐃᐃΔⵠΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			this.ⵠᐃΔΔΔ.ⵠᐃⵠ() && this.ⵠᐃΔΔΔ.ⵠⲆⵠ == ΔⲆⵠᐃⵠ && (this.action -= ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ);
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃΔᐃΔΔⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⵠΔΔ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle + ΔᐃΔΔΔⵠⵠ);
		Ⲇ.translate(55, ΔᐃⲆΔ);
		Ⲇ.rotate(ⵠⵠⵠΔᐃ);
		if (0 === this.info) ⵠⵠ = Ⲇᐃ[Δ.Ⲇⵠᐃᐃᐃⵠⵠ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆᐃΔⵠΔⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ⲆᐃΔΔᐃⵠᐃ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = this.ⲆᐃΔΔᐃⵠᐃ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⲆⲆⵠΔ, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔΔΔⵠⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃᐃΔⵠ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ΔΔⵠΔⵠ
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃⵠᐃⲆⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⲆⲆᐃ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ⲆᐃⲆⲆ
		}
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle + ⵠⵠⵠΔᐃ + ΔᐃΔΔΔⵠⵠ);
		Ⲇ.translate(55, 0);
		Ⲇ.rotate(ⵠⵠⵠΔᐃ);
		if (this.info === 0) ⵠⵠ = Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠᐃ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃᐃᐃᐃᐃΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ⵠᐃΔᐃᐃⲆⲆ.ⵠⵠΔ;
		ΔᐃⲆ = -ⵠⵠ.height * this.ⵠᐃΔᐃᐃⲆⲆ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⲆΔΔ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⲆⵠΔⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⲆⵠΔ, -ΔᐃⲆ / ⵠⵠΔⲆ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⵠⲆΔΔ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore()
	}

	function ᐃⵠⲆᐃΔΔⲆⵠΔ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == ΔᐃΔΔΔ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃᐃΔⲆ * (ⲆᐃⲆⲆ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ΔⵠⲆⲆ;
			var ᐃⲆᐃ = 0
		}
		Ⲇ.save();
		if (this.info & 255 && 65280 != (this.info & 65280)) {
			ᐃᐃΔ += 2 * Math.random() - ⲆΔᐃⲆ;
			ᐃⲆᐃ += ᐃⲆⵠᐃ * Math.random() - ⲆᐃⲆⲆ
		}
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ᐃΔᐃⵠⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		if (this.info & 255 && 65280 != (this.info & 65280)) this.rotate = (this.rotate + ᐃᐃΔⲆ * ⵠⵠⲆⵠΔ) % (ΔᐃⵠⲆ * Math.PI);
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⵠᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⵠⲆΔΔ);
		Ⲇ.restore();
		if (Settings.ExtractorInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ⵠⲆⵠΔᐃⵠΔⲆⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		var ⵠⵠΔᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r);
		ⵠⵠΔᐃ > 350 ? this.scale = Math.min(this.scale + ᐃᐃΔⲆ / ΔᐃⵠⲆ, 1.8) : this.scale = Math.max(this.scale - ᐃᐃΔⲆ, 1);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		if (350 > ⵠⵠΔᐃ) this.ΔᐃΔΔ = Math.max(ⵠⲆⲆᐃ, this.ΔᐃΔΔ - 2.2 * ᐃᐃΔⲆ);
		else this.ΔᐃΔΔ = Math.min(ⵠⲆⲆ, this.ΔᐃΔΔ + ᐃᐃΔⲆ * 2.2);
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠⵠⲆΔⲆᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		Ⲇ.globalAlpha = 1 - this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃΔΔΔ, -ΔᐃⲆ / Δⵠⵠⵠ, ᐃᐃⲆ / ⵠΔⵠᐃ, ΔᐃⲆ / ⵠⲆΔΔ);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⵠⲆΔⲆ, -ΔᐃⲆ / ⲆⲆⲆⵠᐃ, ᐃᐃⲆ / 2, ΔᐃⲆ / ⲆⲆⵠΔ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == ΔᐃΔΔᐃ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = (.6 - this.ⲆⲆᐃ.ⵠⵠΔ) * (1 - this.ΔᐃΔΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⲆᐃΔⲆΔ];
			ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
			ΔᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⲆⵠ];
			ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
			ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height * this.scale;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⵠⲆΔⲆ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = 1
		}
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆΔᐃΔΔᐃ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
		ΔᐃⲆ = this.scale * (-ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -40, ᐃ * 80);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / Δⵠⵠⵠ, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⵠᐃⵠⵠΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / ΔⲆⲆᐃ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⵠⲆΔⵠⲆ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(40 * ᐃ, ᐃ * 80);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / 4, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / ᐃᐃⲆΔ, ΔᐃⲆ / ⵠᐃᐃⵠ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠⲆΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ * ᐃ / 4, -ΔᐃⲆ * ᐃ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.globalAlpha = 1;
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ᐃⵠⲆⲆⲆᐃⵠⲆⲆ(ⵠΔᐃ) {
		if (0 <= ⵠΔᐃ.right) {
			switch (ⵠΔᐃ.right) {
				case Δ.ᐃΔⲆΔⵠ:
					Ⲇ.save();
					var ⵠⵠᐃⵠΔᐃⲆ = -3 * ⵠΔᐃ.attack.ⵠⵠΔ / Math.PI;
					if (ⵠΔᐃ.attack.ⵠⲆⵠ) var ⲆΔⲆᐃᐃΔⵠ = -Math.PI / 3 - (Math.PI / 3 + ⵠΔᐃ.attack.ⵠⵠΔ) / 3;
					else var ⲆΔⲆᐃᐃΔⵠ = ⵠΔᐃ.attack.ⵠⵠΔ;
					Ⲇ.rotate(ⵠΔᐃ.angle - Math.PI / 2 + ⲆΔⲆᐃᐃΔⵠ);
					Ⲇ.globalAlpha = ⵠⵠᐃⵠΔᐃⲆ / 1.2;
					ΔⵠⲆ(Ⲇ, ᐃ * -40, ᐃ * 90, 5 * ᐃ);
					Δⵠ(Ⲇ, ⵠ[224]);
					Ⲇ.globalAlpha = ⵠⵠᐃⵠΔᐃⲆ / 1.2;
					ΔⵠⲆ(Ⲇ, -52 * ᐃ, 100 * ᐃ, 8 * ᐃ);
					Δⵠ(Ⲇ, ⵠ[224]);
					Ⲇ.globalAlpha = ⵠⵠᐃⵠΔᐃⲆ / 1.2;
					ΔⵠⲆ(Ⲇ, ᐃ * -30, ᐃ * 95, ᐃ * ᐃΔᐃⲆⵠ);
					Δⵠ(Ⲇ, ⵠ[224]);
					Ⲇ.globalAlpha = ⵠⵠⲆΔ;
					Ⲇ.restore();
					break;
				case Δ.ⵠⵠⲆᐃᐃ:
				case Δ.ᐃᐃⲆᐃⲆ:
				case Δ.ᐃⵠΔⲆΔ:
				case Δ.ᐃⵠⵠⵠᐃ:
					if (ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ === 1) break;
					if (ⵠΔᐃ.ⲆⲆⵠⵠΔ > ᐃⵠΔ) var ⲆΔ = Δ.ᐃⲆΔⲆᐃΔⵠ[ⲆΔΔ.time];
					else if (0 < ⵠΔᐃ.ⲆⲆΔⲆⵠⲆⵠ || ⵠΔᐃ.ᐃⲆⲆᐃᐃ > ⵠⵠᐃⵠ) var ⲆΔ = Δ.ᐃⲆⵠⵠⵠᐃⲆ[ⲆΔΔ.time];
					else var ⲆΔ = Δ.ᐃⵠΔⲆⲆⵠΔ[ⲆΔΔ.time];
					var ⵠⵠᐃⵠΔᐃⲆ = ⵠΔᐃ.attack.ⵠⵠΔ * -ΔⵠⵠΔ / Math.PI;
					if (ⵠΔᐃ.attack.ⵠⲆⵠ) var ⲆΔⲆᐃᐃΔⵠ = Math.max(.5 - ⵠⵠᐃⵠΔᐃⲆ / ΔⲆⲆᐃ + .5, ΔⵠⲆⲆ);
					else var ⲆΔⲆᐃᐃΔⵠ = Math.max(ⵠⵠᐃⵠΔᐃⲆ / 2, 0);
					0 === ⲆΔⲆᐃᐃΔⵠ && (ⵠΔᐃ.ᐃⵠΔⲆⲆᐃⲆ = ⵠΔᐃ.angle);
					Ⲇ.save();
					Ⲇ.rotate(ⵠΔᐃ.ᐃⵠΔⲆⲆᐃⲆ - Math.PI / 2);
					Ⲇ.globalAlpha = ⵠⵠᐃⵠΔᐃⲆ;
					var ⲆⲆᐃᐃⵠᐃⲆ = ᐃ * 25 + 25 * ⲆΔⲆᐃᐃΔⵠ;
					ΔⵠⲆ(Ⲇ, ⲆⲆᐃᐃⵠᐃⲆ, 80 * ᐃ, ⵠⲆⲆᐃⲆ * ᐃ);
					Δⵠ(Ⲇ, ⲆΔ);
					ΔⵠⲆ(Ⲇ, -ⲆⲆᐃᐃⵠᐃⲆ, ᐃ * 80, ᐃ * 15);
					Δⵠ(Ⲇ, ⲆΔ);
					Ⲇ.globalAlpha = 1;
					Ⲇ.restore();
					break
			}
		}
	}

	function ⲆᐃⵠᐃΔᐃⲆΔⲆ(ⲆΔ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
		Ⲇ.globalAlpha = .3;
		var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃⵠⲆ][ⲆΔΔ.time];
		var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⵠΔⲆ, -ΔᐃⲆ / ⵠΔⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.globalAlpha = 1;
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃ * (600 * ((ᐃⲆⵠΔ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ᐃⵠΔ;
			var ᐃⲆᐃ = ⲆⵠⲆ
		}
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2 + ᐃᐃΔ, -ⵠⵠ.height / ᐃⲆⵠᐃ + ᐃⲆᐃ);
		Ⲇ.restore()
	}

	function ⲆⵠⲆⵠᐃⵠᐃⲆⲆ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = ᐃⵠᐃⵠᐃ;
			var ⵠⵠΔ = 600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)) * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = Δⵠⵠ;
			var ᐃⲆᐃ = ⲆΔᐃ
		}
		Ⲇ.save();
		if (this.info & 255 && 65280 != (this.info & 65280)) {
			ᐃᐃΔ += ⵠᐃᐃⵠ * Math.random() - ᐃⵠ;
			ᐃⲆᐃ += Math.random() * ᐃᐃⲆΔ - ⲆᐃⲆⲆ
		}
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆᐃΔⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⲆⲆⵠ, -ⵠⵠ.height / ᐃᐃⲆΔ);
		if (this.info & 255 && 65280 != (this.info & 65280)) this.rotate = (this.rotate + 3 * ᐃᐃΔⲆ) % (ᐃΔⲆⲆⵠ * Math.PI);
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⲆᐃΔΔᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃⵠΔ, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		if (Settings.ExtractorInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ⲆᐃⲆΔⵠᐃⲆ(ⲆΔ, ᐃⵠΔⵠⲆΔⲆ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⲆᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == ᐃⵠᐃⵠᐃ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[ᐃⵠΔⵠⲆΔⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠᐃᐃⵠ, -ΔᐃⲆ / ⵠⲆⵠᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ⵠⵠⲆ
		}
		Ⲇ.restore()
	}

	function ΔⲆΔΔⲆΔⲆⵠᐃ() {
		if (this.info === ⲆΔⵠᐃⲆ) return;
		var ⲆᐃᐃⲆ = this.info & 15;
		for (var ᐃⲆ = ⵠⲆⲆᐃ; ᐃⲆ < ⲆᐃᐃⲆ; ᐃⲆ++) this.ΔⵠᐃⲆ[ᐃⲆ].ⲆⵠᐃⲆ(Δ.ⲆⵠⵠᐃΔ, this.x, this.y);
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * (600 * (ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ)));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ΔⵠⲆⲆ;
			var ᐃⲆᐃ = 0
		}
		if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔⵠΔΔᐃᐃ][ⲆΔΔ.time];
		else var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃᐃΔ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⵠᐃ + ᐃᐃΔ, -ⵠⵠ.width / 2 + ᐃⲆᐃ);
		Ⲇ.restore()
	}

	function ᐃᐃⲆⲆⲆⵠᐃΔᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && ⲆΔᐃⵠⲆ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = 600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ) * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ΔⲆᐃⲆ;
			var ᐃⲆᐃ = 0
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (this.info === 10 || ⲆᐃᐃⲆ === 0) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⵠΔΔⲆⵠ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆΔΔᐃⵠⵠ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⵠΔⲆ + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⲆⲆⵠᐃᐃ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⵠΔⵠ][ⲆΔΔ.time];
			Ⲇ.translate(0, ⵠⵠ.height / 2);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / 2, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ⲆΔⲆΔⲆΔⲆⵠⵠ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		300 < Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r) ? this.scale = Math.min(this.scale + ᐃᐃΔⲆ / ⵠᐃᐃⵠ, 1.8) : this.scale = Math.max(this.scale - ᐃᐃΔⲆ, ⲆᐃⲆⲆ);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
		ΔᐃⲆ = this.scale * (-ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃᐃΔⵠ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && ⲆⲆⲆᐃⲆ == this.ⲆⲆᐃ.ⵠⲆⵠ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠᐃᐃΔΔΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠᐃᐃⵠ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⲆΔⲆΔⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height * this.scale;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -30, 70 * ᐃ);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⲆᐃᐃᐃⲆ * ᐃ, ᐃ * -40, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃⲆⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -Ⲇⵠᐃⵠᐃ * ᐃ, -40 * ᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃᐃΔΔⲆ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(30 * ᐃ, ᐃ * 70);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, 10 * ᐃ - ᐃᐃⲆ, ᐃ * -40, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠΔΔⵠᐃⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ΔⲆⵠΔᐃ * ᐃ - ᐃᐃⲆ, -40 * ᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ΔⵠΔΔΔⲆΔΔΔ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && Ⲇᐃⵠⵠᐃ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * ((ⵠⲆⲆ - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ⵠⲆⲆᐃ;
			var ᐃⲆᐃ = 0
		}
		var ⲆᐃᐃⲆ = this.info & 15;
		if (this.info === 10 || ⲆᐃᐃⲆ === 0) {
			Ⲇ.rotate(this.angle);
			this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⵠⲆⲆΔⵠ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⵠⵠᐃⲆ][ⲆΔΔ.time];
			var ᐃᐃⲆ = this.ᐃⵠⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
			var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⲆⵠᐃ + ᐃᐃΔ, -ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
		} else {
			if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⵠⲆΔΔⲆ][ⲆΔΔ.time];
			else var ⵠⵠ = Ⲇᐃ[Δ.ᐃΔⲆΔᐃ][ⲆΔΔ.time];
			Ⲇ.translate(0, ⵠⵠ.height / 2);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width / 2, -ⵠⵠ.height + ᐃⲆᐃ)
		}
		Ⲇ.restore()
	}

	function ΔⲆⵠᐃⵠⲆᐃⵠᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == ⲆΔⲆΔⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = ⵠⲆⵠΔⵠ;
			var ⵠⵠΔ = (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = ⵠⵠⲆⲆ;
			var ᐃⲆᐃ = ΔΔⲆᐃ
		}
		if (2 == this.action) ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃᐃⲆⵠᐃⲆ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⲆΔᐃⲆΔΔⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ΔᐃⵠⲆ + ᐃᐃΔ, -ⵠⵠ.height / ᐃⲆⲆΔ + ᐃⲆᐃ);
		Ⲇ.restore()
	}

	function ⲆⵠΔᐃΔᐃⲆᐃⵠ(ⵠⵠᐃΔ, ᐃᐃΔ, ᐃⲆᐃ) {
		if (ⵠⵠᐃΔ >= 0) {
			ⵠⵠ = Ⲇᐃ[ⵠⵠᐃΔ][ⲆΔΔ.time];
			switch (ⵠⵠᐃΔ) {
				case Δ.ⲆⵠᐃⲆᐃ:
				case Δ.ⵠⵠΔⲆΔ:
				case Δ.ⵠΔⲆΔΔ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (ᐃⵠΔ + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ⵠᐃᐃⲆ + (ᐃⲆᐃ + 35) * ᐃ);
					break;
				case Δ.ⵠΔΔⲆΔ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (ⵠᐃΔᐃ + ᐃᐃΔ), -ⵠⵠ.height / 4 + (ᐃⲆᐃ + 45) * ᐃ);
					break;
				case Δ.ⲆⲆΔΔΔ:
				case Δ.ᐃⵠⵠⲆⵠ:
					ᐃᐃⵠᐃⲆ(ⵠⵠᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⵠΔΔⲆ - (ΔΔᐃⵠ + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + ᐃ * (ᐃⲆᐃ + 40));
					break
			}
		}
	}

	function ⵠⲆⵠΔⵠΔⵠΔᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ⵠΔᐃⲆⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ⵠΔᐃⲆⵠ.ⵠⵠΔ;
		ΔᐃⲆ = this.ⵠΔᐃⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⵠΔⲆ, -ΔᐃⲆ / ⵠΔⵠᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⲆᐃⲆⲆⵠⲆΔᐃᐃ() {
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ == false) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * (600 * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ));
			var ᐃᐃΔ = Math.sin(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ;
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ᐃⵠΔ;
			var ᐃⲆᐃ = ΔΔⲆᐃ
		}
		Ⲇ.save();
		if (this.info & 255 && 65280 != (this.info & 65280)) {
			ᐃᐃΔ += Math.random() * ᐃᐃⲆΔ - 1;
			ᐃⲆᐃ += Math.random() * ᐃΔⵠᐃ - 1
		}
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + this.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[Δ.ΔⲆᐃΔⲆ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ᐃΔⵠᐃ);
		if (this.info & 255 && (this.info & 65280) != 65280) this.rotate = (this.rotate + ᐃᐃΔⲆ * 3) % (Math.PI * 2);
		Ⲇ.rotate(this.rotate);
		ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⲆⵠⵠΔⵠ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
		Ⲇ.restore();
		if (Settings.ExtractorInfo.enabled) {
			Ⲇ.save();
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.lineWidth = 7;
			Ⲇ.font = "20px Baloo Paaji";
			Ⲇ.strokeText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.fillText(((this.info & 65280) >> 8) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y + 15);
			Ⲇ.strokeText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.fillText((this.info & 255) + "x", ⲆΔⲆ.ⵠΔΔ.x + this.x - 20, ⲆΔⲆ.ⵠΔΔ.y + this.y - 5);
			Ⲇ.restore()
		}
	}

	function ΔⵠⵠΔᐃⵠⵠᐃⵠ() {
		if ((this.info & ᐃⵠⵠ) === 1) this.ⲆⲆⵠΔᐃ = Math.min(this.ⲆⲆⵠΔᐃ + ᐃᐃΔⲆ, 2.2);
		else {
			this.ⲆⲆⵠΔᐃ = Math.max(this.ⲆⲆⵠΔᐃ - ᐃᐃΔⲆ, ⵠⲆⲆᐃ);
			this.ⵠΔΔᐃⲆⵠⲆ += ᐃᐃΔⲆ;
			if (this.ⵠΔΔᐃⲆⵠⲆ > .1) {
				this.ⵠΔΔᐃⲆⵠⲆ = 0;
				var ᐃⵠⲆⵠ = {
					x: this.x + Math.random() * 60 - 30,
					y: this.y + Math.random() * 60 - 30,
					a: Δⵠⵠ,
					r: 30 * Math.random() + 30
				};
				this.ᐃⵠⲆⵠ.push(ᐃⵠⲆⵠ)
			}
		}
		for (var ᐃⲆ = ⵠⲆⲆᐃ; ᐃⲆ < this.ᐃⵠⲆⵠ.length; ᐃⲆ++) {
			var ᐃⵠⲆⵠ = this.ᐃⵠⲆⵠ[ᐃⲆ];
			Ⲇ.save();
			Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ᐃⵠⲆⵠ.x, ⲆΔⲆ.ⵠΔΔ.y + ᐃⵠⲆⵠ.y);
			ᐃⵠⲆⵠ.a = Math.min(ⲆᐃⲆⲆ, ᐃⵠⲆⵠ.a + ᐃᐃΔⲆ / ⵠⲆⵠᐃ);
			var ΔᐃΔΔ = ᐃⵠⲆⵠ.a;
			if (.2 > ΔᐃΔΔ) ΔᐃΔΔ *= 5;
			else .8 < ΔᐃΔΔ ? ΔᐃΔΔ = (ⲆⲆΔᐃ - ΔᐃΔΔ) * 5 : ΔᐃΔΔ = ΔⲆᐃ;
			Ⲇ.globalAlpha = ΔᐃΔΔ * .8;
			ΔⵠⲆ(Ⲇ, 0, 0, ᐃⵠⲆⵠ.r);
			Δⵠ(Ⲇ, Δ.ΔᐃᐃᐃΔΔΔ[ⲆΔΔ.time]);
			Ⲇ.restore();
			ⵠⲆⲆ === ᐃⵠⲆⵠ.a && (this.ᐃⵠⲆⵠ.splice(ᐃⲆ, 1), ᐃⲆ--)
		}
	}

	function ΔⲆΔᐃΔⵠⲆᐃΔ() {
		var ⵠⵠⵠΔᐃ = Math.PI / 2;
		var ΔᐃΔΔΔⵠⵠ = Math.PI / ⲆⵠⵠⲆΔ;
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.ⲆᐃΔΔᐃⵠᐃ.ⵠᐃⵠ();
		this.ⵠᐃΔᐃᐃⲆⲆ.ⵠᐃⵠ();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.info === ΔⵠⲆⲆ) ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⵠΔΔ][ⲆΔΔ.time];
		else ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⲆΔⲆΔΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠᐃⵠΔ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && ΔᐃΔᐃᐃ == this.ⲆⲆᐃ.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆⲆⵠⵠᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔᐃⵠⲆ, -ΔᐃⲆ / ᐃⲆⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			this.ⵠᐃΔΔΔ.ⵠᐃⵠ() && this.ⵠᐃΔΔΔ.ⵠⲆⵠ == false && (this.action -= ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ);
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ΔΔᐃⵠ
		}
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle + ΔᐃΔΔΔⵠⵠ);
		Ⲇ.translate(ᐃⵠᐃⲆⲆⲆᐃ, ⵠⲆⲆᐃ);
		Ⲇ.rotate(ⵠⵠⵠΔᐃ);
		this.info === ΔΔⵠᐃ ? ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃΔΔ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⵠΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ⲆᐃΔΔᐃⵠᐃ.ⵠⵠΔ;
		ΔᐃⲆ = this.ⲆᐃΔΔᐃⵠᐃ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠΔⵠᐃ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃΔ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ΔⲆⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⵠᐃⲆᐃⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ᐃⲆⲆΔ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ΔΔⵠΔⵠ
		}
		Ⲇ.restore();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle + ⵠⵠⵠΔᐃ + ΔᐃΔΔΔⵠⵠ);
		Ⲇ.translate(ΔᐃⵠᐃⵠᐃΔ, 0);
		Ⲇ.rotate(ⵠⵠⵠΔᐃ);
		this.info === ⵠⵠⲆⲆ ? ⵠⵠ = Ⲇᐃ[Δ.ⲆΔΔⲆⵠⵠⲆ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠⵠⲆⲆⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ⵠᐃΔᐃᐃⲆⲆ.ⵠⵠΔ;
		ΔᐃⲆ = this.ⵠᐃΔᐃᐃⲆⲆ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠᐃⵠᐃΔᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃΔⲆᐃΔΔⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore()
	}

	function ᐃⲆⵠⵠⵠⵠΔᐃᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ⵠΔᐃⲆⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃΔΔᐃⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ⵠΔᐃⲆⵠ.ⵠⵠΔ;
		ΔᐃⲆ = -ⵠⵠ.height * this.ⵠΔᐃⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⲆⲆⵠΔ, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ᐃⲆⲆᐃⵠΔᐃᐃΔ(ⲆΔ, ᐃⵠΔⵠⲆΔⲆ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃΔⲆⲆⵠ, -ΔᐃⲆ / ⵠᐃᐃⵠ, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[ᐃⵠΔⵠⲆΔⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃΔⲆⲆⵠ, -ΔᐃⲆ / ΔⵠΔΔ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore()
	}

	function Ⲇⵠⵠᐃᐃᐃⵠᐃᐃ() {
		if (ᐃΔᐃᐃⵠ > this.info) return;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			if (this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ) this.ⲆⲆᐃ.ⵠᐃⵠ = false;
			var ⵠⵠΔ = ᐃ * ((1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * ᐃᐃΔⲆ * 600);
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = Math.cos(this.ⲆⲆᐃ.angle - this.angle) * ⵠⵠΔ
		} else {
			var ᐃᐃΔ = 0;
			var ᐃⲆᐃ = Δⵠⵠ
		}
		this.ᐃⵠⲆⵠ.ⵠᐃⵠ();
		var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠΔⲆᐃΔᐃ][ⲆΔΔ.time];
		var ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		var ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠⲆⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2 + ᐃᐃΔ, -ΔᐃⲆ / ᐃΔⵠᐃ + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⵠᐃⵠΔᐃᐃᐃᐃΔ(ⲆΔ, ⵠⲆⲆᐃⵠᐃⵠⵠⵠ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		ⲆΔ === Δ.ⲆⲆΔⵠᐃ && (ⲆΔ = Δ.ΔΔⲆⵠᐃ, this.info = 36);
		ⵠⵠ = Ⲇᐃ[ⲆΔ][this.info][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width / ᐃΔⲆⲆⵠ;
		ΔᐃⲆ = -ⵠⵠ.height / 2;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠⲆⵠᐃ, -ΔᐃⲆ / ᐃᐃΔⵠ, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == ᐃⲆⲆΔΔ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ᐃⵠΔⵠⲆΔⲆ = ⲆⲆΔΔᐃⵠⲆ(this.info, ⵠⵠ, ⵠᐃⲆΔᐃⵠΔⲆΔ);
			ⵠⲆΔⲆ(Ⲇ, ᐃⵠΔⵠⲆΔⲆ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⲆⲆⵠΔ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		if (Settings.BoxInfo.enabled) {
			Ⲇ.save();
			Ⲇ.lineWidth = 8;
			Ⲇ.strokeStyle = "#000";
			Ⲇ.fillStyle = "#fff";
			Ⲇ.font = "18px Baloo Paaji";
			if (this.boxType) {
				Ⲇ.strokeText(this.boxType, this.x + ⲆΔⲆ.ⵠΔΔ.x - 20, this.y + ⲆΔⲆ.ⵠΔΔ.y);
				Ⲇ.fillText(this.boxType, this.x + ⲆΔⲆ.ⵠΔΔ.x - 20, this.y + ⲆΔⲆ.ⵠΔΔ.y)
			}
			if (this.disappearTime) {
				var n = Math.floor((this.disappearTime - +new Date) / 1e3),
					a = 0;
				a = n < 10 ? 9 : n < 99 ? 12 : 18
			}
			Ⲇ.strokeText(n + "s", this.x + ⲆΔⲆ.ⵠΔΔ.x - 20, this.y + ⲆΔⲆ.ⵠΔΔ.y + 20);
			Ⲇ.fillText(n + "s", this.x + ⲆΔⲆ.ⵠΔΔ.x - 20, this.y + ⲆΔⲆ.ⵠΔΔ.y + 20);
			Ⲇ.restore()
		}
	}

	function ᐃΔⲆⵠᐃᐃⵠⵠⵠ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		var ⵠⵠΔᐃ = Ⲇᐃⵠ.ⵠⵠΔᐃ(this, this.r);
		if (ⵠⵠΔᐃ > 350) this.scale = Math.min(this.scale + ᐃᐃΔⲆ / 2, 1.8);
		else this.scale = Math.max(this.scale - ᐃᐃΔⲆ, 1);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		this.rotate.ⵠᐃⵠ();
		if (350 > ⵠⵠΔᐃ) this.ΔᐃΔΔ = Math.max(0, this.ΔᐃΔΔ - 2.2 * ᐃᐃΔⲆ);
		else this.ΔᐃΔΔ = Math.min(1, this.ΔᐃΔΔ + 2.2 * ᐃᐃΔⲆ);
		(this.info & ΔΔᐃⵠ) === 0 ? ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃᐃⲆΔⵠ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠᐃⲆᐃⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		ΔᐃⲆ = this.scale * (-ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ);
		Ⲇ.globalAlpha = ΔᐃⵠΔ - this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⲆΔⲆ, -ΔᐃⲆ / ⵠΔⲆᐃΔ, ᐃᐃⲆ / ᐃᐃⲆΔ, ΔᐃⲆ / ᐃΔⲆⲆⵠ);
		ⵠⵠⲆⲆ === (this.info & ⲆΔᐃⲆ) ? ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⲆⵠᐃ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⵠΔΔᐃⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
		ΔᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height * this.scale;
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / 4, ᐃᐃⲆ / ΔⵠΔΔ, ΔᐃⲆ / ᐃⲆⵠᐃ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			if (this.ⲆⲆᐃ.ⵠᐃⵠ() && false == this.ⲆⲆᐃ.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ;
			Ⲇ.globalAlpha = (ⲆΔᐃⲆ - this.ΔᐃΔΔ) * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃᐃΔΔΔⲆ];
			ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width * this.scale;
			ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / 4, ᐃᐃⲆ / ᐃⲆⵠᐃ, ΔᐃⲆ / ᐃΔⵠᐃ);
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆᐃΔᐃΔΔ];
			ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
			ΔᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.height);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ⵠⲆᐃᐃ, ᐃᐃⲆ / ⲆᐃⲆᐃ, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = ΔⲆᐃ
		}(this.info & 1) === 0 ? ⵠⵠ = Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⵠ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⵠΔⵠⲆⵠ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.scale * (this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width);
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ * this.scale;
		Ⲇ.save();
		Ⲇ.translate(ᐃ * -20, ᐃ * ΔⵠⲆⲆ);
		Ⲇ.rotate(this.rotate.ⵠⵠΔ);
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, -ΔᐃⲆ * ᐃ / 4, ᐃᐃⲆ / ᐃⲆⵠᐃ, ΔᐃⲆ / 2);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆΔᐃᐃⲆⵠⲆ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, -ΔᐃⲆ * ᐃ / 4, ᐃᐃⲆ / ᐃⲆⲆΔ, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.restore();
		(this.info & ⲆΔᐃⲆ) === 0 ? ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃᐃⵠΔⲆ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃⲆΔ][ⲆΔΔ.time];
		Ⲇ.save();
		Ⲇ.translate(ᐃ * 20, ᐃ * 0);
		Ⲇ.rotate(-this.rotate.ⵠⵠΔ);
		Ⲇ.globalAlpha = this.ΔᐃΔΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / 4, ᐃ * -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / ΔᐃⵠⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			Ⲇ.globalAlpha = this.ΔᐃΔΔ * (.6 - this.ⲆⲆᐃ.ⵠⵠΔ);
			var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⲆⵠⲆⵠᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃ * -ᐃᐃⲆ / ⵠⲆᐃᐃ, -ΔᐃⲆ * ᐃ / ⲆⵠΔΔⲆ, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.globalAlpha = 1
		}
		Ⲇ.globalAlpha = ⵠⲆⲆ;
		Ⲇ.restore();
		Ⲇ.restore()
	}

	function ᐃΔᐃΔᐃⵠᐃⲆⵠ(ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + ᐃⲆᐃ);
		Ⲇ.rotate(this.angle);
		Ⲇ.translate(this.x - ᐃᐃΔ, this.y - ᐃⲆᐃ);
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}

	function ⲆΔᐃΔΔⵠΔⲆΔ() {
		this.ᐃⵠΔⵠ.ⵠᐃⵠ();
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		0 === this.info ? ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃ][ⲆΔΔ.time] : ⵠⵠ = Ⲇᐃ[Δ.ⲆΔᐃᐃⵠⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ᐃⵠΔⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = -ⵠⵠ.height * this.ᐃⵠΔⵠ.ⵠⵠΔ;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == ΔΔᐃⵠⵠ && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠⲆⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ᐃⲆⵠᐃ, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.globalAlpha = ⲆᐃⲆⲆ
		}
		Ⲇ.restore()
	}

	function ⲆᐃᐃⵠⲆⲆⲆⲆᐃ() {
		if (10 === this.info) return;
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		if (this.ⲆⲆᐃ.ⵠᐃⵠ) {
			this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠᐃⵠ() && Ⲇᐃⵠⵠᐃ == this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⲆⵠ && (this.ⲆⲆᐃ.ⵠᐃⵠ = false);
			var ⵠⵠΔ = ᐃᐃΔⲆ * (1 - this.ⲆⲆᐃ.ᐃⲆⲆⲆ.ⵠⵠΔ) * 600 * ᐃ;
			var ᐃᐃΔ = ⵠⵠΔ * Math.sin(this.ⲆⲆᐃ.angle - this.angle);
			var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(this.ⲆⲆᐃ.angle - this.angle)
		} else {
			var ᐃᐃΔ = ᐃⵠΔ;
			var ᐃⲆᐃ = ΔⵠⲆⲆ
		}
		if (this.info & 16) var ⵠⵠ = Ⲇᐃ[Δ.ᐃⵠᐃᐃΔᐃᐃ][ⲆΔΔ.time];
		else var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃⵠΔᐃⲆᐃ][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2 + ᐃᐃΔ, -ⵠⵠ.width / 2 + ᐃⲆᐃ);
		Ⲇ.restore();
		var ⲆᐃᐃⲆ = this.info & 15;
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃᐃⲆ; ᐃⲆ++) this.ΔⵠᐃⲆ[ᐃⲆ].ⲆⵠᐃⲆ(Δ.ᐃΔᐃⲆⲆ)
	}

	function ⵠᐃᐃⲆΔᐃⲆᐃⲆ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.angle);
		this.ᐃᐃⵠⲆΔ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠΔⲆΔ][ⲆΔΔ.time];
		ᐃᐃⲆ = -ⵠⵠ.width * this.ᐃᐃⵠⲆΔ.ⵠⵠΔ;
		ΔᐃⲆ = this.ᐃᐃⵠⲆΔ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⵠⲆⵠᐃ, ᐃᐃⲆ, ΔᐃⲆ);
		this.ⵠΔᐃⲆⵠ.ⵠᐃⵠ();
		ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠⲆ][ⲆΔΔ.time];
		ᐃᐃⲆ = this.ⵠΔᐃⲆⵠ.ⵠⵠΔ * -ⵠⵠ.width;
		ΔᐃⲆ = this.ⵠΔᐃⲆⵠ.ⵠⵠΔ * -ⵠⵠ.height;
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
		Ⲇ.restore()
	}
	var ⲆᐃΔΔΔΔᐃⵠᐃ = function(ᐃⲆΔⲆΔ) {
		if (ᐃⲆΔⲆΔ > ΔⵠⲆⲆ) {
			var ⵠⵠ = Ⲇᐃ[ᐃⲆΔⲆΔ][ⲆΔΔ.time];
			switch (ᐃⲆΔⲆΔ) {
				case Δ.Δᐃⵠᐃⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⲆΔ + ᐃ * ⵠⲆΔΔ, -ⵠⵠ.height / ΔⵠΔΔ - 5 * ᐃ);
					break;
				case Δ.ⲆⲆⵠᐃᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ᐃⵠΔⲆ, -ⵠⵠ.height / ᐃᐃΔⵠ - 18 * ᐃ);
					break;
				case Δ.ΔⲆⲆΔᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ᐃⲆⲆΔ - ᐃ * ΔᐃΔᐃⵠ);
					break;
				case Δ.ⵠⵠᐃⵠᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⵠⲆΔΔ, -ⵠⵠ.height / 2 - ᐃ * 19);
					break;
				case Δ.ⵠⲆΔΔⵠ:
					ᐃᐃⵠᐃⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⲆΔΔ, -ⵠⵠ.height / ⲆⲆⲆⵠᐃ - ⵠⲆΔⵠ * ᐃ);
					break;
				case Δ.ⵠΔⵠⵠⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ΔⲆⲆᐃ - ᐃ * ⵠᐃΔᐃ, -ⵠⵠ.height / ⵠΔⲆΔ - ᐃ * 23);
					break;
				case Δ.ⵠⲆⵠᐃᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2 - ᐃ * 5);
					break;
				case Δ.ᐃΔⵠⲆⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⵠⲆΔΔ, -ⵠⵠ.height / 2 - ΔⲆⲆᐃ * ᐃ);
					break;
				case Δ.ⲆᐃⲆΔⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2 + 1.5 * ᐃ, -ⵠⵠ.height / 2 - ᐃ * 1);
					break;
				case Δ.ⲆⲆⲆΔⲆ:
				case Δ.ΔⲆΔᐃⵠ:
				case Δ.ΔΔΔᐃᐃ:
				case Δ.Δⵠᐃᐃⵠ:
				case Δ.ᐃⲆⵠⵠΔ:
				case Δ.ⲆᐃᐃⵠΔ:
				case Δ.ⵠⵠΔᐃᐃ:
				case Δ.ᐃᐃⵠⲆᐃ:
				case Δ.ΔΔⵠⵠᐃ:
				case Δ.ΔⲆⵠⵠᐃ:
				case Δ.ⵠᐃᐃⵠΔ:
					ᐃᐃⵠᐃⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / ⵠΔΔᐃ + 2 * ᐃ);
					break;
				case Δ.ᐃⵠᐃⲆⵠ:
				case Δ.ⵠⵠⲆΔⲆ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⵠᐃ - ᐃ * 5, -ⵠⵠ.height / ΔᐃⵠⲆ - ⵠⵠΔⲆ * ᐃ);
					break;
				case Δ.ΔⲆᐃⲆⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⲆΔ, -ⵠⵠ.height / 2 - 2 * ᐃ);
					break;
				case Δ.ᐃᐃΔΔⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⵠⵠΔⲆ - ᐃ * ᐃⲆⲆΔ);
					break;
				case Δ.ⲆⲆΔⲆᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⵠΔⵠᐃ - ᐃ * ⲆᐃⲆᐃ);
					break;
				case Δ.ⵠΔᐃΔΔ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2 + ⲆⲆⵠΔ * ᐃ, -ⵠⵠ.height / ⵠᐃᐃⵠ);
					break;
				case Δ.ⵠᐃⲆΔᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ΔᐃⵠⲆ, -ⵠⵠ.height / ⵠΔⵠᐃ - ᐃ * 5);
					break;
				case Δ.ᐃᐃⵠᐃⵠ:
				case Δ.ᐃⵠΔⵠⲆ:
				case Δ.ⵠᐃⵠᐃᐃ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / 2 - 1 * ᐃ, -ⵠⵠ.height / ΔⵠΔΔ);
					break;
				case Δ.ᐃⲆΔᐃⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ᐃᐃⲆΔ, -ⵠⵠ.height / 2 + ᐃ * ᐃΔⲆⲆⵠ);
					break;
				case Δ.ΔΔᐃᐃΔ:
				case Δ.ⲆΔⵠⲆⲆ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ⵠⲆΔΔ, -ⵠⵠ.height / ᐃᐃΔⵠ + ΔᐃᐃⵠΔ * ᐃ);
					break;
				case Δ.ᐃᐃⲆΔⵠ:
					ⵠⵠⲆⲆⲆ(ᐃⲆΔⲆΔ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⵠᐃ, -ⵠⵠ.height / ᐃᐃΔⵠ - ᐃ * ⵠᐃᐃⲆ);
					break
			}
		}
	};

	function ⲆⲆⵠΔⲆΔⲆ() {
		if (this.ΔΔᐃⲆΔ || this.ΔⵠⵠⲆⵠ === ΔⲆⵠ) return;
		if (this.x != this.r.x || this.r.y != this.y) {
			var ΔᐃΔ = (Ⲇᐃⵠ.Ⲇᐃⵠⵠᐃⵠᐃ(this.x, this.y, this.r.x, this.r.y) + Math.PI / ⵠⲆⵠᐃ) % (Math.PI * 2);
			this.ᐃⵠᐃΔⵠ = Ⲇᐃⵠ.ⲆⲆᐃⲆᐃΔΔ(ΔᐃΔ, this.ᐃⵠᐃΔⵠ);
			this.ᐃⵠᐃΔⵠ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⵠᐃΔⵠ, ΔᐃΔ, .018)
		}
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		Ⲇ.rotate(this.ᐃⵠᐃΔⵠ);
		if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ΔΔⲆᐃΔ) {
			if (50 < this.ΔΔᐃᐃⲆ || ΔⲆⵠ < this.ⵠΔⲆⲆⵠ) {
				50 < this.ΔΔᐃᐃⲆ ? this.ⵠΔⲆⲆⵠ = Math.min(ΔᐃᐃⲆ, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ) : this.ⵠΔⲆⲆⵠ = Math.max(0, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
				Ⲇ.globalAlpha = this.ⵠΔⲆⲆⵠ;
				var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔᐃⲆⲆΔᐃ][ⲆΔΔ.time];
				ᐃᐃⵠᐃⲆ(Δ.ⵠΔᐃⲆⲆΔᐃ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / 4);
				Ⲇ.globalAlpha = 1
			}
			var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆᐃΔ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ΔΔⲆᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / 4)
		} else if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ΔᐃⲆⵠᐃ) {
			this.ᐃⲆⵠΔⲆ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⲆⵠΔⲆ, this.ΔΔᐃᐃⲆ, .018);
			this.ⵠⲆⵠⵠⲆᐃΔ.ⵠᐃⵠ();
			if (this.ΔΔᐃᐃⲆ > 85) this.ⵠΔⲆⲆⵠ = Math.min(1, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / 4);
			else this.ⵠΔⲆⲆⵠ = Math.max(.1, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠΔᐃⲆᐃᐃ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ΔⵠΔᐃⲆᐃᐃ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / 4);
			ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⲆⵠᐃΔΔ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			Ⲇ.save();
			Ⲇ.translate(ᐃ * -20, -20 * ᐃ);
			Ⲇ.rotate(this.ⵠΔⲆⲆⵠ * this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ᐃⵠⲆⲆⲆ, -ΔᐃⲆ / 4, ᐃᐃⲆ / ΔⵠΔΔ, ΔᐃⲆ / 2);
			Ⲇ.restore();
			ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃᐃᐃᐃΔᐃ][ⲆΔΔ.time];
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 20, -ΔⲆΔᐃ * ᐃ);
			Ⲇ.rotate(-this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ * this.ⵠΔⲆⲆⵠ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔⲆΔⲆ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.restore()
		} else if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ᐃⲆⲆᐃⲆ) {
			this.ᐃⲆⵠΔⲆ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⲆⵠΔⲆ, this.ΔΔᐃᐃⲆ, .018);
			this.ⵠⲆⵠⵠⲆᐃΔ.ⵠᐃⵠ();
			85 < this.ΔΔᐃᐃⲆ ? this.ⵠΔⲆⲆⵠ = Math.min(ⲆᐃⲆⲆ, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / Δⵠⵠⵠ) : this.ⵠΔⲆⲆⵠ = Math.max(.1, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃⵠΔ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ⵠⲆⵠⵠᐃⵠΔ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / 4);
			ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⲆΔⵠΔⵠ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			Ⲇ.save();
			Ⲇ.translate(-40 * ᐃ, ᐃ * -45);
			Ⲇ.rotate(this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ * this.ⵠΔⲆⲆⵠ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ΔⲆΔⲆ, ᐃᐃⲆ / ⵠⵠΔⲆ, ΔᐃⲆ / ⵠᐃⵠΔ);
			Ⲇ.restore();
			ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⵠⲆΔᐃ][ⲆΔΔ.time];
			Ⲇ.save();
			Ⲇ.translate(40 * ᐃ, -45 * ᐃ);
			Ⲇ.rotate(-this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ * this.ⵠΔⲆⲆⵠ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ⲆⲆⲆⵠᐃ, ᐃᐃⲆ / 2, ΔᐃⲆ / 2);
			Ⲇ.restore()
		} else if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ᐃⲆⲆⲆⲆ) {
			this.ᐃⲆⵠΔⲆ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⲆⵠΔⲆ, this.ΔΔᐃᐃⲆ, .018);
			this.ⵠⲆⵠⵠⲆᐃΔ.ⵠᐃⵠ();
			85 < this.ΔΔᐃᐃⲆ ? this.ⵠΔⲆⲆⵠ = Math.min(1, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / 4) : this.ⵠΔⲆⲆⵠ = Math.max(.1, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⵠⲆ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ᐃⲆᐃⲆⵠⵠⲆ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / ⲆⲆⲆⵠᐃ);
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆΔ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			Ⲇ.save();
			Ⲇ.translate(-40 * ᐃ, -45 * ᐃ);
			Ⲇ.rotate(this.ⵠΔⲆⲆⵠ * this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ⵠΔΔᐃ, -ΔᐃⲆ / 4, ᐃᐃⲆ / 2, ΔᐃⲆ / ⲆⲆⵠΔ);
			Ⲇ.restore();
			ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃΔⲆ][ⲆΔΔ.time];
			Ⲇ.save();
			Ⲇ.translate(ᐃ * 40, ᐃ * -45);
			Ⲇ.rotate(this.ⵠΔⲆⲆⵠ * -this.ⵠⲆⵠⵠⲆᐃΔ.ⵠⵠΔ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 4, -ΔᐃⲆ / ⲆⵠⲆⲆ, ᐃᐃⲆ / ᐃⵠΔⲆ, ΔᐃⲆ / ΔᐃⵠⲆ);
			Ⲇ.restore()
		} else if (ⵠⲆ.ΔᐃΔⵠⵠ === this.ΔⵠⵠⲆⵠ) {
			this.ᐃⲆⵠΔⲆ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⲆⵠΔⲆ, this.ΔΔᐃᐃⲆ, .018);
			var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃΔⵠⵠ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ΔᐃΔⵠⵠ, ⵠⵠ, -ⵠⵠ.width / Δⵠⵠⵠ, -ⵠⵠ.height / ⵠΔΔᐃ)
		} else if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ⲆᐃΔⲆⲆ) {
			this.ᐃⲆⵠΔⲆ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(this.ᐃⲆⵠΔⲆ, this.ΔΔᐃᐃⲆ, .018);
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆᐃΔⲆⲆ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ⲆᐃΔⲆⲆ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / Ⲇⵠⵠᐃᐃ)
		} else if (ⵠⲆ.ⵠᐃⲆⵠΔ === this.ΔⵠⵠⲆⵠ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃⲆⵠΔ][ⲆΔΔ.time];
			ᐃᐃⵠᐃⲆ(Δ.ⵠᐃⲆⵠΔ, ⵠⵠ, -ⵠⵠ.width / Ⲇⵠⵠᐃᐃ, -ⵠⵠ.height / ⵠⲆᐃᐃ)
		} else if (this.ΔⵠⵠⲆⵠ === ⵠⲆ.ⵠⵠᐃᐃᐃ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆΔⵠⵠᐃⲆ][ⲆΔΔ.time];
			85 < this.ΔΔᐃᐃⲆ ? this.ⵠΔⲆⲆⵠ = Math.min(ᐃⵠ, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / 4) : this.ⵠΔⲆⲆⵠ = Math.max(ⵠⵠᐃᐃΔ, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			this.ᐃΔⲆⵠⲆ += ᐃᐃΔⲆ * 60;
			60 < this.ᐃΔⲆⵠⲆ && (this.ᐃΔⲆⵠⲆ -= 60);
			var ᐃᐃⵠⲆⵠ = (-ⲆᐃΔᐃᐃ + 12 * (30 > this.ᐃΔⲆⵠⲆ ? this.ᐃΔⲆⵠⲆ / 30 : ΔΔⲆΔ - (this.ᐃΔⲆⵠⲆ - 30) / 30)) * this.ⵠΔⲆⲆⵠ;
			ᐃᐃⵠᐃⲆ(Δ.ⵠⲆΔⵠⵠᐃⲆ, ⵠⵠ, -ⵠⵠ.width / ⲆⵠⵠⲆΔ, -ⵠⵠ.height / Δⵠⵠⵠ + ᐃᐃⵠⲆⵠ)
		} else if (ⵠⲆ.ᐃΔⵠⵠΔ === this.ΔⵠⵠⲆⵠ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆᐃᐃ][ⲆΔΔ.time];
			this.ΔΔᐃᐃⲆ > 85 ? this.ⵠΔⲆⲆⵠ = Math.min(ΔΔᐃᐃ, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / 4) : this.ⵠΔⲆⲆⵠ = Math.max(0, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			this.ᐃΔⲆⵠⲆ += 60 * ᐃᐃΔⲆ;
			if (60 < this.ᐃΔⲆⵠⲆ) this.ᐃΔⲆⵠⲆ -= 60;
			var ᐃᐃⵠⲆⵠ = this.ⵠΔⲆⲆⵠ * (-ᐃⲆᐃⵠᐃ + ΔΔᐃⲆᐃ * (this.ᐃΔⲆⵠⲆ < 30 ? this.ᐃΔⲆⵠⲆ / 30 : 1 - (this.ᐃΔⲆⵠⲆ - 30) / 30));
			ᐃᐃⵠᐃⲆ(Δ.ⵠⵠⲆᐃⲆᐃᐃ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / ⵠΔⲆᐃΔ + ᐃᐃⵠⲆⵠ)
		} else if (ⵠⲆ.ᐃᐃⵠΔΔ === this.ΔⵠⵠⲆⵠ) {
			var ⵠⵠⵠΔᐃ = Math.PI / 2;
			var ΔᐃΔΔΔⵠⵠ = Math.PI / ᐃⵠᐃᐃ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⲆⲆᐃⲆᐃ][ⲆΔΔ.time];
			if (85 < this.ΔΔᐃᐃⲆ) this.ⵠΔⲆⲆⵠ = Math.min(1, this.ⵠΔⲆⲆⵠ + ᐃᐃΔⲆ / ⲆⵠⲆⲆ);
			else this.ⵠΔⲆⲆⵠ = Math.max(0, this.ⵠΔⲆⲆⵠ - ᐃᐃΔⲆ);
			this.ᐃΔⲆⵠⲆ += ᐃᐃΔⲆ * 60;
			if (this.ᐃΔⲆⵠⲆ > 60) this.ᐃΔⲆⵠⲆ -= 60;
			var ᐃᐃⵠⲆⵠ = this.ⵠΔⲆⲆⵠ * (-6 + ⵠⵠᐃᐃⵠ * (30 > this.ᐃΔⲆⵠⲆ ? this.ᐃΔⲆⵠⲆ / 30 : ᐃⵠ - (this.ᐃΔⲆⵠⲆ - 30) / 30));
			ᐃᐃⵠᐃⲆ(Δ.ⲆⵠⲆⲆᐃⲆᐃ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⲆΔ + ᐃᐃⵠⲆⵠ, -ⵠⵠ.height / ⵠᐃᐃⲆ);
			Ⲇ.restore();
			Ⲇ.save();
			Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
			Ⲇ.rotate(Math.PI + this.ᐃⵠᐃΔⵠ + ΔᐃΔΔΔⵠⵠ);
			Ⲇ.translate(120, ᐃᐃⵠⲆⵠ);
			Ⲇ.rotate(ⵠⵠⵠΔᐃ);
			ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃΔΔ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
			Ⲇ.restore();
			Ⲇ.save();
			Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
			Ⲇ.rotate(Math.PI + this.ᐃⵠᐃΔⵠ + ⵠⵠⵠΔᐃ + ΔᐃΔΔΔⵠⵠ);
			Ⲇ.translate(120, ᐃᐃⵠⲆⵠ);
			Ⲇ.rotate(ⵠⵠⵠΔᐃ);
			ⵠⵠ = Ⲇᐃ[Δ.ⲆΔΔⲆⵠⵠⲆ][ⲆΔΔ.time];
			ᐃᐃⲆ = -ⵠⵠ.width;
			ΔᐃⲆ = -ⵠⵠ.height;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / ΔᐃⵠⲆ, -ΔᐃⲆ / ᐃⲆⲆΔ, ᐃᐃⲆ, ΔᐃⲆ)
		}
		Ⲇ.restore()
	}
	ⵠΔΔᐃⵠᐃⲆⵠᐃ = ΔⵠⲆⲆ;
	ⵠⵠⵠᐃⵠⲆⲆᐃⵠ = 1;
	ⲆΔⵠᐃⵠⵠᐃⵠⲆ = ΔⲆⲆᐃ;
	ᐃΔⵠⲆⵠⵠΔⲆⲆ = 3;
	ⵠᐃⲆΔᐃⵠΔⲆΔ = ⲆⵠⲆⲆ;
	ⵠⲆⵠⲆᐃΔⲆ = [
		[],
		[],
		[],
		[],
		[]
	];
	ΔΔⲆⲆᐃⵠⵠΔΔ = [ⵠ[296], "#00BB00", "#1CE7E0", "#DBE71C", ⵠ[296]];

	function ΔⵠᐃⵠⵠΔⲆⲆⲆ(ᐃᐃ, ᐃᐃⲆⵠ) {
		if (this.text) {
			if (!this.timeout.ⵠⲆⵠ) Ⲇ.globalAlpha = 1;
			else Ⲇ.globalAlpha = ⵠⲆⲆ - this.timeout.ⵠⵠΔ;
			if (!this.label) this.label = ⲆΔΔΔⲆ(ᐃ, this.text, 40, ᐃᐃ, null, null, null, null, null, ᐃᐃⲆⵠ, Ⲇⵠᐃⵠᐃ);
			ⵠⲆΔⲆ(Ⲇ, this.label, (Ⲇⵠⵠⵠ - this.label.width) / ΔᐃⵠⲆ, 50 * ᐃ);
			Ⲇ.globalAlpha = 1;
			this.timeout.ⵠᐃⵠ() && this.timeout.ⵠⲆⵠ == ⵠΔⲆᐃⲆ && (this.text = this.list.shift(), this.label = null)
		}
	}

	function ⲆⲆΔᐃᐃΔᐃΔᐃ() {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		if (ΔᐃⲆΔ < this.text.length) {
			for (var ᐃⲆ = 0; ᐃⲆ < this.text.length && ᐃΔⵠᐃ > ᐃⲆ; ᐃⲆ++) {
				if (!this.label[ᐃⲆ]) {
					this.label[ᐃⲆ] = ⵠΔⵠⵠΔΔⲆⲆⲆ(ᐃ, this.text[ᐃⲆ]);
					this.ⵠΔⲆΔⵠⲆⲆ[ᐃⲆ] = 0;
					this.ᐃⲆⵠⲆΔⵠⲆ[ᐃⲆ] = 0
				}
				ᐃⲆ === ΔΔᐃᐃ && (this.ᐃⲆⵠⲆΔⵠⲆ[0] = 30 * Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(this.ⵠᐃⵠⵠⲆΔᐃ))
			}
			this.ⵠΔⲆΔⵠⲆⲆ[ⲆⵠⲆ] += ᐃᐃΔⲆ;
			if (1 < this.text.length) {
				this.ⵠᐃⵠⵠⲆΔᐃ = Math.min(this.ⵠᐃⵠⵠⲆΔᐃ + ᐃᐃΔⲆ, 1);
				if (1 < this.ⵠΔⲆΔⵠⲆⲆ[Ⲇᐃⵠᐃ] && this.ⵠᐃⵠⵠⲆΔᐃ > .5) this.ⵠΔⲆΔⵠⲆⲆ[1] += ᐃᐃΔⲆ
			}
			for (var ᐃⲆ = 0; this.text.length > ᐃⲆ && ᐃⲆ < ᐃΔⵠᐃ; ᐃⲆ++) {
				var ΔᐃⵠⲆⲆ = this.ⵠΔⲆΔⵠⲆⲆ[ᐃⲆ];
				if (ΔΔᐃ < ΔᐃⵠⲆⲆ) {
					if (ΔᐃⵠⲆⲆ < .25) Ⲇ.globalAlpha = 4 * ΔᐃⵠⲆⲆ;
					else 3.75 < ΔᐃⵠⲆⲆ ? Ⲇ.globalAlpha = Math.max(ⲆⲆΔΔ * (4 - ΔᐃⵠⲆⲆ), ⵠᐃⲆᐃ) : Ⲇ.globalAlpha = ΔΔᐃⵠ;
					ⵠⲆΔⲆ(Ⲇ, this.label[ᐃⲆ], -this.label[ᐃⲆ].width / 2, -this.ᐃⲆⵠⲆΔⵠⲆ[ᐃⲆ] + -this.label[ᐃⲆ].height / 2 - 110 * ᐃ)
				}
			}
			if (Ⲇⵠⵠᐃᐃ < this.ⵠΔⲆΔⵠⲆⲆ[0]) {
				this.ⵠΔⲆΔⵠⲆⲆ.shift();
				this.text.shift();
				this.ᐃⲆⵠⲆΔⵠⲆ.shift();
				this.label.shift();
				this.ⵠᐃⵠⵠⲆΔᐃ = 0
			}
		}
		Ⲇ.restore()
	}

	function ⲆⲆΔΔᐃⵠⲆ(ⲆᐃᐃⲆΔΔΔ, ⲆᐃⲆⵠⵠⵠᐃ, ΔᐃⵠⲆⲆ) {
		if (1 !== ⲆᐃⲆⵠⵠⵠᐃ.Δᐃᐃᐃⵠᐃⵠ()) return ⲆᐃⲆⵠⵠⵠᐃ;
		var ⲆⲆᐃΔⵠᐃⲆ = ⵠⲆⵠⲆᐃΔⲆ[ΔᐃⵠⲆⲆ][ⲆᐃᐃⲆΔΔΔ];
		if (ΔⵠᐃΔⵠ === ⲆⲆᐃΔⵠᐃⲆ) {
			ⲆⲆᐃΔⵠᐃⲆ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var ⵠᐃᐃΔⲆⵠⵠ = ⲆⲆᐃΔⵠᐃⲆ.getContext(ⵠ[140]);
			var ᐃⲆⲆ = ⲆᐃⲆⵠⵠⵠᐃ.width;
			var ΔⲆⲆ = ⲆᐃⲆⵠⵠⵠᐃ.height;
			ⲆⲆᐃΔⵠᐃⲆ.width = ᐃⲆⲆ;
			ⲆⲆᐃΔⵠᐃⲆ.height = ΔⲆⲆ;
			ⵠᐃᐃΔⲆⵠⵠ.drawImage(ⲆᐃⲆⵠⵠⵠᐃ, ᐃⵠΔ, ⵠⵠⲆⲆ);
			ⵠᐃᐃΔⲆⵠⵠ.globalCompositeOperation = "source-in";
			ⵠᐃᐃΔⲆⵠⵠ.fillStyle = ΔΔⲆⲆᐃⵠⵠΔΔ[ΔᐃⵠⲆⲆ];
			ⵠᐃᐃΔⲆⵠⵠ.fillRect(ⵠⲆⲆᐃ, ΔⲆⵠ, ᐃⲆⲆ, ΔⲆⲆ);
			ⵠⲆⵠⲆᐃΔⲆ[ΔᐃⵠⲆⲆ][ⲆᐃᐃⲆΔΔΔ] = ⲆⲆᐃΔⵠᐃⲆ
		}
		return ⲆⲆᐃΔⵠᐃⲆ
	}

	function ⵠΔᐃΔΔⵠΔΔⵠ() {
		var ᐃⲆΔΔᐃΔⲆ = 0;
		switch (this.right) {
			case Δ.ⲆⵠᐃⲆᐃ:
			case Δ.ⵠⵠΔⲆΔ:
			case Δ.ⵠΔⲆΔΔ:
			case Δ.ⵠΔΔⲆΔ:
			case Δ.ⲆⲆΔΔΔ:
			case Δ.ᐃⵠⵠⲆⵠ:
				var ᐃⲆΔΔᐃΔⲆ = 1;
				break
		}
		if (this.ΔΔᐃⲆΔ) {
			for (var ᐃⲆ = 0; ᐃⲆ < this.bubbles.length; ᐃⲆ++) {
				var ⲆΔⵠΔ = this.bubbles[ᐃⲆ];
				if (.5 < ⲆΔⵠΔ.ⵠⵠⲆᐃΔ) var ⵠᐃᐃᐃⲆ = 1 - ᐃΔⲆⲆⵠ * (ⲆΔⵠΔ.ⵠⵠⲆᐃΔ - .5);
				else var ⵠᐃᐃᐃⲆ = ⲆΔⵠΔ.ⵠⵠⲆᐃΔ * ⵠᐃⵠΔ;
				Ⲇ.globalAlpha = ⵠᐃᐃᐃⲆ;
				var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][ⲆΔΔ.time][ⲆΔⵠΔ.id];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⲆΔⵠΔ.x - ⵠⵠ.width / 2, ⲆΔⲆ.ⵠΔΔ.y + ⲆΔⵠΔ.y - ⵠⵠ.height / 2);
				Ⲇ.globalAlpha = 1
			}
			return
		}
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + this.x, ⲆΔⲆ.ⵠΔΔ.y + this.y);
		ⲆΔΔ.ⵠΔᐃᐃⵠⲆΔⲆΔ(this);
		if (this.action & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ) {
			ᐃⵠⲆⲆⲆᐃⵠⲆⲆ(this)
		}
		Ⲇ.save();
		Ⲇ.rotate(this.angle - Math.PI / ᐃⲆⲆΔ);
		if (!(this.action & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ)) {
			if (this.action & ⵠΔⵠⵠ.IDLE || this.ΔⵠⵠⲆⵠ !== 0) {
				this.ⲆⵠᐃΔΔⲆⲆ.ⵠᐃⵠ()
			} else if (this.action & ⵠΔⵠⵠ.ΔΔΔΔᐃⵠᐃ) {
				this.ⵠΔΔⵠΔΔΔ.ⵠᐃⵠ()
			}
		}
		var ᐃᐃΔ = this.ⲆⵠᐃΔΔⲆⲆ.ⵠⵠΔ;
		var ᐃⲆᐃ = this.ⵠΔΔⵠΔΔΔ.ⵠⵠΔ;
		var ΔⵠⵠΔΔ;
		if (Δ.ᐃᐃΔΔⵠ === this.ᐃⲆΔⲆΔ) {
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠⵠᐃᐃ][ⲆΔΔ.time];
			ΔⵠⵠΔΔ = Δ.ⵠⵠⵠᐃᐃ
		} else if (this.ᐃⲆΔⲆΔ === Δ.ΔⲆΔᐃⵠ) {
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠΔᐃ][ⲆΔΔ.time];
			ΔⵠⵠΔΔ = Δ.ⵠⲆⵠΔᐃ
		} else if (Δ.ΔΔΔᐃᐃ === this.ᐃⲆΔⲆΔ) {
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠᐃΔⵠΔ][ⲆΔΔ.time];
			ΔⵠⵠΔΔ = Δ.ⵠⲆⵠᐃΔⵠΔ
		} else if (Δ.Δⵠᐃᐃⵠ === this.ᐃⲆΔⲆΔ) {
			ⵠⵠ = Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃΔ][ⲆΔΔ.time];
			ΔⵠⵠΔΔ = Δ.ᐃΔⵠᐃⵠᐃΔ
		} else this.ⵠⵠⲆⲆⵠⲆᐃ ? (ⵠⵠ = Ⲇᐃ[Δ.ⲆΔⲆⵠᐃᐃᐃ][ⲆΔΔ.time], ΔⵠⵠΔΔ = Δ.ⲆΔⲆⵠᐃᐃᐃ) : (ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃⵠᐃ][this.ᐃᐃᐃΔ][ⲆΔΔ.time], ΔⵠⵠΔΔ = Δ.ΔΔᐃⵠᐃ);
		ΔⵠᐃΔ = Ⲇᐃ[Δ.Ⲇⵠᐃⵠⵠ][ⲆΔΔ.time];
		var ᐃᐃᐃᐃⲆ = ⵠⵠ;
		var ΔⵠΔⵠᐃΔⲆ = ΔⵠⵠΔΔ;
		if (this.action & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ) {
			if (this.attack.ⵠᐃⵠ() && this.attack.ⵠⲆⵠ == ΔᐃΔΔᐃ) {
				this.ᐃᐃᐃᐃⲆ = !this.ᐃᐃᐃᐃⲆ;
				this.action -= ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ;
				this.ⲆⲆᐃΔ == ⲆΔⲆ.ⲆⲆᐃΔ && (ⲆΔⲆ.control.ᐃⲆΔⲆ = 0)
			}
			if (this.right >= 0) this.ᐃᐃᐃᐃⲆ = ⵠⵠⵠΔΔ;
			var ⵠⵠᐃΔ = this.ᐃᐃᐃᐃⲆ ? this.attack.ⵠⵠΔ : -this.attack.ⵠⵠΔ / ᐃᐃⵠᐃ;
			var ΔΔⵠⵠⲆ = this.ᐃᐃᐃᐃⲆ ? this.attack.ⵠⵠΔ / ⲆⵠⵠⲆ : -this.attack.ⵠⵠΔ;
			if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
				Ⲇ.save();
				Ⲇ.rotate(ⵠⵠᐃΔ);
				ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / 2 - (66 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ᐃⵠΔⲆ + (5 + ᐃⲆᐃ) * ᐃ);
				Ⲇ.restore();
				Ⲇ.save();
				Ⲇ.rotate(ΔΔⵠⵠⲆ);
				ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ΔᐃⵠⲆ + ᐃ * (66 + ᐃᐃΔ), -ⵠⵠ.height / 2 + ᐃ * (ⲆⲆᐃⵠ + ᐃⲆᐃ));
				Ⲇ.restore()
			} else {
				if (ᐃⲆΔΔᐃΔⲆ === 0) {
					if (this.right === Δ.ᐃΔⵠᐃⵠ) ⵠⵠᐃΔ = -Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ(-ⵠⵠᐃΔ);
					Ⲇ.save();
					Ⲇ.rotate(ⵠⵠᐃΔ);
					ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / ⵠΔⲆΔ - ᐃ * (49 + ᐃᐃΔ), -ΔⵠᐃΔ.height / 2 + ᐃ * (15 + ᐃⲆᐃ));
					if (Δ.ΔᐃⵠⲆΔ === this.right) {
						var ⵠΔΔⲆⵠΔⲆ = Ⲇᐃ[this.right][this.ⲆΔⵠⲆⵠ][ⲆΔΔ.time];
						ⲆⲆΔᐃΔ(this.right, this.ⲆΔⵠⲆⵠ, ⵠΔΔⲆⵠΔⲆ, -ⵠΔΔⲆⵠΔⲆ.width / ⲆⲆⲆⵠᐃ - ᐃ * (62 + ᐃᐃΔ), -ⵠΔΔⲆⵠΔⲆ.height / ⵠΔⲆᐃΔ + (ᐃⲆᐃ + 18) * ᐃ)
					} else ᐃⲆΔΔⵠΔᐃ(this.right, ᐃᐃΔ, ᐃⲆᐃ);
					if (Δ.ⵠⲆⵠΔᐃ <= ΔⵠⵠΔΔ) ᐃᐃⵠᐃⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / 4 - (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + ᐃ * (ⲆⵠΔᐃΔⲆᐃ + ᐃⲆᐃ));
					else if (ΔⵠⵠΔΔ !== Δ.ⵠⵠⵠᐃᐃ) {
						ⲆⲆΔᐃΔ(ΔⵠⵠΔΔ, this.ᐃᐃᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / 4 + (ⲆⵠΔΔΔⲆᐃ + ᐃⲆᐃ) * ᐃ)
					} else ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / 2 - (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ΔⵠΔΔ + (11 + ᐃⲆᐃ) * ᐃ);
					Ⲇ.restore();
					Ⲇ.save();
					Ⲇ.rotate(ΔΔⵠⵠⲆ);
					ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / ⲆᐃⲆᐃ + ᐃ * (49 + ᐃᐃΔ), -ΔⵠᐃΔ.height / 2 + (ⲆⲆⲆⲆⵠΔⵠ + ᐃⲆᐃ) * ᐃ);
					if (Δ.ⵠⲆⵠΔᐃ <= ΔⵠⵠΔΔ) ᐃᐃⵠᐃⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃⵠᐃⲆ + ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / ⲆⵠⲆΔⲆ + (ᐃⲆⵠΔⲆⲆⵠ + ᐃⲆᐃ) * ᐃ);
					else Δ.ⵠⵠⵠᐃᐃ !== ΔⵠⵠΔΔ ? ⲆⲆΔᐃΔ(ΔⵠⵠΔΔ, this.ᐃᐃᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 + (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + (ᐃΔⲆᐃⲆᐃⵠ + ᐃⲆᐃ) * ᐃ) : ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⵠⲆΔΔ + ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / ⵠⲆΔΔ + ᐃ * (11 + ᐃⲆᐃ));
					Ⲇ.restore()
				}
			}
		} else {
			if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
				ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃⵠΔ - ᐃ * (66 + ᐃᐃΔ), -ⵠⵠ.height / 2 + (ᐃᐃⵠⵠ + ᐃⲆᐃ) * ᐃ);
				ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⲆⵠΔ + ᐃ * (66 + ᐃᐃΔ), -ⵠⵠ.height / ᐃⲆⵠᐃ + (5 + ᐃⲆᐃ) * ᐃ)
			} else {
				if (ᐃⲆΔΔᐃΔⲆ === 0) {
					ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / ⵠⲆⵠᐃ - (49 + ᐃᐃΔ) * ᐃ, -ΔⵠᐃΔ.height / ᐃⲆⲆΔ + (ΔΔⵠΔⵠΔⲆ + ᐃⲆᐃ) * ᐃ);
					if (Δ.ΔᐃⵠⲆΔ === this.right) {
						var ⵠΔΔⲆⵠΔⲆ = Ⲇᐃ[this.right][this.ⲆΔⵠⲆⵠ][ⲆΔΔ.time];
						ⲆⲆΔᐃΔ(this.right, this.ⲆΔⵠⲆⵠ, ⵠΔΔⲆⵠΔⲆ, -ⵠΔΔⲆⵠΔⲆ.width / ⵠᐃⵠᐃⲆ - ᐃ * (62 + ᐃᐃΔ), -ⵠΔΔⲆⵠΔⲆ.height / 4 + ᐃ * (ᐃⲆᐃ + ⵠⲆⲆΔΔⵠⲆ))
					} else ᐃⲆΔΔⵠΔᐃ(this.right, ᐃᐃΔ, ᐃⲆᐃ);
					if (ΔⵠⵠΔΔ >= Δ.ⵠⲆⵠΔᐃ) ᐃᐃⵠᐃⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / 4 - ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / 4 + ᐃ * (11 + ᐃⲆᐃ));
					else Δ.ⵠⵠⵠᐃᐃ !== ΔⵠⵠΔΔ ? ⲆⲆΔᐃΔ(ΔⵠⵠΔΔ, this.ᐃᐃᐃΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⵠⲆⲆ - (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / 4 + ᐃ * (ⵠⵠᐃᐃΔⵠⵠ + ᐃⲆᐃ)) : ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃᐃⵠ - (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ᐃⲆⲆΔ + (11 + ᐃⲆᐃ) * ᐃ);
					ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / ᐃᐃΔⵠ + ᐃ * (49 + ᐃᐃΔ), -ΔⵠᐃΔ.height / 2 + ᐃ * (15 + ᐃⲆᐃ));
					if (ΔⵠⵠΔΔ >= Δ.ⵠⲆⵠΔᐃ) ᐃᐃⵠᐃⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / ⲆⵠⲆΔⲆ + (49 + ᐃᐃΔ) * ᐃ, -ⵠⵠ.height / ΔⲆΔⲆ + (11 + ᐃⲆᐃ) * ᐃ);
					else if (ΔⵠⵠΔΔ !== Δ.ⵠⵠⵠᐃᐃ) ⲆⲆΔᐃΔ(ΔⵠⵠΔΔ, this.ᐃᐃᐃΔ, ⵠⵠ, -ⵠⵠ.width / 4 + ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / ⵠⲆᐃᐃ + (11 + ᐃⲆᐃ) * ᐃ);
					else ⵠⵠⲆⲆⲆ(ΔⵠⵠΔΔ, ⵠⵠ, -ⵠⵠ.width / 2 + ᐃ * (49 + ᐃᐃΔ), -ⵠⵠ.height / ᐃΔⲆⲆⵠ + ᐃ * (11 + ᐃⲆᐃ))
				}
			}
		}
		if (this.ΔⵠⵠⵠⲆ && this.ᐃⲆΔⲆΔ < ᐃⲆⵠΔ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⵠ][this.ΔⲆΔⵠⲆΔᐃ][ⲆΔΔ.time];
			ⲆⲆΔᐃΔ(Δ.ⵠΔΔⵠ, this.ΔⲆΔⵠⲆΔᐃ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / ΔⲆΔⲆ - 39 * ᐃ)
		}
		if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
			var ⵠⵠ = Ⲇᐃ[Δ.ᐃᐃⲆⵠⲆⵠⲆ][ⲆΔΔ.time];
			ⵠⵠⲆⲆⲆ(Δ.ᐃᐃⲆⵠⲆⵠⲆ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
			this.ΔΔΔⲆⲆΔⵠ.ⵠᐃⵠ();
			ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆΔΔᐃⵠⵠ][ⲆΔΔ.time];
			ⵠⵠⲆⲆⲆ(Δ.ⵠⲆΔΔᐃⵠⵠ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ⵠⵠΔⲆ + this.ΔΔΔⲆⲆΔⵠ.ⵠⵠΔ)
		} else {
			var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][ⲆΔΔ.time];
			if (Δ.ᐃᐃΔΔⵠ !== this.ᐃⲆΔⲆΔ) {
				ⲆⲆΔᐃΔ(Δ.ΔⲆⲆⲆⵠᐃΔ, this.ᐃᐃᐃΔ, ⵠⵠ, -ⵠⵠ.width / ᐃⵠᐃᐃ, -ⵠⵠ.height / 4);
				if (0 < this.ᐃᐃᐃⲆⵠ) {
					var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆΔᐃᐃ][this.ᐃᐃᐃⲆⵠ][ⲆΔΔ.time];
					ⲆⲆΔᐃΔ(Δ.ⵠⲆΔᐃᐃ, this.ᐃᐃᐃⲆⵠ, ⵠⵠ, -ⵠⵠ.width / ⲆⵠⲆΔⲆ, -ⵠⵠ.height / 4)
				}
			}
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠⲆⲆⲆⵠⵠ) {
			this.ⵠᐃΔΔΔ.ⵠᐃⵠ() && this.ⵠᐃΔΔΔ.ⵠⲆⵠ == ⲆⲆⲆᐃⲆ && (this.action -= ⵠΔⵠⵠ.ᐃⵠⲆⲆⲆⵠⵠ);
			Ⲇ.globalAlpha = .6 - this.ⵠᐃΔΔΔ.ⵠⵠΔ;
			if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
				var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃΔⵠᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠΔⲆΔ, -ⵠⵠ.height / 2)
			} else {
				var ⵠⵠ = ⲆⲆΔΔᐃⵠⲆ(this.ᐃᐃᐃΔ, Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][ⲆⲆⲆ], ⵠⵠⵠᐃⵠⲆⲆᐃⵠ);
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⵠⵠ.width / 4, ⵠⵠ.height / 4, -ⵠⵠ.width / ⵠΔⵠᐃ, -ⵠⵠ.height / ΔⲆⲆᐃ)
			}
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ⵠⵠᐃΔᐃΔⵠ) {
			if (this.ⵠᐃⲆⲆⵠᐃⵠ.ⵠᐃⵠ() && this.ⵠᐃⲆⲆⵠᐃⵠ.ⵠⲆⵠ == ⲆⲆⲆᐃⲆ) this.action -= ⵠΔⵠⵠ.ⵠⵠᐃΔᐃΔⵠ;
			Ⲇ.globalAlpha = .6 - this.ⵠᐃⲆⲆⵠᐃⵠ.ⵠⵠΔ;
			var ⵠⵠ = Ⲇᐃ[Δ.ⵠⵠᐃΔᐃΔⵠ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠᐃᐃⵠ, -ⵠⵠ.height / 2);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.ΔᐃⲆⲆ) {
			this.ⲆⲆᐃ.ⵠᐃⵠ() && this.ⲆⲆᐃ.ⵠⲆⵠ == false && (this.action -= ⵠΔⵠⵠ.ΔᐃⲆⲆ);
			Ⲇ.globalAlpha = .6 - this.ⲆⲆᐃ.ⵠⵠΔ;
			if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
				var ⵠⵠ = Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / ᐃⵠΔⲆ)
			} else {
				var ⵠⵠ = ⲆⲆΔΔᐃⵠⲆ(this.ᐃᐃᐃΔ, Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][0], ⵠΔΔᐃⵠᐃⲆⵠᐃ);
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⵠⵠ.width / ᐃⵠⲆⲆⲆ, ⵠⵠ.height / 4, -ⵠⵠ.width / ΔⵠΔΔ, -ⵠⵠ.height / ⲆᐃⲆᐃ)
			}
			Ⲇ.globalAlpha = ⲆΔⵠⲆ
		}
		if (this.action & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
			if (this.freeze.ⵠᐃⵠ() && false == this.freeze.ⵠⲆⵠ) this.action -= ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ;
			Ⲇ.globalAlpha = .6 - this.freeze.ⵠⵠΔ;
			var ⵠⵠ = ⲆⲆΔΔᐃⵠⲆ(this.ᐃᐃᐃΔ, Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][0], ⲆΔⵠᐃⵠⵠᐃⵠⲆ);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⵠⵠ.width / ⲆⲆⲆⵠᐃ, ⵠⵠ.height / 4, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2);
			Ⲇ.globalAlpha = 1
		}
		if (this.action & ⵠΔⵠⵠ.Ⲇⵠⵠⵠⵠⵠⵠ) {
			this.ⵠΔΔΔⵠΔΔ.ⵠᐃⵠ() && ΔⵠⵠΔⲆ == this.ⵠΔΔΔⵠΔΔ.ⵠⲆⵠ && (this.action -= ⵠΔⵠⵠ.Ⲇⵠⵠⵠⵠⵠⵠ);
			Ⲇ.globalAlpha = .6 - this.ⵠΔΔΔⵠΔΔ.ⵠⵠΔ;
			if (this.ⵠⵠⲆⲆⵠⲆᐃ) {
				var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆⵠⵠⵠᐃᐃ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2)
			} else {
				var ⵠⵠ = ⲆⲆΔΔᐃⵠⲆ(this.ᐃᐃᐃΔ, Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][ΔᐃⲆΔ], ᐃΔⵠⲆⵠⵠΔⲆⲆ);
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⵠⵠ.width / 4, ⵠⵠ.height / 4, -ⵠⵠ.width / ⵠΔⲆΔ, -ⵠⵠ.height / ⵠⵠⲆᐃ)
			}
			Ⲇ.globalAlpha = ᐃⵠⵠ
		}
		ⲆᐃΔΔΔΔᐃⵠᐃ(this.ᐃⲆΔⲆΔ);
		if (1 === ᐃⲆΔΔᐃΔⲆ) {
			if (this.action & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ) ᐃᐃΔ += 15 * this.attack.ⵠⵠΔ;
			ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / ⵠᐃᐃⵠ - 26 * ᐃ, -ΔⵠᐃΔ.height / ⵠᐃᐃⵠ + ᐃ * (31 + ᐃⲆᐃ + ᐃᐃΔ));
			if (Δ.ⵠⲆⵠΔᐃ <= ΔⵠΔⵠᐃΔⲆ) ᐃᐃⵠᐃⲆ(ΔⵠΔⵠᐃΔⲆ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / 4 - 26 * ᐃ, -ᐃᐃᐃᐃⲆ.height / 4 + ᐃ * (27 + ᐃⲆᐃ + ᐃᐃΔ));
			else Δ.ⵠⵠⵠᐃᐃ !== ΔⵠΔⵠᐃΔⲆ ? ⲆⲆΔᐃΔ(ΔⵠΔⵠᐃΔⲆ, this.ᐃᐃᐃΔ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / ⵠⲆᐃᐃ - ᐃ * 26, -ᐃᐃᐃᐃⲆ.height / 4 + (27 + ᐃⲆᐃ + ᐃᐃΔ) * ᐃ) : ⵠⵠⲆⲆⲆ(ΔⵠΔⵠᐃΔⲆ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / 2 - 26 * ᐃ, -ᐃᐃᐃᐃⲆ.height / ⵠᐃᐃⵠ + ᐃ * (27 + ᐃⲆᐃ + ᐃᐃΔ));
			ⵠⵠⲆⲆⲆ(Δ.Ⲇⵠᐃⵠⵠ, ΔⵠᐃΔ, -ΔⵠᐃΔ.width / 2 + 26 * ᐃ, -ΔⵠᐃΔ.height / 2 + ᐃ * (31 + ᐃⲆᐃ + ᐃᐃΔ));
			if (ΔⵠΔⵠᐃΔⲆ >= Δ.ⵠⲆⵠΔᐃ) ᐃᐃⵠᐃⲆ(ΔⵠΔⵠᐃΔⲆ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / ⲆⵠⲆⲆ + ᐃ * 26, -ᐃᐃᐃᐃⲆ.height / 4 + (27 + ᐃⲆᐃ + ᐃᐃΔ) * ᐃ);
			else Δ.ⵠⵠⵠᐃᐃ !== ΔⵠΔⵠᐃΔⲆ ? ⲆⲆΔᐃΔ(ΔⵠΔⵠᐃΔⲆ, this.ᐃᐃᐃΔ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / 4 + 26 * ᐃ, -ᐃᐃᐃᐃⲆ.height / 4 + ᐃ * (27 + ᐃⲆᐃ + ᐃᐃΔ)) : ⵠⵠⲆⲆⲆ(ΔⵠΔⵠᐃΔⲆ, ᐃᐃᐃᐃⲆ, -ᐃᐃᐃᐃⲆ.width / ᐃᐃΔⵠ + ᐃ * 26, -ᐃᐃᐃᐃⲆ.height / 2 + ᐃ * (27 + ᐃⲆᐃ + ᐃᐃΔ));
			ⲆⵠΔᐃΔᐃⲆᐃⵠ(this.right, 0, ᐃⲆᐃ + ᐃᐃΔ)
		}
		Ⲇ.restore();
		if (Δ.ᐃⲆΔᐃⵠ !== this.ᐃⲆΔⲆΔ && Δ.ᐃᐃΔΔⵠ !== this.ᐃⲆΔⲆΔ) {
			if (Δⵠⵠ < this.ⲆⲆⵠⵠΔ) {
				if (!this.ΔⲆⵠΔ.ᐃⵠΔΔⲆᐃᐃ) this.ΔⲆⵠΔ.ᐃⵠΔΔⲆᐃᐃ = ⲆΔΔΔⲆ(ᐃ, this.ΔⲆⵠΔ.ᐃΔⲆᐃⵠ, ⵠΔΔΔ, ⵠ[80], ⵠ[151], 2, null, null, ᐃ * 300);
				var ⵠⵠ = this.ΔⲆⵠΔ.ᐃⵠΔΔⲆᐃᐃ
			} else {
				if (!this.ΔⲆⵠΔ.label) this.ΔⲆⵠΔ.label = ⲆΔΔΔⲆ(ᐃ, this.ΔⲆⵠΔ.ᐃΔⲆᐃⵠ, ΔⵠᐃⵠΔⵠⲆ, ⵠ[68], ⵠ[151], ᐃⵠΔⲆ, null, null, ᐃ * 300);
				var ⵠⵠ = this.ΔⲆⵠΔ.label
			}
			ⲆΔΔ.ⲆⲆΔ == Δ.ⲆⵠΔ && (Ⲇ.globalAlpha = .5);
			var ᐃᐃΔ = Math.floor(-ⵠⵠ.width / ᐃⵠΔⲆ);
			var ᐃⲆᐃ = Math.floor(-ⵠⵠ.height / ᐃᐃΔⵠ - ᐃ * 70);
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ);
			if (ΔΔⲆᐃ < this.ΔⲆⵠΔ.level) {
				var ⵠᐃⵠⵠ = ᐃᐃΔ + ⵠⵠ.width + ⲆᐃΔΔΔ;
				ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠⲆⵠΔΔΔ];
				ᐃΔΔⲆⵠᐃᐃ[this.ΔⲆⵠΔ.level] === undefined && (ᐃΔΔⲆⵠᐃᐃ[this.ΔⲆⵠΔ.level] = ⲆΔΔΔⲆ(ᐃ, "[" + this.ΔⲆⵠΔ.level + "]", ΔⲆΔᐃ, "#F9E8A2", ⵠ[151], ⵠΔⲆΔ, null, null, ᐃ * 50));
				ⵠⲆΔⲆ(Ⲇ, ᐃΔΔⲆⵠᐃᐃ[this.ΔⲆⵠΔ.level], ⵠᐃⵠⵠ, ᐃⲆᐃ)
			}
			Ⲇ.globalAlpha = 1
		} else {
			var ᐃⲆᐃ = Math.floor(ᐃ * -70);
			var ᐃᐃΔ = Math.floor(Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠⲆᐃ].width / 1.5)
		}
		if (ⲆΔⲆ.ⲆΔΔΔⲆⲆⲆ(this.ΔΔΔⵠ)) {
			if (ⲆΔⲆ.ΔⵠΔⵠΔ[ΔⵠⲆΔ] == this.ΔΔΔⵠ) var ⵠⵠ = Ⲇᐃ[Δ.ⲆⵠΔⲆᐃᐃᐃ];
			else var ⵠⵠ = Ⲇᐃ[Δ.ᐃⲆⵠᐃⵠⲆᐃ];
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ - ⵠⵠ.width - 5, ᐃⲆᐃ - ⵠⵠⲆΔⵠ)
		}
		Ⲇ.restore()
	}

	function ΔⵠⲆΔᐃⵠᐃⵠⲆ() {
		if (this.enabled && 0 <= this.ᐃᐃΔⲆΔ) {
			var ⵠⵠΔⵠⲆᐃⲆⲆᐃ = (new Date).getTime();
			var ⵠᐃΔ = ⵠⵠΔⵠⲆᐃⲆⲆᐃ - this.ᐃᐃΔⲆΔ;
			var ⵠᐃᐃᐃⲆ = ⵠᐃΔ % 1e3 / 1e3;
			if (.5 < ⵠᐃᐃᐃⲆ) {
				ⵠᐃᐃᐃⲆ = ⲆⲆΔᐃ - (ⵠᐃᐃᐃⲆ - .5) * ⵠΔⵠᐃ
			} else ⵠᐃᐃᐃⲆ *= 2;
			ⵠᐃΔ = Math.floor(ⵠᐃΔ / 1e3);
			if (ⲆⵠΔΔ.ΔΔⵠⵠⵠⵠΔ > ⵠᐃΔ) {
				ⵠᐃΔ = ⲆⵠΔΔ.ΔΔⵠⵠⵠⵠΔ - ⵠᐃΔ;
				if (!this.label) {
					this.label = ⲆΔΔΔⲆ(ᐃ, " seconds before you die", 40, ⵠ[470], null, null, null, null, null, ⵠ[151], ΔⲆⵠΔᐃ)
				}
				if (this.now != ⵠᐃΔ || !this.ⵠⲆⲆⵠⲆΔⲆ) {
					this.now = ⵠᐃΔ;
					this.ⵠⲆⲆⵠⲆΔⲆ = ⲆΔΔΔⲆ(ᐃ, "" + ⵠᐃΔ, 40, ⵠ[470], null, null, null, null, null, ⵠ[151], 10)
				}
				ⵠⲆΔⲆ(Ⲇ, this.label, (Ⲇⵠⵠⵠ - this.label.width) / ⵠᐃⵠΔ, 100 * ᐃ);
				Ⲇ.globalAlpha = ⵠᐃᐃᐃⲆ;
				ⵠⲆΔⲆ(Ⲇ, this.ⵠⲆⲆⵠⲆΔⲆ, (Ⲇⵠⵠⵠ - this.label.width) / 2 - this.ⵠⲆⲆⵠⲆΔⲆ.width + ᐃ * ⲆΔⲆⲆⲆⲆᐃ, 100 * ᐃ);
				Ⲇ.globalAlpha = ⵠᐃΔᐃ
			}
		}
	}

	function ᐃⲆᐃⲆᐃᐃᐃΔΔ() {
		if (undefined !== this.message) {
			var ᐃⲆᐃ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length > 0 ? -95 : ⲆⵠⲆ;
			ⵠⲆΔⲆ(Ⲇ, this.message, ⵠⵠⲆⲆ, ᐃΔⲆᐃ - this.message.height + ᐃⲆᐃ)
		}
	}
	var ⲆΔᐃⵠᐃᐃΔ = 0;

	function ⵠᐃΔⵠⲆⵠⵠ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ) {
		if (ΔⲆⵠᐃᐃ === ΔⵠΔᐃ) ΔⵠΔᐃ = ΔⵠⲆⲆ;
		ⲆΔΔ.ᐃⵠΔⵠ[ⲆΔ].ⵠᐃⵠ();
		for (var ΔᐃⲆᐃ = ⲆⲆΔⵠ; ΔᐃⲆᐃ >= ΔⵠΔᐃ; ΔᐃⲆᐃ--) {
			for (var ᐃⲆ = ΔⲆᐃᐃ; ᐃⲆ <= ⲆⲆᐃⲆ; ᐃⲆ++) {
				for (var ΔΔΔ = ⵠᐃΔΔ; ΔΔΔ <= ᐃⵠⵠᐃ; ΔΔΔ++) {
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
					if (!ⲆᐃⵠⲆ || !ⲆᐃⵠⲆ[ᐃⲆⵠ]) continue;
					var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ][ΔᐃⲆᐃ];
					if (ᐃⲆᐃᐃᐃ === ⵠⲆⵠ) continue;
					for (var ⲆⲆⲆᐃ = ⵠⵠᐃⵠ; ⲆⲆⲆᐃ < ⵠⲆⵠ.length; ⲆⲆⲆᐃ++) {
						var ⵠⲆᐃⵠⲆ = ⵠⲆⵠ[ⲆⲆⲆᐃ];
						if (ⵠⲆᐃⵠⲆ.ⵠᐃⵠ) {
							if (ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠᐃⵠ() && false == ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⲆⵠ) {
								ⵠⲆᐃⵠⲆ.ⵠᐃⵠ = ΔᐃΔΔᐃ
							}
							var ⵠⵠΔ = ᐃᐃΔⲆ * (ΔΔᐃᐃ - ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⵠΔ) * 600 * ᐃ;
							var ᐃᐃΔ = Math.sin(ⵠⲆᐃⵠⲆ.angle) * ⵠⵠΔ;
							var ᐃⲆᐃ = Math.cos(ⵠⲆᐃⵠⲆ.angle) * ⵠⵠΔ
						} else {
							var ᐃᐃΔ = 0;
							var ᐃⲆᐃ = Ⲇᐃⵠᐃ
						}
						var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ΔᐃⲆᐃ];
						var ᐃᐃⲆ = ⲆΔΔ.ᐃⵠΔⵠ[ⲆΔ].ⵠⵠΔ * -ⵠⵠ.width;
						var ΔᐃⲆ = -ⵠⵠ.height * ⲆΔΔ.ᐃⵠΔⵠ[ⲆΔ].ⵠⵠΔ;
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ᐃᐃⲆ / 2 + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ΔᐃⲆ / 2 + ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
					}
				}
			}
		}
	}

	function ⵠΔⲆⵠΔⵠⲆ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ) {
		ΔⵠΔᐃ === undefined && (ΔⵠΔᐃ = 0);
		for (var ΔᐃⲆᐃ = ⲆⲆΔⵠ; ΔᐃⲆᐃ >= ΔⵠΔᐃ; ΔᐃⲆᐃ--) {
			for (var ᐃⲆ = ΔⲆᐃᐃ; ⲆⲆᐃⲆ >= ᐃⲆ; ᐃⲆ++) {
				for (var ΔΔΔ = ⵠᐃΔΔ; ΔΔΔ <= ᐃⵠⵠᐃ; ΔΔΔ++) {
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
					if (!ⲆᐃⵠⲆ || !ⲆᐃⵠⲆ[ᐃⲆⵠ]) continue;
					var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ][ΔᐃⲆᐃ];
					if (ΔΔⵠⲆⵠ === ⵠⲆⵠ) continue;
					for (var ⲆⲆⲆᐃ = 0; ⲆⲆⲆᐃ < ⵠⲆⵠ.length; ⲆⲆⲆᐃ++) {
						var ⵠⲆᐃⵠⲆ = ⵠⲆⵠ[ⲆⲆⲆᐃ];
						var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ΔᐃⲆᐃ];
						var ⲆⲆⲆⲆⲆⲆᐃ = (ⲆΔᐃⵠᐃᐃΔ + ᐃⵠⵠⵠ * (ᐃⲆ + ΔΔΔ)) % 60;
						var ΔᐃⵠⲆⲆ = 30 > ⲆⲆⲆⲆⲆⲆᐃ ? ⲆⲆⲆⲆⲆⲆᐃ / 30 : ⲆⲆΔᐃ - (ⲆⲆⲆⲆⲆⲆᐃ - 30) / 30;
						var ᐃᐃⲆ = -ⵠⵠ.width * (ΔᐃⵠΔ + ΔᐃⵠⲆⲆ * .9 / 30);
						var ΔᐃⲆ = -ⵠⵠ.height * (1 + .9 * ΔᐃⵠⲆⲆ / 30);
						ⲆⲆⲆⲆⲆⲆᐃ = (ⲆΔᐃⵠᐃᐃΔ + 7 * (ᐃⲆ + ΔΔΔ)) % 60;
						ΔᐃⵠⲆⲆ = ⲆⲆⲆⲆⲆⲆᐃ < 30 ? ⲆⲆⲆⲆⲆⲆᐃ / 30 : ᐃⵠⵠ - (ⲆⲆⲆⲆⲆⲆᐃ - 30) / 30;
						var ΔᐃΔΔ = Ⲇ.globalAlpha;
						Ⲇ.globalAlpha = (.9 + .1 * ΔᐃⵠⲆⲆ) * ΔᐃΔΔ;
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ᐃᐃⲆ / ⲆᐃⲆᐃ, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ);
						Ⲇ.globalAlpha = ΔᐃΔΔ
					}
				}
			}
		}
	}
	var ΔⵠΔᐃᐃᐃΔ = [];
	for (var ᐃⲆ = 0; ᐃⲆ < 100; ᐃⲆ++) {
		var Δᐃᐃ = 1;
		.25 > Math.random() && (Δᐃᐃ = ΔΔⵠᐃ);
		ΔⵠΔᐃᐃᐃΔ.push(Δᐃᐃ)
	}
	ΔⲆⵠᐃⲆ = 1;

	function Ⲇⵠᐃᐃⵠ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ, ⲆΔⵠᐃᐃ) {
		ΔⵠΔᐃ === ᐃᐃΔⲆⲆ && (ΔⵠΔᐃ = ⲆΔᐃ);
		for (var ΔᐃⲆᐃ = ⲆⲆΔⵠ; ΔᐃⲆᐃ >= ΔⵠΔᐃ; ΔᐃⲆᐃ--) {
			for (var ᐃⲆ = ΔⲆᐃᐃ; ⲆⲆᐃⲆ >= ᐃⲆ; ᐃⲆ++) {
				for (var ΔΔΔ = ⵠᐃΔΔ; ΔΔΔ <= ᐃⵠⵠᐃ; ΔΔΔ++) {
					if (ⲆΔⵠᐃᐃ > 0 && 1 === ΔⵠΔᐃᐃᐃΔ[(ᐃⲆ + ΔΔΔ * ⲆΔⵠᐃᐃ) % ΔⵠΔᐃᐃᐃΔ.length]) continue;
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
					if (ⲆᐃⵠⲆ === undefined || ⲆᐃⵠⲆ[ᐃⲆⵠ] === ΔΔⵠⲆⵠ) continue;
					var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ][ΔᐃⲆᐃ];
					if (undefined === ⵠⲆⵠ) continue;
					for (var ⲆⲆⲆᐃ = 0; ⲆⲆⲆᐃ < ⵠⲆⵠ.length; ⲆⲆⲆᐃ++) {
						var ⵠⲆᐃⵠⲆ = ⵠⲆⵠ[ⲆⲆⲆᐃ];
						if (ⵠⲆᐃⵠⲆ.ⵠᐃⵠ) {
							ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠᐃⵠ() && ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⲆⵠ == false && (ⵠⲆᐃⵠⲆ.ⵠᐃⵠ = ΔⵠⵠΔⲆ);
							var ⵠⵠΔ = 600 * ((ⲆⲆΔᐃ - ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⵠΔ) * ᐃᐃΔⲆ) * ᐃ;
							var ᐃᐃΔ = ⵠⵠΔ * Math.sin(ⵠⲆᐃⵠⲆ.angle);
							var ᐃⲆᐃ = Math.cos(ⵠⲆᐃⵠⲆ.angle) * ⵠⵠΔ
						} else {
							var ᐃᐃΔ = 0;
							var ᐃⲆᐃ = 0
						}
						var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ΔᐃⲆᐃ];
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ⵠⵠ.width / (2 * ΔⲆⵠᐃⲆ) + ᐃᐃΔ, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ⵠⵠ.height / (ᐃΔⵠᐃ * ΔⲆⵠᐃⲆ) + ᐃⲆᐃ, ⵠⵠ.width / ΔⲆⵠᐃⲆ, ⵠⵠ.height / ΔⲆⵠᐃⲆ)
					}
				}
			}
		}
	}

	function ⲆᐃⲆΔⲆⵠᐃᐃⵠ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ, ⲆΔⵠᐃᐃ) {
		if (ΔⵠΔᐃ === undefined) ΔⵠΔᐃ = 0;
		for (var ΔᐃⲆᐃ = ⲆⲆΔⵠ; ΔⵠΔᐃ <= ΔᐃⲆᐃ; ΔᐃⲆᐃ--) {
			for (var ᐃⲆ = ΔⲆᐃᐃ; ⲆⲆᐃⲆ >= ᐃⲆ; ᐃⲆ++) {
				for (var ΔΔΔ = ⵠᐃΔΔ; ΔΔΔ <= ᐃⵠⵠᐃ; ΔΔΔ++) {
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
					if (ⲆᐃⵠⲆ === ᐃᐃΔⲆⲆ || ᐃⲆⵠⲆⵠ === ⲆᐃⵠⲆ[ᐃⲆⵠ]) continue;
					var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ][ΔᐃⲆᐃ];
					if (ⵠⲆⵠ === undefined) continue;
					for (var ⲆⲆⲆᐃ = ⵠⵠᐃⵠ; ⲆⲆⲆᐃ < ⵠⲆⵠ.length; ⲆⲆⲆᐃ++) {
						var ⵠⲆᐃⵠⲆ = ⵠⲆⵠ[ⲆⲆⲆᐃ];
						if (ⵠⲆᐃⵠⲆ.ⵠᐃⵠ) {
							ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠᐃⵠ() && false == ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⲆⵠ && (ⵠⲆᐃⵠⲆ.ⵠᐃⵠ = false);
							var ⵠⵠΔ = ᐃ * (ᐃᐃΔⲆ * (ᐃᐃΔᐃ - ⵠⲆᐃⵠⲆ.ⲆⲆᐃ.ⵠⵠΔ) * 600);
							var ᐃᐃΔ = ⵠⵠΔ * Math.sin(ⵠⲆᐃⵠⲆ.angle);
							var ᐃⲆᐃ = ⵠⵠΔ * Math.cos(ⵠⲆᐃⵠⲆ.angle)
						} else {
							var ᐃᐃΔ = ΔⵠⲆⲆ;
							var ᐃⲆᐃ = ΔⲆᐃⲆ
						}
						for (var ᐃᐃⲆⲆΔ = ⵠⲆⲆᐃ; ᐃᐃᐃΔⲆⲆⵠ[ΔᐃⲆᐃ].ⲆᐃᐃⲆ > ᐃᐃⲆⲆΔ; ᐃᐃⲆⲆΔ++) {
							if (ⲆΔΔ.ΔᐃⲆⵠⵠ[ᐃᐃⲆⲆΔ].ⲆⵠΔΔⵠⵠⲆ !== ᐃⲆΔⲆⲆ) {
								ⲆΔΔ.ΔᐃⲆⵠⵠ[ᐃᐃⲆⲆΔ].ⵠᐃⵠ();
								ⲆΔΔ.ΔᐃⲆⵠⵠ[ᐃᐃⲆⲆΔ].ⲆⵠΔΔⵠⵠⲆ = ᐃⲆΔⲆⲆ
							}
							var ⵠⵠ = Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃ][ⲆΔΔ.time][ᐃᐃᐃΔⲆⲆⵠ[ΔᐃⲆᐃ].ᐃΔΔⵠ[ᐃᐃⲆⲆΔ].ᐃⲆⵠ];
							var ᐃᐃⲆ = ⲆΔΔ.ΔᐃⲆⵠⵠ[ᐃᐃⲆⲆΔ].ⵠⵠΔ * -ⵠⵠ.width;
							var ΔᐃⲆ = ⲆΔΔ.ΔᐃⲆⵠⵠ[ᐃᐃⲆⲆΔ].ⵠⵠΔ * -ⵠⵠ.height;
							ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆᐃⵠⲆ.x - ᐃᐃⲆ / ⲆⲆΔΔ + ᐃᐃΔ + ᐃᐃᐃΔⲆⲆⵠ[ΔᐃⲆᐃ].ᐃΔΔⵠ[ᐃᐃⲆⲆΔ].x, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆᐃⵠⲆ.y - ΔᐃⲆ / 4 + ᐃⲆᐃ + ᐃᐃᐃΔⲆⲆⵠ[ΔᐃⲆᐃ].ᐃΔΔⵠ[ᐃᐃⲆⲆΔ].y, ᐃᐃⲆ / ΔⵠΔΔ, ΔᐃⲆ / ᐃᐃΔⵠ)
						}
					}
				}
			}
		}
	}

	function ᐃΔᐃⵠⵠⲆⲆᐃᐃ(ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, ⲆΔ, ᐃⲆⵠ, ⲆⲆΔⵠ, ΔⵠΔᐃ, ⲆΔⵠᐃᐃ) {
		if (ΔⵠΔᐃ === undefined) ΔⵠΔᐃ = 0;
		for (var ᐃⲆ = ΔⲆᐃᐃ; ᐃⲆ <= ⲆⲆᐃⲆ; ᐃⲆ++) {
			for (var ΔΔΔ = ⵠᐃΔΔ; ΔΔΔ <= ᐃⵠⵠᐃ; ΔΔΔ++) {
				var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
				if (ⲆᐃⵠⲆ === undefined || ⲆᐃⵠⲆ[ᐃⲆⵠ] === ΔΔΔⲆⲆ) continue;
				var ⵠⲆⵠ = ⲆᐃⵠⲆ[ᐃⲆⵠ];
				if (ⵠⲆⵠ === ΔΔⵠΔΔ) continue;
				if (ⵠⲆⵠ.scale === ᐃⲆⵠΔ) {
					var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ⵠⲆⵠ.ΔⲆᐃΔ];
					Ⲇ.save();
					Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆⵠ.x, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆⵠ.y);
					Ⲇ.rotate(ⵠⲆⵠ.angle);
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃⵠᐃᐃ, -ⵠⵠ.height / 4, ⵠⵠ.width / 2, ⵠⵠ.height / ᐃⲆⵠᐃ);
					Ⲇ.restore()
				} else if (ⵠⲆⵠ.scale === 3) {
					for (var ΔᐃⲆᐃ = ⲆΔᐃ; ⵠⲆⵠ.ⵠΔᐃ.length > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
						Ⲇ.save();
						Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆⵠ.x, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆⵠ.y);
						Ⲇ.rotate(ⵠⲆⵠ.ⵠΔᐃ[ΔᐃⲆᐃ].angle);
						var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ⵠⲆⵠ.ⵠΔᐃ[ΔᐃⲆᐃ].ΔⲆᐃΔ];
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠⲆⲆΔ + ⵠⲆⵠ.ⵠΔᐃ[ΔᐃⲆᐃ].x, -ⵠⵠ.height / 3 + ⵠⲆⵠ.ⵠΔᐃ[ΔᐃⲆᐃ].y, ⵠⵠ.width / 1.5, ⵠⵠ.height / 1.5);
						Ⲇ.restore()
					}
				} else {
					var ⵠⵠ = Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ⵠⲆⵠ.ΔⲆᐃΔ];
					Ⲇ.save();
					Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ⵠⲆⵠ.x, ⲆΔⲆ.ⵠΔΔ.y + ⵠⲆⵠ.y);
					Ⲇ.rotate(ⵠⲆⵠ.angle);
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ⵠⵠⲆᐃ, -ⵠⵠ.height / ⵠᐃⵠΔ, ⵠⵠ.width, ⵠⵠ.height);
					Ⲇ.restore()
				}
			}
		}
	}
	ᐃᐃᐃΔⲆⲆⵠ = [{
		"ⲆᐃᐃⲆ": ΔΔⵠᐃⵠ,
		"ᐃΔΔⵠ": [{
			x: -128,
			y: -ᐃⵠᐃΔ,
			"ᐃⲆⵠ": ΔⲆᐃⲆ
		}, {
			x: -86,
			y: -ᐃΔᐃΔ,
			"ᐃⲆⵠ": 1
		}, {
			y: -74,
			x: -60,
			"ᐃⲆⵠ": 2
		}, {
			"ᐃⲆⵠ": ⲆΔᐃ,
			y: -144,
			x: -22
		}, {
			x: -58,
			y: 86,
			"ᐃⲆⵠ": 0
		}, {
			x: ᐃⲆⲆᐃΔ,
			"ᐃⲆⵠ": 0,
			y: -30
		}, {
			x: 65,
			"ᐃⲆⵠ": 1,
			y: -115
		}, {
			x: 118,
			"ᐃⲆⵠ": 0,
			y: -50
		}, {
			y: ⵠⲆᐃΔⲆ,
			"ᐃⲆⵠ": ΔΔⵠΔⵠ,
			x: 73
		}, {
			y: 79,
			x: 67,
			"ᐃⲆⵠ": ⵠᐃⲆᐃ
		}]
	}, {
		"ⲆᐃᐃⲆ": 5,
		"ᐃΔΔⵠ": [{
			y: -26,
			"ᐃⲆⵠ": ⲆⵠⲆ,
			x: -45
		}, {
			y: 20,
			"ᐃⲆⵠ": 2,
			x: -45
		}, {
			x: ⲆⵠΔⲆⲆ,
			"ᐃⲆⵠ": 1,
			y: -60
		}, {
			y: -17,
			"ᐃⲆⵠ": 1,
			x: 52
		}, {
			y: 45,
			x: ⵠΔⲆⵠΔᐃⵠ,
			"ᐃⲆⵠ": ΔⵠⲆⲆ
		}]
	}, {
		"ⲆᐃᐃⲆ": 3,
		"ᐃΔΔⵠ": [{
			"ᐃⲆⵠ": 2,
			x: -30,
			y: 3
		}, {
			x: ΔΔⲆᐃⵠ,
			y: -38,
			"ᐃⲆⵠ": 2
		}, {
			x: 37,
			"ᐃⲆⵠ": 2,
			y: ΔⲆⲆΔ
		}]
	}, {
		"ⲆᐃᐃⲆ": ΔᐃᐃΔᐃ,
		"ᐃΔΔⵠ": [{
			y: -87,
			x: -74,
			"ᐃⲆⵠ": ᐃⲆⵠᐃ
		}, {
			x: -ⲆⵠΔΔΔⲆᐃ,
			y: -10,
			"ᐃⲆⵠ": ⵠⲆⲆ
		}, {
			y: 17,
			x: -99,
			"ᐃⲆⵠ": ᐃⲆⵠΔ
		}, {
			y: 84,
			"ᐃⲆⵠ": 0,
			x: -66
		}, {
			"ᐃⲆⵠ": ΔᐃᐃⲆ,
			y: 123,
			x: -55
		}, {
			y: 81,
			"ᐃⲆⵠ": 2,
			x: ⵠΔᐃΔⲆ
		}, {
			y: 50,
			"ᐃⲆⵠ": 0,
			x: 52
		}, {
			y: 9,
			x: 138,
			"ᐃⲆⵠ": ⵠᐃΔᐃ
		}, {
			x: 104,
			"ᐃⲆⵠ": ΔⵠⲆⲆ,
			y: -28
		}, {
			"ᐃⲆⵠ": ⵠⲆⵠᐃ,
			x: 67,
			y: -56
		}, {
			y: -112,
			"ᐃⲆⵠ": 0,
			x: 5
		}]
	}, {
		"ⲆᐃᐃⲆ": ⵠᐃΔΔⲆ,
		"ᐃΔΔⵠ": [{
			"ᐃⲆⵠ": 2,
			y: -66,
			x: -33
		}, {
			y: 10,
			"ᐃⲆⵠ": 0,
			x: -58
		}, {
			x: -ΔᐃΔⲆⵠⲆᐃ,
			y: 44,
			"ᐃⲆⵠ": 1
		}, {
			x: 44,
			"ᐃⲆⵠ": ΔΔⵠᐃ,
			y: ⲆᐃᐃΔᐃ
		}, {
			"ᐃⲆⵠ": ᐃⲆⵠᐃ,
			y: -36,
			x: 53
		}, {
			y: -62,
			x: ⲆⵠΔΔⵠ,
			"ᐃⲆⵠ": 0
		}]
	}, {
		"ᐃΔΔⵠ": [{
			x: -19,
			y: -25,
			"ᐃⲆⵠ": ᐃⲆⵠΔ
		}, {
			"ᐃⲆⵠ": ᐃΔⲆⲆⵠ,
			x: -29,
			y: 13
		}, {
			y: 12,
			"ᐃⲆⵠ": ⲆⲆⲆ,
			x: 12
		}],
		"ⲆᐃᐃⲆ": ᐃⲆⲆᐃΔ
	}];
	var ⲆⵠⵠⵠⲆᐃⲆ = ΔΔᐃ;
	var ⵠΔⵠᐃΔⲆⵠ = Ⲇᐃⵠᐃ;
	var ⵠΔᐃⵠΔⲆⵠ = 0;
	var ΔⲆⵠⵠᐃⵠᐃ = ⵠⵠᐃᐃΔ;

	function ⵠᐃⵠΔᐃᐃΔⲆΔ() {
		var ΔⵠᐃⵠⲆ = ⲆΔⲆ.ΔⵠᐃⵠⲆ;
		0 === ΔⵠᐃⵠⲆ.ⵠᐃⲆⵠⵠ ? ΔⵠᐃⵠⲆ.ᐃΔⵠΔⵠ = Math.max(0, ΔⵠᐃⵠⲆ.ᐃΔⵠΔⵠ - ᐃᐃΔⲆ / 10) : ΔⵠᐃⵠⲆ.ᐃΔⵠΔⵠ = Math.min(1, ΔⵠᐃⵠⲆ.ᐃΔⵠΔⵠ + ᐃᐃΔⲆ / ΔΔⵠᐃⵠ);
		var ⲆΔⲆΔⲆ = ΔⵠᐃⵠⲆ.ⲆΔⲆΔⲆ;
		for (var ᐃⲆ = ΔⲆⵠ; ⲆΔⲆΔⲆ.length > ᐃⲆ; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			ΔⵠᐃⵠⲆ.ⵠᐃⵠ(ᐃⵠᐃ);
			ᐃΔⵠⲆⵠΔⵠ(Δ.ᐃⲆⲆⵠⵠⵠᐃ, ᐃⵠᐃ.id, ⲆΔⲆ.ⵠΔΔ.x + ᐃⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ᐃⵠᐃ.y, ᐃⵠᐃ.alpha)
		}
		for (var ᐃⲆ = ΔᐃⲆΔ; ⲆΔⲆΔⲆ.length > ᐃⲆ; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			if (ΔΔⲆᐃ >= ᐃⵠᐃ.ⵠⵠⲆᐃΔ || ᐃⵠᐃ.x > -ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ || ᐃⵠᐃ.x < -ⲆΔⲆ.ⵠΔΔ.x || ᐃⵠᐃ.y > -ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ) ⲆΔⲆΔⲆ.splice(ᐃⲆ, 1)
		}
		var ᐃΔΔⵠ = -ⲆΔⲆ.ⵠΔΔ.y;
		ⲆΔΔ.ⲆⲆⵠⵠΔ > -1e3 && ΔⵠᐃⵠⲆ.add(ᐃΔΔⵠ)
	}

	function ⵠΔᐃⲆΔⲆⵠⲆᐃ(ᐃⵠⵠⲆ) {
		Ⲇ.globalAlpha = ᐃⵠⵠⲆ.alpha;
		ΔⵠⲆ(Ⲇ, ᐃⵠⵠⲆ.x + ⲆΔⲆ.ⵠΔΔ.x, ᐃⵠⵠⲆ.y + ⲆΔⲆ.ⵠΔΔ.y, ᐃⵠⵠⲆ.r);
		Δⵠ(Ⲇ, Δ.ΔΔᐃⵠΔᐃΔ[ⲆΔΔ.time]);
		Ⲇ.globalAlpha = 1
	}

	function ᐃⵠⵠⵠⲆ(ⵠⵠᐃⲆΔⵠΔ, ΔΔⲆᐃⵠⵠⵠᐃΔ, ⲆⵠΔⵠΔΔⲆᐃⲆ, ᐃΔⵠⵠⵠᐃΔ, ⲆⵠΔΔΔᐃⲆᐃᐃ, ᐃΔᐃᐃᐃᐃⲆᐃᐃ, ᐃⲆᐃⵠ) {
		var ᐃᐃ = "#";
		var ᐃΔⵠⲆ = Math.floor(ᐃⲆᐃⵠ * ᐃΔⵠⵠⵠᐃΔ + ⵠⵠᐃⲆΔⵠΔ * (ⵠⵠⲆΔ - ᐃⲆᐃⵠ));
		ᐃᐃ += 16 > ᐃΔⵠⲆ ? "0" + ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](ⲆⵠⵠⲆᐃⵠᐃ) : ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](16);
		var ᐃΔⵠⲆ = Math.floor(ᐃⲆᐃⵠ * ⲆⵠΔΔΔᐃⲆᐃᐃ + ΔΔⲆᐃⵠⵠⵠᐃΔ * (1 - ᐃⲆᐃⵠ));
		ᐃᐃ += 16 > ᐃΔⵠⲆ ? "0" + ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](16) : ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](16);
		var ᐃΔⵠⲆ = Math.floor(ᐃΔᐃᐃᐃᐃⲆᐃᐃ * ᐃⲆᐃⵠ + ⲆⵠΔⵠΔΔⲆᐃⲆ * (1 - ᐃⲆᐃⵠ));
		ᐃᐃ += ᐃΔⵠⲆ < 16 ? "0" + ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](16) : ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[274]](ᐃΔᐃⲆⵠΔⲆ);
		return ᐃᐃ
	}

	function ᐃᐃΔΔⵠⵠᐃ(ⲆⵠΔᐃΔ, ⲆⲆᐃⵠᐃ, ⵠΔΔΔᐃⲆᐃ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var Δⵠⵠᐃ = ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ + 820;
		var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ, ΔⲆᐃⲆ);
		var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ⵠΔΔΔᐃⲆᐃ - 100, ⲆΔᐃ);
		var ⵠⵠⵠⵠ = ΔᐃΔⲆΔ;
		var ⵠⵠᐃⲆᐃ = ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w1).x;
		else var ᐃⲆᐃⲆⵠ = w1.r.x;
		var ⲆΔⲆᐃ = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = ⲆΔⲆᐃ,
			ⲆᐃⲆⲆΔ = ⵠⵠⵠⵠ,
			ᐃⲆⲆⲆΔ = -ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ⲆΔⵠΔⲆ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += -ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ + 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w2).x;
		else var ᐃⲆᐃⲆⵠ = w2.r.x;
		var d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ - ᐃⲆᐃⲆⵠ;
		var ⵠᐃΔⲆᐃ = ⲆΔⲆᐃ,
			ΔᐃⲆⵠΔ = ⵠⵠⵠⵠ,
			ⵠᐃᐃᐃⵠ = d2,
			ⵠⲆΔⵠΔ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += d2 + 2;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - ⲆⲆⵠΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w3).x;
		else var ᐃⲆᐃⲆⵠ = w3.r.x;
		d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ - ᐃⲆᐃⲆⵠ;
		if (ⲆΔⲆᐃ + d2 < ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = Δⵠⵠⵠⵠ;
			var ᐃⲆᐃΔᐃ = ⲆΔⲆᐃ,
				ΔᐃᐃⲆⲆ = ⵠⵠⵠⵠ,
				ᐃΔⲆⲆⲆ = d2,
				ⵠⵠⵠΔⵠ = ⵠⵠᐃⲆᐃ;
			ⲆΔⲆᐃ += d2 + 2;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = ΔᐃⲆⵠⲆ;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -ⵠⵠⲆΔ
		}
		d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ > ᐃⵠΔ && 1 === ΔΔΔΔ.ⵠᐃⲆⵠⲆⵠΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 77, 72, 252, 239, 187, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⲆⵠⲆⲆⲆⲆ[ⲆΔΔ.time];
			Ⲇ.fillRect(ⲆΔⲆᐃ, ⵠⵠⵠⵠ, d2, ⵠⵠᐃⲆᐃ)
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ΔΔΔΔ.ⲆΔⵠ[0], ΔΔΔΔ.ⲆΔⵠ[1], ΔΔΔΔ.ⲆΔⵠ[ⵠⲆⵠᐃ], ΔΔΔΔ.ⲆⲆΔ[ᐃⵠΔ], ΔΔΔΔ.ⲆⲆΔ[1], ΔΔΔΔ.ⲆⲆΔ[2], ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = ΔΔΔΔ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
			Ⲇ.fillRect(ⲆΔⲆᐃ, ⵠⵠⵠⵠ, d2, ⵠⵠᐃⲆᐃ)
		}
	}

	function ᐃᐃᐃⲆⲆⵠⵠ() {
		for (var ᐃⲆ = ⲆΔΔ.ⵠⵠⵠⲆⲆ.length - 1; ᐃⲆ >= 0; ᐃⲆ--) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
			if (ⲆΔΔ.ⲆⵠᐃⵠΔ === ΔΔΔΔ.ᐃⲆⵠ) {
				var ⵠΔⵠ = ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ];
				if (-ⲆΔⲆ.ⵠΔΔ.x >= ΔΔΔΔ.x1 - 230 - Ⲇⵠⵠⵠ && -ⲆΔⲆ.ⵠΔΔ.x <= ΔΔΔΔ.x2 + 330 && -ⲆΔⲆ.ⵠΔΔ.y >= ΔΔΔΔ.y1 - ᐃΔⲆᐃ && -ⲆΔⲆ.ⵠΔΔ.y <= ΔΔΔΔ.y2 + 100) {
					var ⵠᐃⵠⵠ = ΔΔΔΔ.x2;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) ⵠᐃⵠⵠ -= 610;
					var ⲆᐃΔᐃ = ΔΔΔΔ.x1;
					ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (ⲆᐃΔᐃ += 610);
					var ΔⲆⲆⲆ = ΔΔΔΔ.y2;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) ΔⲆⲆⲆ -= 610;
					var Δᐃᐃⵠ = ΔΔΔΔ.y1;
					if (ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ) Δᐃᐃⵠ += 610;
					if (ⲆΔΔ.transition) {
						var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
						Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ⵠΔⵠ.ⲆΔⵠ[0], ⵠΔⵠ.ⲆΔⵠ[1], ⵠΔⵠ.ⲆΔⵠ[ᐃᐃΔⵠ], ⵠΔⵠ.ⲆⲆΔ[0], ⵠΔⵠ.ⲆⲆΔ[ⲆᐃⲆⲆ], ⵠΔⵠ.ⲆⲆΔ[1], ᐃⲆᐃⵠ)
					} else Ⲇ.fillStyle = ⵠΔⵠ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
					var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆᐃΔᐃ - ΔⲆⲆᐃ - 230, 0);
					var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ⵠᐃⵠⵠ - 330 - 2, 0);
					var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + Δᐃᐃⵠ - ᐃⲆⵠᐃ, 0);
					var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ΔⲆⲆⲆ - ⵠᐃⵠⵠΔ - 2, 0);
					Ⲇ.beginPath();
					Ⲇ.fillRect(ᐃΔΔΔⵠ, ΔᐃΔⲆΔ, Ⲇⵠⵠⵠ - ⲆΔΔᐃΔ - ᐃΔΔΔⵠ, ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ)
				}
			}
		}
		for (var ᐃⲆ = ⲆΔΔ.ⵠⵠⵠⲆⲆ.length - 1; ⵠⲆⲆᐃ <= ᐃⲆ; ᐃⲆ--) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
			if (ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ) {
				var ⵠᐃⵠⵠ = ΔΔΔΔ.x2;
				if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) ⵠᐃⵠⵠ -= 400;
				var ⲆᐃΔᐃ = ΔΔΔΔ.x1;
				if (ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ) ⲆᐃΔᐃ += 400;
				var ΔⲆⲆⲆ = ΔΔΔΔ.y2;
				ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (ΔⲆⲆⲆ -= 300);
				var Δᐃᐃⵠ = ΔΔΔΔ.y1;
				ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ && (Δᐃᐃⵠ += 300);
				if (ΔΔⵠᐃ === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ) && ⵠᐃⵠⵠ - Ⲇⵠⵠⵠ + 120 <= -ⲆΔⲆ.ⵠΔΔ.x && ⵠᐃⵠⵠ + 820 >= -ⲆΔⲆ.ⵠΔΔ.x && Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ <= -ⲆΔⲆ.ⵠΔΔ.y && ΔⲆⲆⲆ + 50 >= -ⲆΔⲆ.ⵠΔΔ.y) {
					ᐃᐃΔΔⵠⵠᐃ(ⵠᐃⵠⵠ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[ᐃⵠΔ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ);
					ⵠⵠΔⵠⲆᐃⵠ(ⵠᐃⵠⵠ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[ⲆⲆⲆ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ)
				}
				if (0 === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) && ⲆᐃΔᐃ - Ⲇⵠⵠⵠ - 700 <= -ⲆΔⲆ.ⵠΔΔ.x && ⲆᐃΔᐃ - 20 >= -ⲆΔⲆ.ⵠΔΔ.x && Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ <= -ⲆΔⲆ.ⵠΔΔ.y && ΔⲆⲆⲆ + 50 >= -ⲆΔⲆ.ⵠΔΔ.y) {
					ᐃⲆⲆⲆⵠⲆΔ(ⲆᐃΔᐃ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[ⲆΔᐃⲆ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ);
					ⵠⲆⲆⵠΔᐃᐃ(ⲆᐃΔᐃ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[ⲆΔᐃⲆ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ)
				}
				if (0 === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ) && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ && -ⲆΔⲆ.ⵠΔΔ.x <= ⵠᐃⵠⵠ + 350 && ΔⲆⲆⲆ - ᐃΔⲆᐃ - 275 <= -ⲆΔⲆ.ⵠΔΔ.y && ΔⲆⲆⲆ + 490 >= -ⲆΔⲆ.ⵠΔΔ.y) {
					ⵠⵠᐃⵠⵠᐃⲆ(ΔⲆⲆⲆ - 230, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[2], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ);
					ⵠⲆⵠⲆⲆⲆⲆ(ΔⲆⲆⲆ - 230, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[2], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ)
				}
				if ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) === 0 && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ && ⵠᐃⵠⵠ + 350 >= -ⲆΔⲆ.ⵠΔΔ.x && -ⲆΔⲆ.ⵠΔΔ.y >= Δᐃᐃⵠ - ᐃΔⲆᐃ - 390 && -ⲆΔⲆ.ⵠΔΔ.y <= Δᐃᐃⵠ + 315) {
					ᐃⵠⵠⲆᐃᐃΔ(Δᐃᐃⵠ + 310, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[ΔⲆΔⵠ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ);
					ᐃᐃⲆⵠⲆΔᐃ(Δᐃᐃⵠ + 310, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[3], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ)
				}
			}
		}
		for (var ᐃⲆ = ⲆΔΔ.ⵠⵠⵠⲆⲆ.length - 1; 0 <= ᐃⲆ; ᐃⲆ--) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
			if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) {
				var ⵠᐃⵠⵠ = ΔΔΔΔ.x2;
				ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (ⵠᐃⵠⵠ -= 400);
				var ⲆᐃΔᐃ = ΔΔΔΔ.x1;
				if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) ⲆᐃΔᐃ += 400;
				var ΔⲆⲆⲆ = ΔΔΔΔ.y2;
				ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ && (ΔⲆⲆⲆ -= 300);
				var Δᐃᐃⵠ = ΔΔΔΔ.y1;
				ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ && (Δᐃᐃⵠ += 300);
				if (0 !== (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ) && ⵠᐃⵠⵠ - Ⲇⵠⵠⵠ + 120 <= -ⲆΔⲆ.ⵠΔΔ.x && ⵠᐃⵠⵠ + 820 >= -ⲆΔⲆ.ⵠΔΔ.x && Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ <= -ⲆΔⲆ.ⵠΔΔ.y && -ⲆΔⲆ.ⵠΔΔ.y <= ΔⲆⲆⲆ + 50) {
					ᐃᐃΔΔⵠⵠᐃ(ⵠᐃⵠⵠ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[0], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ)
				}
				if ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) !== ΔΔᐃ && ⲆᐃΔᐃ - Ⲇⵠⵠⵠ - 700 <= -ⲆΔⲆ.ⵠΔΔ.x && ⲆᐃΔᐃ - ᐃⵠᐃΔ >= -ⲆΔⲆ.ⵠΔΔ.x && Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ <= -ⲆΔⲆ.ⵠΔΔ.y && ΔⲆⲆⲆ + 50 >= -ⲆΔⲆ.ⵠΔΔ.y) {
					ᐃⲆⲆⲆⵠⲆΔ(ⲆᐃΔᐃ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[1], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ)
				}(ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ) !== ΔⲆⵠ && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ && -ⲆΔⲆ.ⵠΔΔ.x <= ⵠᐃⵠⵠ + 350 && ΔⲆⲆⲆ - ᐃΔⲆᐃ - 275 <= -ⲆΔⲆ.ⵠΔΔ.y && ΔⲆⲆⲆ + 490 >= -ⲆΔⲆ.ⵠΔΔ.y && ⵠⵠᐃⵠⵠᐃⲆ(ΔⲆⲆⲆ - 230, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[2], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ);
				0 !== (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ && ⵠᐃⵠⵠ + 350 >= -ⲆΔⲆ.ⵠΔΔ.x && Δᐃᐃⵠ - ᐃΔⲆᐃ - 390 <= -ⲆΔⲆ.ⵠΔΔ.y && -ⲆΔⲆ.ⵠΔΔ.y <= Δᐃᐃⵠ + 315 && ᐃⵠⵠⲆᐃᐃΔ(Δᐃᐃⵠ + 310, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[3], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ)
			}
		}
		for (var ᐃⲆ = ⲆΔΔ.ⵠⵠⵠⲆⲆ.length - ᐃⲆⵠΔ; ᐃⲆ >= ⵠⵠᐃⵠ; ᐃⲆ--) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
			if (ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ) {
				var ⵠΔⵠ = ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ];
				if (ΔΔΔΔ.x1 - 230 - Ⲇⵠⵠⵠ <= -ⲆΔⲆ.ⵠΔΔ.x && -ⲆΔⲆ.ⵠΔΔ.x <= ΔΔΔΔ.x2 + 330 && -ⲆΔⲆ.ⵠΔΔ.y >= ΔΔΔΔ.y1 - ᐃΔⲆᐃ && -ⲆΔⲆ.ⵠΔΔ.y <= ΔΔΔΔ.y2 + 100) {
					var ⵠᐃⵠⵠ = ΔΔΔΔ.x2;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) {
						if (0 === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ)) ⵠᐃⵠⵠ -= 414;
						else ⵠᐃⵠⵠ -= 610
					}
					var ⲆᐃΔᐃ = ΔΔΔΔ.x1;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) {
						(ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) === Δⵠⵠ ? ⲆᐃΔᐃ += 414 : ⲆᐃΔᐃ += 610
					}
					var ΔⲆⲆⲆ = ΔΔΔΔ.y2;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) {
						if (0 === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ)) ΔⲆⲆⲆ -= 414;
						else ΔⲆⲆⲆ -= 610
					}
					var Δᐃᐃⵠ = ΔΔΔΔ.y1;
					if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) {
						if ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) === ᐃΔⵠⵠ) Δᐃᐃⵠ += 414;
						else Δᐃᐃⵠ += 610
					}
					if (ⲆΔΔ.transition) {
						var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
						Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ⵠΔⵠ.ⲆΔⵠ[ⲆⵠⲆ], ⵠΔⵠ.ⲆΔⵠ[ⲆᐃⲆⲆ], ⵠΔⵠ.ⲆΔⵠ[2], ⵠΔⵠ.ⲆⲆΔ[ΔⲆⵠ], ⵠΔⵠ.ⲆⲆΔ[1], ⵠΔⵠ.ⲆⲆΔ[2], ᐃⲆᐃⵠ)
					} else Ⲇ.fillStyle = ⵠΔⵠ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
					var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆᐃΔᐃ - ᐃΔⲆⲆⵠ - 230, 0);
					var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ⵠᐃⵠⵠ - 330 - ⵠΔⲆΔ, 0);
					var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + Δᐃᐃⵠ - ⵠᐃⵠΔ, 0);
					var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ΔⲆⲆⲆ - 100 - ⵠᐃᐃⵠ, 0);
					Ⲇ.beginPath();
					Ⲇ.fillRect(ᐃΔΔΔⵠ, ΔᐃΔⲆΔ, Ⲇⵠⵠⵠ - ⲆΔΔᐃΔ - ᐃΔΔΔⵠ, ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ)
				}
			}
		}
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ) {
			ⲆᐃⵠᐃΔ(ⵠᐃΔⵠⲆⵠⵠ, ⵠΔᐃⵠΔⲆⵠ, ΔⲆⵠⵠᐃⵠᐃ, ⲆⵠⵠⵠⲆᐃⲆ, ⵠΔⵠᐃΔⲆⵠ, Δ.ⵠⵠᐃⲆⵠ, ⵠ[398], 2);
			ⲆᐃⵠᐃΔ(ⵠᐃΔⵠⲆⵠⵠ, ⵠΔᐃⵠΔⲆⵠ, ΔⲆⵠⵠᐃⵠᐃ, ⲆⵠⵠⵠⲆᐃⲆ, ⵠΔⵠᐃΔⲆⵠ, Δ.ⲆⲆⲆⲆⲆ, ⵠ[398], ⵠⲆΔΔ)
		}
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ⵠΔᐃⵠΔⲆⵠ, ΔⲆⵠⵠᐃⵠᐃ, ⲆⵠⵠⵠⲆᐃⲆ, ⵠΔⵠᐃΔⲆⵠ, Δ.ᐃΔΔΔΔ, ⵠ[398], 2);
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ) ⲆᐃⵠᐃΔ(ᐃΔᐃⵠⵠⲆⲆᐃᐃ, ⵠΔᐃⵠΔⲆⵠ, ΔⲆⵠⵠᐃⵠᐃ, ⲆⵠⵠⵠⲆᐃⲆ, ⵠΔⵠᐃΔⲆⵠ, Δ.ⵠⵠⲆᐃⲆᐃⵠ, ⵠ[ᐃⵠΔⲆⵠⲆⲆ]);
		var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			for (var ΔΔΔ = 0; ⵠΔᐃ.ⵠΔⵠⲆΔ.length > ΔΔΔ; ΔΔΔ++) ᐃⵠΔⵠΔⲆⲆΔⵠ(ⵠΔᐃ.ⵠΔⵠⲆΔ[ΔΔΔ])
		}
		ᐃⵠⵠⵠΔⵠᐃ += ᐃᐃΔⲆ * 40;
		if (ᐃⵠⵠⵠΔⵠᐃ > 60) ᐃⵠⵠⵠΔⵠᐃ -= 60;
		ⲆᐃⵠᐃΔ(ⵠⵠᐃΔⲆΔⲆΔⲆ, ⵠΔᐃⵠΔⲆⵠ, ΔⲆⵠⵠᐃⵠᐃ, ⲆⵠⵠⵠⲆᐃⲆ, ⵠΔⵠᐃΔⲆⵠ, Δ.ⲆΔΔΔ, "r", 0);
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ⲆΔΔ.ⵠⵠⵠⲆⲆ.length; ᐃⲆ++) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
			if (ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ) {
				var ⵠᐃⵠⵠ = ΔΔΔΔ.x2;
				ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (ⵠᐃⵠⵠ -= 400);
				var ⲆᐃΔᐃ = ΔΔΔΔ.x1;
				ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (ⲆᐃΔᐃ += 400);
				var ΔⲆⲆⲆ = ΔΔΔΔ.y2;
				if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) ΔⲆⲆⲆ -= 300;
				var Δᐃᐃⵠ = ΔΔΔΔ.y1;
				ⲆΔΔ.ⲆⵠᐃⵠΔ !== ΔΔΔΔ.ᐃⲆⵠ && (Δᐃᐃⵠ += 300);
				(ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ) > 0 && -ⲆΔⲆ.ⵠΔΔ.x >= ⵠᐃⵠⵠ - Ⲇⵠⵠⵠ + 120 && -ⲆΔⲆ.ⵠΔΔ.x <= ⵠᐃⵠⵠ + 820 && -ⲆΔⲆ.ⵠΔΔ.y >= Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ && ΔⲆⲆⲆ + 50 >= -ⲆΔⲆ.ⵠΔΔ.y && ⵠⵠΔⵠⲆᐃⵠ(ⵠᐃⵠⵠ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[0], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ);
				(ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) > ΔⵠⲆΔ && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - Ⲇⵠⵠⵠ - 700 && -ⲆΔⲆ.ⵠΔΔ.x <= ⲆᐃΔᐃ - ΔⲆΔᐃ && -ⲆΔⲆ.ⵠΔΔ.y >= Δᐃᐃⵠ + 88 - ᐃΔⲆᐃ && -ⲆΔⲆ.ⵠΔΔ.y <= ΔⲆⲆⲆ + 50 && ⵠⲆⲆⵠΔᐃᐃ(ⲆᐃΔᐃ, Δᐃᐃⵠ + 88, ΔⲆⲆⲆ - 88, ⲆΔⲆ.Δⵠᐃᐃ[ⵠⵠⲆΔ], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ);
				if (0 < (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ) && ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ <= -ⲆΔⲆ.ⵠΔΔ.x && ⵠᐃⵠⵠ + 350 >= -ⲆΔⲆ.ⵠΔΔ.x && -ⲆΔⲆ.ⵠΔΔ.y >= ΔⲆⲆⲆ - ᐃΔⲆᐃ - 275 && ΔⲆⲆⲆ + 490 >= -ⲆΔⲆ.ⵠΔΔ.y) ⵠⲆⵠⲆⲆⲆⲆ(ΔⲆⲆⲆ - 230, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[2], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ);
				ⵠⵠᐃⵠ < (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) && -ⲆΔⲆ.ⵠΔΔ.x >= ⲆᐃΔᐃ - 235 - Ⲇⵠⵠⵠ && ⵠᐃⵠⵠ + 350 >= -ⲆΔⲆ.ⵠΔΔ.x && -ⲆΔⲆ.ⵠΔΔ.y >= Δᐃᐃⵠ - ᐃΔⲆᐃ - 390 && Δᐃᐃⵠ + 315 >= -ⲆΔⲆ.ⵠΔΔ.y && ᐃᐃⲆⵠⲆΔᐃ(Δᐃᐃⵠ + 310, ⲆᐃΔᐃ - 230, ⵠᐃⵠⵠ + 230, ⲆΔⲆ.Δⵠᐃᐃ[3], ⲆΔΔ.ᐃⵠΔⲆᐃ[ΔΔΔΔ.ᐃⲆⵠ], ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ)
			}
		}
	}

	function ΔΔΔᐃ(ⵠⲆⵠ, ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ) {
		if (ⲆΔΔ.transition) {
			Ⲇ.globalAlpha = 1;
			ⵠⲆⵠ.ⲆⵠᐃⲆ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1;
			Ⲇ.globalAlpha = ΔⲆᐃ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			ⵠⲆⵠ.ⲆⵠᐃⲆ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ);
			ⲆΔΔ.time = ⲆΔΔ.time ? Δⵠⵠ : 1;
			Ⲇ.globalAlpha = 1
		} else ⵠⲆⵠ.ⲆⵠᐃⲆ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ)
	}

	function ᐃᐃⵠᐃⲆ(ⲆΔ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ) {
		var ᐃᐃⲆ = ⵠⵠ.width;
		var ΔᐃⲆ = ⵠⵠ.height;
		var w2 = Math.floor(ᐃᐃⲆ / 2);
		var ⵠⵠᐃⵠⵠ = Math.floor(ΔᐃⲆ / 2);
		if (ⲆΔΔ.transition) {
			Ⲇ.globalAlpha = 1;
			ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time], 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1;
			Ⲇ.globalAlpha = ΔΔⵠΔⵠ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time], ΔⵠⲆⲆ, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : ⵠⲆⲆ;
			Ⲇ.globalAlpha = 1
		} else ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ΔⲆⵠ, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ)
	}

	function ᐃⵠⲆΔⵠⵠᐃᐃⲆ() {
		Ⲇ.globalAlpha = ΔᐃᐃⲆ;
		if (ⲆΔΔ.transition) var ⵠᐃⵠⵠᐃ = ⲆΔΔ.ᐃⲆᐃⵠ.ⵠᐃⵠ();
		ⲆΔΔ.ⲆΔⲆΔΔᐃⲆΔⲆ(-ⲆΔⲆ.ⵠΔΔ.x, -ⲆΔⲆ.ⵠΔΔ.y);
		ⲆⵠⵠⵠⲆᐃⲆ = Math.max(Math.floor(-ⲆΔⲆ.ⵠΔΔ.x / ⲆΔΔ.ᐃⲆΔΔⵠⲆΔ) - 5, 0);
		ⵠΔⵠᐃΔⲆⵠ = Math.min(Math.floor((-ⲆΔⲆ.ⵠΔΔ.x + ⲆΔⲆ.ⵠΔΔ.w) / ⲆΔΔ.ᐃⲆΔΔⵠⲆΔ) + 4, ⲆΔΔ.Δᐃᐃⵠⵠ - 1);
		ⵠΔᐃⵠΔⲆⵠ = Math.max(Math.floor(-ⲆΔⲆ.ⵠΔΔ.y / ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ) - 3, ⵠᐃⲆᐃ);
		ΔⲆⵠⵠᐃⵠᐃ = Math.min(Math.floor((-ⲆΔⲆ.ⵠΔΔ.y + ⲆΔⲆ.ⵠΔΔ.ΔᐃⲆ) / ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ) + 3, ⲆΔΔ.ΔⲆᐃⵠⵠ - 1);
		ᐃᐃᐃⲆⲆⵠⵠ();
		ΔⵠᐃΔⲆⲆⵠΔΔ();
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃΔⲆⵠⵠ && ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ !== ⲆΔΔ.mode) {
			ΔⲆᐃⲆⲆⲆⲆⲆⲆ();
			ⵠᐃⵠΔᐃᐃΔⲆΔ();
			ᐃΔΔᐃΔⲆⲆᐃⲆ()
		}
		if (ⲆΔΔ.transition) {
			ⵠᐃⵠⵠᐃ && (ⲆΔΔ.transition = false, ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ = ⲆⲆⲆ, ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⲆⵠ = ΔⲆⵠᐃⵠ)
		}
	}

	function ⵠΔⵠΔΔⲆⵠ(ⵠⲆⵠ, ⵠⵠⵠ) {
		ⲆΔΔ.transition ? (Ⲇ.globalAlpha = 1, ⵠⲆⵠ.ⵠᐃΔⵠΔ(ⵠⵠⵠ), ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1, Ⲇ.globalAlpha = ᐃⵠⵠ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ, ⵠⲆⵠ.ⵠᐃΔⵠΔ(ⵠⵠⵠ), ⲆΔΔ.time = ⲆΔΔ.time ? Ⲇᐃⵠᐃ : 1, Ⲇ.globalAlpha = 1) : ⵠⲆⵠ.ⵠᐃΔⵠΔ(ⵠⵠⵠ)
	}

	function ⵠⵠⲆⲆⲆ(ⲆΔ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ) {
		ⲆΔΔ.transition ? (Ⲇ.globalAlpha = ΔΔᐃᐃ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time], ᐃᐃΔ, ᐃⲆᐃ), ⲆΔΔ.time = ⲆΔΔ.time ? ΔᐃⲆΔ : ⲆᐃⲆⲆ, Ⲇ.globalAlpha = 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time], ᐃᐃΔ, ᐃⲆᐃ), ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1, Ⲇ.globalAlpha = 1) : ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ)
	}

	function ᐃⲆⲆⲆⵠⲆΔ(ⲆⵠΔᐃΔ, ⲆⲆᐃⵠᐃ, ⵠΔΔΔᐃⲆᐃ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var Δⵠⵠᐃ = ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ - 700;
		var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ, 0);
		var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ⵠΔΔΔᐃⲆᐃ - ᐃⵠΔⲆⲆ, ΔⵠⲆⲆ);
		var ⵠⵠⵠⵠ = ΔᐃΔⲆΔ;
		var ⵠⵠᐃⲆᐃ = ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w1).x;
		else var ᐃⲆᐃⲆⵠ = w1.r.x;
		var ⲆΔⲆᐃ = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = ⲆΔⲆᐃ,
			ⲆᐃⲆⲆΔ = ⵠⵠⵠⵠ,
			ᐃⲆⲆⲆΔ = ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ⲆΔⵠΔⲆ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ - ⵠⵠΔⲆ;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w2).x;
		else var ᐃⲆᐃⲆⵠ = w2.r.x;
		var d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ + ᐃⲆᐃⲆⵠ;
		var ⵠᐃΔⲆᐃ = ⲆΔⲆᐃ,
			ΔᐃⲆⵠΔ = ⵠⵠⵠⵠ,
			ⵠᐃᐃᐃⵠ = d2,
			ⵠⲆΔⵠΔ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += d2 - 2;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - 2;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w3).x;
		else var ᐃⲆᐃⲆⵠ = w3.r.x;
		d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ + ᐃⲆᐃⲆⵠ;
		if (ⲆΔⲆᐃ + d2 - ᐃⲆⲆᐃΔ > ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = ⲆΔᐃⲆⲆ;
			var ᐃⲆᐃΔᐃ = ⲆΔⲆᐃ,
				ΔᐃᐃⲆⲆ = ⵠⵠⵠⵠ,
				ᐃΔⲆⲆⲆ = d2,
				ⵠⵠⵠΔⵠ = ⵠⵠᐃⲆᐃ;
			ⲆΔⲆᐃ += d2 - 2;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = false;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -ΔΔᐃⵠ
		}
		d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (0 < ⲆᐃⲆΔ && ΔΔΔΔ.ⵠᐃⲆⵠⲆⵠΔ === 1) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 77, 72, 252, 239, 187, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⲆⵠⲆⲆⲆⲆ[ⲆΔΔ.time];
			Ⲇ.fillRect(ⲆΔⲆᐃ, ⵠⵠⵠⵠ, d2, ⵠⵠᐃⲆᐃ)
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ΔΔΔΔ.ⲆΔⵠ[0], ΔΔΔΔ.ⲆΔⵠ[ᐃⵠⵠ], ΔΔΔΔ.ⲆΔⵠ[2], ΔΔΔΔ.ⲆⲆΔ[ΔΔⵠᐃ], ΔΔΔΔ.ⲆⲆΔ[ᐃⵠⵠ], ΔΔΔΔ.ⲆⲆΔ[ᐃⲆⵠᐃ], ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = ΔΔΔΔ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
			Ⲇ.fillRect(ⲆΔⲆᐃ, ⵠⵠⵠⵠ, d2, ⵠⵠᐃⲆᐃ)
		}
	}

	function ΔⵠᐃΔⲆⲆⵠΔΔ() {
		var ⵠᐃΔΔ = ⲆⵠⵠⵠⲆᐃⲆ;
		var ᐃⵠⵠᐃ = ⵠΔⵠᐃΔⲆⵠ;
		var ΔⲆᐃᐃ = ⵠΔᐃⵠΔⲆⵠ;
		var ⲆⲆᐃⲆ = ΔⲆⵠⵠᐃⵠᐃ;
		ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠⲆᐃΔ, "l", 2);
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ) ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃᐃⲆ, ⵠ[220], 5);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠΔⲆⵠ, ⵠ[220], ⲆᐃΔΔΔ);
		ⲆᐃⵠᐃΔ(ⵠᐃΔⵠⲆⵠⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔΔᐃⲆⵠ, "l", ⵠⲆΔΔ);
		ᐃᐃΔΔ.ΔⲆⵠⲆΔ && (ⲆᐃⵠᐃΔ(ⲆᐃⲆΔⲆⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠΔⲆⵠ, ⵠ[220], 5), ⲆᐃⵠᐃΔ(ⵠᐃΔⵠⲆⵠⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⲆⲆⲆⵠ, "l", ⵠⲆΔΔ));
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⲆⲆΔΔ, "ma", 4);
		var ΔⵠⵠⲆⵠᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ];
		for (var ᐃⲆ = 0; ΔⵠⵠⲆⵠᐃⵠ.length > ᐃⲆ; ᐃⲆ++) ΔⵠⵠⲆⵠᐃⵠ[ᐃⲆ].ᐃᐃᐃⲆⲆⵠⵠ();
		var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			for (var ΔΔΔ = ΔΔᐃ; ⵠΔᐃ.ΔⲆᐃᐃⵠ.length > ΔΔΔ; ΔΔΔ++) ⵠΔᐃⲆΔⲆⵠⲆᐃ(ⵠΔᐃ.ΔⲆᐃᐃⵠ[ΔΔΔ])
		}
		var ⵠᐃⲆᐃΔⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ⵠᐃⲆᐃΔⵠⵠ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠᐃⲆᐃΔⵠⵠ[ᐃⲆ], Δ.ⲆΔᐃΔΔ);
			ⵠᐃⲆᐃΔⵠⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠᐃⲆᐃΔⵠⵠ[ᐃⲆ].info)
		}
		var ᐃⵠᐃⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠᐃⵠⵠ.length; ᐃⲆ++) {
			ᐃⵠᐃⵠⵠ[ᐃⲆ].action == ⵠΔⲆΔ && ᐃⵠᐃⵠⲆΔⲆ(ᐃⵠᐃⵠⵠ[ᐃⲆ])
		}
		var ᐃᐃⵠⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃᐃⵠⲆΔ.length; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ᐃᐃⵠⲆΔ[ᐃⲆ], Δ.ᐃᐃᐃΔⲆᐃⵠ);
		var ᐃΔᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ];
		for (var ᐃⲆ = 0; ᐃΔᐃⵠᐃ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ᐃΔᐃⵠᐃ[ᐃⲆ]);
		var ⵠⲆⵠⲆΔΔᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔΔΔΔ];
		for (var ᐃⲆ = 0; ⵠⲆⵠⲆΔΔᐃ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ⵠⲆⵠⲆΔΔᐃ[ᐃⲆ]);
		var ⵠⲆΔⲆᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃΔΔ];
		for (var ᐃⲆ = ⵠⵠⲆⲆ; ⵠⲆΔⲆᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ⵠⲆΔⲆᐃⲆⵠ[ᐃⲆ], Δ.ΔΔΔΔᐃⲆⵠ);
		var ΔΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ];
		for (var ᐃⲆ = 0; ΔΔᐃΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔΔᐃΔ[ᐃⲆ]);
		var ⵠⵠⲆⲆᐃΔᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃ];
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ⵠⵠⲆⲆᐃΔᐃ.length; ᐃⲆ++) ΔΔΔᐃ(ⵠⵠⲆⲆᐃΔᐃ[ᐃⲆ], Δ.ⵠᐃⲆᐃᐃ);
		var ⵠⲆΔⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠᐃ];
		for (var ᐃⲆ = 0; ⵠⲆΔⵠⵠ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ⵠⲆΔⵠⵠ[ᐃⲆ]);
		var ⵠⲆΔⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆᐃ];
		for (var ᐃⲆ = ΔΔᐃ; ᐃⲆ < ⵠⲆΔⵠⵠ.length; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ⵠⲆΔⵠⵠ[ᐃⲆ]);
		var ⵠⲆΔⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠᐃ];
		for (var ᐃⲆ = 0; ⵠⲆΔⵠⵠ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ⵠⲆΔⵠⵠ[ᐃⲆ]);
		var ⵠᐃᐃⵠᐃΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⲆᐃᐃ];
		for (var ᐃⲆ = 0; ⵠᐃᐃⵠᐃΔⵠ.length > ᐃⲆ; ᐃⲆ++)((ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ].info & 15) === 0 || ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ].info === 10) && ΔΔΔᐃ(ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ]);
		var ⲆⵠⵠⲆᐃΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⲆΔⲆ];
		for (var ᐃⲆ = 0; ⲆⵠⵠⲆᐃΔΔ.length > ᐃⲆ; ᐃⲆ++)((ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ].info & 15) === Ⲇᐃⵠᐃ || ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ].info === ⲆΔⵠᐃⲆ) && ΔΔΔᐃ(ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ]);
		var ᐃⵠⲆⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃᐃΔ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ᐃⵠⲆⵠᐃ.length; ᐃⲆ++)
			if ((ᐃⵠⲆⵠᐃ[ᐃⲆ].info & 15) === ᐃΔⵠⵠ || ᐃⵠⲆⵠᐃ[ᐃⲆ].info === 10) ΔΔΔᐃ(ᐃⵠⲆⵠᐃ[ᐃⲆ]);
		var ΔⵠᐃΔΔⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆΔⲆⲆ];
		for (var ᐃⲆ = 0; ΔⵠᐃΔΔⲆⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔⵠᐃΔΔⲆⵠ[ᐃⲆ], Δ.ⵠᐃⲆΔⲆ);
		var ⲆⲆⲆⵠⵠⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠΔⵠᐃ];
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < ⲆⲆⲆⵠⵠⲆΔ.length; ᐃⲆ++)
			if ((ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ].info & 15) === ΔⵠⲆΔ || ⵠΔᐃΔⲆ === ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ].info) ΔΔΔᐃ(ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ]);
		var ⵠΔⵠΔᐃᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃⵠⲆ];
		for (var ᐃⲆ = ΔΔⵠᐃ; ᐃⲆ < ⵠΔⵠΔᐃᐃΔ.length; ᐃⲆ++)(ⲆΔᐃ === (ⵠΔⵠΔᐃᐃΔ[ᐃⲆ].info & 15) || ⵠΔⵠΔᐃᐃΔ[ᐃⲆ].info === 10) && ΔΔΔᐃ(ⵠΔⵠΔᐃᐃΔ[ᐃⲆ]);
		var ⲆᐃⲆΔⲆⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆⵠΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃⲆΔⲆⵠᐃ.length; ᐃⲆ++)
			if ((ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ].info & 15) === ΔΔⲆᐃ || ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ].info === ᐃᐃⲆᐃᐃ) ΔΔΔᐃ(ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ]);
		var ΔⵠᐃΔΔⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆΔⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔⵠᐃΔΔⲆⵠ.length; ᐃⲆ++) ΔΔΔᐃ(ΔⵠᐃΔΔⲆⵠ[ᐃⲆ]);
		if (!Settings.BoxOnTop.enabled) {
			var ΔᐃⲆⲆⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⲆⵠᐃ];
			for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⲆⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ΔᐃⲆⲆⲆ[ᐃⲆ], Δ.ΔΔⲆⵠᐃ, Δ.ⵠΔⲆⲆᐃⲆΔ);
			var ⵠⵠᐃⵠⲆⲆⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ];
			for (var ᐃⲆ = 0; ⵠⵠᐃⵠⲆⲆⲆ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⵠⵠᐃⵠⲆⲆⲆ[ᐃⲆ], Δ.ΔΔⲆⵠᐃ, Δ.ⵠΔⲆⲆᐃⲆΔ);
			var ᐃⲆⵠⲆⵠᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆΔⵠᐃ];
			for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆⵠⲆⵠᐃⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⲆⵠⲆⵠᐃⵠ[ᐃⲆ], Δ.ⲆⲆΔⵠᐃ, Δ.ΔΔⲆᐃΔⲆΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			ΔᐃⲆⵠ[ᐃⲆ].info & ⲆⲆΔᐃ && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ᐃΔⲆⵠΔΔⲆ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			ΔᐃⲆⵠ[ᐃⲆ].info & 1 && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⲆᐃᐃᐃᐃⲆⲆ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⵠᐃΔΔᐃᐃᐃ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			ΔᐃⲆⵠ[ᐃⲆ].info && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ΔⲆⲆⵠΔⲆΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔΔΔ];
		for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⲆΔⲆⵠⲆᐃΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃⲆⵠ];
		for (var ᐃⲆ = ⲆΔᐃ; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⵠᐃΔΔᐃᐃᐃ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔⵠ];
		for (var ᐃⲆ = ΔⲆⵠ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			ΔᐃⲆⵠ[ᐃⲆ].info & ᐃⲆⵠΔ && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ᐃΔⲆⵠΔΔⲆ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃᐃⲆⵠ];
		for (var ᐃⲆ = 0; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info & ᐃⵠⵠ) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⲆᐃᐃᐃᐃⲆⲆ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ];
		for (var ᐃⲆ = ⲆΔᐃ; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⵠᐃΔΔᐃᐃᐃ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃΔᐃ];
		for (var ᐃⲆ = ⲆⵠⲆ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ΔⲆⲆⵠΔⲆΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⵠᐃΔ];
		for (var ᐃⲆ = 0; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			ΔᐃⲆⵠ[ᐃⲆ].info && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⲆΔⲆⵠⲆᐃΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ];
		for (var ᐃⲆ = ΔΔᐃ; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃⲆⵠ[ᐃⲆ].info) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Δ.ⵠᐃΔΔᐃᐃᐃ)
		}
		var ΔⲆᐃᐃⲆⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔΔᐃᐃ];
		for (var ᐃⲆ = 0; ΔⲆᐃᐃⲆⵠΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔⲆᐃᐃⲆⵠΔ[ᐃⲆ], Δ.ᐃΔΔᐃᐃ, Δ.ⵠⲆᐃⵠⵠⵠⵠ);
		var ᐃΔΔⵠᐃⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃⲆⵠ];
		for (var ᐃⲆ = ⵠⲆⲆᐃ; ᐃⲆ < ᐃΔΔⵠᐃⲆᐃ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃΔΔⵠᐃⲆᐃ[ᐃⲆ], Δ.ⵠᐃᐃⲆⵠ);
		var ΔⵠⵠⲆⵠᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ];
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ΔⵠⵠⲆⵠᐃⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔⵠⵠⲆⵠᐃⵠ[ᐃⲆ], Δ.ⵠᐃⲆᐃᐃΔⲆ, Δ.ΔΔⵠⵠⲆⲆΔΔᐃ);
		var ⲆⲆᐃⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ];
		for (var ᐃⲆ = ΔᐃⲆΔ; ᐃⲆ < ⲆⲆᐃⲆΔ.length; ᐃⲆ++) {
			ⲆⲆᐃⲆΔ[ᐃⲆ].ᐃᐃⵠΔⵠⵠⵠ === 0 && ΔΔΔᐃ(ⲆⲆᐃⲆΔ[ᐃⲆ])
		}
		if (!Settings.PlayerOnTop.enabled) {
			var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
			for (var ᐃⲆ = 0; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
				if (ⵠⲆ.ᐃⲆⲆⲆⲆ !== ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ᐃⲆⲆᐃⲆ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ΔᐃⲆⵠᐃ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ⲆᐃΔⲆⲆ && ⵠⲆ.ΔᐃΔⵠⵠ !== ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ) {
					if (ⵠΔᐃ.ΔΔⲆΔⲆⵠΔ === 0) {
						if (.001 < ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ) {
							ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, 0, .018);
							var ⵠⲆᐃⵠ = ᐃⵠ + .18 * Math.min(1, Math.max(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, ΔΔⲆᐃ) / 100);
							Ⲇ.save();
							Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
							ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
							ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
							ⵠΔᐃ.ⲆⵠᐃⲆ();
							ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
							ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
							Ⲇ.restore()
						} else {
							ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ = ⵠⵠⲆⲆ;
							ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
							ⵠΔᐃ.ⲆⵠᐃⲆ()
						}
					}
				} else if (ⵠΔᐃ.ΔΔᐃᐃⲆ <= 180) {
					Ⲇ.save();
					var ⵠⲆᐃⵠ = ⵠⲆⲆ + Math.min(ΔΔᐃᐃ, Math.max(ⵠΔᐃ.ᐃⲆⵠΔⲆ - 30, ΔΔⲆᐃ) / 180) * .35;
					Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
					ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
					ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ = Ⲇᐃⵠᐃ;
					ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
					ⵠΔᐃ.ⲆⵠᐃⲆ();
					ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
					ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
					Ⲇ.restore()
				}
			}
		}
		var ᐃΔΔⵠᐃⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃⲆⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃΔΔⵠᐃⲆᐃ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃΔΔⵠᐃⲆᐃ[ᐃⲆ], Δ.ᐃⲆⵠⵠⲆΔᐃ);
		var ᐃΔΔᐃΔⵠⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠᐃᐃ];
		for (var ᐃⲆ = ΔΔⲆᐃ; ᐃΔΔᐃΔⵠⲆ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃΔΔᐃΔⵠⲆ[ᐃⲆ]);
		var ⵠΔⵠⲆⲆΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔΔΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⵠΔⵠⲆⲆΔⵠ.length; ᐃⲆ++) ΔΔΔᐃ(ⵠΔⵠⲆⲆΔⵠ[ᐃⲆ], Δ.ᐃⲆΔΔΔ, Δ.ΔᐃⲆΔᐃΔⲆ);
		var ⲆⵠΔⲆⵠⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔᐃΔ];
		for (var ᐃⲆ = 0; ⲆⵠΔⲆⵠⲆᐃ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⲆⵠΔⲆⵠⲆᐃ[ᐃⲆ]);
		var ⵠΔⲆΔⵠᐃⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠΔ];
		for (var ᐃⲆ = ΔⲆⵠ; ᐃⲆ < ⵠΔⲆΔⵠᐃⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ⵠΔⲆΔⵠᐃⲆ[ᐃⲆ], Δ.ⲆⲆⲆⵠΔ, Δ.ⵠⲆᐃᐃⲆⲆⵠ);
		var ΔⵠΔⲆⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⲆⲆ];
		for (var ᐃⲆ = ⵠⵠᐃᐃΔ; ᐃⲆ < ΔⵠΔⲆⵠΔΔ.length; ᐃⲆ++) ΔΔΔᐃ(ΔⵠΔⲆⵠΔΔ[ᐃⲆ], Δ.ᐃⲆⲆⲆⲆ, Δ.ΔⵠᐃᐃΔᐃᐃ);
		var ΔⲆⲆⵠᐃⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆᐃⲆ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ΔⲆⲆⵠᐃⲆΔ.length; ᐃⲆ++) ΔΔΔᐃ(ΔⲆⲆⵠᐃⲆΔ[ᐃⲆ], Δ.ᐃⲆⲆᐃⲆ, Δ.ⲆⲆⵠΔᐃΔⵠ);
		var ⵠᐃᐃⵠᐃΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⲆᐃᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⵠᐃᐃⵠᐃΔⵠ.length; ᐃⲆ++)
			if (ⲆΔᐃ !== (ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ].info & 15) && 10 !== ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ].info) ΔΔΔᐃ(ⵠᐃᐃⵠᐃΔⵠ[ᐃⲆ]);
		var ⲆⵠⵠⲆᐃΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⲆΔⲆ];
		for (var ᐃⲆ = 0; ⲆⵠⵠⲆᐃΔΔ.length > ᐃⲆ; ᐃⲆ++)(ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ].info & 15) !== 0 && ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ].info !== 10 && ΔΔΔᐃ(ⲆⵠⵠⲆᐃΔΔ[ᐃⲆ]);
		var ᐃⵠⲆⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆᐃᐃⵠⲆ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⵠⲆⵠᐃ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠⲆⵠᐃ[ᐃⲆ], Δ.ⲆⵠᐃⲆΔ);
		var ᐃⵠⲆⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃᐃΔ];
		for (var ᐃⲆ = ⵠⵠᐃᐃΔ; ᐃⵠⲆⵠᐃ.length > ᐃⲆ; ᐃⲆ++)
			if (ⵠᐃⲆᐃ !== (ᐃⵠⲆⵠᐃ[ᐃⲆ].info & 15) && ᐃⵠⲆⵠᐃ[ᐃⲆ].info !== 10) ΔΔΔᐃ(ᐃⵠⲆⵠᐃ[ᐃⲆ]);
		var ⵠⲆΔⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆᐃ];
		for (var ᐃⲆ = Δⵠⵠ; ⵠⲆΔⵠⵠ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ⵠⲆΔⵠⵠ[ᐃⲆ]);
		var ⲆⲆⲆⵠⵠⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠΔⵠᐃ];
		for (var ᐃⲆ = ΔⵠⲆⲆ; ᐃⲆ < ⲆⲆⲆⵠⵠⲆΔ.length; ᐃⲆ++)
			if (Δⵠⵠ !== (ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ].info & 15) && 10 !== ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ].info) ΔΔΔᐃ(ⲆⲆⲆⵠⵠⲆΔ[ᐃⲆ]);
		var ⵠΔⵠΔᐃᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃⵠⲆ];
		for (var ᐃⲆ = 0; ⵠΔⵠΔᐃᐃΔ.length > ᐃⲆ; ᐃⲆ++)(ⵠΔⵠΔᐃᐃΔ[ᐃⲆ].info & 15) !== 0 && ⵠΔⵠΔᐃᐃΔ[ᐃⲆ].info !== 10 && ΔΔΔᐃ(ⵠΔⵠΔᐃᐃΔ[ᐃⲆ]);
		var ⲆᐃⲆΔⲆⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆⵠΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃⲆΔⲆⵠᐃ.length; ᐃⲆ++)
			if ((ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ].info & 15) !== ΔΔⲆᐃ && ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ].info !== 10) ΔΔΔᐃ(ⲆᐃⲆΔⲆⵠᐃ[ᐃⲆ]);
		var ΔⵠΔΔⲆⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠᐃΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔⵠΔΔⲆⵠΔ.length; ᐃⲆ++) ΔΔΔᐃ(ΔⵠΔΔⲆⵠΔ[ᐃⲆ], Δ.ⵠⲆⵠᐃΔ, Δ.ΔⵠΔᐃᐃΔⵠ);
		var ᐃⵠΔᐃΔⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⵠΔⲆ];
		for (var ᐃⲆ = 0; ᐃⵠΔᐃΔⲆΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔᐃΔⲆΔ[ᐃⲆ], Δ.ⵠΔⵠΔⲆ, Δ.ᐃΔᐃΔⲆΔΔ);
		var ᐃᐃΔΔΔⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔΔⵠ];
		for (var ᐃⲆ = 0; ᐃᐃΔΔΔⵠΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃᐃΔΔΔⵠΔ[ᐃⲆ], Δ.ΔⵠΔΔⵠ, Δ.ΔⵠⵠⲆⲆⵠⵠ);
		var ⲆᐃⲆᐃⲆᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆΔᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃⲆᐃⲆᐃⵠ.length; ᐃⲆ++) ΔΔΔᐃ(ⲆᐃⲆᐃⲆᐃⵠ[ᐃⲆ], Δ.ⵠΔⲆΔᐃ, Δ.ⵠⵠⲆΔᐃⵠⵠ);
		var ᐃⲆⵠⵠⲆⵠⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠΔ];
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ᐃⲆⵠⵠⲆⵠⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃⲆⵠⵠⲆⵠⲆ[ᐃⲆ], Δ.ᐃⲆⲆⵠΔ, Δ.ⵠⲆⵠΔⲆΔⵠ);
		var ⲆⲆᐃᐃⲆⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆΔ];
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < ⲆⲆᐃᐃⲆⲆΔ.length; ᐃⲆ++) ΔΔΔᐃ(ⲆⲆᐃᐃⲆⲆΔ[ᐃⲆ], Δ.ⵠⵠⲆⲆΔ, Δ.ⵠΔᐃᐃⲆᐃⲆ);
		var ⲆᐃΔⵠᐃᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃᐃᐃ];
		for (var ᐃⲆ = 0; ⲆᐃΔⵠᐃᐃⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⲆᐃΔⵠᐃᐃⵠ[ᐃⲆ]);
		var ⵠⵠΔΔΔᐃᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⲆⵠⵠ];
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ⵠⵠΔΔΔᐃᐃ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⵠⵠΔΔΔᐃᐃ[ᐃⲆ], Δ.ⵠᐃᐃⵠⲆⲆᐃ, Δ.ᐃᐃⵠᐃⲆᐃⲆ);
		var ΔⵠⵠⵠⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠΔΔ];
		for (var ᐃⲆ = 0; ΔⵠⵠⵠⵠΔΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔⵠⵠⵠⵠΔΔ[ᐃⲆ]);
		var ᐃᐃⵠᐃⲆⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔⵠ];
		for (var ᐃⲆ = 0; ᐃᐃⵠᐃⲆⲆⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃᐃⵠᐃⲆⲆⵠ[ᐃⲆ], Δ.ΔⵠⲆΔⵠ, Δ.ⵠⵠΔⲆΔⲆⵠ);
		var ΔᐃΔΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ];
		for (var ᐃⲆ = 0; ΔᐃΔΔⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃⵠΔ === ΔᐃΔΔⵠ[ᐃⲆ].scale) ΔΔΔᐃ(ΔᐃΔΔⵠ[ᐃⲆ], Δ.ᐃⲆⵠᐃⵠ, Δ.ᐃⵠᐃᐃΔΔΔ)
		}
		var ΔᐃΔΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃΔΔⵠ.length; ᐃⲆ++) {
			if (ΔᐃΔΔⵠ[ᐃⲆ].scale === 1) ΔΔΔᐃ(ΔᐃΔΔⵠ[ᐃⲆ], Δ.ᐃⵠΔᐃᐃ, Δ.ᐃⲆⲆⲆⲆⵠᐃ)
		}
		var ⵠᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ];
		for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < ⵠᐃⵠᐃ.length; ᐃⲆ++) ΔΔΔᐃ(ⵠᐃⵠᐃ[ᐃⲆ]);
		var ᐃΔⵠⲆⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃΔⵠΔ];
		for (var ᐃⲆ = ΔⲆⵠ; ᐃⲆ < ᐃΔⵠⲆⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃΔⵠⲆⲆ[ᐃⲆ], Δ.ΔᐃΔⵠΔ);
		var ᐃⵠᐃⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ];
		for (var ᐃⲆ = ⵠⵠᐃᐃΔ; ᐃⵠᐃⵠⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠᐃⵠⵠ[ᐃⲆ]);
		var ⵠΔⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ];
		for (var ᐃⲆ = 0; ⵠΔⵠΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⵠΔⵠΔ[ᐃⲆ]);
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔⵠ];
		for (var ᐃⲆ = 0; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & ⲆΔᐃⲆ)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10012 : 10013 : Δ.ᐃⲆⵠⲆᐃⵠΔ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> 1)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃᐃⲆⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			!(ΔᐃⲆⵠ[ᐃⲆ].info & ΔᐃᐃⲆ) && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10014 : 10015 : Δ.ΔⲆᐃⵠᐃΔⵠ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ⲆⲆΔᐃ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & 1)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10016 : 10017 : Δ.ᐃᐃⲆΔᐃⵠΔ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> 1)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃΔᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & 1)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10018 : 10019 : Δ.ᐃⵠᐃⲆⵠⲆΔ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ΔΔⵠΔⵠ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⵠᐃΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & ⵠᐃΔᐃ)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10020 : 10021 : Δ.ⲆⵠⲆΔⲆΔⵠ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ΔᐃⵠΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ];
		for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			!(ΔᐃⲆⵠ[ᐃⲆ].info & 1) && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10022 : 10023 : Δ.ⲆᐃᐃⲆⵠ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ΔᐃⵠΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ];
		for (var ᐃⲆ = ΔⵠⲆⲆ; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & 1)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10024 : 10025 : Δ.ⲆⵠⵠⲆⲆ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ΔᐃⵠΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠⵠ];
		for (var ᐃⲆ = ᐃⵠΔ; ΔᐃⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & 1)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10026 : 10027 : Δ.ΔⲆΔⵠⵠ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> 1)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & ⵠⵠⲆΔ)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10028 : 10029 : Δ.ⵠⲆᐃᐃᐃ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ᐃⲆⵠΔ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ];
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			!(ΔᐃⲆⵠ[ᐃⲆ].info & ᐃⲆⵠΔ) && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10030 : 10031 : Δ.ᐃⲆⲆⵠⲆ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> ᐃⵠⵠ)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔΔΔ];
		for (var ᐃⲆ = Δⵠⵠ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			if (!(ΔᐃⲆⵠ[ᐃⲆ].info & ᐃⵠⵠ)) ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10032 : 10033 : Δ.ᐃᐃΔΔΔ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> 1)
		}
		var ΔᐃⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃⲆⵠ];
		for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < ΔᐃⲆⵠ.length; ᐃⲆ++) {
			!(ΔᐃⲆⵠ[ᐃⲆ].info & 1) && ΔΔΔᐃ(ΔᐃⲆⵠ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ΔᐃⲆⵠ[ᐃⲆ]) ? 10034 : 10035 : Δ.ΔⵠᐃⲆⵠ);
			ΔᐃⲆⵠ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔᐃⲆⵠ[ᐃⲆ].info >> 1)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃⲆᐃ];
		for (var ᐃⲆ = ᐃⵠΔ; ⲆΔⲆⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ⲆΔᐃⲆᐃ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃΔⲆ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ⲆΔⲆⲆᐃ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ᐃᐃᐃΔⲆ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠⵠⵠ];
		for (var ᐃⲆ = ΔⵠⲆΔ; ⲆΔⲆⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ΔΔⵠⵠⵠ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔΔᐃ];
		for (var ᐃⲆ = 0; ⲆΔⲆⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ΔⲆΔΔᐃ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠΔⲆ];
		for (var ᐃⲆ = ⲆⲆⲆ; ⲆΔⲆⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ΔΔⵠΔⲆ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⲆΔⲆⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⵠⲆⲆ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ⲆΔⲆⲆᐃ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⲆΔⲆⲆᐃ[ᐃⲆ], Δ.ᐃⵠⵠⲆⲆ);
			ⲆΔⲆⲆᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⲆΔⲆⲆᐃ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Δᐃⵠⵠᐃ];
		for (var ᐃⲆ = 0; ⵠⵠΔᐃΔ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 10010 : 10011 : Δ.Δᐃⵠⵠᐃ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔⵠ];
		for (var ᐃⲆ = ΔΔⲆᐃ; ⵠⵠΔᐃΔ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 10008 : 10009 : Δ.ⲆΔⵠΔⵠ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Δⵠⵠᐃⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⵠⵠΔᐃΔ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 10006 : 10007 : Δ.Δⵠⵠᐃⵠ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⵠⲆΔ];
		for (var ᐃⲆ = ΔⵠⲆⲆ; ᐃⲆ < ⵠⵠΔᐃΔ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 10004 : 10005 : Δ.ⲆᐃⵠⲆΔ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆᐃ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ⵠⵠΔᐃΔ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 10002 : 10003 : Δ.ⲆⵠΔⲆᐃ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ⵠⵠΔᐃΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆⵠᐃ];
		for (var ᐃⲆ = ΔΔⲆᐃ; ᐃⲆ < ⵠⵠΔᐃΔ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ⵠⵠΔᐃΔ[ᐃⲆ], Settings.ColoredSpikes.enabled ? isAlly(ⵠⵠΔᐃΔ[ᐃⲆ]) ? 1e4 : 10001 : Δ.ΔⲆⲆⵠᐃ);
			ⵠⵠΔᐃΔ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⵠΔᐃΔ[ᐃⲆ].info)
		}
		var ᐃⲆΔⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ];
		for (var ᐃⲆ = ΔᐃⲆΔ; ᐃⲆΔⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
			var ᐃᐃⲆ = ᐃⲆΔⲆᐃ[ᐃⲆ];
			if (ᐃᐃⲆ.info > 0) ΔΔΔᐃ(ᐃᐃⲆ, Δ.ΔᐃᐃΔⵠΔᐃ);
			else ΔΔΔᐃ(ᐃᐃⲆ, Δ.ⵠⲆⲆⲆᐃΔⵠ)
		}
		var ⵠⲆⵠᐃⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ];
		for (var ᐃⲆ = ΔΔⵠᐃ; ᐃⲆ < ⵠⲆⵠᐃⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ⵠⲆⵠᐃⲆ[ᐃⲆ], Δ.ΔⵠⲆΔᐃ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆᐃⲆⵠ, "g", ᐃⲆⲆΔ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⲆΔΔᐃ, ⵠ[71], 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠⲆⵠ, "d", 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠΔⲆΔⵠ, ⵠ[352], ᐃΔⵠᐃ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃΔᐃ, "p", ᐃΔⵠⵠ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔᐃᐃⲆᐃ, "m", ⵠΔⲆΔ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠΔⵠ, "a", ΔⵠΔΔ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ᐃΔⲆⲆ, ⵠ[239], ⵠΔⲆΔ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠΔΔΔ, ⵠ[370], 3, 3);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠΔΔΔ, ⵠ[370], ᐃΔⵠᐃ, ⵠⵠⲆᐃ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠΔΔΔ, ⵠ[370], 1, 1);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠΔΔΔ, ⵠ[370], ΔᐃⲆΔ, 0);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃΔⲆ, ⵠ[370], ⲆⵠⵠΔ, 3);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃΔⲆ, ⵠ[370], 2, 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃΔⲆ, ⵠ[370], 1, 1);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠᐃΔⲆ, ⵠ[370], ΔⵠⲆΔ, ΔⲆᐃⲆ);
		var ΔⵠᐃⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⲆⲆ];
		for (var ᐃⲆ = 0; ΔⵠᐃⲆ.length > ᐃⲆ; ᐃⲆ++) {
			for (var ΔΔΔ = 0; ΔⵠᐃⲆ[ᐃⲆ].info > ΔΔΔ; ΔΔΔ++) ΔΔΔᐃ(ΔⵠᐃⲆ[ᐃⲆ].ΔⵠᐃⲆ[ΔΔΔ], Δ.ᐃΔᐃⲆⲆ)
		}
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔⵠΔΔᐃ, "s", ᐃⲆⵠᐃ);
		var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆᐃΔⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠΔΔ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔΔ[ᐃⲆ]);
		var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃΔⲆΔ];
		for (var ᐃⲆ = ΔⲆⵠ; ᐃⵠΔΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔΔ[ᐃⲆ]);
		var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠⲆⲆ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠΔΔ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔΔ[ᐃⲆ]);
		var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⵠⲆ];
		for (var ᐃⲆ = ᐃⵠΔ; ᐃⵠΔΔ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔΔ[ᐃⲆ]);
		var ᐃⵠΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃΔⵠ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ᐃⵠΔΔ.length; ᐃⲆ++) ΔΔΔᐃ(ᐃⵠΔΔ[ᐃⲆ]);
		var ΔⲆⵠⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ];
		for (var ᐃⲆ = 0; ΔⲆⵠⲆ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠᐃⵠⲆΔⲆ(ΔⲆⵠⲆ[ᐃⲆ]);
		var ᐃᐃⵠⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ᐃᐃⵠⲆΔ.length; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ᐃᐃⵠⲆΔ[ᐃⲆ]);
		var ᐃᐃⵠⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃΔΔ];
		for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃᐃⵠⲆΔ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ᐃᐃⵠⲆΔ[ᐃⲆ]);
		var ᐃⵠᐃⵠⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ];
		for (var ᐃⲆ = 0; ᐃⵠᐃⵠⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ᐃⵠᐃⵠⵠ[ᐃⲆ].action == 2) ⵠΔⵠΔΔⲆⵠ(ᐃⵠᐃⵠⵠ[ᐃⲆ])
		}
		var ⵠΔⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ⵠΔⵠΔ.length; ᐃⲆ++) {
			ⵠΔⵠΔΔⲆⵠ(ⵠΔⵠΔ[ᐃⲆ])
		}
		var ᐃΔᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ];
		for (var ᐃⲆ = ᐃⵠΔ; ᐃΔᐃⵠᐃ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ᐃΔᐃⵠᐃ[ᐃⲆ]);
		var ⵠⲆⵠⲆΔΔᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔΔΔΔ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⵠⲆⵠⲆΔΔᐃ.length; ᐃⲆ++) {
			ⵠΔⵠΔΔⲆⵠ(ⵠⲆⵠⲆΔΔᐃ[ᐃⲆ]);
			ⵠⲆⵠⲆΔΔᐃ[ᐃⲆ].ⵠᐃⲆΔⵠ(ⵠⲆⵠⲆΔΔᐃ[ᐃⲆ].info)
		}
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆΔⲆⵠᐃ, "c", 0);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠⵠⲆ, "t", 5, ⲆⵠⲆⲆ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔΔⵠᐃᐃ, "f", 2, 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠⲆⵠⵠ, ⵠ[153], ⵠᐃⲆᐃ, 0);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ᐃⵠⵠⵠⵠ, "b", ⵠⲆⵠⵠ, 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠⵠⲆ, "t", ⵠᐃᐃᐃ, 2);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ᐃⵠⵠⵠⵠ, "b", 1, ⵠⵠⲆⲆ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔΔⵠᐃᐃ, "f", ⲆΔᐃⲆ, 1);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠⲆⵠⵠ, ⵠ[153], ΔΔᐃⵠ, 1);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⵠⵠⵠⲆ, "t", ᐃⵠ, Δⵠⵠ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔΔⵠᐃᐃ, "f", 0, ⵠⵠⲆⲆ);
		ⲆᐃⵠᐃΔ(Ⲇⵠᐃᐃⵠ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ⲆⵠⲆⵠⵠ, ⵠ[153], 2, 2);
		var ΔⲆⵠⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ];
		for (var ᐃⲆ = ⲆⵠⲆ; ΔⲆⵠⲆ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⵠΔΔⲆⵠ(ΔⲆⵠⲆ[ᐃⲆ]);
		var ΔΔⲆΔⲆⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ];
		for (var ᐃⲆ = ΔΔᐃ; ᐃⲆ < ΔΔⲆΔⲆⵠΔ.length; ᐃⲆ++) ΔΔΔᐃ(ΔΔⲆΔⲆⵠΔ[ᐃⲆ], Δ.ᐃᐃᐃⵠⵠ);
		var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			if (1 === ⵠΔᐃ.ΔΔⲆΔⲆⵠΔ && (180 > ⵠΔᐃ.ΔΔᐃᐃⲆ || ⵠⲆ.ᐃⲆⲆⲆⲆ !== ⵠΔᐃ.ΔⵠⵠⲆⵠ && ⵠⲆ.ᐃⲆⲆᐃⲆ !== ⵠΔᐃ.ΔⵠⵠⲆⵠ && ⵠⲆ.ΔᐃΔⵠⵠ !== ⵠΔᐃ.ΔⵠⵠⲆⵠ && ⵠΔᐃ.ΔⵠⵠⲆⵠ !== ⵠⲆ.ΔᐃⲆⵠᐃ && ⵠⲆ.ⲆᐃΔⲆⲆ !== ⵠΔᐃ.ΔⵠⵠⲆⵠ)) {
				ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, ΔᐃⵠᐃⵠᐃΔ, .018);
				var ⵠⲆᐃⵠ = ΔΔᐃᐃ + .18 * Math.min(ᐃⵠⵠ, Math.max(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, ⵠⵠᐃⵠ) / 100);
				Ⲇ.save();
				Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
				ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
				ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
				ⵠΔᐃ.ⲆⵠᐃⲆ();
				ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
				ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
				Ⲇ.restore()
			}
		}
		var ΔⵠⵠⵠᐃΔⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆᐃⵠ];
		for (var ᐃⲆ = 0; ᐃⲆ < ΔⵠⵠⵠᐃΔⲆ.length; ᐃⲆ++) {
			ΔΔΔᐃ(ΔⵠⵠⵠᐃΔⲆ[ᐃⲆ], Δ.ⵠΔⲆᐃⵠ);
			ΔⵠⵠⵠᐃΔⲆ[ᐃⲆ].ⵠᐃⲆΔⵠ(ΔⵠⵠⵠᐃΔⲆ[ᐃⲆ].info)
		}
		var ⲆⲆⵠΔⲆⲆⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃΔⵠ];
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ⲆⲆⵠΔⲆⲆⵠ.length; ᐃⲆ++) ΔΔΔᐃ(ⲆⲆⵠΔⲆⲆⵠ[ᐃⲆ], Δ.ᐃΔᐃΔⵠ, Δ.ΔⵠⲆΔᐃΔⲆ);
		var ΔⲆⵠⲆⵠⲆᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃΔ];
		for (var ᐃⲆ = 0; ΔⲆⵠⲆⵠⲆᐃ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ΔⲆⵠⲆⵠⲆᐃ[ᐃⲆ], Δ.ᐃⵠΔᐃΔ);
		var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
		for (var ᐃⲆ = ⲆΔᐃ; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
			var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
			if ((ⵠⲆ.ᐃⲆⲆⲆⲆ === ⵠΔᐃ.ΔⵠⵠⲆⵠ || ⵠΔᐃ.ΔⵠⵠⲆⵠ === ⵠⲆ.ᐃⲆⲆᐃⲆ || ⵠⲆ.ΔᐃΔⵠⵠ === ⵠΔᐃ.ΔⵠⵠⲆⵠ || ⵠΔᐃ.ΔⵠⵠⲆⵠ === ⵠⲆ.ΔᐃⲆⵠᐃ || ⵠΔᐃ.ΔⵠⵠⲆⵠ === ⵠⲆ.ⲆᐃΔⲆⲆ) && 180 < ⵠΔᐃ.ΔΔᐃᐃⲆ) {
				ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ = 1;
				Ⲇ.save();
				var ⵠⲆᐃⵠ = 1 + .35 * Math.min(ⵠⲆⲆ, Math.max(ⵠΔᐃ.ᐃⲆⵠΔⲆ - 30, ⵠⲆⲆᐃ) / 180);
				Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
				ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
				ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
				ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
				ⵠΔᐃ.ⲆⵠᐃⲆ();
				ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
				ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
				ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
				Ⲇ.restore()
			}
		}
		var ⲆⲆᐃⲆΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ];
		for (var ᐃⲆ = ᐃⵠΔ; ᐃⲆ < ⲆⲆᐃⲆΔ.length; ᐃⲆ++) {
			if (1 === ⲆⲆᐃⲆΔ[ᐃⲆ].ᐃᐃⵠΔⵠⵠⵠ) ΔΔΔᐃ(ⲆⲆᐃⲆΔ[ᐃⲆ])
		}
		var ΔᐃΔΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ];
		for (var ᐃⲆ = 0; ΔᐃΔΔⵠ.length > ᐃⲆ; ᐃⲆ++) {
			if (ΔᐃΔΔⵠ[ᐃⲆ].scale > ΔᐃᐃⲆ) ΔΔΔᐃ(ΔᐃΔΔⵠ[ᐃⲆ], Δ.ᐃⲆⵠᐃⵠ, Δ.ᐃⵠᐃᐃΔΔΔ)
		}
		var ΔᐃΔΔⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ];
		for (var ᐃⲆ = 0; ΔᐃΔΔⵠ.length > ᐃⲆ; ᐃⲆ++) {
			ΔΔᐃⵠ < ΔᐃΔΔⵠ[ᐃⲆ].scale && ΔΔΔᐃ(ΔᐃΔΔⵠ[ᐃⲆ], Δ.ᐃⵠΔᐃᐃ, Δ.ᐃⲆⲆⲆⲆⵠᐃ)
		}
		var ⲆⵠᐃΔⲆΔΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃⲆⵠᐃ];
		for (var ᐃⲆ = Ⲇᐃⵠᐃ; ᐃⲆ < ⲆⵠᐃΔⲆΔΔ.length; ᐃⲆ++) ΔΔΔᐃ(ⲆⵠᐃΔⲆΔΔ[ᐃⲆ], Δ.ΔᐃⲆⵠᐃ, Δ.ᐃⲆᐃΔᐃΔΔ);
		var ⲆⲆᐃΔᐃⵠᐃ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Ⲇᐃᐃᐃᐃ];
		for (var ᐃⲆ = 0; ᐃⲆ < ⲆⲆᐃΔᐃⵠᐃ.length; ᐃⲆ++) ΔΔΔᐃ(ⲆⲆᐃΔᐃⵠᐃ[ᐃⲆ], Δ.Ⲇᐃᐃᐃᐃ, Δ.ⵠⲆⵠᐃⵠⲆⵠ);
		ⲆΔᐃⵠᐃᐃΔ += ᐃⲆⵠᐃᐃ * ᐃᐃΔⲆ;
		if (60 < ⲆΔᐃⵠᐃᐃΔ) ⲆΔᐃⵠᐃᐃΔ -= 60;
		Settings.NoFog.enabled || ⲆᐃⵠᐃΔ(ⵠΔⲆⵠΔⵠⲆ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ᐃⲆΔⵠⲆ, ⵠ[26], ⵠᐃⵠΔ);
		Settings.NoFog.enabled || ⲆᐃⵠᐃΔ(ⵠΔⲆⵠΔⵠⲆ, ΔⲆᐃᐃ, ⲆⲆᐃⲆ, ⵠᐃΔΔ, ᐃⵠⵠᐃ, Δ.ΔΔⵠⵠΔ, ⵠ[527], 2);
		if (Settings.PlayerOnTop.enabled) {
			var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
			for (var ᐃⲆ = 0; ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
				if (ⵠⲆ.ᐃⲆⲆⲆⲆ !== ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ᐃⲆⲆᐃⲆ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ΔᐃⲆⵠᐃ && ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ !== ⵠⲆ.ⲆᐃΔⲆⲆ && ⵠⲆ.ΔᐃΔⵠⵠ !== ᐃⵠⵠΔ[ᐃⲆ].ΔⵠⵠⲆⵠ) {
					if (ⵠΔᐃ.ΔΔⲆΔⲆⵠΔ === 0) {
						if (.001 < ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ) {
							ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, 0, .018);
							var ⵠⲆᐃⵠ = ᐃⵠ + .18 * Math.min(1, Math.max(ⵠΔᐃ.ⲆΔⲆᐃⵠΔΔ, ΔΔⲆᐃ) / 100);
							Ⲇ.save();
							Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
							ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
							ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
							ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
							ⵠΔᐃ.ⲆⵠᐃⲆ();
							ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
							ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
							ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
							Ⲇ.restore()
						} else {
							ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ = ⵠⵠⲆⲆ;
							ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
							ⵠΔᐃ.ⲆⵠᐃⲆ()
						}
					}
				} else if (ⵠΔᐃ.ΔΔᐃᐃⲆ <= 180) {
					Ⲇ.save();
					var ⵠⲆᐃⵠ = ⵠⲆⲆ + Math.min(ΔΔᐃᐃ, Math.max(ⵠΔᐃ.ᐃⲆⵠΔⲆ - 30, ΔΔⲆᐃ) / 180) * .35;
					Ⲇ.scale(ⵠⲆᐃⵠ, ⵠⲆᐃⵠ);
					ⲆΔⲆ.ⵠΔΔ.x /= ⵠⲆᐃⵠ;
					ⲆΔⲆ.ⵠΔΔ.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.x /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.x /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.y /= ⵠⲆᐃⵠ;
					ⵠΔᐃ.ᐃᐃⵠΔⵠⵠⵠ = Ⲇᐃⵠᐃ;
					ⵠΔᐃ.ⲆⲆⵠΔⲆΔⲆ();
					ⵠΔᐃ.ⲆⵠᐃⲆ();
					ⲆΔⲆ.ⵠΔΔ.x *= ⵠⲆᐃⵠ;
					ⲆΔⲆ.ⵠΔΔ.y *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.x *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.y *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.x *= ⵠⲆᐃⵠ;
					ⵠΔᐃ.r.y *= ⵠⲆᐃⵠ;
					Ⲇ.restore()
				}
			}
		}
		if (Settings.BoxOnTop.enabled) {
			var ΔᐃⲆⲆⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⲆⵠᐃ];
			for (var ᐃⲆ = 0; ᐃⲆ < ΔᐃⲆⲆⲆ.length; ᐃⲆ++) ΔΔΔᐃ(ΔᐃⲆⲆⲆ[ᐃⲆ], Δ.ΔΔⲆⵠᐃ, Δ.ⵠΔⲆⲆᐃⲆΔ);
			var ⵠⵠᐃⵠⲆⲆⲆ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ];
			for (var ᐃⲆ = 0; ⵠⵠᐃⵠⲆⲆⲆ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ⵠⵠᐃⵠⲆⲆⲆ[ᐃⲆ], Δ.ΔΔⲆⵠᐃ, Δ.ⵠΔⲆⲆᐃⲆΔ);
			var ᐃⲆⵠⲆⵠᐃⵠ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆΔⵠᐃ];
			for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆⵠⲆⵠᐃⵠ.length > ᐃⲆ; ᐃⲆ++) ΔΔΔᐃ(ᐃⲆⵠⲆⵠᐃⵠ[ᐃⲆ], Δ.ⲆⲆΔⵠᐃ, Δ.ΔΔⲆᐃΔⲆΔ)
		}
		const me = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
		if (Settings.KrakenTracers.enabled && me) {
			const krakens = ⲆΔΔ.ⵠᐃⲆ[66];
			krakens.forEach((kraken => {
				Ⲇ.save();
				Ⲇ.beginPath();
				Ⲇ.strokeStyle = "#440b8a";
				Ⲇ.lineWidth = 3;
				Ⲇ.moveTo(me.x + ⲆΔⲆ.ⵠΔΔ.x, me.y + ⲆΔⲆ.ⵠΔΔ.y);
				Ⲇ.lineTo(kraken.x + ⲆΔⲆ.ⵠΔΔ.x, kraken.y + ⲆΔⲆ.ⵠΔΔ.y);
				Ⲇ.stroke();
				Ⲇ.restore()
			}))
		}
		if (Settings.SandwormTracers.enabled && me) {
			const sandworms = ⲆΔΔ.ⵠᐃⲆ[76];
			sandworms.forEach((sandworm => {
				Ⲇ.save();
				Ⲇ.beginPath();
				Ⲇ.strokeStyle = "#000000";
				Ⲇ.lineWidth = 3;
				Ⲇ.moveTo(me.x + ⲆΔⲆ.ⵠΔΔ.x, me.y + ⲆΔⲆ.ⵠΔΔ.y);
				Ⲇ.lineTo(sandworm.x + ⲆΔⲆ.ⵠΔΔ.x, sandworm.y + ⲆΔⲆ.ⵠΔΔ.y);
				Ⲇ.stroke();
				Ⲇ.restore()
			}))
		}
		if (Settings.ListEnabledHacks.enabled) {
			let y = 300;
			for (const hack in Settings) {
				if (Settings[hack].enabled && Settings[hack].draw) {
					Ⲇ.save();
					Ⲇ.font = "20px Baloo Paaji";
					Ⲇ.fillStyle = "rgb(0,0,0)";
					Ⲇ.strokeStyle = "rgb(255,255,255)";
					Ⲇ.lineWidth = 5;
					Ⲇ.strokeText(hack, 20, y);
					Ⲇ.fillText(hack, 20, y);
					Ⲇ.restore();
					y += 20
				}
			}
		}
	}

	function ⲆᐃⵠᐃΔ(ᐃⲆⲆⵠⵠ, ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ, ᐃΔⲆᐃⲆⲆⲆ, ⲆΔⲆⲆᐃᐃⵠ, ΔⲆΔΔΔΔΔ, ⵠⲆΔᐃⲆⵠΔ, ᐃᐃⲆⵠⵠᐃⲆ, ᐃΔᐃΔᐃᐃⲆ, ΔⵠΔⵠⵠⲆⵠ) {
		if (ⲆΔΔ.transition) {
			Ⲇ.globalAlpha = 1;
			ᐃⲆⲆⵠⵠ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ, ᐃΔⲆᐃⲆⲆⲆ, ⲆΔⲆⲆᐃᐃⵠ, ΔⲆΔΔΔΔΔ, ⵠⲆΔᐃⲆⵠΔ, ᐃᐃⲆⵠⵠᐃⲆ, ᐃΔᐃΔᐃᐃⲆ, ΔⵠΔⵠⵠⲆⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : ⲆᐃⲆⲆ;
			Ⲇ.globalAlpha = 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			ᐃⲆⲆⵠⵠ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ, ᐃΔⲆᐃⲆⲆⲆ, ⲆΔⲆⲆᐃᐃⵠ, ΔⲆΔΔΔΔΔ, ⵠⲆΔᐃⲆⵠΔ, ᐃᐃⲆⵠⵠᐃⲆ, ᐃΔᐃΔᐃᐃⲆ, ΔⵠΔⵠⵠⲆⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? ΔⲆᐃⲆ : 1;
			Ⲇ.globalAlpha = ᐃⲆⵠΔ
		} else ᐃⲆⲆⵠⵠ(ⵠⵠᐃⲆΔ, ΔΔⲆΔⲆ, ᐃΔⲆᐃⲆⲆⲆ, ⲆΔⲆⲆᐃᐃⵠ, ΔⲆΔΔΔΔΔ, ⵠⲆΔᐃⲆⵠΔ, ᐃᐃⲆⵠⵠᐃⲆ, ᐃΔᐃΔᐃᐃⲆ, ΔⵠΔⵠⵠⲆⵠ)
	}

	function ΔⲆᐃⲆⲆⲆⲆⲆⲆ() {
		var ΔΔⵠᐃΔ = ⲆΔⲆ.ΔΔⵠᐃΔ;
		ΔⵠⲆⲆ === ΔΔⵠᐃΔ.ⵠᐃⲆⵠⵠ ? ΔΔⵠᐃΔ.ᐃΔⵠΔⵠ = Math.max(0, ΔΔⵠᐃΔ.ᐃΔⵠΔⵠ - ᐃᐃΔⲆ / ⲆΔΔⵠⲆ) : ΔΔⵠᐃΔ.ᐃΔⵠΔⵠ = Math.min(ΔΔᐃᐃ, ΔΔⵠᐃΔ.ᐃΔⵠΔⵠ + ᐃᐃΔⲆ / 10);
		var ⲆΔⲆΔⲆ = ΔΔⵠᐃΔ.ⲆΔⲆΔⲆ;
		for (var ᐃⲆ = ⲆⵠⲆ; ⲆΔⲆΔⲆ.length > ᐃⲆ; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			ΔΔⵠᐃΔ.ⵠᐃⵠ(ᐃⵠᐃ);
			ᐃΔⵠⲆⵠΔⵠ(Δ.ᐃⵠᐃⵠⵠΔᐃ, ᐃⵠᐃ.id, ⲆΔⲆ.ⵠΔΔ.x + ᐃⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ᐃⵠᐃ.y, ᐃⵠᐃ.alpha)
		}
		for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ⲆΔⲆΔⲆ.length; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			if (ⲆΔᐃ >= ᐃⵠᐃ.ⵠⵠⲆᐃΔ || -ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ < ᐃⵠᐃ.x || ᐃⵠᐃ.x < -ⲆΔⲆ.ⵠΔΔ.x - ⲆΔⲆ.ⵠΔΔ.w / ᐃⵠΔⲆ || -ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ < ᐃⵠᐃ.y) ⲆΔⲆΔⲆ.splice(ᐃⲆ, 1)
		}
		var ᐃΔΔⵠ = -ⲆΔⲆ.ⵠΔΔ.y;
		if (ⲆΔΔ.ᐃⲆⲆᐃᐃ > -1e3) ΔΔⵠᐃΔ.add(ᐃΔΔⵠ)
	}

	function ᐃΔⵠⲆⵠΔⵠ(ⲆΔ, ᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, ⵠᐃᐃᐃⲆ) {
		ⲆΔΔ.transition && ⵠᐃᐃᐃⲆ == ᐃᐃΔᐃ ? (Ⲇ.globalAlpha = ᐃᐃΔᐃ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ), ⲆΔΔ.time = ⲆΔΔ.time ? ⲆⲆⲆ : ΔⲆᐃ, Ⲇ.globalAlpha = ᐃⵠⵠ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ), ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1, Ⲇ.globalAlpha = 1) : (Ⲇ.globalAlpha = ⵠᐃᐃᐃⲆ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⲆΔ][ⲆΔΔ.time][ᐃⲆ], ᐃᐃΔ, ᐃⲆᐃ), Ⲇ.globalAlpha = 1)
	}

	function ⲆⲆΔᐃΔ(ⵠΔⵠΔⲆⲆΔ, ᐃⵠⲆᐃ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ) {
		var ᐃᐃⲆ = ⵠⵠ.width;
		var ΔᐃⲆ = ⵠⵠ.height;
		var w2 = Math.floor(ᐃᐃⲆ / 2);
		var ⵠⵠᐃⵠⵠ = Math.floor(ΔᐃⲆ / 2);
		ⲆΔΔ.transition ? (Ⲇ.globalAlpha = ⲆΔⵠⲆ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⵠΔⵠΔⲆⲆΔ][ᐃⵠⲆᐃ][ⲆΔΔ.time], 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ), ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1, Ⲇ.globalAlpha = ⲆΔᐃⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ, ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⵠΔⵠΔⲆⲆΔ][ᐃⵠⲆᐃ][ⲆΔΔ.time], 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ), ⲆΔΔ.time = ⲆΔΔ.time ? ⲆΔᐃ : 1, Ⲇ.globalAlpha = 1) : ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⵠΔⵠΔⲆⲆΔ][ᐃⵠⲆᐃ][ⲆΔΔ.time], 0, 0, ᐃᐃⲆ, ΔᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ, w2, ⵠⵠᐃⵠⵠ)
	}

	function ⲆⲆⲆΔⲆᐃᐃⵠⲆ(ⵠᐃΔΔⲆⵠΔ, ΔⲆⵠⵠⲆⵠⵠ) {
		const ⵠᐃⵠᐃᐃᐃⵠ = (8 << (ⵠᐃΔΔⲆⵠΔ >> 8 & 255)) + (24 << (ⵠᐃΔΔⲆⵠΔ >> 24 & ΔᐃᐃΔⲆΔᐃ)) + (0 << (ⵠᐃΔΔⲆⵠΔ >> 0 & 255)) + (16 << (ⵠᐃΔΔⲆⵠΔ >> 16 & 255));
		const ⲆΔⲆⲆΔᐃᐃ = (12345 + (ΔⲆⵠⵠⲆⵠⵠ + 2625) * 1103515245) % 2147483648;
		const ΔⲆⵠⵠⲆΔⲆⵠⵠ = ⲆⲆᐃᐃⲆⲆᐃ(ⵠᐃⵠᐃᐃᐃⵠ, ⲆΔⲆⲆΔᐃᐃ);
		const ⵠⲆᐃⲆᐃΔⵠⵠⲆ = ⲆᐃⵠΔⵠⵠΔ(ⵠᐃⵠᐃᐃᐃⵠ, ⲆΔⲆⲆΔᐃᐃ);
		const ᐃᐃΔⲆⲆᐃⵠⵠᐃ = (1 + ((ΔⲆⵠⵠⲆΔⲆⵠⵠ ^ ⵠⲆᐃⲆᐃΔⵠⵠⲆ) + 65226) * 22695477) % 4294967296;
		return ᐃᐃΔⲆⲆᐃⵠⵠᐃ
	}

	function ⵠⲆⵠⲆⲆⲆⲆ(ⲆⲆᐃⵠᐃ, ⲆⵠΔᐃΔ, ᐃΔⲆᐃⲆ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var ⵠⵠⵠⵠ = ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ + 710;
		var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ, Δⵠⵠ);
		var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ᐃΔⲆᐃⲆ - 100, ⵠⵠᐃᐃΔ);
		var Δⵠⵠᐃ = ᐃΔΔΔⵠ;
		var ⲆΔΔⵠⵠ = Ⲇⵠⵠⵠ - ᐃΔΔΔⵠ - ⲆΔΔᐃΔ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w1);
		else var ᐃᐃⲆ = w1.r;
		var ⲆΔⲆᐃ = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var ⲆᐃⲆⲆΔ = ⲆΔⲆᐃ,
			Δᐃᐃⵠᐃ = Δⵠⵠᐃ,
			ⲆΔⵠΔⲆ = -ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ᐃⲆⲆⲆΔ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += -ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ + ᐃⲆⵠᐃ;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w2);
		else var ᐃᐃⲆ = w2.r;
		var d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ - ᐃᐃⲆ.x;
		var ΔᐃⲆⵠΔ = ⲆΔⲆᐃ,
			ⵠᐃΔⲆᐃ = Δⵠⵠᐃ,
			ⵠⲆΔⵠΔ = d2,
			ⵠᐃᐃᐃⵠ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += d2 + ᐃᐃⲆΔ;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - ᐃᐃⲆΔ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w3);
		else var ᐃᐃⲆ = w3.r;
		d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ - ᐃᐃⲆ.x;
		if (ⲆΔⲆᐃ + d2 < ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = true;
			var ΔᐃᐃⲆⲆ = ⲆΔⲆᐃ,
				ᐃⲆᐃΔᐃ = Δⵠⵠᐃ,
				ⵠⵠⵠΔⵠ = d2,
				ᐃΔⲆⲆⲆ = ⲆΔΔⵠⵠ;
			ⲆΔⲆᐃ += d2 + ⵠᐃᐃⵠ;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = false;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -ΔᐃᐃⲆ
		}
		d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆΔΔ.transition) {
			var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
		} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time];
		Ⲇ.fillRect(Δᐃᐃⵠᐃ, ⲆᐃⲆⲆΔ, ᐃⲆⲆⲆΔ, ⲆΔⵠΔⲆ);
		if (ⲆᐃⲆΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ΔᐃᐃⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 70, 76, 42, 139, 155, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⵠΔⵠⲆⲆΔ[ⲆΔΔ.time]
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ᐃⲆⵠΔ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
		}
		Ⲇ.fillRect(ⵠᐃΔⲆᐃ, ΔᐃⲆⵠΔ, ⵠᐃᐃᐃⵠ, ⵠⲆΔⵠΔ);
		if (ⲆⲆⵠⲆΔ) {
			if (ⲆᐃⲆΔ) {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(17, 94, 96, 169, 214, 211, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ΔᐃΔⵠⲆⲆⵠ[ⲆΔΔ.time]
			} else {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
			}
			Ⲇ.fillRect(ᐃⲆᐃΔᐃ, ΔᐃᐃⲆⲆ, ᐃΔⲆⲆⲆ, ⵠⵠⵠΔⵠ)
		}
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆᐃⲆΔ) Δⵠᐃᐃ.ΔⲆᐃᐃᐃᐃⵠᐃᐃ(ⵠᐃⵠᐃΔ, ΔΔᐃᐃⵠ, ΔⵠⲆᐃⲆ, ⵠⵠⵠⵠ, -ⲆΔⲆ.ⵠΔΔ.x + Δᐃᐃⵠᐃ, -ⲆΔⲆ.ⵠΔΔ.x + Δᐃᐃⵠᐃ + ᐃⲆⲆⲆΔ)
	}

	function ᐃⵠᐃⵠⲆΔⲆ(ⵠⲆⵠ, ⵠⵠⵠ) {
		if (ⲆΔΔ.transition) {
			Ⲇ.globalAlpha = ᐃΔⲆⵠ;
			ⵠⲆⵠ.ᐃᐃᐃᐃᐃ(ⵠⵠⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : 1;
			Ⲇ.globalAlpha = ΔⲆᐃ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			ⵠⲆⵠ.ᐃᐃᐃᐃᐃ(ⵠⵠⵠ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : ᐃΔⲆⵠ;
			Ⲇ.globalAlpha = 1
		} else ⵠⲆⵠ.ᐃᐃᐃᐃᐃ(ⵠⵠⵠ)
	}

	function ᐃⵠΔⵠΔⲆⲆΔⵠ(ᐃⵠᐃ) {
		Ⲇ.save();
		Ⲇ.translate(ⲆΔⲆ.ⵠΔΔ.x + ᐃⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ᐃⵠᐃ.y);
		Ⲇ.rotate(ᐃⵠᐃ.angle);
		Ⲇ.globalAlpha = ᐃⵠᐃ.alpha;
		var ⵠⵠ = Ⲇᐃ[ᐃⵠᐃ.id][ⲆΔΔ.time];
		ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / ᐃΔⲆⲆⵠ, -ⵠⵠ.height / 2);
		Ⲇ.globalAlpha = ΔⲆᐃ;
		Ⲇ.restore()
	}

	function ⵠⵠΔⵠⲆᐃⵠ(ⲆⵠΔᐃΔ, ⲆⲆᐃⵠᐃ, ⵠΔΔΔᐃⲆᐃ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var Δⵠⵠᐃ = ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ + 820;
		var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ, ⲆΔᐃ);
		var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ⵠΔΔΔᐃⲆᐃ - ⲆᐃᐃΔᐃⲆᐃ, ⵠⵠⲆⲆ);
		var ⵠⵠⵠⵠ = ΔᐃΔⲆΔ;
		var ⵠⵠᐃⲆᐃ = ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w1);
		else var ᐃᐃⲆ = w1.r;
		var ⲆΔⲆᐃ = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = ⲆΔⲆᐃ,
			ⲆᐃⲆⲆΔ = ⵠⵠⵠⵠ,
			ᐃⲆⲆⲆΔ = -ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ⲆΔⵠΔⲆ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += -ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ + 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w2);
		else var ᐃᐃⲆ = w2.r;
		var d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ - ᐃᐃⲆ.x;
		var ⵠᐃΔⲆᐃ = ⲆΔⲆᐃ,
			ΔᐃⲆⵠΔ = ⵠⵠⵠⵠ,
			ⵠᐃᐃᐃⵠ = d2,
			ⵠⲆΔⵠΔ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += d2 + ᐃⵠΔⲆ;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - 2;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w3);
		else var ᐃᐃⲆ = w3.r;
		d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ - ᐃᐃⲆ.x;
		if (ⲆΔⲆᐃ + d2 < ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = true;
			var ᐃⲆᐃΔᐃ = ⲆΔⲆᐃ,
				ΔᐃᐃⲆⲆ = ⵠⵠⵠⵠ,
				ᐃΔⲆⲆⲆ = d2,
				ⵠⵠⵠΔⵠ = ⵠⵠᐃⲆᐃ;
			ⲆΔⲆᐃ += d2 + ᐃΔⵠᐃ;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = false;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -1
		}
		d2 = Δⵠⵠᐃ - ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆΔΔ.transition) {
			var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
		} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time];
		Ⲇ.fillRect(Δᐃᐃⵠᐃ, ⲆᐃⲆⲆΔ, ᐃⲆⲆⲆΔ, ⲆΔⵠΔⲆ);
		if (ⲆᐃⲆΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ΔᐃᐃⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 70, 76, 42, 139, 155, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⵠΔⵠⲆⲆΔ[ⲆΔΔ.time]
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
		}
		Ⲇ.fillRect(ⵠᐃΔⲆᐃ, ΔᐃⲆⵠΔ, ⵠᐃᐃᐃⵠ, ⵠⲆΔⵠΔ);
		if (ⲆⲆⵠⲆΔ) {
			if (ⲆᐃⲆΔ) {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(17, 94, 96, 169, 214, 211, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ΔᐃΔⵠⲆⲆⵠ[ⲆΔΔ.time]
			} else {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
			}
			Ⲇ.fillRect(ᐃⲆᐃΔᐃ, ΔᐃᐃⲆⲆ, ᐃΔⲆⲆⲆ, ⵠⵠⵠΔⵠ)
		}
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆᐃⲆΔ) Δⵠᐃᐃ.ΔᐃⲆᐃⲆᐃᐃΔⲆ(ⵠᐃⵠᐃΔ, ΔΔᐃᐃⵠ, ΔⵠⲆᐃⲆ, Δⵠⵠᐃ, -ⲆΔⲆ.ⵠΔΔ.y + ⲆᐃⲆⲆΔ, -ⲆΔⲆ.ⵠΔΔ.y + ⲆᐃⲆⲆΔ + ⲆΔⵠΔⲆ)
	}

	function ᐃⵠⵠⲆᐃᐃΔ(ⲆⲆᐃⵠᐃ, ⲆⵠΔᐃΔ, ᐃΔⲆᐃⲆ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var ⵠⵠⵠⵠ = ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ - 700;
		var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ, Δⵠⵠ);
		var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ᐃΔⲆᐃⲆ - 100, ⲆΔᐃ);
		var Δⵠⵠᐃ = ᐃΔΔΔⵠ;
		var ⲆΔΔⵠⵠ = Ⲇⵠⵠⵠ - ᐃΔΔΔⵠ - ⲆΔΔᐃΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w1).x;
		else var ᐃⲆᐃⲆⵠ = w1.r.x;
		var ⲆΔⲆᐃ = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = Δⵠⵠᐃ,
			ⲆᐃⲆⲆΔ = ⲆΔⲆᐃ,
			ⲆΔⵠΔⲆ = ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ᐃⲆⲆⲆΔ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ - 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w2).x;
		else var ᐃⲆᐃⲆⵠ = w2.r.x;
		var d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ + ᐃⲆᐃⲆⵠ;
		var ΔᐃⲆⵠΔ = ⲆΔⲆᐃ,
			ⵠᐃΔⲆᐃ = Δⵠⵠᐃ,
			ⵠⲆΔⵠΔ = d2,
			ⵠᐃᐃᐃⵠ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += d2 - ΔⲆⲆᐃ;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - 2;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w3).x;
		else var ᐃⲆᐃⲆⵠ = w3.r.x;
		d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ + ᐃⲆᐃⲆⵠ;
		if (ⲆΔⲆᐃ + d2 - ΔΔⲆⲆᐃ > ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = true;
			var ΔᐃᐃⲆⲆ = ⲆΔⲆᐃ,
				ᐃⲆᐃΔᐃ = Δⵠⵠᐃ,
				ⵠⵠⵠΔⵠ = d2,
				ᐃΔⲆⲆⲆ = ⲆΔΔⵠⵠ;
			ⲆΔⲆᐃ += d2 - ᐃⲆⲆΔ;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = false;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -1
		}
		d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ > ⵠⵠⲆⲆ && ΔΔΔΔ.ⵠᐃⲆⵠⲆⵠΔ === ⲆΔᐃⲆ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ⵠⲆⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 77, 72, 252, 239, 187, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⲆⵠⲆⲆⲆⲆ[ⲆΔΔ.time];
			Ⲇ.fillRect(Δⵠⵠᐃ, ⲆΔⲆᐃ, ⲆΔΔⵠⵠ, d2)
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ⲆΔⵠⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ΔΔΔΔ.ⲆΔⵠ[0], ΔΔΔΔ.ⲆΔⵠ[1], ΔΔΔΔ.ⲆΔⵠ[ⵠᐃⵠΔ], ΔΔΔΔ.ⲆⲆΔ[ᐃΔⵠⵠ], ΔΔΔΔ.ⲆⲆΔ[ᐃⵠⵠ], ΔΔΔΔ.ⲆⲆΔ[ⵠⵠΔⲆ], ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = ΔΔΔΔ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
			Ⲇ.fillRect(Δⵠⵠᐃ, ⲆΔⲆᐃ, ⲆΔΔⵠⵠ, d2)
		}
	}

	function ⲆᐃᐃⵠⲆΔΔᐃΔ() {
		if (ⲆΔΔ.transition) {
			var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(4, 43, 48, 19, 58, 43, ᐃⲆᐃⵠ)
		} else Ⲇ.fillStyle = Δ.ⲆⵠⵠΔⲆ[ⲆΔΔ.time];
		Ⲇ.fillRect(ΔᐃⲆΔ, ⵠⵠᐃⵠ, Ⲇⵠⵠⵠ, ᐃΔⲆᐃ)
	}

	function ᐃΔΔᐃΔⲆⲆᐃⲆ() {
		var ⲆᐃΔΔⵠⲆΔ = ⲆΔⲆ.ⲆᐃΔΔⵠⲆΔ;
		var ⲆΔⲆΔⲆ = ⲆᐃΔΔⵠⲆΔ.ⲆΔⲆΔⲆ;
		for (var ᐃⲆ = ⵠⵠᐃᐃΔ; ᐃⲆ < ⲆΔⲆΔⲆ.length; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			ⲆᐃΔΔⵠⲆΔ.ⵠᐃⵠ(ᐃⵠᐃ);
			ᐃΔⵠⲆⵠΔⵠ(Δ.ⲆᐃᐃⵠΔΔᐃ, ᐃⵠᐃ.id, ⲆΔⲆ.ⵠΔΔ.x + ᐃⵠᐃ.x, ⲆΔⲆ.ⵠΔΔ.y + ᐃⵠᐃ.y, ᐃⵠᐃ.alpha)
		}
		for (var ᐃⲆ = 0; ⲆΔⲆΔⲆ.length > ᐃⲆ; ᐃⲆ++) {
			var ᐃⵠᐃ = ⲆΔⲆΔⲆ[ᐃⲆ];
			if (ΔᐃⲆΔ >= ᐃⵠᐃ.ⵠⵠⲆᐃΔ || ᐃⵠᐃ.x > -ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ || -ⲆΔⲆ.ⵠΔΔ.x > ᐃⵠᐃ.x || ᐃⵠᐃ.y > -ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ) ⲆΔⲆΔⲆ.splice(ᐃⲆ, 1)
		}
		var ᐃΔΔⵠ = -ⲆΔⲆ.ⵠΔΔ.y; - 1e3 < ⲆΔΔ.ᐃⵠᐃΔΔ && ⲆᐃΔΔⵠⲆΔ.add(ᐃΔΔⵠ)
	}

	function ⲆΔⵠⵠⲆⵠᐃⵠⵠ(ⵠΔⵠΔⲆⲆΔ, ᐃⵠⲆᐃ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ) {
		if (ⲆΔΔ.transition) {
			Ⲇ.globalAlpha = 1;
			ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⵠΔⵠΔⲆⲆΔ][ᐃⵠⲆᐃ][ⲆΔΔ.time], ᐃᐃΔ, ᐃⲆᐃ);
			ⲆΔΔ.time = ⲆΔΔ.time ? ⲆⲆⲆ : ⵠⵠⲆΔ;
			Ⲇ.globalAlpha = ΔΔᐃⵠ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			ⵠⲆΔⲆ(Ⲇ, Ⲇᐃ[ⵠΔⵠΔⲆⲆΔ][ᐃⵠⲆᐃ][ⲆΔΔ.time], ᐃᐃΔ, ᐃⲆᐃ);
			ⲆΔΔ.time = ⲆΔΔ.time ? 0 : ΔΔⵠΔⵠ;
			Ⲇ.globalAlpha = ᐃΔⲆⵠ
		} else ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃᐃΔ, ᐃⲆᐃ)
	}

	function ᐃᐃⲆⵠⲆΔᐃ(ⲆⲆᐃⵠᐃ, ⲆⵠΔᐃΔ, ᐃΔⲆᐃⲆ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var ⵠⵠⵠⵠ = ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ - 700;
		var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ, 0);
		var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ᐃΔⲆᐃⲆ - ᐃⲆⵠΔΔ, ΔΔⲆᐃ);
		var Δⵠⵠᐃ = ᐃΔΔΔⵠ;
		var ⲆΔΔⵠⵠ = Ⲇⵠⵠⵠ - ᐃΔΔΔⵠ - ⲆΔΔᐃΔ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w1);
		else var ᐃᐃⲆ = w1.r;
		var ⲆΔⲆᐃ = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = Δⵠⵠᐃ,
			ⲆᐃⲆⲆΔ = ⲆΔⲆᐃ,
			ⲆΔⵠΔⲆ = ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ᐃⲆⲆⲆΔ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ - 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w2);
		else var ᐃᐃⲆ = w2.r;
		var d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ + ᐃᐃⲆ.x;
		var ΔᐃⲆⵠΔ = ⲆΔⲆᐃ,
			ⵠᐃΔⲆᐃ = Δⵠⵠᐃ,
			ⵠⲆΔⵠΔ = d2,
			ⵠᐃᐃᐃⵠ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += d2 - 2;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - 2;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w3);
		else var ᐃᐃⲆ = w3.r;
		d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ + ᐃᐃⲆ.x;
		if (ⵠᐃⵠᐃΔ < ⲆΔⲆᐃ + d2 - ΔⲆΔⵠ) {
			var ⲆⲆⵠⲆΔ = ⲆΔᐃⲆⲆ;
			var ΔᐃᐃⲆⲆ = ⲆΔⲆᐃ,
				ᐃⲆᐃΔᐃ = Δⵠⵠᐃ,
				ⵠⵠⵠΔⵠ = d2,
				ᐃΔⲆⲆⲆ = ⲆΔΔⵠⵠ;
			ⲆΔⲆᐃ += d2 - 2;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = ΔᐃΔΔᐃ;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -1
		}
		d2 = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆΔΔ.transition) {
			var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
		} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time];
		Ⲇ.fillRect(Δᐃᐃⵠᐃ, ⲆᐃⲆⲆΔ, ᐃⲆⲆⲆΔ, ⲆΔⵠΔⲆ);
		if (ⲆᐃⲆΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ⵠⵠⲆ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 70, 76, 42, 139, 155, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⵠΔⵠⲆⲆΔ[ⲆΔΔ.time]
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ΔΔⵠΔⵠ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
		}
		Ⲇ.fillRect(ⵠᐃΔⲆᐃ, ΔᐃⲆⵠΔ, ⵠᐃᐃᐃⵠ, ⵠⲆΔⵠΔ);
		if (ⲆⲆⵠⲆΔ) {
			if (ⲆᐃⲆΔ) {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ΔΔᐃᐃ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(17, 94, 96, 169, 214, 211, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ΔᐃΔⵠⲆⲆⵠ[ⲆΔΔ.time]
			} else {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ⲆⲆΔᐃ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
			}
			Ⲇ.fillRect(ᐃⲆᐃΔᐃ, ΔᐃᐃⲆⲆ, ᐃΔⲆⲆⲆ, ⵠⵠⵠΔⵠ)
		}
		ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆᐃⲆΔ && Δⵠᐃᐃ.ΔΔᐃⲆΔᐃⲆΔⵠ(ⵠᐃⵠᐃΔ, ΔΔᐃᐃⵠ, ΔⵠⲆᐃⲆ, ⵠⵠⵠⵠ, -ⲆΔⲆ.ⵠΔΔ.x + Δᐃᐃⵠᐃ, -ⲆΔⲆ.ⵠΔΔ.x + Δᐃᐃⵠᐃ + ᐃⲆⲆⲆΔ)
	}

	function ⵠⵠᐃⵠⵠᐃⲆ(ⲆⲆᐃⵠᐃ, ⲆⵠΔᐃΔ, ᐃΔⲆᐃⲆ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var ⵠⵠⵠⵠ = ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ + 710;
		var ᐃΔΔΔⵠ = Math.max(ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ, 0);
		var ⲆΔΔᐃΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.x + Ⲇⵠⵠⵠ - ᐃΔⲆᐃⲆ - ᐃΔⵠΔᐃ, ΔⵠⲆⲆ);
		var Δⵠⵠᐃ = ᐃΔΔΔⵠ;
		var ⲆΔΔⵠⵠ = Ⲇⵠⵠⵠ - ᐃΔΔΔⵠ - ⲆΔΔᐃΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w1).x;
		else var ᐃⲆᐃⲆⵠ = w1.r.x;
		var ⲆΔⲆᐃ = ⵠⵠⵠⵠ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var ⲆᐃⲆⲆΔ = ⲆΔⲆᐃ,
			Δᐃᐃⵠᐃ = Δⵠⵠᐃ,
			ⲆΔⵠΔⲆ = -ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ᐃⲆⲆⲆΔ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += -ᐃⲆᐃⲆⵠ + ⲆⵠΔΔ.ⲆⲆⲆΔΔ + 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w2).x;
		else var ᐃⲆᐃⲆⵠ = w2.r.x;
		var d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ - ᐃⲆᐃⲆⵠ;
		var ΔᐃⲆⵠΔ = ⲆΔⲆᐃ,
			ⵠᐃΔⲆᐃ = Δⵠⵠᐃ,
			ⵠⲆΔⵠΔ = d2,
			ⵠᐃᐃᐃⵠ = ⲆΔΔⵠⵠ;
		ⲆΔⲆᐃ += d2 + ⵠⲆⵠᐃ;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - ⵠⲆΔΔ;
		if (ⲆᐃⲆΔ) var ᐃⲆᐃⲆⵠ = Δⵠᐃᐃ.ᐃⲆⵠ(w3).x;
		else var ᐃⲆᐃⲆⵠ = w3.r.x;
		d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ - ᐃⲆᐃⲆⵠ;
		if (ⲆΔⲆᐃ + d2 < ⵠᐃⵠᐃΔ) {
			var ⲆⲆⵠⲆΔ = true;
			var ΔᐃᐃⲆⲆ = ⲆΔⲆᐃ,
				ᐃⲆᐃΔᐃ = Δⵠⵠᐃ,
				ⵠⵠⵠΔⵠ = d2,
				ᐃΔⲆⲆⲆ = ⲆΔΔⵠⵠ;
			ⲆΔⲆᐃ += d2 + 2;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = false;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -ᐃⵠⵠ
		}
		d2 = ⵠⵠⵠⵠ - ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (Δⵠⵠ < ⲆᐃⲆΔ && 1 === ΔΔΔΔ.ⵠᐃⲆⵠⲆⵠΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 77, 72, 252, 239, 187, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⲆⵠⲆⲆⲆⲆ[ⲆΔΔ.time];
			Ⲇ.fillRect(Δⵠⵠᐃ, ⲆΔⲆᐃ, ⲆΔΔⵠⵠ, d2)
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(ΔΔΔΔ.ⲆΔⵠ[ⵠⵠⲆⲆ], ΔΔΔΔ.ⲆΔⵠ[1], ΔΔΔΔ.ⲆΔⵠ[2], ΔΔΔΔ.ⲆⲆΔ[ⲆΔᐃ], ΔΔΔΔ.ⲆⲆΔ[1], ΔΔΔΔ.ⲆⲆΔ[ⵠᐃⵠΔ], ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = ΔΔΔΔ.ⲆⲆⵠᐃΔ[ⲆΔΔ.time];
			Ⲇ.fillRect(Δⵠⵠᐃ, ⲆΔⲆᐃ, ⲆΔΔⵠⵠ, d2)
		}
	}

	function ⵠⲆⲆⵠΔᐃᐃ(ⲆⵠΔᐃΔ, ⲆⲆᐃⵠᐃ, ⵠΔΔΔᐃⲆᐃ, Δⵠᐃᐃ, ΔΔΔΔ, ⲆᐃⲆΔ) {
		var w1 = Δⵠᐃᐃ.w1;
		var w2 = Δⵠᐃᐃ.w2;
		var w3 = Δⵠᐃᐃ.w3;
		var Δⵠⵠᐃ = ⲆΔⲆ.ⵠΔΔ.x + ⲆⵠΔᐃΔ - 700;
		var ΔᐃΔⲆΔ = Math.max(ⲆΔⲆ.ⵠΔΔ.y + ⲆⲆᐃⵠᐃ, ᐃⵠΔ);
		var ⵠⲆΔⲆΔ = Math.max(-ⲆΔⲆ.ⵠΔΔ.y + ᐃΔⲆᐃ - ⵠΔΔΔᐃⲆᐃ - ⵠⵠΔΔⵠ, 0);
		var ⵠⵠⵠⵠ = ΔᐃΔⲆΔ;
		var ⵠⵠᐃⲆᐃ = ᐃΔⲆᐃ - ΔᐃΔⲆΔ - ⵠⲆΔⲆΔ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w1);
		else var ᐃᐃⲆ = w1.r;
		var ⲆΔⲆᐃ = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ;
		var Δᐃᐃⵠᐃ = ⲆΔⲆᐃ,
			ⲆᐃⲆⲆΔ = ⵠⵠⵠⵠ,
			ᐃⲆⲆⲆΔ = ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ,
			ⲆΔⵠΔⲆ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += ᐃᐃⲆ.x + ⲆⵠΔΔ.ⲆⲆⲆΔΔ - 2;
		var ΔⵠⲆᐃⲆ = ⲆΔⲆᐃ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w2);
		else var ᐃᐃⲆ = w2.r;
		var d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⲆΔⲆᐃ + ᐃᐃⲆ.x;
		var ⵠᐃΔⲆᐃ = ⲆΔⲆᐃ,
			ΔᐃⲆⵠΔ = ⵠⵠⵠⵠ,
			ⵠᐃᐃᐃⵠ = d2,
			ⵠⲆΔⵠΔ = ⵠⵠᐃⲆᐃ;
		ⲆΔⲆᐃ += d2 - ΔⵠΔΔ;
		var ⵠᐃⵠᐃΔ = ⲆΔⲆᐃ - ᐃΔⲆⲆⵠ;
		if (ⲆᐃⲆΔ) var ᐃᐃⲆ = Δⵠᐃᐃ.ᐃⲆⵠ(w3);
		else var ᐃᐃⲆ = w3.r;
		d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⲆΔⲆᐃ + ᐃᐃⲆ.x;
		if (ⵠᐃⵠᐃΔ < ⲆΔⲆᐃ + d2 - 3) {
			var ⲆⲆⵠⲆΔ = ΔᐃⲆΔⵠ;
			var ᐃⲆᐃΔᐃ = ⲆΔⲆᐃ,
				ΔᐃᐃⲆⲆ = ⵠⵠⵠⵠ,
				ᐃΔⲆⲆⲆ = d2,
				ⵠⵠⵠΔⵠ = ⵠⵠᐃⲆᐃ;
			ⲆΔⲆᐃ += d2 - 2;
			var ΔΔᐃᐃⵠ = ⲆΔⲆᐃ
		} else {
			var ⲆⲆⵠⲆΔ = ⲆⵠᐃΔΔ;
			ⲆΔⲆᐃ = ⵠᐃⵠᐃΔ;
			var ΔΔᐃᐃⵠ = -1
		}
		d2 = Δⵠⵠᐃ + ⲆⵠΔΔ.ⵠⲆⲆⲆᐃΔΔ - ⲆΔⲆᐃ;
		if (ⲆΔΔ.transition) {
			var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
			Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
		} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time];
		Ⲇ.fillRect(Δᐃᐃⵠᐃ, ⲆᐃⲆⲆΔ, ᐃⲆⲆⲆΔ, ⲆΔⵠΔⲆ);
		if (ⲆᐃⲆΔ) {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(15, 70, 76, 42, 139, 155, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆⵠΔⵠⲆⲆΔ[ⲆΔΔ.time]
		} else {
			if (ⲆΔΔ.transition) {
				var ᐃⲆᐃⵠ = ⲆΔΔ.time ? ᐃᐃΔᐃ - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
				Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
			} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
		}
		Ⲇ.fillRect(ⵠᐃΔⲆᐃ, ΔᐃⲆⵠΔ, ⵠᐃᐃᐃⵠ, ⵠⲆΔⵠΔ);
		if (ⲆⲆⵠⲆΔ) {
			if (ⲆᐃⲆΔ) {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(17, 94, 96, 169, 214, 211, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ΔᐃΔⵠⲆⲆⵠ[ⲆΔΔ.time]
			} else {
				if (ⲆΔΔ.transition) {
					var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
					Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(9, 55, 63, 11, 106, 132, ᐃⲆᐃⵠ)
				} else Ⲇ.fillStyle = Δ.ⲆᐃΔⵠⲆ[ⲆΔΔ.time]
			}
			Ⲇ.fillRect(ᐃⲆᐃΔᐃ, ΔᐃᐃⲆⲆ, ᐃΔⲆⲆⲆ, ⵠⵠⵠΔⵠ)
		}
		if (ᐃᐃΔΔ.ΔⲆⵠⲆΔ && ⲆᐃⲆΔ) Δⵠᐃᐃ.ΔⵠΔᐃΔⲆΔⲆΔ(ⵠᐃⵠᐃΔ, ΔΔᐃᐃⵠ, ΔⵠⲆᐃⲆ, Δⵠⵠᐃ, -ⲆΔⲆ.ⵠΔΔ.y + ⲆᐃⲆⲆΔ, -ⲆΔⲆ.ⵠΔΔ.y + ⲆᐃⲆⲆΔ + ⲆΔⵠΔⲆ)
	}
	var ⲆⲆΔⵠᐃⲆⲆⵠⲆ = ΔⲆᐃⲆ;
	var ⲆΔΔΔΔᐃᐃᐃⵠ = 1;
	var ᐃᐃⵠⵠⵠᐃⵠⵠⵠ = ΔΔⵠᐃ;
	var ⵠᐃⲆᐃⵠΔⲆⲆΔ = ᐃΔⲆⵠ;
	var ⲆᐃᐃΔⲆⲆΔΔⵠ = 0;
	var ⲆⲆⲆⵠⵠⵠΔⲆᐃ = ⵠᐃΔᐃ;
	var ΔΔⲆΔΔⲆⲆᐃΔ = ΔᐃⲆΔ;
	var ᐃΔⲆⵠⲆⲆⵠᐃΔ = 1;
	var ᐃᐃΔᐃΔΔⲆᐃⲆ = 0;
	var ⵠΔΔⵠᐃᐃᐃⲆᐃ = 1;
	var ⲆΔⵠᐃⲆⲆⵠᐃⵠ = ⵠᐃⲆᐃ;
	var ⵠⵠⲆΔᐃⲆΔⲆᐃ = ΔΔⵠΔⵠ;
	var ᐃΔⵠᐃⲆ = 0;
	var ⵠᐃⵠⲆⲆ = ΔⲆᐃ;
	var ᐃΔⵠⵠⵠ = ⵠΔⲆΔ;
	var ΔΔⵠⲆⵠⲆⵠ = 0;
	var ⵠᐃᐃⲆⵠΔⲆ = 1;
	var ⲆΔⲆⵠ = ⲆⲆⵠΔ;

	function ΔⵠⵠᐃΔᐃⵠⲆⵠ(ⵠⵠ, ⵠᐃΔ) {
		if (ΔⲆⵠᐃᐃ === ⵠᐃΔ) ⵠᐃΔ = .033;
		var ΔⲆ = {
			x: 0,
			y: ΔⲆⵠ
		};
		var Ⲇᐃ = ΔΔᐃ;
		var ᐃᐃΔⲆΔ = 0;
		var ᐃⲆΔⲆⵠΔΔ = function() {
			ᐃᐃΔⲆΔ += ᐃᐃΔⲆ;
			if (ᐃᐃΔⲆΔ > ⵠᐃΔ) {
				Ⲇᐃ = (Ⲇᐃ + 1) % ⵠⵠ.length;
				ᐃᐃΔⲆΔ -= ⵠᐃΔ
			}
			return ⵠⵠ[Ⲇᐃ]
		};
		var ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
			ⵠⲆΔⲆ(ΔⲆΔΔΔ, ᐃⲆΔⲆⵠΔΔ(), ΔⲆ.x, ΔⲆ.y)
		};
		return {
			"ⵠⵠ": ⵠⵠ,
			translate: ΔⲆ,
			"ⲆⵠᐃⲆ": ⲆⵠᐃⲆ
		}
	}

	function ΔⵠΔᐃᐃⵠⵠ(ΔΔ, ⵠᐃᐃΔ) {
		var ⵠⲆΔⲆⵠⲆΔ = ΔΔ.getBoundingClientRect();
		return {
			x: ⵠᐃᐃΔ.clientX - ⵠⲆΔⲆⵠⲆΔ.left,
			y: ⵠᐃᐃΔ.clientY - ⵠⲆΔⲆⵠⲆΔ.top
		}
	}

	function ⵠΔⲆⲆⲆΔⲆᐃⵠ(ⵠⵠ) {
		var ΔⲆ = {
			y: 0,
			x: ⲆⵠⲆ
		};
		var ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
			ⵠⲆΔⲆ(ΔⲆΔΔΔ, ⵠⵠ, ΔⲆ.x, ΔⲆ.y)
		};
		return {
			"ⵠⵠ": ⵠⵠ,
			translate: ΔⲆ,
			"ⲆⵠᐃⲆ": ⲆⵠᐃⲆ
		}
	}

	function ΔⵠⲆᐃᐃⲆⲆΔⵠ(ⵠⵠ, ᐃΔⲆⵠΔⵠⵠ, ⵠⵠⲆⵠⲆ, ⲆᐃΔΔⲆⲆᐃ, ⵠΔⵠΔᐃΔΔ, ᐃⲆⲆ, ΔⲆⲆ) {
		ⵠⵠ.end = ᐃΔⲆⵠΔⵠⵠ;
		ⵠⵠ.start = ⵠⵠⲆⵠⲆ;
		ⵠⵠ.ⲆᐃΔΔⲆⲆᐃ = ⲆᐃΔΔⲆⲆᐃ;
		ⵠⵠ.ⵠΔⵠΔᐃΔΔ = ⵠΔⵠΔᐃΔΔ;
		ⵠⵠ.width = ⵠⵠ.ⵠⵠ.width;
		ⵠⵠ.height = ⵠⵠ.ⵠⵠ.height;
		ⵠⵠ.scale = (ᐃΔⲆⵠΔⵠⵠ + ⵠⵠⲆⵠⲆ) / ⵠⲆⵠᐃ;
		ⵠⵠ.ᐃⵠΔⵠ = false;
		ⵠⵠ.ⲆⵠᐃⲆ = function(Ⲇ) {
			ⵠⵠ.translate.x = ᐃΔΔᐃ - ⵠⵠ.width / ΔⵠΔΔ;
			ⵠⲆΔⲆ(Ⲇ, ⵠⵠ.ⵠⵠ, ΔΔⵠᐃ, 0, ⵠⵠ.ⵠⵠ.width, ⵠⵠ.ⵠⵠ.height, ⵠⵠ.translate.x, ⵠⵠ.translate.y, ⵠⵠ.width, ⵠⵠ.height)
		}
	}

	function ᐃⲆⲆⵠ(ⵠⵠ, ⲆᐃⵠⲆⵠ, ᐃᐃΔ, ᐃⲆᐃ, ⵠΔⵠⵠᐃ) {
		var ΔⲆ = {
			x: ᐃᐃΔ,
			y: ᐃⲆᐃ,
			"ⲆⵠⲆⲆᐃ": ᐃᐃΔ,
			"ΔⲆΔΔⲆ": ᐃⲆᐃ
		};
		var ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
			ⵠⲆΔⲆ(ΔⲆΔΔΔ, ⵠⵠ, ΔⲆ.x, ΔⲆ.y, ⵠⵠ.width / 2, ⵠⵠ.height / ᐃᐃΔⵠ)
		};
		return {
			translate: ΔⲆ,
			"ⲆⵠᐃⲆ": ⲆⵠᐃⲆ,
			active: ⲆᐃⵠⲆⵠ,
			position: ⵠΔⵠⵠᐃ
		}
	}

	function ΔΔⲆ(ᐃⲆⲆ, ΔⲆⲆ, text, ᐃΔⲆΔΔΔΔ, ⲆⵠΔⵠⲆⵠⲆ, ᐃⵠΔⵠ, callback, ᐃᐃΔ, ᐃⲆᐃ, ⵠΔⵠⵠᐃ, ⲆᐃⵠⲆⵠ) {
		if (undefined === ᐃⲆᐃ) ᐃⲆᐃ = 0;
		ᐃᐃΔ === ᐃᐃⲆⵠⲆ && (ᐃᐃΔ = 0);
		if (ΔΔⵠΔΔ === ⵠΔⵠⵠᐃ) ⵠΔⵠⵠᐃ = 0;
		ⲆᐃⵠⲆⵠ === undefined && (ⲆᐃⵠⲆⵠ = 1);
		ⲆⵠΔⵠⲆⵠⲆ = ⲆⵠΔⵠⲆⵠⲆ === ⲆⵠΔᐃ ? 3 : 1 === ⲆⵠΔⵠⲆⵠⲆ ? 2 : 1;
		if (ᐃⵠΔⵠ !== 1) ᐃⵠΔⵠ = 0;
		if (ᐃΔⲆΔΔΔΔ) var ⵠⵠ = ᐃΔⲆΔΔΔΔ;
		var ΔᐃᐃΔ = {
			width: ᐃⲆⲆ,
			height: ΔⲆⲆ,
			"ⵠⵠ": ⵠⵠ,
			state: ΔΔⵠⲆⵠⲆⵠ,
			translate: {
				x: ᐃᐃΔ,
				y: ᐃⲆᐃ,
				"ⲆⵠⲆⲆᐃ": ᐃᐃΔ,
				"ΔⲆΔΔⲆ": ᐃⲆᐃ
			},
			"ⵠᐃⲆⲆᐃᐃΔⵠᐃ": ᐃⵠΔⵠ,
			"ᐃⵠΔⵠ": ⵠⵠᐃⵠ,
			callback: callback,
			position: ⵠΔⵠⵠᐃ,
			active: ⲆᐃⵠⲆⵠ
		};
		var ᐃⲆΔⲆⵠΔΔ = function() {
			return ΔᐃᐃΔ.ⵠⵠ[ΔᐃᐃΔ.state]
		};
		var ⵠᐃⲆᐃⵠⵠⵠ = function(ᐃⲆΔⲆ) {
			var ΔⲆ = ΔᐃᐃΔ.translate;
			(ΔᐃᐃΔ.width === ⵠⵠⲆⲆ || 0 === ΔᐃᐃΔ.height) && (ΔᐃᐃΔ.width = ΔᐃᐃΔ.ⵠⵠ[ⵠⵠⲆⲆ].width, ΔᐃᐃΔ.height = ΔᐃᐃΔ.ⵠⵠ[0].height);
			return ᐃⲆΔⲆ.x > ΔⲆ.x && ᐃⲆΔⲆ.x < ΔⲆ.x + ΔᐃᐃΔ.width / ⲆⵠΔⵠⲆⵠⲆ && ᐃⲆΔⲆ.y > ΔⲆ.y && ᐃⲆΔⲆ.y < ΔⲆ.y + ΔᐃᐃΔ.height / ⲆⵠΔⵠⲆⵠⲆ
		};
		var ⵠᐃⲆⲆ = function(ΔΔ, ᐃⲆΔⲆ, ⲆⲆⵠⲆ) {
			if (ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ)) {
				if (ⵠᐃⵠⲆⲆ == ⲆⲆⵠⲆ) ΔᐃᐃΔ.state = ⲆΔⲆⵠ;
				else if (ⲆⲆⵠⲆ == ᐃΔⵠⵠⵠ) ΔᐃᐃΔ.state = ⵠᐃᐃⲆⵠΔⲆ;
				else ᐃΔⵠᐃⲆ == ⲆⲆⵠⲆ && ΔᐃᐃΔ.state != ⲆΔⲆⵠ && (ΔᐃᐃΔ.state = ⵠᐃᐃⲆⵠΔⲆ);
				return true
			}
			ΔᐃᐃΔ.state = ΔΔⵠⲆⵠⲆⵠ;
			return false
		};
		var ᐃⵠΔⵠ = function() {
			var ᐃⵠⵠⲆ = ⵠⵠᐃᐃΔ;
			if (ΔᐃᐃΔ.ⵠᐃⲆⲆᐃᐃΔⵠᐃ === 1) {
				if (ⵠᐃᐃⲆⵠΔⲆ === ΔᐃᐃΔ.state || ΔᐃᐃΔ.state === ⲆΔⲆⵠ) ΔᐃᐃΔ.ᐃⵠΔⵠ = (ΔᐃᐃΔ.ᐃⵠΔⵠ + 1e3 * ᐃᐃΔⲆ) % 1e3;
				else if (ΔᐃᐃΔ.ᐃⵠΔⵠ > ΔⲆᐃⲆ) {
					ΔᐃᐃΔ.ᐃⵠΔⵠ = 500 < ΔᐃᐃΔ.ᐃⵠΔⵠ ? ΔᐃᐃΔ.ᐃⵠΔⵠ + ᐃᐃΔⲆ * 1e3 : ΔᐃᐃΔ.ᐃⵠΔⵠ - 1e3 * ᐃᐃΔⲆ;
					(ΔᐃᐃΔ.ᐃⵠΔⵠ < ᐃΔⵠⵠ || 1e3 < ΔᐃᐃΔ.ᐃⵠΔⵠ) && (ΔᐃᐃΔ.ᐃⵠΔⵠ = 0)
				}
				ᐃⵠⵠⲆ = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ΔᐃᐃΔ.ᐃⵠΔⵠ > 500 ? (1e3 - ΔᐃᐃΔ.ᐃⵠΔⵠ) / 500 : ΔᐃᐃΔ.ᐃⵠΔⵠ / 500) * .2
			}
			return ᐃⵠⵠⲆ
		};
		var ⲆⵠᐃⲆ;
		if (ⵠⵠΔⲆ === ⲆⵠΔⵠⲆⵠⲆ) {
			ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
				var ᐃⵠⵠⲆ = ΔⲆᐃ + ᐃⵠΔⵠ();
				var ⵠⵠ = ᐃⲆΔⲆⵠΔΔ();
				var ᐃᐃⲆ = ᐃⵠⵠⲆ * ΔᐃᐃΔ.width / ᐃⲆⵠᐃ;
				var ΔᐃⲆ = ᐃⵠⵠⲆ * ΔᐃᐃΔ.height / 2;
				var ⵠΔⵠᐃⲆⲆⵠ = (ᐃᐃⲆ - ΔᐃᐃΔ.width / 2) / 2;
				var ΔⲆΔⲆⲆ = (ΔᐃⲆ - ΔᐃᐃΔ.height / ᐃⲆⲆΔ) / ᐃⲆⲆΔ;
				ⵠⲆΔⲆ(ΔⲆΔΔΔ, ⵠⵠ, ΔᐃᐃΔ.translate.x - ⵠΔⵠᐃⲆⲆⵠ, ΔᐃᐃΔ.translate.y - ΔⲆΔⲆⲆ, ᐃᐃⲆ, ΔᐃⲆ)
			}
		} else if (ⲆⵠΔⵠⲆⵠⲆ === 3) {
			ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
				var ⵠⵠ = ᐃⲆΔⲆⵠΔΔ();
				var ᐃᐃⲆ = ΔᐃᐃΔ.width;
				var ΔᐃⲆ = ΔᐃᐃΔ.height;
				var ⵠΔⵠᐃⲆⲆⵠ = (ᐃᐃⲆ - ΔᐃᐃΔ.width) / 2;
				var ΔⲆΔⲆⲆ = (ΔᐃⲆ - ΔᐃᐃΔ.height) / ᐃⲆⲆΔ;
				ⵠⲆΔⲆ(ΔⲆΔΔΔ, ⵠⵠ, ΔᐃᐃΔ.translate.x - ⵠΔⵠᐃⲆⲆⵠ, ΔᐃᐃΔ.translate.y - ΔⲆΔⲆⲆ, ᐃᐃⲆ, ΔᐃⲆ)
			};
			ⲆⵠΔⵠⲆⵠⲆ = 1
		} else {
			ⲆⵠᐃⲆ = function(ΔⲆΔΔΔ) {
				var ⵠⵠ = ᐃⲆΔⲆⵠΔΔ();
				ⵠⲆΔⲆ(ΔⲆΔΔΔ, ⵠⵠ, ΔᐃᐃΔ.translate.x, ΔᐃᐃΔ.translate.y)
			}
		}
		return {
			info: ΔᐃᐃΔ,
			"ⵠᐃⲆⲆ": ⵠᐃⲆⲆ,
			"ⲆⵠᐃⲆ": ⲆⵠᐃⲆ,
			"ⵠᐃⲆᐃⵠⵠⵠ": ⵠᐃⲆᐃⵠⵠⵠ
		}
	}

	function ⵠᐃΔᐃⲆ(text, ΔΔᐃⵠΔ, ᐃᐃ, ΔⲆⲆ, ᐃⲆⲆ, ⲆᐃⲆΔΔⲆᐃ, ΔᐃᐃΔᐃΔⵠ, ⵠⲆⵠΔΔΔⲆ, ⲆⵠΔⵠⲆ, ⲆⲆⵠⲆΔΔⲆΔⵠ, ⵠᐃᐃⲆⲆ, ⵠⲆᐃᐃⵠ, ΔΔᐃⵠⵠⲆⵠ, ᐃⵠⲆⲆᐃⲆᐃ, ⵠΔΔᐃΔⲆᐃ) {
		if (text.length === Δⵠⵠ) text = " ";
		ⲆⲆΔΔᐃ === ΔᐃᐃΔᐃΔⵠ && (ΔᐃᐃΔᐃΔⵠ = Δⵠⵠ);
		if (ᐃⲆⵠⲆⵠ === ⵠⲆⵠΔΔΔⲆ) ⵠⲆⵠΔΔΔⲆ = ΔΔⵠᐃ;
		undefined === ⲆⵠΔⵠⲆ && (ⲆⵠΔⵠⲆ = 0);
		if (undefined === ᐃⵠⲆⲆᐃⲆᐃ) ᐃⵠⲆⲆᐃⲆᐃ = 0;
		var ΔΔ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
		var Ⲇ = ΔΔ.getContext(ⵠ[140]);
		Ⲇ.textBaseline = ⵠ[230], Ⲇ.font = (ⵠΔΔᐃΔⲆᐃ !== ⲆⵠᐃΔⲆ ? ⵠΔΔᐃΔⲆᐃ + " " : "") + ΔⲆⲆ + "px " + ΔΔᐃⵠΔ;
		ΔΔⵠΔΔ !== ᐃⲆⲆ ? ᐃⲆⲆ = Math.min(Ⲇ.measureText(text).width, ᐃⲆⲆ) : ᐃⲆⲆ = Ⲇ.measureText(text).width;
		ΔΔ.width = ᐃⲆⲆ + ΔᐃᐃΔᐃΔⵠ;
		ΔΔ.height = ΔⲆⲆ + ⵠⲆⵠΔΔΔⲆ;
		if (ⲆᐃⲆΔΔⲆᐃ !== ᐃⲆᐃᐃᐃ) {
			if (ᐃⲆⵠⲆⵠ !== ⵠᐃᐃⲆⲆ) Ⲇ.globalAlpha = ⵠᐃᐃⲆⲆ;
			Ⲇ.fillStyle = ⲆᐃⲆΔΔⲆᐃ;
			undefined !== ⵠⲆᐃᐃⵠ ? (ⵠΔΔᐃΔᐃⲆΔᐃ(Ⲇ, ⲆⵠΔⵠⲆ + 2, ⲆⵠΔⵠⲆ, ᐃⲆⲆ + ΔᐃᐃΔᐃΔⵠ - ⵠᐃᐃⵠ * ⲆⵠΔⵠⲆ - ⲆⲆⲆⵠᐃ, ΔⲆⲆ + ⵠⲆⵠΔΔΔⲆ - ⲆⵠΔⵠⲆ * ᐃⲆⲆΔ, ⵠⲆᐃᐃⵠ), Ⲇ.fill()) : Ⲇ.fillRect(ⲆⵠΔⵠⲆ, ⲆⵠΔⵠⲆ, ᐃⲆⲆ + ΔᐃᐃΔᐃΔⵠ - ⲆⵠΔⵠⲆ * 2, ΔⲆⲆ + ⵠⲆⵠΔΔΔⲆ - 2 * ⲆⵠΔⵠⲆ);
			Ⲇ.globalAlpha = ΔΔᐃⵠ;
			if (0 !== ⲆⵠΔⵠⲆ) {
				Ⲇ.lineWidth = ⲆⵠΔⵠⲆ;
				Ⲇ.strokeStyle = ⲆⲆⵠⲆΔΔⲆΔⵠ;
				Ⲇ.stroke()
			}
		}
		Ⲇ.textBaseline = ⵠ[230];
		Ⲇ.font = (ᐃⲆⵠⲆⵠ !== ⵠΔΔᐃΔⲆᐃ ? ⵠΔΔᐃΔⲆᐃ + " " : "") + ΔⲆⲆ + "px " + ΔΔᐃⵠΔ;
		if (ΔΔᐃⵠⵠⲆⵠ !== ΔΔΔⲆⲆ) {
			Ⲇ.strokeStyle = ΔΔᐃⵠⵠⲆⵠ;
			Ⲇ.lineWidth = ᐃⵠⲆⲆᐃⲆᐃ;
			Ⲇ.lineJoin = "miter";
			Ⲇ.miterLimit = 2;
			Ⲇ.strokeText(text, Math.floor(ΔᐃᐃΔᐃΔⵠ / ᐃΔⵠᐃ), Math.floor(ⵠⲆⵠΔΔΔⲆ / 2) + Math.floor(ΔⲆⲆ / 2), ᐃⲆⲆ)
		}
		Ⲇ.fillStyle = ᐃᐃ;
		Ⲇ.fillText(text, Math.floor(ΔᐃᐃΔᐃΔⵠ / ⵠΔⲆΔ), Math.floor(ⵠⲆⵠΔΔΔⲆ / 2) + Math.floor(ΔⲆⲆ / 2), ᐃⲆⲆ);
		ΔΔ.w2 = ΔΔ.width / ⵠᐃᐃⵠ;
		ΔΔ.ⵠⵠᐃⵠⵠ = ΔΔ.height / 2;
		return ΔΔ
	}

	function ᐃᐃᐃⵠΔⵠΔΔᐃ(Ⲇ) {
		Ⲇ[ⲆⵠΔᐃᐃᐃΔ[164]] = false;
		Ⲇ.ᐃᐃᐃΔⲆⲆΔⲆΔ = ⲆᐃⲆᐃΔ;
		Ⲇ.ΔᐃᐃⲆΔⵠΔΔⵠ = false;
		Ⲇ.ⵠᐃⲆⵠⵠΔⵠⵠⲆ = ⵠⲆⵠΔⵠ;
		Ⲇ.ⲆᐃⵠΔⲆⵠᐃⵠᐃ = ⵠⲆⲆⵠΔ
	}

	function ΔⵠⲆΔⵠΔᐃᐃⵠ(ⵠⵠ) {
		ⵠⵠ.scale += ⵠⵠ.ᐃⵠΔⵠ ? ᐃᐃΔⲆ / ⵠⵠ.ⲆᐃΔΔⲆⲆᐃ : -ᐃᐃΔⲆ / ⵠⵠ.ⵠΔⵠΔᐃΔΔ;
		if (ⵠⵠ.end < ⵠⵠ.scale) ⵠⵠ.ᐃⵠΔⵠ = ΔᐃⲆⵠⲆ;
		else if (ⵠⵠ.start > ⵠⵠ.scale) ⵠⵠ.ᐃⵠΔⵠ = ⵠⲆⵠⵠⲆ
	}
	var ⵠⲆⵠⲆ = ⵠ[109];
	var ⵠⲆⵠᐃⵠᐃⵠ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ(ⵠ[442]) === "1" ? 1 : ΔⲆⵠ;
	var ΔᐃΔᐃᐃⲆᐃᐃΔ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("password");
	var ⵠΔΔⲆᐃ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("debug") || ᐃᐃΔⲆⲆ;
	undefined !== ⵠΔΔⲆᐃ && (ⵠΔΔⲆᐃ = JSON.parse(ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[230]](ⵠΔΔⲆᐃ)));
	var ᐃⵠΔⲆⵠΔᐃ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("server") || ⵠᐃΔᐃΔ;
	var ⲆⵠⲆᐃⵠΔΔ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("region") || ΔⲆⵠᐃᐃ;
	var Ⲇᐃⵠᐃⵠⵠⵠ = "starve.io";
	var ΔⲆᐃᐃⵠⲆΔ = "https://" + Ⲇᐃⵠᐃⵠⵠⵠ;
	var ⵠΔⵠⵠ = {
		"ΔᐃⲆⲆ": ⲆⲆⵠΔ,
		IDLE: 64,
		"ᐃⵠΔᐃⲆ": 4,
		"Ⲇⵠⵠⵠⵠⵠⵠ": ⲆⵠⲆⲆⲆΔⲆ,
		"ⲆⲆᐃⲆⲆⲆΔ": 16,
		"ᐃⵠⲆⲆⲆⵠⵠ": 128,
		"ⵠⵠᐃΔᐃΔⵠ": 256,
		"ΔΔΔΔᐃⵠᐃ": 32,
		"ΔⵠⲆⲆΔⲆⲆⵠᐃ": ⲆᐃⲆⲆ
	};
	var ⵠⵠᐃΔⵠⲆⲆ = [{
		"ⲆⲆᐃᐃⵠ": 1e3,
		items: [
			[ⵠᐃᐃⵠ, ⵠⲆ.ⲆⵠΔⲆΔ],
			[ΔΔⵠΔⵠ, ⵠⲆ.ⵠᐃᐃⵠⵠ],
			[8, ⵠⲆ.ⵠⵠᐃΔᐃ],
			[ⲆΔⵠⲆ, ⵠⲆ.ⵠⲆΔⵠᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 2e3,
		items: [
			[ⵠⵠΔⲆ, ⵠⲆ.ⵠᐃᐃΔΔ],
			[1, ⵠⲆ.ⵠᐃΔⵠᐃ],
			[2, ⵠⲆ.ⵠᐃᐃⵠⵠ],
			[16, ⵠⲆ.ⵠⵠᐃΔᐃ],
			[ⵠⲆΔΔ, ⵠⲆ.ⵠⲆΔⵠᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 4e3,
		items: [
			[3, ⵠⲆ.ⵠᐃᐃΔΔ],
			[1, ⵠⲆ.ᐃⵠᐃⲆΔ],
			[Δⵠⵠⵠ, ⵠⲆ.ⵠᐃᐃⵠⵠ],
			[ᐃⵠΔⲆⵠⲆⲆ, ⵠⲆ.ⵠⵠᐃΔᐃ],
			[ᐃΔᐃΔ, ⵠⲆ.ⵠⲆΔⵠᐃ],
			[1, ⵠⲆ.ΔᐃΔⵠΔ],
			[80, ⵠⲆ.ⵠᐃΔⲆ],
			[140, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 8e3,
		items: [
			[ᐃᐃΔᐃ, ⵠⲆ.ⵠΔΔⵠ],
			[4, ⵠⲆ.ⵠᐃᐃΔΔ],
			[ΔΔⲆΔ, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[6, ⵠⲆ.ⵠᐃᐃⵠⵠ],
			[30, ⵠⲆ.ⵠⵠᐃΔᐃ],
			[ⵠΔⵠⵠⲆ, ⵠⲆ.ⵠⲆΔⵠᐃ],
			[1, ⵠⲆ.ΔᐃΔⵠΔ],
			[150, ⵠⲆ.ⵠᐃΔⲆ],
			[200, ⵠⲆ.ᐃⲆΔᐃ],
			[60, ⵠⲆ.ⲆᐃⲆⵠ],
			[ᐃⵠΔⲆ, ⵠⲆ.ⵠΔΔⲆⵠ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 16e3,
		items: [
			[1, ⵠⲆ.ⵠΔΔⵠ],
			[1, ⵠⲆ.ᐃᐃΔᐃΔ],
			[1, ⵠⲆ.ⵠᐃᐃⲆⵠ],
			[7, ⵠⲆ.ⵠᐃⲆⲆΔ],
			[ⲆⲆⵠΔ, ⵠⲆ.ⵠΔΔⲆⵠ],
			[ΔⵠΔΔ, ⵠⲆ.ⵠᐃᐃΔΔ],
			[1, ⵠⲆ.ⲆⲆᐃⲆⵠ],
			[15, ⵠⲆ.ᐃᐃᐃΔⲆ],
			[2, ⵠⲆ.ΔᐃᐃⲆⵠ],
			[ΔΔᐃᐃ, ⵠⲆ.ΔⵠⲆΔᐃ],
			[1, ⵠⲆ.ⲆΔΔΔΔ],
			[200, ⵠⲆ.ⵠᐃΔⲆ],
			[300, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 16e3,
		items: [
			[1, ⵠⲆ.ⵠΔΔⵠ],
			[1, ⵠⲆ.ΔⲆⲆΔᐃ],
			[1, ⵠⲆ.ᐃᐃⲆᐃⲆ],
			[ⵠⵠⲆ, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[ⲆⲆᐃⵠΔ, ⵠⲆ.ⵠᐃⲆⲆΔ],
			[4, ⵠⲆ.ⵠΔΔⲆⵠ],
			[6, ⵠⲆ.ⵠᐃᐃΔΔ],
			[3, ⵠⲆ.ⵠⵠⵠᐃⲆ],
			[1, ⵠⲆ.ΔᐃⵠⲆΔ],
			[200, ⵠⲆ.ⵠᐃΔⲆ],
			[300, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 16e3,
		items: [
			[1, ⵠⲆ.ⵠΔΔⵠ],
			[ⵠⵠⲆΔ, ⵠⲆ.ᐃⲆΔᐃⵠ],
			[ⲆⲆΔᐃ, ⵠⲆ.ⲆⲆΔⲆⵠ],
			[ⵠⵠⲆⵠ, ⵠⲆ.ⵠⵠⵠᐃⲆ],
			[1, ΔⵠⲆΔ],
			[1, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[ᐃⲆⲆΔᐃ, ⵠⲆ.ⵠᐃⲆⲆΔ],
			[2, ⵠⲆ.ⵠΔΔⲆⵠ],
			[ⲆⵠΔΔⲆ, ⵠⲆ.ⵠᐃᐃΔΔ],
			[150, ⵠⲆ.ⵠᐃΔⲆ],
			[200, ⵠⲆ.ᐃⲆΔᐃ],
			[1, ⵠⲆ.ⲆΔⲆᐃΔ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 16e3,
		items: [
			[ⵠⲆⲆ, ⵠⲆ.ⵠΔΔⵠ],
			[1, ⵠⲆ.ΔΔᐃᐃΔ],
			[1, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[7, ⵠⲆ.ⵠᐃⲆⲆΔ],
			[ⵠⵠΔⲆ, ⵠⲆ.ⵠΔΔⲆⵠ],
			[4, ⵠⲆ.ⵠᐃᐃΔΔ],
			[2, ⵠⲆ.ⵠⵠⲆΔΔ],
			[ΔⲆΔⲆ, ⵠⲆ.ΔⲆⲆΔⵠ],
			[10, ⵠⲆ.ⵠᐃⲆᐃᐃ],
			[ⵠⲆᐃⵠᐃ, ⵠⲆ.ⵠᐃⲆΔⲆ],
			[4, ⵠⲆ.ΔⲆΔⵠᐃ],
			[1, ⵠⲆ.ᐃΔⲆΔⵠ],
			[500, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 16e3,
		items: [
			[1, ⵠⲆ.ⵠΔΔⵠ],
			[ᐃΔⲆⵠ, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[16, ⵠⲆ.ΔΔᐃᐃᐃ],
			[ⵠⵠⲆ, ⵠⲆ.ⵠΔΔⲆⵠ],
			[ᐃⲆⵠⲆΔ, ⵠⲆ.ⵠᐃᐃΔΔ],
			[ⵠⵠⲆⵠ, ⵠⲆ.ⵠⵠⵠᐃⲆ],
			[ΔᐃⵠΔ, ⵠⲆ.ⲆⲆΔⲆᐃ],
			[ⵠⵠⲆ, ⵠⲆ.ⵠⲆⵠΔⲆ],
			[ᐃⵠⲆⲆⲆⵠⲆ, ⵠⲆ.ⲆΔᐃΔΔ],
			[150, ⵠⲆ.ⵠᐃΔⲆ],
			[200, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}, {
		"ⲆⲆᐃᐃⵠ": 2e4,
		items: [
			[1, ⵠⲆ.ⵠΔΔⵠ],
			[1, ⵠⲆ.ᐃᐃΔⵠᐃ],
			[1, ⵠⲆ.ⵠᐃⲆⲆΔ],
			[ᐃⵠ, ⵠⲆ.ⵠΔΔⲆⵠ],
			[3, ⵠⲆ.ⵠᐃᐃΔΔ],
			[3, ⵠⲆ.ⵠⵠⵠᐃⲆ],
			[1, ⵠⲆ.ⵠⲆⵠᐃᐃ],
			[1, ⵠⲆ.ⲆᐃΔΔⲆ],
			[ⵠⵠⲆΔ, ⵠⲆ.ΔⲆⲆᐃᐃ],
			[2, ⵠⲆ.Δⵠⵠᐃⵠ],
			[50, ⵠⲆ.ⵠᐃΔⲆ],
			[100, ⵠⲆ.ᐃⲆΔᐃ]
		]
	}];
	let ⲆⵠⵠⲆΔⵠⲆ = ⲆⵠⲆ;
	const ΔⲆⲆᐃΔᐃΔ = [];

	function ΔΔΔᐃΔⵠΔⵠᐃ(ᐃⵠΔⵠᐃ, ⵠΔᐃⲆⵠΔᐃⵠᐃ, ΔΔⵠⲆⵠᐃⵠ) {
		const ᐃⵠⲆⲆΔⲆΔ = new Uint8Array(ᐃⵠΔⵠᐃ);
		const ΔᐃᐃⵠⲆ = ᐃⵠⲆⲆΔⲆΔ.length;
		let ᐃⲆⵠΔⲆⵠⵠ = ΔⲆⲆᐃΔᐃΔ[ΔᐃᐃⵠⲆ];
		let ᐃΔΔΔⲆ = undefined;
		let ᐃᐃᐃᐃᐃⵠΔ = ⵠⵠⲆᐃⲆ;
		if (ᐃⲆⵠΔⲆⵠⵠ === undefined) {
			ⲆⵠⵠⲆΔⵠⲆ += ⵠᐃᐃⵠ * ΔᐃᐃⵠⲆ;
			if (ⲆⵠⵠⲆΔⵠⲆ < 65535) {
				ᐃΔΔΔⲆ = ⲆⵠΔΔⵠⵠⵠ(ⵠⲆⵠⵠᐃᐃΔ(ΔᐃᐃⵠⲆ))
			} else {
				ⲆⵠⵠⲆΔⵠⲆ = ΔᐃᐃⵠⲆ;
				for (let ᐃⲆ = 0; ᐃⲆ < ΔⲆⲆᐃΔᐃΔ.length; ᐃⲆ++) {
					if (undefined !== ΔⲆⲆᐃΔᐃΔ[ᐃⲆ]) {
						const ᐃΔΔΔⲆ = ΔⲆⲆᐃΔᐃΔ[ᐃⲆ][0];
						ΔⲆⲆᐃΔᐃΔ[ᐃⲆ] = ΔⲆⵠᐃᐃ;
						ΔⲆⵠⲆⵠΔⲆ(ᐃΔΔΔⲆ)
					}
				}
				ᐃΔΔΔⲆ = ⲆⵠΔΔⵠⵠⵠ(ⵠⲆⵠⵠᐃᐃΔ(ΔᐃᐃⵠⲆ));
				ᐃⵠⵠⲆⲆᐃᐃ()
			}
			ᐃᐃᐃᐃᐃⵠΔ = ⵠⵠΔΔⲆΔΔ(ᐃΔΔΔⲆ);
			ΔⲆⲆᐃΔᐃΔ[ΔᐃᐃⵠⲆ] = [ᐃΔΔΔⲆ, ᐃᐃᐃᐃᐃⵠΔ]
		} else {
			ᐃΔΔΔⲆ = ᐃⲆⵠΔⲆⵠⵠ[ⵠⲆⲆᐃ];
			ᐃᐃᐃᐃᐃⵠΔ = ᐃⲆⵠΔⲆⵠⵠ[ΔΔⲆΔ]
		}
		for (let ᐃⲆ = 0; ᐃⵠⲆⲆΔⲆΔ.length > ᐃⲆ; ᐃⲆ++) ᐃᐃᐃᐃᐃⵠΔ[ᐃⲆ] = ᐃⵠⲆⲆΔⲆΔ[ᐃⲆ];
		ΔΔⲆⲆᐃᐃⲆ(ᐃΔΔΔⲆ, ⵠΔᐃⲆⵠΔᐃⵠᐃ, ΔΔⵠⲆⵠᐃⵠ);
		for (let ᐃⲆ = 0; ᐃⵠⲆⲆΔⲆΔ.length > ᐃⲆ; ᐃⲆ++) ᐃⵠⲆⲆΔⲆΔ[ᐃⲆ] = ᐃᐃᐃᐃᐃⵠΔ[ᐃⲆ];
		return ᐃⵠⲆⲆΔⲆΔ
	}
	var ᐃΔᐃᐃΔ = {
		"ⲆⵠⵠⵠΔⵠⵠ": 52,
		"ᐃᐃᐃⵠᐃΔΔᐃΔ": 50,
		"ⵠΔᐃΔⵠⲆᐃⲆΔ": 8e3,
		"ⵠᐃᐃⲆⵠΔΔⵠⵠ": 200,
		"ⵠᐃΔᐃⵠⲆΔⲆᐃ": 2e3,
		"ᐃΔᐃⲆⵠᐃⲆ": 6e5,
		"ⵠΔⲆᐃⲆⲆΔΔᐃ": ᐃⲆᐃᐃΔⵠⵠ,
		"ⵠⵠⲆᐃⲆⲆᐃⵠᐃ": ⵠⲆⲆᐃⵠ,
		"ⵠⵠᐃⵠΔΔΔ": ΔΔᐃᐃ,
		"ΔⲆΔⵠⲆⵠⲆⲆᐃ": 25,
		"ΔⲆⲆⲆΔᐃⵠ": ᐃΔΔΔ,
		"ΔⵠΔⲆⲆΔⲆ": ⵠᐃⵠΔ,
		"ⲆⵠⲆΔⲆⲆⵠ": ᐃⲆᐃΔⵠ,
		"ⲆⲆᐃⲆⲆⲆΔ": .2,
		"ⵠᐃᐃΔⵠᐃΔ": 0,
		"ⵠⲆΔΔᐃⲆᐃⵠΔ": Ⲇᐃⵠⵠ,
		"ᐃⵠⲆⲆΔᐃᐃⵠᐃ": ᐃΔⵠΔΔⵠⲆ,
		"ᐃᐃⵠᐃⵠⲆΔΔᐃ": .58,
		"ⲆⲆⵠᐃᐃΔΔᐃⲆ": ΔᐃΔΔⲆ,
		"ⲆⵠⲆⵠΔⲆΔ": 4,
		"ⲆᐃΔⵠⵠᐃⲆᐃⵠ": "[" + ⵠᐃΔΔⲆ + "]",
		"ΔΔⵠⵠⲆΔⲆⲆΔ": 6e4,
		"ᐃΔᐃⵠⵠⵠⵠⲆⲆ": 125e3,
		"ΔᐃⲆᐃⲆᐃΔΔⲆ": 20,
		"ⲆᐃⲆΔΔᐃⲆ": .2
	};

	function ΔᐃᐃⲆᐃΔⵠⵠⵠ() {
		var Ⲇⵠᐃ = this;
		this.ᐃⵠᐃⵠ = null;
		this.Δⵠⵠᐃᐃ = 0;
		this.ⵠⲆᐃᐃΔ = [];
		this.ⵠⵠᐃΔⵠⲆᐃ = {};
		this.Δᐃᐃⵠᐃᐃᐃ = {};
		this.ΔⵠⵠᐃΔ = [
			[],
			[],
			[],
			[],
			[],
			[],
			[],
			[],
			[]
		];
		this.ΔⵠⲆⲆⲆΔᐃ = [-1, -1, -ΔⲆᐃ, -1, -ΔⲆᐃ, -ⲆⲆΔᐃ, -ⵠᐃΔᐃ, -ⵠⲆⲆ, -ⵠⵠⲆΔ];
		this.ⵠΔⲆΔⲆ = ΔΔⲆᐃ;
		this.ⲆΔⵠⵠΔⵠᐃ = ΔⲆᐃⲆ;
		this.ΔⵠⲆᐃᐃⵠⵠ = function(ⵠⲆⵠⲆΔⵠᐃ) {
			if (ⵠΔΔⲆᐃ !== ΔΔΔⲆⲆ) {
				Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.push({
					a: ⵠΔΔⲆᐃ[ⵠ[425]],
					gm: ⵠΔΔⲆᐃ["mode"],
					idx: 0,
					m: ᐃⵠᐃⲆⲆⲆᐃ,
					nu: 0,
					id: 0
				});
				ⵠⲆⵠⲆΔⵠᐃ();
				return
			}
			fetch(ΔⲆᐃᐃⵠⲆΔ + "/list", {
				method: ⵠ[121]
			}).then((function(ΔⵠΔⵠⵠΔⲆ) {
				if (!ΔⵠΔⵠⵠΔⲆ.ok) {
					ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]]((function() {
						Ⲇⵠᐃ.ΔⵠⲆᐃᐃⵠⵠ(ⵠⲆⵠⲆΔⵠᐃ)
					}), 3e3);
					return
				}
				ΔⵠΔⵠⵠΔⲆ.json().then((function(ⲆᐃᐃⵠΔⲆΔ) {
					Ⲇⵠᐃ.ⵠⲆᐃᐃΔ = [];
					Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ = {};
					for (let ⵠΔⵠᐃⲆ in ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ) {
						const ⵠΔⲆΔᐃΔⲆⲆⲆ = ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ[ⵠΔⵠᐃⲆ];
						Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.push({
							a: "Auto Select",
							gm: ⵠΔⲆΔᐃΔⲆⲆⲆ,
							m: ΔᐃⵠᐃⵠᐃΔ,
							nu: ΔⲆⵠ,
							auto: true
						})
					}
					var ⵠⵠⵠΔⵠᐃⲆ = ⵠⵠᐃⵠ;
					var ⲆⵠΔΔⲆⵠΔ = ⵠⵠⲆΔ;
					var ᐃⵠⵠΔⲆᐃⵠ = 2;
					var ᐃᐃⵠΔⲆΔⲆⲆΔ = 3;
					var ΔⲆⲆᐃᐃΔᐃⵠᐃ = ΔⲆΔⲆ;
					var ᐃΔⵠⲆᐃⲆΔⵠᐃ = 5;
					for (let ᐃⲆ = 0; ⲆᐃᐃⵠΔⲆΔ.length > ᐃⲆ; ᐃⲆ++) {
						const ᐃⲆᐃΔ = ⲆᐃᐃⵠΔⲆΔ[ᐃⲆ];
						const ⵠΔᐃᐃᐃ = ᐃⲆᐃΔ["n"];
						const ΔⲆⵠⵠΔ = ᐃⲆᐃΔ["l"];
						const ᐃᐃᐃᐃⲆⲆⲆ = ᐃⲆᐃΔ["p"];
						const ⵠⵠᐃΔⵠⲆᐃ = [];
						Ⲇⵠᐃ.ⵠⵠᐃΔⵠⲆᐃ[ⵠΔᐃᐃᐃ] = ⵠⵠᐃΔⵠⲆᐃ;
						const ΔⲆΔΔᐃᐃⲆ = [];
						for (let ΔΔΔ = 0; ΔΔΔ < ᐃᐃᐃᐃⲆⲆⲆ.length; ΔΔΔ++) {
							const ⲆΔΔⵠⵠⵠᐃ = ᐃᐃᐃᐃⲆⲆⲆ[ΔΔΔ];
							const ⲆᐃⵠΔΔᐃᐃ = ⵠΔᐃᐃᐃ + ⲆΔΔⵠⵠⵠᐃ[ⵠⵠⵠΔⵠᐃⲆ];
							ΔⲆΔΔᐃᐃⲆ.push(ⲆᐃⵠΔΔᐃᐃ);
							ⵠⵠᐃΔⵠⲆᐃ.push(ⲆᐃⵠΔΔᐃᐃ)
						}
						for (let ΔΔΔ = 0; ΔΔΔ < ΔⲆⵠⵠΔ.length; ΔΔΔ++) {
							const ᐃⲆᐃⲆᐃ = ΔⲆⵠⵠΔ[ΔΔΔ];
							let ΔⵠⵠΔΔⲆⲆ = ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ[ᐃⲆᐃⲆᐃ[ᐃⵠⵠΔⲆᐃⵠ]];
							let ΔΔⵠᐃᐃⵠΔ = ΔⵠⵠΔΔⲆⲆ + ᐃⲆᐃⲆᐃ[ⲆⵠΔΔⲆⵠΔ];
							let ΔΔⵠⲆⲆⵠΔ;
							if (ΔⵠⵠΔΔⲆⲆ in Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ) ΔΔⵠⲆⲆⵠΔ = ++Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ[ΔⵠⵠΔΔⲆⲆ];
							else ΔΔⵠⲆⲆⵠΔ = Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ[ΔⵠⵠΔΔⲆⲆ] = 1;
							if (ΔΔⵠᐃᐃⵠΔ in Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ) ᐃⵠΔΔᐃⲆⵠ = ++Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ[ΔΔⵠᐃᐃⵠΔ];
							else ᐃⵠΔΔᐃⲆⵠ = Ⲇⵠᐃ.Δᐃᐃⵠᐃᐃᐃ[ΔΔⵠᐃᐃⵠΔ] = ΔΔⵠΔⵠ;
							Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.push({
								name: ᐃⲆᐃⲆᐃ[ΔⲆⲆᐃᐃΔᐃⵠᐃ],
								a: ⲆⵠΔΔ.ᐃΔⲆⲆⵠᐃⵠⲆᐃ[ᐃⲆᐃⲆᐃ[ⲆⵠΔΔⲆⵠΔ]] + " " + ᐃⵠΔΔᐃⲆⵠ,
								r: ᐃⲆᐃⲆᐃ[ⲆⵠΔΔⲆⵠΔ],
								gm: ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ[ᐃⲆᐃⲆᐃ[ᐃⵠⵠΔⲆᐃⵠ]],
								idx: ΔΔⵠⲆⲆⵠΔ,
								m: 100,
								nu: ᐃⲆᐃⲆᐃ[ᐃᐃⵠΔⲆΔⲆⲆΔ],
								id: ᐃⲆᐃⲆᐃ[ⲆⵠΔΔⲆⵠΔ] + ᐃⲆᐃⲆᐃ[ⵠⵠⵠΔⵠᐃⲆ],
								p: ΔⲆΔΔᐃᐃⲆ
							})
						}
					}
					const ⵠⲆⵠᐃᐃΔΔ = [];
					const ⲆⵠΔΔΔⲆⵠ = [];
					const ΔᐃⲆⲆΔⵠⵠ = [];
					for (let ᐃⲆ = 0; ᐃⲆ < Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.length; ᐃⲆ++) {
						const ᐃⲆᐃⲆᐃ = Ⲇⵠᐃ.ⵠⲆᐃᐃΔ[ᐃⲆ];
						if (ᐃⲆᐃⲆᐃ[ⵠ[187]]) continue;
						if (ᐃⲆᐃⲆᐃ[ⵠ[10]] !== ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ[ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ]) continue;
						typeof ᐃⲆᐃⲆᐃ.name === ⵠ[348] && (ᐃⲆᐃⲆᐃ.name.indexOf("Private Server") !== -1 || ᐃⲆᐃⲆᐃ[ⵠ[347]] > 95) ? ⵠⲆⵠᐃᐃΔΔ.push(ᐃⲆᐃⲆᐃ) : ΔᐃⲆⲆΔⵠⵠ.push(ᐃⲆᐃⲆᐃ);
						ⲆⵠΔΔΔⲆⵠ.push(ᐃⲆ)
					}
					const ᐃᐃᐃⵠⵠΔⲆ = [];
					ᐃᐃᐃⵠⵠΔⲆ.push(...ΔᐃⲆⲆΔⵠⵠ.sort((function(ⵠⵠⵠ, ⲆΔⵠΔ) {
						return ⲆΔⵠΔ[ⵠ[347]] - ⵠⵠⵠ[ⵠ[347]]
					})));
					ᐃᐃᐃⵠⵠΔⲆ.push(...ⵠⲆⵠᐃᐃΔΔ.sort((function(ⵠⵠⵠ, ⲆΔⵠΔ) {
						const ΔᐃᐃⲆⲆᐃⲆⲆⵠ = ⲆΔⵠΔ[ⵠ[347]] < 95 ? ⲆΔⵠΔ[ⵠ[347]] : 0;
						const ⵠᐃᐃᐃⵠⵠΔΔᐃ = ⵠⵠⵠ[ⵠ[347]] < 95 ? ⵠⵠⵠ[ⵠ[347]] : 0;
						return ΔᐃᐃⲆⲆᐃⲆⲆⵠ - ⵠᐃᐃᐃⵠⵠΔΔᐃ
					})));
					for (let ᐃⲆ = 0; ᐃⲆ < ⲆⵠΔΔΔⲆⵠ.length; ᐃⲆ++) {
						const ⲆⲆⵠⵠⲆⵠⵠ = ⲆⵠΔΔΔⲆⵠ[ᐃⲆ];
						const ᐃⲆᐃⲆᐃ = ᐃᐃᐃⵠⵠΔⲆ[ᐃⲆ];
						ᐃⲆᐃⲆᐃ["idx"] = ᐃⲆ + 1;
						Ⲇⵠᐃ.ⵠⲆᐃᐃΔ[ⲆⲆⵠⵠⲆⵠⵠ] = ᐃⲆᐃⲆᐃ
					}
					ⵠⲆⵠⲆΔⵠᐃ()
				}))
			}))
		};
		this.ΔⵠᐃⵠⵠᐃΔⵠᐃ = function(ᐃⲆᐃΔ) {
			var ⲆΔⵠᐃᐃ = [];
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆᐃΔ.length; ᐃⲆ++) {
				ᐃⲆᐃΔ[ᐃⲆ]["a"].indexOf(ΔⲆⲆΔᐃΔᐃ) !== -ΔᐃᐃⲆ && ⲆΔⵠᐃᐃ.push(ᐃⲆ)
			}
			if (ⲆΔⵠᐃᐃ.length === ⲆⵠⲆ) return ΔⲆᐃⲆ;
			return ⲆΔⵠᐃᐃ[Math.floor(Math.random() * ⲆΔⵠᐃᐃ.length)]
		};

		function ΔᐃΔΔΔⵠΔ(ᐃⲆᐃⲆᐃ) {
			let name = ᐃⲆᐃⲆᐃ[ⵠ[425]] || ᐃⲆᐃⲆᐃ["a"];
			if (ᐃⲆᐃⲆᐃ[ⵠ[187]]) return name;
			return name + " [" + ᐃⲆᐃⲆᐃ[ⵠ[347]] + " " + ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] + "]"
		}
		this.ⵠΔΔⲆᐃᐃᐃ = function(ᐃⲆᐃΔ) {
			var ⵠᐃᐃᐃᐃⵠᐃ = ᐃⵠΔ;
			for (var ᐃⲆ = ⲆⵠⲆ; ᐃⲆᐃΔ.length > ᐃⲆ; ᐃⲆ++) ⵠᐃᐃᐃᐃⵠᐃ += ᐃⲆᐃΔ[ᐃⲆ][ⵠ[347]];
			var ⵠⲆᐃⲆΔ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]);
			if (-1 === ᐃΔᐃⵠ.ΔⵠⲆⲆⲆΔᐃ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆΔᐃ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ] = ⵠⲆᐃⲆΔ.selectedIndex = ᐃΔᐃⵠ.ΔⵠᐃⵠⵠᐃΔⵠᐃ(ᐃⲆᐃΔ);
			else ⵠⲆᐃⲆΔ.selectedIndex = ᐃΔᐃⵠ.ΔⵠⲆⲆⲆΔᐃ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ];
			var ⲆᐃΔΔ = '<label for="ul-id"><button type="button" class="ng-binding">' + ᐃⲆᐃΔ[ⵠⲆᐃⲆΔ.selectedIndex]["a"] + (Δⵠⵠ < ᐃⲆᐃΔ[ⵠⲆᐃⲆΔ.selectedIndex][ⵠ[347]] ? " [" + ᐃⲆᐃΔ[ⵠⲆᐃⲆΔ.selectedIndex][ⵠ[347]] + " " + ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⵠⲆ] + "]" : "") + "</button></label>" + '<ul role="listbox" id="ul-id" class="md-whiteframe-z1" name="ul-id">' + '<li role="option" id="selectDisabled">' + ᐃΔΔ[ⵠⲆΔ.ⲆⲆⵠᐃⵠⲆⵠ] + " (" + this.ᐃΔΔⵠΔⲆⵠ + ") " + ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆᐃᐃⵠᐃ] + "</li>";
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆᐃΔ.length; ᐃⲆ++) ⲆᐃΔΔ += '<li role="option">' + ΔᐃΔΔΔⵠΔ(ᐃⲆᐃΔ[ᐃⲆ]) + "</li>\n";
			ⲆᐃΔΔ += '<li role="option" id="selectDisabled">(' + ⵠᐃᐃᐃᐃⵠᐃ + ") " + ᐃΔΔ[ⵠⲆΔ.ⲆⵠᐃΔⵠⲆⵠ] + "</li>";
			ⲆᐃΔΔ += ⵠ[183];
			ⵠⲆᐃⲆΔ[ⲆⵠΔᐃᐃᐃΔ[359]] = ⲆᐃΔΔ;
			$(".md-select").on(ⵠ[543], (function() {
				$(this).toggleClass(ⵠ[155])
			}));
			$(".md-select ul li").on(ⵠ[543], (function() {
				var ⵠⵠΔ = $(this).text();
				var ⲆΔ = -1;
				var ΔΔΔΔΔΔⵠ = ᐃΔᐃⵠ.ΔⵠⵠᐃΔ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ];
				for (var ᐃⲆ = ΔⵠⲆΔ; ΔΔΔΔΔΔⵠ.length > ᐃⲆ; ᐃⲆ++) {
					const name = ΔᐃΔΔΔⵠΔ(ΔΔΔΔΔΔⵠ[ᐃⲆ]);
					if (name === ⵠⵠΔ) {
						ⲆΔ = ᐃⲆ;
						break
					}
				}
				if (ⲆΔ === -1) return;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]).selectedIndex = ⲆΔ;
				ᐃΔᐃⵠ.ΔⵠⲆⲆⲆΔᐃ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ] = ⲆΔ;
				$(".md-select ul li").removeClass(ⵠ[155]);
				$(this).addClass(ⵠ[155]);
				$(".md-select label button").text(ⵠⵠΔ)
			}))
		};
		this.ᐃΔΔⵠΔⲆⵠ = 0;
		this.ⵠᐃⵠⵠⲆΔⵠᐃⲆ = function() {
			this.ᐃΔΔⵠΔⲆⵠ = 0;
			for (var ᐃⲆ = 0; ᐃΔᐃⵠ.ⵠⲆᐃᐃΔ.length > ᐃⲆ; ᐃⲆ++) {
				if ("experimental" == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[10]]) this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ᐃΔΔⵠΔ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				else if ("zombies" == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[10]]) this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ᐃᐃΔᐃⲆ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				else if ("community" == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[10]]) this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				else if (ⵠ[567] == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[10]]) this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ᐃΔⲆⵠⵠ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				else if ("battle-royale" == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[ᐃᐃⵠᐃΔ]]) this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				else "vampires" == this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[10]] ? this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]) : this.ΔⵠⵠᐃΔ[ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ].push(this.ⵠⲆᐃᐃΔ[ᐃⲆ]);
				this.ᐃΔΔⵠΔⲆⵠ += this.ⵠⲆᐃᐃΔ[ᐃⲆ][ⵠ[347]]
			}
			for (ᐃⲆ = 0; ᐃⲆ < this.ΔⵠⵠᐃΔ.length; ᐃⲆ++) this.ΔⵠⵠᐃΔ[ᐃⲆ].length === Δⵠⵠ && this.ΔⵠⵠᐃΔ[ᐃⲆ].push({
				a: ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⵠΔⵠⵠ],
				"ⵠⵠΔᐃΔⲆΔⵠΔ": ⵠⵠᐃⵠ,
				"ᐃⲆ": "127.0.0.1",
				"ⵠΔᐃ": 80
			});
			this.ⵠΔΔⲆᐃᐃᐃ(this.ΔⵠⵠᐃΔ[ᐃⵠΔ]);
			this.ᐃⵠΔΔΔ = function(ⵠⵠΔ) {
				ᐃΔᐃⵠ.ⵠΔⲆΔⲆ = ⵠⵠΔ;
				ᐃΔᐃⵠ.ⵠΔΔⲆᐃᐃᐃ(ᐃΔᐃⵠ.ΔⵠⵠᐃΔ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ]);
				ᐃΔᐃⵠ.ⵠΔΔⲆᐃᐃᐃ(ᐃΔᐃⵠ.ΔⵠⵠᐃΔ[ᐃΔᐃⵠ.ⵠΔⲆΔⲆ]);
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]).selectedIndex = ᐃΔᐃⵠ.ⵠΔⲆΔⲆ
			}
		};
		this.ⵠⵠᐃΔᐃⲆᐃ = Δⵠⵠ;
		this.ΔᐃⲆⲆᐃΔΔ = ⲆⲆⲆ;
		this.ⵠΔΔΔⵠ = null;
		this.timeout = function() {
			Ⲇⵠᐃ.ΔᐃⲆⲆᐃΔΔ++;
			Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[375]]();
			if (ᐃΔᐃᐃΔ.ⵠⲆΔΔᐃⲆᐃⵠΔ < Ⲇⵠᐃ.ΔᐃⲆⲆᐃΔΔ) {
				ⵠⲆⲆᐃΔⵠΔ = 1;
				ᐃᐃΔΔ.ⲆⵠΔᐃⲆⲆⲆΔⲆ = ᐃΔᐃᐃΔ.ΔᐃΔΔⵠⵠⲆᐃⵠ;
				Ⲇⵠᐃ.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔΔᐃⲆᐃᐃΔ]);
				ᐃᐃΔΔ.waiting = ⲆⵠᐃΔΔ;
				if (ⲆΔⲆ.reconnect.enabled) {
					ⵠΔᐃⵠ.ⲆⲆᐃΔᐃ(ᐃᐃΔΔ.ᐃΔⲆⲆΔ)
				}
			} else {
				if (ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ === ᐃⲆᐃΔΔ || ⲆΔⲆ.ΔⲆⲆᐃⵠᐃⲆ === ᐃᐃΔⲆⲆ || ⲆΔⲆ.ᐃᐃᐃⵠⵠᐃᐃ === ᐃⲆᐃΔΔ) ᐃᐃΔΔ.ᐃᐃᐃⲆΔⵠΔ((function() {
					Ⲇⵠᐃ.ΔᐃΔⲆⵠΔᐃ()
				}), ΔΔᐃᐃ);
				else Ⲇⵠᐃ.ΔᐃΔⲆⵠΔᐃ()
			}
		};
		this.ᐃᐃⲆᐃΔⵠΔ = function(ⲆⲆΔⲆᐃⵠΔⵠᐃ) {
			if (this.Δⵠⵠᐃᐃ != this.ᐃⵠᐃⵠ.Δⵠⵠᐃᐃ) return;
			this.Δⵠⵠᐃᐃ++;
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔⲆⵠΔᐃⲆᐃ] + ⲆⲆΔⲆᐃⵠΔⵠᐃ);
			ⵠΔᐃⵠ.ⲆⲆᐃΔᐃ(ᐃᐃΔΔ.ᐃΔⲆⲆΔ)
		};
		this.ⵠᐃⲆⵠΔⵠⲆ = function() {
			this.ⲆᐃⲆⵠΔ("You speak too much")
		};
		this.ⲆⲆⵠΔⲆᐃΔⲆⲆ = function() {
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⵠΔⵠᐃ]);
			ᐃᐃΔΔ.waiting = false
		};
		this.ΔⲆⲆⲆⲆΔⲆΔΔ = function() {
			ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
		};
		this.ⵠᐃⲆᐃΔᐃⵠΔᐃ = function() {
			ⵠΔᐃⵠ.ⵠⵠⲆᐃⵠⵠⵠ = 0
		};
		this.ᐃⲆΔⵠⲆΔⵠᐃⵠ = function() {
			ⵠΔᐃⵠ.ΔⲆⲆⲆⲆⲆⲆ = 0
		};
		this.ᐃᐃⲆᐃⵠⲆΔⵠⵠ = function(ⵠᐃⲆⵠⵠ) {
			ⲆΔⲆ.ΔΔⵠᐃΔ.ⵠᐃⲆⵠⵠ = ⵠᐃⲆⵠⵠ;
			if (-300 < ⲆΔΔ.ᐃⲆⲆᐃᐃ) {
				if (ⲆⲆⲆ === ⵠᐃⲆⵠⵠ) this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠⲆΔΔⵠⵠΔ]);
				else this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃᐃᐃᐃΔ])
			}
		};
		this.ΔᐃᐃΔⲆ = function(ΔᐃᐃΔⲆ) {
			ⲆΔⲆ.ΔᐃᐃΔⲆ = ΔᐃᐃΔⲆ
		};
		this.ⵠΔⵠⵠⲆⵠⵠⵠΔ = function(ΔΔᐃⵠᐃᐃⲆ) {
			ⲆΔⲆ.ΔΔᐃⵠᐃᐃⲆ = ΔΔᐃⵠᐃᐃⲆ
		};
		this.ΔΔᐃⵠᐃᐃⲆ = function(ⵠᐃⲆⵠⵠ) {
			ⲆΔⲆ.ΔⵠᐃⵠⲆ.ⵠᐃⲆⵠⵠ = ⵠᐃⲆⵠⵠ;
			if (ⲆΔΔ.ⲆⲆⵠⵠΔ > -300) {
				if (0 === ⵠᐃⲆⵠⵠ) this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔⲆⲆⲆⲆⲆΔ]);
				else this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔⵠᐃⵠⲆΔᐃ])
			}
		};
		this.ⵠⲆΔⲆᐃⲆⵠᐃⵠ = function(ΔΔΔΔ) {
			if (ΔΔΔΔ === 0) document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreForest").src = "img/forest-leaf-ok.png";
			else if (ΔΔΔΔ === ⲆᐃⲆⲆ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreWinter").src = "img/winter-flake-ok.png";
			else if (ΔΔΔΔ === 2) document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreLava").src = "img/lava-volcano-ok.png";
			else if (ⵠⵠⲆⵠ === ΔΔΔΔ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreDesert").src = "img/desert-cactus-ok.png"
		};
		this.ᐃⵠⵠΔᐃΔⲆᐃⵠ = function() {
			ⵠΔᐃⵠ.ⵠⲆᐃⵠΔⵠⵠ = 0
		};
		this.ᐃⲆⲆⲆⲆⵠⲆΔΔ = function() {
			ⵠΔᐃⵠ.ΔΔΔⵠⲆΔΔ = 0
		};
		this.ΔⲆΔΔᐃⲆⲆᐃΔ = function() {
			ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ = [];
			ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ = [];
			ⲆΔⲆ.ⵠΔᐃᐃ.id = -ᐃΔⲆⵠ;
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.stop();
			ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ = [];
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆⲆⲆ = false;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⵠⲆᐃⲆΔΔΔΔ = false;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -ᐃΔⲆⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.id = -ΔΔᐃⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃΔⵠⲆⲆ = false;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃⲆΔⲆᐃ = false;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃᐃⵠⲆΔ = false;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆΔΔΔⲆ = ΔⲆᐃⲆΔ;
			ⲆΔⲆ.ᐃΔⵠΔ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆᐃⲆΔ, 0, ⵠⲆⲆ, ΔⲆⵠ, ⲆᐃⲆⲆ, ⵠⵠⲆΔ)
		};
		this.ⲆΔΔΔΔⵠⲆᐃΔ = function() {
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ();
			ᐃᐃΔΔ.waiting = false
		};
		this.ᐃᐃᐃᐃⵠⵠⲆ = function(ᐃⲆΔΔ) {
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆΔΔ.length; ᐃⲆ++) {
				if (ⵠ[348] === typeof ᐃⲆΔΔ[ᐃⲆ]) ᐃⲆΔΔ[ᐃⲆ] = Ⲇᐃⵠ.ⲆΔⵠΔⵠΔⵠ(ᐃⲆΔΔ[ᐃⲆ])
			}
			ⲆΔⲆ.ᐃᐃᐃⵠΔ.ⵠⵠⵠⵠᐃ(ᐃⲆΔΔ[1], ᐃⲆΔΔ[2], ᐃⲆΔΔ[ΔⵠⵠΔ], ᐃⲆΔΔ[4])
		};
		this.message = function(ᐃⲆΔΔ) {
			this.ⲆᐃⲆⵠΔ(ᐃⲆΔΔ)
		};
		this.ⵠᐃᐃΔΔᐃⵠΔᐃ = function() {
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⲆᐃⵠⲆᐃΔᐃ]);
			ᐃᐃΔΔ.waiting = ⵠⲆⲆⵠΔ
		};
		this.ᐃᐃΔΔᐃⲆⲆΔⵠ = function() {
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⲆⵠⲆᐃᐃⲆⵠ]);
			ᐃᐃΔΔ.waiting = false
		};
		this.ⲆⵠⵠΔⵠⵠⲆΔᐃ = function() {
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⲆⵠΔⲆᐃⲆⵠ]);
			ᐃᐃΔΔ.waiting = false
		};
		this.ⵠᐃΔⵠⲆⲆⲆᐃΔ = function() {
			ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⲆⲆⵠΔΔ(ᐃΔⲆⵠ, 0);
			ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
		};
		this.ΔΔⲆΔⵠᐃⵠᐃⲆ = function(ⲆⲆⲆⲆ) {
			var ⲆΔ = ⲆⲆⲆⲆ[1];
			var ΔⲆⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ];
			ΔⲆⵠΔ.ᐃᐃᐃΔ = ⲆⲆⲆⲆ[ᐃᐃΔⵠ];
			ΔⲆⵠΔ.ᐃᐃᐃⲆⵠ = ⲆⲆⲆⲆ[ⵠᐃᐃᐃ];
			ΔⲆⵠΔ.ΔⲆΔⵠⲆΔᐃ = ⲆⲆⲆⲆ[4];
			ΔⲆⵠΔ.ⲆΔⵠⲆⵠ = ⲆⲆⲆⲆ[ⲆᐃΔΔΔ];
			ΔⲆⵠΔ.ΔᐃⲆⲆⲆ = ⲆⲆⲆⲆ[6];
			ΔⲆⵠΔ.ⲆⵠᐃΔⵠ = ⲆⲆⲆⲆ[ᐃⲆⲆΔᐃ];
			ΔⲆⵠΔ.level = ⲆⲆⲆⲆ[ΔⲆᐃᐃᐃ];
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔ * ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ];
			ⵠΔᐃ && (ⵠΔᐃ.ᐃᐃᐃΔ = ⲆⲆⲆⲆ[2], ⵠΔᐃ.ᐃᐃᐃⲆⵠ = ⲆⲆⲆⲆ[3], ⵠΔᐃ.ΔⲆΔⵠⲆΔᐃ = ⲆⲆⲆⲆ[ⵠᐃⵠᐃⲆ], ⵠΔᐃ.ⲆΔⵠⲆⵠ = ⲆⲆⲆⲆ[5])
		};
		this.ⵠΔᐃⵠΔΔᐃᐃⲆ = function(ⲆΔ) {
			if (ⲆΔ === ⵠⲆ.ⵠΔΔⵠ) {
				ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⲆⲆⵠΔΔ(1, 0);
				ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
			} else this.ΔᐃⲆᐃⵠⲆᐃ([0, ⲆΔ, 1]);
			ⲆΔⲆ.ᐃΔⵠΔ.ΔᐃⲆⵠΔᐃΔ()
		};
		this.ⲆΔⲆΔΔⲆⵠᐃⵠ = function(ⲆΔ) {
			ⲆΔⲆ.ᐃⲆΔⲆⵠ.ᐃᐃΔⲆΔ = ⵠⵠⲆⲆ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠΔⵠᐃⲆⲆⵠⵠᐃ(ⲆΔ)
		};
		this.ⲆⵠᐃⲆᐃⲆΔΔᐃ = function(ⲆΔ) {
			var ⲆᐃΔΔᐃ = ⲆᐃⲆⲆᐃ[ⲆΔ].r;
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃΔΔᐃ.length; ᐃⲆ++) {
				if (ⲆΔⲆ.ⵠΔᐃᐃ.max > ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length || ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⲆᐃΔΔᐃ[ᐃⲆ][0]] > 0) {
					var ⲆᐃᐃⲆ = Math.floor(ⲆᐃΔΔᐃ[ᐃⲆ][ΔΔⲆΔ] * .8);
					if (!ⲆᐃᐃⲆ) continue;
					this.ΔᐃⲆᐃⵠⲆᐃ([ⲆⲆⲆ, ⲆᐃΔΔᐃ[ᐃⲆ][0], ⲆᐃᐃⲆ])
				}
			}
			ⲆΔⲆ.ᐃΔⵠΔ.ΔᐃⲆⵠΔᐃΔ()
		};
		this.ΔⵠⲆᐃⲆΔⲆᐃΔ = function(ⲆΔ) {
			ⲆΔⲆ.ᐃⲆΔⲆⵠ.ᐃᐃΔⲆΔ = ΔᐃⲆΔ;
			ⲆΔⲆ.ᐃΔⵠΔ.ΔᐃⲆⵠᐃⵠΔⵠⲆ(ⲆΔ)
		};
		this.ⲆᐃⲆⵠΔ = function(ᐃⲆΔΔ) {
			if (!ⲆΔⲆ.alert.text) ⲆΔⲆ.alert.text = ᐃⲆΔΔ;
			else ᐃⲆΔΔ !== ⲆΔⲆ.alert.text && ᐃⲆΔΔ !== ⲆΔⲆ.alert.list[ⲆΔⲆ.alert.list.length - 1] && ⲆΔⲆ.alert.list.push(ᐃⲆΔΔ)
		};
		this.ⵠᐃⲆⲆⲆΔΔΔⵠ = function() {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠⵠⵠΔΔᐃⵠ])
		};
		this.ⲆΔΔᐃⵠⲆᐃᐃᐃ = function() {
			var ᐃⲆΔΔ;
			0 == ⲆΔⲆ.ⲆⲆΔ ? ᐃⲆΔΔ = ᐃΔΔ[ⵠⲆΔ.ⵠⵠᐃᐃᐃᐃᐃ] : ᐃⲆΔΔ = ᐃΔΔ[ⵠⲆΔ.ⲆⲆᐃⲆᐃⲆΔ] + (ⲆΔⲆ.ⲆⲆΔ + ⵠⵠⲆ) + ᐃΔΔ[ⵠⲆΔ.ⲆⲆΔᐃΔΔⲆ];
			this.ⲆᐃⲆⵠΔ(ᐃⲆΔΔ);
			ⲆΔⲆ.ⲆⲆΔ++
		};
		this.ΔᐃΔⲆⵠⲆⲆᐃᐃ = function() {
			clearTimeout(Ⲇⵠᐃ.ⵠΔΔΔⵠ);
			ⲆΔⲆ.reconnect.enabled = ᐃⲆⲆΔΔ;
			ⲆΔⲆ.ᐃᐃⲆΔΔ = ⲆⲆⲆᐃⲆ;
			currentlyPlaying = false;
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠⲆⵠⵠⲆ]);
			ⵠΔᐃⵠ.ⲆⲆᐃΔᐃ(ᐃᐃΔΔ.ᐃΔⲆⲆΔ);
			this.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[375]]()
		};
		this.ΔⵠⲆⲆⲆᐃⲆⵠⵠ = function() {
			ⵠⲆⲆᐃΔⵠΔ = 1;
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ᐃⵠⲆᐃⵠΔᐃ]);
			ᐃᐃΔΔ.waiting = ⲆΔᐃⵠⲆ
		};
		this.ⵠⵠΔⲆᐃⲆᐃΔᐃ = function() {
			ⵠⲆⲆᐃΔⵠΔ = 1;
			clearTimeout(this.ⵠΔΔΔⵠ);
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ᐃΔᐃᐃΔᐃⵠ]);
			ᐃᐃΔΔ.waiting = ΔⵠⵠΔⲆ
		};
		this.ⵠΔᐃΔᐃⵠⲆΔⲆ = function(ᐃⲆΔΔ) {
			var ⲆΔ = ᐃⲆΔΔ[1];
			var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
			ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ = ᐃⲆΔΔ[ⵠΔⵠᐃ];
			ᐃⵠⵠΔ[ⲆΔ].ᐃᐃᐃΔ = ᐃⲆΔΔ[3];
			ᐃⵠⵠΔ[ⲆΔ].ᐃᐃᐃⲆⵠ = ᐃⲆΔΔ[ⵠΔⲆᐃΔ];
			ᐃⵠⵠΔ[ⲆΔ].ΔⲆΔⵠⲆΔᐃ = ᐃⲆΔΔ[ΔⲆⲆΔ];
			ᐃⵠⵠΔ[ⲆΔ].ⲆΔⵠⲆⵠ = ᐃⲆΔΔ[ⵠᐃΔΔⲆ];
			ᐃⵠⵠΔ[ⲆΔ].ΔᐃⲆⲆⲆ = ᐃⲆΔΔ[ⲆΔⵠΔᐃ];
			ᐃⵠⵠΔ[ⲆΔ].ⲆⵠᐃΔⵠ = ᐃⲆΔΔ[8];
			ᐃⵠⵠΔ[ⲆΔ].level = ᐃⲆΔΔ[9];
			ᐃⵠⵠΔ[ⲆΔ].ⵠⲆⲆᐃᐃ = 0;
			ᐃⵠⵠΔ[ⲆΔ].ΔⵠᐃⲆⵠᐃᐃ = null;
			ᐃⵠⵠΔ[ⲆΔ].label = null;
			ᐃⵠⵠΔ[ⲆΔ].ᐃⵠΔΔⲆᐃᐃ = null;
			ᐃⵠⵠΔ[ⲆΔ].ᐃᐃⲆΔΔ = true;
			ⵠⲆⵠᐃⵠᐃⵠ === ᐃⲆⵠΔ && (ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ += "|" + ⲆΔ)
		};
		this.ⵠⲆⵠᐃⲆᐃⲆⲆⲆ = function() {
			Settings.Spectator.enabled || this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃⲆᐃΔᐃᐃ[ᐃⵠⵠⲆᐃᐃⲆ].stringify([29]))
		};
		this.ᐃΔΔⵠⲆΔᐃΔⵠ = function() {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.EMPTY])
		};
		this.ΔᐃΔΔⵠᐃⲆ = function() {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⲆᐃΔΔⵠⵠΔ])
		};
		this.ᐃΔⲆᐃⵠΔΔᐃⲆ = function(ⲆΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ΔⲆΔΔΔᐃⲆ].stringify([32, ⲆΔ]));
			ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
		};
		this.ⵠⲆᐃΔⵠᐃⲆᐃⵠ = function(ΔᐃⲆᐃ) {
			var ⲆᐃΔΔᐃ = ⵠⵠᐃΔⵠⲆⲆ[ΔᐃⲆᐃ - 1].items;
			for (var ᐃⲆ = ΔⵠⲆⲆ; ⲆᐃΔΔᐃ.length > ᐃⲆ && ⲆΔⲆ.ⵠΔᐃᐃ.max > ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length; ᐃⲆ++) {
				var ΔᐃⵠΔⲆ = ⲆᐃΔΔᐃ[ᐃⲆ][1];
				var ⲆᐃᐃⲆ = ⲆᐃΔΔᐃ[ᐃⲆ][ΔⵠⲆⲆ];
				ⲆᐃΔΔᐃ[ᐃⲆ][1] === ⵠⲆ.ⵠΔΔⵠ ? ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⲆⲆⵠΔΔ(1, ⲆΔᐃ) : this.ΔᐃⲆᐃⵠⲆᐃ([ⵠⵠᐃᐃΔ, ΔᐃⵠΔⲆ, ⲆᐃᐃⲆ])
			}
		};
		this.ΔᐃⲆᐃⵠⲆᐃ = function(ᐃᐃⲆⵠᐃ) {
			var ΔᐃᐃⵠⲆ = ᐃᐃⲆⵠᐃ.length;
			var ⵠΔᐃᐃ = ⲆΔⲆ.ⵠΔᐃᐃ;
			for (var ᐃⲆ = ΔⲆᐃ; ᐃⲆ < ΔᐃᐃⵠⲆ; ᐃⲆ += ⵠΔⵠᐃ) {
				var ⵠⲆⵠ = ᐃᐃⲆⵠᐃ[ᐃⲆ];
				var ᐃⵠⲆ = ᐃᐃⲆⵠᐃ[ᐃⲆ + ᐃᐃΔᐃ];
				for (var ΔΔΔ = 0; ΔΔΔ < ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length; ΔΔΔ++) {
					if (ⵠⲆⵠ == ⵠΔᐃᐃ.ᐃⲆΔΔⲆ[ΔΔΔ].id) {
						ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆⵠ] += ᐃⵠⲆ;
						break
					}
				}
				ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length == ΔΔΔ && (ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆⵠ] = ᐃⵠⲆ, ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.push(ⵠΔᐃⵠ.ⲆᐃΔ[ⵠⲆⵠ]), ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ())
			}
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ΔΔⵠⲆ = function(ⵠⵠⲆᐃΔ, ⲆΔⵠⲆΔΔⵠ, ⵠⵠⲆᐃⵠ, ⲆᐃΔΔⲆⲆΔ, ΔⲆⵠΔΔᐃⵠ, ⲆⲆⵠΔⵠ, ΔᐃᐃΔⲆ) {
			if (Math.floor(11 - (Date.now() - Timers.HealTimer) / 1e3) < 5 || ⵠⵠⲆᐃΔ / 100 > ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⲆᐃ) {
				Timers.HealTimer = (new Date).getTime()
			}
			Timers.GaugeTimer = (new Date).getTime();
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⲆᐃ = ⵠⵠⲆᐃΔ / ⲆΔⲆᐃᐃⲆⵠ;
			ⲆΔⲆ.ΔΔⵠⲆ.ΔᐃⲆ = ⲆΔⵠⲆΔΔⵠ / ⵠⵠΔΔⵠ;
			ⲆΔⲆ.ΔΔⵠⲆ.c = ⵠⵠⲆᐃⵠ / 100;
			ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆⵠ = ⲆᐃΔΔⲆⲆΔ / 100;
			ⲆΔⲆ.ΔΔⵠⲆ.ⵠⲆⵠ = ΔⲆⵠΔΔᐃⵠ / ᐃΔⵠΔᐃ;
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⵠⲆⵠᐃΔΔ = ⲆⲆⵠΔⵠ / ⵠᐃⵠⵠΔ;
			if (Settings.AutoFeed.enabled && ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆⵠ <= .5) {
				if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[127]) ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, 127]))
			}
			if (Settings.AutoFeed.enabled && ⲆΔⲆ.ΔΔⵠⲆ.ΔᐃⲆ <= .6) {
				for (const food of [110, 117, 189, 205, 207, 192]) {
					if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[food]) {
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, food]));
						break
					}
				}
			}
			if (Settings.AutoIce.enabled && !ⲆΔⲆ.ΔΔⵠⲆ.ⲆⵠⲆⵠᐃΔΔ) {
				ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[142] && ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, 142]))
			}
			ⲆΔⲆ.ΔᐃᐃΔⲆ = ΔᐃᐃΔⲆ
		};
		this.ⲆⲆⲆᐃⵠΔᐃⲆⵠ = function(ⲆΔ) {
			ⵠΔᐃⵠ.ⵠⵠᐃⲆ.modify(ⲆΔ, 2)
		};
		this.ⲆᐃᐃᐃⲆⲆᐃᐃᐃ = function(ⲆΔ) {
			ⵠΔᐃⵠ.ⵠⵠᐃⲆ.modify(ⲆΔ, ⲆⵠⲆ)
		};
		this.claimed = function(ⲆΔ) {
			ⵠΔᐃⵠ.ⵠⵠᐃⲆ.modify(ⲆΔ, 3)
		};
		this.ΔᐃⵠⵠᐃΔᐃⲆΔ = function(ⵠⵠⲆᐃΔ, ΔᐃᐃΔⲆ) {
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⲆᐃ = ⵠⵠⲆᐃΔ / ᐃⵠΔⲆⲆ;
			ⲆΔⲆ.ΔᐃᐃΔⲆ = ΔᐃᐃΔⲆ
		};
		this.ΔⲆᐃⵠⵠⲆΔⵠⵠ = function(ⲆΔⲆΔΔΔⲆ) {
			ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆⵠ = ⲆΔⲆΔΔΔⲆ / 100
		};
		this.ΔᐃⵠⵠᐃΔΔΔⵠ = function(ⲆΔⵠⲆΔΔⵠ) {
			ⲆΔⲆ.ΔΔⵠⲆ.ΔᐃⲆ = ⲆΔⵠⲆΔΔⵠ / ᐃΔⵠΔᐃ
		};
		this.ΔΔⵠⵠⵠⲆᐃⲆⵠ = function(ⲆⲆⵠΔⵠ) {
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⵠⲆⵠᐃΔΔ = ⲆⲆⵠΔⵠ / ᐃⵠⲆⵠⲆ
		};
		this.ᐃⵠⵠⲆΔⲆᐃᐃⵠ = function(ⵠⵠⲆᐃⵠ) {
			ⲆΔⲆ.ΔΔⵠⲆ.c = ⵠⵠⲆᐃⵠ / 100
		};
		this.ⵠⲆⲆⲆΔⲆᐃᐃⵠ = function(ⲆΔⲆᐃ) {
			ⲆΔΔ.time = ⲆΔⲆᐃ;
			ⲆΔΔ.transition = true;
			ⵠΔᐃΔ.transition = 1
		};
		this.ᐃⵠᐃΔⲆΔΔⲆᐃ = function() {
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[166]).style.backgroundColor = Δ.ⲆⵠⵠΔⲆ[ⲆΔΔ.time]
		};
		this.ᐃᐃᐃᐃΔⲆΔⲆᐃ = function(ⲆΔ) {
			ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ == ⲆΔΔ.mode && ⵠ[211] !== ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ && this.ⲆᐃⲆⵠΔ(ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ + ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃⲆᐃⲆΔ]);
			ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ].ᐃᐃⲆΔΔ = ⵠⲆⲆⵠΔ
		};
		this.ⲆᐃⵠⲆⵠⵠΔΔⵠ = function(ⲆⲆⲆΔ) {
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			Settings.Spectator.enabled || ΔⲆⵠΔ.ⵠΔΔ.ⲆᐃΔᐃΔ(ᐃᐃⲆⵠᐃ[1], ᐃᐃⲆⵠᐃ[ⵠⵠΔⲆ])
		};
		this.ΔᐃᐃΔⲆΔΔⲆΔ = function(ⲆⲆⲆΔ) {
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			ⲆΔⲆ.ⵠΔΔ.ⲆᐃΔᐃΔ(ᐃᐃⲆⵠᐃ[ᐃⲆⵠΔ], ᐃᐃⲆⵠᐃ[2])
		};
		this.ᐃⲆⲆΔⲆⲆΔⲆⲆ = function(ⲆⲆⲆⲆ, ⲆⲆⲆΔ) {
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			var ΔᐃᐃⵠⲆ = (ⲆⲆⲆⲆ.length - ᐃΔⵠᐃ) / 4;
			for (var ⲆⲆⲆᐃ = ⵠⵠⲆⲆ; ΔᐃᐃⵠⲆ > ⲆⲆⲆᐃ; ⲆⲆⲆᐃ++) {
				var ⲆΔ = ᐃᐃⲆⵠᐃ[1 + 2 * ⲆⲆⲆᐃ];
				var ΔΔΔⵠ = ⲆⲆⲆⲆ[ⵠΔΔᐃ + 4 * ⲆⲆⲆᐃ];
				var ΔᐃΔ = 2 * (Math.PI * ((ⲆⲆⲆⲆ[ᐃᐃⲆᐃΔ + ᐃⵠᐃᐃ * ⲆⲆⲆᐃ] >> ΔΔⲆΔ) / 127));
				var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ΔΔΔⵠ * ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ + ⲆΔ];
				if (ΔⲆⵠᐃ && ΔⲆⵠᐃ.ⲆⲆᐃ) {
					ⵠΔᐃΔ.loaded && ⵠΔᐃΔ.ᐃΔⲆⲆΔ && ⵠΔᐃΔ.ⲆⲆᐃ(ⲆⲆⲆⲆ[5 + 4 * ⲆⲆⲆᐃ] & 1, ⲆⲆᐃⲆᐃ[ΔⲆⵠᐃ.type], ΔⲆⵠᐃ.x, ΔⲆⵠᐃ.y);
					ΔⲆⵠᐃ.ⲆⲆᐃ.angle = ΔᐃΔ;
					ΔⲆⵠᐃ.ⲆⲆᐃ.ⵠᐃⵠ = ΔᐃΔ
				}
			}
		};
		this.ⲆᐃⵠⲆⲆⲆᐃⲆⲆ = function(ⲆⲆⲆΔ) {
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			var ΔᐃᐃⵠⲆ = (ᐃᐃⲆⵠᐃ.length - 1) / 4;
			for (var ⲆⲆⲆᐃ = 0; ⲆⲆⲆᐃ < ΔᐃᐃⵠⲆ; ⲆⲆⲆᐃ++) {
				var ΔᐃⲆᐃ = ⲆⲆⲆᐃ * ⲆⵠⲆⲆ;
				var ᐃⲆ = ᐃᐃⲆⵠᐃ[ΔΔᐃⵠ + ΔᐃⲆᐃ];
				var ΔΔΔ = ᐃᐃⲆⵠᐃ[ⵠⵠΔⲆ + ΔᐃⲆᐃ];
				var ΔᐃΔ = 2 * (Math.PI * ((ᐃᐃⲆⵠᐃ[ⵠΔᐃⲆ + ΔᐃⲆᐃ] >> ᐃᐃΔᐃ) / 127));
				var ⲆΔ = ᐃᐃⲆⵠᐃ[ⵠⲆᐃᐃ + ΔᐃⲆᐃ];
				var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ΔΔΔ][ᐃⲆ];
				var ⵠⲆⵠ;
				switch (ⲆΔ) {
					case ΔΔⲆᐃ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["p"][ΔΔⵠᐃ][ⲆⵠⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⲆᐃⲆᐃ;
						break;
					case 1:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["s"][0][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔᐃⲆΔⵠ;
						break;
					case 2:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["s"][1][ΔⵠⲆⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⲆᐃⵠⵠ;
						break;
					case ΔⵠⵠΔ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["s"][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case ⵠᐃⵠᐃⲆ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][0][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔᐃⲆⲆᐃ;
						break;
					case 5:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][1][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 6:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case ⵠᐃⵠⲆᐃ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][3][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 8:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][ᐃΔᐃΔ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case ⲆⲆⵠⲆⵠ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["t"][5][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⲆⲆᐃⵠⲆ;
						break;
					case 10:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["g"][Δⵠⵠ][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 11:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["g"][ᐃᐃΔᐃ][ΔⲆᐃⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔⲆΔΔⵠ;
						break;
					case 12:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["g"][ⲆᐃⲆᐃ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⵠⵠΔΔ;
						break;
					case ⵠΔᐃⲆⵠᐃᐃ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["d"][0][ΔⲆⵠ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case ⲆᐃΔⵠᐃⲆΔ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["d"][ᐃᐃΔᐃ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = Δⵠⵠⵠⵠ;
						break;
					case 15:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["d"][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⲆᐃⵠⵠ;
						break;
					case ᐃΔᐃᐃⲆ:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["b"][ⲆⲆⲆ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 17:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["b"][1][ΔⵠⲆΔ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔΔⲆⲆⲆ;
						break;
					case 18:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["b"][ⵠⲆΔΔ][ⵠⵠⲆⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ᐃⲆⲆΔΔⵠⲆ;
						break;
					case 19:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["b"][3][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 20:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["f"][0][ΔⵠⲆⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔΔⲆⲆⲆ;
						break;
					case 21:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["f"][ΔᐃᐃⲆ][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠΔΔΔⲆ;
						break;
					case 22:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["f"][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔΔⲆⲆⲆ;
						break;
					case 23:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[469]][0][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⲆΔᐃⲆⲆ;
						break;
					case 24:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[469]][ΔΔⲆΔ][Ⲇᐃⵠᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 25:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[469]][ᐃΔⵠᐃ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 26:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[71]][Ⲇᐃⵠᐃ][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⲆᐃⲆᐃ;
						break;
					case 27:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[71]][1][Ⲇᐃⵠᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⲆⵠΔⵠΔ;
						break;
					case 28:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[71]][ΔⵠΔΔ][ΔⲆᐃⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 29:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[352]][0][ⵠⲆⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 30:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[352]][1][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 31:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[352]][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 32:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["a"][ᐃΔⵠⵠ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔΔⲆⲆⲆ;
						break;
					case 33:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["a"][1][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 34:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["a"][ΔᐃⵠⲆ][ⵠⵠᐃⵠ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 35:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[370]][ⲆⵠⲆ][ΔⵠⲆΔ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 36:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[370]][1][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 37:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[370]][ᐃᐃⲆΔ][ΔΔⲆᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⵠⵠΔΔ;
						break;
					case 38:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[370]][ᐃⲆᐃΔⵠ][Ⲇᐃⵠᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ᐃⵠⲆⵠⵠ;
						break;
					case 40:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[153]][0][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 41:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[153]][1][Ⲇᐃⵠᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ΔᐃⲆΔⲆ;
						break;
					case 42:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[153]][2][Ⲇᐃⵠᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⲆΔⲆΔᐃ;
						break;
					case 50:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[239]][ⵠⵠⲆⲆ][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 51:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[239]][1][ΔⲆᐃⲆ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 52:
						ⵠⲆⵠ = ⲆᐃⵠⲆ[ⵠ[239]][2][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 55:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["c"][0][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 56:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["m"][0][0];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = ⵠⵠⵠⵠΔⵠⲆ;
						break;
					case 57:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["m"][ⲆΔⵠⲆ][ΔΔᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break;
					case 58:
						ⵠⲆⵠ = ⲆᐃⵠⲆ["m"][2][ΔΔᐃ];
						ⵠⲆⵠ.angle = ΔᐃΔ;
						ⵠⲆⵠ.ⵠᐃⵠ = true;
						break
				}
				ⵠΔᐃΔ.loaded && ⵠΔᐃΔ.ᐃΔⲆⲆΔ && ⵠⲆⵠ && ⵠΔᐃΔ.ⲆⲆᐃ(ᐃᐃⲆⵠᐃ[ΔⵠⵠΔ + ΔᐃⲆᐃ] & ΔᐃᐃⲆ, ΔᐃΔⵠ[ⲆΔ], ⵠⲆⵠ.x, ⵠⲆⵠ.y)
			}
		};
		this.ᐃΔᐃⵠᐃ = function() {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([33, ⲆΔⲆ.ᐃΔᐃⵠᐃ.ΔΔΔⵠ, ⲆΔⲆ.ᐃΔᐃⵠᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ⲆⵠΔⵠⲆⵠⲆⲆᐃ = function(ΔⲆⵠⲆ, ᐃⵠⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠⲆⲆᐃᐃⲆᐃ].stringify([ⵠΔⲆⵠΔᐃⵠ, ᐃⵠⲆ, ΔⲆⵠⲆ.ΔΔΔⵠ, ΔⲆⵠⲆ.ⵠᐃΔⵠⲆ]))
		};
		this.ΔⲆⲆⵠΔⲆᐃ = function(ⵠΔⵠΔ, ᐃᐃⲆ, ᐃⵠᐃ) {
			ᐃᐃⲆ ? this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠⲆⲆᐃᐃⲆᐃ].stringify([17, ᐃᐃⲆ, ⵠΔⵠΔ.ΔΔΔⵠ, ⵠΔⵠΔ.ⵠᐃΔⵠⲆ])) : this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ΔΔⵠⵠⵠᐃᐃ].stringify([ΔΔⵠᐃ, ᐃⵠᐃ, ⵠΔⵠΔ.ΔΔΔⵠ, ⵠΔⵠΔ.ⵠᐃΔⵠⲆ]))
		};
		this.ᐃⲆⵠΔᐃⵠΔⵠᐃ = function(ⵠΔⵠΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([12, ⵠΔⵠΔ.ΔΔΔⵠ, ⵠΔⵠΔ.ⵠᐃΔⵠⲆ]))
		};
		this.ⲆⵠᐃⲆΔΔⵠΔⲆ = function(ᐃᐃⵠΔⲆᐃⲆⲆⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⲆᐃⵠΔᐃΔᐃ].stringify([30, ᐃᐃⵠΔⲆᐃⲆⲆⲆ]))
		};
		this.ⲆⵠᐃᐃᐃⲆⲆᐃΔ = function(ᐃⲆΔⲆᐃ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔΔⲆⵠⲆΔⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([21, ᐃⲆΔⲆᐃ.ΔΔΔⵠ, ᐃⲆΔⲆᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ᐃⲆⵠⲆΔᐃΔⵠΔ = function(ᐃⵠΔΔ, ᐃⵠⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ⵠᐃⲆⲆⵠ].stringify([9, ᐃⵠⲆ, ᐃⵠΔΔ.ΔΔΔⵠ, ᐃⵠΔΔ.ⵠᐃΔⵠⲆ, ᐃⵠΔΔ.type]))
		};
		this.ᐃΔᐃᐃΔΔⲆΔᐃ = function(ᐃⵠᐃⵠⵠ, ᐃⵠⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ⵠᐃⲆⲆⵠ].stringify([34, ᐃⵠⲆ, ᐃⵠᐃⵠⵠ.ΔΔΔⵠ, ᐃⵠᐃⵠⵠ.ⵠᐃΔⵠⲆ]))
		};
		this.ⵠⲆᐃΔⲆⲆΔⵠⵠ = function(ⵠᐃⵠᐃ, ⲆΔ, ᐃⵠⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔΔⲆⵠⲆΔⲆ[ⵠⲆⲆᐃᐃⲆᐃ].stringify([13, ⲆΔ, ᐃⵠⲆ, ⵠᐃⵠᐃ.ΔΔΔⵠ, ⵠᐃⵠᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ΔΔΔⲆⲆᐃᐃ = function(ᐃⵠΔΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([1, ᐃⵠΔΔ.ΔΔΔⵠ, ᐃⵠΔΔ.ⵠᐃΔⵠⲆ, ᐃⵠΔΔ.type]))
		};
		this.ⵠΔⵠΔⲆⲆⲆⵠᐃ = function(ΔⲆⵠⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([26, ΔⲆⵠⲆ.ΔΔΔⵠ, ΔⲆⵠⲆ.ⵠᐃΔⵠⲆ]))
		};
		this.ᐃᐃΔᐃⵠᐃⲆᐃⵠ = function(ⵠᐃⵠᐃ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([27, ⵠᐃⵠᐃ.ΔΔΔⵠ, ⵠᐃⵠᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ⲆⵠⲆΔᐃΔⲆⵠⵠ = function(ⵠᐃⵠᐃ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃⲆΔᐃⵠⲆⲆ[ⲆΔΔΔⲆΔᐃ].stringify([23, ⵠᐃⵠᐃ.ΔΔΔⵠ, ⵠᐃⵠᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ⵠΔⵠⲆⲆᐃⲆᐃⲆ = function(ⵠᐃⵠᐃ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃᐃⲆᐃⵠᐃ[ΔⲆΔΔΔᐃⲆ].stringify([5, ⵠᐃⵠᐃ.ⵠᐃΔⵠⲆ]))
		};
		this.ᐃΔᐃⵠⵠΔⲆ = function(ᐃᐃⲆᐃΔⵠΔ) {
			Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⲆᐃⲆⵠⲆ[ⲆᐃⵠΔᐃΔᐃ].stringify([22, ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id, ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃᐃⲆᐃΔⵠΔ]]))
		};
		this.ᐃⲆᐃΔΔⵠⵠᐃΔ = function() {
			Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃⲆⲆⲆⵠΔᐃ[ᐃᐃⲆᐃΔⵠᐃ].stringify([38, ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ, ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id]))
		};
		this.ⵠᐃΔⵠᐃΔᐃ = function() {
			Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃΔΔᐃⵠⲆΔ[ᐃᐃⵠⵠⵠⵠᐃ].stringify([18]))
		};
		this.ⵠΔᐃⵠΔΔᐃⲆⲆ = function() {
			Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃΔΔᐃⵠⲆΔ[ⲆᐃⵠΔᐃΔᐃ].stringify([ⲆⵠⵠⲆΔ, ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id]));
			"LOCK" == document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[141])[ⲆⵠΔᐃᐃᐃΔ[359]] ? (ⲆΔⲆ.ⵠⲆⵠᐃⲆ.lock = 1, document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[141])[ⲆⵠΔᐃᐃᐃΔ[359]] = "UNLOCK") : (ⲆΔⲆ.ⵠⲆⵠᐃⲆ.lock = 0, document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[141])[ⲆⵠΔᐃᐃᐃΔ[359]] = "LOCK")
		};
		this.ⵠᐃⲆ = function(ⲆⲆⲆΔ, ⲆⲆⲆⲆ, ΔᐃⵠᐃᐃΔⲆⲆᐃ) {
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			ΔᐃⵠᐃᐃΔⲆⲆᐃ && ⲆΔΔ.ᐃᐃⵠᐃⲆΔⲆᐃⲆ();
			var ΔᐃᐃⵠⲆ = (ⲆⲆⲆⲆ.length - 2) / ᐃΔⲆᐃᐃᐃΔ;
			for (var ᐃⲆ = 0; ΔᐃᐃⵠⲆ > ᐃⲆ; ᐃⲆ++) {
				var ⲆΔⵠᐃᐃⵠΔ = ᐃΔⵠᐃ + ᐃᐃᐃⵠⲆⲆΔ * ᐃⲆ;
				var ⲆⲆΔᐃᐃⲆᐃ = ΔΔᐃⵠ + ⵠΔⲆⲆᐃ * ᐃⲆ;
				var ΔΔΔⵠ = ⲆⲆⲆⲆ[ⲆΔⵠᐃᐃⵠΔ];
				var ᐃᐃⵠΔ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + ⲆⲆΔᐃ];
				var ⲆΔ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + 5];
				var ⲆⲆᐃΔ = ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ * ΔΔΔⵠ + ⲆΔ;
				if (ᐃᐃⵠΔ & ⵠΔⵠⵠ.ΔⵠⲆⲆΔⲆⲆⵠᐃ) {
					ⲆΔΔ.ⲆᐃⲆΔΔⵠΔⵠᐃ(ⲆⲆᐃΔ);
					continue
				}
				var ⵠⲆᐃΔ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + ⵠⵠΔⲆ];
				var ᐃᐃΔ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + 3];
				var ᐃⲆᐃ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + ⵠⲆᐃᐃ];
				var ⵠΔⵠ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + ᐃⲆⵠⲆΔ];
				var ΔΔᐃᐃⲆ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + ΔΔⲆᐃⵠ];
				var ⵠΔᐃΔⵠ = ᐃᐃⲆⵠᐃ[ⲆⲆΔᐃᐃⲆᐃ + 8];
				var ΔᐃΔ = ⵠⲆⵠᐃ * (Math.PI * (ⲆⲆⲆⲆ[ⲆΔⵠᐃᐃⵠΔ + 1] / ᐃⵠⵠᐃⲆᐃⵠ));
				if (!ⲆΔΔ.ΔⲆΔⵠΔ[ⲆⲆᐃΔ]) {
					var ⵠⲆⵠ = new ΔⵠⵠⲆⲆΔⲆ(ⵠⲆᐃΔ, ΔΔΔⵠ, ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, ΔᐃΔ, ᐃᐃⵠΔ, ⵠΔⵠ, ΔΔᐃᐃⲆ, ⵠΔᐃΔⵠ);
					ⲆΔΔ.ΔⲆΔⵠΔ[ⲆⲆᐃΔ] = ⵠⲆⵠ;
					ⲆΔΔ.ⵠᐃⲆ[ⵠⲆᐃΔ].push(ⵠⲆⵠ);
					continue
				}
				var ΔⲆⵠᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆⲆᐃΔ];
				ΔⲆⵠᐃ.r.x = ᐃᐃΔ;
				ΔⲆⵠᐃ.r.y = ᐃⲆᐃ;
				ᐃⵠΔ != ΔΔΔⵠ && ᐃΔᐃᐃΔ.ⵠᐃᐃⲆⵠΔΔⵠⵠ < Ⲇᐃⵠ.ⵠⵠΔᐃ(ΔⲆⵠᐃ, ΔⲆⵠᐃ.r) && (ΔⲆⵠᐃ.x = ᐃᐃΔ, ΔⲆⵠᐃ.y = ᐃⲆᐃ);
				if (ⲆΔⲆ.id !== ΔⲆⵠᐃ.id || ΔΔΔⵠ === 0) ΔⲆⵠᐃ.ᐃⲆΔⲆΔⵠⵠ = ΔᐃΔ;
				ΔⲆⵠᐃ.action |= ᐃᐃⵠΔ;
				ΔⲆⵠᐃ.info = ⵠΔⵠ;
				ΔⲆⵠᐃ.ΔΔᐃᐃⲆ = ΔΔᐃᐃⲆ;
				ΔⲆⵠᐃ.ⵠΔᐃΔⵠ = ⵠΔᐃΔⵠ;
				if (ΔⲆⵠᐃ.ⵠᐃⵠ) ΔⲆⵠᐃ.ⵠᐃⵠ(ᐃᐃⵠΔ)
			}
		};
		this.ⲆⲆΔⵠⲆ = function(ⲆⲆⲆΔ) {
			this.ⵠⵠᐃΔᐃⲆᐃ = ᐃⲆΔⲆⲆ;
			var ΔⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			ⲆΔⲆ.ⲆⵠⲆᐃⲆ.ⲆΔⲆΔΔ(ΔⲆⵠᐃ)
		};
		this.ᐃⵠᐃᐃⵠⵠⵠⵠⵠ = function(ΔᐃⲆⵠΔⵠⲆ) {
			if (ᐃⵠⵠⲆⵠⲆᐃ !== undefined) ⲆᐃⲆⲆᐃ = ᐃⵠⵠⲆⵠⲆᐃ;
			if (ΔᐃⲆΔ < ΔᐃⲆⵠΔⵠⲆ.length) {
				ᐃⵠⵠⲆⵠⲆᐃ = JSON.parse(JSON.stringify(ⲆᐃⲆⲆᐃ));
				for (var ᐃⲆ = ΔᐃⲆΔ; ΔᐃⲆⵠΔⵠⲆ.length > ᐃⲆ; ᐃⲆ++) {
					var Δᐃᐃ = ΔᐃⲆⵠΔⵠⲆ[ᐃⲆ];
					var ⵠᐃᐃᐃᐃⲆⲆ = ⲆᐃⲆⲆᐃ[Δᐃᐃ["item"]];
					if (ⵠᐃᐃᐃᐃⲆⲆ === undefined) continue;
					ⵠᐃᐃᐃᐃⲆⲆ.r = Δᐃᐃ["recipe"];
					ⵠᐃᐃᐃᐃⲆⲆ.w = Δᐃᐃ["workbench"];
					ⵠᐃᐃᐃᐃⲆⲆ.f = Δᐃᐃ["fire"];
					ⵠᐃᐃᐃᐃⲆⲆ.ⵠⲆⵠ = Δᐃᐃ["water"];
					ⵠᐃᐃᐃᐃⲆⲆ.e = Δᐃᐃ["well"];
					ⵠᐃᐃᐃᐃⲆⲆ.time = ΔΔᐃᐃ / Δᐃᐃ[ⵠ[448]]
				}
			}
		};
		this.ᐃΔⲆᐃⵠⵠⲆ = function(ᐃⲆΔΔ) {
			if (!ᐃⲆΔΔ || ᐃⲆΔΔ.length === ᐃΔⵠⵠ) ⲆΔⲆ.ᐃΔⲆᐃⵠⵠⲆ.message = ᐃⲆⵠⲆⵠ;
			else ⲆΔⲆ.ᐃΔⲆᐃⵠⵠⲆ.message = ΔᐃⲆⵠⵠⵠΔⲆΔ(ᐃⲆΔΔ)
		};
		this.ᐃΔᐃᐃᐃ = function(ᐃⲆΔΔ) {
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ᐃⲆΔΔ[1] * ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ];
			if (ⵠΔᐃ) {
				if (ⲆⵠΔΔ.ᐃᐃΔᐃⲆ === ⲆΔΔ.mode && ⲆⵠΔΔ.ΔΔⵠᐃΔᐃⲆ === ⵠΔᐃ.ᐃᐃᐃΔ) {
					if (!ⲆΔⲆ.ΔⵠⲆΔΔ) ⵠΔᐃ.text.push(ⲆⵠⵠᐃⲆᐃⵠ[Math.floor(Math.random() * ⲆⵠⵠᐃⲆᐃⵠ.length)]);
					else {
						.5 < Math.random() ? ⵠΔᐃ.text.push(ᐃⲆΔΔ[ΔⲆⲆᐃ] + " ..." + ᐃᐃⵠΔⲆ) : ⵠΔᐃ.text.push(ᐃᐃⵠΔⲆ + "... " + ᐃⲆΔΔ[2])
					}
				} else ⵠΔᐃ.text.push(ᐃⲆΔΔ[ᐃⲆⵠᐃ])
			}
		};
		this.ΔⲆᐃᐃⲆΔᐃⵠⲆ = function(ⲆΔ) {
			if (ⲆΔⲆ.ⵠΔᐃᐃ.max === ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length && ⵠⲆ.ⵠΔΔⵠ !== ⲆᐃⲆⲆᐃ[ⲆΔ].ᐃⵠⲆᐃ && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆᐃⲆⲆᐃ[ⲆΔ].ᐃⵠⲆᐃ) == -ᐃⵠ && !ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆⲆΔΔⲆᐃᐃⲆ(ⲆᐃⲆⲆᐃ[ⲆΔ].r)) {
				this.ΔᐃΔΔⵠᐃⲆ();
				return ΔⲆᐃⲆ
			}
			Settings.AutoCraft.last = ⲆΔ;
			if (Settings.AutoBook.enabled && ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ] && ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ].right != 28 && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[28]) ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, 28]));
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃⲆᐃΔᐃᐃ[ᐃⵠⵠⲆᐃᐃⲆ].stringify([ᐃᐃⲆΔ, ⲆΔ]));
			return ΔᐃⵠΔ
		};
		this.ᐃΔⵠⲆⲆ = function(ⲆᐃᐃΔⵠ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠⲆᐃΔᐃᐃᐃ(ⲆᐃᐃΔⵠ)
		};
		this.ᐃⲆΔⲆᐃ = function(ⲆᐃᐃΔⵠ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃⲆΔⲆᐃ = ⲆᐃᐃΔⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ᐃᐃⵠⲆΔ = function(ⲆᐃᐃΔⵠ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃᐃⵠⲆΔ = ⲆᐃᐃΔⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ⲆΔⲆΔΔΔⲆ = function(ⲆᐃᐃΔⵠ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆΔΔΔⲆ = ⲆᐃᐃΔⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ᐃΔⵠⵠΔΔⲆⲆΔ = function(ΔΔ) {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔᐃⵠᐃⵠⲆᐃ])
		};
		this.ⵠⲆᐃⲆᐃⵠᐃⵠⲆ = function() {
			ⲆΔⲆ.ᐃΔⵠΔ.ΔᐃⲆⵠΔᐃΔ()
		};
		this.ⲆᐃⵠⵠⲆ = function(ᐃⵠΔⵠᐃ) {
			ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ᐃⵠⵠΔ = [];
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			var ⲆΔⲆᐃ = 0;
			for (var ᐃⲆ = 1; ᐃⵠΔⵠᐃ.length > ᐃⲆ; ᐃⲆ += 2) {
				var ᐃΔΔⵠ = {
					x: Math.floor(ᐃⵠΔⵠᐃ[ᐃⲆ] * ⲆΔΔ.w / 250),
					y: Math.floor(ᐃⵠΔⵠᐃ[ᐃⲆ + 1] * ⲆΔΔ.ΔᐃⲆ / 250)
				};
				if (ⵠΔᐃ && !ⲆΔⲆᐃ && !ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ && Ⲇᐃⵠ.ⵠⵠΔᐃ(ᐃΔΔⵠ, ⵠΔᐃ) < 250) {
					ⲆΔⲆᐃ += ⵠᐃΔᐃ;
					continue
				}
				ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ᐃⵠⵠΔ.push(ᐃΔΔⵠ)
			}
		};
		this.bestHammer = function() {
			for (const hammer of [35, 36, 37, 38, 39].reverse()) {
				if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[hammer]) return hammer
			}
		};
		this.ⵠⵠⵠⵠΔᐃⵠⵠΔ = function() {
			ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
			ⲆΔⲆ.ΔΔᐃⲆΔ.enabled = ᐃⵠᐃⵠᐃ;
			ⲆΔⲆ.ΔΔᐃⲆΔ.ᐃᐃΔⲆΔ = -ΔᐃᐃⲆ;
			ⲆΔⲆ.ΔΔᐃⲆΔ.label = null;
			ⲆΔⲆ.ΔΔᐃⲆΔ.ⵠⲆⲆⵠⲆΔⲆ = null;
			ⲆΔⲆ.ΔΔᐃⲆΔ.now = -ΔᐃⵠΔ;
			if (Settings.AutoCrown.enabled) {
				autoCrownReady = false;
				ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, 79]));
				ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([16, this.bestHammer()]));
				setTimeout((() => {
					autoCrownReady = true
				}), 5e3)
			}
		};
		this.ΔΔᐃⲆΔ = function(ⵠⲆᐃᐃⲆᐃΔΔΔ) {
			ⲆⵠΔΔ.ΔΔⵠⵠⵠⵠΔ = ⵠⲆᐃᐃⲆᐃΔΔΔ;
			ⲆΔⲆ.ΔΔᐃⲆΔ.enabled = ΔᐃⲆⲆᐃ;
			ⲆΔⲆ.ΔΔᐃⲆΔ.ᐃᐃΔⲆΔ = (new Date).getTime();
			ⲆΔⲆ.ΔΔᐃⲆΔ.label = null;
			ⲆΔⲆ.ΔΔᐃⲆΔ.now = -ⲆᐃⲆⲆ;
			var ᐃⲆᐃΔ = [ⵠⲆ.ⵠΔᐃⵠⵠ, ⵠⲆ.ΔⵠⵠⵠΔ, ⵠⲆ.Ⲇᐃⵠᐃⵠ, ⵠⲆ.ⵠⲆⵠΔⲆ, ⵠⲆ.ⲆᐃΔΔⲆ, ⵠⲆ.ΔⲆᐃⲆᐃ, ⵠⲆ.ΔᐃΔⲆⲆ, ⵠⲆ.ⵠⲆⲆΔⲆ, ⵠⲆ.ᐃⲆΔΔⵠ, ⵠⲆ.ⲆᐃΔⲆⵠ, ⵠⲆ.ΔⲆⲆΔⲆ, ⵠⲆ.ⲆΔⵠᐃⵠ, ⵠⲆ.ΔΔΔⲆⵠ, ⵠⲆ.ⵠⲆΔᐃⲆ, ⵠⲆ.ΔⲆⲆᐃᐃ, ⵠⲆ.ᐃⲆⵠⲆᐃ, ⵠⲆ.ⲆⲆⲆⵠⲆ, ⵠⲆ.ⵠⵠΔᐃⵠ, ⵠⲆ.ᐃⵠⲆΔΔ, ⵠⲆ.ⵠⲆⲆⲆᐃ, ⵠⲆ.ΔΔⵠⲆⲆ, ⵠⲆ.ⲆⵠΔⵠᐃ, ⵠⲆ.ⲆΔᐃⵠⵠ, ⵠⲆ.ⵠⵠΔΔᐃ, ⵠⲆ.ⵠΔⵠⵠΔ, ⵠⲆ.ⲆⲆⵠΔΔ, ⵠⲆ.ᐃΔⵠᐃⵠ, ⵠⲆ.ᐃⲆΔⵠΔ, ⵠⲆ.ⲆⵠⲆΔⵠ, ⵠⲆ.ⲆⲆΔⲆⲆ, ⵠⲆ.ⲆⲆᐃⵠⵠ, ⵠⲆ.ⵠΔΔⵠΔ, ⵠⲆ.ᐃᐃΔΔⲆ, ⵠⲆ.ⲆⵠᐃⲆᐃ, ⵠⲆ.ⵠⵠΔⲆΔ, ⵠⲆ.ⵠΔⲆΔΔ, ⵠⲆ.ⵠΔΔⲆΔ, ⵠⲆ.ⲆⲆΔΔΔ, ⵠⲆ.ᐃⵠⵠⲆⵠ, ⵠⲆ.ΔⲆᐃⵠⲆ, ⵠⲆ.ᐃΔⲆΔⲆ, ⵠⲆ.ⵠᐃΔⵠᐃ, ⵠⲆ.ᐃⵠᐃⲆΔ, ⵠⲆ.ᐃᐃΔⵠᐃ, ⵠⲆ.ᐃᐃΔᐃΔ, ⵠⲆ.ᐃΔΔᐃΔ, ⵠⲆ.ᐃΔᐃΔᐃ, ⵠⲆ.ⲆΔΔΔΔ, ⵠⲆ.ⵠΔΔᐃⲆ, ⵠⲆ.ᐃᐃⲆΔᐃ];
			for (var ᐃⲆ = 0; ᐃⲆᐃΔ.length > ᐃⲆ; ᐃⲆ++) {
				var ⲆΔ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ᐃⲆᐃΔ[ᐃⲆ]);
				ⲆΔ != -ⵠⵠⲆ && ⲆΔⲆ.ⵠΔᐃᐃ.ⵠΔⲆᐃⵠⲆⲆ(ᐃⲆᐃΔ.length[ᐃⲆ], ⲆΔ)
			}
			ⲆΔⲆ.ᐃΔⵠΔ.ΔᐃⲆⵠΔᐃΔ()
		};
		this.ⲆΔⵠⲆⵠΔⵠᐃᐃ = function(ⲆΔ, ΔⵠⵠⲆⵠⲆⵠⵠⵠ, ΔⲆΔᐃⲆⲆᐃⵠⵠ) {
			this.ⲆⵠΔⵠᐃⲆᐃ(ⲆΔ, ΔⵠⵠⲆⵠⲆⵠⵠⵠ * 256 + ΔⲆΔᐃⲆⲆᐃⵠⵠ)
		};
		this.ⲆⵠΔⵠᐃⲆᐃ = function(ⲆΔ, ᐃⵠⲆ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -1;
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆΔⵠⵠⲆΔΔ(ⲆΔ, ᐃⵠⲆ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆΔ));
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ⵠⲆΔⵠᐃⵠⵠΔᐃ = function(ⲆΔ) {
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -ⵠⲆⲆ;
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait = ΔᐃⲆΔⲆ;
			var ΔᐃⵠΔⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆΔ);
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆΔⵠⵠⲆΔΔ(ⲆΔ, ⵠⲆⲆ, ΔᐃⵠΔⲆ);
			ΔᐃⵠΔⲆ >= ΔᐃⲆΔ && !ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⲆΔ] && ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ();
			if (ⵠⲆ.ΔⵠⲆΔᐃ == ⲆΔ) ⲆΔⲆ.ΔⵠΔⵠΔ = [ⲆΔⲆ.id]
		};
		this.ⵠⲆΔⲆⵠⵠⵠᐃΔ = function() {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([37]))
		};
		this.ᐃΔⲆᐃⵠΔⲆⲆᐃ = function(ⵠⵠΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ΔΔⵠⵠⵠᐃᐃ].stringify([28, ⵠⵠΔ.ⲆᐃᐃΔⵠ, ⵠⵠΔ.id]))
		};
		this.ⲆⲆⵠᐃΔⲆⵠᐃᐃ = function(ⲆΔ, ⵠᐃᐃⵠⲆᐃⵠ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ⵠᐃⲆⲆⵠ].stringify([ⵠᐃⵠⲆᐃ, ⲆΔ, ⵠᐃᐃⵠⲆᐃⵠ]))
		};
		this.ᐃΔⵠⲆᐃⲆⲆΔⵠ = function() {
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			if (ⵠΔᐃ) {
				var ⵠⵠⵠΔᐃ = 2 * Math.PI;
				this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ΔΔⵠⵠⵠᐃᐃ].stringify([15, ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ, Math.floor(255 * ((ⵠΔᐃ.angle + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ) / ⵠⵠⵠΔᐃ), ⲆΔⲆ.ᐃΔⵠΔ.mode]))
			}
		};
		this.ΔⵠⲆⲆⲆ = function(ⲆΔ, ᐃⲆ) {
			switch (ⲆΔ) {
				case ⵠⲆ.ⵠⵠⵠᐃⲆ:
				case ⵠⲆ.ⵠⵠᐃΔᐃ:
				case ⵠⲆ.ⲆᐃⵠΔᐃ:
				case ⵠⲆ.ⵠᐃᐃⵠⵠ:
				case ⵠⲆ.ΔⲆⲆᐃⲆ:
				case ⵠⲆ.ⵠΔΔⲆⵠ:
				case ⵠⲆ.ΔⵠᐃⲆΔ:
				case ⵠⲆ.ⵠᐃⲆⲆΔ:
				case ⵠⲆ.ⵠᐃⵠΔᐃ:
				case ⵠⲆ.ⵠⲆΔⵠᐃ:
				case ⵠⲆ.ΔⵠⵠΔⵠ:
				case ⵠⲆ.ⲆⵠⵠᐃΔ:
				case ⵠⲆ.ⲆΔⲆⵠᐃ:
				case ⵠⲆ.ⲆⵠⵠⲆᐃ:
				case ⵠⲆ.ᐃΔⲆΔᐃ:
				case ⵠⲆ.ⲆⵠᐃⲆΔ:
				case ⵠⲆ.ⵠΔΔⵠᐃ:
				case ⵠⲆ.ᐃⵠⲆⵠΔ:
				case ⵠⲆ.ΔΔᐃᐃᐃ:
				case ⵠⲆ.ΔᐃᐃΔΔ:
				case ⵠⲆ.ᐃⲆᐃⲆⲆ:
				case ⵠⲆ.ᐃΔⲆⲆᐃ:
				case ⵠⲆ.ΔᐃⲆΔΔ:
					ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -1;
					this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔΔⲆⵠⲆΔⲆ[ⵠⲆⲆᐃᐃⲆᐃ].stringify([ⲆⲆⵠᐃⲆ, ⲆΔ]));
					break;
				case ⵠⲆ.ΔᐃΔⵠΔ:
				case ⵠⲆ.Δᐃⵠⵠᐃ:
				case ⵠⲆ.ΔⲆΔⵠᐃ:
				case ⵠⲆ.ⵠᐃⲆΔⲆ:
				case ⵠⲆ.ᐃΔⲆⵠΔ:
				case ⵠⲆ.ⵠⵠⲆⲆᐃ:
				case ⵠⲆ.ᐃⵠⲆᐃᐃ:
				case ⵠⲆ.ⵠⵠΔⵠᐃ:
				case ⵠⲆ.ⵠⵠᐃⵠⲆ:
				case ⵠⲆ.ⲆᐃⲆΔⲆ:
				case ⵠⲆ.ΔⵠᐃᐃΔ:
				case ⵠⲆ.ⲆⵠΔⲆΔ:
				case ⵠⲆ.ⲆΔᐃⲆᐃ:
				case ⵠⲆ.ᐃᐃᐃΔⲆ:
				case ⵠⲆ.ΔΔⵠⵠⵠ:
				case ⵠⲆ.ΔⲆΔΔᐃ:
				case ⵠⲆ.ⵠᐃᐃΔΔ:
				case ⵠⲆ.ΔⵠΔⲆᐃ:
				case ⵠⲆ.ⲆΔⵠΔΔ:
				case ⵠⲆ.ΔΔΔΔΔ:
				case ⵠⲆ.ⲆΔᐃΔⵠ:
				case ⵠⲆ.ΔᐃᐃⲆⵠ:
				case ⵠⲆ.ⲆⲆⲆⵠⵠ:
				case ⵠⲆ.ⵠⲆᐃΔᐃ:
				case ⵠⲆ.ΔⲆⵠᐃΔ:
				case ⵠⲆ.ⲆᐃᐃⲆⵠ:
				case ⵠⲆ.ⲆⵠⵠⲆⲆ:
				case ⵠⲆ.ΔⲆΔⵠⵠ:
				case ⵠⲆ.ⵠⲆᐃᐃᐃ:
				case ⵠⲆ.ᐃⲆⲆⵠⲆ:
				case ⵠⲆ.ᐃᐃΔΔΔ:
				case ⵠⲆ.ΔⵠᐃⲆⵠ:
				case ⵠⲆ.ⲆΔⵠΔⵠ:
				case ⵠⲆ.Δⵠⵠᐃⵠ:
				case ⵠⲆ.ⲆᐃⵠⲆΔ:
				case ⵠⲆ.ⲆⲆᐃⲆⵠ:
				case ⵠⲆ.ΔΔⵠΔⲆ:
				case ⵠⲆ.ⲆⵠΔⲆᐃ:
				case ⵠⲆ.ᐃⵠⵠⲆⲆ:
				case ⵠⲆ.ΔⲆⲆⵠᐃ:
				case ⵠⲆ.ⲆΔᐃΔΔ:
				case ⵠⲆ.ⵠΔⲆᐃⵠ:
				case ⵠⲆ.ⵠᐃⲆᐃᐃ:
				case ⵠⲆ.ⵠⵠⲆΔΔ:
				case ⵠⲆ.ΔⲆᐃΔⲆ:
				case ⵠⲆ.ⵠᐃΔⲆΔ:
				case ⵠⲆ.ⵠⲆⵠⲆⲆ:
				case ⵠⲆ.ᐃΔᐃⵠⲆ:
				case ⵠⲆ.ⲆⲆᐃΔⵠ:
				case ⵠⲆ.ⵠᐃᐃⲆⵠ:
				case ⵠⲆ.ᐃⵠΔᐃΔ:
				case ⵠⲆ.ⲆΔⲆⵠⲆ:
				case ⵠⲆ.ᐃᐃᐃⵠⲆ:
				case ⵠⲆ.ΔⲆⲆΔⵠ:
				case ⵠⲆ.ΔⵠⲆΔᐃ:
				case ⵠⲆ.ᐃᐃᐃⵠⵠ:
					if (!ⲆΔⲆ.ΔⵠⲆΔΔ) {
						if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ === ⲆΔ) ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -ⵠⵠⲆ;
						else ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = ⲆΔ
					}
					break;
				case ⵠⲆ.ⵠⲆⵠΔⲆ:
				case ⵠⲆ.Ⲇᐃⵠᐃⵠ:
				case ⵠⲆ.ⲆᐃΔΔⲆ:
				case ⵠⲆ.ΔⲆᐃⲆᐃ:
				case ⵠⲆ.ΔᐃΔⲆⲆ:
				case ⵠⲆ.ⵠⲆⲆΔⲆ:
				case ⵠⲆ.ΔⲆⲆΔⲆ:
				case ⵠⲆ.ᐃⲆΔΔⵠ:
				case ⵠⲆ.ⲆᐃΔⲆⵠ:
				case ⵠⲆ.ᐃΔⵠᐃⵠ:
				case ⵠⲆ.ᐃⲆΔⵠΔ:
				case ⵠⲆ.ⲆⵠⲆΔⵠ:
				case ⵠⲆ.ⲆⲆΔⲆⲆ:
				case ⵠⲆ.ⲆⲆᐃⵠⵠ:
				case ⵠⲆ.ⵠΔΔⵠΔ:
				case ⵠⲆ.ᐃᐃΔΔⲆ:
				case ⵠⲆ.ΔⲆᐃⵠⲆ:
				case ⵠⲆ.ᐃΔⲆΔⲆ:
				case ⵠⲆ.ΔΔΔⲆⵠ:
				case ⵠⲆ.ⲆΔⵠᐃⵠ:
				case ⵠⲆ.ⵠⲆΔᐃⲆ:
				case ⵠⲆ.ΔⲆⲆᐃᐃ:
				case ⵠⲆ.ᐃⲆⵠⲆᐃ:
				case ⵠⲆ.ⲆΔⵠⵠⵠⵠΔⲆΔ:
				case ⵠⲆ.ⵠⵠΔᐃⵠ:
				case ⵠⲆ.ᐃⵠⲆΔΔ:
				case ⵠⲆ.ⲆⲆⲆⵠⲆ:
				case ⵠⲆ.ⵠⲆⲆⲆᐃ:
				case ⵠⲆ.ΔΔⵠⲆⲆ:
				case ⵠⲆ.ⲆⵠΔⵠᐃ:
				case ⵠⲆ.ⲆΔᐃⵠⵠ:
				case ⵠⲆ.ⵠⵠΔΔᐃ:
				case ⵠⲆ.ⵠΔⵠⵠΔ:
				case ⵠⲆ.ⲆⲆⵠΔΔ:
					if (!ⲆΔⲆ.ΔⵠⲆΔΔ) {
						ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -1;
						var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
						ⵠΔᐃ && ⵠΔᐃ.right === ⲆΔ ? this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([16, ⵠⲆ.ΔΔᐃⵠᐃ])) : (ⲆΔⲆ.ⲆΔⵠᐃΔ.wait = true, this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃⲆΔᐃⵠⲆⲆ[ⲆΔΔΔⲆΔᐃ].stringify([16, ⲆΔ])))
					}
					break;
				case ⵠⲆ.ᐃⵠᐃⲆΔ:
				case ⵠⲆ.ⵠᐃΔⵠᐃ:
				case ⵠⲆ.ᐃᐃΔⵠᐃ:
				case ⵠⲆ.ᐃᐃΔᐃΔ:
				case ⵠⲆ.ΔⲆΔⲆᐃ:
				case ⵠⲆ.ⲆⲆΔⲆⵠ:
				case ⵠⲆ.ⲆᐃΔⵠᐃ:
				case ⵠⲆ.ΔᐃⵠⲆΔ:
				case ⵠⲆ.ᐃΔⵠⵠᐃ:
				case ⵠⲆ.ⲆⲆⵠᐃⵠ:
				case ⵠⲆ.ᐃΔΔᐃΔ:
				case ⵠⲆ.ᐃΔᐃΔᐃ:
				case ⵠⲆ.ⵠΔᐃⵠⵠ:
				case ⵠⲆ.ⵠⵠⲆᐃᐃ:
				case ⵠⲆ.ᐃᐃⲆᐃⲆ:
				case ⵠⲆ.ᐃⵠΔⲆΔ:
				case ⵠⲆ.ᐃⵠⵠⵠᐃ:
				case ⵠⲆ.ⲆΔΔΔΔ:
				case ⵠⲆ.ⲆⲆⵠⵠᐃ:
				case ⵠⲆ.ⵠΔΔᐃⲆ:
				case ⵠⲆ.ᐃᐃⲆΔᐃ:
				case ⵠⲆ.ⵠᐃⲆᐃⲆ:
				case ⵠⲆ.ᐃΔⲆΔⵠ:
				case ⵠⲆ.ⲆⵠᐃⲆᐃ:
				case ⵠⲆ.ⵠⵠΔⲆΔ:
				case ⵠⲆ.ⵠΔⲆΔΔ:
				case ⵠⲆ.ⵠΔΔⲆΔ:
				case ⵠⲆ.ⲆⲆΔΔΔ:
				case ⵠⲆ.ᐃⵠⵠⲆⵠ:
					if (!ⲆΔⲆ.ΔⵠⲆΔΔ) {
						ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -ᐃⵠ;
						var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
						if (ⵠΔᐃ && ⵠΔᐃ.right === ⲆΔ) {
							this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃᐃⲆᐃⵠᐃ[ΔⲆΔΔΔᐃⲆ].stringify([ⲆⵠᐃΔᐃ, ⵠⲆ.ΔΔᐃⵠᐃ]))
						} else this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⲆᐃⲆⵠⲆ[ⲆᐃⵠΔᐃΔᐃ].stringify([ᐃᐃᐃⲆⲆ, ⲆΔ]))
					}
					break;
				case ⵠⲆ.ΔΔⲆᐃΔ:
				case ⵠⲆ.ⵠᐃⲆⵠΔ:
				case ⵠⲆ.ᐃΔⵠⵠΔ:
				case ⵠⲆ.ⵠⵠᐃᐃᐃ:
				case ⵠⲆ.ᐃᐃⵠΔΔ:
				case ⵠⲆ.ᐃⲆⲆⲆⲆ:
				case ⵠⲆ.ᐃⲆⲆᐃⲆ:
				case ⵠⲆ.ΔᐃⲆⵠᐃ:
				case ⵠⲆ.ⲆᐃΔⲆⲆ:
				case ⵠⲆ.ΔᐃΔⵠⵠ:
					if (!ⲆΔⲆ.ΔⵠⲆΔΔ) {
						ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -1;
						var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
						this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⲆᐃⲆⵠⲆ[ⲆᐃⵠΔᐃΔᐃ].stringify([ᐃΔⲆⲆⲆᐃᐃ, ⲆΔ]))
					}
					break;
				case ⵠⲆ.ᐃᐃⵠᐃⵠ:
				case ⵠⲆ.ᐃⵠΔⵠⲆ:
				case ⵠⲆ.ⵠᐃⵠᐃᐃ:
				case ⵠⲆ.Δᐃⵠᐃⵠ:
				case ⵠⲆ.ⵠΔⵠⵠⵠ:
				case ⵠⲆ.ⵠⲆⵠᐃᐃ:
				case ⵠⲆ.ᐃΔⵠⲆⵠ:
				case ⵠⲆ.ⲆᐃⲆΔⵠ:
				case ⵠⲆ.ⲆⲆⲆΔⲆ:
				case ⵠⲆ.ΔⲆΔᐃⵠ:
				case ⵠⲆ.ΔΔΔᐃᐃ:
				case ⵠⲆ.Δⵠᐃᐃⵠ:
				case ⵠⲆ.ⵠᐃⲆΔᐃ:
				case ⵠⲆ.ᐃᐃⵠⲆᐃ:
				case ⵠⲆ.ΔΔⵠⵠᐃ:
				case ⵠⲆ.ᐃᐃⲆΔⵠ:
				case ⵠⲆ.ⵠΔᐃΔΔ:
					var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
					if (ⵠΔᐃ && ⲆΔ !== ⵠΔᐃ.ᐃⲆΔⲆΔ) ⲆΔⲆ.ⵠΔᐃⲆΔ.wait = true;
					this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔΔⲆⵠⲆΔⲆ[ⵠᐃⲆⲆⵠ].stringify([ᐃΔᐃᐃⲆ, ⲆΔ]));
					break;
				case ⵠⲆ.ⲆⲆⵠᐃᐃ:
				case ⵠⲆ.ᐃⲆΔᐃⵠ:
				case ⵠⲆ.ΔΔᐃᐃΔ:
				case ⵠⲆ.ⲆΔⵠⲆⲆ:
				case ⵠⲆ.ΔⲆⲆΔᐃ:
				case ⵠⲆ.ΔⲆᐃⲆⵠ:
				case ⵠⲆ.ΔⲆⵠⵠᐃ:
				case ⵠⲆ.ⵠⵠΔᐃᐃ:
				case ⵠⲆ.ᐃⲆⵠⵠΔ:
				case ⵠⲆ.ⲆᐃᐃⵠΔ:
				case ⵠⲆ.ᐃⵠᐃⲆⵠ:
				case ⵠⲆ.ⵠⵠⲆΔⲆ:
				case ⵠⲆ.ᐃᐃΔΔⵠ:
				case ⵠⲆ.ⵠⵠᐃⵠᐃ:
				case ⵠⲆ.ⵠⲆΔΔⵠ:
				case ⵠⲆ.ⲆⲆΔⲆᐃ:
					this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃⲆⲆⲆⵠΔᐃ[ᐃᐃⲆᐃΔⵠᐃ].stringify([16, ⲆΔ]));
					break
			}
		};
		this.ᐃⲆᐃΔΔᐃᐃᐃⲆ = function(ⲆΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ᐃⵠⵠⲆᐃᐃⲆ].stringify([11, ⲆΔ]))
		};
		this.Δⵠⵠⵠᐃⵠⵠᐃᐃ = function(ⲆΔ) {
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait = true;
			var ᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆΔ);
			ⲆΔⲆ.ⵠΔᐃᐃ.ⵠΔⲆᐃⵠⲆⲆ(ⲆΔ, ᐃⲆ);
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ⵠⵠⲆΔᐃⵠⲆΔⲆ = function(ⲆΔ, ᐃⲆ) {
			Settings.AutoRecycle.last = ⲆΔ;
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃⲆᐃΔᐃᐃ[ΔⲆΔΔΔᐃⲆ].stringify([20, ⲆΔ]))
		};
		this.ⲆⵠⵠⲆⵠⵠⵠⲆⵠ = function(ⲆΔ, ᐃⲆ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([35, ⲆΔ]))
		};
		this.ᐃᐃⲆᐃΔⵠⵠⲆⵠ = function(ⲆΔ) {
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait = true;
			var ᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆΔ);
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆΔⵠⵠⲆΔΔ(ⲆΔ, 1, ᐃⲆ);
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ⵠΔᐃⲆⲆⵠᐃⵠⲆ = function(ⲆⲆⲆΔ) {
			var ⲆΔ = ⲆⲆⲆΔ[1];
			var ⲆᐃᐃⲆ = ⲆⲆⲆΔ[ᐃⲆⲆΔ];
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait = ⵠⲆΔⲆⵠ;
			var ᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⲆΔ);
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆΔⵠⵠⲆΔΔ(ⲆΔ, ⲆᐃᐃⲆ, ᐃⲆ);
			ⲆΔⲆ.ᐃΔⵠΔ.ⵠᐃⵠ()
		};
		this.ᐃΔᐃⲆᐃΔΔᐃᐃ = function() {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([36]))
		};
		this.ⲆΔΔⵠΔᐃᐃⵠᐃ = function(ΔᐃΔ) {
			var ⵠⵠⵠΔᐃ = ⲆᐃⲆᐃ * Math.PI;
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ΔΔⵠⵠⵠᐃᐃ].stringify([24, Math.floor((ΔᐃΔ + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ * 255 / ⵠⵠⵠΔᐃ)]))
		};
		this.ⲆⵠⵠᐃΔΔΔΔΔ = function(ΔᐃΔ) {
			var ⵠⵠⵠΔᐃ = Math.PI * 2;
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⵠΔⵠΔΔ[ΔΔⵠⵠⵠᐃᐃ].stringify([ΔⵠⵠΔᐃⲆᐃ, Math.floor((ΔᐃΔ + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ * ΔΔΔⵠⲆΔᐃ / ⵠⵠⵠΔᐃ)]))
		};
		this.ⲆⵠⵠⲆΔΔⵠⲆⵠ = function(ᐃᐃⵠⲆⵠ) {
			Settings.Spectator.enabled || this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆⲆⵠᐃⵠΔⲆ[ⵠΔⵠⵠΔⲆⵠ].stringify([3, ᐃᐃⵠⲆⵠ]))
		};
		this.ⲆᐃᐃΔⵠΔΔⲆΔ = function(ⵠΔⲆⵠΔ) {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([31, ⵠΔⲆⵠΔ]))
		};
		this.ΔᐃⵠⵠⲆΔⵠⲆⵠ = function(ⵠΔⲆⵠΔ) {
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			if (ⲆΔⲆ.ΔⵠⲆΔΔ) {
				.5 < Math.random() ? ⵠΔᐃ.text.push(ⵠΔⲆⵠΔ.substring(ΔΔⵠᐃ, 25) + " ..." + ᐃᐃⵠΔⲆ) : ⵠΔᐃ.text.push(ᐃᐃⵠΔⲆ + "... " + ⵠΔⲆⵠΔ.substring(ⵠⵠᐃᐃΔ, 25))
			} else ⵠΔᐃ.text.push(ⵠΔⲆⵠΔ);
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃᐃⲆⵠᐃⲆⵠ[ⵠᐃⲆⲆⵠ].stringify([ⲆⵠⲆⲆⲆΔⲆ, ⵠΔⲆⵠΔ]))
		};
		this.ⵠᐃΔᐃᐃ = function(ⵠΔᐃ) {
			var ΔⲆⵠᐃ = ΔⲆⵠΔ.select.ⵠᐃⲆ;
			if (ΔⲆⵠᐃ.length == Ⲇᐃⵠᐃ) return;
			var ⲆⲆⲆΔ = [3];
			var ⵠΔⲆⵠⵠ = [];
			Ⲇᐃⵠ.ᐃᐃᐃⵠⲆΔΔ(ⵠΔᐃ, {
				x: ΔⲆⵠΔ.ⵠΔΔ.rx,
				y: ΔⲆⵠΔ.ⵠΔΔ.ry
			});
			ⲆⲆⲆΔ.push(ⵠΔᐃ.x);
			ⲆⲆⲆΔ.push(ⵠΔᐃ.y);
			for (var ᐃⲆ = ΔΔⵠᐃ; ΔⲆⵠᐃ.length > ᐃⲆ; ᐃⲆ++) ⵠΔⲆⵠⵠ.push(ΔⲆⵠᐃ[ᐃⲆ].ᐃΔΔⲆⵠᐃΔΔᐃ);
			ⲆⲆⲆΔ.push(ⵠΔⲆⵠⵠ);
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃⲆΔᐃⵠⲆⲆ[ⲆΔΔΔⲆΔᐃ].stringify(ⲆⲆⲆΔ))
		};
		this.ΔⵠΔⲆᐃⵠΔ = 0;
		this.ᐃΔⲆΔⵠΔⲆ = {
			"ᐃⲆ": ⵠⵠᐃⵠ,
			"ΔΔΔ": 0
		};
		this.ᐃᐃⵠⲆⵠᐃⵠⲆⵠ = function() {
			if (ᐃⲆΔⲆⲆ - this.ΔⵠΔⲆᐃⵠΔ > ᐃΔᐃᐃΔ.ᐃᐃᐃⵠᐃΔΔᐃΔ) {
				this.ΔⵠΔⲆᐃⵠΔ = ᐃⲆΔⲆⲆ;
				var ᐃΔⵠⲆ = ⲆΔⲆ.ⵠΔΔ;
				var ᐃⲆ = Math.floor(ᐃΔⵠⲆ.x / 100);
				var ΔΔΔ = Math.floor(ᐃΔⵠⲆ.y / ⵠΔᐃᐃⲆ);
				if (ᐃⲆ != this.ᐃΔⲆΔⵠΔⲆ.ᐃⲆ || this.ᐃΔⲆΔⵠΔⲆ.ΔΔΔ != ΔΔΔ) {
					this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⲆᐃⲆⵠⲆ[ΔⲆΔΔΔᐃⲆ].stringify([10, Math.floor(-ᐃΔⵠⲆ.x), Math.floor(-ᐃΔⵠⲆ.y)]));
					this.ᐃΔⲆΔⵠΔⲆ.ᐃⲆ = ᐃⲆ;
					this.ᐃΔⲆΔⵠΔⲆ.ΔΔΔ = ΔΔΔ
				}
			}
		};
		this.ΔⵠⲆΔⵠΔᐃ = 0;
		this.ⲆⵠᐃΔΔⵠΔᐃⵠ = function() {
			ᐃΔᐃᐃΔ.ΔΔⵠⵠⲆΔⲆⲆΔ < ᐃⲆΔⲆⲆ - this.ΔⵠⲆΔⵠΔᐃ && (this.ΔⵠⲆΔⵠΔᐃ = ᐃⲆΔⲆⲆ, this.ping())
		};
		this.ᐃᐃΔⲆⵠΔΔΔⲆ = function() {
			ⲆΔⲆ.reconnect.enabled = ⵠⲆΔⲆⵠ;
			if (this.ᐃⵠᐃⵠ.Δⵠⵠᐃᐃ != this.Δⵠⵠᐃᐃ) return;
			this.Δⵠⵠᐃᐃ++;
			this.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[375]]();
			ᐃΔᐃⵠ.connect()
		};
		this.ΔᐃⵠⲆⲆΔⲆⵠΔ = function(ⲆⲆⲆⲆ) {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⲆΔⵠⵠᐃⲆⲆ]);
			for (var ᐃⲆ = 1; ᐃⲆ < ⲆⲆⲆⲆ.length; ᐃⲆ++) ⲆΔⲆ.ΔⵠΔⵠΔ.push(ⲆⲆⲆⲆ[ᐃⲆ])
		};
		this.ⵠⵠΔⲆᐃΔᐃΔⲆ = function(ⲆΔ) {
			this.ⲆᐃⲆⵠΔ(ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ + ᐃΔΔ[ⵠⲆΔ.ᐃᐃⲆⵠᐃᐃⵠ]);
			ⲆΔⲆ.ΔⵠΔⵠΔ.push(ⲆΔ);
			var ΔⲆᐃⲆⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]);
			ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ != -1 && ΔⲆᐃⲆⲆ.style.display == ⵠ[489] && ⵠΔᐃⵠ.Ⲇᐃⵠᐃᐃ[ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ].action()
		};
		this.ᐃᐃᐃⲆΔΔᐃⵠⲆ = function() {
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔΔⵠⵠⲆ]);
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.wait = ⵠⵠⵠⵠΔⵠⲆ;
			ⲆΔⲆ.ΔⵠΔⵠΔ = [];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style.display = ⵠ[402]
		};
		this.ⵠᐃⵠⲆⵠΔΔΔΔ = function(ⲆΔ) {
			if (ⲆΔ == ⲆΔⲆ.id) {
				this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔⵠΔⲆⲆⲆⵠ]);
				ⲆΔⲆ.ⵠⲆⵠᐃⲆ.wait = ᐃⵠᐃⵠⲆ;
				ⲆΔⲆ.ΔⵠΔⵠΔ = [];
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style.display = ⵠ[402]
			} else {
				this.ⲆᐃⲆⵠΔ(ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔ].ᐃΔⲆᐃⵠ + ᐃΔΔ[ⵠⲆΔ.ᐃⲆᐃΔⵠΔⲆ]);
				for (var ᐃⲆ = ΔⲆⵠ; ᐃⲆ < ⲆΔⲆ.ΔⵠΔⵠΔ.length; ᐃⲆ++) {
					if (ⲆΔ == ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃⲆ]) {
						ⲆΔⲆ.ΔⵠΔⵠΔ.splice(ᐃⲆ, ⲆΔⵠⲆ);
						break
					}
				}
				var ΔⲆᐃⲆⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]); - 1 != ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ && ⵠ[489] == ΔⲆᐃⲆⲆ.style.display && ⵠΔᐃⵠ.Ⲇᐃⵠᐃᐃ[ⵠΔᐃⵠ.ᐃⲆΔᐃⲆ].action()
			}
		};
		this.ⵠΔᐃⵠⲆΔᐃⵠᐃ = function(ΔΔΔⵠ) {
			ⲆΔⲆ.ᐃᐃⲆΔΔ = ΔΔᐃⵠⵠ;
			currentlyPlaying = false;
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ΔⵠΔᐃⲆ]);
			if (this.Δⵠⵠᐃᐃ != this.ᐃⵠᐃⵠ.Δⵠⵠᐃᐃ) return;
			this.Δⵠⵠᐃᐃ++;
			ⵠΔᐃⵠ.ⲆⲆᐃΔᐃ(ᐃᐃΔΔ.ᐃΔⲆⲆΔ);
			this.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[375]]()
		};
		this.ⲆᐃⵠΔᐃᐃⵠⲆΔ = function(ⲆΔΔⵠⵠΔΔ, ⲆⲆⲆΔ) {
			ⲆΔⲆ.ᐃᐃⲆΔΔ = false;
			currentlyPlaying = false;
			var ᐃᐃⲆⵠᐃ = new Uint16Array(ⲆⲆⲆΔ);
			var ⲆⵠᐃΔᐃⵠᐃΔⵠ = new Uint32Array(ⲆⲆⲆΔ);
			ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⲆΔΔⵠⵠΔΔ = ᐃⲆΔⵠ[ⲆΔΔⵠⵠΔΔ][Math.floor(Math.random() * ᐃⲆΔⵠ[ⲆΔΔⵠⵠΔΔ].length)];
			ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⵠⲆⲆᐃᐃ = Ⲇᐃⵠ.ⵠΔⵠᐃⲆΔⲆ(ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.id].ⵠⲆⲆᐃᐃ);
			ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⲆⲆⲆⲆᐃᐃΔ = Ⲇᐃⵠ.ⵠΔⵠᐃⲆΔⲆ(ⲆⵠᐃΔᐃⵠᐃΔⵠ[ΔᐃⵠΔ]);
			ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ᐃᐃⲆⲆⲆΔⲆ = ᐃᐃⲆⵠᐃ[ᐃⵠ];
			this.ⲆᐃⲆⵠΔ(ᐃΔΔ[ⵠⲆΔ.ⵠᐃᐃⲆⵠⲆΔ]);
			if (this.ᐃⵠᐃⵠ.Δⵠⵠᐃᐃ != this.Δⵠⵠᐃᐃ) return;
			this.Δⵠⵠᐃᐃ++;
			Settings.AutoRespawn.enabled || ⵠΔᐃⵠ.ⲆⲆᐃΔᐃ(ΔⲆΔⵠⲆᐃᐃ.ᐃΔⲆⲆΔ);
			this.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[375]]();
			Settings.AutoRespawn.enabled && ᐃΔᐃⵠ.connect()
		};
		this.ping = function() {
			this.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃΔᐃᐃΔ.ⲆᐃΔⵠⵠᐃⲆᐃⵠ)
		};
		this.ⲆⵠᐃⵠⲆΔⵠΔΔ = function() {
			ᐃᐃⵠᐃ == this.ᐃⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[103]] && (this.ⵠⵠᐃΔᐃⲆᐃ -= ᐃΔᐃᐃΔ.ᐃΔᐃⲆⵠᐃⲆ)
		};
		this.ⲆΔᐃᐃᐃⲆΔᐃᐃ = function() {
			ᐃΔᐃᐃΔ.ⵠⵠⲆᐃⲆⲆᐃⵠᐃ < ᐃᐃΔⲆ && (this.ⵠⵠᐃΔᐃⲆᐃ = ᐃⲆΔⲆⲆ);
			ᐃⲆΔⲆⲆ - this.ⵠⵠᐃΔᐃⲆᐃ > ᐃΔᐃᐃΔ.ᐃΔᐃⲆⵠᐃⲆ && (this.ⵠⵠᐃΔᐃⲆᐃ = ᐃⲆΔⲆⲆ, this.ᐃᐃΔⲆⵠΔΔΔⲆ())
		};
		this.ⲆⵠⲆΔⵠᐃⲆᐃᐃ = function(ᐃⲆΔΔ) {
			ⵠⲆⲆᐃΔⵠΔ++;
			clearTimeout(this.ⵠΔΔΔⵠ);
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("commandMainBoxName")[ⲆⵠΔᐃᐃᐃΔ[359]] = this.ΔⵠⵠᐃΔ[this.ⵠΔⲆΔⲆ][this.ΔⵠⲆⲆⲆΔᐃ[this.ⵠΔⲆΔⲆ]]["a"];
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreForest").src = "img/forest-leaf.png";
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreWinter").src = "img/winter-flake.png";
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreDesert").src = "img/desert-cactus.png";
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("exploreLava").src = "img/lava-volcano.png";
			this.ⵠⵠᐃΔᐃⲆᐃ = ᐃⲆΔⲆⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.ΔᐃⲆᐃⲆ = ⲆΔⲆ.ΔΔⵠⲆ.ⵠⵠⲆᐃⵠ.ⵠΔⲆⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ᐃᐃΔᐃⲆΔΔ.ΔᐃⲆᐃⲆ = ⲆΔⲆ.ΔΔⵠⲆ.ᐃᐃΔᐃⲆΔΔ.ⵠΔⲆⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃΔΔⲆⲆΔ.ΔᐃⲆᐃⲆ = ⲆΔⲆ.ΔΔⵠⲆ.ⲆᐃΔΔⲆⲆΔ.ⵠΔⲆⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.ΔᐃⲆᐃⲆ = ⲆΔⲆ.ΔΔⵠⲆ.ΔⲆⵠΔΔᐃⵠ.ⵠΔⲆⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠΔⵠ.ΔᐃⲆᐃⲆ = ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⵠΔⵠ.ⵠΔⲆⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⲆⲆᐃ = ⲆΔⵠⲆ;
			ⲆΔⲆ.ΔΔⵠⲆ.c = 1;
			ⲆΔⲆ.ΔΔⵠⲆ.ΔᐃⲆ = 1;
			ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆⵠ = 1;
			ⲆΔⲆ.ΔΔⵠⲆ.ⵠⲆⵠ = 1;
			ⲆΔⲆ.ΔΔⵠⲆ.ⲆⵠⲆⵠᐃΔΔ = 1;
			ⲆΔⲆ.ⲆΔᐃᐃᐃⵠⵠ = false;
			ⵠΔᐃⵠ.ΔΔΔⵠⲆ.display = 0;
			ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ = [];
			ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ = [];
			ⲆΔⲆ.ⵠΔᐃᐃ.max = ⲆⵠΔΔ.ⵠΔⲆᐃⵠΔⵠ;
			ⲆΔⲆ.ⵠΔᐃᐃ.ⵠⵠΔΔΔⵠᐃ = Ⲇᐃⵠᐃ;
			ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⵠⵠⲆ = 0;
			ⲆΔⲆ.ⵠΔᐃᐃ.id = -ⲆΔⵠⲆ;
			ⵠΔᐃⵠ.ⵠⵠⲆᐃⵠⵠⵠ = 1;
			ⵠΔᐃⵠ.ΔⲆⲆⲆⲆⲆⲆ = ⲆᐃⲆⲆ;
			ⵠΔᐃⵠ.ΔΔΔⵠⲆΔΔ = ΔΔᐃᐃ;
			ⵠΔᐃⵠ.ⵠⲆᐃⵠΔⵠⵠ = 1;
			ⲆΔⲆ.ᐃᐃⲆΔΔ = ⵠⲆᐃⲆᐃ;
			currentlyPlaying = true;
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.stop();
			ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ = [];
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆⲆⲆ = ᐃⵠⲆΔⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⵠⲆᐃⲆΔΔΔΔ = ΔⲆⵠᐃⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ = -ᐃⵠ;
			ⲆΔⲆ.ᐃΔⵠΔ.id = -ᐃᐃΔᐃ;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃΔⵠⲆⲆ = ⲆⵠᐃΔΔ;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃⲆΔⲆᐃ = ΔⲆᐃⲆΔ;
			ⲆΔⲆ.ᐃΔⵠΔ.ᐃᐃⵠⲆΔ = ΔᐃⲆⵠⲆ;
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆΔΔΔⲆ = ⲆⲆⲆᐃⲆ;
			ⲆΔⲆ.ᐃΔⵠΔ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃΔⵠⵠ, 1, 0, ᐃⵠ, 1);
			ⲆΔⲆ.ⲆΔⵠᐃΔ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, 1, ⵠⵠᐃⵠ, 1 / Ⲇⵠᐃⵠᐃ, ΔᐃⵠΔ);
			ⲆΔⲆ.ⲆΔⵠᐃΔ.wait = false;
			ⲆΔⲆ.ⵠΔᐃⲆΔ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, 1, ΔΔⲆᐃ, ᐃⵠ / 5, 1);
			ⲆΔⲆ.ⵠΔᐃⲆΔ.wait = false;
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, 0, 1, 0, 1, ⵠⵠⲆ);
			ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait = false;
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.id = -1;
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.ΔΔΔⵠ = -1;
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.wait = ΔⲆᐃⲆΔ;
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.timeout = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⲆⲆΔΔ, 0, ΔᐃⵠΔ, 0, 1 / 30, 1);
			ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.x = -ⲆⲆΔᐃ;
			ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ⲆᐃᐃⲆⲆ.y = -ᐃⵠⵠ;
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⲆⲆΔΔ;
			ⵠΔᐃⵠ.ⲆᐃⵠⵠⲆ.ᐃⵠⵠΔ = [];
			ⲆΔⲆ.ⵠⵠⵠⲆΔ.enabled = ᐃⵠⲆΔⵠ;
			ⲆΔΔ.mode = ᐃⲆΔΔ[ⲆᐃⲆⲆ];
			if (ⲆⵠᐃΔⲆ !== ᐃⲆΔΔ[20] && ᐃⲆΔΔ[21] !== ᐃⲆⵠⲆⵠ) {
				ⲆΔΔ.Δᐃᐃⵠⵠ = ᐃⲆΔΔ[20];
				ⲆΔΔ.ΔⲆᐃⵠⵠ = ᐃⲆΔΔ[21];
				ⲆΔΔ.w = ⲆΔΔ.ᐃⲆΔΔⵠⲆΔ * ⲆΔΔ.Δᐃᐃⵠⵠ;
				ⲆΔΔ.ΔᐃⲆ = ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ * ⲆΔΔ.ΔⲆᐃⵠⵠ
			}
			ⲆΔΔ.ΔⵠⲆᐃⲆⵠΔ = ᐃⲆΔΔ[22];
			ⲆΔΔ.ᐃⵠⵠΔΔ = ᐃⲆΔΔ[23];
			Ⲇⵠᐃ.ᐃΔⲆᐃⵠⵠⲆ(ᐃⲆΔΔ[24]);
			Ⲇⵠᐃ.ᐃⵠᐃᐃⵠⵠⵠⵠⵠ(ᐃⲆΔΔ[25]);
			ⲆΔⲆ.ΔΔⵠᐃΔ.ⵠᐃⲆⵠⵠ = ᐃⲆΔΔ[26];
			ⲆΔⲆ.ΔΔᐃⵠᐃᐃⲆ = ⲆΔᐃ;
			ⲆΔⲆ.ΔⵠᐃⵠⲆ.ⵠᐃⲆⵠⵠ = ᐃⲆΔΔ[27];
			ⲆΔΔ.ᐃⵠⵠᐃⲆⲆⵠⵠⲆ(ᐃⲆΔΔ[19]);
			ⲆΔΔ.time = ᐃⲆΔΔ[5];
			ⲆΔΔ.ΔᐃⲆᐃᐃ.ⲆⲆⲆⲆᐃ = ᐃⲆΔΔ[ⲆⲆⲆⲆⵠΔⵠ];
			ⲆΔΔ.ΔᐃⲆᐃᐃ.ⲆΔⲆΔΔ = (new Date).getTime();
			ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ΔΔⵠⲆΔⵠⵠ = ᐃⲆΔΔ[16];
			ⲆΔΔ.transition = ΔᐃΔΔΔ;
			ⲆΔⲆ.ⲆⲆΔ = ᐃⲆΔΔ[2];
			ⵠΔᐃⵠ.ⵠⵠᐃⲆ.reset();
			ⲆΔⲆ.ΔⵠΔⵠΔ = ᐃⲆΔΔ[8];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃΔⵠΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆⵠΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⲆᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠΔⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⲆΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃᐃΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃⲆᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠⵠⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔΔᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃᐃⲆⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃΔᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃⲆⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔΔΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Δᐃⵠⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Δⵠⵠᐃⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⵠⲆΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔᐃΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆᐃⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃⲆⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠᐃΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆΔⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⲆⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⵠΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.Ⲇᐃᐃᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⲆⵠⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆΔⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆᐃᐃⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃΔⲆᐃⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆᐃᐃⲆΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔᐃⵠⵠΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔΔᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆΔᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⵠᐃΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⵠⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆⵠᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆᐃⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆᐃΔⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃΔⲆΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠⲆⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃΔⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃΔ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃⲆⵠ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ] = [];
			ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ] = [];
			ⲆΔΔ.ΔⲆΔⵠΔ = [];
			ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ = ᐃⲆΔΔ[ⲆⵠΔΔⵠ];
			ⲆΔⲆ.id = ᐃⲆΔΔ[ᐃⵠⵠΔΔΔⲆ];
			ⲆΔⲆ.ⲆⲆᐃΔ = ⲆΔⲆ.id * ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ;
			ⵠΔᐃΔ.loaded && (ⵠΔᐃΔ.ᐃⵠⵠΔ[ΔⵠⲆΔ].ⲆⲆᐃΔ = ⲆΔⲆ.ⲆⲆᐃΔ, ⵠΔᐃΔ.ᐃⵠⵠΔ[ⲆⲆⲆ].ᐃᐃΔΔⲆⵠⲆ = ΔⵠⲆΔ);
			ⵠΔⵠᐃᐃ.ᐃᐃΔΔⲆⲆⲆ();
			ⲆΔⲆ.ⵠΔΔ.ⲆᐃΔᐃΔ(ᐃⲆΔΔ[3], ᐃⲆΔΔ[10]);
			ⲆΔΔ.ᐃⵠⵠΔ = [];
			var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
			for (var ᐃⲆ = ΔⵠⲆⲆ; ᐃⲆ < ᐃⲆΔΔ[ΔΔΔΔⵠ]; ᐃⲆ++) ᐃⵠⵠΔ.push(new ᐃⲆᐃⵠⵠΔᐃᐃᐃ);
			for (var ᐃⲆ = 0, ⲆⲆⲆᐃ = ᐃⲆΔΔ[ⵠΔΔᐃ]; ᐃⲆ < ⲆⲆⲆᐃ.length; ᐃⲆ++) {
				var ⵠΔᐃ = ᐃⵠⵠΔ[ⲆⲆⲆᐃ[ᐃⲆ]["i"]];
				ⵠΔᐃ.ᐃΔⲆᐃⵠ = ⲆⲆⲆᐃ[ᐃⲆ]["n"];
				ⵠΔᐃ.ᐃᐃᐃΔ = ⲆⲆⲆᐃ[ᐃⲆ]["s"];
				ⵠΔᐃ.ᐃᐃᐃⲆⵠ = ⲆⲆⲆᐃ[ᐃⲆ]["a"];
				ⵠΔᐃ.ΔᐃⲆⲆⲆ = ⲆⲆⲆᐃ[ᐃⲆ]["c"];
				ⵠΔᐃ.ⲆΔⵠⲆⵠ = ⲆⲆⲆᐃ[ᐃⲆ]["b"];
				ⵠΔᐃ.ⲆⵠᐃΔⵠ = ⲆⲆⲆᐃ[ᐃⲆ]["d"];
				ⵠΔᐃ.ΔⲆΔⵠⲆΔᐃ = ⲆⲆⲆᐃ[ᐃⲆ]["g"];
				ⵠΔᐃ.level = ⲆⲆⲆᐃ[ᐃⲆ]["l"];
				ⵠΔᐃ.ⵠⲆⲆᐃᐃ = Ⲇᐃⵠ.ᐃΔⵠΔⵠᐃΔ(ⲆⲆⲆᐃ[ᐃⲆ]["p"]);
				ⵠΔᐃ.ᐃᐃⲆΔΔ = ΔΔⲆⲆⲆ;
				if (ⵠⲆⵠᐃⵠᐃⵠ === 1) ⵠΔᐃ.ᐃΔⲆᐃⵠ += "|" + ⲆⲆⲆᐃ[ᐃⲆ]["i"]
			}
			ⲆΔⲆ.ⲆⵠⲆᐃⲆ.sort();
			ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ === ⲆΔΔ.mode && ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.id].ᐃΔⲆᐃⵠ === ⵠ[211] ? ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ = ΔⲆΔΔⵠ : ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ = false;
			ⲆⵠΔΔ.ᐃᐃΔᐃⲆ === ⲆΔΔ.mode && ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.id].ᐃᐃᐃΔ === ⲆⵠΔΔ.ΔΔⵠᐃΔᐃⲆ ? ⲆΔⲆ.ΔⵠⲆΔΔ = true : ⲆΔⲆ.ΔⵠⲆΔΔ = false;
			if (ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ && ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.id].ᐃᐃᐃΔ === ⲆⵠΔΔ.ᐃᐃΔⵠΔⵠᐃ) ⲆΔⲆ.ⵠⲆⲆⵠᐃᐃᐃ = ⲆΔⲆΔᐃ;
			else ⲆΔⲆ.ⵠⲆⲆⵠᐃᐃᐃ = false;
			ⲆΔΔᐃ.set("starve_token", ⲆΔⲆ.ⵠΔᐃⵠⲆ);
			if (0 === ᐃⲆΔΔ[ⲆΔᐃᐃⲆ]) {
				ⲆΔⲆ.ⲆᐃⵠΔⵠ.ᐃᐃΔⲆΔ = Δⵠⵠ;
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.restore(ᐃⲆΔΔ[17]);
				var ⵠΔᐃᐃ = ᐃⲆΔΔ[14];
				ⵠΔᐃᐃ[ⵠⲆ.ⵠΔΔⵠ] && ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⲆⲆⵠΔΔ(ⵠᐃΔᐃ, 0);
				for (var ᐃⲆ = ΔⵠⲆⲆ; ⵠΔᐃᐃ.length > ᐃⲆ; ᐃⲆ++) {
					if (ⵠΔᐃᐃ[ᐃⲆ]) {
						if (ⵠⲆ.ⵠΔΔⵠ == ᐃⲆ) continue;
						else if (ᐃⲆ == ⵠⲆ.ΔΔᐃⵠᐃ) continue;
						else this.ΔᐃⲆᐃⵠⲆᐃ([0, ᐃⲆ, ⵠΔᐃᐃ[ᐃⲆ]])
					}
				}
				ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
			} else {
				if (ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔⲆⵠⵠ) this.ΔᐃⲆᐃⵠⲆᐃ([0, ⵠⲆ.ᐃⲆΔⵠᐃ, 1]);
				else if (ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ === ⲆΔΔ.mode) {
					ⲆΔⲆ.ⵠⲆⲆⵠᐃᐃᐃ ? this.ΔᐃⲆᐃⵠⲆᐃ([ᐃⵠΔ, ⵠⲆ.ⵠΔⲆᐃⵠ, Δⵠⵠⵠ]) : this.ΔᐃⲆᐃⵠⲆᐃ([ⵠⵠᐃⵠ, ⵠⲆ.ⵠⵠΔⵠᐃ, Δᐃᐃᐃ])
				}
				ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ === ⲆΔΔ.mode || ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ === ⲆΔΔ.mode || ⲆⵠΔΔ.ᐃΔΔⵠΔ === ⲆΔΔ.mode || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔⲆⵠⵠ ? (ⲆΔⲆ.ⲆᐃⵠΔⵠ.ᐃᐃΔⲆΔ = (new Date).getTime(), ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = true, ⲆΔⲆ.ⲆᐃⵠΔⵠ.value = ᐃⲆΔΔ[Ⲇⵠⵠⵠᐃ], ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆΔⲆΔΔ()) : (ⲆΔⲆ.ⲆᐃⵠΔⵠ.ᐃᐃΔⲆΔ = 0, ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔⵠⵠΔⲆ, ⲆΔⲆ.ⲆᐃⵠΔⵠ.value = 0);
				ⲆΔⲆ.ᐃΔᐃⲆΔᐃⲆ = ᐃⲆΔΔ[12][ⲆⵠΔᐃᐃᐃΔ[274]]()
			}
			Timers.HealTimer = (new Date).getTime();
			Timers.GaugeTimer = (new Date).getTime();
			ⲆΔⲆ.ΔΔᐃⲆΔ.enabled = ᐃⲆΔΔ[ⵠΔⵠⵠⲆ];
			ⲆΔⲆ.ΔΔᐃⲆΔ.ᐃᐃΔⲆΔ = -ΔΔⲆΔ;
			ⲆΔⲆ.ΔΔᐃⲆΔ.label = null;
			ⲆΔⲆ.ΔΔᐃⲆΔ.now = -ΔΔⵠΔⵠ;
			ⲆΔΔᐃ.set("starve_token_id", ⲆΔⲆ.ᐃΔᐃⲆΔᐃⲆ);
			if (ⲆΔⲆ.reconnect.enabled) {
				ⲆΔⲆ.reconnect.rotate = ⲆⵠⲆ;
				ⲆΔⲆ.reconnect.enabled = Ⲇᐃⵠⵠᐃ
			} else {
				ᐃᐃΔΔ.ⲆⲆᐃΔᐃ(ⵠΔᐃⵠ.ᐃΔⲆⲆΔ);
				ga && ga(ⵠ[109], ⵠ[99], ⵠ[238], ⵠ[344], "S" + ᐃᐃΔΔ.ᐃᐃᐃΔ + "A" + ᐃᐃΔΔ.ᐃᐃᐃⲆⵠ)
			}
		};
		this.connect = function() {
			Ⲇⵠᐃ.ΔᐃⲆⲆᐃΔΔ = 0;
			Ⲇⵠᐃ.ΔᐃΔⲆⵠΔᐃ()
		};
		this.ᐃΔᐃⲆⵠᐃΔ = [];
		this.ΔⲆΔⵠᐃⵠⲆⵠⲆ = function(ΔΔΔⲆⵠⲆⲆ) {
			const ΔⲆⵠⵠΔ = Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.filter((ᐃᐃΔ => ᐃᐃΔ[ⵠ[10]] === ΔΔΔⲆⵠⲆⲆ));
			const regions = {};
			for (let ᐃⲆ = ⲆΔᐃ; ΔⲆⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) {
				const ᐃⲆᐃⲆᐃ = ΔⲆⵠⵠΔ[ᐃⲆ];
				const ⵠΔᐃᐃᐃ = ᐃⲆᐃⲆᐃ["r"];
				if (ⵠΔᐃᐃᐃ === ⲆⵠᐃΔⲆ) continue;
				ⵠᐃΔᐃΔ === regions[ⵠΔᐃᐃᐃ] && (regions[ⵠΔᐃᐃᐃ] = []);
				regions[ⵠΔᐃᐃᐃ].push(ᐃⲆᐃⲆᐃ)
			}

			function ΔⵠΔᐃᐃⵠᐃ(ⵠΔᐃᐃᐃ) {
				Ⲇⵠᐃ.ᐃΔᐃⲆⵠᐃΔ[ΔΔΔⲆⵠⲆⲆ] = ⵠΔᐃᐃᐃ;
				const ΔⲆⵠⵠΔ = regions[ⵠΔᐃᐃᐃ];
				const ᐃⲆᐃⲆᐃ = ΔⲆⵠⵠΔ[Math.floor(Math.random() * ΔⲆⵠⵠΔ.length)];
				Ⲇⵠᐃ.ⲆΔⲆⲆΔᐃⵠ({
					domain: Ⲇᐃⵠᐃⵠⵠⵠ,
					is_tls: ΔⲆᐃ,
					id: ᐃⲆᐃⲆᐃ[ⵠ[442]],
					p: ᐃⲆᐃⲆᐃ["p"]
				})
			}
			if (undefined !== Ⲇⵠᐃ.ᐃΔᐃⲆⵠᐃΔ[ΔΔΔⲆⵠⲆⲆ]) {
				ΔⵠΔᐃᐃⵠᐃ(Ⲇⵠᐃ.ᐃΔᐃⲆⵠᐃΔ[ΔΔΔⲆⵠⲆⲆ]);
				return
			}
			let ΔᐃΔᐃⵠΔΔ = 1;

			function ΔⵠⵠΔᐃⵠⵠ(ΔⲆⵠⵠΔ) {
				const ⲆⵠᐃΔⲆⵠᐃ = new ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[45]];
				const ᐃⲆᐃⲆᐃ = ΔⲆⵠⵠΔ[ⵠᐃⲆᐃ];
				const ᐃᐃᐃᐃⲆⲆⲆ = ᐃⲆᐃⲆᐃ["p"];
				const ⵠΔᐃᐃᐃ = ᐃⲆᐃⲆᐃ["r"];
				const ⲆΔΔⵠⵠⵠᐃ = ᐃᐃᐃᐃⲆⲆⲆ[Math.floor(Math.random() * ᐃᐃᐃᐃⲆⲆⲆ.length)];
				ⲆⵠᐃΔⲆⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], "https://" + ⲆΔΔⵠⵠⵠᐃ + "." + Ⲇᐃⵠᐃⵠⵠⵠ + "/", ⵠⵠⵠⵠΔⵠⲆ);
				ⲆⵠᐃΔⲆⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
					if (ⲆⵠᐃΔⲆⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[103]] === ᐃΔᐃⲆⵠ) {
						if (ΔᐃΔᐃⵠΔΔ === ΔΔⵠᐃ) return;
						ΔᐃΔᐃⵠΔΔ = 0;
						ΔⵠΔᐃᐃⵠᐃ(ⵠΔᐃᐃᐃ)
					}
				};
				ⲆⵠᐃΔⲆⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[226]]()
			}

			function ᐃᐃᐃᐃᐃΔⲆᐃⲆ() {
				if (ΔᐃΔᐃⵠΔΔ === ⵠᐃⲆᐃ) return;
				ΔᐃΔᐃⵠΔΔ = 0;
				const ⲆᐃⵠΔΔ = ⲆⲆⲆⲆᐃᐃᐃ.Object.keys(regions);
				const ⲆⲆⵠⵠⲆⵠⵠ = Math.floor(Math.random() * ⲆᐃⵠΔΔ.length);
				const ⵠΔⵠᐃⲆ = ⲆᐃⵠΔΔ[ⲆⲆⵠⵠⲆⵠⵠ];
				ΔⵠΔᐃᐃⵠᐃ(ⵠΔⵠᐃⲆ)
			}
			for (let ⵠΔᐃᐃᐃ in regions) {
				const ΔⲆⵠⵠΔ = regions[ⵠΔᐃᐃᐃ];
				ΔⵠⵠΔᐃⵠⵠ(ΔⲆⵠⵠΔ)
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃᐃᐃᐃᐃΔⲆᐃⲆ, 5e3)
		};
		this.ΔⲆΔΔΔⲆΔᐃⵠ = function() {
			let ΔΔΔⲆⵠⲆⲆ = ⲆⵠΔΔ.ⵠᐃΔΔΔΔⵠ[Ⲇⵠᐃ.ⵠΔⲆΔⲆ];
			console.log(undefined, undefined, undefined);
			let ⲆⲆⵠⵠΔΔⲆᐃΔ = Ⲇⵠᐃ.ΔⵠⲆⲆⲆΔᐃ[Ⲇⵠᐃ.ⵠΔⲆΔⲆ];
			let ⵠⵠΔⵠΔΔΔ = Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.find((ᐃᐃΔ => ᐃᐃΔ[ⵠ[ⲆⵠⲆⵠᐃ]] == ΔΔΔⲆⵠⲆⲆ && ᐃᐃΔ["idx"] == ⲆⲆⵠⵠΔΔⲆᐃΔ));
			if (ⵠⵠΔⵠΔΔΔ === undefined) Ⲇⵠᐃ.ΔⲆΔⵠᐃⵠⲆⵠⲆ(ΔΔΔⲆⵠⲆⲆ);
			else Ⲇⵠᐃ.ⲆΔⲆⲆΔᐃⵠ({
				domain: Ⲇᐃⵠᐃⵠⵠⵠ,
				is_tls: ΔΔᐃᐃ,
				id: ⵠⵠΔⵠΔΔΔ[ⵠ[442]],
				p: ⵠⵠΔⵠΔΔΔ["p"]
			})
		};
		this.ΔᐃΔⲆⵠΔᐃ = function() {
			console.log(undefined);
			if (undefined !== ᐃⵠΔⲆⵠΔᐃ && ⲆⵠⲆᐃⵠΔΔ !== ⵠΔⵠΔⵠ) {
				console.log(undefined, undefined, undefined);
				Ⲇⵠᐃ.ⲆΔⲆⲆΔᐃⵠ({
					domain: Ⲇᐃⵠᐃⵠⵠⵠ,
					is_tls: 1,
					id: ⲆⵠⲆᐃⵠΔΔ + ᐃⵠΔⲆⵠΔᐃ,
					p: Ⲇⵠᐃ.ⵠⵠᐃΔⵠⲆᐃ[ⲆⵠⲆᐃⵠΔΔ]
				});
				return
			}
			if (ᐃᐃΔⲆⲆ !== ⵠΔΔⲆᐃ) {
				Ⲇⵠᐃ.ⲆΔⲆⲆΔᐃⵠ({
					domain: ⵠΔΔⲆᐃ["domain"],
					is_tls: ⵠΔΔⲆᐃ["ssl"],
					id: ⵠΔΔⲆᐃ[ⵠ[442]],
					p: [ⵠΔΔⲆᐃ["p"]]
				});
				return
			}
			Ⲇⵠᐃ.ΔⲆΔΔΔⲆΔᐃⵠ()
		};
		this.ⲆΔⲆⲆΔᐃⵠ = function(ⵠⵠⵠᐃⵠⵠᐃ) {
			let ⵠⲆΔⵠΔᐃᐃ = ⵠⵠⵠᐃⵠⵠᐃ["domain"];
			let ⲆⵠΔΔⵠΔⵠⵠΔ = ⵠⵠⵠᐃⵠⵠᐃ["is_tls"];
			let ᐃⲆⵠⵠΔⵠΔᐃᐃ = ⵠⵠⵠᐃⵠⵠᐃ[ⵠ[442]];
			let ᐃᐃᐃᐃⲆⲆⲆ = ⵠⵠⵠᐃⵠⵠᐃ["p"];
			let ⲆΔΔⵠⵠⵠᐃ = ᐃᐃᐃᐃⲆⲆⲆ[Math.floor(Math.random() * ᐃᐃᐃᐃⲆⲆⲆ.length)];
			let ⲆΔᐃᐃΔⵠⵠᐃᐃ = ⲆⵠΔΔⵠΔⵠⵠΔ ? "wss://" + ⲆΔΔⵠⵠⵠᐃ + "." + ⵠⲆΔⵠΔᐃᐃ + "/" + ᐃⲆⵠⵠΔⵠΔᐃᐃ : "ws://" + ⵠⲆΔⵠΔᐃᐃ;
			console.log(undefined, undefined);
			Ⲇⵠᐃ.ᐃⵠᐃⵠ = new ⲆⲆⲆⲆᐃᐃᐃ.WebSocket(ⲆΔᐃᐃΔⵠⵠᐃᐃ);
			Ⲇⵠᐃ.ᐃⵠᐃⵠ["binaryType"] = "arraybuffer";
			Ⲇⵠᐃ.ᐃⵠᐃⵠ.Δⵠⵠᐃᐃ = Ⲇⵠᐃ.Δⵠⵠᐃᐃ;
			Ⲇⵠᐃ.ᐃⵠᐃⵠ.onmessage = function(ⵠᐃᐃΔ) {
				if (Ⲇⵠᐃ.Δⵠⵠᐃᐃ != Ⲇⵠᐃ.Δⵠⵠᐃᐃ) return;
				if (typeof ⵠᐃᐃΔ.data == ⵠ[348]) {
					var ᐃⲆΔΔ = JSON.parse(ⵠᐃᐃΔ.data);
					switch (ᐃⲆΔΔ[ⵠᐃⲆᐃ]) {
						case ⲆⲆⲆ:
							Ⲇⵠᐃ.ᐃΔᐃᐃᐃ(ᐃⲆΔΔ);
							break;
						case ᐃⲆⵠΔ:
							Ⲇⵠᐃ.ᐃᐃⲆᐃΔⵠΔ(ᐃⲆΔΔ[1]);
							break;
						case ⵠⵠΔⲆ:
							Ⲇⵠᐃ.ⵠΔᐃΔᐃⵠⲆΔⲆ(ᐃⲆΔΔ);
							break;
						case ⵠⵠⲆⵠ:
							Ⲇⵠᐃ.ⲆⵠⲆΔⵠᐃⲆᐃᐃ(ᐃⲆΔΔ);
							break;
						case 4:
							Ⲇⵠᐃ.message(ᐃⲆΔΔ[1]);
							break;
						case 5:
							Ⲇⵠᐃ.ᐃᐃᐃᐃⵠⵠⲆ(ᐃⲆΔΔ);
							break;
						case 6:
							Ⲇⵠᐃ.ᐃΔⲆᐃⵠⵠⲆ(ᐃⲆΔΔ[ⵠⵠⲆ]);
							break
					}
				} else {
					var ⲆⲆⲆⲆ = ΔΔΔᐃΔⵠΔⵠᐃ(ⵠᐃᐃΔ.data, ⲆΔⲆ.ΔΔⵠⲆⵠᐃⵠ, ⲆΔⲆ.ΔⵠⲆⵠⵠⲆⲆᐃΔ);
					var ⵠᐃΔΔᐃⲆⲆ = ⲆⲆⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[258]];
					switch (ⲆⲆⲆⲆ[0]) {
						case ⵠⵠᐃᐃΔ:
							Ⲇⵠᐃ.ⵠᐃⲆ(ⵠᐃΔΔᐃⲆⲆ, ⲆⲆⲆⲆ, ΔᐃΔΔΔ);
							break;
						case ΔΔⵠΔⵠ:
							Ⲇⵠᐃ.ⵠᐃⲆ(ⵠᐃΔΔᐃⲆⲆ, ⲆⲆⲆⲆ, ⵠⵠⵠⵠΔⵠⲆ);
							break;
						case 2:
							Ⲇⵠᐃ.ⵠⲆᐃⲆᐃⵠᐃⵠⲆ();
							break;
						case 3:
							Ⲇⵠᐃ.ΔᐃⲆᐃⵠⲆᐃ(new Uint16Array(ⵠᐃΔΔᐃⲆⲆ));
							break;
						case 4:
							Ⲇⵠᐃ.ⲆⵠⵠΔⵠⵠⲆΔᐃ();
							break;
						case 5:
							Ⲇⵠᐃ.ⵠⵠΔⲆᐃⲆᐃΔᐃ();
							break;
						case ⲆΔᐃⵠᐃ:
							Ⲇⵠᐃ.ᐃΔⵠⵠΔΔⲆⲆΔ();
							break;
						case 7:
							Ⲇⵠᐃ.ⲆᐃⵠⲆⲆⲆᐃⲆⲆ(ⵠᐃΔΔᐃⲆⲆ);
							break;
						case 8:
							Ⲇⵠᐃ.ⵠΔᐃⵠΔΔᐃᐃⲆ(ⲆⲆⲆⲆ[ⵠⲆⲆ]);
							break;
						case ᐃᐃⲆⲆⲆ:
							Ⲇⵠᐃ.ΔⵠⲆᐃⲆΔⲆᐃΔ(ⲆⲆⲆⲆ[ΔΔⲆΔ]);
							break;
						case 10:
							Ⲇⵠᐃ.ΔᐃΔΔⵠᐃⲆ();
							break;
						case Δᐃᐃᐃᐃᐃᐃ:
							Ⲇⵠᐃ.ⲆⵠΔⵠᐃⲆᐃ(ⲆⲆⲆⲆ[1], ⲆⲆⲆⲆ[2]);
							break;
						case 12:
							Ⲇⵠᐃ.ᐃΔⵠⲆⲆ(ⲆⲆⲆⲆ[1]);
							break;
						case 13:
							Ⲇⵠᐃ.ᐃⲆⲆΔⲆⲆΔⲆⲆ(ⲆⲆⲆⲆ, ⵠᐃΔΔᐃⲆⲆ);
							break;
						case ᐃⲆⲆⵠΔⵠᐃ:
							Ⲇⵠᐃ.ⵠᐃⲆⵠΔⵠⲆ();
							break;
						case ᐃΔⵠⲆΔ:
							Ⲇⵠᐃ.ᐃᐃᐃᐃΔⲆΔⲆᐃ(ⲆⲆⲆⲆ[1]);
							break;
						case ⲆⵠⵠⲆᐃⵠᐃ:
							Ⲇⵠᐃ.ΔΔⵠⲆ(ⲆⲆⲆⲆ[ⲆΔᐃⲆ], ⲆⲆⲆⲆ[2], ⲆⲆⲆⲆ[ⵠⲆⵠⵠ], ⲆⲆⲆⲆ[4], ⲆⲆⲆⲆ[ⲆΔⵠᐃ], ⲆⲆⲆⲆ[6], ⲆⲆⲆⲆ[7]);
							break;
						case ⲆᐃᐃⵠΔΔⵠ:
							Ⲇⵠᐃ.ΔᐃᐃΔⲆΔΔⲆΔ(ⵠᐃΔΔᐃⲆⲆ);
							break;
						case ΔᐃΔⵠⲆ:
							Ⲇⵠᐃ.ᐃΔΔⵠⲆΔᐃΔⵠ();
							break;
						case ⲆⲆᐃΔᐃⵠⲆ:
							Ⲇⵠᐃ.ᐃᐃⵠⲆΔ(ⲆⲆⲆⲆ[ᐃⵠ]);
							break;
						case 20:
							Ⲇⵠᐃ.ⲆΔΔᐃⵠⲆᐃᐃᐃ();
							break;
						case 21:
							Ⲇⵠᐃ.ⲆⲆΔⵠⲆ(ⵠᐃΔΔᐃⲆⲆ);
							break;
						case 22:
							Ⲇⵠᐃ.ⵠⲆⲆⲆΔⲆᐃᐃⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 23:
							Ⲇⵠᐃ.ⲆᐃⵠⲆⵠⵠΔΔⵠ(ⵠᐃΔΔᐃⲆⲆ);
							break;
						case 24:
							Ⲇⵠᐃ.ⵠⲆΔⵠᐃⵠⵠΔᐃ(ⲆⲆⲆⲆ[ΔᐃⵠΔ]);
							break;
						case 25:
							Ⲇⵠᐃ.ⲆᐃⵠΔᐃᐃⵠⲆΔ(ⲆⲆⲆⲆ[ⵠⵠⲆΔ], ⵠᐃΔΔᐃⲆⲆ);
							break;
						case 26:
							Ⲇⵠᐃ.ⲆᐃⵠⵠⲆ(ⲆⲆⲆⲆ);
							break;
						case 27:
							Ⲇⵠᐃ.ΔᐃΔⲆⵠⲆⲆᐃᐃ();
							break;
						case 28:
							Ⲇⵠᐃ.ΔΔᐃⲆΔ(ⲆⲆⲆⲆ[ᐃⵠ]);
							break;
						case 29:
							Ⲇⵠᐃ.ⵠⵠⵠⵠΔᐃⵠⵠΔ();
							break;
						case 30:
							Ⲇⵠᐃ.ⵠΔᐃⵠⲆΔᐃⵠᐃ();
							break;
						case 31:
							Ⲇⵠᐃ.ΔᐃⵠⲆⲆΔⲆⵠΔ(ⲆⲆⲆⲆ);
							break;
						case 32:
							Ⲇⵠᐃ.ⵠᐃⵠⲆⵠΔΔΔΔ(ⲆⲆⲆⲆ[ᐃᐃΔᐃ]);
							break;
						case 33:
							Ⲇⵠᐃ.ⵠⵠΔⲆᐃΔᐃΔⲆ(ⲆⲆⲆⲆ[ⲆΔⵠⲆ]);
							break;
						case 34:
							Ⲇⵠᐃ.ᐃᐃᐃⲆΔΔᐃⵠⲆ();
							break;
						case 35:
							Ⲇⵠᐃ.ⵠⲆᐃΔⵠᐃⲆᐃⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 36:
							Ⲇⵠᐃ.ⲆΔⲆΔΔΔⲆ(ⲆⲆⲆⲆ[1]);
							break;
						case 37:
							Ⲇⵠᐃ.ΔᐃⵠⵠᐃΔᐃⲆΔ(ⲆⲆⲆⲆ[ΔΔᐃⵠ], ⲆⲆⲆⲆ[ΔⵠΔΔ]);
							break;
						case 38:
							Ⲇⵠᐃ.ΔᐃⵠⵠᐃΔΔΔⵠ(ⲆⲆⲆⲆ[ᐃⲆⵠΔ]);
							break;
						case 39:
							Ⲇⵠᐃ.ΔⲆᐃⵠⵠⲆΔⵠⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 40:
							Ⲇⵠᐃ.ⵠᐃΔⵠⲆⲆⲆᐃΔ();
							break;
						case 41:
							Ⲇⵠᐃ.ΔΔⲆΔⵠᐃⵠᐃⲆ(ⲆⲆⲆⲆ);
							break;
						case 42:
							Ⲇⵠᐃ.ⲆⲆⲆᐃⵠΔᐃⲆⵠ(ⲆⲆⲆⲆ[ⵠⲆⲆ]);
							break;
						case 43:
							Ⲇⵠᐃ.ⲆᐃᐃᐃⲆⲆᐃᐃᐃ(ⲆⲆⲆⲆ[ᐃΔⲆⵠ]);
							break;
						case 44:
							Ⲇⵠᐃ.claimed(ⲆⲆⲆⲆ[1]);
							break;
						case 45:
							Ⲇⵠᐃ.ⲆΔⲆΔΔⲆⵠᐃⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 46:
							Ⲇⵠᐃ.ⲆⵠᐃⲆᐃⲆΔΔᐃ(ⲆⲆⲆⲆ[ΔᐃᐃⲆ]);
							break;
						case 47:
							Ⲇⵠᐃ.ᐃⲆΔⲆᐃ(ⲆⲆⲆⲆ[ΔΔⵠΔⵠ]);
							break;
						case 48:
							Ⲇⵠᐃ.ⵠᐃⲆⲆⲆΔΔΔⵠ();
							break;
						case 50:
							Ⲇⵠᐃ.ⲆΔⵠⲆⵠΔⵠᐃᐃ(ⲆⲆⲆⲆ[1], ⲆⲆⲆⲆ[ᐃᐃΔⵠ], ⲆⲆⲆⲆ[ᐃⵠⵠⵠ]);
							break;
						case 51:
							Ⲇⵠᐃ.ΔⵠⲆⲆⲆᐃⲆⵠⵠ();
							break;
						case 52:
							Ⲇⵠᐃ.Δⵠⵠⵠᐃⵠⵠᐃᐃ(ⲆⲆⲆⲆ[ᐃⲆⵠΔ]);
							break;
						case 53:
							Ⲇⵠᐃ.ᐃᐃⲆᐃΔⵠⵠⲆⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 54:
							Ⲇⵠᐃ.ΔΔΔⵠⵠΔⲆΔⲆ();
							break;
						case 55:
							Ⲇⵠᐃ.ΔΔⵠⵠⵠⲆᐃⲆⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 56:
							Ⲇⵠᐃ.ᐃⵠⵠⲆΔⲆᐃᐃⵠ(ⲆⲆⲆⲆ[ΔᐃᐃⲆ]);
							break;
						case 57:
							Ⲇⵠᐃ.ᐃᐃΔΔᐃⲆⲆΔⵠ();
							break;
						case 58:
							Ⲇⵠᐃ.ⵠᐃᐃΔΔᐃⵠΔᐃ();
							break;
						case 59:
							Ⲇⵠᐃ.ΔⲆΔΔᐃⲆⲆᐃΔ();
							break;
						case 60:
							Ⲇⵠᐃ.ΔⲆⲆⲆⲆΔⲆΔΔ();
							break;
						case 61:
							ⲆΔⲆ.ⵠΔΔ.ᐃΔΔΔᐃΔⵠ = .2;
							ⲆΔⲆ.ⵠΔΔ.ᐃᐃΔⲆΔ = 3;
							break;
						case 62:
							Ⲇⵠᐃ.ⵠΔᐃⲆⲆⵠᐃⵠⲆ(new Uint16Array(ⵠᐃΔΔᐃⲆⲆ));
							break;
						case 63:
							Ⲇⵠᐃ.ᐃⲆΔⵠⲆΔⵠᐃⵠ();
							break;
						case 64:
							Ⲇⵠᐃ.ⵠᐃⲆᐃΔᐃⵠΔᐃ();
							break;
						case 65:
							Ⲇⵠᐃ.ᐃⲆⲆⲆⲆⵠⲆΔΔ();
							break;
						case 66:
							Ⲇⵠᐃ.ᐃⵠⵠΔᐃΔⲆᐃⵠ();
							break;
						case 67:
							Ⲇⵠᐃ.ⵠⲆΔⲆᐃⲆⵠᐃⵠ(ⲆⲆⲆⲆ[ΔΔᐃᐃ]);
							break;
						case 68:
							Ⲇⵠᐃ.ᐃᐃⲆᐃⵠⲆΔⵠⵠ(ⲆⲆⲆⲆ[1]);
							break;
						case 69:
							Ⲇⵠᐃ.ΔΔᐃⵠᐃᐃⲆ(ⲆⲆⲆⲆ[1]);
							break;
						case 70:
							Ⲇⵠᐃ.ⵠΔⵠⵠⲆⵠⵠⵠΔ(ⲆⲆⲆⲆ[1]);
							break;
						case 71:
							Ⲇⵠᐃ.ΔᐃᐃΔⲆ(ⲆⲆⲆⲆ[ΔΔᐃᐃ]);
							break
					}
				}
			};
			Ⲇⵠᐃ.ᐃⵠᐃⵠ.onerror = function() {
				ⲆΔⲆ.reconnect.enabled && ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](Ⲇⵠᐃ.timeout, 2500)
			};
			this.ᐃⵠᐃⵠ.onopen = function() {
				clearTimeout(Ⲇⵠᐃ.ⵠΔΔΔⵠ);
				ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ = ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ || Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("token");
				Ⲇᐃⵠ.ΔᐃᐃΔᐃⵠᐃ().then((ᐃⵠΔⵠᐃⵠΔᐃⲆ => {
					Ⲇⵠᐃ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ᐃΔΔᐃⵠⲆΔ[ᐃᐃⲆᐃΔⵠᐃ].stringify([ᐃᐃΔΔ.ᐃΔⲆᐃⵠ.input.value, screen.width * 2, screen.height * 2, ᐃΔᐃᐃΔ.ⲆⵠⵠⵠΔⵠⵠ, ⲆΔⲆ.ⵠΔᐃⵠⲆ, ⲆΔⲆ.ᐃΔᐃⲆΔᐃⲆ, ⲆΔⲆ.reconnect.enabled ? 1 : 0, ᐃᐃΔΔ.ᐃᐃᐃΔ, ᐃᐃΔΔ.ᐃᐃᐃⲆⵠ, ᐃᐃΔΔ.ΔⵠⵠⵠⲆ, ᐃᐃΔΔ.ⲆΔⵠⲆⵠ, ᐃᐃΔΔ.ΔᐃⲆⲆⲆ, ᐃᐃΔΔ.ⲆⵠᐃΔⵠ, ⲆⵠᐃᐃΔ === ⵠΔΔᐃⵠ ? 0 : ⲆⵠᐃᐃΔ, ΔⲆᐃΔΔ === undefined ? ⲆΔᐃ : ΔⲆᐃΔΔ.substring(ΔⲆᐃΔΔ.length - 50), ΔᐃΔᐃᐃⲆᐃᐃΔ, ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ, ᐃⵠΔⵠᐃⵠΔᐃⲆ, ⲆΔⲆ.ΔⲆⲆᐃⵠᐃⲆ, ⲆΔⲆ.ᐃᐃᐃⵠⵠᐃᐃ]));
					ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ = ΔⲆⵠᐃᐃ;
					ⲆΔⲆ.ΔⲆⲆᐃⵠᐃⲆ = ΔΔⵠⲆⵠ;
					ⲆΔⲆ.ᐃᐃᐃⵠⵠᐃᐃ = undefined;
					Ⲇⵠᐃ.ⵠΔΔΔⵠ = setTimeout(Ⲇⵠᐃ.timeout, ᐃΔᐃᐃΔ.ⵠᐃΔᐃⵠⲆΔⲆᐃ)
				}))
			}
		}
	}
	var ⲆⵠΔΔ = {
		"ΔⲆΔ": 48e4,
		"ⵠΔⲆᐃⵠΔⵠ": 10,
		"ΔⲆⲆⵠⲆⵠΔ": 16,
		"ᐃⲆᐃⵠⵠⵠΔΔΔ": ᐃΔᐃⲆⵠΔⲆ - 10,
		"ΔΔⵠⵠⵠⵠΔ": 60,
		"ⵠᐃᐃⲆΔ": ΔΔⵠΔⵠ,
		"ᐃⵠᐃⲆᐃ": ⵠⵠⲆᐃ,
		"ⵠⲆⵠⲆᐃ": 4,
		"ⵠΔΔⵠⵠ": ⲆⵠΔᐃⲆ,
		"ⲆᐃⲆΔΔᐃⲆ": 10,
		"ⲆⵠⲆⵠⲆᐃⲆ": ΔᐃⵠᐃⵠᐃΔ,
		"ⲆⵠΔᐃⲆΔΔ": 100,
		"ⲆⲆⵠΔⵠᐃΔ": ⵠᐃⵠⵠΔ,
		"ᐃⲆᐃᐃⵠⵠᐃⲆⵠ": ⲆΔⲆᐃᐃⲆⵠ,
		"ⲆⵠⲆᐃⲆΔⵠ": ΔΔⲆⵠⲆ,
		"ΔᐃⵠⵠΔⲆᐃ": 100,
		"ΔΔⵠⵠⲆⵠⵠΔᐃ": 100,
		"ΔᐃⵠⵠΔⲆᐃ": ᐃΔⵠΔᐃ,
		"ⵠⲆᐃᐃⲆⵠΔ": ᐃⵠⲆⵠⲆ,
		"ᐃΔᐃⲆᐃΔᐃ": ⲆΔⲆᐃᐃⲆⵠ,
		"ⲆᐃⲆᐃⲆ": 0,
		"ⲆᐃⵠΔⵠⲆᐃ": ΔΔᐃⵠ,
		"ᐃᐃΔᐃⲆ": ⵠᐃᐃⵠ,
		"ⲆⵠᐃⲆⵠ": ᐃⲆᐃΔⵠ,
		"ᐃΔⲆⵠⵠ": ⵠⲆᐃᐃ,
		"ΔⵠⵠΔⲆΔⲆ": 5,
		"ⵠⲆⵠⲆⵠ": 6,
		"ᐃΔΔⵠΔ": 7,
		"ᐃΔⲆⲆⵠᐃⵠⲆᐃ": {
			sydney: "Sydney",
			atlanta: "Atlanta",
			losangeles: "Los Angeles",
			frankfurt: "Frankfurt",
			osaka: "Osaka"
		},
		"ⵠᐃΔΔΔΔⵠ": {
			0: "normal",
			2: "zombies",
			3: "vampires",
			4: ⵠ[567],
			6: "community",
			7: "experimental"
		},
		"ΔΔⵠᐃΔᐃⲆ": 0,
		"ᐃᐃΔⵠΔⵠᐃ": 0,
		"ⲆⲆⲆᐃΔΔΔ": 30,
		"ⵠⲆΔΔⲆⲆᐃⵠᐃ": 2,
		"ΔΔⵠⵠⵠⵠΔ": 6e4,
		"ΔΔⲆᐃΔΔᐃᐃⵠ": 0,
		"ᐃⵠⲆⵠᐃΔⵠᐃⵠ": ΔᐃⲆΔ,
		"ΔⵠΔᐃΔᐃΔⵠᐃ": 50,
		"ᐃΔⲆᐃᐃΔΔΔⲆ": 0,
		"ⵠⲆⲆⵠⲆⵠⵠᐃᐃ": 40,
		"ΔᐃΔⵠⵠΔⵠᐃΔ": 39,
		"ⲆⲆᐃΔᐃΔΔᐃⵠ": 830,
		"ⵠᐃⲆᐃᐃⲆᐃ": 25,
		"ΔⲆⲆⲆΔⲆΔ": ⲆΔΔΔᐃ,
		"ⲆⲆⲆΔΔ": 0,
		"ΔᐃⲆⲆⵠ": ΔⲆᐃⲆ,
		"ᐃⲆⲆⵠⲆⲆⵠ": 200,
		"ΔΔⲆⵠⵠΔᐃ": ΔᐃⲆΔ,
		"ΔⵠΔⲆⵠ": 250,
		"ⵠⲆΔⵠᐃⵠΔ": 150,
		"ⵠⵠⵠⲆᐃᐃΔ": ⵠᐃⲆᐃ,
		"ᐃⵠⲆⲆᐃ": 350,
		"ⲆᐃⲆΔΔⵠⲆ": ᐃΔⵠΔᐃ,
		"ⵠⲆⲆⲆᐃΔΔ": 700,
		"ΔⲆΔⵠᐃ": 39879
	};
	var ⲆⲆΔⵠΔ = [];
	for (var ᐃⲆ = 0; ᐃⲆ < 500; ᐃⲆ++) ⲆⲆΔⵠΔ[ᐃⲆ] = 0;
	ⲆⲆΔⵠΔ[Δ.ⵠΔᐃΔΔ] = 1;
	ⲆⲆΔⵠΔ[Δ.Ⲇᐃⵠᐃⵠ] = ᐃΔⲆⵠ;
	ⲆⲆΔⵠΔ[Δ.ⵠⲆⵠΔⲆ] = ᐃⲆⵠΔ;
	ⲆⲆΔⵠΔ[Δ.ⲆᐃΔΔⲆ] = 1;
	ⲆⲆΔⵠΔ[Δ.ΔⲆᐃⲆᐃ] = 1;
	ⲆⲆΔⵠΔ[Δ.ΔᐃΔⲆⲆ] = 1;
	ⲆⲆΔⵠΔ[Δ.ⵠⲆⲆΔⲆ] = ⲆΔᐃⲆ;
	ⲆⲆΔⵠΔ[Δ.ΔⲆⲆΔⲆ] = 1;
	if (ⲆⲆⲆⲆᐃᐃᐃ.ΔⵠᐃᐃⲆⵠᐃ) {
		var ⵠⲆⵠᐃᐃΔΔΔΔ = ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos;
		ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos = ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin;
		ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin = ⵠⲆⵠᐃᐃΔΔΔΔ;
		var ΔⵠᐃΔⵠΔΔⵠⵠ = ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos;
		ⲆⲆⲆⲆᐃᐃᐃ["Math"].acos = ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin;
		ⲆⲆⲆⲆᐃᐃᐃ["Math"].asin = ΔⵠᐃΔⵠΔΔⵠⵠ
	}
	ⲆⲆΔⵠΔ[Δ.ᐃⲆΔΔⵠ] = 1;
	ⲆⲆΔⵠΔ[Δ.ⲆᐃΔⲆⵠ] = ⲆⲆΔᐃ;
	ⲆⲆΔⵠΔ[Δ.ⲆΔⵠᐃⵠ] = ΔᐃᐃⲆ;
	ⲆⲆΔⵠΔ[Δ.ⵠⲆΔᐃⲆ] = 1;
	ⲆⲆΔⵠΔ[Δ.ΔⲆⲆᐃᐃ] = ΔᐃᐃⲆ;
	ⲆⲆΔⵠΔ[Δ.ᐃⲆⵠⲆᐃ] = 1;
	ⲆⲆΔⵠΔ[Δ.ⲆⲆⲆⵠⲆ] = ⵠⵠⲆ;
	ⲆⲆΔⵠΔ[Δ.ⵠⵠΔᐃⵠ] = ΔΔⵠΔⵠ;
	ⲆⲆΔⵠΔ[Δ.ᐃⵠⲆΔΔ] = 1;
	ⲆⲆΔⵠΔ[Δ.ΔΔΔⲆⵠ] = ᐃΔⲆⵠ;
	ⲆⲆΔⵠΔ[Δ.ⵠⲆⲆⲆᐃ] = 1;
	var ⵠⵠᐃⲆᐃΔΔ = [{
		time: ⲆΔΔΔᐃ * 6e4 * 6
	}, {
		time: 144e4
	}, {
		time: ⲆᐃⲆᐃᐃ * 6e4 * 4
	}, {
		time: ⵠᐃᐃᐃ * 48e4
	}, {
		time: 60 * 1e3 * ⵠΔΔᐃᐃⲆⲆ * ᐃⲆᐃⵠᐃ
	}, {
		time: 5 * (6e4 * ⲆΔᐃⲆΔ)
	}, {
		time: 48e4 * ⲆⲆᐃⵠ
	}, {
		time: 48e4 * ⲆⵠΔⲆⲆ
	}, {
		time: ΔᐃⲆⵠⲆⵠⵠ * 6e4 * 6
	}, {
		time: 336e4
	}, {
		time: ⵠⲆⵠⵠᐃ * (ΔⲆΔⲆⵠ * (60 * 1e3))
	}, {
		time: 8 * (6e4 * ΔⲆΔⲆⵠ)
	}, {
		time: 48e4 * ᐃⵠⲆΔⲆ
	}];
	var ᐃⲆΔ = {
		"ⲆⵠⵠⲆⲆ": 45,
		"ⵠⲆⲆⵠⵠ": 68,
		"ΔⲆΔⵠᐃ": 3,
		"ΔΔⵠΔⲆ": ⲆⲆᐃΔᐃⵠⲆ,
		"ᐃᐃᐃⵠⲆ": 36,
		"ᐃⲆⲆᐃⲆ": 73,
		"Ⲇᐃᐃᐃᐃ": 75,
		"ΔⲆΔΔᐃ": 9,
		"ᐃⵠⵠⲆⲆ": 50,
		"ⵠⵠⲆⲆᐃ": 43,
		"ᐃΔΔᐃᐃ": 80,
		"ΔᐃᐃⲆⵠ": ⲆΔⲆᐃⵠᐃΔ,
		"ⲆΔᐃⲆᐃ": Ⲇⵠⵠᐃᐃ,
		"ᐃᐃⵠᐃᐃ": 67,
		"ΔⲆⲆⵠᐃ": 52,
		"Δᐃⵠⵠᐃ": 5,
		"ⵠⲆᐃΔᐃ": ᐃⲆⲆᐃⵠⵠᐃ,
		"ⲆΔᐃΔΔ": 30,
		"ⲆⲆⲆⵠⵠ": 16,
		"ⵠⲆᐃᐃᐃ": 47,
		"ⲆⲆΔⵠᐃ": 87,
		"ᐃⵠⲆᐃᐃ": 44,
		"Δⵠⵠᐃⵠ": ⵠΔᐃⲆⵠᐃᐃ,
		"ΔⵠⲆΔⵠ": 78,
		"ΔΔⵠⵠⵠ": 8,
		"ⲆⲆⲆᐃᐃⲆΔ": 84,
		"ᐃᐃΔᐃⵠⵠΔ": 85,
		"ᐃΔᐃⲆⲆ": 100,
		"ΔΔΔΔΔ": 23,
		"ⵠΔⲆΔᐃ": 61,
		"ᐃⲆΔᐃΔ": 70,
		"ΔⲆΔⵠⵠ": 46,
		"ΔⲆⵠᐃΔ": 21,
		"ᐃᐃᐃⵠⵠ": 56,
		"ⲆⲆᐃⲆⵠ": ᐃⲆⵠⵠᐃ,
		"ᐃⲆΔΔΔ": 62,
		"ⵠᐃΔⲆΔ": 25,
		"ⲆΔⵠΔⵠ": 12,
		"ⲆⵠΔⲆᐃ": ⵠᐃⵠⲆ,
		"ᐃΔᐃΔⵠ": 90,
		"ⵠᐃᐃⲆⵠ": 41,
		"ᐃⵠΔᐃΔ": 42,
		"ⵠⲆⵠⲆⲆ": 26,
		"ᐃⵠΔᐃᐃ": 69,
		"ⲆⲆⲆⵠΔ": 60,
		"ΔⵠΔΔⵠ": 65,
		"ΔⵠᐃᐃΔ": 55,
		"ⵠΔⵠΔⲆ": 66,
		"ᐃᐃΔΔΔ": 49,
		"ΔᐃΔⵠΔ": 2,
		"ᐃⲆⲆⲆⲆ": 72,
		"ᐃⲆⲆⵠΔ": 88,
		"ⵠᐃⲆᐃᐃΔⲆ": 76,
		"ᐃⲆⲆⵠⲆ": 48,
		"ⲆΔⵠΔΔ": 22,
		"ⲆᐃᐃⵠⲆ": ΔⲆⵠ,
		"ⲆⵠΔⲆΔ": 1,
		"ⲆᐃᐃⲆⵠ": 51,
		"ⵠⵠᐃᐃᐃ": 77,
		"ΔᐃⲆⵠᐃ": 74,
		"ᐃΔᐃⵠⲆ": 27,
		"ⵠᐃᐃΔΔ": ᐃⵠΔⵠⵠ,
		"ⵠΔⲆᐃⵠ": 38,
		"ΔⵠⲆΔᐃ": 29,
		"ᐃΔⲆᐃᐃⵠⲆ": 89,
		"ΔΔⲆⵠᐃ": 86,
		"ΔⲆᐃΔⲆ": 24,
		"ⲆΔᐃΔⵠ": 10,
		"ⵠⵠᐃⵠⲆ": 40,
		"ⲆΔⲆⵠⲆ": 35,
		"ⵠᐃⲆΔⲆ": 31,
		"ⲆᐃΔⲆᐃⵠⲆ": 83,
		"ᐃⵠᐃⲆⲆ": 91,
		"ᐃⲆⵠᐃⵠ": 64,
		"ⵠᐃⲆᐃᐃ": 33,
		"ⲆⲆⵠΔᐃⲆⲆ": 82,
		"ⲆᐃⵠⲆΔ": Ⲇⵠᐃᐃⵠⵠⵠ,
		"ⵠⵠⲆΔΔ": 32,
		"ⵠⵠΔⵠᐃ": 39,
		"ΔⵠΔⲆᐃ": 11,
		"ΔⵠᐃⲆⵠ": 53,
		"ᐃᐃⵠΔΔ": 71,
		"ⲆᐃⲆΔⲆ": 54,
		"ᐃΔⲆⵠΔ": 37,
		"ⵠⵠⲆⲆΔ": 63,
		"ΔⲆⲆΔⵠ": 34,
		"ⲆⲆᐃΔⵠ": 28,
		"ⵠⲆΔⲆⲆ": 79,
		"ᐃᐃᐃΔⲆ": 7,
		"ⵠⲆⵠᐃΔ": 81
	};
	const ⵠΔⲆⲆ = {};
	const ΔΔⲆⵠ = {};
	ⵠΔⲆⲆ["get"] = function(ΔΔⲆⲆ, ᐃᐃΔⲆⲆⲆᐃΔᐃ) {
		if (ᐃᐃΔⲆⲆⲆᐃΔᐃ !== "ⵠΔⲆⲆ") {
			const ⵠΔⲆⲆ = ⲆⲆⲆⲆᐃᐃᐃ.setInterval;
			const ΔΔⲆⲆ = ⵠΔⲆⲆ;
			const ᐃᐃΔⲆⲆⲆᐃΔᐃ = function() {
				ⵠΔⲆⲆ(ᐃᐃΔⲆⲆⲆᐃΔᐃ, 9896);
				ΔΔⲆⲆ(ᐃᐃΔⲆⲆⲆᐃΔᐃ, 2460)
			};
			ᐃᐃΔⲆⲆⲆᐃΔᐃ()
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ᐃⵠⵠᐃⲆΔΔ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ΔΔⲆⵠ, ⵠΔⲆⲆ);
	const ΔᐃΔⲆⵠⵠⲆ = ᐃⵠⵠᐃⲆΔΔ.ⵠΔⲆⲆ;
	var ΔⵠⲆᐃⵠΔⲆ = [
		[ᐃⲆΔ.ΔⲆᐃΔⲆ, ⵠⲆ.ⵠᐃΔⲆ],
		[ᐃⲆΔ.ⵠᐃΔⲆΔ, ⵠⲆ.ⲆᐃⲆⵠ],
		[ᐃⲆΔ.ⵠⲆⵠⲆⲆ, ⵠⲆ.ⲆⵠⲆⵠ],
		[ᐃⲆΔ.ᐃΔᐃⵠⲆ, ⵠⲆ.ⲆⵠΔⵠ],
		[ᐃⲆΔ.ⲆⲆᐃΔⵠ, ⵠⲆ.ᐃΔⲆⲆ]
	];

	function ΔⵠⵠⲆⲆΔⲆ(ⵠⲆᐃΔ, ΔΔΔⵠ, ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, ΔᐃΔ, ᐃᐃⵠΔ, ⵠΔⵠ, ΔΔᐃᐃⲆ, ⵠΔᐃΔⵠ) {
		this.type = ⵠⲆᐃΔ;
		this.ΔΔΔⵠ = ΔΔΔⵠ;
		this.pid = ΔΔΔⵠ;
		this.id = ⲆΔ;
		this.x = ᐃᐃΔ;
		this.y = ᐃⲆᐃ;
		this.angle = ΔᐃΔ;
		this.ᐃⲆΔⲆΔⵠⵠ = ΔᐃΔ;
		this.action = ᐃᐃⵠΔ;
		this.info = ⵠΔⵠ;
		this.ⵠΔᐃΔⵠ = ⵠΔᐃΔⵠ;
		this.r = {
			x: ᐃᐃΔ,
			y: ᐃⲆᐃ
		};
		this.ΔΔᐃᐃⲆ = ΔΔᐃᐃⲆ;
		if (ⲆΔΔ) this.ⲆⲆᐃΔ = ΔΔΔⵠ * ⲆΔΔ.ⵠⵠᐃⵠⲆΔᐃ + ⲆΔ;
		switch (ⵠⲆᐃΔ) {
			case ᐃⲆΔ.ⲆᐃᐃⵠⲆ:
				this.ΔⲆⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ[this.ΔΔΔⵠ];
				this.ᐃᐃᐃΔ = this.ΔⲆⵠΔ.ᐃᐃᐃΔ;
				this.ΔⲆΔⵠⲆΔᐃ = this.ΔⲆⵠΔ.ΔⲆΔⵠⲆΔᐃ;
				this.ⲆΔⵠⲆⵠ = this.ΔⲆⵠΔ.ⲆΔⵠⲆⵠ;
				this.ᐃᐃᐃⲆⵠ = this.ΔⲆⵠΔ.ᐃᐃᐃⲆⵠ;
				this.ⵠΔⲆᐃⵠᐃⵠ = -1e6;
				this.ᐃⵠᐃΔΔ = -1e6;
				this.ⲆⲆⵠⵠΔ = -1e6;
				this.ᐃⲆⲆᐃᐃ = -1e6;
				this.ⵠⲆⲆΔᐃᐃᐃ = -1e6;
				this.ⲆⲆΔⲆⵠⲆⵠ = -1e6;
				this.ⵠⵠΔΔⲆ = -1e6;
				this.ΔⵠⲆΔΔ = ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⲆⵠΔΔ.ΔΔⵠᐃΔᐃⲆ === this.ᐃᐃᐃΔ ? true : false;
				this.ⵠⲆⲆⵠᐃᐃᐃ = ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ && ⲆⵠΔΔ.ᐃᐃΔⵠΔⵠᐃ === this.ᐃᐃᐃΔ ? true : false;
				this.ⵠⵠⲆⲆⵠⲆᐃ = this.ΔⵠⲆΔΔ && "  " === this.ΔⲆⵠΔ.ᐃΔⲆᐃⵠ ? ΔᐃⲆΔⲆ : false;
				this.ⵠΔⵠⲆΔ = [];
				this.ΔΔⲆΔⲆⵠΔ = 0;
				this.ᐃⲆⲆᐃ = ⵠΔΔΔⲆ;
				this.ᐃⲆᐃⲆΔⲆⲆ = 0;
				this.ᐃᐃⵠΔⵠⵠⵠ = 0;
				this.ΔⲆᐃᐃⵠ = [];
				this.r = {
					x: ᐃᐃΔ,
					y: ᐃⲆᐃ
				};
				this.ⲆⵠᐃⲆ = ⵠΔᐃΔΔⵠΔΔⵠ;
				this.ⲆⲆⵠΔⲆΔⲆ = ⲆⲆⵠΔⲆΔⲆ;
				this.ⵠΔⲆⲆⵠ = ⲆⵠⲆ;
				this.ᐃⵠᐃΔⵠ = 0;
				this.ᐃΔⲆⵠⲆ = 0;
				this.ⵠⲆⵠⵠⲆᐃΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⲆⵠΔ, 0, ᐃⵠΔ, -Math.PI / ᐃⲆᐃⵠᐃ, .5, 1);
				this.ᐃⲆⵠΔⲆ = ΔᐃⲆΔ;
				this.ⲆΔⲆᐃⵠΔΔ = 0;
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⲆⵠΔ, .6, .6, ΔⲆⵠ, 5, 3);
				this.ⵠᐃΔΔΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, ⲆⲆⲆ, 5, 3);
				this.freeze = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, ΔᐃⲆΔ, ᐃᐃⲆᐃΔ, 3);
				this.ⵠΔΔΔⵠΔΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, ᐃᐃⲆᐃⵠ, ᐃᐃⵠᐃ);
				this.ⲆⵠᐃΔΔⲆⲆ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆΔΔⵠ, ⵠⵠᐃᐃΔ, 2.25, -1.5, 3.75, 7.5);
				this.ⵠΔΔⵠΔΔΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(true, ⵠⵠⲆⲆ, 7.5, -ᐃⲆᐃΔⵠ, 22.5, 33.75);
				this.attack = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠᐃⵠᐃ, 0, ΔΔⵠᐃ, -Math.PI / 3, 6, 9);
				this.ⵠΔΔᐃⲆⲆⲆⲆⲆ = ⲆΔᐃ;
				this.ⵠᐃⲆⲆⵠᐃⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠⲆΔⵠ, .6, .6, ⵠⵠᐃᐃΔ, 1, ΔⲆΔⵠ);
				this.ΔΔΔⲆⲆΔⵠ = this.ⵠⵠⲆⲆⵠⲆᐃ ? new Ⲇᐃⵠ.ᐃΔΔⲆ(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;
				this.ᐃⵠΔⲆⲆᐃⲆ = ΔΔⲆᐃ;
				this.ⵠᐃⵠⵠⲆΔᐃ = Ⲇᐃⵠᐃ;
				this.ⵠΔⲆΔⵠⲆⲆ = [];
				this.ᐃⲆⵠⲆΔⵠⲆ = [];
				this.text = [];
				this.label = [];
				this.ⲆⲆⲆΔⲆⵠᐃ = ⲆⲆΔᐃᐃΔᐃΔᐃ;
				this.ᐃᐃᐃᐃⲆ = true;
				this.right = -ⵠⵠⲆ;
				this.ΔⵠⵠⲆⵠ = -1;
				this.action = ⵠΔⵠⵠ.IDLE;
				this.ΔⵠⲆᐃᐃⲆΔ = false;
				this.ᐃⲆΔⲆΔ = ⵠᐃⲆᐃ;
				this.ΔΔᐃⲆΔ = ⲆΔⲆΔⵠ;
				this.bubbles = [];
				this.ΔⵠⵠⵠⲆ = 0;
				this.ⲆᐃΔⲆΔ = -ᐃⲆⵠΔ;
				this.ⵠᐃⵠ = function(ᐃᐃⵠΔ) {
					if (this.info & 32768) {
						this.ΔⵠⲆᐃᐃⲆΔ = ΔΔⲆⲆⲆ;
						this.info = ~32768 & this.info
					} else this.ΔⵠⲆᐃᐃⲆΔ = false;
					if (this.info & 16384) {
						this.info = ~16384 & this.info;
						this.ΔⵠⵠⵠⲆ = ⵠⵠⲆΔ
					} else this.ΔⵠⵠⵠⲆ = ΔΔᐃ;
					this.ᐃⲆΔⲆΔ = Math.floor(this.info / 128);
					this.info -= 128 * this.ᐃⲆΔⲆΔ;
					this.info === ⵠⲆ.ΔΔᐃⵠᐃ || this.ⵠⵠⲆⲆⵠⲆᐃ ? this.right = -1 : this.right = this.info;
					this.ΔΔⲆΔⲆⵠΔ = ⲆΔΔ.ⵠΔᐃⵠⵠⵠⲆⵠΔ(Math.floor(this.r.y / 100), Math.floor(this.r.x / ⲆΔⲆᐃᐃⲆⵠ));
					this.ΔⵠⵠⲆⵠ = this.ⵠΔᐃΔⵠ & 255;
					if (ⲆⵠΔΔ.ⵠⲆΔΔⲆⲆᐃⵠᐃ === this.right) this.ΔΔᐃⲆΔ = ⵠⲆΔⲆⵠ;
					else this.ΔΔᐃⲆΔ = ᐃⲆⲆΔΔ;
					if (ⲆⲆΔⵠΔ[this.right]) this.ⲆΔⵠᐃΔ = true;
					else this.ⲆΔⵠᐃΔ = ⲆⲆⲆᐃⲆ;
					if (ᐃᐃⵠΔ & ⵠΔⵠⵠ.ⵠⵠᐃΔᐃΔⵠ) {
						this.ⵠᐃⲆⲆⵠᐃⵠ.ⵠⲆⵠ = ΔⲆⵠᐃⵠ;
						this.ⵠᐃⲆⲆⵠᐃⵠ.ⵠⵠΔ = .6
					} else if (ᐃᐃⵠΔ & ⵠΔⵠⵠ.ᐃⵠΔᐃⲆ) {
						this.freeze.ⵠⲆⵠ = false;
						this.freeze.ⵠⵠΔ = .6
					} else if (ᐃᐃⵠΔ & ⵠΔⵠⵠ.ᐃⵠⲆⲆⲆⵠⵠ) {
						this.ⵠᐃΔΔΔ.ⵠⲆⵠ = false;
						this.ⵠᐃΔΔΔ.ⵠⵠΔ = .6
					}
					ᐃᐃⵠΔ & ⵠΔⵠⵠ.Ⲇⵠⵠⵠⵠⵠⵠ && (this.ⵠΔΔΔⵠΔΔ.ⵠⲆⵠ = ᐃⵠⲆΔⵠ, this.ⵠΔΔΔⵠΔΔ.ⵠⵠΔ = .6);
					ᐃᐃⵠΔ & ⵠΔⵠⵠ.ΔᐃⲆⲆ && (this.ⲆⲆᐃ.ⵠⲆⵠ = ⲆΔᐃⵠⲆ, this.ⲆⲆᐃ.ⵠⵠΔ = .6);
					if (ᐃᐃⵠΔ & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ) {
						this.ⵠΔΔᐃⲆⲆⲆⲆⲆ = ᐃΔᐃᐃΔ.ᐃᐃⵠᐃⵠⲆΔΔᐃ;
						ⵠΔᐃΔ.ᐃΔⲆⲆΔ && -ᐃⵠ !== this.ⲆᐃΔⲆΔ && ⵠΔᐃΔ.ᐃⵠⵠΔ[this.ⲆᐃΔⲆΔ].ᐃᐃᐃΔⲆΔΔᐃⵠ(ᐃᐃⵠⲆⲆ[this.right])
					}
				};
				this.ⵠᐃⵠ();
				break;
			case ᐃⲆΔ.ΔΔΔΔΔ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃⲆⵠΔ, ᐃⵠ, 0, 10, 10),
					"ⵠᐃⵠ": false,
					angle: Δⵠⵠ
				};
				this.ᐃᐃᐃᐃᐃ = ᐃⲆⵠⵠⵠⵠΔᐃᐃ;
				this.ⵠᐃΔⵠΔ = ⵠⲆᐃΔⵠᐃⵠⲆⵠ;
				this.ⵠΔᐃⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, 1, 1.23, 1.18, .01, .01);
				this.ⵠᐃᐃⲆΔΔΔ = ΔⲆᐃⲆ;
				this.ᐃⲆⵠΔⵠⵠⲆ = ᐃⵠΔ;
				this.ⵠᐃⲆΔⵠ = ⵠᐃⲆΔⵠ;
				break;
			case ᐃⲆΔ.ⲆΔⵠΔΔ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ⵠⲆⲆ, ΔⲆⵠ, 10, ᐃΔᐃᐃⵠ),
					"ⵠᐃⵠ": false,
					angle: ΔΔᐃ
				};
				this.ᐃᐃᐃᐃᐃ = ⵠⵠᐃΔⲆⲆΔⲆΔ;
				this.ⵠᐃΔⵠΔ = ⵠⵠⵠⵠᐃᐃᐃⵠⵠ;
				this.ⵠΔᐃⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, ᐃⵠ, 1.23, 1.18, .01, .01);
				this.ⵠᐃᐃⲆΔΔΔ = ΔΔᐃ;
				this.ᐃⲆⵠΔⵠⵠⲆ = 0;
				break;
			case ᐃⲆΔ.ⲆⵠΔⲆΔ:
			case ᐃⲆΔ.ⵠᐃᐃΔΔ:
				this.ᐃᐃᐃᐃᐃ = ⲆᐃⵠᐃΔᐃⲆΔⲆ;
				this.ⵠᐃΔⵠΔ = ⵠᐃᐃⲆΔᐃⲆᐃⲆ;
				this.ᐃᐃⵠⲆΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔⲆΔ, 1.03, .98, .3, .3);
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1.23, 1.18, .01, .01);
				this.ⵠΔᐃⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⲆⵠΔ, ⲆΔⵠⲆ, 1.23, 1.18, .01, .01);
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔΔᐃ, 1, ᐃⵠⵠ, ⵠⵠⲆⲆ, ⲆᐃᐃᐃⲆ, ᐃⵠⲆᐃⵠ),
					"ⵠᐃⵠ": ⲆᐃⲆᐃΔ,
					angle: ⲆΔᐃ
				};
				break;
			case ᐃⲆΔ.ⵠⵠⲆⲆᐃ:
				this.ᐃᐃᐃᐃᐃ = Ⲇⵠⵠᐃᐃᐃⵠᐃᐃ;
				this.ⵠᐃΔⵠΔ = ΔⲆΔΔⲆΔⲆⵠᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⲆⲆΔΔ, 1, 1, Ⲇᐃⵠᐃ, ⲆⲆᐃⵠΔ, 10),
					"ⵠᐃⵠ": ΔᐃΔΔΔ,
					angle: ⲆΔᐃ
				};
				this.ΔⵠᐃⲆ = [];
				for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < ᐃᐃⵠᐃ; ᐃⲆ++) this.ΔⵠᐃⲆ.push({
					"ⲆⵠᐃⲆ": ᐃΔᐃΔᐃⵠᐃⲆⵠ,
					"ᐃⵠΔⵠ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2)
				});
				this.ΔⵠᐃⲆ[ΔⲆᐃⲆ].x = this.x - 16.5;
				this.ΔⵠᐃⲆ[0].y = this.y - 15.5;
				this.ΔⵠᐃⲆ[ΔΔᐃ].angle = this.angle;
				this.ΔⵠᐃⲆ[ΔΔⵠΔⵠ].x = this.x + 36;
				this.ΔⵠᐃⲆ[1].y = this.y + 17;
				this.ΔⵠᐃⲆ[ⵠⵠⲆΔ].angle = this.angle;
				this.ΔⵠᐃⲆ[2].x = this.x - 18.5;
				this.ΔⵠᐃⲆ[2].y = this.y + 39;
				this.ΔⵠᐃⲆ[ⵠᐃⵠΔ].angle = this.angle;
				break;
			case ᐃⲆΔ.ΔⲆΔⵠᐃ:
				this.ᐃᐃᐃᐃᐃ = ⵠⵠᐃⵠⵠΔᐃΔᐃ;
				this.ⵠᐃΔⵠΔ = ⲆᐃᐃⵠⲆⲆⲆⲆᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⲆⲆΔᐃ, 1, ⵠᐃⲆᐃ, ᐃᐃⵠⵠⵠ, ⵠΔⲆⵠᐃ),
					"ⵠᐃⵠ": ⲆΔᐃⵠⲆ,
					angle: 0
				};
				this.ΔⵠᐃⲆ = [];
				for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) this.ΔⵠᐃⲆ.push({
					"ⲆⵠᐃⲆ": ΔΔⵠᐃⲆΔⲆ,
					"ᐃⵠΔⵠ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2)
				});
				this.ΔⵠᐃⲆ[0].x = this.x - 16.5;
				this.ΔⵠᐃⲆ[ΔⵠⲆΔ].y = this.y - 15.5;
				this.ΔⵠᐃⲆ[ⵠᐃΔᐃ].x = this.x - 5.5;
				this.ΔⵠᐃⲆ[1].y = this.y + 7.5;
				this.ΔⵠᐃⲆ[ᐃⲆⵠᐃ].x = this.x + 18;
				this.ΔⵠᐃⲆ[ⵠⵠⲆᐃ].y = this.y - ΔⲆⵠΔΔ;
				break;
			case ᐃⲆΔ.ⵠⵠᐃᐃᐃ:
				this.ⲆⵠᐃⲆ = ⲆΔᐃΔΔⵠΔⲆΔ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔΔᐃⵠⵠ, .6, .6, 0, ΔⲆⲆⲆⵠ, ᐃⵠⵠⵠ);
				break;
			case ᐃⲆΔ.ᐃⲆΔᐃΔ:
				this.ⲆⵠᐃⲆ = ΔⲆⲆΔΔᐃΔⲆᐃ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, 5, 3);
				break;
			case ᐃⲆΔ.ᐃᐃⵠΔΔ:
				this.ⲆⵠᐃⲆ = ΔⲆΔᐃΔⵠⲆᐃΔ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆᐃΔΔᐃⵠᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⵠᐃΔᐃᐃⲆⲆ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, ⲆΔᐃ, 5, 3);
				this.ⵠᐃΔΔΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, .6, .6, ⵠⵠᐃⵠ, 5, ΔⵠⵠΔ);
				break;
			case ᐃⲆΔ.ᐃᐃⵠᐃᐃ:
				this.ⲆⵠᐃⲆ = ᐃΔΔⲆᐃΔᐃᐃᐃ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃⲆⵠⲆ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆᐃΔΔᐃⵠᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠⲆΔⵠ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⵠᐃΔᐃᐃⲆⲆ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, .6, .6, 0, ΔⲆⲆⲆⵠ, ΔⵠⵠΔ);
				this.ⵠᐃΔΔΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, ⲆⲆᐃⵠ, 3);
				break;
			case ᐃⲆΔ.ⵠⲆⲆⵠⵠ:
				this.ⲆⵠᐃⲆ = ᐃⵠᐃᐃΔⵠⵠⲆΔ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆᐃⲆᐃΔ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, ⵠᐃᐃΔᐃ, ΔΔⲆⲆᐃ);
				break;
			case ᐃⲆΔ.ᐃΔᐃΔⵠ:
				this.ⲆⵠᐃⲆ = ⲆᐃⲆΔⵠᐃⲆ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔΔᐃ, .9 + Math.random() * .15, 1.05, .9, .5, .5);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔΔᐃ, .6, .6, 0, ⲆⲆᐃⵠ, ᐃⵠⲆⲆ);
				break;
			case ᐃⲆΔ.ᐃⵠᐃⲆⲆ:
				this.ⲆⲆᐃⲆΔ = this.info & 15;
				this.ᐃᐃⵠΔⵠⵠⵠ = this.ⵠΔᐃΔⵠ & ⲆᐃⲆⲆ;
				this.ΔΔⵠⲆΔⵠⵠ = 0;
				this.x = this.info;
				this.y = this.ⵠΔᐃΔⵠ;
				this.ⲆⵠᐃⲆ = ⵠᐃᐃᐃᐃᐃΔⵠΔ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔΔΔ, .9 + Math.random() * .15, 1.05, .9, .6, .6);
				break;
			case ᐃⲆΔ.ᐃΔΔᐃᐃ:
			case ᐃⲆΔ.ⲆⲆⲆⵠΔ:
			case ᐃⲆΔ.ⵠΔⲆΔᐃ:
			case ᐃⲆΔ.ᐃⲆΔΔΔ:
			case ᐃⲆΔ.ⵠⵠⲆⲆΔ:
			case ᐃⲆΔ.ΔⵠⲆΔⵠ:
			case ᐃⲆΔ.ΔⵠΔΔⵠ:
			case ᐃⲆΔ.ⵠΔⵠΔⲆ:
			case ᐃⲆΔ.ᐃⲆⲆⵠΔ:
				this.ⲆⵠᐃⲆ = ⲆᐃⲆΔⵠᐃⲆ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔᐃᐃ, .6, .6, 0, ΔᐃΔΔⲆ, ᐃᐃⵠᐃ);
				break;
			case ᐃⲆΔ.ᐃᐃᐃⵠⲆ:
				this.ⲆⵠᐃⲆ = ΔⵠΔΔΔⵠΔΔΔ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔᐃᐃ, ⲆᐃⲆⲆ, 1, Ⲇᐃⵠᐃ, ⵠΔᐃΔᐃ, 10),
					"ⵠᐃⵠ": false,
					angle: 0
				};
				break;
			case ᐃⲆΔ.ΔⲆⲆΔⵠ:
				this.ⵠᐃΔⵠΔ = ᐃᐃⵠΔⵠΔΔᐃΔ;
				this.ⲆⵠᐃⲆ = ΔᐃⲆⲆᐃⲆΔⲆⲆ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔΔᐃ, ᐃⵠ, ⲆΔⵠⲆ, 0, 10, ⲆΔⵠᐃⲆ),
					"ⵠᐃⵠ": false,
					angle: ⵠⵠⲆⲆ
				};
				this.up = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1.03, .98, .1, .1);
				this.ⲆⲆᐃᐃⲆ = [];
				break;
			case ᐃⲆΔ.ⲆⲆΔⵠᐃ:
				this.angle = Math.PI * Math.random() / 2;
				this.ⲆⵠᐃⲆ = ⵠᐃⵠΔᐃᐃᐃᐃΔ;
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠΔⲆᐃⲆ, .6, .6, 0, ⲆⵠΔᐃᐃ, ᐃᐃⵠᐃ);
				this.boxType = "Gift";
				break;
			case ᐃⲆΔ.ΔΔⲆⵠᐃ:
				this.ⲆⵠᐃⲆ = ⵠᐃⵠΔᐃᐃᐃᐃΔ;
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠΔⲆᐃⲆ, .6, .6, 0, ⲆⵠΔᐃᐃ, ᐃᐃⵠᐃ);
				this.boxType = "Drop";
				this.disappearTime = +new Date + 17e3;
				break;
			case ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ:
				this.ⲆⵠᐃⲆ = ⵠᐃⵠΔᐃᐃᐃᐃΔ;
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠΔⲆᐃⲆ, .6, .6, 0, ⲆⵠΔᐃᐃ, ᐃᐃⵠᐃ);
				this.boxType = "Dead";
				this.disappearTime = +new Date + 241e3;
				break;
			case ᐃⲆΔ.ⵠⲆⵠᐃΔ:
				this.ⲆⵠᐃⲆ = ᐃⲆⲆᐃⵠΔᐃᐃΔ;
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, .6, .6, 0, ΔⲆⲆⲆⵠ, ⵠⵠⲆⵠΔ);
				break;
			case ᐃⲆΔ.ᐃⵠΔᐃᐃ:
				this.scale = ΔΔⲆΔ;
				this.ⲆⵠᐃⲆ = ⲆΔΔΔⵠᐃⵠΔΔ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, ⵠⵠⲆⲆ, ΔⲆᐃⲆ, -Math.PI / ΔᐃΔⵠⵠⲆᐃ, .5, ᐃⵠⵠ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, ΔⲆᐃⲆ, ᐃᐃⵠⵠ, ΔⵠⵠΔ);
				break;
			case ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ:
				this.ⲆⲆⵠΔᐃ = 0;
				this.ᐃⵠⲆⵠ = [];
				this.ⵠΔΔᐃⲆⵠⲆ = ⵠⵠⲆⲆ;
				this.ᐃᐃᐃⲆⲆⵠⵠ = ΔⵠⵠΔᐃⵠⵠᐃⵠ;
				this.ⲆⵠᐃⲆ = ⵠΔⲆᐃⵠⵠΔⵠⲆ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆᐃⲆᐃΔ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔᐃ, ᐃⵠΔ, -Math.PI / 6, .5, ⲆΔⵠⲆ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, ΔᐃⲆΔ, ⵠⲆⲆᐃⵠ, ᐃⲆⲆᐃΔ);
				break;
			case ᐃⲆΔ.Ⲇᐃᐃᐃᐃ:
				this.x = this.info;
				this.y = this.ⵠΔᐃΔⵠ;
				this.scale = ᐃⵠⵠ;
				this.ΔᐃΔΔ = ⲆⵠⲆ;
				this.ⲆⵠᐃⲆ = ⵠⲆⵠΔᐃⵠΔⲆⲆ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔⲆⵠ, 0, -Math.PI / 6, .5, ⵠⵠⲆ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠΔⲆᐃⲆ, .6, .6, ᐃⵠΔ, 5, 3);
				break;
			case ᐃⲆΔ.ΔᐃⲆⵠᐃ:
				this.x = this.info;
				this.y = this.ⵠΔᐃΔⵠ;
				this.scale = 1;
				this.ΔᐃΔΔ = ΔⲆᐃⲆ;
				this.ⲆⵠᐃⲆ = ᐃΔⲆⵠᐃᐃⵠⵠⵠ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆΔᐃⵠⲆ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, 0, -Math.PI / 6, .5, ⵠⵠⲆΔ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, ⲆᐃΔΔΔ, ⲆⵠⵠⲆ);
				break;
			case ᐃⲆΔ.ᐃⲆⲆᐃⲆ:
				this.scale = ᐃᐃΔᐃ;
				this.ⲆⵠᐃⲆ = ⵠΔⵠⲆⲆᐃⲆⲆⵠ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠⲆΔⵠ, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⲆΔᐃ, 0, -Math.PI / ⵠⵠⲆΔⵠ, .5, ⲆΔⵠⲆ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⲆⲆΔΔ, .6, .6, ⵠⵠᐃⵠ, 5, 3);
				break;
			case ᐃⲆΔ.ᐃⲆⲆⲆⲆ:
				this.scale = ⵠᐃΔᐃ;
				this.ⲆⵠᐃⲆ = ΔᐃᐃᐃᐃⵠΔⵠⲆ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠΔⲆᐃⲆ, 0, 0, -Math.PI / 6, .5, 1);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .6, .6, 0, 5, 3);
				break;
			case ᐃⲆΔ.ᐃⲆⵠᐃⵠ:
				this.scale = 1;
				this.ⲆⵠᐃⲆ = ⲆΔⲆΔⲆΔⲆⵠⵠ;
				this.ᐃⵠΔⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2);
				this.rotate = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, 0, -Math.PI / ⵠⲆᐃⵠᐃ, .5, ⲆΔⵠⲆ);
				this.ⲆⲆᐃ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃⲆⵠⲆ, .6, .6, ΔΔᐃ, ᐃⵠⲆⲆΔ, 3);
				break;
			case ᐃⲆΔ.ᐃΔᐃⲆⲆ:
				this.ΔⵠᐃⲆ = [];
				for (var ᐃⲆ = 0; ᐃⲆ < ⵠΔⲆⲆΔ; ᐃⲆ++) this.ΔⵠᐃⲆ.push({
					"ⲆⵠᐃⲆ": ΔΔⵠᐃⲆΔⲆ,
					"ᐃⵠΔⵠ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9 + Math.random() * .15, 1.05, .9, .2, .2)
				});
				switch (this.id % 3) {
					case 0:
						this.ΔⵠᐃⲆ[0].x = this.x - 20.5;
						this.ΔⵠᐃⲆ[0].y = this.y - 22.5;
						this.ΔⵠᐃⲆ[ᐃᐃΔᐃ].x = this.x - 35.5;
						this.ΔⵠᐃⲆ[ΔΔⵠΔⵠ].y = this.y + 7.5;
						this.ΔⵠᐃⲆ[ΔⲆⲆᐃ].x = this.x + 7.5;
						this.ΔⵠᐃⲆ[2].y = this.y - 30;
						this.ΔⵠᐃⲆ[3].x = this.x + 22.5;
						this.ΔⵠᐃⲆ[ⵠΔᐃⲆ].y = this.y;
						this.ΔⵠᐃⲆ[4].x = this.x - 7.5;
						this.ΔⵠᐃⲆ[ᐃΔⲆΔ].y = this.y + 14.5;
						break;
					case ΔᐃⵠΔ:
						this.ΔⵠᐃⲆ[0].x = this.x - 30.5;
						this.ΔⵠᐃⲆ[0].y = this.y - 22.5;
						this.ΔⵠᐃⲆ[1].x = this.x - 15.5;
						this.ΔⵠᐃⲆ[1].y = this.y + 7.5;
						this.ΔⵠᐃⲆ[ⵠᐃⵠΔ].x = this.x + 15.5;
						this.ΔⵠᐃⲆ[ⵠΔⵠᐃ].y = this.y - 30;
						this.ΔⵠᐃⲆ[3].x = this.x + 12.5;
						this.ΔⵠᐃⲆ[3].y = this.y + ⲆᐃᐃΔ;
						this.ΔⵠᐃⲆ[Δⵠⵠⵠ].x = this.x - 40.5;
						this.ΔⵠᐃⲆ[ᐃΔⲆΔ].y = this.y + 14.5;
						break;
					case 2:
						this.ΔⵠᐃⲆ[ⵠᐃⲆᐃ].x = this.x - 20.5;
						this.ΔⵠᐃⲆ[0].y = this.y - 20.5;
						this.ΔⵠᐃⲆ[1].x = this.x - 35.5;
						this.ΔⵠᐃⲆ[ᐃΔⲆⵠ].y = this.y + 15.5;
						this.ΔⵠᐃⲆ[2].x = this.x + 7.5;
						this.ΔⵠᐃⲆ[2].y = this.y - 17;
						this.ΔⵠᐃⲆ[3].x = this.x + 22.5;
						this.ΔⵠᐃⲆ[3].y = this.y + 5;
						this.ΔⵠᐃⲆ[ⲆⲆⲆⵠᐃ].x = this.x - 7.5;
						this.ΔⵠᐃⲆ[ⲆⵠⲆΔⲆ].y = this.y + 1.5;
						break
				}
				break;
			case ᐃⲆΔ.ⵠᐃⲆΔⲆ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔⵠΔⵠ, 1, 0, 10, ΔⲆⵠΔᐃ),
					"ⵠᐃⵠ": false,
					angle: ᐃⵠΔ
				};
				this.ⲆⵠᐃⲆ = ΔΔⲆⲆⵠⵠΔⲆΔ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⵠⵠΔⲆ, .9, 1.05, .9, .2, .2);
				this.ΔΔⵠᐃⲆⵠΔ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, Math.PI / 30, -Math.PI / 30, .06, .06);
				break;
			case ᐃⲆΔ.ⵠⵠᐃⵠⲆ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ⲆᐃⲆⲆ, 0, ⲆΔΔⵠⲆ, ⵠΔᐃΔᐃ),
					"ⵠᐃⵠ": false,
					angle: ᐃⵠΔ
				};
				this.ⲆⵠᐃⲆ = ⲆⵠΔᐃΔⵠⲆΔᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠᐃⵠᐃ, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ⵠⵠΔⵠᐃ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⲆⲆᐃⲆ, 1, ⵠⵠⲆ, ΔⲆᐃⲆ, 10, ⲆⲆᐃⵠΔ),
					"ⵠᐃⵠ": ⵠⲆⲆⵠΔ,
					angle: 0
				};
				this.ⲆⵠᐃⲆ = ⲆΔⵠⲆᐃⲆⲆⲆᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ᐃⵠⲆᐃᐃ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⵠⲆⲆ, 1, 0, ⵠΔⲆⵠᐃ, 10),
					"ⵠᐃⵠ": ⲆⲆⲆᐃⲆ,
					angle: 0
				};
				this.ⲆⵠᐃⲆ = ΔΔⵠΔΔⵠΔΔⵠ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠᐃⵠᐃ, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ΔⵠᐃᐃΔ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔⲆΔ, 1, 0, ⲆᐃᐃᐃⲆ, 10),
					"ⵠᐃⵠ": false,
					angle: ⵠⵠⲆⲆ
				};
				this.ⲆⵠᐃⲆ = ⵠᐃⲆΔⲆᐃΔᐃΔ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⵠⵠΔⲆ, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ⲆᐃⲆΔⲆ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃᐃΔᐃ, ⲆΔᐃⲆ, 0, 10, 10),
					"ⵠᐃⵠ": false,
					angle: ⲆⲆⲆ
				};
				this.ⲆⵠᐃⲆ = ΔⵠΔΔΔⲆΔΔΔ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆⵠᐃⵠ, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ᐃΔⲆⵠΔ:
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⲆᐃⲆⲆ, 1, ⵠⵠᐃⵠ, ΔᐃΔᐃⵠ, 10),
					"ⵠᐃⵠ": ΔᐃΔᐃᐃ,
					angle: ⵠⵠᐃⵠ
				};
				this.ⲆⵠᐃⲆ = ᐃᐃⲆⲆⲆⵠᐃΔᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9, 1.05, .9, .2, .2);
				break;
			case ᐃⲆΔ.ΔⲆᐃΔⲆ:
				this.ⲆⵠᐃⲆ = ⲆᐃⲆⲆⵠⲆΔᐃᐃ;
				this.rotate = 0;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆⵠᐃⵠ, ΔΔⵠΔⵠ, 1, ᐃΔⵠⵠ, 10, 10),
					"ⵠᐃⵠ": ΔᐃΔΔΔ,
					angle: 0
				};
				break;
			case ᐃⲆΔ.ⵠᐃΔⲆΔ:
				this.ⲆⵠᐃⲆ = ᐃΔᐃᐃⲆᐃΔⲆⲆ;
				this.rotate = 0;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆᐃⲆΔ, ΔⲆᐃ, 1, ΔΔⵠᐃ, 10, ⲆΔⵠᐃⲆ),
					"ⵠᐃⵠ": ᐃⵠⲆΔⵠ,
					angle: 0
				};
				break;
			case ᐃⲆΔ.ⵠⲆⵠⲆⲆ:
				this.ⲆⵠᐃⲆ = ᐃΔᐃᐃⵠⲆⵠΔⵠ;
				this.rotate = Δⵠⵠ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔⲆΔ, 1, 0, 10, ⲆᐃᐃᐃⲆ),
					"ⵠᐃⵠ": false,
					angle: Δⵠⵠ
				};
				break;
			case ᐃⲆΔ.ᐃΔᐃⵠⲆ:
				this.ⲆⵠᐃⲆ = ᐃⵠⲆᐃΔΔⲆⵠΔ;
				this.rotate = 0;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ⲆⲆΔᐃ, 0, ⵠΔⲆⵠᐃ, 10),
					"ⵠᐃⵠ": ⲆΔᐃⵠⲆ,
					angle: ΔΔᐃ
				};
				break;
			case ᐃⲆΔ.ⲆⲆᐃΔⵠ:
				this.ⲆⵠᐃⲆ = ⲆⵠⲆⵠᐃⵠᐃⲆⲆ;
				this.rotate = ΔΔⵠᐃ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆᐃⲆᐃΔ, ⲆΔⵠⲆ, 1, 0, ⲆΔⵠᐃⲆ, 10),
					"ⵠᐃⵠ": ΔᐃⲆⵠⲆ,
					angle: ⲆΔᐃ
				};
				break;
			case ᐃⲆΔ.ⵠⵠⲆΔΔ:
				this.ᐃᐃᐃᐃᐃ = ⵠᐃⲆΔΔⵠΔⲆΔ;
				this.ⵠᐃΔⵠΔ = ᐃᐃⲆⵠᐃⵠΔⵠⲆ;
				this.rotate = 0;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆΔᐃⵠⲆ, 1, ᐃⵠ, ΔⲆᐃⲆ, 10, ⵠΔⲆⵠᐃ),
					"ⵠᐃⵠ": false,
					angle: ᐃΔⵠⵠ
				};
				break;
			case ᐃⲆΔ.ⵠΔⲆᐃⵠ:
				this.ⲆⵠᐃⲆ = ⲆᐃᐃⵠΔⵠΔⲆᐃ;
				this.ΔΔΔ = Math.floor(this.x / 100);
				this.ᐃⲆ = Math.floor(this.y / ⲆΔᐃⲆⵠ);
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃΔᐃᐃ, 1, 1, 0, ⲆⵠⲆⵠᐃ, 10),
					"ⵠᐃⵠ": ΔⵠⵠΔⲆ,
					angle: ᐃΔⵠⵠ
				};
				this.opacity = 1;
				this.ⵠᐃⲆΔⵠ = ⲆᐃΔⲆᐃᐃᐃ;
				break;
			case ᐃⲆΔ.ᐃⵠΔᐃΔ:
				this.ⲆⵠᐃⲆ = ΔΔⲆΔⲆᐃⵠΔⵠ;
				this.ⵠΔᐃⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1.15, 1, .3, .3);
				this.color = 0;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, 1, 1, 0, 10, ⲆᐃᐃᐃⲆ),
					"ⵠᐃⵠ": false,
					angle: 0
				};
				break;
			case ᐃⲆΔ.ⵠᐃⲆᐃᐃ:
			case ᐃⲆΔ.ΔᐃΔⵠΔ:
			case ᐃⲆΔ.ᐃᐃᐃⵠⵠ:
			case ᐃⲆΔ.ⲆΔⲆⵠⲆ:
			case ᐃⲆΔ.ΔⵠⲆΔᐃ:
				this.ⲆⵠᐃⲆ = ⵠΔᐃⵠΔⵠⲆ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ⵠⵠⲆΔ, ⵠⵠᐃᐃΔ, 10, 10),
					"ⵠᐃⵠ": ᐃⲆⲆΔΔ,
					angle: 0
				};
				break;
			case ᐃⲆΔ.ⲆΔᐃΔΔ:
				this.ⲆⵠᐃⲆ = ⵠΔᐃⵠΔⵠⲆ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆΔᐃⵠⲆ, 1, 1, ⵠⵠᐃᐃΔ, 10, ⵠΔⲆⵠᐃ),
					"ⵠᐃⵠ": ⲆᐃⲆᐃΔ,
					angle: ΔⲆᐃⲆ
				};
				this.ⵠᐃⲆΔⵠ = ⲆᐃΔⲆᐃᐃᐃ;
				break;
			case ᐃⲆΔ.ⲆΔᐃⲆᐃ:
			case ᐃⲆΔ.ᐃᐃᐃΔⲆ:
			case ᐃⲆΔ.ΔΔⵠⵠⵠ:
			case ᐃⲆΔ.ΔⲆΔΔᐃ:
			case ᐃⲆΔ.ΔΔⵠΔⲆ:
			case ᐃⲆΔ.ᐃⵠⵠⲆⲆ:
			case ᐃⲆΔ.Δᐃⵠⵠᐃ:
			case ᐃⲆΔ.ⲆΔⵠΔⵠ:
			case ᐃⲆΔ.Δⵠⵠᐃⵠ:
			case ᐃⲆΔ.ⲆᐃⵠⲆΔ:
			case ᐃⲆΔ.ⲆⵠΔⲆᐃ:
			case ᐃⲆΔ.ΔⲆⲆⵠᐃ:
				this.ⲆⵠᐃⲆ = ⵠΔᐃⵠΔⵠⲆ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠᐃⵠᐃ, 1, ⵠⵠⲆ, 0, ΔⲆⵠΔᐃ, ⲆⵠΔⲆⲆ),
					"ⵠᐃⵠ": ⲆᐃⲆᐃΔ,
					angle: ΔⵠⲆΔ
				};
				this.ⵠᐃⲆΔⵠ = ⵠᐃⲆΔⵠ;
				break;
			case ᐃⲆΔ.ⵠᐃᐃⲆⵠ:
				this.ⲆⵠᐃⲆ = ᐃⵠⵠΔⵠᐃᐃᐃΔ;
				this.opacity = ⵠⵠⲆ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, 1, 1, 0, ⲆᐃᐃᐃⲆ, ᐃΔᐃᐃⵠ),
					"ⵠᐃⵠ": false,
					angle: Δⵠⵠ
				};
				var ⲆᐃΔᐃΔⵠⵠ = this.angle % (Math.PI / ΔᐃⵠⲆ);
				Math.PI / ᐃΔΔΔ > ⲆᐃΔᐃΔⵠⵠ ? this.angle -= ⲆᐃΔᐃΔⵠⵠ : this.angle += Math.PI / ⲆᐃⲆᐃ - ⲆᐃΔᐃΔⵠⵠ;
				break;
			case ᐃⲆΔ.ⵠⲆΔⲆⲆ:
				this.ⲆⵠᐃⲆ = ᐃΔΔΔΔⵠⲆⲆᐃ;
				this.angle = ᐃⲆⵠᐃ * (Math.random() * Math.PI);
				break;
			case ᐃⲆΔ.ᐃΔⲆᐃᐃⵠⲆ:
				this.ⲆⵠᐃⲆ = ΔⵠΔΔⵠⵠΔⲆⲆ;
				this.angle = Math.random() * Math.PI * 2;
				break;
			case ᐃⲆΔ.ⲆᐃΔⲆᐃⵠⲆ:
				this.ⲆⵠᐃⲆ = ⵠⵠΔⲆⵠᐃΔᐃⲆ;
				this.angle = Math.PI * Math.random() * ᐃⲆⲆΔ;
				break;
			case ᐃⲆΔ.ⲆⲆⲆᐃᐃⲆΔ:
				this.ⲆⵠᐃⲆ = ⲆᐃⲆΔⲆⲆᐃᐃⲆ;
				this.angle = Math.random() * Math.PI * ⵠⲆⵠᐃ;
				break;
			case ᐃⲆΔ.ᐃᐃΔᐃⵠⵠΔ:
				this.ⲆⵠᐃⲆ = ᐃⲆⵠᐃᐃᐃⵠᐃᐃ;
				this.angle = Math.random() * Math.PI * 2;
				break;
			case ᐃⲆΔ.ΔⵠΔⲆᐃ:
				this.ⵠᐃⵠ = function(ᐃᐃⵠΔ) {
					this.lock = this.info & 8192 ? ᐃⲆⵠΔ : ΔⵠⲆⲆ;
					this.info = this.info & 8191;
					this.action = ᐃᐃⵠΔ
				};
				this.ⲆⵠᐃⲆ = ⵠⲆⲆᐃⵠⲆΔⵠᐃ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, ᐃᐃΔᐃ, 1, 0, ⲆᐃΔⵠⵠ, Ⲇⵠᐃⵠᐃ),
					"ⵠᐃⵠ": false,
					angle: ⲆⵠⲆ
				};
				this.lock = Δⵠⵠ;
				this.ⵠᐃⵠ(this.action);
				break;
			case ᐃⲆΔ.ⲆⵠⵠⲆⲆ:
			case ᐃⲆΔ.ΔⲆΔⵠⵠ:
			case ᐃⲆΔ.ⵠⲆᐃᐃᐃ:
			case ᐃⲆΔ.ᐃⲆⲆⵠⲆ:
			case ᐃⲆΔ.ᐃᐃΔΔΔ:
			case ᐃⲆΔ.ΔⵠᐃⲆⵠ:
			case ᐃⲆΔ.ⲆΔᐃΔⵠ:
			case ᐃⲆΔ.ΔᐃᐃⲆⵠ:
			case ᐃⲆΔ.ⲆⲆⲆⵠⵠ:
			case ᐃⲆΔ.ⵠⲆᐃΔᐃ:
			case ᐃⲆΔ.ΔⲆⵠᐃΔ:
			case ᐃⲆΔ.ⲆᐃᐃⲆⵠ:
				this.ⲆⵠᐃⲆ = ⵠᐃΔᐃⵠⵠᐃΔΔ;
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⵠⵠⲆ, ⲆΔᐃⲆ, 0, ᐃⵠⲆᐃⵠ, ΔⲆⵠΔᐃ),
					"ⵠᐃⵠ": ΔⲆᐃⲆΔ,
					angle: 0
				};
				this.ⵠᐃⲆΔⵠ = ⵠᐃⲆΔⵠ;
				break;
			case ᐃⲆΔ.ⲆⲆᐃⲆⵠ:
				this.ᐃᐃᐃᐃᐃ = ⲆΔΔᐃᐃⵠⲆⵠᐃ;
				this.ⲆⵠᐃⲆ = ΔⲆⵠᐃⵠⲆᐃⵠᐃ;
				this.ⵠᐃΔⵠΔ = ⵠⲆⵠΔⵠΔⵠΔᐃ;
				this.ᐃⵠⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1.23, 1.18, .02, .02);
				this.ⵠΔᐃⲆⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1.23, 1.18, .04, .04);
				this.ⲆⲆᐃ = {
					"ᐃⲆⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ΔΔᐃᐃ, ΔⵠⲆΔ, 10, ⲆⲆᐃⵠΔ),
					"ⵠᐃⵠ": ΔⲆᐃⲆΔ,
					angle: ΔⵠⲆΔ
				};
				this.ⵠᐃⵠ = function(ᐃᐃⵠΔ) {
					this.action = ᐃᐃⵠΔ
				};
				break
		}
	}

	function ⲆΔΔΔᐃΔⲆⲆΔ(ⵠⵠᐃⵠⲆΔᐃ) {
		this.mode = ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ;
		this.ⵠⵠᐃⵠⲆΔᐃ = ⵠⵠᐃⵠⲆΔᐃ;
		this.ᐃⵠⵠΔΔ = ⲆⵠⲆ;
		this.ΔⵠⲆᐃⲆⵠΔ = 6;
		this.ᐃⵠⵠΔ = [];
		this.ⵠᐃⲆ = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔΔᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔᐃΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆᐃⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃⲆⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⵠΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⲆⵠⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆΔⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆᐃᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃΔⲆᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆᐃᐃⲆΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔᐃⵠⵠΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠᐃΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⲆⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆΔᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃΔⵠΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.Δᐃⵠⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.Δⵠⵠᐃⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⵠⲆΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃⲆᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠⵠⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔΔᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⵠⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃⲆⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃᐃⲆⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃΔᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⵠᐃΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃⲆⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔΔΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆᐃⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃᐃΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆⵠΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⲆᐃᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⲆΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠΔⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆᐃΔⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃΔⲆΔ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠⲆⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃΔⵠ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆΔⵠᐃ] = [];
		this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃΔ] = [];
		this.ΔⲆΔⵠΔ = [];
		this.Δᐃᐃⵠⵠ = 260;
		this.ΔⲆᐃⵠⵠ = 260;
		this.ᐃⲆΔΔⵠⲆΔ = 100;
		this.ⵠⲆⵠᐃⲆΔᐃ = 100;
		this.w = this.Δᐃᐃⵠⵠ * this.ᐃⲆΔΔⵠⲆΔ;
		this.ΔᐃⲆ = this.ΔⲆᐃⵠⵠ * this.ⵠⲆⵠᐃⲆΔᐃ;
		this.ᐃⵠᐃΔⲆ = new ᐃⵠᐃΔⲆ.ⲆᐃΔΔⵠΔⵠ;
		this.ⵠⵠⵠⲆⲆ = [];
		this.ᐃⲆᐃⵠ = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, 1, 0, ΔᐃᐃⲆ, ΔΔᐃⵠ);
		this.transition = false;
		this.ᐃⵠΔⲆᐃ = [];
		this.ΔⵠᐃΔⲆ = 0;
		this.ΔᐃⲆⵠⲆΔⵠ = ᐃⲆⵠΔ;
		this.ΔⵠᐃⲆⲆⵠⵠ = 2;
		this.ⵠΔⲆΔⵠⲆΔ = 3;
		this.ⲆⵠᐃⵠΔ = 4;
		this.ⵠΔⲆᐃⵠⵠⵠ = 10;
		this.ᐃⵠΔⲆᐃ[this.ΔⵠᐃΔⲆ] = {
			"ⵠᐃⲆⵠⲆⵠΔ": ⵠⲆⲆ,
			"ⲆⲆΔ": [19, 58, 43],
			"ⲆΔⵠ": [4, 43, 48],
			"ⲆⲆⵠᐃΔ": [ⵠ[411], ⵠ[482]]
		};
		this.ᐃⵠΔⲆᐃ[this.ⲆⵠᐃⵠΔ] = {
			"ⵠᐃⲆⵠⲆⵠΔ": 0,
			"ⲆⲆΔ": [11, 106, 132],
			"ⲆΔⵠ": [9, 55, 63],
			"ⲆⲆⵠᐃΔ": [ⵠ[224], ⵠ[492]]
		};
		this.ᐃⵠΔⲆᐃ[this.ΔᐃⲆⵠⲆΔⵠ] = {
			"ⵠᐃⲆⵠⲆⵠΔ": ΔΔⲆᐃ,
			"ⲆⲆΔ": [235, 242, 240],
			"ⲆΔⵠ": [19, 97, 103],
			"ⲆⲆⵠᐃΔ": [ⵠ[16], ⵠ[37]]
		};
		this.ᐃⵠΔⲆᐃ[this.ΔⵠᐃⲆⲆⵠⵠ] = {
			"ⲆⲆⵠᐃΔ": ["#2D2017", "#031C1E"],
			"ⵠᐃⲆⵠⲆⵠΔ": ⵠⵠⲆⲆ,
			"ⲆΔⵠ": [3, 28, 30],
			"ⲆⲆΔ": [45, 32, 23]
		};
		this.ᐃⵠΔⲆᐃ[this.ⵠΔⲆΔⵠⲆΔ] = {
			"ⲆⲆΔ": [74, 74, 74],
			"ⵠᐃⲆⵠⲆⵠΔ": ⵠⵠᐃⵠ,
			"ⲆⲆⵠᐃΔ": ["#4A4A4A", "#183D3C"],
			"ⲆΔⵠ": [24, 61, 60]
		};
		this.ᐃⵠΔⲆᐃ[this.ⵠΔⲆᐃⵠⵠⵠ] = {
			"ⵠᐃⲆⵠⲆⵠΔ": ΔⲆᐃⲆ,
			"ⲆⲆⵠᐃΔ": ["#EBD8A6", "#093D38"],
			"ⲆΔⵠ": [9, 61, 56],
			"ⲆⲆΔ": [235, 216, 166]
		};
		this.ⲆⲆΔᐃᐃΔᐃ = function(ᐃⲆⵠ, ᐃᐃΔ, ᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ, ⵠⵠΔ) {
			this.x1 = ᐃΔⵠΔᐃ * ᐃᐃΔ;
			this.y1 = ᐃⲆᐃ * ⵠᐃⵠⵠΔ;
			this.w = ᐃᐃⲆ * ᐃⵠᐃⲆⲆⲆᐃ;
			this.ΔᐃⲆ = ⲆⲆⵠⵠⲆ * ΔᐃⲆ;
			this.x2 = 100 * (ᐃᐃΔ + ᐃᐃⲆ);
			this.y2 = ᐃΔⵠΔᐃ * (ᐃⲆᐃ + ΔᐃⲆ);
			this.ᐃⲆⵠ = ᐃⲆⵠ;
			ⵠⵠΔ === undefined ? this.ⵠⵠΔ = 15 : this.ⵠⵠΔ = ⵠⵠΔ
		};

		function ΔⲆⲆᐃⲆΔΔⲆᐃ(ⵠⲆᐃΔ, ᐃΔⲆⲆᐃⵠᐃ, ⲆⵠᐃⵠΔⲆⵠ, ⲆᐃⵠΔⲆ, ⵠΔⵠⵠᐃⵠΔ) {
			for (var ᐃⲆ = 0; ⵠΔⵠⵠᐃⵠΔ > ᐃⲆ; ᐃⲆ++) {
				if (ᐃⵠ === ΔⲆⵠΔⵠⲆᐃΔⵠ(ⵠⲆᐃΔ, ᐃΔⲆⲆᐃⵠᐃ, ⲆⵠᐃⵠΔⲆⵠ, ⲆᐃⵠΔⲆ, 8)) break
			}
			if (ⵠΔⵠⵠᐃⵠΔ === ᐃⲆ) return 0;
			return ⵠⵠⲆ
		}

		function ᐃΔᐃΔΔⲆⵠᐃᐃ(ᐃⵠᐃⵠⵠⵠᐃ, ᐃΔΔⵠᐃ, ⵠᐃⵠΔⲆ) {
			var stop = 0;
			var ᐃΔⲆᐃⲆ = ᐃΔΔⵠᐃ;
			for (var ᐃⲆᐃ = ⵠᐃⵠΔⲆ; ᐃⲆᐃ < ⲆΔΔ.ΔⲆᐃⵠⵠ; ᐃⲆᐃ++) {
				for (var ᐃᐃΔ = ᐃΔΔⵠᐃ; ᐃᐃΔ < ⲆΔΔ.Δᐃᐃⵠⵠ; ᐃᐃΔ++) {
					if (ⵠᐃⵠΔⲆ === ᐃⲆᐃ) ᐃΔⲆᐃⲆ = Math.max(ᐃᐃΔ, ᐃΔⲆᐃⲆ);
					if (ᐃᐃΔ > ᐃΔⲆᐃⲆ) break;
					if (ᐃⵠⵠ === ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆᐃ][ᐃᐃΔ]) break;
					ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆᐃ][ᐃᐃΔ] = 1
				}
				if (ᐃᐃΔ < ᐃΔⲆᐃⲆ) break
			}
			ⲆΔΔ.ⵠⵠⵠⲆⲆ.push(new ⲆΔΔ.ⲆⲆΔᐃᐃΔᐃ(ⲆΔΔ.ⲆⵠᐃⵠΔ, ᐃΔΔⵠᐃ, ⵠᐃⵠΔⲆ, ᐃΔⲆᐃⲆ - ᐃΔΔⵠᐃ + ⲆΔⵠⲆ, ᐃⲆᐃ - ⵠᐃⵠΔⲆ, 15))
		}

		function ΔⲆⵠΔⵠⲆᐃΔⵠ(ⵠⲆᐃΔ, ᐃΔⲆⲆᐃⵠᐃ, ⲆⵠᐃⵠΔⲆⵠ, ⲆᐃⵠΔⲆ, ⵠᐃᐃⲆⵠᐃΔ) {
			var ᐃᐃⲆ = ᐃΔⲆⲆᐃⵠᐃ + Math.floor(ⲆᐃⵠΔⲆ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
			var ΔᐃⲆ = ⲆⵠᐃⵠΔⲆⵠ + Math.floor(ⲆᐃⵠΔⲆ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
			var ⲆᐃΔᐃ = 10 + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * (ⲆΔΔ.Δᐃᐃⵠⵠ - ᐃᐃⲆ - ΔΔⵠΔ));
			var Δᐃᐃⵠ = ⲆΔⵠᐃⲆ + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * (ⲆΔΔ.ΔⲆᐃⵠⵠ - ΔᐃⲆ - 20));
			var ⵠᐃⵠⵠ = ⲆᐃΔᐃ + ᐃᐃⲆ;
			var ΔⲆⲆⲆ = Δᐃᐃⵠ + ΔᐃⲆ;
			for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < ⲆΔΔ.ⵠⵠⵠⲆⲆ.length; ᐃⲆ++) {
				var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
				if (ᐃⵠ === Ⲇᐃⵠ.ⲆⵠⵠⵠΔⵠΔ(ⲆᐃΔᐃ, ⵠᐃⵠⵠ, Δᐃᐃⵠ, ΔⲆⲆⲆ, ΔΔΔΔ.x1 / 100 - ⵠᐃᐃⲆⵠᐃΔ, ΔΔΔΔ.x2 / 100 + ⵠᐃᐃⲆⵠᐃΔ, ΔΔΔΔ.y1 / ⲆᐃᐃΔᐃⲆᐃ - ⵠᐃᐃⲆⵠᐃΔ, ΔΔΔΔ.y2 / ⲆΔⲆᐃᐃⲆⵠ + ⵠᐃᐃⲆⵠᐃΔ)) return 0
			}
			ⲆΔΔ.ⵠⵠⵠⲆⲆ.push(new ⲆΔΔ.ⲆⲆΔᐃᐃΔᐃ(ⵠⲆᐃΔ, ⲆᐃΔᐃ, Δᐃᐃⵠ, ᐃᐃⲆ, ΔᐃⲆ, 15));
			return ΔᐃᐃⲆ
		}
		this.ΔΔΔⲆᐃ = -1e6;
		this.ⲆⲆⵠⵠΔ = this.ΔΔΔⲆᐃ;
		this.ᐃⲆⲆᐃᐃ = this.ΔΔΔⲆᐃ;
		this.ᐃⵠᐃΔΔ = this.ΔΔΔⲆᐃ;
		this.ⵠΔⲆᐃⵠᐃⵠ = this.ΔΔΔⲆᐃ;
		this.ⵠⲆⲆΔᐃᐃᐃ = this.ΔΔΔⲆᐃ;
		this.ⵠⵠΔΔⲆ = this.ΔΔΔⲆᐃ;
		this.ⵠΔᐃᐃⵠⲆΔⲆΔ = function(ΔⲆⵠΔ) {
			var ᐃᐃΔ = ΔⲆⵠΔ.r.x;
			var ᐃⲆᐃ = ΔⲆⵠΔ.r.y;
			var ᐃⲆ = Math.floor(ᐃⲆᐃ / 100);
			var ΔΔΔ = Math.floor(ᐃᐃΔ / 100);
			ΔⲆⵠΔ.ⲆⲆⵠⵠΔ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ΔⲆⵠΔ.ᐃⲆⲆᐃᐃ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ΔⲆⵠΔ.ᐃⵠᐃΔΔ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ΔⲆⵠΔ.ⵠΔⲆᐃⵠᐃⵠ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ΔⲆⵠΔ.ⵠⵠΔΔⲆ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ΔⲆⵠΔ.ⲆⲆΔⲆⵠⲆⵠ = ⲆΔΔ.ΔΔΔⲆᐃ;
			for (var ΔᐃⲆᐃ = ΔⵠⲆⲆ; ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ; ΔᐃⲆᐃ++) {
				if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃΔⲆ) {
					var ΔⵠⵠᐃᐃⲆⵠ = ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ);
					ΔⲆⵠΔ.ⵠΔⲆᐃⵠᐃⵠ = Math.max(ΔⲆⵠΔ.ⵠΔⲆᐃⵠᐃⵠ, ΔⵠⵠᐃᐃⲆⵠ);
					ΔⵠⵠᐃᐃⲆⵠ > 0 && 1 === ⲆΔΔ.ᐃΔⵠΔᐃᐃⲆᐃΔ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ) && (ΔⲆⵠΔ.ⲆⲆΔⲆⵠⲆⵠ = ΔᐃⵠΔ)
				} else if (ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ === ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ) {
					ΔⲆⵠΔ.ⲆⲆⵠⵠΔ = Math.max(ΔⲆⵠΔ.ⲆⲆⵠⵠΔ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ))
				} else if (ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ === ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ) {
					ΔⲆⵠΔ.ᐃⲆⲆᐃᐃ = Math.max(ΔⲆⵠΔ.ᐃⲆⲆᐃᐃ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ))
				} else if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ) {
					ΔⲆⵠΔ.ᐃⵠᐃΔΔ = Math.max(ΔⲆⵠΔ.ᐃⵠᐃΔΔ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ))
				} else ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ === ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ && (ΔⲆⵠΔ.ⵠⵠΔΔⲆ = Math.max(ΔⲆⵠΔ.ⵠⵠΔΔⲆ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ)))
			}
			if (ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ][ⵠ[49]]) ΔⲆⵠΔ.ⲆⲆΔⲆⵠⲆⵠ = 1;
			if (ⲆΔΔ.ΔᐃⵠᐃᐃΔⵠⲆΔ(ΔΔΔ, ᐃⲆ)) ΔⲆⵠΔ.ⵠⲆⲆΔᐃᐃᐃ = ΔⲆⵠΔ.ΔΔΔⲆᐃ;
			else if (ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ][ⵠ[293]] || ΔⲆⵠΔ.ⲆⲆⵠⵠΔ < 0 && ΔᐃⲆΔ > ΔⲆⵠΔ.ᐃⵠᐃΔΔ && ΔⲆⵠ > ΔⲆⵠΔ.ⵠΔⲆᐃⵠᐃⵠ && ΔⲆⵠΔ.ⲆⲆΔⲆⵠⲆⵠ < 0 && ΔⲆⵠΔ.ⵠⵠΔΔⲆ < 0 && ΔⲆⵠΔ.ᐃⲆⲆᐃᐃ < 0) ΔⲆⵠΔ.ⵠⲆⲆΔᐃᐃᐃ = 1;
			else ΔⲆⵠΔ.ⵠⲆⲆΔᐃᐃᐃ = ΔⲆⵠΔ.ΔΔΔⲆᐃ
		};
		this.ⲆΔⲆΔΔᐃⲆΔⲆ = function(ᐃᐃΔ, ᐃⲆᐃ) {
			ⲆΔΔ.ⲆⲆⵠⵠΔ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ⲆΔΔ.ᐃⲆⲆᐃᐃ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ⲆΔΔ.ᐃⵠᐃΔΔ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ⲆΔΔ.ⵠⵠΔΔⲆ = ⲆΔΔ.ΔΔΔⲆᐃ;
			ⲆΔΔ.ⵠΔⲆᐃⵠᐃⵠ = ⲆΔΔ.ΔΔΔⲆᐃ;
			for (var ΔᐃⲆᐃ = ᐃⵠΔ; ⲆΔΔ.ⲆⵠᐃⵠΔ !== ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ; ΔᐃⲆᐃ++) {
				if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃΔⲆ) ⲆΔΔ.ⵠΔⲆᐃⵠᐃⵠ = Math.max(ⲆΔΔ.ⵠΔⲆᐃⵠᐃⵠ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ));
				else if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ) ⲆΔΔ.ⲆⲆⵠⵠΔ = Math.max(ⲆΔΔ.ⲆⲆⵠⵠΔ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ));
				else if (ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ === ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ) ⲆΔΔ.ᐃⲆⲆᐃᐃ = Math.max(ⲆΔΔ.ᐃⲆⲆᐃᐃ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ));
				else if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ) {
					ⲆΔΔ.ᐃⵠᐃΔΔ = Math.max(ⲆΔΔ.ᐃⵠᐃΔΔ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ))
				} else if (ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔᐃⲆᐃ].ᐃⲆⵠ === ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ) ⲆΔΔ.ⵠⵠΔΔⲆ = Math.max(ⲆΔΔ.ⵠⵠΔΔⲆ, ⲆΔΔ.ᐃⵠᐃΔᐃ(ΔᐃⲆᐃ, ᐃᐃΔ, ᐃⲆᐃ))
			}
			if (ⲆΔᐃ > ⲆΔΔ.ⲆⲆⵠⵠΔ && 0 > ⲆΔΔ.ⵠⵠΔΔⲆ && ⲆΔΔ.ⵠΔⲆᐃⵠᐃⵠ < ⵠⵠᐃᐃΔ && ⲆΔΔ.ⵠⵠΔΔⲆ < 0 && ⲆΔΔ.ᐃⲆⲆᐃᐃ < 0) ⲆΔΔ.ⵠⲆⲆΔᐃᐃᐃ = ⵠᐃΔᐃ;
			else ⲆΔΔ.ⵠⲆⲆΔᐃᐃᐃ = ⲆΔΔ.ΔΔΔⲆᐃ
		};
		this.ᐃΔⵠΔᐃᐃⲆᐃΔ = function(ΔΔⵠⲆⵠⵠΔ, ᐃᐃΔ, ᐃⲆᐃ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔΔⵠⲆⵠⵠΔ];
			var ⲆⵠⲆᐃⵠᐃⲆ = 0;
			ⲆᐃΔᐃ = ΔΔΔΔ.x1 + 30 + ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) === 0 ? 150 : ⲆΔᐃ);
			var ⲆΔⲆᐃ = ᐃᐃΔ - ⲆᐃΔᐃ;
			(ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠⲆⵠⲆᐃ) > 0 && ⵠⵠᐃᐃΔ < ⲆΔⲆᐃ && ⲆΔⲆᐃ < 320 && (ⲆⵠⲆᐃⵠᐃⲆ = ΔᐃⵠΔ);
			Δᐃᐃⵠ = ΔΔΔΔ.y1 + 250 + ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) === ΔⵠⲆΔ ? 150 : ΔⵠⲆΔ);
			ⲆΔⲆᐃ = ᐃⲆᐃ - Δᐃᐃⵠ;
			if (ᐃΔⵠⵠ < (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠᐃᐃⲆΔ) && 0 < ⲆΔⲆᐃ && 320 > ⲆΔⲆᐃ) ⲆⵠⲆᐃⵠᐃⲆ = ΔΔᐃᐃ;
			ⵠᐃⵠⵠ = ΔΔΔΔ.x2 + 80 + (0 === (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ) ? -200 : 0);
			ⲆΔⲆᐃ = ⵠᐃⵠⵠ - ᐃᐃΔ;
			if (0 < (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ⵠΔΔⵠⵠ) && 0 < ⲆΔⲆᐃ && 320 > ⲆΔⲆᐃ) ⲆⵠⲆᐃⵠᐃⲆ = 1;
			ΔⲆⲆⲆ = ΔΔΔΔ.y2 - 200 + ((ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ) === ΔΔⵠᐃ ? -200 : 0);
			ⲆΔⲆᐃ = ΔⲆⲆⲆ - ᐃⲆᐃ;
			if (0 < (ΔΔΔΔ.ⵠⵠΔ & ⲆⵠΔΔ.ᐃⵠᐃⲆᐃ) && ⲆΔⲆᐃ > ΔⵠⲆΔ && ⲆΔⲆᐃ < 320) ⲆⵠⲆᐃⵠᐃⲆ = ⵠᐃΔᐃ;
			if (ⲆᐃΔᐃ <= ᐃᐃΔ && ᐃᐃΔ <= ⵠᐃⵠⵠ && Δᐃᐃⵠ <= ᐃⲆᐃ && ΔⲆⲆⲆ >= ᐃⲆᐃ) return ⲆⵠⲆᐃⵠᐃⲆ;
			return ΔΔⲆᐃ
		};
		this.ᐃⵠᐃΔᐃ = function(ΔΔⵠⲆⵠⵠΔ, ᐃᐃΔ, ᐃⲆᐃ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ΔΔⵠⲆⵠⵠΔ];
			ⲆᐃΔᐃ = ΔΔΔΔ.x1 + 30;
			Δᐃᐃⵠ = ΔΔΔΔ.y1 + 250;
			ⵠᐃⵠⵠ = ΔΔΔΔ.x2 + 80;
			ΔⲆⲆⲆ = ΔΔΔΔ.y2 - 200;
			if (ᐃᐃΔ >= ⲆᐃΔᐃ && ⵠᐃⵠⵠ >= ᐃᐃΔ && ᐃⲆᐃ >= Δᐃᐃⵠ && ΔⲆⲆⲆ >= ᐃⲆᐃ) return Math.min(ᐃᐃΔ - ⲆᐃΔᐃ, ⵠᐃⵠⵠ - ᐃᐃΔ, ᐃⲆᐃ - Δᐃᐃⵠ, ΔⲆⲆⲆ - ᐃⲆᐃ);
			var ⵠⵠΔᐃ = -1e6;
			if (ᐃᐃΔ - ⲆᐃΔᐃ < ᐃⵠΔ) ⵠⵠΔᐃ = Math.max(ⵠⵠΔᐃ, ᐃᐃΔ - ⲆᐃΔᐃ);
			else if (ⵠᐃⵠⵠ - ᐃᐃΔ < 0) ⵠⵠΔᐃ = Math.max(ⵠⵠΔᐃ, ⵠᐃⵠⵠ - ᐃᐃΔ);
			ⲆⲆⵠⵠⵠⵠⵠ = -1e6;
			if (Δᐃᐃⵠ > ᐃⲆᐃ || ᐃⲆᐃ > ΔⲆⲆⲆ) {
				ᐃⲆᐃ - Δᐃᐃⵠ < 0 ? ⲆⲆⵠⵠⵠⵠⵠ = Math.max(ⲆⲆⵠⵠⵠⵠⵠ, ᐃⲆᐃ - Δᐃᐃⵠ) : ⲆⲆⵠⵠⵠⵠⵠ = Math.max(ⲆⲆⵠⵠⵠⵠⵠ, ΔⲆⲆⲆ - ᐃⲆᐃ);
				if (-1e6 !== ⵠⵠΔᐃ && -1e6 !== ⲆⲆⵠⵠⵠⵠⵠ) ⵠⵠΔᐃ = Math.min(ⵠⵠΔᐃ, ⲆⲆⵠⵠⵠⵠⵠ);
				else ⵠⵠΔᐃ = ⲆⲆⵠⵠⵠⵠⵠ
			}
			return ⵠⵠΔᐃ
		};

		function ᐃⵠⲆΔⵠⲆΔΔΔ(ⲆᐃᐃⲆ, ᐃᐃⲆⲆ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃᐃⲆⲆ];
			for (var ΔᐃⲆᐃ = Δⵠⵠ, ᐃᐃⲆⲆΔ = 0; ⲆᐃᐃⲆ > ΔᐃⲆᐃ && 1e4 > ᐃᐃⲆⲆΔ; ᐃᐃⲆⲆΔ++) {
				var ᐃⲆᐃ = ΔΔΔΔ.y1 + ΔΔΔΔ.ΔᐃⲆ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get();
				var ᐃᐃΔ = ΔΔΔΔ.x1 + ΔΔΔΔ.w * ⲆΔΔ.ᐃⵠᐃΔⲆ.get();
				var ⲆⵠⲆᐃ = Math.floor(ᐃⲆᐃ / 100);
				var ΔΔΔⲆ = Math.floor(ᐃᐃΔ / 100);
				var ⵠⵠΔᐃ = ⲆΔΔ.ᐃⵠᐃΔᐃ(ᐃᐃⲆⲆ, ΔΔΔⲆ * ΔΔⲆⵠⲆ + 50, ⲆⵠⲆᐃ * ᐃΔᐃⵠⵠ + 50);
				if (600 > ⵠⵠΔᐃ) continue;
				var ok = 1;
				for (var ᐃⲆ = ⲆⵠⲆᐃ - 4; ᐃᐃΔᐃ === ok && ᐃⲆ <= ⲆⵠⲆᐃ + Ⲇⵠⵠᐃᐃ; ᐃⲆ++) {
					for (var ΔΔΔ = ΔΔΔⲆ - 4; 1 === ok && ΔΔΔⲆ + 4 >= ΔΔΔ; ΔΔΔ++) {
						undefined !== ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] && (ok = 0)
					}
				}
				if (ok === ᐃΔⵠⵠ) continue;
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⵠ[220], ΔᐃⲆᐃ % 6, ⲆⵠⲆ);
				ΔᐃⲆᐃ++
			}
		}

		function ᐃΔᐃᐃⲆᐃⲆⲆΔ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃᐃⲆⲆ];
			var ᐃⲆ = Math.floor(ΔΔΔΔ.y1 / ΔᐃⵠᐃⵠᐃΔ);
			var ΔΔΔ = Math.floor(ΔΔΔΔ.x1 / 100);
			var ΔᐃⲆ = Math.floor(ΔΔΔΔ.ΔᐃⲆ / ⵠᐃⵠⵠᐃΔⲆ);
			var ᐃᐃⲆ = Math.floor(ΔΔΔΔ.w / ᐃⲆⵠᐃⲆ);
			var ⵠⵠᐃⵠⵠ = ᐃⲆ + Math.floor(ΔᐃⲆ / 2);
			var w2 = ΔΔΔ + Math.floor(ᐃᐃⲆ / 2);
			for (var ΔᐃⲆᐃ = ΔᐃⲆΔ; ΔᐃⲆᐃ < 3; ΔᐃⲆᐃ++) {
				var ⲆⵠⲆᐃ = Math.floor(ⵠⵠᐃⵠⵠ - 3 + ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * ⵠⵠⲆΔⵠ);
				var ΔΔΔⲆ = Math.floor(w2 - 3 + ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * ⲆᐃΔᐃᐃ);
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⵠ[153], ΔᐃⲆᐃ, ΔΔᐃᐃ)
			}
			for (var ΔᐃⲆᐃ = ⵠⵠᐃⵠ; ΔᐃⲆᐃ < 80; ΔᐃⲆᐃ++) {
				var ⲆⵠⲆᐃ = Math.floor(ⵠⵠᐃⵠⵠ - 3 + ᐃⲆⵠⲆΔ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
				var ΔΔΔⲆ = Math.floor(w2 - ⵠⲆⵠⵠ + 6 * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⵠ[293], 0, 1) === 1 && ΔⵠᐃΔᐃ.push([ⲆⵠⲆᐃ, ΔΔΔⲆ, 0])
			}
		}

		function ⲆΔᐃⵠᐃⵠⲆ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ) {
			for (var ΔᐃⲆᐃ = 0; ΔᐃⲆᐃ < ΔⵠᐃΔᐃ.length; ΔᐃⲆᐃ++) {
				var ⲆⵠⲆᐃ = ΔⵠᐃΔᐃ[ΔᐃⲆᐃ][ⲆⵠⲆ];
				var ΔΔΔⲆ = ΔⵠᐃΔᐃ[ΔᐃⲆᐃ][1];
				var ᐃΔⲆⵠΔⲆⲆ = ΔⵠᐃΔᐃ[ΔᐃⲆᐃ][2];
				ⲆⵠΔΔⵠΔⵠⵠᐃ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ᐃᐃⲆⲆ, ᐃΔⲆⵠΔⲆⲆ)
			}
		}

		function ᐃΔᐃΔⲆⵠΔ(ᐃⲆ, ΔΔΔ, Δⵠᐃⵠᐃ, ⵠΔᐃⲆⵠⵠΔᐃⵠ, ⲆΔⵠᐃᐃⵠⲆⵠᐃ, ΔⵠᐃΔᐃ, ᐃᐃⲆ, ΔᐃⲆ) {
			var w1 = Math.floor(ᐃᐃⲆ / 2);
			var w2 = Math.max(ⲆΔᐃⲆ, Math.floor(ᐃᐃⲆ / 2));
			var ⲆⲆⵠΔⲆⲆᐃⵠᐃ = Math.floor(ΔᐃⲆ / 2);
			var ⵠⵠᐃⵠⵠ = Math.max(ΔᐃᐃⲆ, Math.floor(ΔᐃⲆ / ⵠⲆⵠᐃ));
			for (var ΔᐃⲆᐃ = 0; Δⵠᐃⵠᐃ > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
				for (var ⲆⵠⲆᐃ = ᐃⲆ - ⲆⲆⵠΔⲆⲆᐃⵠᐃ; ᐃⲆ + ⵠⵠᐃⵠⵠ > ⲆⵠⲆᐃ; ⲆⵠⲆᐃ++) {
					for (var ΔΔΔⲆ = ΔΔΔ - w1; ΔΔΔⲆ < ΔΔΔ + w2; ΔΔΔⲆ++) {
						ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⵠ[293], 0, 1) === 1 && ΔⵠᐃΔᐃ.push([ⲆⵠⲆᐃ, ΔΔΔⲆ, 1])
					}
				}
				ᐃⲆ += ⵠΔᐃⲆⵠⵠΔᐃⵠ;
				ΔΔΔ += ⲆΔⵠᐃᐃⵠⲆⵠᐃ
			}
		}

		function ⲆΔⵠⲆⵠΔᐃ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃᐃⲆⲆ];
			var ᐃⲆ = Math.floor(ΔΔΔΔ.y1 / 100);
			var ΔΔΔ = Math.floor(ΔΔΔΔ.x1 / 100);
			var ΔᐃⲆ = Math.floor(ΔΔΔΔ.ΔᐃⲆ / 100);
			var ᐃᐃⲆ = Math.floor(ΔΔΔΔ.w / ⲆΔⲆᐃᐃⲆⵠ);
			var ⲆⲆΔΔⵠⲆᐃΔΔ = ᐃⲆ + ΔᐃⲆ;
			var ᐃⲆⲆΔΔⲆⵠⵠᐃ = ΔΔΔ + ᐃᐃⲆ;
			var ⲆΔΔᐃⵠᐃⲆ = ΔⵠΔΔ;
			var ΔⲆΔⲆⲆ = ΔᐃⲆ;
			var ⲆⵠⲆᐃ = ᐃⲆ;
			var ΔΔΔⲆ = ΔΔΔ + ⲆⵠⲆⵠᐃ + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * (ᐃᐃⲆ - 20));
			for (var ΔⵠᐃⵠΔ = ΔΔΔⲆ - 4; ΔⵠᐃⵠΔ < ΔΔΔⲆ + 4; ΔⵠᐃⵠΔ++) ΔⲆᐃⵠ(ᐃⲆ - ᐃⵠⵠ, ΔⵠᐃⵠΔ, ⵠ[293], ΔⵠⲆⲆ, 1);
			while (ΔⲆᐃⲆ < ΔⲆΔⲆⲆ) {
				if (ⲆΔΔᐃⵠᐃⲆ === 2) {
					for (var ΔᐃⲆᐃ = 10; ΔᐃⲆᐃ > 1; ΔᐃⲆᐃ--) {
						ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, 1, ΔᐃⵠΔ, 0, ΔⵠᐃΔᐃ, ΔᐃⲆᐃ, 1);
						ΔⲆΔⲆⲆ -= 1;
						ⲆⵠⲆᐃ += 1
					}
					ⲆΔΔᐃⵠᐃⲆ = 0;
					continue
				}
				if (ΔⲆΔⲆⲆ < ⲆⵠΔⲆⲆ) {
					for (var ΔᐃⲆᐃ = ΔΔᐃᐃ; ΔⲆΔⲆⲆ > 0; ΔᐃⲆᐃ++) {
						ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⲆΔᐃⲆ, ΔᐃⵠΔ, ΔΔⵠᐃ, ΔⵠᐃΔᐃ, ΔᐃⲆᐃ, ΔᐃⵠΔ);
						ΔⲆΔⲆⲆ -= 1;
						ⲆⵠⲆᐃ += ΔⲆᐃ
					}
					continue
				}
				if (ⲆΔΔᐃⵠᐃⲆ === ⵠⵠⲆΔ) {
					var ᐃⵠΔᐃⵠᐃⲆ = Math.min(ΔⲆΔⲆⲆ, Math.floor(ⲆΔⵠⲆ + 4 * ⲆΔΔ.ᐃⵠᐃΔⲆ.get()));
					var ᐃᐃⲆ = 1 + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * 4);
					ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ᐃⵠΔᐃⵠᐃⲆ, ⲆΔⵠⲆ, ⵠⵠᐃⵠ, ΔⵠᐃΔᐃ, ᐃᐃⲆ, ᐃᐃⲆ);
					ⲆΔΔᐃⵠᐃⲆ = ⵠⵠᐃᐃΔ;
					ΔⲆΔⲆⲆ -= ᐃⵠΔᐃⵠᐃⲆ;
					ⲆⵠⲆᐃ += ᐃⵠΔᐃⵠᐃⲆ;
					continue
				}
				ⲆΔΔᐃⵠᐃⲆ = 1;
				var ⲆⲆⵠⲆⲆ = Math.floor(ⲆΔⵠⲆ + ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * 2);
				var ⲆⲆⵠⵠⵠⲆⲆ = 1 + Math.floor(4 * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
				if (ΔΔΔ + 16 > ΔΔΔⲆ) {
					ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⲆⲆⵠⲆⲆ, 0, 1, ΔⵠᐃΔᐃ, ⲆⲆⵠⵠⵠⲆⲆ, ⲆⲆⵠⵠⵠⲆⲆ);
					ΔΔΔⲆ += ⲆⲆⵠⲆⲆ
				} else if (ΔΔΔⲆ > ᐃⲆⲆΔΔⲆⵠⵠᐃ - ⲆⵠᐃΔᐃ) {
					ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⲆⲆⵠⲆⲆ, 0, -ⵠⵠⲆΔ, ΔⵠᐃΔᐃ, ⲆⲆⵠⵠⵠⲆⲆ, ⲆⲆⵠⵠⵠⲆⲆ);
					ΔΔΔⲆ -= ⲆⲆⵠⲆⲆ
				} else if (ⲆΔΔ.ᐃⵠᐃΔⲆ.get() > .5) {
					ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⲆⲆⵠⲆⲆ, 0, 1, ΔⵠᐃΔᐃ, ⲆⲆⵠⵠⵠⲆⲆ, ⲆⲆⵠⵠⵠⲆⲆ);
					ΔΔΔⲆ += ⲆⲆⵠⲆⲆ
				} else {
					ᐃΔᐃΔⲆⵠΔ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⲆⲆⵠⲆⲆ, ⵠⵠⲆⲆ, -1, ΔⵠᐃΔᐃ, ⲆⲆⵠⵠⵠⲆⲆ, ⲆⲆⵠⵠⵠⲆⲆ);
					ΔΔΔⲆ -= ⲆⲆⵠⲆⲆ
				}
			}
			for (var ΔⵠᐃⵠΔ = ΔΔΔⲆ - 1; ΔⵠᐃⵠΔ < ΔΔΔⲆ + ᐃⲆⲆΔ; ΔⵠᐃⵠΔ++) ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔⵠᐃⵠΔ, ⵠ[293], 0, ⲆΔⵠⲆ)
		}
		this.ⲆᐃⵠⵠΔᐃⵠ = function(ⵠⲆᐃΔ, ᐃᐃΔ, ᐃⲆᐃ) {
			var ⲆⵠⲆᐃ = ᐃⲆᐃ;
			var ΔΔΔⲆ = ᐃᐃΔ;
			ΔⲆᐃⵠ(ⲆⵠⲆᐃ, ΔΔΔⲆ, ⵠ[398], ⵠⲆᐃΔ, ΔΔⲆΔ);
			for (var ΔᐃⲆᐃ = 0; ΔᐃⲆᐃ < 4; ΔᐃⲆᐃ++) {
				for (var ⲆⲆⲆᐃ = 0; ⲆⲆⲆᐃ < 3; ⲆⲆⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ⲆⲆⲆᐃ, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ⲆⲆⲆᐃ, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], ⵠᐃⲆᐃ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ⲆⲆⲆᐃ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], ΔᐃⲆΔ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ⲆⲆⲆᐃ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], 0)
				}
			}
			if (ⵠⲆᐃΔ === 0) {
				for (var ΔᐃⲆᐃ = ᐃⵠΔ; ΔᐃⲆᐃ < ⵠⵠⲆᐃ; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ - 4, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ - ᐃΔΔΔ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ + ⲆⵠⲆⲆ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ + 4, ⵠ[49], 0)
				}
				for (var ΔᐃⲆᐃ = ᐃΔⵠⵠ; 3 > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ᐃⲆⲆᐃΔ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], Ⲇᐃⵠᐃ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ⲆⵠⵠⲆ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 3, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + 3, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], 0)
				}
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 2, ΔΔΔⲆ - 4, ⵠ[49], ΔⲆᐃⲆ);
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 3, ΔΔΔⲆ - 3, ⵠ[49], ⵠⵠⲆⲆ);
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ᐃᐃΔⵠ, ΔΔΔⲆ + ⲆⵠΔΔⲆ, ⵠ[49], ⲆⵠⲆ);
				ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ⵠⲆⲆΔ, ΔΔΔⲆ + 3, ⵠ[49], Δⵠⵠ)
			} else if (1 === ⵠⲆᐃΔ) {
				for (var ΔᐃⲆᐃ = ⲆΔᐃ; 3 > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ - 4, ⵠ[49], ΔΔⲆᐃ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ - Ⲇⵠⵠᐃᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ + ⵠᐃⵠᐃⲆ, ⵠ[49], ΔΔᐃ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ + ⲆⵠⵠⲆΔ, ⵠ[49], 0)
				}
				for (var ΔᐃⲆᐃ = ΔⵠⲆⲆ; ΔᐃⲆᐃ < 4; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 3, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ᐃⵠⲆⲆ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], ⵠⵠᐃⵠ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 3, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ⵠⲆⲆΔ, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], ⲆΔᐃ)
				}
			} else if (2 === ⵠⲆᐃΔ) {
				for (var ΔᐃⲆᐃ = 0; ΔᐃⲆᐃ < 2; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ - ᐃΔⲆΔ, ⵠ[49], ΔᐃⲆΔ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ - ᐃΔᐃΔ, ⵠ[49], Ⲇᐃⵠᐃ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ΔᐃⲆᐃ, ΔΔΔⲆ + 4, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔᐃⲆᐃ, ΔΔΔⲆ + ⵠΔΔᐃ, ⵠ[49], ᐃⵠΔ)
				}
				for (var ΔᐃⲆᐃ = ΔⵠⲆⲆ; 3 > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - 3, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + ΔⵠⵠΔ, ΔΔΔⲆ + ΔᐃⲆᐃ, ⵠ[49], ᐃΔⵠⵠ);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ - ᐃⲆᐃΔⵠ, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], 0);
					ΔⲆᐃⵠ(ⲆⵠⲆᐃ + 3, ΔΔΔⲆ - ΔᐃⲆᐃ, ⵠ[49], ΔⵠⲆⲆ)
				}
			}
		};
		this.ⲆⲆⵠΔΔΔΔΔⵠ = function(ⲆᐃᐃⲆ) {
			for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < ⲆΔΔ.ⵠⵠⵠⲆⲆ.length && ⲆⵠⲆ < ⲆᐃᐃⲆ; ᐃⲆ++) {
				var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
				if (ΔΔΔΔ.ᐃⲆⵠ !== ⲆΔΔ.ⲆⵠᐃⵠΔ) continue;
				if (ΔΔΔΔ.w > 1800 && ΔΔΔΔ.ΔᐃⲆ > 1e3) {
					var ΔΔΔⲆ = Math.floor((ΔΔΔΔ.x1 + ΔΔΔΔ.w / ⵠⵠΔⲆ) / 100);
					var ⲆⵠⲆᐃ = Math.floor((ΔΔΔΔ.y1 + ΔΔΔΔ.ΔᐃⲆ / ⵠⵠⲆᐃ) / 100);
					ⲆΔΔ.ⲆᐃⵠⵠΔᐃⵠ(ⲆᐃᐃⲆ % Ⲇᐃⵠⵠ, ΔΔΔⲆ, ⲆⵠⲆᐃ);
					for (var ΔᐃⲆᐃ = Δⵠⵠ; ⵠⲆⲆΔ > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
						var ⲆΔⲆᐃⲆΔⲆ = ⲆⵠⲆᐃ - ᐃⲆⵠᐃ + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * 4);
						var ΔⵠᐃⵠΔ = ΔΔΔⲆ - ΔⲆΔⵠ + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * 6);
						ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ⲆΔⲆᐃⲆΔⲆ][ΔⵠᐃⵠΔ]["s"] === undefined && ΔⲆᐃⵠ(ⲆΔⲆᐃⲆΔⲆ, ΔⵠᐃⵠΔ, ⵠ[153], ΔᐃⲆᐃ);
						var ⲆΔⲆᐃⲆΔⲆ = ⲆⵠⲆᐃ - 2 + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * ⲆⵠⵠⲆΔ);
						var ΔⵠᐃⵠΔ = ΔΔΔⲆ - 3 + Math.floor(6 * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
						if (undefined === ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ⲆΔⲆᐃⲆΔⲆ][ΔⵠᐃⵠΔ][ⵠ[153]]) ΔⲆᐃⵠ(ⲆΔⲆᐃⲆΔⲆ, ΔⵠᐃⵠΔ, "s", ΔᐃⲆᐃ)
					}
					var ⲆΔⲆᐃⲆΔⲆ = ⲆⵠⲆᐃ - ΔⵠΔΔ + Math.floor(ᐃΔᐃⲆⵠ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
					var ΔⵠᐃⵠΔ = ΔΔΔⲆ - 3 + Math.floor(ⲆΔΔ.ᐃⵠᐃΔⲆ.get() * ⲆᐃΔᐃᐃ);
					ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ⲆΔⲆᐃⲆΔⲆ][ΔⵠᐃⵠΔ][ⵠ[153]] === undefined && ᐃΔΔⲆⵠ === ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ⲆΔⲆᐃⲆΔⲆ][ΔⵠᐃⵠΔ]["s"] && ΔⲆᐃⵠ(ⲆΔⲆᐃⲆΔⲆ, ΔⵠᐃⵠΔ, "p", Ⲇᐃⵠᐃ, ᐃⵠ);
					ⲆᐃᐃⲆ--
				}
			}
		};
		this.ᐃⵠⵠᐃⲆⲆⵠⵠⲆ = function(ⵠⲆΔⵠⵠ) {
			ⲆΔΔ.ᐃⵠᐃΔⲆ.ⲆΔⲆΔΔ(ⵠⲆΔⵠⵠ);
			var ⵠΔⵠⵠᐃⵠΔ = 0;
			while (1) {
				ⵠΔⵠⵠᐃⵠΔ++;
				if (1e4 < ⵠΔⵠⵠᐃⵠΔ) return;
				ⲆΔΔ.ⵠⵠⵠⲆⲆ = [];
				if (0 === ⲆΔΔ.ᐃⵠⵠΔΔ && (ⲆΔΔ.mode === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ || ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔΔⵠΔ || ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ === ⲆΔΔ.mode)) ⲆΔΔ.ᐃⵠⵠΔΔ = ⲆΔᐃⵠᐃΔᐃ;
				if (ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ) {
					ⲆΔΔ.ⵠⵠⵠⲆⲆ.push(new ⲆΔΔ.ⲆⲆΔᐃᐃΔᐃ(ⲆΔΔ.ΔⵠᐃΔⲆ, ᐃΔⵠᐃ, 2, 80, 80, 15))
				} else if (ⲆΔΔ.mode === ⲆⵠΔΔ.ᐃΔⲆⵠⵠ) {
					ⲆΔΔ.ⵠⵠⵠⲆⲆ.push(new ⲆΔΔ.ⲆⲆΔᐃᐃΔᐃ(ⲆΔΔ.ΔⵠᐃΔⲆ, 2, 2, 150, 150, 15))
				} else {
					if (ⲆΔΔ.ᐃⵠⵠΔΔ !== 0 && 0 < ⲆΔΔ.ᐃⵠⵠΔΔ.length && ⵠΔⵠⲆ < ⲆΔΔ.ᐃⵠⵠΔΔ[0].length) {
						for (var ⲆΔⵠΔ = ⵠⵠᐃᐃΔ; ⲆΔⵠΔ < ⲆΔΔ.ᐃⵠⵠΔΔ.length; ⲆΔⵠΔ++) {
							var ΔᐃᐃᐃⲆ = ⲆΔΔ.ᐃⵠⵠΔΔ[ⲆΔⵠΔ];
							if (0 === ΔᐃᐃᐃⲆ[ᐃⵠΔ]) {
								var ⵠᐃΔΔⵠ = ⲆⵠΔΔ.ΔⵠᐃΔⲆ;
								switch (ΔᐃᐃᐃⲆ[ΔᐃᐃⲆ]) {
									case "FOREST":
										ⵠᐃΔΔⵠ = ⲆΔΔ.ΔⵠᐃΔⲆ;
										break;
									case "WINTER":
										ⵠᐃΔΔⵠ = ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ;
										break;
									case "DESERT":
										ⵠᐃΔΔⵠ = ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ;
										break;
									case "LAVA":
										ⵠᐃΔΔⵠ = ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ;
										break;
									case "DRAGON":
										ⵠᐃΔΔⵠ = ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ;
										break
								}
								ⲆΔΔ.ⵠⵠⵠⲆⲆ.push(new ⲆΔΔ.ⲆⲆΔᐃᐃΔᐃ(ⵠᐃΔΔⵠ, ΔᐃᐃᐃⲆ[2], ΔᐃᐃᐃⲆ[3], ΔᐃᐃᐃⲆ[4], ΔᐃᐃᐃⲆ[ⲆΔΔⵠΔ], ΔᐃᐃᐃⲆ[ⲆᐃΔᐃᐃ], ΔᐃᐃᐃⲆ[ⵠΔᐃⲆᐃ]));
								continue
							} else break
						}
					} else if (ᐃΔⵠⵠ !== ⲆΔΔ.ᐃⵠⵠΔΔ) {
						for (var ⲆΔⵠΔ = ᐃⵠΔ; ⲆΔⵠΔ < ⲆΔΔ.ᐃⵠⵠΔΔ.length; ⲆΔⵠΔ++) {
							var ΔΔΔΔ = ⲆΔΔ.ᐃⵠⵠΔΔ[ⲆΔⵠΔ];
							var ⵠᐃΔΔⵠ = ⲆⵠΔΔ.ΔⵠᐃΔⲆ;
							switch (ΔΔΔΔ[ΔΔᐃ]) {
								case "FOREST":
									ⵠᐃΔΔⵠ = ⲆΔΔ.ΔⵠᐃΔⲆ;
									break;
								case "WINTER":
									ⵠᐃΔΔⵠ = ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ;
									break;
								case "DESERT":
									ⵠᐃΔΔⵠ = ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ;
									break;
								case "LAVA":
									ⵠᐃΔΔⵠ = ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ;
									break;
								case "DRAGON":
									ⵠᐃΔΔⵠ = ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ;
									break
							}
							if (ΔΔⵠᐃ === ΔⲆⲆᐃⲆΔΔⲆᐃ(ⵠᐃΔΔⵠ, ΔΔΔΔ[1], ΔΔΔΔ[ᐃᐃⲆΔ], ⲆⵠⲆ, ⵠΔᐃΔⲆ * (ⲆΔⵠΔ + 1))) break
						}
						if (ⲆΔΔ.ᐃⵠⵠΔΔ.length !== ⲆΔⵠΔ) continue
					}
				}
				break
			}
			ΔΔᐃⲆⵠⵠΔⵠᐃ();
			var ᐃⵠᐃⵠⵠⵠᐃ = [];
			for (var ᐃⲆ = 0; ⲆΔΔ.ΔⲆᐃⵠⵠ > ᐃⲆ; ᐃⲆ++) {
				ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆ] = new Array(ⲆΔΔ.Δᐃᐃⵠⵠ);
				for (var ΔΔΔ = ΔΔⵠᐃ; ΔΔΔ < ⲆΔΔ.Δᐃᐃⵠⵠ; ΔΔΔ++) ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆ][ΔΔΔ] = 0
			}
			for (var ᐃⲆ = ΔⲆᐃⲆ; ⲆΔΔ.ⵠⵠⵠⲆⲆ.length > ᐃⲆ; ᐃⲆ++) {
				var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
				var ⵠᐃⵠⵠ = ΔΔΔΔ.x2 / ᐃⲆⵠᐃⲆ;
				var ΔⲆⲆⲆ = ΔΔΔΔ.y2 / 100;
				for (var ᐃᐃΔ = ΔΔΔΔ.x1 / ᐃⵠΔⲆⲆ; ⵠᐃⵠⵠ >= ᐃᐃΔ; ᐃᐃΔ++) {
					for (var ᐃⲆᐃ = ΔΔΔΔ.y1 / ⵠΔⵠⲆⲆ; ᐃⲆᐃ <= ΔⲆⲆⲆ; ᐃⲆᐃ++) ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆᐃ][ᐃᐃΔ] = 1
				}
			}
			for (var ᐃⲆᐃ = 0; ⲆΔΔ.ΔⲆᐃⵠⵠ > ᐃⲆᐃ; ᐃⲆᐃ++) {
				for (var ᐃᐃΔ = ΔⵠⲆⲆ; ⲆΔΔ.Δᐃᐃⵠⵠ > ᐃᐃΔ; ᐃᐃΔ++) {
					ᐃⵠΔ === ᐃⵠᐃⵠⵠⵠᐃ[ᐃⲆᐃ][ᐃᐃΔ] && ᐃΔᐃΔΔⲆⵠᐃᐃ(ᐃⵠᐃⵠⵠⵠᐃ, ᐃᐃΔ, ᐃⲆᐃ)
				}
			}
			ᐃⲆᐃⵠⲆ = {
				w: ⲆΔΔ.Δᐃᐃⵠⵠ,
				"ΔᐃⲆ": ⲆΔΔ.ΔⲆᐃⵠⵠ,
				"ᐃⲆⵠⵠ": []
			};
			for (var ᐃⲆ = ΔΔⲆᐃ; ᐃⲆ < ⲆΔΔ.ΔⲆᐃⵠⵠ; ᐃⲆ++) ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ] = [];
			if (ⵠⵠⲆⲆ !== ⲆΔΔ.ᐃⵠⵠΔΔ && ΔⲆⵠ < ⲆΔΔ.ᐃⵠⵠΔΔ.length && ⲆΔΔ.ᐃⵠⵠΔΔ[ᐃΔⵠⵠ].length > 3) {
				for (var ⲆΔⵠΔ = ⲆΔᐃ; ⲆΔⵠΔ < ⲆΔΔ.ᐃⵠⵠΔΔ.length; ⲆΔⵠΔ++) {
					var ΔᐃᐃᐃⲆ = ⲆΔΔ.ᐃⵠⵠΔΔ[ⲆΔⵠΔ];
					if (ΔᐃᐃᐃⲆ[ᐃⲆⵠΔ] === ⵠ[398]) ⲆΔΔ.ⲆᐃⵠⵠΔᐃⵠ(ΔᐃᐃᐃⲆ[ᐃΔⵠᐃ], ΔᐃᐃᐃⲆ[ΔΔⲆⲆᐃ], ΔᐃᐃᐃⲆ[4])
				}
			} else ⲆΔΔ.ⲆⲆⵠΔΔΔΔΔⵠ(ⲆΔΔ.ΔⵠⲆᐃⲆⵠΔ);
			if (ⲆΔΔ.ᐃⵠⵠΔΔ !== 0 && ⲆΔΔ.ᐃⵠⵠΔΔ.length > ⵠⵠᐃᐃΔ && ⲆΔΔ.ᐃⵠⵠΔΔ[0].length > ᐃⵠⲆⲆ) {
				var ΔⵠᐃΔᐃ = [];
				for (var ⲆΔⵠΔ = ᐃΔⵠⵠ; ⲆΔΔ.ᐃⵠⵠΔΔ.length > ⲆΔⵠΔ; ⲆΔⵠΔ++) {
					var ΔᐃᐃᐃⲆ = ⲆΔΔ.ᐃⵠⵠΔΔ[ⲆΔⵠΔ];
					if (ⵠⵠⲆΔ !== ΔᐃᐃᐃⲆ[ΔΔᐃ]) continue;
					if (ΔᐃᐃᐃⲆ[1] === "r") {
						ΔⲆᐃⵠ(ΔᐃᐃᐃⲆ[ⲆⵠⵠⲆ], ΔᐃᐃᐃⲆ[ΔⵠΔΔ], ⵠ[293], 0, ΔΔᐃᐃ);
						ΔⵠᐃΔᐃ.push([ΔᐃᐃᐃⲆ[3], ΔᐃᐃᐃⲆ[2], ΔᐃᐃᐃⲆ[ⵠΔΔᐃ]])
					} else ΔⲆᐃⵠ(ΔᐃᐃᐃⲆ[4], ΔᐃᐃᐃⲆ[ΔⲆΔⵠ], ΔᐃᐃᐃⲆ[1], ΔᐃᐃᐃⲆ[2], ΔᐃᐃᐃⲆ[5])
				}
				ⲆΔᐃⵠᐃⵠⲆ(0, ΔⵠᐃΔᐃ);
				ΔⵠᐃΔᐃ = []
			} else {
				for (var ᐃⲆ = ΔⲆⵠ; ⲆΔΔ.ⵠⵠⵠⲆⲆ.length > ᐃⲆ; ᐃⲆ++) {
					var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃⲆ];
					if (ⲆⵠΔΔ.ᐃΔⲆⵠⵠ === ⲆΔΔ.mode) {
						ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃΔⲆ && ᐃᐃⲆⵠⲆⵠᐃᐃⲆ(ᐃⲆ, ΔΔΔΔ.w / (100 * 100))
					} else {
						if (ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃΔⲆ) ᐃᐃⲆᐃⲆⲆΔⲆⵠ(ᐃⲆ, ΔΔΔΔ.w / (ᐃⲆⵠᐃⲆ * 100));
						ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ΔⵠᐃⲆⲆⵠⵠ && ᐃΔΔⲆΔΔⲆᐃⲆ(ᐃⲆ, ΔΔΔΔ.w / (100 * ⵠⵠΔΔⵠ));
						ⲆΔΔ.ΔᐃⲆⵠⲆΔⵠ === ΔΔΔΔ.ᐃⲆⵠ && ΔⲆΔⵠΔΔΔⵠⲆ(ᐃⲆ, ΔΔΔΔ.w / (ΔⵠΔⵠⵠ * 100));
						ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ⵠΔⲆᐃⵠⵠⵠ && ⵠᐃᐃΔΔⵠⲆΔⵠ(ᐃⲆ, ΔΔΔΔ.w / (ⵠΔⵠⲆⲆ * ⵠΔⵠⲆⲆ));
						ΔΔΔΔ.ᐃⲆⵠ === ⲆΔΔ.ⵠΔⲆΔⵠⲆΔ && ⲆⲆⲆⵠⲆⵠⵠΔᐃ(ᐃⲆ)
					}
				}
			}
			ⵠⲆⲆⲆⲆⵠⵠⲆΔ();
			ⲆΔΔ.ⵠⵠΔⲆᐃⲆⵠⲆΔ(ᐃⲆᐃⵠⲆ)
		};

		function ᐃΔΔⲆΔΔⲆᐃⲆ(ᐃᐃⲆⲆ, Δⵠᐃⵠᐃ) {
			ᐃⵠⲆΔⵠⲆΔΔΔ(Δⵠᐃⵠᐃ * 80, ᐃᐃⲆⲆ);
			for (var ᐃⲆ = 0; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * ⲆⵠⲆᐃᐃ));
			for (var ᐃⲆ = 0; ⵠΔⵠⲆ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "g", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * ⲆΔᐃⵠⲆⵠΔ));
			for (var ᐃⲆ = 0; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, ⵠ[239], ᐃⲆ, Math.max(ⲆΔⵠⲆ, Math.floor(1 * Δⵠᐃⵠᐃ)), .2);
			for (var ᐃⲆ = ⵠⵠᐃⵠ; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "a", ᐃⲆ, Math.max(1, Math.floor(2 * Δⵠᐃⵠᐃ)));
			ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ)
		}

		function ΔⲆΔⵠΔΔΔⵠⲆ(ᐃᐃⲆⲆ, Δⵠᐃⵠᐃ) {
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * ΔΔⵠⲆΔ));
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃⲆᐃΔⵠ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "f", ᐃⲆ, Math.floor(24 * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = 0; ᐃⵠⵠⵠ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "d", ᐃⲆ, Math.max(1, Math.floor(2 * Δⵠᐃⵠᐃ)), .3);
			for (var ᐃⲆ = 0; ΔΔⲆⲆᐃ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "g", ᐃⲆ, Math.floor(ⵠΔⵠⵠⲆ * Δⵠᐃⵠᐃ));
			ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ)
		}

		function ᐃᐃⲆᐃⲆⲆΔⲆⵠ(ᐃᐃⲆⲆ, Δⵠᐃⵠᐃ) {
			for (var ᐃⲆ = 0; ᐃⵠΔⵠⵠ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "t", ᐃⲆ, Math.floor(20 * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃΔᐃΔ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "b", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * ⵠⲆΔⵠ));
			for (var ᐃⲆ = Ⲇᐃⵠᐃ; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, Math.floor(ⵠᐃⵠⲆ * Δⵠᐃⵠᐃ));
			var ΔⵠᐃΔᐃ = [];
			ⲆΔⵠⲆⵠΔᐃ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ⲆΔᐃⵠᐃⵠⲆ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ΔⵠᐃΔᐃ = [];
			ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "p", Δⵠⵠ, Math.floor(24 * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = ⵠⵠᐃⵠ; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "g", ᐃⲆ, Math.floor(ΔⲆⲆⲆⵠ * Δⵠᐃⵠᐃ));
			if (ⲆⵠΔΔ.ᐃᐃΔᐃⲆ === ⲆΔΔ.mode) {
				for (var ᐃⲆ = ΔΔⵠᐃ; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "d", ᐃⲆ, Math.floor(ΔⵠⵠΔ * Δⵠᐃⵠᐃ));
				for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "a", ᐃⲆ, Math.floor(2 * Δⵠᐃⵠᐃ))
			}
			ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ)
		}

		function ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃᐃⲆⲆ];
			ΔⲆᐃⵠ(-3 + Math.floor(ΔΔΔΔ.y2 / ⵠΔⵠⲆⲆ), -1 + Math.floor(ΔΔΔΔ.x2 / 100), "s", 0, 0);
			ΔⲆᐃⵠ(3 + Math.floor(ΔΔΔΔ.y1 / ⵠΔⵠⲆⲆ), -ⲆⲆΔᐃ + Math.floor(ΔΔΔΔ.x2 / 100), "s", 0, ⵠⲆⲆᐃ);
			ΔⲆᐃⵠ(-ⲆⵠⵠΔ + Math.floor(ΔΔΔΔ.y2 / ΔΔⲆⵠⲆ), ⲆⲆΔᐃ + Math.floor(ΔΔΔΔ.x1 / ᐃⲆⵠΔΔ), "s", ⵠⲆⲆᐃ, 0);
			ΔⲆᐃⵠ(ⵠΔᐃⲆ + Math.floor(ΔΔΔΔ.y1 / ⵠᐃⵠⵠΔ), ΔΔᐃⵠ + Math.floor(ΔΔΔΔ.x1 / 100), "s", 0, ΔΔⲆᐃ)
		}

		function ᐃᐃⲆⵠⲆⵠᐃᐃⲆ(ᐃᐃⲆⲆ, Δⵠᐃⵠᐃ) {
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆΔᐃⵠⲆⵠΔ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "t", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * 80));
			for (var ᐃⲆ = ⵠᐃⲆᐃ; Ⲇⵠⵠᐃᐃ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "b", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * 80));
			for (var ᐃⲆ = 0; 3 > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * 50));
			var ΔⵠᐃΔᐃ = [];
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃΔᐃᐃ; ᐃⲆ++) ⲆΔⵠⲆⵠΔᐃ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ⲆΔᐃⵠᐃⵠⲆ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ΔⵠᐃΔᐃ = [];
			ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "p", 0, Math.floor(Δⵠᐃⵠᐃ * 28));
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "g", ᐃⲆ, Math.floor(Δⵠᐃⵠᐃ * 7));
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "d", ᐃⲆ, Math.floor(ᐃΔⲆⲆⵠ * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = ΔᐃⲆΔ; ᐃⲆ < ΔⲆΔⵠ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "a", ᐃⲆ, Math.floor(1 * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "m", ᐃⲆ, Math.floor(ⲆΔᐃⲆ * Δⵠᐃⵠᐃ));
			ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "a", ⵠⵠⲆⲆ, Math.floor(1 * Δⵠᐃⵠᐃ));
			ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ)
		}

		function ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ⲆᐃᐃⲆ, ⲆⵠⲆᐃΔⲆᐃ) {
			var ΔΔΔΔ = ⲆΔΔ.ⵠⵠⵠⲆⲆ[ᐃᐃⲆⲆ];
			var ᐃᐃΔ = Math.floor(ΔΔΔΔ.x1 / ΔᐃⵠᐃⵠᐃΔ);
			var ᐃⲆᐃ = Math.floor(ΔΔΔΔ.y1 / 100);
			var ᐃᐃⲆ = Math.floor(ΔΔΔΔ.w / ⵠΔᐃᐃⲆ);
			var ΔᐃⲆ = Math.floor(ΔΔΔΔ.ΔᐃⲆ / ᐃⵠⲆⵠⲆ);
			if (ⲆⵠⲆᐃΔⲆᐃ !== undefined) {
				ⲆⵠⲆᐃΔⲆᐃ = 1 - ⲆⵠⲆᐃΔⲆᐃ;
				ᐃᐃΔ += Math.floor(ⲆⵠⲆᐃΔⲆᐃ * ᐃᐃⲆ / 2);
				ᐃⲆᐃ += Math.floor(ⲆⵠⲆᐃΔⲆᐃ * ΔᐃⲆ / 2);
				ᐃᐃⲆ -= Math.floor(ᐃᐃⲆ * ⲆⵠⲆᐃΔⲆᐃ);
				ΔᐃⲆ -= Math.floor(ΔᐃⲆ * ⲆⵠⲆᐃΔⲆᐃ)
			}
			var ᐃⲆⵠⵠ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ;
			for (var ⲆⲆⲆᐃ = ⵠⲆⲆᐃ, ΔᐃⲆᐃ = ⵠᐃⲆᐃ; ⲆᐃᐃⲆ > ΔᐃⲆᐃ; ⲆⲆⲆᐃ++) {
				if (ⲆⲆⲆᐃ > 5e4) break;
				var ᐃⲆ = ᐃⲆᐃ + Math.floor(ΔᐃⲆ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
				var ΔΔΔ = ᐃᐃΔ + Math.floor(ᐃᐃⲆ * ⲆΔΔ.ᐃⵠᐃΔⲆ.get());
				var ⵠⵠΔᐃ = ⲆΔΔ.ᐃⵠᐃΔᐃ(ᐃᐃⲆⲆ, ΔΔΔ * 100 + 50, 100 * ᐃⲆ + 50);
				if (ⵠⵠΔᐃ < 400) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ + 1];
				if (ⲆᐃⵠⲆ !== ⲆⲆΔΔᐃ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ] !== ⵠΔⵠΔⵠ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ] !== ΔΔⵠΔΔ) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ - 1];
				if (ⲆᐃⵠⲆ !== ⵠⵠⲆᐃⲆ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ] !== undefined && ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ] !== undefined) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ];
				if (undefined !== ⲆᐃⵠⲆ && ᐃⲆⵠⲆⵠ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ] && ᐃⲆⵠⲆⵠ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ]) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ - 1][ΔΔΔ];
				if (undefined !== ⲆᐃⵠⲆ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ] !== ᐃⲆⵠⲆⵠ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ] !== ⵠⵠⲆᐃⲆ) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ + ΔΔᐃᐃ][ΔΔΔ - 1];
				if (undefined !== ⲆᐃⵠⲆ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ] !== undefined && ⲆⲆΔΔᐃ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ]) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ - 1][ΔΔΔ + ⲆⲆΔᐃ];
				if (undefined !== ⲆᐃⵠⲆ && ΔᐃΔᐃⲆ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ] && ᐃᐃΔⲆⲆ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ]) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ + ΔᐃᐃⲆ];
				if (undefined !== ⲆᐃⵠⲆ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ] !== ⵠΔⵠΔⵠ && ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ] !== ΔⵠᐃΔⵠ) continue;
				var ⲆᐃⵠⲆ = ᐃⲆⵠⵠ[ᐃⲆ - 1][ΔΔΔ - ⲆⲆΔᐃ];
				if (undefined !== ⲆᐃⵠⲆ && ⲆⵠᐃΔⲆ !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ] && undefined !== ⲆᐃⵠⲆ[ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ]) continue;
				ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] === undefined && (ΔⲆᐃⵠ(ᐃⲆ, ΔΔΔ, ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, 1), ΔᐃⲆᐃ++)
			}
		}

		function ⲆⵠΔΔⵠΔⵠⵠᐃ(ᐃⲆ, ΔΔΔ, ᐃᐃⲆⲆ, ᐃΔⲆⵠΔⲆⲆ) {
			if (!ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ, ΔΔΔ)) return;
			ᐃⲆⵠⵠ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ;
			undefined === ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] && (ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] = {});
			if (ΔΔⵠⲆⵠ !== ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"]) return;
			var ⲆⲆΔⵠⵠ = ΔᐃⲆΔ;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ - ΔΔⲆΔ, ΔΔΔ) && undefined !== ᐃⲆⵠⵠ[ᐃⲆ - ⵠⵠⲆΔ][ΔΔΔ] && undefined !== ᐃⲆⵠⵠ[ᐃⲆ - ⲆᐃⲆⲆ][ΔΔΔ][ⵠ[293]]) ⲆⲆΔⵠⵠ += ⵠⲆΔΔ;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ, ΔΔΔ - ᐃⵠⵠ) && ⵠΔΔᐃⵠ !== ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ - 1] && undefined !== ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ - ⲆᐃⲆⲆ][ⵠ[293]]) ⲆⲆΔⵠⵠ += ΔᐃⲆⵠⲆⵠⵠ;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ, ΔΔΔ + 1) && ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ + ᐃⲆⵠΔ] !== ᐃᐃⲆⵠⲆ && ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ + 1][ⵠ[293]] !== undefined) ⲆⲆΔⵠⵠ += ᐃΔΔⲆⲆΔΔ;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ + ᐃΔⲆⵠ, ΔΔΔ) && undefined !== ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ] && ᐃⲆⵠⵠ[ᐃⲆ + ⲆΔⵠⲆ][ΔΔΔ][ⵠ[293]] !== ⵠΔⵠΔⵠ) ⲆⲆΔⵠⵠ += 64;
			ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ - 1, ΔΔΔ - 1) && (ⲆⲆΔⵠⵠ & ⵠᐃⵠⵠⵠ + ⲆᐃⲆᐃ) === ⲆΔᐃⲆΔ + ⲆᐃⲆᐃ && ᐃⲆⵠⵠ[ᐃⲆ - ⵠⵠⲆΔ][ΔΔΔ - ᐃⵠ] !== undefined && ΔΔΔⲆⲆ !== ᐃⲆⵠⵠ[ᐃⲆ - ᐃΔⲆⵠ][ΔΔΔ - 1][ⵠ[293]] && (ⲆⲆΔⵠⵠ += 1);
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ - 1, ΔΔΔ + ⵠᐃΔᐃ) && (ⲆⲆΔⵠⵠ & ΔᐃⲆⲆᐃⵠⲆ + 2) === 16 + 2 && undefined !== ᐃⲆⵠⵠ[ᐃⲆ - 1][ΔΔΔ + 1] && ᐃⲆⵠⵠ[ᐃⲆ - ⲆᐃⲆⲆ][ΔΔΔ + 1][ⵠ[293]] !== ΔΔΔⲆⲆ) ⲆⲆΔⵠⵠ += ᐃⵠⲆⲆⲆ;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ + 1, ΔΔΔ - 1) && (ⲆⲆΔⵠⵠ & 72) === ⵠⵠΔⵠΔ + 64 && ᐃⲆⵠⵠ[ᐃⲆ + ⵠⵠⲆΔ][ΔΔΔ - ⵠⲆⲆ] !== undefined && undefined !== ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ - 1][ⵠ[293]]) ⲆⲆΔⵠⵠ += 32;
			if (ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ + ΔᐃⵠΔ, ΔΔΔ + ᐃⵠ) && (ⲆⲆΔⵠⵠ & ⵠⵠᐃⲆⵠⲆΔ + 64) === ᐃⲆⵠᐃⲆᐃⵠ + 64 && ⲆΔⲆᐃⲆ !== ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ + 1] && ᐃⲆⵠⵠ[ᐃⲆ + 1][ΔΔΔ + ᐃΔⲆⵠ][ⵠ[293]] !== undefined) ⲆⲆΔⵠⵠ += 128;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"] = {};
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"].ΔⵠΔᐃⵠⵠΔ = ⲆⲆΔⵠⵠ;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"].ᐃΔⲆⵠΔⲆⲆ = ᐃΔⲆⵠΔⲆⲆ;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"].ⵠⵠΔᐃ = ⲆΔΔ.ᐃⵠᐃΔᐃ(ᐃᐃⲆⲆ, ᐃⲆⵠΔΔ * ΔΔΔ + 50, ᐃⲆ * 100 + 50) - 400;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"]["x"] = ΔΔΔ * ⲆᐃᐃΔᐃⲆᐃ + 50;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]["r"]["y"] = ᐃⲆ * 100 + 50
		}

		function ΔⲆΔᐃᐃⵠⵠ(ᐃⲆ, ΔΔΔ) {
			return ᐃⲆ >= ΔⵠⲆⲆ && ΔΔΔ >= ΔΔⵠᐃ && ᐃⲆ < ⲆΔΔ.ΔⲆᐃⵠⵠ && ΔΔΔ < ⲆΔΔ.Δᐃᐃⵠⵠ
		}

		function ⲆⲆⲆⵠⲆⵠⵠΔᐃ(ᐃᐃⲆⲆ) {
			for (var ᐃⲆ = ΔⵠⲆΔ; ⲆⵠⵠΔ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, 15);
			for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "a", ᐃⲆ, 1);
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "d", ᐃⲆ, ΔᐃⵠΔ);
			ΔᐃᐃⲆⲆⲆΔ(ᐃᐃⲆⲆ)
		}

		function ⵠᐃᐃΔΔⵠⲆΔⵠ(ᐃᐃⲆⲆ, Δⵠᐃⵠᐃ) {
			for (var ᐃⲆ = 0; ᐃⲆ < 3; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "s", ᐃⲆ, Math.floor(12 * Δⵠᐃⵠᐃ));
			for (var ᐃⲆ = 0; ⵠⲆⵠⵠ > ᐃⲆ; ᐃⲆ++) ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "m", ᐃⲆ, Math.max(ΔᐃⵠΔ, Math.floor(1 * Δⵠᐃⵠᐃ)), .2);
			ΔΔⵠᐃⲆ(ᐃᐃⲆⲆ, "c", ΔᐃⲆΔ, Math.floor(Δⵠᐃⵠᐃ * 36));
			var ΔⵠᐃΔᐃ = [];
			ᐃΔᐃᐃⲆᐃⲆⲆΔ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ⲆΔᐃⵠᐃⵠⲆ(ᐃᐃⲆⲆ, ΔⵠᐃΔᐃ);
			ΔⵠᐃΔᐃ = []
		}

		function ΔⲆᐃⵠ(ᐃⲆ, ΔΔΔ, ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ⵠΔΔᐃⵠΔⲆⲆⵠ) {
			if (ᐃⲆ < 0 || ΔΔΔ < ⲆⵠⲆ || ⲆΔΔ.ΔⲆᐃⵠⵠ <= ᐃⲆ || ⲆΔΔ.Δᐃᐃⵠⵠ <= ΔΔΔ) return;
			ᐃⲆⵠⵠ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ;
			if (ᐃᐃⲆⵠⲆ === ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]) ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] = {};
			if (ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ][ⵠⲆᐃΔ] !== ᐃⵠⲆᐃⲆ) return 0;
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ][ⵠⲆᐃΔ] = [];
			ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ][ⵠⲆᐃΔ][ᐃᐃⵠⵠⲆ] = [{
				x: ΔΔΔ * ⵠΔⵠⲆⲆ + 50,
				y: ᐃⲆ * 100 + 50
			}];
			if (1 === ⵠΔΔᐃⵠΔⲆⲆⵠ) ᐃᐃᐃᐃΔΔᐃΔⲆ(ⵠⲆᐃΔ, ᐃᐃⵠⵠⲆ, ᐃⲆ, ΔΔΔ);
			return ᐃⲆⵠΔ
		}
		this.ΔⲆᐃⵠ = ΔⲆᐃⵠ;

		function ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠⲆⵠ, ᐃⲆⲆⲆ) {
			if (ⲆᐃⵠⲆ[ⵠⲆⵠ]) {
				for (ΔᐃⲆᐃ = ΔⵠⲆⲆ; ΔᐃⲆᐃ < ⲆᐃⵠⲆ[ⵠⲆⵠ].length; ΔᐃⲆᐃ++) {
					if (!ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ]) continue;
					for (ⲆⲆⲆᐃ = ΔⵠⲆⲆ; ⲆⲆⲆᐃ < ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ].length; ⲆⲆⲆᐃ++) {
						ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ][ⲆⲆⲆᐃ].ⲆⲆᐃ = ᐃⲆⲆⲆ;
						ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ][ⲆⲆⲆᐃ].ⵠᐃⵠ = ᐃⲆⲆΔΔ;
						ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ][ⲆⲆⲆᐃ].time = ΔⲆᐃⲆ;
						ⲆᐃⵠⲆ[ⵠⲆⵠ][ΔᐃⲆᐃ][ⲆⲆⲆᐃ].angle = 0
					}
				}
			}
		}
		this.ⵠⵠΔⲆᐃⲆⵠⲆΔ = function(ᐃⲆᐃⵠⲆ) {
			for (var ᐃⲆ = 0; ᐃⲆ < this.ΔⲆᐃⵠⵠ; ᐃⲆ++) {
				for (var ΔΔΔ = 0; ΔΔΔ < this.Δᐃᐃⵠⵠ; ΔΔΔ++) {
					!ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ] && (ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ] = []);
					if (!ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ]) {
						ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ] = [];
						continue
					}
					var ⲆᐃⵠⲆ = ᐃⲆᐃⵠⲆ.ᐃⲆⵠⵠ[ᐃⲆ][ΔΔΔ];
					if (ⲆᐃⵠⲆ[ⵠ[20]] && ⲆᐃⵠⲆ[ⵠ[ᐃᐃᐃⲆ]].length > 0) {
						for (var ΔᐃⲆᐃ = 0; ⲆᐃⵠⲆ[ⵠ[ΔⵠΔⲆ]].length > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
							if (ⲆᐃⵠⲆ[ⵠ[20]][ΔᐃⲆᐃ] && 0 < ⲆᐃⵠⲆ[ⵠ[20]][ΔᐃⲆᐃ].length) {
								ⲆᐃⵠⲆ[ⵠ[20]] = ⲆᐃⵠⲆ[ⵠ[20]][ΔᐃⲆᐃ][ΔⲆᐃⲆ];
								if (41 <= ΔᐃⲆᐃ && 49 >= ΔᐃⲆᐃ) {
									ⲆᐃⵠⲆ[ⵠ[20]].scale = 3;
									var ⵠΔⲆⲆΔⵠⲆ = Math.floor(Math.random() * ΔⲆΔⵠ + ⵠⵠⲆΔ);
									ⲆᐃⵠⲆ[ⵠ[ᐃᐃⲆⲆⵠ]].ⵠΔᐃ = [];
									for (var ⲆⲆⲆᐃ = 0; ⵠΔⲆⲆΔⵠⲆ > ⲆⲆⲆᐃ; ⲆⲆⲆᐃ++) {
										ⲆᐃⵠⲆ[ⵠ[20]].ⵠΔᐃ.push({
											x: Math.random() * 120 - 60,
											y: 120 * Math.random() - 60,
											angle: 2 * (Math.random() * Math.PI),
											"ΔⲆᐃΔ": 41 + Math.floor(Math.random() * 9)
										})
									}
								} else if (19 <= ΔᐃⲆᐃ && 26 >= ΔᐃⲆᐃ) {
									ⲆᐃⵠⲆ[ⵠ[ⵠⵠΔⵠ]].scale = 3;
									var ⵠΔⲆⲆΔⵠⲆ = Math.floor(Math.random() * Ⲇᐃⵠⵠ + ᐃⲆⵠΔ);
									ⲆᐃⵠⲆ[ⵠ[ⲆᐃΔⵠ]].ⵠΔᐃ = [];
									for (var ⲆⲆⲆᐃ = ⵠⵠᐃᐃΔ; ⵠΔⲆⲆΔⵠⲆ > ⲆⲆⲆᐃ; ⲆⲆⲆᐃ++) {
										ⲆᐃⵠⲆ[ⵠ[ΔⵠΔⲆ]].ⵠΔᐃ.push({
											x: Math.random() * 120 - 60,
											y: Math.random() * 120 - 60,
											angle: Math.PI * Math.random() * ⵠⲆΔΔ,
											"ΔⲆᐃΔ": 19 + Math.floor(Math.random() * 8)
										})
									}
								} else ⵠⲆⲆᐃⲆ >= ΔᐃⲆᐃ || 27 <= ΔᐃⲆᐃ && 40 >= ΔᐃⲆᐃ ? (ⲆᐃⵠⲆ[ⵠ[20]].angle = Δⵠⵠ, ⲆᐃⵠⲆ[ⵠ[ᐃᐃⲆⲆⵠ]].scale = ᐃⲆⲆΔ, ⲆᐃⵠⲆ[ⵠ[20]].ΔⲆᐃΔ = ΔᐃⲆᐃ) : (ⲆᐃⵠⲆ[ⵠ[20]].angle = Math.random() * Math.PI * 2, ⲆᐃⵠⲆ[ⵠ[20]].scale = 1, ⲆᐃⵠⲆ[ⵠ[20]].ΔⲆᐃΔ = ΔᐃⲆᐃ)
							}
						}
					}
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "p", new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⲆⲆᐃⲆ, 1, 1, ΔΔⵠᐃ, 10, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "t", new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ⵠᐃΔᐃ, ⵠⵠᐃᐃΔ, ᐃᐃⵠᐃΔ, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "s", new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1, 0, ⵠΔⲆⵠᐃ, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "g", new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆⵠᐃⵠ, ⵠᐃΔᐃ, 1, 0, 10, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "d", new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⵠⵠΔⲆ, 1, 1, ΔⵠⲆⲆ, ᐃᐃⲆᐃᐃ, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "b", new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠⲆΔⵠ, ΔᐃᐃⲆ, ΔΔⵠΔⵠ, Ⲇᐃⵠᐃ, 10, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "f", new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, ΔΔᐃⵠ, ΔⵠⲆΔ, ⲆᐃᐃᐃⲆ, ⵠΔᐃΔᐃ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[469], new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⵠⲆⲆ, ⲆⲆΔᐃ, Δⵠⵠ, 10, ⲆⲆᐃⵠΔ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[71], new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⲆⲆᐃⲆ, ⵠⵠⲆ, 1, ΔΔⲆᐃ, 10, ⲆΔⵠᐃⲆ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[352], new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃⵠⵠ, 1, 0, 10, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "a", new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔΔᐃⵠⵠ, ΔᐃⵠΔ, ⵠⵠⲆΔ, 0, ⵠΔᐃΔᐃ, ⵠΔᐃΔⲆ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[370], new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 1, 1, ⵠᐃⲆᐃ, 10, ⵠΔᐃΔⲆ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[153], new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃⵠ, 1, ⲆΔᐃ, 10, 10));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, ⵠ[239], new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ᐃⲆⵠΔ, ᐃΔⲆⵠ, 0, 10, Ⲇⵠᐃⵠᐃ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "c", new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⲆⵠΔ, 1, 1, ⵠⵠᐃᐃΔ, ⲆⵠⲆⵠᐃ, ⵠΔⲆⵠᐃ));
					ᐃᐃΔⵠΔ(ⲆᐃⵠⲆ, "m", new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔⲆᐃⲆΔ, ΔᐃⵠΔ, ⲆΔᐃⲆ, 0, ⲆΔⵠᐃⲆ, 10))
				}
			}
		};
		this.time = Δ.ΔⲆΔ;
		this.ΔᐃⲆᐃᐃ = {
			translate: {
				y: ΔΔᐃ,
				x: ΔⵠⲆⲆ
			},
			"ⲆΔⲆΔΔ": ⵠⲆⲆᐃ,
			"ⲆⲆⲆⲆᐃ": ⲆΔᐃ,
			now: 0
		};
		this.ᐃᐃⵠᐃⲆΔⲆᐃⲆ = function() {
			this.ΔⲆΔⵠΔ = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃΔⵠΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.Δᐃⵠⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.Δⵠⵠᐃⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⵠⲆΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠΔⲆᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆᐃⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃᐃΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆⵠΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⲆᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃⲆΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠΔⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆᐃΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃΔⲆΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⲆⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃⲆᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔΔᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⵠΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠⵠⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃᐃⲆⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃᐃⲆⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃΔᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⵠᐃΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆΔⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠᐃⲆⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔⲆᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔⵠΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔΔΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔΔᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔᐃΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆᐃⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃⲆⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⵠΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔΔΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.Ⲇᐃᐃᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⲆⵠⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆΔⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔⲆᐃᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃΔⲆᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆᐃᐃⲆΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃΔᐃⵠⵠΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⵠᐃΔ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⵠΔᐃⲆⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔΔⲆⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ΔⲆⲆΔⵠ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⲆ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆΔᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆΔⵠᐃ] = [];
			this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃΔ] = [];
			return
		};
		this.ⲆᐃⲆΔΔⵠΔⵠᐃ = function(ⲆⲆᐃΔ) {
			if (!this.ΔⲆΔⵠΔ[ⲆⲆᐃΔ]) return;
			ⵠⲆᐃΔ = this.ΔⲆΔⵠΔ[ⲆⲆᐃΔ].type;
			this.ΔⲆΔⵠΔ[ⲆⲆᐃΔ] = null;
			var ⵠᐃⲆ = this.ⵠᐃⲆ[ⵠⲆᐃΔ];
			for (var ΔΔΔ = ᐃΔⵠⵠ; ⵠᐃⲆ.length > ΔΔΔ; ΔΔΔ++) {
				if (ⵠᐃⲆ[ΔΔΔ].ⲆⲆᐃΔ == ⲆⲆᐃΔ) {
					ⵠᐃⲆ.splice(ΔΔΔ, ᐃΔⲆⵠ);
					return
				}
			}
			return
		};
		this.ⵠΔᐃⵠⵠⵠⲆⵠΔ = function(ᐃⲆ, ΔΔΔ) {
			for (var ΔᐃⲆᐃ = 0; this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ].length > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
				var ⲆΔⵠΔ = this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃᐃⵠⵠ][ΔᐃⲆᐃ];
				if (Math.floor(ⲆΔⵠΔ.x / ⵠᐃⵠⵠΔ) === ΔΔΔ && Math.floor(ⲆΔⵠΔ.y / ⵠΔᐃᐃⲆ) === ᐃⲆ) return 1
			}
			return ⲆΔᐃ
		};
		this.ΔᐃⵠᐃᐃΔⵠⲆΔ = function(ᐃⲆ, ΔΔΔ) {
			for (var ΔᐃⲆᐃ = ΔᐃⲆΔ; ΔᐃⲆᐃ < this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ].length; ΔᐃⲆᐃ++) {
				var ⲆΔⵠΔ = this.ⵠᐃⲆ[ᐃⲆΔ.ⲆΔᐃΔΔ][ΔᐃⲆᐃ];
				if (Math.floor(ⲆΔⵠΔ.x / ᐃⵠᐃⲆⲆⲆᐃ) == ᐃⲆ && Math.floor(ⲆΔⵠΔ.y / 100) == ΔΔΔ) return true
			}
			return ⲆⵠᐃΔΔ
		};
		this.ⵠᐃΔᐃᐃ = function(ᐃⲆᐃΔ) {
			for (var ᐃⲆ = 0; ᐃⲆᐃΔ.length > ᐃⲆ; ᐃⲆ++) {
				ⲆΔⵠΔ = ᐃⲆᐃΔ[ᐃⲆ];
				if (ⲆΔⵠΔ.angle != ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ) {
					var ⵠⵠⵠΔᐃ = Math.PI * 2;
					ⲆΔⵠΔ.angle = (ⲆΔⵠΔ.angle + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ;
					ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ = (ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ;
					if (ⲆΔⵠΔ.angle != ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ) {
						var ⲆⲆΔⵠᐃᐃⵠ = ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ - ⲆΔⵠΔ.angle;
						var ΔⵠΔᐃ = Math.abs(ⲆⲆΔⵠᐃᐃⵠ);
						Math.PI < ΔⵠΔᐃ && (ΔⵠΔᐃ = ⵠΔⵠᐃ * Math.PI - ΔⵠΔᐃ);
						var ᐃᐃᐃ = ΔⵠΔᐃ / Math.PI * 3 * ⲆⵠΔΔ.ⲆᐃⲆΔΔᐃⲆ * ᐃᐃΔⲆ;
						if (ⲆⲆΔⵠᐃᐃⵠ > Math.PI) ⲆΔⵠΔ.angle -= ᐃᐃᐃ;
						else if (-Math.PI > ⲆⲆΔⵠᐃᐃⵠ) ⲆΔⵠΔ.angle += ᐃᐃᐃ;
						else if (ⲆⲆΔⵠᐃᐃⵠ < 0) ⲆΔⵠΔ.angle -= ᐃᐃᐃ;
						else ⲆΔⵠΔ.angle += ᐃᐃᐃ;
						ⲆΔⵠΔ.angle = (ⲆΔⵠΔ.angle + ⵠⵠⵠΔᐃ) % ⵠⵠⵠΔᐃ;
						if (Math.abs(ⲆΔⵠΔ.angle - ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ) < ᐃᐃᐃ) ⲆΔⵠΔ.angle = ⲆΔⵠΔ.ᐃⲆΔⲆΔⵠⵠ
					}
				}
				var ⲆⵠⵠΔⲆΔᐃⵠⵠ = Math.floor(ⲆΔⵠΔ.r.y / ⲆᐃᐃΔᐃⲆᐃ);
				var ᐃᐃᐃⲆΔᐃᐃᐃⵠ = Math.floor(ⲆΔⵠΔ.r.x / ⲆΔᐃⲆⵠ);
				if (ⲆΔⵠΔ.r.x != ⲆΔⵠΔ.x || ⲆΔⵠΔ.r.y != ⲆΔⵠΔ.y) {
					if (ⲆΔⵠΔ.action & ⵠΔⵠⵠ.IDLE) ⲆΔⵠΔ.action -= ⵠΔⵠⵠ.IDLE;
					ⲆΔⵠΔ.action |= ⵠΔⵠⵠ.ΔΔΔΔᐃⵠᐃ;
					var ⵠⵠⵠ = Ⲇᐃⵠ.ΔⵠⵠᐃᐃⲆⲆ(ⲆΔⵠΔ, ⲆΔⵠΔ.r) + Math.PI;
					var ⲆΔⲆᐃ = ᐃᐃΔⲆ * ⲆΔⵠΔ.ΔΔᐃᐃⲆ;
					var ⵠⵠΔ = Ⲇᐃⵠ.ⲆⲆⲆᐃᐃᐃⵠ(ⲆΔⲆᐃ, ⵠⵠⵠ);
					if (Ⲇᐃⵠ.ΔΔΔⲆᐃᐃᐃ(ⵠⵠΔ) < Ⲇᐃⵠ.ΔΔΔⲆᐃᐃᐃ(Ⲇᐃⵠ.ⵠᐃⵠΔᐃᐃⵠ(ⲆΔⵠΔ, ⲆΔⵠΔ.r))) Ⲇᐃⵠ.ⵠⲆⲆⵠⵠΔⵠ(ⲆΔⵠΔ, ⵠⵠΔ);
					else {
						ⲆΔⵠΔ.action & ⵠΔⵠⵠ.ΔΔΔΔᐃⵠᐃ && (ⲆΔⵠΔ.action -= ⵠΔⵠⵠ.ΔΔΔΔᐃⵠᐃ);
						ⲆΔⵠΔ.action |= ⵠΔⵠⵠ.IDLE;
						Ⲇᐃⵠ.ΔᐃᐃⲆΔⵠᐃ(ⲆΔⵠΔ.r, ⲆΔⵠΔ)
					}
				}
				if (ⲆΔⵠΔ.ΔΔᐃⲆΔ) {
					var ⵠⵠᐃⲆⲆ = ⲆΔⵠΔ.bubbles;
					var ⲆⲆⲆᐃ = ⵠⵠᐃⲆⲆ.length;
					if (ⲆⲆⲆᐃ === ⵠⲆⲆᐃ || Δ.ⵠⲆΔΔⵠᐃⲆ > ⲆⲆⲆᐃ && ⵠⵠᐃⲆⲆ[ⲆⲆⲆᐃ - 1].ⵠⵠⲆᐃΔ < .95) ⵠⵠᐃⲆⲆ.push({
						id: Math.floor(Math.random() * Ⲇᐃ[Δ.ΔⵠⵠⲆΔⵠᐃ][ⲆⲆⲆ].length),
						x: Math.floor(ⲆΔⵠΔ.x + Math.random() * 80 - 40),
						y: Math.floor(ⲆΔⵠΔ.y + Math.random() * 80 - 40),
						"ⵠⵠⲆᐃΔ": ⲆⲆΔᐃ
					});
					for (var ΔΔΔ = ⲆⲆⲆ; ⲆⲆⲆᐃ > ΔΔΔ; ΔΔΔ++) ⵠⵠᐃⲆⲆ[ΔΔΔ].ⵠⵠⲆᐃΔ = Math.max(0, ⵠⵠᐃⲆⲆ[ΔΔΔ].ⵠⵠⲆᐃΔ - ᐃᐃΔⲆ);
					for (var ΔΔΔ = ᐃⵠΔ; ⲆⲆⲆᐃ > ΔΔΔ; ΔΔΔ++) {
						if (ⵠⵠᐃⲆⲆ[ΔΔΔ].ⵠⵠⲆᐃΔ === 0) {
							ⵠⵠᐃⲆⲆ.splice(ΔΔΔ, ⵠⲆⲆ);
							break
						}
					}
				}
				var ᐃΔⲆⲆΔᐃΔ = 0;
				if (ⲆΔⵠΔ.ᐃⲆⲆᐃ && ᐃᐃΔΔ.ΔⲆⵠⲆΔ) {
					var ΔⲆᐃᐃⵠ = ⲆΔⵠΔ.ΔⲆᐃᐃⵠ;
					var ⲆⲆⲆᐃ = ΔⲆᐃᐃⵠ.length;
					if (ᐃⵠΔ < ⲆΔⵠΔ.ⵠⲆⲆΔᐃᐃᐃ && ⵠⲆ.ᐃⲆⲆⲆⲆ !== ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && ⲆΔⵠΔ.ΔⵠⵠⲆⵠ !== ⵠⲆ.ᐃⲆⲆᐃⲆ && ⵠⲆ.ⲆᐃΔⲆⲆ !== ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && ⲆΔⵠΔ.ΔⵠⵠⲆⵠ !== ⵠⲆ.ΔᐃⲆⵠᐃ && ⵠⲆ.ΔᐃΔⵠⵠ !== ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && !ⲆΔⵠΔ.ΔΔᐃⲆΔ) {
						ᐃΔⲆⲆΔᐃΔ = 1;
						if (ⲆⲆⲆᐃ === ΔᐃⲆΔ || Δ.ᐃΔᐃⲆⲆⲆⲆ < Ⲇᐃⵠ.ⵠⵠΔᐃ(ΔⲆᐃᐃⵠ[ⲆⲆⲆᐃ - ⲆⲆΔᐃ], ⲆΔⵠΔ)) {
							var ΔᐃΔ = -ⲆΔⵠΔ.angle;
							var ᐃᐃΔ = ᐃ * (45 * Math.cos(ΔᐃΔ));
							var ᐃⲆᐃ = Math.sin(ΔᐃΔ) * 45 * ᐃ;
							ΔⲆᐃᐃⵠ.push({
								x: ⲆΔⵠΔ.x + ᐃᐃΔ,
								y: ⲆΔⵠΔ.y + ᐃⲆᐃ,
								r: ΔⲆᐃⵠᐃ,
								alpha: .8
							});
							ΔⲆᐃᐃⵠ.push({
								x: ⲆΔⵠΔ.x - ᐃᐃΔ,
								y: ⲆΔⵠΔ.y - ᐃⲆᐃ,
								r: 8,
								alpha: .8
							});
							ΔⲆᐃᐃⵠ.push({
								x: ⲆΔⵠΔ.x,
								y: ⲆΔⵠΔ.y,
								r: 24,
								alpha: 1
							})
						}
					}
					for (var ΔΔΔ = ΔⲆⵠ; ΔΔΔ < ⲆⲆⲆᐃ; ΔΔΔ++) {
						ΔⲆᐃᐃⵠ[ΔΔΔ].alpha = Math.max(ᐃⵠΔ, ΔⲆᐃᐃⵠ[ΔΔΔ].alpha - ᐃᐃΔⲆ / 2.2);
						ΔⲆᐃᐃⵠ[ΔΔΔ].r += ᐃᐃΔⲆ * 20
					}
					if (ΔⲆᐃᐃⵠ.length > ᐃΔⵠⵠ && ΔⲆᐃᐃⵠ[0].alpha === 0) ΔⲆᐃᐃⵠ.splice(0, 1);
					var ⵠΔⵠⲆΔ = ⲆΔⵠΔ.ⵠΔⵠⲆΔ;
					var ⲆⲆⲆᐃ = ⵠΔⵠⲆΔ.length;
					var ⲆΔ = -1;
					var ᐃⲆΔᐃⲆΔᐃ = Math.max(0, Math.sign(ⲆΔⵠΔ.ⲆⲆΔⲆⵠⲆⵠ));
					var ⲆⲆⵠⲆⲆ = Math.max(0, Math.sign(ⲆΔⵠΔ.ⲆⲆⵠⵠΔ));
					var ΔΔⵠᐃⵠΔⵠⲆᐃ = Math.max(0, Math.sign(ⲆΔⵠΔ.ᐃⲆⲆᐃᐃ));
					var ⲆⵠΔⲆⲆⲆⲆ = Math.max(0, Math.sign(ⲆΔⵠΔ.ᐃⵠᐃΔΔ));
					var ⲆⵠᐃΔΔΔᐃ = Math.max(Δⵠⵠ, Math.sign(ⲆΔⵠΔ.ⵠⵠΔΔⲆ));
					if (0 < ⲆΔⵠΔ.ⲆⲆΔⲆⵠⲆⵠ || ⲆΔⵠΔ.ᐃⲆⲆᐃᐃ > ΔᐃⲆΔ) var ⲆΔ = Δ.ΔᐃⵠΔⲆΔⲆ;
					else if (ⵠᐃⲆᐃ < ⲆΔⵠΔ.ⵠⵠΔΔⲆ) var ⲆΔ = Δ.ⵠⵠΔΔⵠⲆⲆ;
					else if (0 < ⲆΔⵠΔ.ⲆⲆⵠⵠΔ) var ⲆΔ = Δ.ⵠⲆⲆⲆⵠⵠⲆ;
					else if (ⲆΔⵠΔ.ᐃⵠᐃΔΔ > 0) var ⲆΔ = Δ.ᐃᐃΔⵠΔᐃΔ;
					if (ⵠⲆ.ᐃΔⵠⵠΔ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && (ᐃⲆΔᐃⲆΔᐃ | ⲆⲆⵠⲆⲆ | ⲆⵠΔⲆⲆⲆⲆ | ⲆⵠᐃΔΔΔᐃ) === ⲆⲆΔᐃ) {
						ⲆΔ = Δ.ΔⲆⵠᐃΔⵠⵠ;
						var ⵠⲆⵠᐃΔᐃᐃ = ⲆΔⵠΔ.ᐃⵠᐃΔⵠ - Math.PI / 2;
						var ⲆΔΔΔⲆⵠⵠ = 15;
						var ⵠΔⵠᐃΔ = ᐃⲆⵠΔⲆⲆⵠ;
						var ᐃⵠⵠⲆΔᐃᐃ = Δ.ᐃⲆⵠⵠᐃⵠᐃ
					} else if (ⵠⲆ.ⵠⵠᐃᐃᐃ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && ⵠᐃΔᐃ === (ᐃⲆΔᐃⲆΔᐃ | ⲆⲆⵠⲆⲆ | ⲆⵠΔⲆⲆⲆⲆ | ⲆⵠᐃΔΔΔᐃ)) {
						ⲆΔ = Δ.ⲆⵠᐃΔΔᐃⲆ;
						var ⵠⲆⵠᐃΔᐃᐃ = ⲆΔⵠΔ.ᐃⵠᐃΔⵠ - Math.PI / 2;
						var ⲆΔΔΔⲆⵠⵠ = 21;
						var ⵠΔⵠᐃΔ = ⲆⵠᐃΔᐃ;
						var ᐃⵠⵠⲆΔᐃᐃ = Δ.ᐃⲆⵠⵠᐃⵠᐃ
					} else if (ⵠⲆ.ᐃᐃⵠΔΔ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ && ᐃᐃΔᐃ === (ᐃⲆΔᐃⲆΔᐃ | ⲆⲆⵠⲆⲆ | ⲆⵠΔⲆⲆⲆⲆ | ⲆⵠᐃΔΔΔᐃ)) {
						ⲆΔ = Δ.ⲆⵠⲆⲆⲆΔⵠ;
						var ⵠⲆⵠᐃΔᐃᐃ = ⲆΔⵠΔ.ᐃⵠᐃΔⵠ - Math.PI / ⲆᐃⲆᐃ;
						var ⲆΔΔⲆⵠᐃⲆ = 50 * Math.random();
						var ⲆΔΔΔⲆⵠⵠ = ⲆᐃᐃᐃⲆ + ⲆΔΔⲆⵠᐃⲆ;
						var ⵠΔⵠᐃΔ = Δⵠⵠ + ⲆΔΔⲆⵠᐃⲆ;
						var ᐃⵠⵠⲆΔᐃᐃ = Δ.ᐃⲆⵠⵠᐃⵠᐃ * .9
					} else {
						var ⵠⲆⵠᐃΔᐃᐃ = ⲆΔⵠΔ.angle;
						var ⲆΔΔΔⲆⵠⵠ = ᐃᐃⵠⲆᐃⲆΔ;
						var ⵠΔⵠᐃΔ = ΔΔΔΔⵠ;
						var ᐃⵠⵠⲆΔᐃᐃ = Δ.ᐃⲆⵠⵠᐃⵠᐃ
					}
					if (ⲆΔⵠΔ.ΔⵠⵠⲆⵠ === ⵠⲆ.ᐃⲆⲆⲆⲆ || ⵠⲆ.ᐃⲆⲆᐃⲆ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ || ⵠⲆ.ΔᐃΔⵠⵠ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ || ⵠⲆ.ΔᐃⲆⵠᐃ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ || ⵠⲆ.ⲆᐃΔⲆⲆ === ⲆΔⵠΔ.ΔⵠⵠⲆⵠ || ⲆΔⵠΔ.ΔΔᐃⲆΔ);
					else if (ⲆΔⵠΔ.ΔⵠⵠⲆⵠ === ⵠⲆ.ⵠᐃⲆⵠΔ) {
						if (0 === ⲆⲆⲆᐃ || Ⲇᐃⵠ.ⵠⵠΔᐃ(ⵠΔⵠⲆΔ[ⲆⲆⲆᐃ - ⵠⲆⲆ], ⲆΔⵠΔ) > Δ.ᐃⵠⲆᐃⵠᐃᐃ) ⵠΔⵠⲆΔ.push({
							x: ⲆΔⵠΔ.x,
							y: ⲆΔⵠΔ.y,
							angle: ⲆΔⵠΔ.ᐃⵠᐃΔⵠ,
							alpha: ΔᐃⵠΔ,
							id: Δ.ΔᐃⵠᐃΔᐃⵠ
						})
					} else if (-1 != ⲆΔ && ᐃΔⲆⲆΔᐃΔ === 0) {
						if (0 === ⲆⲆⲆᐃ || Ⲇᐃⵠ.ⵠⵠΔᐃ(ⵠΔⵠⲆΔ[ⲆⲆⲆᐃ - ΔΔⲆΔ], ⲆΔⵠΔ) > ᐃⵠⵠⲆΔᐃᐃ) {
							ⲆΔⵠΔ.ᐃⲆᐃⲆΔⲆⲆ++;
							if (ⵠᐃΔᐃ < Math.abs(ⲆΔⵠΔ.x - ⲆΔⵠΔ.r.x) && 1 < Math.abs(ⲆΔⵠΔ.y - ⲆΔⵠΔ.r.y)) {
								if (ⲆΔⵠΔ.r.x > ⲆΔⵠΔ.x && ⲆΔⵠΔ.r.y < ⲆΔⵠΔ.y || ⲆΔⵠΔ.x > ⲆΔⵠΔ.r.x && ⲆΔⵠΔ.y < ⲆΔⵠΔ.r.y) {
									if (ⲆΔⵠΔ.ᐃⲆᐃⲆΔⲆⲆ % ᐃⲆⵠᐃ) {
										var ᐃᐃΔ = ᐃ * -ⵠΔⵠᐃΔ;
										var ᐃⲆᐃ = -ⵠΔⵠᐃΔ * ᐃ
									} else {
										var ᐃⲆᐃ = ᐃ * ⵠΔⵠᐃΔ;
										var ᐃᐃΔ = ⵠΔⵠᐃΔ * ᐃ
									}
								} else {
									if (ⲆΔⵠΔ.ᐃⲆᐃⲆΔⲆⲆ % 2) {
										var ᐃᐃΔ = ⵠΔⵠᐃΔ * ᐃ;
										var ᐃⲆᐃ = ᐃ * -ⵠΔⵠᐃΔ
									} else {
										var ᐃⲆᐃ = ⵠΔⵠᐃΔ * ᐃ;
										var ᐃᐃΔ = -ⵠΔⵠᐃΔ * ᐃ
									}
								}
							} else if (ⲆΔⵠΔ.ᐃⲆᐃⲆΔⲆⲆ % ᐃᐃΔⵠ) {
								var ᐃᐃΔ = ⲆΔΔΔⲆⵠⵠ * Math.cos(ⵠⲆⵠᐃΔᐃᐃ) * ᐃ;
								var ᐃⲆᐃ = ᐃ * (Math.sin(ⵠⲆⵠᐃΔᐃᐃ) * ⲆΔΔΔⲆⵠⵠ)
							} else {
								var ᐃᐃΔ = ᐃ * (-Math.cos(ⵠⲆⵠᐃΔᐃᐃ) * ⲆΔΔΔⲆⵠⵠ);
								var ᐃⲆᐃ = -Math.sin(ⵠⲆⵠᐃΔᐃᐃ) * ⲆΔΔΔⲆⵠⵠ * ᐃ
							}
							ⵠΔⵠⲆΔ.push({
								x: ⲆΔⵠΔ.x + ᐃᐃΔ,
								y: ⲆΔⵠΔ.y + ᐃⲆᐃ,
								angle: ⵠⲆⵠᐃΔᐃᐃ + Math.PI / ᐃⵠΔⲆ,
								alpha: ⲆᐃⲆⲆ,
								id: ⲆΔ
							})
						}
					}
					for (var ΔΔΔ = 0; ΔΔΔ < ⲆⲆⲆᐃ; ΔΔΔ++) {
						Δ.ΔᐃⵠᐃΔᐃⵠ === ⵠΔⵠⲆΔ[ΔΔΔ].id ? ⵠΔⵠⲆΔ[ΔΔΔ].alpha = Math.max(0, ⵠΔⵠⲆΔ[ΔΔΔ].alpha - 1.5 * ᐃᐃΔⲆ) : ⵠΔⵠⲆΔ[ΔΔΔ].alpha = Math.max(ⲆⲆⲆ, ⵠΔⵠⲆΔ[ΔΔΔ].alpha - ᐃᐃΔⲆ / 2.85)
					}
					if (ⵠΔⵠⲆΔ.length > ᐃΔⵠⵠ && 0 === ⵠΔⵠⲆΔ[0].alpha) ⵠΔⵠⲆΔ.splice(ΔⲆⵠ, 1)
				}
			}
		};
		this.ⵠᐃⵠ = function() {
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔΔᐃᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⲆⲆⲆⵠΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠᐃᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔᐃΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠᐃᐃᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃᐃⵠΔΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⲆⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆᐃⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ΔᐃⲆⵠᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⲆΔᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆΔΔΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⲆⵠΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠᐃⲆⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃΔᐃΔⵠ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⵠⲆⲆΔ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠⲆΔⵠ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.Ⲇᐃᐃᐃᐃ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠᐃⲆᐃᐃΔⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⲆⵠᐃⵠ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠⲆⲆⵠⵠ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ΔⵠΔΔⵠ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ⵠΔⵠΔⲆ]);
			this.ⵠᐃΔᐃᐃ(this.ⵠᐃⲆ[ᐃⲆΔ.ᐃⵠΔᐃᐃ])
		};
		this.ᐃⵠΔⵠ = [];
		this.ᐃⵠΔⵠ[Δ.ΔΔᐃⲆⵠ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃⲆⵠⲆ, ᐃΔⲆⵠ, 1.05, ⵠⵠⲆ, .008, .008);
		this.ᐃⵠΔⵠ[Δ.ⲆⲆⲆⲆⵠ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, 1, 1.08, 1, .006, .006);
		this.ᐃⵠΔⵠ[Δ.ⲆⲆⲆⲆⲆ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⲆⲆᐃⲆ, ⲆⲆΔᐃ, 1.02, ᐃⵠⵠ, .008, .008);
		this.ᐃⵠΔⵠ[Δ.ⵠⵠᐃⲆⵠ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ΔΔⲆΔ, 1.08, ⲆᐃⲆⲆ, .006, .006);
		this.ΔᐃⲆⵠⵠ = [];
		this.ΔᐃⲆⵠⵠ[Ⲇᐃⵠᐃ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔᐃⲆⵠⲆ, .1, 1, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[1] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, .4, ΔⲆᐃ, ᐃⵠΔ, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⵠⵠΔⲆ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .3, 1, ᐃⵠΔ, .6, .6);
		this.ΔᐃⲆⵠⵠ[3] = new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, .8, 1, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⲆⵠⲆΔⲆ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⵠⲆΔⵠ, .3, ᐃⲆⵠΔ, ⵠⵠⲆⲆ, .6, .6);
		this.ΔᐃⲆⵠⵠ[5] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .8, 1, Δⵠⵠ, .6, .6);
		this.ΔᐃⲆⵠⵠ[6] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .5, ᐃΔⲆⵠ, ᐃΔⵠⵠ, .6, .6);
		this.ΔᐃⲆⵠⵠ[ᐃⵠᐃⵠΔ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .9, 1, ΔΔⲆᐃ, .6, .6);
		this.ΔᐃⲆⵠⵠ[8] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⲆⵠΔ, .6, 1, ⵠᐃⲆᐃ, .6, .6);
		this.ΔᐃⲆⵠⵠ[9] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .2, 1, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⵠⵠΔⲆᐃ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ᐃⲆⲆΔΔ, .6, 1, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[ᐃΔᐃⵠΔ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(Ⲇᐃⵠⵠᐃ, .4, ᐃⵠⵠ, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⲆⵠⲆᐃᐃ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .8, 1, 0, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⲆⲆⵠᐃⵠⵠⲆ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠΔⵠ, .2, 1, ⵠⲆⲆᐃ, .6, .6);
		this.ΔᐃⲆⵠⵠ[ⲆⵠΔΔⵠⵠΔ] = new Ⲇᐃⵠ.ᐃΔΔⲆ(false, .7, 1, 0, .6, .6)
	}

	function ᐃⲆᐃⵠⵠΔᐃᐃᐃ() {
		this.ᐃΔⲆᐃⵠ = "";
		this.ᐃᐃᐃΔ = 0;
		this.ᐃᐃᐃⲆⵠ = 0;
		this.ΔⵠⵠⵠⲆ = ᐃⵠΔ;
		this.ΔⲆΔⵠⲆΔᐃ = 0;
		this.ⲆΔⵠⲆⵠ = ⵠⵠᐃᐃΔ;
		this.ΔᐃⲆⲆⲆ = 0;
		this.ⲆⵠᐃΔⵠ = 0;
		this.level = ΔΔᐃ;
		this.label = null;
		this.ᐃⵠΔΔⲆᐃᐃ = null;
		this.ΔⵠᐃⲆⵠᐃᐃ = null;
		this.ᐃᐃⲆΔΔ = false;
		this.ⵠⲆⲆᐃᐃ = ΔⵠⲆΔ
	}

	function ᐃᐃⲆᐃΔΔΔ(ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, ΔᐃΔ) {
		this.id = ⲆΔ;
		this.ΔΔᐃᐃⲆ = ᐃᐃΔⵠⵠ * (ⲆΔ + ᐃᐃⲆᐃⵠ);
		this.ⵠⵠⲆᐃΔ = Ⲇⵠⵠⵠ / 1366;
		this.x = ᐃᐃΔ;
		this.y = ᐃⲆᐃ;
		this.c = Math.sin(ΔᐃΔ);
		this.ᐃⵠⵠⲆ = Math.cos(ΔᐃΔ);
		this.alpha = ΔⲆᐃⲆ
	}
	ⵠᐃΔⵠⵠΔᐃᐃⲆ = ⵠⲆⲆ;

	function ⲆⲆⲆⲆⵠᐃΔ() {
		var ΔᐃⲆᐃ = Math.random();
		return "r"
	}

	function ᐃᐃⵠⵠⵠΔᐃΔⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "I"
	}

	function ⵠⵠⲆⵠⲆⲆᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "t"
	}

	function ⵠⲆⲆᐃΔⲆΔΔⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "w"
	}

	function ΔⲆᐃΔΔᐃΔ() {
		var ΔᐃⲆᐃ = Math.random();
		return "i"
	}

	function ⵠᐃⵠΔⵠⵠⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "p"
	}

	function ΔΔⵠΔᐃⵠⲆⲆⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "2"
	}

	function ⲆⲆᐃⲆⲆᐃⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "o"
	}

	function ᐃᐃᐃᐃⵠᐃⵠⲆᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "x"
	}

	function ⵠⲆⲆⲆⲆⲆᐃⲆⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "S"
	}

	function ⵠⲆⲆᐃᐃᐃⵠⲆⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "b"
	}

	function ⵠⲆΔⲆᐃⵠⵠΔⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "D"
	}

	function ᐃΔΔⲆⲆⵠⵠ() {
		var ⵠⵠᐃΔⵠⵠⲆ = ⲆΔᐃΔⲆⲆᐃ() + ⵠΔⲆⵠⵠⵠᐃ() + ⵠⵠⲆⵠⲆⲆᐃ() + ΔⲆᐃΔΔᐃΔ();
		var ⵠⵠⵠ = ΔΔᐃΔᐃⵠΔⵠᐃ() + ᐃᐃⲆⲆⵠⵠⵠ() + ⵠⲆⲆᐃᐃᐃⵠⲆⲆ() + ⵠⲆⲆⲆⲆⲆᐃⲆⵠ() + ⲆⲆᐃⲆⲆᐃⵠ() + ΔᐃⲆⲆᐃᐃⲆⲆⵠ() + ⲆⵠⵠΔⵠⵠⲆⵠⵠ() + ᐃᐃⲆⲆⵠⵠⵠ() + ⵠⵠⲆⵠⲆⲆᐃ();
		if (ⲆⲆⲆⲆᐃᐃᐃ[ⵠⵠⵠ][ⲆⵠΔᐃᐃᐃΔ[274]]().indexOf(ⵠⵠᐃΔⵠⵠⲆ) === -1) Math.floor = function() {
			return Math.round() + ⲆΔⵠⲆ
		};
		var ⲆΔⵠΔ = ᐃᐃⲆΔᐃΔⲆ() + ᐃᐃⲆⲆⵠⵠⵠ() + ⲆΔᐃΔⲆⲆᐃ() + ⲆⲆⲆᐃᐃⵠⲆ();
		var ᐃΔⵠⲆ = ⵠᐃⵠΔⵠⵠⵠ() + ⲆⲆⲆⲆⵠᐃΔ() + ⲆⲆᐃⲆⲆᐃⵠ() + ⵠⵠⲆⵠⲆⲆᐃ() + ⲆⲆᐃⲆⲆᐃⵠ() + ⵠⵠⲆⵠⲆⲆᐃ() + ⵠΔⵠⵠΔΔᐃΔⵠ() + ⵠᐃⵠΔⵠⵠⵠ() + ᐃᐃⲆⲆⵠⵠⵠ();
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠⵠⵠ][ᐃΔⵠⲆ][ⲆΔⵠΔ][ⲆⵠΔᐃᐃᐃΔ[274]]().indexOf(ⵠⵠᐃΔⵠⵠⲆ) === -ΔΔⵠΔⵠ && (Math.floor = function() {
			return Math.round() + ⲆᐃⲆⲆ
		});
		var ⵠⵠⵠ = ⲆⲆⲆᐃᐃⵠⲆ() + ⲆⲆⲆⲆⵠᐃΔ() + ⵠΔⲆⵠⵠⵠᐃ() + ⵠⲆⲆᐃΔⲆΔΔⲆ() + ᐃᐃⵠⵠⵠΔᐃΔⵠ() + ⵠᐃⵠⵠΔΔⵠᐃⲆ() + ⵠΔⲆⵠⵠⵠᐃ() + ⲆⵠΔⲆⲆΔΔ() + ᐃᐃⲆⲆⵠⵠⵠ();
		var ⲆΔⵠΔ = ⵠⲆⵠᐃⲆᐃⲆ() + ⵠΔⲆⵠⵠⵠᐃ() + ⲆΔᐃΔⲆⲆᐃ() + ⲆⲆⵠⲆⵠⵠⵠᐃⲆ() + ⵠΔⲆⵠⵠⵠᐃ() + ᐃᐃⲆΔᐃΔⲆ() + ⲆΔΔᐃᐃΔⲆᐃⵠ() + ᐃᐃⲆⲆⵠⵠⵠ() + ⲆΔᐃΔⲆⲆᐃ() + ⲆⲆⲆᐃᐃⵠⲆ() + ᐃᐃⲆⲆⵠⵠⵠ() + ⲆⲆⲆⲆⵠᐃΔ() + ΔⲆᐃΔΔᐃΔ() + ⲆΔᐃΔⲆⲆᐃ() + ⲆⵠΔⲆⲆΔΔ() + ⵠⲆⵠᐃⲆᐃⲆ() + ⲆⲆᐃⲆⲆᐃⵠ() + ⲆΔᐃΔⲆⲆᐃ() + ⵠⵠⲆⵠⲆⲆᐃ() + ᐃᐃⲆⲆⵠⵠⵠ() + ᐃᐃᐃᐃⵠᐃⵠⲆᐃ() + ⵠⵠⲆⵠⲆⲆᐃ() + ΔΔⵠΔᐃⵠⲆⲆⵠ() + ⵠⲆΔⲆᐃⵠⵠΔⲆ();
		if (ⲆⲆⲆⲆᐃᐃᐃ[ⲆΔⵠΔ][ᐃΔⵠⲆ][ⵠⵠⵠ][ⲆⵠΔᐃᐃᐃΔ[274]]().indexOf(ⵠⵠᐃΔⵠⵠⲆ) === -1) Math.floor = function() {
			return Math.round() + 1
		};
		setTimeout(ᐃΔΔⲆⲆⵠⵠ, 1e5)
	}

	function ⵠΔⵠⵠΔΔᐃΔⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "y"
	}

	function ⲆⵠΔⲆⲆΔΔ() {
		var ΔᐃⲆᐃ = Math.random();
		return "g"
	}

	function ⲆⲆⵠⲆⵠⵠⵠᐃⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "v"
	}

	function ΔᐃⲆⲆᐃᐃⲆⲆⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "c"
	}

	function ⵠⲆⵠᐃⲆᐃⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "C"
	}

	function ⲆⲆᐃⲆⲆᐃⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "o"
	}

	function ⲆΔᐃΔⲆⲆᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "n"
	}

	function ⵠᐃⵠΔⵠⵠⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "p"
	}

	function ⵠΔⲆⵠⵠⵠᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "a"
	}

	function ⲆⲆⲆΔΔⲆᐃⵠⲆ() {
		this.ⲆΔⲆΔΔ = function() {};
		this.ᐃΔᐃⵠᐃ = {
			"ΔΔΔⵠ": 1,
			open: false,
			"ⵠᐃΔⵠⲆ": 1
		};
		this.ᐃⲆΔⲆᐃ = {
			"ΔΔΔⵠ": 1,
			"ⵠᐃΔⵠⲆ": -ⵠᐃΔᐃ,
			open: false
		};
		this.ΔⲆⵠⲆ = {
			"ⵠᐃΔⵠⲆ": -1,
			open: false,
			"ΔΔΔⵠ": ΔΔᐃⵠ,
			"ᐃⲆⵠⵠΔΔⵠ": 0,
			"ⲆⵠⵠΔⵠ": 0
		};
		this.ᐃⵠΔΔ = {
			"ⵠⵠⲆⵠⵠⵠⲆ": 0,
			"ⵠᐃΔⵠⲆ": -1,
			open: ΔᐃΔᐃᐃ,
			"ΔΔΔⵠ": ⲆΔᐃⲆ,
			"ⵠⵠⵠΔⲆⵠΔ": ᐃΔⵠⵠ,
			type: Δⵠⵠ,
			"ᐃΔΔΔΔᐃⲆ": 0
		};
		this.ⵠΔⵠΔ = {
			"ⵠⵠⵠΔⲆⵠΔ": 0,
			"ⵠᐃⵠⲆᐃⵠΔ": 0,
			"ⲆⵠⵠΔⵠ": 0,
			"ΔΔΔⵠ": ᐃⵠ,
			"ⵠᐃΔⵠⲆ": -ⵠⵠⲆΔ,
			open: ⲆᐃⲆᐃΔ
		};
		this.sign = {
			"ⵠᐃΔⵠⲆ": -ΔΔᐃⵠ,
			open: ⵠⲆⵠΔⵠ
		};
		this.ᐃⵠᐃⵠⵠ = {
			"ΔΔΔⵠ": ⲆᐃⲆⲆ,
			open: false,
			"ⵠᐃΔⵠⲆ": -1,
			"ⲆᐃᐃⲆ": ΔΔⵠᐃ
		};
		this.ΔΔᐃⲆΔ = {
			enabled: ⲆⲆⲆᐃⲆ,
			"ᐃᐃΔⲆΔ": -ΔΔᐃⵠ,
			label: ΔᐃΔᐃᐃ,
			now: -1,
			"ⲆⵠᐃⲆ": ΔⵠⲆΔᐃⵠᐃⵠⲆ
		};
		this.ⵠᐃⵠᐃ = {
			"ⵠᐃΔⵠⲆ": -1,
			"ⲆⲆⵠᐃⲆᐃᐃ": false,
			"ⲆᐃᐃⲆ": ΔᐃⲆΔ,
			"ΔΔⵠⲆΔΔΔ": false,
			"ΔΔΔⵠ": ᐃⵠⵠ,
			lock: ⵠⲆⵠΔⵠ,
			open: ΔᐃΔΔΔ,
			id: -1,
			locked: ᐃⵠⲆΔⵠ
		};
		this.ᐃᐃⲆΔΔ = ΔᐃⲆΔⲆ;
		this.reconnect = {
			enabled: ᐃⲆⲆΔΔ,
			rotate: 0
		};
		this.key = Ⲇᐃⵠ.ΔᐃⲆⲆΔⲆᐃ("key", ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[329]][ⲆⵠΔᐃᐃᐃΔ[208]]);
		var ΔΔⵠⲆᐃⵠⲆ = Ⲇᐃⵠ.ΔᐃⲆⲆΔⲆᐃ("egg", ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[329]][ⲆⵠΔᐃᐃᐃΔ[208]]);
		ΔΔⵠⲆᐃⵠⲆ && (ᐃᐃΔΔ.ᐃᐃᐃΔ = parseInt(ΔΔⵠⲆᐃⵠⲆ));
		this.beta = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[329]][ⲆⵠΔᐃᐃᐃΔ[208]].indexOf("http://starve.io/beta") === 0 ? 1 : 0;
		if (this.key && this.beta) {
			ⲆΔΔᐃ.set("starve_beta", this.key)
		} else if (this.beta) this.key = ⲆΔΔᐃ.get("starve_beta");
		this.ⵠΔᐃⵠⲆ = ⲆΔΔᐃ.get("starve_token") ? ⲆΔΔᐃ.get("starve_token") : Ⲇᐃⵠ.ⵠᐃⵠᐃⵠⲆⲆ(ᐃΔᐃᐃΔ.ᐃⵠⲆⲆΔᐃᐃⵠᐃ);
		ⲆⲆⲆⲆᐃᐃᐃ["baguette"]();
		var ΔⵠΔΔⲆᐃᐃΔᐃ = ⲆⲆⲆⲆᐃᐃᐃ["kot2"];
		this.ⵠΔᐃⵠⲆ = ΔⵠΔΔⲆᐃᐃΔᐃ.substring(0, ᐃⲆᐃᐃΔ) + this.ⵠΔᐃⵠⲆ.substring(ᐃⲆᐃᐃΔ);
		this.ᐃΔᐃⲆΔᐃⲆ = ⲆΔΔᐃ.get("starve_token_id") ? ⲆΔΔᐃ.get("starve_token_id") : "";
		this.id = ⲆⵠⲆ;
		this.ⲆⲆᐃΔ = ⲆⲆⲆ;
		this.ⲆⲆΔ = 0;
		this.Ⲇᐃⵠⵠᐃᐃᐃ = {
			"ⲆⲆⲆⲆᐃᐃΔ": 0,
			"ⵠⲆⲆᐃᐃ": ΔΔⲆᐃ,
			"ⲆΔΔⵠⵠΔΔ": "",
			"ᐃᐃⲆⲆⲆΔⲆ": ΔᐃⲆΔ
		};
		this.ⲆⲆΔᐃᐃⵠΔⵠⲆ = {
			connected: 0,
			"ⲆⵠΔΔⵠⵠⲆ": (new Date).getTime()
		};
		this.ΔⵠΔⵠΔ = [];
		this.ⲆΔΔΔⲆⲆⲆ = function(ⲆΔ) {
			for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < this.ΔⵠΔⵠΔ.length; ᐃⲆ++) {
				if (ⲆΔ == this.ΔⵠΔⵠΔ[ᐃⲆ]) return ⲆΔᐃⲆⲆ
			}
			return ᐃⵠᐃⵠᐃ
		};
		this.ⲆᐃⵠΔⵠ = {
			"ᐃᐃΔⲆΔ": 0,
			time: 0,
			value: ΔⲆⵠ,
			open: ᐃⲆⲆΔΔ,
			"ⲆⵠᐃⲆ": function() {
				if (this[ⲆⵠΔᐃᐃᐃΔ[88]]) {
					var ᐃⵠᐃᐃᐃ = (new Date).getTime();
					this.time = Math.floor((ᐃⵠᐃᐃᐃ - this.ᐃᐃΔⲆΔ) / 1e3);
					if (this.time < 60) {
						ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.button.ⲆⵠᐃⲆ(Ⲇ)
					} else {
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[205]).style.display = ⵠ[402];
						this[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔⲆⵠᐃⵠ
					}
				}
			}
		};
		this.ⵠⲆⵠᐃⲆ = {
			id: -1,
			"ΔΔΔⵠ": -ⲆΔᐃⲆ,
			lock: 0,
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, ⲆΔᐃⲆ, ⵠⵠⲆⲆ, 1 / 30, 1),
			wait: false
		};
		this.ⵠΔᐃⲆΔ = {
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⲆⲆⲆ, 1, ΔⵠⲆⲆ, ⲆⲆΔᐃ / 5, ΔΔⲆΔ),
			wait: ΔⲆᐃⲆΔ
		};
		this.ᐃᐃΔⲆᐃ = {
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(false, 0, ΔΔᐃⵠ, 0, 1, 1),
			wait: Ⲇᐃⵠⵠᐃ
		};
		this.ⲆΔⵠᐃΔ = {
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆΔᐃⵠⲆ, ⲆⵠⲆ, ᐃⵠ, 0, 1 / 10, 1),
			wait: ᐃⲆⲆΔΔ
		};
		this.ⵠΔΔ = new Ⲇᐃⵠ.ⲆⵠΔᐃⲆⵠΔ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, ΔⵠⲆΔ, .4, 0, ⵠⲆⲆᐃ, ᐃΔΔᐃ, ⲆⲆΔⲆ, ᐃΔΔᐃ, ⲆⲆΔⲆ);
		this.ⵠΔΔ.ᐃᐃΔⲆΔ = ᐃⵠΔ;
		this.ⵠΔΔ.ᐃΔΔΔᐃΔⵠ = 0;
		this.ⵠΔΔ.ⵠᐃⵠ = function() {
			if (0 < this.ᐃΔΔΔᐃΔⵠ) {
				this.ᐃΔΔΔᐃΔⵠ -= ᐃᐃΔⲆ;
				return
			}
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			if (ⵠΔᐃ && !Settings.Spectator.enabled) {
				this.ᐃᐃΔⲆΔ = 0;
				var ᐃᐃΔ = Math.max(Math.min(ᐃΔΔᐃ - ⵠΔᐃ.x, -2), -ⲆΔΔ.w + ΔᐃⵠⲆ + Ⲇⵠⵠⵠ);
				var ᐃⲆᐃ = Math.max(Math.min(ⲆⲆΔⲆ - ⵠΔᐃ.y, -ᐃΔⵠᐃ), -ⲆΔΔ.ΔᐃⲆ + 2 + ᐃΔⲆᐃ);
				this.ⲆⵠᐃⲆⲆΔΔ({
					x: ᐃᐃΔ,
					y: ᐃⲆᐃ
				})
			} else {
				this.ᐃᐃΔⲆΔ += ᐃᐃΔⲆ;
				if (this.ᐃᐃΔⲆΔ > 3) {
					this.ᐃᐃΔⲆΔ = Δⵠⵠ;
					if (!ⲆΔⲆ.reconnect.enabled) ᐃΔᐃⵠ.ⵠⲆⵠᐃⲆᐃⲆⲆⲆ()
				}
			}
		};
		this.ⵠΔΔ.w = screen.width;
		this.ⵠΔΔ.ΔᐃⲆ = screen.height;
		this.ⵠΔΔ.ⵠⲆΔΔⵠⲆΔ = this.ⵠΔΔ.w;
		this.ⵠΔΔ.ⲆⲆⲆΔΔⲆᐃ = this.ⵠΔΔ.ΔᐃⲆ;
		this.ⵠΔΔ.rx = ⵠᐃⲆᐃ;
		this.ⵠΔΔ.ry = 0;
		this.ⵠΔΔ.ⲆⵠᐃᐃΔᐃΔⵠᐃ = ΔΔᐃ;
		this.ⵠΔΔ.ⲆⲆⲆⲆⲆⵠᐃᐃⵠ = ⵠⵠᐃⵠ;
		this.ⵠΔΔ.ⲆᐃΔᐃΔ = function(ᐃᐃΔ, ᐃⲆᐃ) {
			this.x = -Math.min(Math.max(-ⲆΔΔ.ᐃⲆΔΔⵠⲆΔ * ⵠΔⲆΔ, ᐃᐃΔ - ⲆΔΔ.ᐃⲆΔΔⵠⲆΔ - this.ⵠⲆΔΔⵠⲆΔ / ΔⵠΔΔ), ⲆΔΔ.w - this.ⵠⲆΔΔⵠⲆΔ);
			this.y = -Math.min(Math.max(-ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ * 2, ᐃⲆᐃ - (ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ + this.ⲆⲆⲆΔΔⲆᐃ) / ⵠᐃⵠΔ), ⲆΔΔ.ΔᐃⲆ - this.ⲆⲆⲆΔΔⲆᐃ + ⲆΔΔ.ⵠⲆⵠᐃⲆΔᐃ);
			this.ᐃᐃΔᐃᐃ = this.x;
			this.ᐃⵠⵠⲆᐃⵠⲆ = this.y
		};
		this.control = {
			angle: ⵠⲆⲆᐃ,
			timeout: ΔⵠⲆΔ,
			"ⲆᐃⲆⲆⲆⵠΔ": 0,
			"ᐃⲆΔⲆ": 0,
			attack: 0,
			"ⵠᐃⵠ": function() {
				var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
				if (ⵠΔᐃ) var ᐃΔΔⵠ = {
					x: ⲆΔⲆ.ⵠΔΔ.x + ⵠΔᐃ.x,
					y: ⲆΔⲆ.ⵠΔΔ.y + ⵠΔᐃ.y
				};
				else var ᐃΔΔⵠ = ᐃⵠⲆⲆⲆⵠᐃ;
				var ΔᐃΔ = Settings.AimBot.enabled && Settings.AimBot.angle != null ? Settings.AimBot.angle : Ⲇᐃⵠ.ΔⵠⵠᐃᐃⲆⲆ(ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔΔⵠ);
				var ⲆⵠⵠⲆᐃⲆᐃ = false;
				this.ᐃⲆΔⲆ += ᐃᐃΔⲆ;
				if (!ᐃⲆΔⲆ.state) {
					if (ⵠΔᐃ && !(ⵠΔᐃ.action & ⵠΔⵠⵠ.ⲆⲆᐃⲆⲆⲆΔ) && this.ᐃⲆΔⲆ > ᐃΔᐃᐃΔ.ⲆⲆᐃⲆⲆⲆΔ) {
						this.attack = ⲆΔᐃⲆ;
						ⲆⵠⵠⲆᐃⲆᐃ = true;
						this.ᐃⲆΔⲆ = ΔΔᐃ;
						ᐃΔᐃⵠ.ⲆΔΔⵠΔᐃᐃⵠᐃ(ΔᐃΔ)
					}
				}
				if (ⵠΔᐃ) {
					ⵠΔᐃ.angle = ΔᐃΔ;
					ⵠΔᐃ.ᐃⲆΔⲆΔⵠⵠ = ΔᐃΔ
				}
				if (!ⲆⵠⵠⲆᐃⲆᐃ) {
					this.timeout += ᐃᐃΔⲆ;
					if (this.timeout > ᐃΔᐃᐃΔ.ⲆᐃⲆΔΔᐃⲆ) {
						this.timeout = ΔⲆᐃⲆ;
						if (Math.abs(this.angle - ΔᐃΔ) > .005) {
							ᐃΔᐃⵠ.ⲆⵠⵠᐃΔΔΔΔΔ(ΔᐃΔ);
							this.angle = ΔᐃΔ
						}
					}
				}
				if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
				if (ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
				var ⵠᐃⵠ = false;
				var ᐃᐃⵠⲆⵠ = ᐃⵠΔ;
				var ΔΔⵠⵠⲆ = ⵠΔⵠᐃᐃ.ⵠᐃΔΔᐃⲆⵠ();
				if (ΔΔⵠⵠⲆ) ᐃᐃⵠⲆⵠ |= ᐃᐃΔᐃ;
				var ⵠⵠᐃΔ = ⵠΔⵠᐃᐃ.ⲆⵠⵠΔⲆⵠⵠ();
				if (ⵠⵠᐃΔ) ᐃᐃⵠⲆⵠ |= ⵠᐃⵠΔ;
				var ⵠⵠΔᐃᐃⲆⲆⵠⲆ = ⵠΔⵠᐃᐃ.ᐃᐃⵠⵠⲆᐃᐃ();
				if (ⵠⵠΔᐃᐃⲆⲆⵠⲆ) ᐃᐃⵠⲆⵠ |= ᐃΔΔΔ;
				var top = ⵠΔⵠᐃᐃ.ⵠⲆᐃᐃΔⲆⲆ();
				if (top) ᐃᐃⵠⲆⵠ |= ΔᐃⲆⵠⲆⵠⵠ;
				if (this.ⲆᐃⲆⲆⲆⵠΔ != ᐃᐃⵠⲆⵠ) ᐃΔᐃⵠ.ⲆⵠⵠⲆΔΔⵠⲆⵠ(ᐃᐃⵠⲆⵠ);
				this.ⲆᐃⲆⲆⲆⵠΔ = ᐃᐃⵠⲆⵠ
			}
		};
		this.ΔΔⵠⲆ = {
			c: ΔΔⲆΔ,
			"ⲆⲆⲆᐃ": 1,
			"ΔᐃⲆ": 1,
			"ᐃⲆⵠ": ⵠᐃΔᐃ,
			"ⵠⲆⵠ": ⲆΔᐃⲆ,
			"ⲆⵠⲆⵠᐃΔΔ": 1,
			"ᐃⲆΔΔⵠΔⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆΔⲆⵠ, 0, ᐃⲆⵠΔ, 0, 3, ᐃⲆⲆᐃΔ),
			"ⲆⲆⵠⵠΔΔᐃ": new Ⲇᐃⵠ.ᐃΔΔⲆ(true, ᐃΔⵠⵠ, ᐃⲆⵠΔ, Δⵠⵠ, ᐃⲆⵠᐃ, ΔⲆⲆᐃ),
			"ⲆᐃᐃⵠΔⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ΔΔⲆⲆⲆ, ⵠᐃⲆᐃ, 1, 0, 3, 3),
			"ᐃΔⲆⵠᐃⵠⵠ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⲆᐃⵠⲆ, ⵠⵠᐃᐃΔ, 1, 0, ᐃⵠⲆⲆ, 3),
			"ⵠⵠΔⵠⲆⲆΔ": new Ⲇᐃⵠ.ᐃΔΔⲆ(true, 0, ⵠⵠⲆΔ, 0, 3, ΔⵠⵠΔ),
			"ⲆⵠⲆⲆΔⲆⲆ": new Ⲇᐃⵠ.ᐃΔΔⲆ(ⵠⲆⵠⵠⲆ, 0, ⵠⲆⲆ, ᐃⵠΔ, ⵠⲆⲆΔ, ΔΔⲆⲆᐃ),
			"ⵠⵠⲆᐃⵠ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, ⵠⵠᐃᐃΔ, 1, 0, ΔΔⵠᐃ, ⲆΔⵠⲆ),
			"ⵠⵠⲆᐃΔ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, ⵠⵠⲆⲆ, 1, ⲆΔᐃ, ⲆⲆⲆ, 1),
			"ᐃᐃΔᐃⲆΔΔ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, ⵠᐃⲆᐃ, 1, ΔⲆⵠ, ᐃⵠΔ, ᐃⵠⵠ),
			"ⲆᐃΔΔⲆⲆΔ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, 0, 1, ⵠⲆⲆᐃ, 0, 1),
			"ΔⲆⵠΔΔᐃⵠ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, 0, ΔΔᐃⵠ, ⵠⵠᐃⵠ, 0, 1),
			"ⲆⲆⵠΔⵠ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔⵠᐃΔ, 0, ᐃΔⲆⵠ, ⵠⵠⲆⲆ, 0, 1),
			"ⵠᐃⵠ": function() {
				this.ᐃⲆΔΔⵠΔⲆ.ⵠᐃⵠ();
				this.ⲆⲆⵠⵠΔΔᐃ.ⵠᐃⵠ();
				this.ⲆᐃᐃⵠΔⲆⲆ.ⵠᐃⵠ();
				this.ᐃΔⲆⵠᐃⵠⵠ.ⵠᐃⵠ();
				this.ⵠⵠΔⵠⲆⲆΔ.ⵠᐃⵠ();
				this.ⲆⵠⲆⲆΔⲆⲆ.ⵠᐃⵠ();
				this.ⵠⵠⲆᐃⵠ.ⲆⵠᐃⲆⲆΔΔ(this.c);
				this.ⵠⵠⲆᐃΔ.ⲆⵠᐃⲆⲆΔΔ(this.ⲆⲆⲆᐃ);
				this.ᐃᐃΔᐃⲆΔΔ.ⲆⵠᐃⲆⲆΔΔ(this.ΔᐃⲆ);
				this.ⲆᐃΔΔⲆⲆΔ.ⲆⵠᐃⲆⲆΔΔ(this.ᐃⲆⵠ);
				this.ΔⲆⵠΔΔᐃⵠ.ⲆⵠᐃⲆⲆΔΔ(this.ⵠⲆⵠ);
				this.ⲆⲆⵠΔⵠ.ⲆⵠᐃⲆⲆΔΔ(this.ⲆⵠⲆⵠᐃΔΔ)
			}
		};
		this.ⲆΔᐃᐃᐃⵠⵠ = ΔΔᐃⵠⵠ;
		this.ⵠⵠⲆᐃⵠΔᐃ = ⲆΔⲆΔⵠ;
		this.ΔⵠⲆΔΔ = false;
		this.ⵠⲆⲆⵠᐃᐃᐃ = false;
		this.ⵠΔᐃᐃ = {
			max: ⲆⵠΔΔ.ⵠΔⲆᐃⵠΔⵠ,
			"ⵠⵠΔΔΔⵠᐃ": ⲆΔᐃ,
			"ΔⵠⵠⵠⲆ": ΔΔⵠᐃ,
			"ᐃⵠⲆ": [],
			"ᐃⲆΔΔⲆ": [],
			"ΔⵠⲆⲆⵠΔΔ": function(ⲆᐃᐃⲆᐃⲆᐃΔΔ, ΔⵠⲆⲆΔΔⲆᐃⲆ) {
				if (ⲆᐃᐃⲆᐃⲆᐃΔΔ === 1) this.ΔⵠⵠⵠⲆ = ⲆⵠΔΔ.ᐃⲆᐃⵠⵠⵠΔΔΔ;
				this.ⵠⵠΔΔΔⵠᐃ += ΔⵠⲆⲆΔΔⲆᐃⲆ;
				this.max = ⲆⵠΔΔ.ⵠΔⲆᐃⵠΔⵠ + this.ⵠⵠΔΔΔⵠᐃ + this.ΔⵠⵠⵠⲆ
			},
			"ⲆⵠΔΔⵠᐃᐃ": {
				item: -ⲆΔⵠⲆ,
				"ⵠⵠ": null,
				"ⲆᐃΔᐃⵠ": 0,
				"ᐃᐃΔⲆⵠⵠⵠ": 0,
				"ⲆⵠⲆⲆᐃ": -1,
				"ΔⲆΔΔⲆ": -ΔΔᐃᐃ,
				"ᐃᐃⵠⲆⵠ": function(ᐃⲆΔⲆ) {
					if (this.ⲆᐃΔᐃⵠ && (ᐃⲆΔⲆ.x !== this.ⲆⵠⲆⲆᐃ || ᐃⲆΔⲆ.y !== this.ΔⲆΔΔⲆ)) this.ᐃᐃΔⲆⵠⵠⵠ = 1
				},
				start: function(ΔᐃⵠΔⲆ, ᐃⲆΔⲆ) {
					this.ⲆⵠⲆⲆᐃ = ᐃⲆΔⲆ.x;
					this.ΔⲆΔΔⲆ = ᐃⲆΔⲆ.y;
					this.item = ΔᐃⵠΔⲆ;
					this.ⵠⵠ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ[ΔᐃⵠΔⲆ].info.ⵠⵠ[ᐃⲆⵠᐃ];
					this.ⲆᐃΔᐃⵠ = 1
				},
				stop: function() {
					this.ⲆᐃΔᐃⵠ = ΔᐃⲆΔ;
					this.ᐃᐃΔⲆⵠⵠⵠ = 0;
					this.ⲆⵠⲆⲆᐃ = -ⵠᐃΔᐃ;
					this.ΔⲆΔΔⲆ = -1
				},
				release: function() {
					var ΔᐃⵠΔⲆ = -ⵠⵠⲆ;
					var ⲆᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ;
					var ⵠᐃⵠⵠᐃ = 0;
					if (this.ⲆᐃΔᐃⵠ && this.ᐃᐃΔⲆⵠⵠⵠ) {
						for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ⲆᐃⲆ.length; ᐃⲆ++) {
							if (ⲆᐃⲆ[ᐃⲆ].info.state === ⵠᐃᐃⲆⵠΔⲆ) {
								ΔᐃⵠΔⲆ = ᐃⲆ;
								break
							}
						}
						if (ΔᐃⵠΔⲆ !== -1 && ΔᐃⵠΔⲆ !== this.item && ⲆᐃⲆ[this.item]) {
							ⵠᐃⵠⵠᐃ = ΔΔᐃⵠ;
							var ⲆⲆΔⲆⲆⲆΔⵠᐃ = ⲆᐃⲆ[ΔᐃⵠΔⲆ];
							ⲆᐃⲆ[ΔᐃⵠΔⲆ] = ⲆᐃⲆ[this.item];
							ⲆᐃⲆ[this.item] = ⲆⲆΔⲆⲆⲆΔⵠᐃ;
							ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
						}
					}
					this.stop();
					return ⵠᐃⵠⵠᐃ
				},
				"ⲆⵠᐃⲆ": function(ᐃᐃΔ, ᐃⲆᐃ) {
					if (!this.ⲆᐃΔᐃⵠ || !this.ᐃᐃΔⲆⵠⵠⵠ) return;
					ⵠⲆΔⲆ(Ⲇ, this.ⵠⵠ, Math.floor(ᐃᐃΔ - this.ⵠⵠ.width / ᐃᐃⲆΔ), Math.floor(ᐃⲆᐃ - this.ⵠⵠ.height / 2))
				}
			},
			"ᐃⲆⲆΔΔⲆᐃᐃⲆ": function(Δᐃᐃ) {
				for (ᐃⲆ = 0; ᐃⲆ < Δᐃᐃ.length; ᐃⲆ++) {
					if (this.ᐃⵠⲆ[Δᐃᐃ[ᐃⲆ][0]] == Δᐃᐃ[ᐃⲆ][1]) return ⵠⵠⵠΔΔ
				}
				return false
			},
			"ᐃⵠᐃᐃⲆ": function(ⲆΔ) {
				for (var ᐃⲆ = ᐃⵠΔ; ᐃⲆ < this.ᐃⲆΔΔⲆ.length; ᐃⲆ++) {
					if (this.ᐃⲆΔΔⲆ[ᐃⲆ].id == ⲆΔ) return ᐃⲆ
				}
				return -ⲆᐃⲆⲆ
			},
			"ⵠΔⲆᐃⵠⲆⲆ": function(ⲆΔ, ᐃⲆ) {
				this.ᐃⵠⲆ[ⲆΔ] = 0;
				this.ᐃⲆΔΔⲆ.splice(ᐃⲆ, 1);
				ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
			},
			"ⲆΔⵠⵠⲆΔΔ": function(ⲆΔ, ᐃⵠⲆ, ᐃⲆ) {
				ⵠᐃⵠ = true;
				this.ᐃⵠⲆ[ⲆΔ] = Math.max(ΔⵠⲆⲆ, this.ᐃⵠⲆ[ⲆΔ] - ᐃⵠⲆ);
				if (!this.ᐃⵠⲆ[ⲆΔ] && ᐃⲆ >= ᐃⵠΔ) this.ⵠΔⲆᐃⵠⲆⲆ(ⲆΔ, ᐃⲆ)
			}
		};
		this.ⵠⵠⵠⲆΔ = {
			enabled: false,
			translate: {
				y: ΔⵠⲆΔ,
				x: ΔΔⲆᐃ
			},
			"ᐃᐃᐃⵠⲆⵠΔ": function() {
				if (ⲆΔΔ.mode != ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ || ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ) return;
				ⲆΔⲆ.ⵠⵠⵠⲆΔ.enabled = !ⲆΔⲆ.ⵠⵠⵠⲆΔ.enabled;
				if (ⲆΔⲆ.ⵠⵠⵠⲆΔ.enabled) ⵠΔᐃⵠ.options.ᐃᐃΔΔᐃⵠᐃ.display = ⵠ[489];
				else ⵠΔᐃⵠ.options.ᐃᐃΔΔᐃⵠᐃ.display = ⵠ[402]
			}
		};
		ⵠΔᐃⵠ.options.ᐃᐃΔΔᐃⵠᐃ.display = ⵠ[402];
		this.ᐃⲆΔⲆⵠ = {
			enabled: ΔⵠⵠΔⲆ,
			translate: {
				y: 0,
				x: 0
			},
			"ᐃᐃΔⲆΔ": 0,
			"ᐃᐃᐃⵠⲆⵠΔ": function() {
				ⲆΔⲆ.ᐃⲆΔⲆⵠ.enabled = !ⲆΔⲆ.ᐃⲆΔⲆⵠ.enabled;
				if (ⲆΔⲆ.ᐃⲆΔⲆⵠ.enabled) ⵠΔᐃⵠ.options.ᐃᐃⲆⵠⲆⲆⵠ.display = ⵠ[489];
				else ⵠΔᐃⵠ.options.ᐃᐃⲆⵠⲆⲆⵠ.display = ⵠ[402]
			},
			"ⵠᐃⵠ": function() {
				if (!this.enabled || ⲆΔⲆ.ᐃΔⵠΔ.id >= 0 || ⵠΔᐃⵠ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
				this.ᐃᐃΔⲆΔ += ᐃᐃΔⲆ;
				if (this.ᐃᐃΔⲆΔ > 2) {
					this.ᐃᐃΔⲆΔ = ⵠᐃⲆᐃ;
					if (ⲆΔⲆ.ΔΔⵠⲆ.ΔᐃⲆ < .35) {
						if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠⵠᐃΔᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠⵠᐃΔᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠⵠᐃΔᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠΔΔⵠᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠΔΔⵠᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠΔΔⵠᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ΔᐃᐃΔΔ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ΔᐃᐃΔΔ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔᐃᐃΔΔ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ΔⵠⵠΔⵠ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ΔⵠⵠΔⵠ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔⵠⵠΔⵠ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⲆⵠⵠᐃΔ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⲆⵠⵠᐃΔ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⲆⵠⵠᐃΔ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⲆⵠⵠⲆᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⲆⵠⵠⲆᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⲆⵠⵠⲆᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ᐃΔⲆΔᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ᐃΔⲆΔᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃΔⲆΔᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠⲆΔⵠᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠⲆΔⵠᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠⲆΔⵠᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠᐃᐃⵠⵠ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠᐃᐃⵠⵠ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠᐃᐃⵠⵠ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ΔΔᐃᐃᐃ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ΔΔᐃᐃᐃ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔΔᐃᐃᐃ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ΔⵠᐃⲆΔ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ΔⵠᐃⲆΔ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔⵠᐃⲆΔ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ΔⲆⲆᐃⲆ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ΔⲆⲆᐃⲆ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ΔⲆⲆᐃⲆ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠᐃⲆⲆΔ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠᐃⲆⲆΔ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠᐃⲆⲆΔ));
						else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ᐃⲆᐃⲆⲆ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ᐃⲆᐃⲆⲆ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ᐃⲆᐃⲆⲆ))
					} else if (ⲆΔⲆ.ΔΔⵠⲆ.ᐃⲆⵠ < .35) {
						if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆ.ⵠΔΔⲆⵠ]) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⵠⲆ.ⵠΔΔⲆⵠ, ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆ.ⵠΔΔⲆⵠ))
					}
				}
			}
		};
		ⵠΔᐃⵠ.options.ᐃᐃⲆⵠⲆⲆⵠ.display = ⵠ[402];
		this.ᐃΔⵠΔ = {
			id: -1,
			"ᐃⵠⲆᐃ": -1,
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(ⲆⵠᐃΔΔ, 0, ΔΔᐃⵠ, 0, ΔⲆᐃ, ⵠⵠⲆΔ),
			"ⲆΔⲆⲆⲆ": false,
			"ⲆⲆⵠⵠ": -1,
			mode: ⵠⲆⲆᐃ,
			label: [],
			"ΔΔⵠΔᐃ": [],
			"ᐃΔⵠⲆⲆ": false,
			"ᐃᐃⵠⲆΔ": false,
			"ⲆΔⲆΔΔΔⲆ": false,
			"ᐃⲆΔⲆᐃ": false,
			"ⵠΔᐃᐃⵠΔᐃⵠΔ": function() {
				this.mode = this.mode === ΔⲆᐃⲆ ? ⲆⲆΔᐃ : 0
			},
			"ⵠᐃⵠⲆᐃΔᐃᐃᐃ": function(ⲆᐃᐃΔⵠ) {
				this.ᐃΔⵠⲆⲆ = ⲆᐃᐃΔⵠ;
				var ⲆⵠⵠⲆᐃⲆⲆ = ⵠΔᐃⵠ.ⵠᐃΔⵠ;
				if (ⲆⵠⵠⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⲆⵠⵠⲆᐃⲆⲆ.ⲆΔΔΔᐃⲆᐃ(ⲆⵠⵠⲆᐃⲆⲆ.button);
				this.ⵠᐃⵠ()
			},
			"ⵠΔⵠᐃⲆⲆⵠⵠᐃ": function(ⲆΔ) {
				var Δᐃᐃ = ⲆᐃⲆⲆᐃ[ⲆΔ];
				this.id = ⲆΔ;
				this.ⲆΔⲆⲆⲆ = true;
				var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
				this.timeout.ⲆᐃⲆΔⵠⲆᐃ = Δᐃᐃ.time * 8;
				this.ᐃⵠⲆᐃ = Δᐃᐃ.ᐃⵠⲆᐃ
			},
			"ΔᐃⲆⵠᐃⵠΔⵠⲆ": function(ⲆΔ) {
				var Δᐃᐃ = ⲆᐃⲆⲆᐃ[ⲆΔ];
				this.id = ⲆΔ;
				this.ⲆΔⲆⲆⲆ = ⲆⵠΔⵠΔ;
				var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
				if (ⵠΔᐃ && ⵠΔᐃ.right == ⵠⲆ.ΔᐃⵠⲆΔ) this.timeout.ⲆᐃⲆΔⵠⲆᐃ = Δᐃᐃ.time * ⵠⵠⲆⵠ;
				else this.timeout.ⲆᐃⲆΔⵠⲆᐃ = Δᐃᐃ.time;
				this.ᐃⵠⲆᐃ = Δᐃᐃ.ᐃⵠⲆᐃ;
				for (var ᐃⲆ = ⲆⲆⲆ; ᐃⲆ < Δᐃᐃ.r.length; ᐃⲆ++) {
					var ⵠⲆⵠ = Δᐃᐃ.r[ᐃⲆ];
					ⲆΔⲆ.ⵠΔᐃᐃ.ⲆΔⵠⵠⲆΔΔ(ⵠⲆⵠ[ⵠⵠᐃⵠ], ⵠⲆⵠ[ΔᐃᐃⲆ], ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠᐃᐃⲆ(ⵠⲆⵠ[0]))
				}
				ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
			},
			"ⵠᐃⵠ": function() {
				this.ΔΔⵠΔᐃ = [];
				if (ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ᐃΔⵠΔ === 1) ⵠΔᐃⵠ.ΔΔΔⵠⲆ.display = ⵠⵠⲆⲆ;
				for (var ΔᐃⲆᐃ in ⲆᐃⲆⲆᐃ) {
					var Δᐃᐃ = ⲆᐃⲆⲆᐃ[ΔᐃⲆᐃ];
					var ΔΔⵠΔᐃ = ΔΔⲆⲆⲆ;
					if (!Δᐃᐃ.r) continue;
					for (var ᐃⲆ = 0; ᐃⲆ < Δᐃᐃ.r.length; ᐃⲆ++) {
						if (ⲆΔⲆ.ⵠΔᐃᐃ.max >= ⲆⵠΔΔ.ΔⲆⲆⵠⲆⵠΔ && Δᐃᐃ.id === ᐃΔᐃ.ⵠΔΔⵠ) {
							ΔΔⵠΔᐃ = ΔⲆⵠᐃⵠ;
							break
						}
						if (Δᐃᐃ.w > this.ᐃΔⵠⲆⲆ || Δᐃᐃ.f > this.ᐃᐃⵠⲆΔ || Δᐃᐃ.ⵠⲆⵠ > this.ⲆΔⲆΔΔΔⲆ || Δᐃᐃ.e > this.ᐃⲆΔⲆᐃ) {
							ΔΔⵠΔᐃ = false;
							break
						}
						var ⵠⲆⵠ = Δᐃᐃ.r[ᐃⲆ];
						if (!ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆⵠ[ⲆⲆⲆ]] || ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[ⵠⲆⵠ[ᐃⵠΔ]] < ⵠⲆⵠ[1]) {
							ΔΔⵠΔᐃ = ΔⲆⵠᐃⵠ;
							break
						}
					}
					if (ΔΔⵠΔᐃ) this.ΔΔⵠΔᐃ.push(ⵠΔᐃⵠ.ⵠⵠᐃ[Δᐃᐃ.id])
				}
				ⵠΔᐃⵠ.ⵠⲆᐃᐃᐃΔΔ();
				ⵠΔᐃⵠ.ⵠⵠΔⲆⵠⵠⲆ();
				ⵠΔᐃⵠ.ⵠᐃᐃⲆΔΔᐃ();
				ⵠΔᐃⵠ.ⲆΔⵠⵠᐃⵠᐃ();
				ⵠΔᐃⵠ.ⵠⲆⵠⲆⲆⵠΔ();
				ⵠΔᐃⵠ.ΔᐃᐃⲆⲆΔⵠ();
				ⵠΔᐃⵠ.sign.ᐃⵠⵠΔⵠⵠᐃ()
			},
			"ΔᐃⲆⵠΔᐃΔ": function() {
				this.id = -ΔΔⲆΔ;
				this.ⲆΔⲆⲆⲆ = ⲆΔᐃⵠⲆ;
				this.timeout.ⵠⵠΔ = ⵠⵠᐃᐃΔ;
				this.timeout.ⵠⲆⵠ = ΔᐃΔᐃᐃ;
				this.ⵠᐃⵠ()
			}
		};
		this.ᐃΔⲆᐃⵠⵠⲆ = {
			message: undefined,
			"ⲆⵠᐃⲆ": ᐃⲆᐃⲆᐃᐃᐃΔΔ
		};
		this.alert = {
			timeout: new Ⲇᐃⵠ.ᐃΔΔⲆ(false, ⵠⵠⲆ, ⵠⵠⲆ, 0, 4, .3),
			text: "",
			label: null,
			"ⲆⵠᐃⲆ": ΔⵠᐃⵠⵠΔⲆⲆⲆ,
			list: []
		};
		this.ⲆⵠⲆᐃⲆ = {
			"ΔΔ": document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]),
			"ⵠΔⲆⵠⵠ": [],
			"ⵠᐃⵠ": ⲆⵠΔⵠΔ,
			translate: {
				y: 0,
				x: 0
			},
			sort: function() {
				var ᐃⵠⵠᐃⵠⲆⵠ = [];
				var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
				for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) {
					if (ᐃⵠⵠΔ[ᐃⲆ].ᐃᐃⲆΔΔ) ᐃⵠⵠᐃⵠⲆⵠ.push({
						id: ᐃⲆ,
						"ᐃⵠⵠⲆ": ᐃⵠⵠΔ[ᐃⲆ].ⵠⲆⲆᐃᐃ
					})
				}
				ᐃⵠⵠᐃⵠⲆⵠ.sort((function(ⵠⵠⵠ, ⲆΔⵠΔ) {
					return ⲆΔⵠΔ.ᐃⵠⵠⲆ - ⵠⵠⵠ.ᐃⵠⵠⲆ
				}));
				this.ⵠΔⲆⵠⵠ = [];
				for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠⵠᐃⵠⲆⵠ.length && ᐃⲆ < 10; ᐃⲆ++) this.ⵠΔⲆⵠⵠ.push(ᐃⵠⵠᐃⵠⲆⵠ[ᐃⲆ].id);
				this.ⵠᐃⵠ = true
			},
			"ⲆΔⲆΔΔ": function(ΔⲆⵠᐃ) {
				var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
				for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) ᐃⵠⵠΔ[ᐃⲆ].ⵠⲆⲆᐃᐃ = ΔΔⵠᐃ;
				ᐃⵠⵠΔ[ⲆΔⲆ.id].ⵠⲆⲆᐃᐃ = Ⲇᐃⵠ.ᐃΔⵠΔⵠᐃΔ(ΔⲆⵠᐃ[ΔΔᐃᐃ]);
				this.ⵠΔⲆⵠⵠ = [];
				for (var ᐃⲆ = 2; ᐃⲆ < ΔⲆⵠᐃ.length; ᐃⲆ += 2) {
					this.ⵠΔⲆⵠⵠ.push(ΔⲆⵠᐃ[ᐃⲆ]);
					ᐃⵠⵠΔ[ΔⲆⵠᐃ[ᐃⲆ]].ⵠⲆⲆᐃᐃ = Ⲇᐃⵠ.ᐃΔⵠΔⵠᐃΔ(ΔⲆⵠᐃ[ᐃⲆ + 1])
				}
				this.ⵠᐃⵠ = true
			}
		};
		this.ⲆⵠⲆᐃⲆ.ΔΔ.width = ᐃ * 180;
		this.ⲆⵠⲆᐃⲆ.ΔΔ.height = ᐃ * 300;
		this.ⲆⵠⲆᐃⲆ.Ⲇ = this.ⲆⵠⲆᐃⲆ.ΔΔ.getContext(ⵠ[140]);
		this.ᐃᐃᐃⵠΔ = {
			open: ⵠⲆⵠΔⵠ,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]]("commandInput"),
			"ᐃᐃᐃᐃⵠΔΔ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("commandsBox"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("commandMainBox").style,
			"ΔᐃⲆⵠⵠᐃⵠΔⵠ": function(ⲆΔⲆᐃ) {
				this.ᐃᐃᐃᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[359]] += ⲆΔⲆᐃ
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(Ⲇⵠⵠⵠ / 2 - 300) + ⵠ[454];
				this.style.top = Math.floor(ᐃΔⲆᐃ / ΔⵠΔΔ - 250) + ⵠ[454]
			},
			"ⲆⲆᐃΔΔᐃⵠⵠΔ": function() {
				this.ᐃᐃᐃᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[359]] = ""
			},
			"ⲆⲆᐃΔᐃ": function() {
				this[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
				this.style.display = ⵠ[402]
			},
			"ⲆᐃⵠⵠⲆᐃΔ": function(ᐃⵠΔⵠᐃ) {
				var ᐃⵠᐃᐃⲆⲆⲆ = '<table class="tableList">';
				for (var ᐃⲆ = 0; ᐃⲆ < ᐃⵠΔⵠᐃ.length; ᐃⲆ++) {
					if (ᐃⲆ % ⲆⵠⵠⲆ === 0) ᐃⵠᐃᐃⲆⲆⲆ += "<tr>";
					ᐃⵠᐃᐃⲆⲆⲆ += '<td class="tableList">' + ᐃⵠΔⵠᐃ[ᐃⲆ] + "</td>";
					if ((ᐃⲆ + 1) % ᐃᐃⵠᐃ === 0 || ᐃⲆ + 1 === ᐃⵠΔⵠᐃ.length) ᐃⵠᐃᐃⲆⲆⲆ += "</tr>"
				}
				ᐃⵠᐃᐃⲆⲆⲆ += "</table>";
				return ᐃⵠᐃᐃⲆⲆⲆ
			},
			"ⵠⵠⵠⵠᐃ": function(cmd, ᐃⲆⲆᐃⵠᐃᐃ, ᐃⲆΔⲆΔⵠᐃ, ᐃⵠᐃᐃⲆⲆⲆ) {
				cmd = !cmd ? "" : cmd;
				ᐃⲆⲆᐃⵠᐃᐃ = !ᐃⲆⲆᐃⵠᐃᐃ ? "" : ᐃⲆⲆᐃⵠᐃᐃ;
				ᐃⲆΔⲆΔⵠᐃ = !ᐃⲆΔⲆΔⵠᐃ ? "" : ᐃⲆΔⲆΔⵠᐃ;
				ᐃⵠᐃᐃⲆⲆⲆ = !ᐃⵠᐃᐃⲆⲆⲆ ? "" : ᐃⵠᐃᐃⲆⲆⲆ;
				var ⲆⲆⲆΔ = "<div class=commandWritten>" + cmd;
				if (ᐃⲆⲆᐃⵠᐃᐃ) ⲆⲆⲆΔ += "<div class=commandValidated>";
				else ⲆⲆⲆΔ += "<div class=commandUnknown>";
				ⲆⲆⲆΔ += ᐃⲆΔⲆΔⵠᐃ + ⵠ[183] + ᐃⵠᐃᐃⲆⲆⲆ + ⵠ[183];
				this.ΔᐃⲆⵠⵠᐃⵠΔⵠ(ⲆⲆⲆΔ);
				this.ⵠⵠⵠΔΔᐃΔⵠⵠ()
			},
			"ⵠⵠⵠΔΔᐃΔⵠⵠ": function() {
				this.ᐃᐃᐃᐃⵠΔΔ["scrollTop"] = this.ᐃᐃᐃᐃⵠΔΔ["scrollHeight"];
				return
			},
			"ᐃᐃᐃᐃⵠⵠⲆ": function(ᐃⲆΔΔ) {
				switch (ᐃⲆΔΔ) {
					case "clean":
						this.ⲆⲆᐃΔΔᐃⵠⵠΔ();
						return true;
						break;
					case "list":
						var ᐃⲆᐃΔ = "";
						const ΔᐃΔΔΔⲆΔ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[325]]("div");
						var ᐃⵠⵠΔ = ⲆΔΔ.ᐃⵠⵠΔ;
						for (var ᐃⲆ = ⲆΔᐃ; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) {
							var ΔⲆⵠΔ = ᐃⵠⵠΔ[ᐃⲆ];
							if (ΔⲆⵠΔ.ᐃᐃⲆΔΔ) {
								ΔᐃΔΔΔⲆΔ[ⲆⵠΔᐃᐃᐃΔ[13]] = ΔⲆⵠΔ.ᐃΔⲆᐃⵠ;
								ᐃⲆᐃΔ += ΔᐃΔΔΔⲆΔ[ⲆⵠΔᐃᐃᐃΔ[359]] + ' <span style="color:green">#' + ᐃⲆ + "</span><br />"
							}
						}
						this.ⵠⵠⵠⵠᐃ("list", ⵠⲆⲆ, "List all connected players", ᐃⲆᐃΔ);
						return true;
						break;
					case "weapon-list":
						this.ⵠⵠⵠⵠᐃ("Weapons", ΔΔⲆΔ, "List all weapons in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow"]));
						return true;
						break;
					case "tool-list":
						this.ⵠⵠⵠⵠᐃ("Tools", ᐃΔⲆⵠ, "List all tools in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "pitchfork", "pitchfork2", "spanner", "book"]));
						return true;
						break;
					case "survival-list":
						this.ⵠⵠⵠⵠᐃ("Survival Items", 1, "List all survival items in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"]));
						return ⵠⵠⵠⵠΔⵠⲆ;
						break;
					case "resource-list":
						this.ⵠⵠⵠⵠᐃ("Resources", 1, "List all resources in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
						return ΔᐃⲆⲆᐃ;
						break;
					case "food-list":
						this.ⵠⵠⵠⵠᐃ("Food", 1, "List all food in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"]));
						return true;
						break;
					case "hat-list":
						this.ⵠⵠⵠⵠᐃ("Hats", ᐃᐃΔᐃ, "List all hats in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
						return ⲆΔᐃⲆⲆ;
						break;
					case "building-list":
						this.ⵠⵠⵠⵠᐃ("Buildings", 1, "List all buildings in the game", this.ⲆᐃⵠⵠⲆᐃΔ(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
						return ⵠⲆΔⲆⵠ;
						break;
					case "biome-list":
						this.ⵠⵠⵠⵠᐃ("Biomes list", 1, "List all available biomes in the game", this.ⲆᐃⵠⵠⲆᐃΔ([ⵠ[567], "winter", "lava", "sea", "beach", "island", "dragon"]));
						return ᐃⵠᐃⵠⲆ;
						break;
					case "help-config":
						this.ⵠⵠⵠⵠᐃ("Help Configuration", ΔΔⵠΔⵠ, "Learn how to build your customized map", '<div class="specialCommandBox">To get the current map configuration, and modify it, copy the result of <span class="commandSynthax">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class="commandSynthax">set-config</span></br>To modify the map, modify "important" section (at the end)<div class="infoCommand">The minimum size of the map is 50x50.</div>"custom_map" is used to change the biomes and is written like this :<div class="commandSynthax" style="font-size:17px;">"custom_map":[["biome",width,height],...,["biome",width,height]]</div>Biomes are <span class="commandSynthax">"forest"</span>, <span class="commandSynthax">"lava"</span>, <span class="commandSynthax">"winter"</span>, and <span class="commandSynthax">"dragon"</span>.');
						return true;
						break;
					case "pos":
						var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
						for (var ᐃⲆ = ΔΔⵠᐃ; ᐃⲆ < ᐃⵠⵠΔ.length; ᐃⲆ++) {
							var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
							if (ⵠΔᐃ.ΔΔΔⵠ === ⲆΔⲆ.id) {
								this.ⵠⵠⵠⵠᐃ(ⵠ[395], 1, "Your position is " + Math.floor(ⵠΔᐃ.x / ⵠⵠΔΔⵠ) + ":" + Math.floor(ⵠΔᐃ.y / 100));
								return true
							}
						}
						break;
					case "help-admin":
						this.ⵠⵠⵠⵠᐃ("help-admin", 1, "List all available commands for admin only", this.ⲆᐃⵠⵠⲆᐃΔ(["restart", "m | message", "mt | message-to", "w | welcome", ⵠ[425], "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", ⵠ[395], "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
						return true;
						break;
					case "help":
						this.ⵠⵠⵠⵠᐃ("help", 1, "List all available commands", this.ⲆᐃⵠⵠⲆᐃΔ(["clean", "list", ⵠ[395], "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
						return ΔᐃⲆΔⵠ;
						break
				}
				return false
			},
			"ᐃᐃⵠⲆᐃⵠⲆⵠΔ": function() {
				if (!this[ⲆⵠΔᐃᐃᐃΔ[88]]) {
					this[ⲆⵠΔᐃᐃᐃΔ[88]] = true;
					this.style.display = ⵠ[489];
					this.input.focus()
				}
			},
			"ⲆΔⲆⵠᐃⵠⲆ": function() {
				var ᐃⲆΔΔ = this.input.value;
				if (ᐃⲆΔΔ && ᐃⲆΔΔ.length > Ⲇᐃⵠᐃ) {
					if (!this.ᐃᐃᐃᐃⵠⵠⲆ(ᐃⲆΔΔ)) ᐃΔᐃⵠ.ⲆᐃᐃΔⵠΔΔⲆΔ(this.input.value);
					this.input.value = ""
				}
			}
		};
		this.ᐃΔᐃᐃᐃ = {
			open: false,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]]("chat_input"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("chat_block").style,
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(Ⲇⵠⵠⵠ / ⲆⲆⵠΔ - 150) + ⵠ[454];
				this.style.top = Math.floor(ᐃΔⲆᐃ / ᐃᐃⲆΔ + 80) + ⵠ[454]
			},
			"ⲆⲆᐃΔᐃ": function() {
				this[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
				this.style.display = ⵠ[402];
				this.input.value = ""
			},
			prefix: "!",
			cmd: {
				hud: function(ⵠᐃⲆᐃⲆⲆᐃ) {
					if (ⵠᐃⲆᐃⲆⲆᐃ === "off") {
						var ᐃⲆΔΔ = 'Enter "!hud" without the quotes to restore the HUD';
						if (!ⲆΔⲆ.alert.text) ⲆΔⲆ.alert.text = ᐃⲆΔΔ;
						else ⲆΔⲆ.alert.list.push(ᐃⲆΔΔ);
						ⵠΔᐃⵠ.ⵠⲆⲆΔᐃⲆⵠ = ⵠⵠᐃⵠ
					} else ⵠΔᐃⵠ.ⵠⲆⲆΔᐃⲆⵠ = ΔΔⵠΔⵠ
				}
			},
			"ᐃᐃᐃᐃⵠⵠⲆ": function(ᐃⲆΔΔ) {
				if (ᐃⲆΔΔ.charAt(0) == this.prefix) {
					var cmd = "";
					var ⵠᐃⲆᐃⲆⲆᐃ = "";
					for (var ᐃⲆ = ᐃⵠ; ᐃⲆ < ᐃⲆΔΔ.length && ᐃⲆΔΔ.charAt(ᐃⲆ) != " "; ᐃⲆ++) cmd += ᐃⲆΔΔ.charAt(ᐃⲆ);
					ᐃⲆ++;
					for (; ᐃⲆ < ᐃⲆΔΔ.length; ᐃⲆ++) ⵠᐃⲆᐃⲆⲆᐃ += ᐃⲆΔΔ.charAt(ᐃⲆ);
					var ᐃⲆⲆⵠⵠ = this.cmd[cmd];
					if (ᐃⲆⲆⵠⵠ) ᐃⲆⲆⵠⵠ(ⵠᐃⲆᐃⲆⲆᐃ);
					return ⵠⲆᐃⲆᐃ
				} else return ΔΔᐃⵠⵠ
			},
			"ᐃΔⲆⲆΔ": function() {
				if (!this[ⲆⵠΔᐃᐃᐃΔ[88]]) {
					this[ⲆⵠΔᐃᐃᐃΔ[88]] = ⵠⲆΔⲆⵠ;
					this.style.display = ⵠ[489];
					this.input.focus()
				} else {
					this[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
					this.style.display = ⵠ[402];
					var ᐃⲆΔΔ = this.input.value;
					if (ᐃⲆΔΔ) {
						if (!this.ᐃᐃᐃᐃⵠⵠⲆ(ᐃⲆΔΔ)) ᐃΔᐃⵠ.ΔᐃⵠⵠⲆΔⵠⲆⵠ(this.input.value);
						this.input.value = ""
					}
				}
			}
		};
		this.ⲆᐃΔΔⵠⲆΔ = {
			"ⲆΔⲆΔⲆ": [],
			"ⵠᐃⵠ": function(ᐃⵠᐃ) {
				ᐃⵠᐃ.y += ᐃᐃΔⲆ * 80 * ᐃⵠᐃ.ᐃⵠⵠⲆ;
				ᐃⵠᐃ.x += ᐃᐃΔⲆ * 80 * ᐃⵠᐃ.c;
				ᐃⵠᐃ.ⵠⵠⲆᐃΔ -= ᐃᐃΔⲆ / ⵠᐃΔΔⲆ;
				if (ᐃⵠᐃ.ⵠⵠⲆᐃΔ > .2) ᐃⵠᐃ.alpha = Math.min(ᐃⵠᐃ.alpha + ᐃᐃΔⲆ * Ⲇᐃⵠⵠ, 1);
				else ᐃⵠᐃ.alpha = Math.max(ᐃⵠᐃ.alpha - ᐃᐃΔⲆ * 1, 0)
			},
			add: function(ᐃΔΔⵠ) {
				var length = Math.floor(Math.min(Δ.ⵠⲆΔⵠΔⵠᐃ * (Ⲇⵠⵠⵠ / 1366), Δ.ⵠⲆΔⵠΔⵠᐃ + 10) * Math.max(Math.min(ⲆΔΔ.ᐃⵠᐃΔΔ + 1e3, 3e3) / 3e3, ᐃΔⵠⵠ));
				if (this.ⲆΔⲆΔⲆ.length < length) {
					var ⲆΔ = Math.floor(Math.random() * Δ.ⲆⵠΔᐃⵠⵠⵠ);
					var ᐃᐃΔ = -ⲆΔⲆ.ⵠΔΔ.x + Math.floor(Math.random() * ⲆΔⲆ.ⵠΔΔ.w);
					var ᐃⲆᐃ = -ⲆΔⲆ.ⵠΔΔ.y + Math.floor(Math.random() * ⲆΔⲆ.ⵠΔΔ.ΔᐃⲆ);
					var ΔᐃΔ = Math.random(Math.PI);
					this.ⲆΔⲆΔⲆ.push(new ᐃᐃⲆᐃΔΔΔ(ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, ΔᐃΔ))
				}
			}
		};
		this.ΔΔᐃⵠᐃᐃⲆ = 0;
		this.ΔᐃᐃΔⲆ = ΔΔᐃ;
		this.ΔΔⵠᐃΔ = {
			"ⲆΔⲆΔⲆ": [],
			"ⵠᐃⲆⵠⵠ": ⵠᐃⲆᐃ,
			"ᐃΔⵠΔⵠ": 0,
			"ⵠᐃⵠ": function(ᐃⵠᐃ) {
				ᐃⵠᐃ.y += ᐃᐃΔⲆ * (200 + 800 * this.ᐃΔⵠΔⵠ) * ᐃⵠᐃ.ᐃⵠⵠⲆ;
				ᐃⵠᐃ.x += ᐃᐃΔⲆ * (200 + 800 * this.ᐃΔⵠΔⵠ) * ᐃⵠᐃ.c;
				ᐃⵠᐃ.ⵠⵠⲆᐃΔ -= ᐃᐃΔⲆ / ᐃⲆⵠⲆΔ;
				if (ᐃⵠᐃ.ⵠⵠⲆᐃΔ > .2) ᐃⵠᐃ.alpha = Math.min(ᐃⵠᐃ.alpha + ᐃᐃΔⲆ * ⵠⲆⵠⵠ, 1);
				else ᐃⵠᐃ.alpha = Math.max(ᐃⵠᐃ.alpha - ᐃᐃΔⲆ * 1, 0)
			},
			add: function(ᐃΔΔⵠ) {
				var length = Math.floor(Math.min((this.ᐃΔⵠΔⵠ + .1) * Δ.ⲆⵠⲆᐃΔᐃⲆ * (Ⲇⵠⵠⵠ / 1366), (this.ᐃΔⵠΔⵠ + .1) * Δ.ⲆⵠⲆᐃΔᐃⲆ + ⵠΔⲆⵠᐃ) * Math.max(Math.min(ⲆΔΔ.ᐃⲆⲆᐃᐃ + 1e3, 3e3) / 3e3, ΔⲆⵠ));
				if (this.ⲆΔⲆΔⲆ.length < length) {
					var ⲆΔ = Math.floor(Math.random() * Δ.ⲆⵠΔᐃⵠⵠⵠ);
					var ᐃᐃΔ = -ⲆΔⲆ.ⵠΔΔ.x + Math.floor(Math.random() * ⲆΔⲆ.ⵠΔΔ.w);
					var ᐃⲆᐃ = -ⲆΔⲆ.ⵠΔΔ.y + Math.floor(Math.random() * ⲆΔⲆ.ⵠΔΔ.ΔᐃⲆ);
					var ΔᐃΔ = Math.random(Math.PI);
					if (ⲆΔⲆ.ΔΔⵠᐃΔ.ⵠᐃⲆⵠⵠ !== 0) ᐃᐃΔ -= ⲆΔⲆ.ⵠΔΔ.w / ⵠⲆⵠᐃ;
					this.ⲆΔⲆΔⲆ.push(new ᐃᐃⲆᐃΔΔΔ(ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, ΔᐃΔ))
				}
			}
		};
		this.ΔⵠᐃⵠⲆ = {
			"ⲆΔⲆΔⲆ": [],
			"ⵠᐃⲆⵠⵠ": ⲆΔᐃ,
			"ᐃΔⵠΔⵠ": 0,
			"ⵠᐃⵠ": function(ᐃⵠᐃ) {
				if (ⵠΔⵠᐃᐃ.ᐃᐃⵠⵠⲆᐃᐃ()) ᐃⵠᐃ.y += ᐃᐃΔⲆ * ᐃⵠᐃ.ΔΔᐃᐃⲆ * (5.5 + 10 * this.ᐃΔⵠΔⵠ);
				else ᐃⵠᐃ.y += ᐃᐃΔⲆ * ᐃⵠᐃ.ΔΔᐃᐃⲆ * (ⲆⲆᐃⵠ + 10 * this.ᐃΔⵠΔⵠ);
				ᐃⵠᐃ.ⵠⵠⲆᐃΔ -= ᐃᐃΔⲆ / ⵠⲆⵠᐃ;
				if (ⵠΔⵠᐃᐃ.ⵠᐃΔΔᐃⲆⵠ()) ᐃⵠᐃ.x += ᐃᐃΔⲆ * (100 + 400 * this.ᐃΔⵠΔⵠ);
				else if (ⵠΔⵠᐃᐃ.ⲆⵠⵠΔⲆⵠⵠ()) ᐃⵠᐃ.x -= ᐃᐃΔⲆ * (130 - 400 * this.ᐃΔⵠΔⵠ);
				else ᐃⵠᐃ.x -= ᐃᐃΔⲆ * (30 - 400 * this.ᐃΔⵠΔⵠ);
				if (ᐃⵠᐃ.ⵠⵠⲆᐃΔ > .2) ᐃⵠᐃ.alpha = Math.min(ᐃⵠᐃ.alpha + ᐃᐃΔⲆ * ΔⵠⵠΔ, 1);
				else ᐃⵠᐃ.alpha = Math.max(ᐃⵠᐃ.alpha - ᐃᐃΔⲆ * 5, ΔⲆⵠ)
			},
			add: function(ᐃΔΔⵠ) {
				var length = Math.floor(Math.min((this.ᐃΔⵠΔⵠ * 1.5 + .5) * Δ.ⲆⵠᐃΔⵠΔΔ * (Ⲇⵠⵠⵠ / 1366), (this.ᐃΔⵠΔⵠ * 1.5 + .5) * Δ.ⲆⵠᐃΔⵠΔΔ + 10) * Math.max(Math.min(ⲆΔΔ.ⲆⲆⵠⵠΔ + 1e3, 3e3) / 3e3, ΔΔᐃ));
				if (this.ⲆΔⲆΔⲆ.length < length) {
					var ⲆΔ = Math.floor(Math.random() * Δ.ⲆᐃᐃⲆᐃΔⵠ);
					var ᐃᐃΔ = -ⲆΔⲆ.ⵠΔΔ.x + Math.floor(Math.random() * ⲆΔⲆ.ⵠΔΔ.w);
					var ᐃⲆᐃ = -ⲆΔⲆ.ⵠΔΔ.y + Math.floor(Math.random() * 400 * ᐃ - 200 * ᐃ);
					this.ⲆΔⲆΔⲆ.push(new ᐃᐃⲆᐃΔΔΔ(ⲆΔ, ᐃᐃΔ, ᐃⲆᐃ, 0))
				}
			}
		};

		function ⵠⵠⲆⲆⵠΔⵠᐃⲆ() {
			this.seed = ᐃΔⲆⵠ;
			this.ⵠⲆⵠⵠⵠΔⵠ = 2;
			this.ᐃᐃⵠᐃᐃⲆΔ = 3;
			this.ⲆᐃᐃⲆⲆᐃΔᐃⲆ = ᐃⲆⵠΔ;
			this.ⵠⲆⲆᐃᐃᐃᐃᐃΔ = 2;
			this.ⵠⵠⲆΔΔⲆᐃΔⵠ = ᐃⵠⵠⵠ;
			this.ⲆᐃᐃⲆⲆΔΔ = function(ᐃᐃΔ) {
				this.seed = 2 + Math.floor(Math.random() * ⲆⵠΔΔ.ΔⲆΔⵠᐃ)
			};
			this.ⲆΔΔΔⲆΔⲆ = function(ᐃᐃΔ) {
				this.ⵠⲆⵠⵠⵠΔⵠ = ⵠΔⲆΔ + Math.floor(Math.random() * ⲆⵠΔΔ.ΔⲆΔⵠᐃ)
			};
			this.ΔᐃⲆΔⵠΔⵠ = function(ᐃᐃΔ) {
				this.ᐃᐃⵠᐃᐃⲆΔ = 2 + Math.floor(ⲆⵠΔΔ.ΔⲆΔⵠᐃ * Math.random())
			};
			this.ᐃⵠⵠⲆⵠᐃᐃⵠΔ = function(ᐃᐃΔ) {
				this.ⲆᐃᐃⲆⲆᐃΔᐃⲆ = 2 + Math.floor(ⲆⵠΔΔ.ΔⲆΔⵠᐃ * Math.random())
			};
			this.ⵠΔⲆⵠΔᐃΔΔΔ = function(ᐃᐃΔ) {
				this.ⵠⲆⲆᐃᐃᐃᐃᐃΔ = ΔⲆⲆᐃ + Math.floor(Math.random() * ⲆⵠΔΔ.ΔⲆΔⵠᐃ)
			};
			this.ᐃᐃᐃⵠΔⲆⵠΔᐃ = function(ᐃᐃΔ) {
				this.ⵠⵠⲆΔΔⲆᐃΔⵠ = ⲆᐃⲆᐃ + Math.floor(ⲆⵠΔΔ.ΔⲆΔⵠᐃ * Math.random())
			};
			this.ᐃⵠⵠᐃΔⵠᐃ = function(ᐃⲆᐃ, ⵠΔᐃ, ⵠⲆΔⵠⵠ, ⵠⵠᐃⲆΔⵠΔ, ᐃΔⵠⵠⵠᐃΔ, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ) {
				for (var ᐃⲆ = 1; ⲆΔΔᐃΔ > ᐃⲆ;) {
					var ΔΔΔ = ᐃⲆ * ⵠⲆΔⵠⵠ % ⲆΔⵠΔᐃⲆΔ;
					var ⵠⵠΔ = ⵠⵠΔⲆⵠⲆᐃ[ΔΔΔ];
					if (.1 > ⵠⵠΔ) {
						Δᐃᐃ += 50;
						ᐃⲆ += 50;
						continue
					}
					var Δᐃᐃ = Math.floor(ⵠⵠΔ * ⵠⵠᐃⲆΔⵠΔ + ᐃΔⵠⵠⵠᐃΔ);
					if (ᐃΔΔΔⵠ < ᐃⲆ && ᐃⲆ < ⲆΔΔᐃΔ) {
						var ᐃⵠⵠⲆ = .5 < Math.random() ? ᐃᐃΔⲆ * -ᐃΔᐃᐃⵠ : ⲆⵠΔⲆⲆ * ᐃᐃΔⲆ;
						var ⵠⲆᐃᐃⵠ = ⵠΔᐃ * Δᐃᐃ;
						this.ⵠⵠⲆΔⵠᐃⵠ[ΔΔΔ] = Math.max(-ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ, Math.min(ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ, this.ⵠⵠⲆΔⵠᐃⵠ[ΔΔΔ] + ᐃⵠⵠⲆ));
						this.ⲆᐃᐃⲆΔᐃⵠ[ΔΔΔ] = Math.max(-ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ, Math.min(ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ, this.ⲆᐃᐃⲆΔᐃⵠ[ΔΔΔ] + ᐃⵠⵠⲆ));
						if (0 < ⵠⲆᐃᐃⵠ) {
							Ⲇ.beginPath();
							Ⲇ.arc(ᐃⲆ + ⲆΔⲆ.ⵠΔΔ.x + this.ⲆᐃᐃⲆΔᐃⵠ[ΔΔΔ], ᐃⲆᐃ + this.ⵠⵠⲆΔⵠᐃⵠ[ΔΔΔ] - .8 * ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ, ⵠⲆᐃᐃⵠ, 0, Math.PI * ᐃΔⲆⲆⵠ);
							if (ⲆΔΔ.transition) {
								var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
								Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(83, 156, 160, 236, 247, 249, ᐃⲆᐃⵠ)
							} else Ⲇ.fillStyle = Δ.ⲆΔΔⵠⲆΔΔ[ⲆΔΔ.time];
							Ⲇ.fill()
						}
					}
					ᐃⲆ += 2 * Δᐃᐃ
				}
			};
			this.ΔⲆᐃⵠΔⲆΔ = function(ᐃᐃΔ, ⵠΔᐃ, ⵠⲆΔⵠⵠ, ⵠⵠᐃⲆΔⵠΔ, ᐃΔⵠⵠⵠᐃΔ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ) {
				for (var ᐃⲆ = 1; ᐃⲆ < ⵠⲆΔⲆΔ;) {
					var ΔΔΔ = ⵠⲆΔⵠⵠ * ᐃⲆ % ⲆΔⵠΔᐃⲆΔ;
					var ⵠⵠΔ = ⵠⵠΔⲆⵠⲆᐃ[ΔΔΔ];
					if (ⵠⵠΔ < .1) {
						Δᐃᐃ += 50;
						ᐃⲆ += 50;
						continue
					}
					var Δᐃᐃ = Math.floor(ⵠⵠΔ * ⵠⵠᐃⲆΔⵠΔ + ᐃΔⵠⵠⵠᐃΔ);
					if (ᐃⲆ > ΔᐃΔⲆΔ && ⵠⲆΔⲆΔ > ᐃⲆ) {
						var ᐃⵠⵠⲆ = .5 < Math.random() ? ᐃᐃΔⲆ * -10 : ᐃᐃΔⲆ * ᐃΔᐃᐃⵠ;
						var ⵠⲆᐃᐃⵠ = Δᐃᐃ * ⵠΔᐃ;
						this.ᐃᐃⵠⵠΔ[ΔΔΔ] = Math.max(-ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ, Math.min(ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ, this.ᐃᐃⵠⵠΔ[ΔΔΔ] + ᐃⵠⵠⲆ));
						this.ⵠⵠⲆⲆⵠ[ΔΔΔ] = Math.max(-ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ, Math.min(ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ, this.ⵠⵠⲆⲆⵠ[ΔΔΔ] + ᐃⵠⵠⲆ));
						if (ⵠⲆᐃᐃⵠ > ⲆⲆⲆ) {
							Ⲇ.beginPath();
							Ⲇ.arc(ᐃᐃΔ + this.ᐃᐃⵠⵠΔ[ΔΔΔ] - ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ * .8, ᐃⲆ + ⲆΔⲆ.ⵠΔΔ.y + this.ⵠⵠⲆⲆⵠ[ΔΔΔ], ⵠⲆᐃᐃⵠ, 0, ⵠΔⵠᐃ * Math.PI);
							if (ⲆΔΔ.transition) {
								var ᐃⲆᐃⵠ = ⲆΔΔ.time ? 1 - ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ : ⲆΔΔ.ᐃⲆᐃⵠ.ⵠⵠΔ;
								Ⲇ.fillStyle = ᐃⵠⵠⵠⲆ(83, 156, 160, 236, 247, 249, ᐃⲆᐃⵠ)
							} else Ⲇ.fillStyle = Δ.ⲆΔΔⵠⲆΔΔ[ⲆΔΔ.time];
							Ⲇ.fill()
						}
					}
					ᐃⲆ += Δᐃᐃ * 2
				}
			};
			this.ΔⲆᐃᐃᐃᐃⵠᐃᐃ = function(ᐃⲆᐃ, ΔⲆⲆⲆ, ⵠⵠᐃᐃⲆΔᐃ, ⵠⵠⵠⵠ, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ) {
				ᐃΔΔΔⵠ -= 30;
				ⲆΔΔᐃΔ += 30;
				var ⵠΔᐃ = -((ⵠⵠᐃᐃⲆΔᐃ - ⲆⵠΔΔ.ΔᐃⲆⲆⵠ - ⵠⵠⵠⵠ - ⵠⲆΔΔ) / ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ);
				if (ⵠΔᐃ === ᐃⵠΔ) this.ΔᐃⲆΔⵠΔⵠ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ⵠⵠᐃᐃⲆΔᐃ, ⵠΔᐃ, this.ᐃᐃⵠᐃᐃⲆΔ, ᐃⲆⵠⵠᐃ, 16, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = 1;
				var ⵠΔᐃ = -((ᐃⲆᐃ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - ⵠⵠⵠⵠ + 500) / ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ);
				if (0 === ⵠΔᐃ) this.ⲆᐃᐃⲆⲆΔΔ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ᐃⲆᐃ, ⵠΔᐃ, this.seed, ΔΔᐃⲆᐃ, 10, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = 1;
				if (ΔⲆⲆⲆ === -1) return;
				var ⵠΔᐃ = -((ΔⲆⲆⲆ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - ⵠⵠⵠⵠ + 698) / ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ);
				if (.01 >= ⵠΔᐃ) this.ⲆΔΔΔⲆΔⲆ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ΔⲆⲆⲆ, ⵠΔᐃ, this.ⵠⲆⵠⵠⵠΔⵠ, ᐃⵠΔⵠⵠ, ᐃΔΔⲆⲆ, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = ΔΔⲆΔ
			};
			this.ΔΔᐃⲆΔᐃⲆΔⵠ = function(ᐃⲆᐃ, ΔⲆⲆⲆ, ⵠⵠᐃᐃⲆΔᐃ, ⵠⵠⵠⵠ, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ) {
				ᐃΔΔΔⵠ -= 30;
				ⲆΔΔᐃΔ += 30;
				var ⵠΔᐃ = -((-ⵠⵠᐃᐃⲆΔᐃ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ + ⵠⵠⵠⵠ + 2) / ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ);
				if (ⵠΔᐃ === ᐃⵠΔ) this.ΔᐃⲆΔⵠΔⵠ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ⵠⵠᐃᐃⲆΔᐃ, ⵠΔᐃ, this.ᐃᐃⵠᐃᐃⲆΔ, ⵠᐃⵠⵠΔⵠⲆ, 16, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = 1;
				var ⵠΔᐃ = -((-ᐃⲆᐃ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ + ⵠⵠⵠⵠ) / ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ);
				if (ⵠΔᐃ === Δⵠⵠ) this.ⲆᐃᐃⲆⲆΔΔ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ᐃⲆᐃ, ⵠΔᐃ, this.seed, ⲆⵠⲆᐃᐃ, ⵠΔᐃΔᐃ, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = 1;
				if (ΔⲆⲆⲆ === -1) return;
				var ⵠΔᐃ = -((-ΔⲆⲆⲆ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ + ⵠⵠⵠⵠ) / ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ);
				ⵠΔᐃ <= .01 && this.ⲆΔΔΔⲆΔⲆ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ᐃⵠⵠᐃΔⵠᐃ(ΔⲆⲆⲆ, ⵠΔᐃ, this.ⵠⲆⵠⵠⵠΔⵠ, 6, 6, ᐃΔΔΔⵠ, ⲆΔΔᐃΔ);
				Ⲇ.globalAlpha = 1
			};
			this.ΔⵠΔᐃΔⲆΔⲆΔ = function(ᐃᐃΔ, ⵠᐃⵠⵠ, ᐃᐃⵠᐃΔⲆΔ, Δⵠⵠᐃ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ) {
				ΔᐃΔⲆΔ -= 30;
				ⵠⲆΔⲆΔ += 30;
				var ⵠΔᐃ = -((-ᐃᐃⵠᐃΔⲆΔ + ⲆⵠΔΔ.ΔᐃⲆⲆⵠ + Δⵠⵠᐃ + 2) / ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ);
				if (ⵠΔᐃ === 0) this.ΔᐃⲆΔⵠΔⵠ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ᐃᐃⵠᐃΔⲆΔ, ⵠΔᐃ, this.ᐃᐃⵠᐃᐃⲆΔ, 18, ⲆⲆΔᐃⵠΔᐃ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = ΔΔᐃᐃ;
				var ⵠΔᐃ = -((-ᐃᐃΔ + ⲆⵠΔΔ.ΔⵠΔⲆⵠ + Δⵠⵠᐃ) / ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ);
				if (0 === ⵠΔᐃ) this.ⲆᐃᐃⲆⲆΔΔ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ᐃᐃΔ, ⵠΔᐃ, this.seed, 12, ΔⲆⵠΔᐃ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = ⲆⲆΔᐃ;
				if (-1 === ⵠᐃⵠⵠ) return;
				var ⵠΔᐃ = -((-ⵠᐃⵠⵠ + ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ + Δⵠⵠᐃ) / ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ);
				if (ⵠΔᐃ <= .01) this.ⲆΔΔΔⲆΔⲆ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ⵠᐃⵠⵠ, ⵠΔᐃ, this.ⵠⲆⵠⵠⵠΔⵠ, ⲆᐃΔᐃᐃ, 6, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = ΔᐃⵠΔ
			};
			this.ΔᐃⲆᐃⲆᐃᐃΔⲆ = function(ᐃᐃΔ, ⵠᐃⵠⵠ, ᐃᐃⵠᐃΔⲆΔ, Δⵠⵠᐃ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ) {
				ΔᐃΔⲆΔ -= 30;
				ⵠⲆΔⲆΔ += 30;
				var ⵠΔᐃ = -((ᐃᐃⵠᐃΔⲆΔ - ⲆⵠΔΔ.ΔᐃⲆⲆⵠ - Δⵠⵠᐃ - 2) / ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ);
				0 === ⵠΔᐃ && this.ΔᐃⲆΔⵠΔⵠ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ᐃᐃⵠᐃΔⲆΔ, ⵠΔᐃ, this.ᐃᐃⵠᐃᐃⲆΔ, ⵠⵠⵠⵠΔ, ⲆⵠᐃΔᐃ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = ΔΔⵠΔⵠ;
				var ⵠΔᐃ = -((ᐃᐃΔ - ⲆⵠΔΔ.ΔⵠΔⲆⵠ - Δⵠⵠᐃ + 500) / ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ);
				if (ⵠᐃⲆᐃ === ⵠΔᐃ) this.ⲆᐃᐃⲆⲆΔΔ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ᐃᐃΔ, ⵠΔᐃ, this.seed, 12, ΔᐃΔᐃⵠ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = ᐃⲆⵠΔ;
				if (-1 === ⵠᐃⵠⵠ) return;
				var ⵠΔᐃ = -((ⵠᐃⵠⵠ - ⲆⵠΔΔ.ᐃⵠⲆⲆᐃ - Δⵠⵠᐃ + 698) / ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ);
				ⵠΔᐃ <= .01 && this.ⲆΔΔΔⲆΔⲆ();
				Ⲇ.globalAlpha = Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠΔᐃ);
				this.ΔⲆᐃⵠΔⲆΔ(ⵠᐃⵠⵠ, ⵠΔᐃ, this.ⵠⲆⵠⵠⵠΔⵠ, ΔᐃΔⵠⵠⲆᐃ, Ⲇᐃᐃᐃⵠ, ΔᐃΔⲆΔ, ⵠⲆΔⲆΔ);
				Ⲇ.globalAlpha = 1
			};
			this.w1 = {
				r: new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ΔΔⵠⵠΔᐃⲆ, ΔΔᐃ, 10, ⲆⵠΔΔ.ⲆⲆⲆΔΔ, ⲆⵠΔΔ.ⲆⲆⲆΔΔ, ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ),
				"ⲆⲆⲆᐃ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⲆⵠⲆⲆᐃⲆ, 0, ⲆᐃΔⵠⵠ, ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ, ⲆⵠΔΔ.ᐃⲆⲆⵠⲆⲆⵠ, ⲆⵠΔΔ.ⲆⲆⲆΔΔ)
			};
			this.w2 = {
				r: new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆⵠⲆΔᐃᐃΔ, ΔΔᐃ, 10, ⲆⵠΔΔ.ΔΔⲆⵠⵠΔᐃ, ⲆⵠΔΔ.ΔΔⲆⵠⵠΔᐃ, ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ),
				"ⲆⲆⲆᐃ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ, 0, 10, ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ, ⲆⵠΔΔ.ⵠⲆΔⵠᐃⵠΔ, ⲆⵠΔΔ.ΔΔⲆⵠⵠΔᐃ)
			};
			this.w3 = {
				r: new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ᐃᐃΔᐃⵠⵠⲆ, 0, ᐃΔᐃᐃⵠ, ⲆⵠΔΔ.ⵠⵠⵠⲆᐃᐃΔ, ⲆⵠΔΔ.ⵠⵠⵠⲆᐃᐃΔ, ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ),
				"ⲆⲆⲆᐃ": new Ⲇᐃⵠ.ⵠᐃⵠⵠⲆ(Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ, ΔΔⵠᐃ, ᐃᐃⵠⵠⵠ, ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ, ⲆⵠΔΔ.ⲆᐃⲆΔΔⵠⲆ, ⲆⵠΔΔ.ⵠⵠⵠⲆᐃᐃΔ)
			};
			this.ΔⲆⲆᐃⲆⲆⵠⵠⵠ = function(ᐃᐃⲆⲆᐃ) {
				var ᐃᐃⲆ;
				if (ᐃᐃⲆⲆᐃ.r.x === ᐃᐃⲆⲆᐃ.r.ᐃᐃΔᐃᐃ) {
					ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ.x === ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ.ᐃᐃΔᐃᐃ ? ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.r : ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ
				} else ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.r;
				return ᐃᐃⲆ
			};
			this.ᐃⲆⵠ = function(ᐃᐃⲆⲆᐃ) {
				var ᐃᐃⲆ;
				if (ᐃᐃⲆⲆᐃ.r.x === ᐃᐃⲆⲆᐃ.r.ᐃᐃΔᐃᐃ) {
					if (ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ.x === ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ.ᐃᐃΔᐃᐃ) {
						ᐃᐃⲆⲆᐃ.r.ΔᐃⲆⵠΔᐃΔ();
						ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ.ΔᐃⲆⵠΔᐃΔ();
						ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.r
					} else ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.ⲆⲆⲆᐃ
				} else ᐃᐃⲆ = ᐃᐃⲆⲆᐃ.r;
				ᐃᐃⲆ.ⲆⵠᐃⲆⲆΔΔ(ᐃᐃⲆ.ᐃᐃΔᐃᐃ);
				return ᐃᐃⲆ
			};
			this.ᐃᐃⵠⵠΔ = [];
			this.ⵠⵠⲆⲆⵠ = [];
			this.ⵠⵠⲆΔⵠᐃⵠ = [];
			this.ⲆᐃᐃⲆΔᐃⵠ = [];
			this.ⲆΔⲆΔΔ = function() {
				for (var ᐃⲆ = 0; ⲆΔⵠΔᐃⲆΔ > ᐃⲆ; ᐃⲆ++) {
					this.ᐃᐃⵠⵠΔ[ᐃⲆ] = Math.floor(ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ * ⵠⵠΔⲆⵠⲆᐃ[ᐃⲆ]);
					this.ⵠⵠⲆⲆⵠ[ᐃⲆ] = Math.floor(ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ * ⵠⵠΔⲆⵠⲆᐃ[ᐃⲆ]);
					this.ⵠⵠⲆΔⵠᐃⵠ[ᐃⲆ] = Math.floor(ⲆⵠΔΔ.ⵠᐃⲆᐃᐃⲆᐃ * ⵠⵠΔⲆⵠⲆᐃ[ᐃⲆ]);
					this.ⲆᐃᐃⲆΔᐃⵠ[ᐃⲆ] = Math.floor(ⵠⵠΔⲆⵠⲆᐃ[ᐃⲆ] * ⲆⵠΔΔ.ΔⲆⲆⲆΔⲆΔ)
				}
				this.w1.r.x = this.w1.r.ᐃᐃΔᐃᐃ;
				this.w2.r.ΔᐃⲆᐃⲆ = 3.5;
				this.w3.r.ΔᐃⲆᐃⲆ = ⵠᐃⵠΔ
			};
			this.ⲆΔⲆΔΔ()
		}
		this.Δⵠᐃᐃ = [];
		for (var ᐃⲆ = ΔΔⲆᐃ; ᐃⲆ < 4; ᐃⲆ++) this.Δⵠᐃᐃ.push(new ⵠⵠⲆⲆⵠΔⵠᐃⲆ)
	}

	function ΔΔᐃΔᐃⵠΔⵠᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "W"
	}

	function ⵠΔⲆⵠⵠⵠᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "a"
	}

	function ⵠᐃⵠⵠΔΔⵠᐃⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "m"
	}

	function ⲆΔΔᐃᐃΔⲆᐃⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "R"
	}

	function ⵠⵠⲆⵠⲆⲆᐃ() {
		var ΔᐃⲆᐃ = Math.random();
		return "t"
	}

	function ⲆⵠⵠΔⵠⵠⲆⵠⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "k"
	}

	function ⲆⲆⲆᐃᐃⵠⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "d"
	}

	function ᐃᐃⲆΔᐃΔⲆ() {
		var ΔᐃⲆᐃ = Math.random();
		return "s"
	}

	function ᐃᐃⲆⲆⵠⵠⵠ() {
		var ΔᐃⲆᐃ = Math.random();
		return "e"
	}
	setTimeout(ᐃΔΔⲆⲆⵠⵠ, 1e5);

	function ΔⲆⵠΔⲆⲆᐃ(ⲆΔΔⵠⲆᐃⲆ, ᐃᐃⵠⲆⵠⵠΔ, ΔᐃⲆᐃⵠᐃᐃ) {
		ⵠⵠⲆΔΔΔΔ(ᐃΔΔΔⲆ, ⲆΔΔⵠⲆᐃⲆ, ᐃᐃⵠⲆⵠⵠΔ, ΔᐃⲆᐃⵠᐃᐃ);
		const ⲆⲆΔᐃΔΔᐃⲆⵠ = ⲆⲆⲆⵠᐃΔΔ(ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[ⵠⵠⲆ], ⲆᐃΔⲆ[2]);
		const ⵠᐃⲆΔᐃᐃΔΔᐃ = ⵠᐃᐃΔΔᐃⵠⵠΔ(ⲆᐃΔⲆ[ⲆⲆⲆ], ⲆᐃΔⲆ[ⵠⵠⲆ], ⲆᐃΔⲆ[ⲆᐃⲆᐃ]);
		const ΔᐃΔⲆᐃⵠᐃⲆⲆ = (8121 * (23 + (ⲆⲆΔᐃΔΔᐃⲆⵠ ^ ⵠᐃⲆΔᐃᐃΔΔᐃ)) + 28411) % 134456;
		return ΔᐃΔⲆᐃⵠᐃⲆⲆ
	}

	function ⵠᐃᐃΔΔᐃⵠⵠΔ(ⵠⵠⲆⲆΔⵠⵠ, ⲆⵠⲆⵠⵠⲆⵠ, ⵠⲆΔⵠᐃⵠⲆ) {
		ᐃⲆⵠⵠⵠⲆⲆ(ᐃΔΔΔⲆ, ⵠⵠⲆⲆΔⵠⵠ, ⲆⵠⲆⵠⵠⲆⵠ, ⵠⲆΔⵠᐃⵠⲆ);
		const ΔⲆΔΔᐃΔⲆ = ΔⵠᐃⵠⵠΔᐃ(ⲆᐃΔⲆ[ᐃΔⵠⵠ], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[ᐃΔⲆⲆⵠ], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ΔᐃᐃⲆ]);
		const ⵠᐃᐃᐃⵠⵠΔ = ΔⵠᐃⵠⵠΔᐃ(ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ⵠᐃΔᐃ], ⲆᐃΔⲆ[ⵠΔⵠᐃ], ⲆᐃΔⲆ[ΔⵠⲆⲆ]);
		const ⲆⵠᐃⲆⵠΔⵠᐃΔ = (16 << ((ΔⲆΔΔᐃΔⲆ ^ ⵠᐃᐃᐃⵠⵠΔ) >> 8 & 255)) + (24 << ((ΔⲆΔΔᐃΔⲆ ^ ⵠᐃᐃᐃⵠⵠΔ) >> 24 & 255)) + (8 << ((ΔⲆΔΔᐃΔⲆ ^ ⵠᐃᐃᐃⵠⵠΔ) >> 0 & 255)) + (ⵠⲆⲆᐃ << ((ΔⲆΔΔᐃΔⲆ ^ ⵠᐃᐃᐃⵠⵠΔ) >> 16 & 255));
		return ⲆⵠᐃⲆⵠΔⵠᐃΔ
	}

	function ᐃⵠΔΔΔⲆΔᐃⲆ(ⵠᐃΔᐃᐃᐃⲆ, ⲆΔᐃⵠⲆⲆΔ, ΔΔΔⲆⵠⵠⵠ, ⲆᐃⵠΔΔⲆⵠ, ⵠⵠΔⵠᐃⵠᐃ) {
		const ⲆΔΔᐃΔΔⵠ = ((ⵠᐃΔᐃᐃᐃⲆ + 48330) * 214013 + 2531011) % 4294967296;
		const ⲆᐃⵠⲆⵠⲆⵠ = ((ⲆΔᐃⵠⲆⲆΔ + 63318) * 22695477 + 1) % 4294967296;
		const ΔⵠᐃᐃᐃⵠⲆ = (8 << (ΔΔΔⲆⵠⵠⵠ >> ⵠⵠᐃⵠ & 255)) + (24 << (ΔΔΔⲆⵠⵠⵠ >> 24 & 255)) + (0 << (ΔΔΔⲆⵠⵠⵠ >> 8 & ΔⲆᐃⵠΔΔΔ)) + (16 << (ΔΔΔⲆⵠⵠⵠ >> 16 & 255));
		const ⵠΔⵠⵠΔᐃⲆ = ~(26671 & ⲆᐃⵠΔΔⲆⵠ) & (ⲆᐃⵠΔΔⲆⵠ | 26671);
		const ⵠⲆᐃⵠᐃⵠᐃᐃᐃ = (0 << (ⵠⵠΔⵠᐃⵠᐃ >> 16 & 255)) + (ᐃⵠΔΔᐃ << (ⵠⵠΔⵠᐃⵠᐃ >> 8 & 255)) + (16 << (ⵠⵠΔⵠᐃⵠᐃ >> 24 & 255)) + (24 << (ⵠⵠΔⵠᐃⵠᐃ >> 0 & 255));
		const ΔΔⵠⵠᐃⲆⲆⲆᐃ = ⲆⲆⵠᐃᐃⵠΔ(ⲆΔΔᐃΔΔⵠ, ⲆᐃⵠⲆⵠⲆⵠ, ΔⵠᐃᐃᐃⵠⲆ, ⵠΔⵠⵠΔᐃⲆ, ⵠⲆᐃⵠᐃⵠᐃᐃᐃ);
		const ΔᐃⲆⵠᐃⵠΔᐃΔ = Ⲇᐃⵠⵠⵠⵠᐃ(ⲆΔΔᐃΔΔⵠ, ⲆᐃⵠⲆⵠⲆⵠ, ΔⵠᐃᐃᐃⵠⲆ, ⵠΔⵠⵠΔᐃⲆ);
		const ᐃⵠᐃΔᐃΔᐃⲆⲆ = (22695477 * (50741 + (ΔΔⵠⵠᐃⲆⲆⲆᐃ ^ ΔᐃⲆⵠᐃⵠΔᐃΔ)) + 1) % 4294967296;
		return ᐃⵠᐃΔᐃΔᐃⲆⲆ
	}

	function ΔΔΔᐃⵠⲆᐃ(ΔⵠᐃᐃΔΔΔ, ΔⵠⵠᐃΔΔᐃ, ΔᐃΔΔΔᐃᐃ, ⵠᐃⲆⲆⵠΔⵠ, ⵠᐃⵠⵠΔΔⵠ) {
		const ⲆΔΔΔΔⵠᐃ = 27457 ^ ΔⵠᐃᐃΔΔΔ;
		const ⵠᐃⵠⵠΔᐃⵠ = (2531011 + 214013 * (55423 + ΔⵠⵠᐃΔΔᐃ)) % 4294967296;
		const ⲆⲆⵠΔⵠⲆⲆ = 15902 ^ ΔᐃΔΔΔᐃᐃ;
		const ⵠΔΔⲆⲆⲆΔ = (ᐃᐃΔⵠⵠ << (ⵠᐃⲆⲆⵠΔⵠ >> 0 & 255)) + (0 << (ⵠᐃⲆⲆⵠΔⵠ >> 24 & 255)) + (16 << (ⵠᐃⲆⲆⵠΔⵠ >> ⵠⵠᐃⲆⵠⲆΔ & ⲆᐃᐃⲆⵠΔⲆ)) + (24 << (ⵠᐃⲆⲆⵠΔⵠ >> 8 & 255));
		const Δᐃⵠⵠᐃⵠⵠ = (1635 | ⵠᐃⵠⵠΔΔⵠ) & ~(ⵠᐃⵠⵠΔΔⵠ & 1635);
		const ΔⲆⲆⵠΔⲆⲆΔᐃ = ⵠΔⲆΔⲆⲆⵠ(ⲆΔΔΔΔⵠᐃ, ⵠᐃⵠⵠΔᐃⵠ, ⲆⲆⵠΔⵠⲆⲆ, ⵠΔΔⲆⲆⲆΔ);
		const ΔΔⲆᐃⲆΔΔⲆⵠ = ᐃⵠⲆΔⲆⵠⲆ(Δᐃⵠⵠᐃⵠⵠ, ⲆΔΔΔΔⵠᐃ, ⵠᐃⵠⵠΔᐃⵠ, ⲆⲆⵠΔⵠⲆⲆ, ⵠΔΔⲆⲆⲆΔ, Δᐃⵠⵠᐃⵠⵠ);
		const ⲆΔⵠⵠΔᐃⵠⵠΔ = ΔⲆⲆⵠΔⲆⲆΔᐃ ^ 21157;
		return ⲆΔⵠⵠΔᐃⵠⵠΔ
	}

	function ⲆⵠⲆⵠΔⲆⵠ(ᐃΔⵠⲆΔΔΔ, ⲆΔⵠΔᐃΔⲆ, ⲆᐃⲆⲆⵠᐃΔ, ᐃᐃⲆⵠᐃᐃⲆ, ⵠⲆⵠᐃⵠⲆⲆ) {
		const ⵠΔⵠᐃⵠⵠΔ = (ᐃΔⵠⲆΔΔΔ | 59932) & ~(59932 & ᐃΔⵠⲆΔΔΔ);
		const ⵠⵠⲆΔⲆⲆⲆⲆⵠ = ~(ⲆΔⵠΔᐃΔⲆ & 14168) & 14168 | ~(14168 & ⲆΔⵠΔᐃΔⲆ) & ⲆΔⵠΔᐃΔⲆ;
		const ⲆⲆᐃⲆΔⲆΔⵠΔ = ~(25496 & ⲆᐃⲆⲆⵠᐃΔ) & (25496 | ⲆᐃⲆⲆⵠᐃΔ);
		const ΔΔᐃᐃᐃⲆΔΔΔ = ~(ᐃᐃⲆⵠᐃᐃⲆ & 15855) & ᐃᐃⲆⵠᐃᐃⲆ | ~(ᐃᐃⲆⵠᐃᐃⲆ & 15855) & 15855;
		const ᐃΔⵠⲆⵠΔᐃᐃΔ = (ⵠⲆⵠᐃⵠⲆⲆ | 65433) & ~(65433 & ⵠⲆⵠᐃⵠⲆⲆ);
		const ᐃᐃⵠⲆΔⵠⵠ = ⵠⲆᐃᐃⵠⲆⵠ(ⵠΔⵠᐃⵠⵠΔ, ⵠⵠⲆΔⲆⲆⲆⲆⵠ, ⲆⲆᐃⲆΔⲆΔⵠΔ, ΔΔᐃᐃᐃⲆΔΔΔ);
		const ΔⲆⵠΔⵠΔΔ = ΔⵠᐃⵠⵠⲆΔ(ᐃΔⵠⲆⵠΔᐃᐃΔ, ⵠΔⵠᐃⵠⵠΔ);
		const ΔᐃΔⵠⵠΔⲆⲆⲆ = (ⵠⵠᐃⲆⵠⲆΔ << ((ᐃᐃⵠⲆΔⵠⵠ ^ ΔⲆⵠΔⵠΔΔ) >> 8 & 255)) + (0 << ((ᐃᐃⵠⲆΔⵠⵠ ^ ΔⲆⵠΔⵠΔΔ) >> 16 & 255)) + (24 << ((ᐃᐃⵠⲆΔⵠⵠ ^ ΔⲆⵠΔⵠΔΔ) >> 0 & 255)) + (ⲆΔΔΔᐃ << ((ᐃᐃⵠⲆΔⵠⵠ ^ ΔⲆⵠΔⵠΔΔ) >> 24 & 255));
		return ΔᐃΔⵠⵠΔⲆⲆⲆ
	}

	function ⵠⵠⲆΔᐃⵠᐃ(ΔⵠⵠᐃⲆⲆΔ, ᐃΔΔΔⲆᐃⵠ, Ⲇᐃᐃⵠⵠⵠⵠ) {
		const ⵠΔΔⵠᐃΔᐃ = ΔⵠⵠᐃⲆⲆΔ ^ 14970;
		const ⵠΔⵠᐃⵠᐃΔ = (24 << (ᐃΔΔΔⲆᐃⵠ >> 24 & 255)) + (ΔⲆᐃᐃᐃ << (ᐃΔΔΔⲆᐃⵠ >> 16 & 255)) + (16 << (ᐃΔΔΔⲆᐃⵠ >> 0 & 255)) + (0 << (ᐃΔΔΔⲆᐃⵠ >> 8 & 255));
		const ⲆⲆⵠΔΔⵠᐃ = Ⲇᐃᐃⵠⵠⵠⵠ ^ 21225;
		const ⲆⵠⵠⵠⲆⲆᐃⵠⲆ = ΔⵠⵠⵠⲆⲆⵠᐃⲆ(ⵠΔΔⵠᐃΔᐃ, ⵠΔⵠᐃⵠᐃΔ, ⲆⲆⵠΔΔⵠᐃ, ⵠΔΔⵠᐃΔᐃ);
		const ᐃΔⵠⵠΔᐃᐃⵠΔ = ⲆᐃⲆⵠⵠⲆⵠ(ⵠΔⵠᐃⵠᐃΔ, ⲆⲆⵠΔΔⵠᐃ, ⵠΔΔⵠᐃΔᐃ, ⵠΔⵠᐃⵠᐃΔ, ⲆⲆⵠΔΔⵠᐃ, ⵠΔΔⵠᐃΔᐃ);
		const ΔⵠⵠΔΔⲆΔⵠΔ = (34897 + (ⲆⵠⵠⵠⲆⲆᐃⵠⲆ ^ ᐃΔⵠⵠΔᐃᐃⵠΔ)) % 65441;
		return ΔⵠⵠΔΔⲆΔⵠΔ
	}

	function ᐃⵠⵠᐃⲆΔⵠ(ⲆⵠⵠΔⵠⲆⵠ, ⵠᐃΔᐃᐃᐃⵠ, ΔᐃⲆⵠΔⲆⵠ, ΔΔⲆᐃΔⵠᐃⵠᐃ) {
		const ⵠᐃΔΔⵠΔᐃ = (12345 + 1103515245 * (ⲆⵠⵠΔⵠⲆⵠ + 55934)) % 2147483648;
		const ⲆΔᐃᐃΔᐃⵠ = (59062 | ⵠᐃΔᐃᐃᐃⵠ) & ~(59062 & ⵠᐃΔᐃᐃᐃⵠ);
		const ᐃⲆᐃᐃⲆᐃᐃⲆⵠ = (8 << (ΔᐃⲆⵠΔⲆⵠ >> 0 & 255)) + (24 << (ΔᐃⲆⵠΔⲆⵠ >> ΔᐃⲆⵠⲆⵠⵠ & 255)) + (0 << (ΔᐃⲆⵠΔⲆⵠ >> 24 & 255)) + (16 << (ΔᐃⲆⵠΔⲆⵠ >> 16 & 255));
		const ⲆⵠΔᐃᐃⲆΔⵠⲆ = (1013904223 + (35501 + ΔΔⲆᐃΔⵠᐃⵠᐃ) * 1664525) % 4294967296;
		const Δⵠⵠⵠⵠᐃᐃ = Δᐃⵠⵠᐃᐃᐃ(ⵠᐃΔΔⵠΔᐃ, ⲆΔᐃᐃΔᐃⵠ, ᐃⲆᐃᐃⲆᐃᐃⲆⵠ, ⲆⵠΔᐃᐃⲆΔⵠⲆ);
		const ΔⵠΔΔΔⲆⵠ = ⲆⲆⲆΔⲆᐃᐃⵠⲆ(ⵠᐃΔΔⵠΔᐃ, ⲆΔᐃᐃΔᐃⵠ);
		const ⲆⵠⲆΔⵠⲆⵠᐃⵠ = (16 << ((Δⵠⵠⵠⵠᐃᐃ ^ ΔⵠΔΔΔⲆⵠ) >> 16 & 255)) + (0 << ((Δⵠⵠⵠⵠᐃᐃ ^ ΔⵠΔΔΔⲆⵠ) >> 0 & 255)) + (24 << ((Δⵠⵠⵠⵠᐃᐃ ^ ΔⵠΔΔΔⲆⵠ) >> 8 & 255)) + (8 << ((Δⵠⵠⵠⵠᐃᐃ ^ ΔⵠΔΔΔⲆⵠ) >> 24 & 255));
		return ⲆⵠⲆΔⵠⲆⵠᐃⵠ
	}

	function ⲆⵠⲆΔⵠᐃᐃ(ᐃⲆⲆΔⵠᐃⲆ, ⲆⲆᐃᐃᐃⵠᐃ, ⲆᐃΔΔᐃⵠΔ, ⵠⵠⲆⵠΔᐃᐃ) {
		const ΔΔⲆⲆΔⵠⵠ = (24 << (ᐃⲆⲆΔⵠᐃⲆ >> 0 & 255)) + (ΔⲆᐃⵠᐃ << (ᐃⲆⲆΔⵠᐃⲆ >> 8 & 255)) + (0 << (ᐃⲆⲆΔⵠᐃⲆ >> 24 & 255)) + (16 << (ᐃⲆⲆΔⵠᐃⲆ >> ᐃΔΔⲆⲆΔΔ & 255));
		const ⵠΔⲆⲆΔᐃΔ = (12345 + (17684 + ⲆⲆᐃᐃᐃⵠᐃ) * 1103515245) % 2147483648;
		const ΔⲆᐃⲆᐃⵠⲆ = (12345 + 1103515245 * (ⲆᐃΔΔᐃⵠΔ + 37203)) % 2147483648;
		const ΔΔᐃⲆⲆⲆΔ = (1664525 * (45166 + ⵠⵠⲆⵠΔᐃᐃ) + 1013904223) % 4294967296;
		const ⵠᐃⲆⵠᐃⲆⵠ = Ⲇᐃⵠⵠⵠⵠᐃ(ΔΔⲆⲆΔⵠⵠ, ⵠΔⲆⲆΔᐃΔ, ΔⲆᐃⲆᐃⵠⲆ, ΔΔᐃⲆⲆⲆΔ);
		const ⵠⵠᐃⵠΔⲆΔ = ⵠᐃΔᐃⲆΔⵠ(ΔΔⲆⲆΔⵠⵠ, ⵠΔⲆⲆΔᐃΔ, ΔⲆᐃⲆᐃⵠⲆ, ΔΔᐃⲆⲆⲆΔ);
		const ⲆΔᐃⲆΔⵠⲆᐃᐃ = (24 << ((ⵠᐃⲆⵠᐃⲆⵠ ^ ⵠⵠᐃⵠΔⲆΔ) >> 0 & 255)) + (16 << ((ⵠᐃⲆⵠᐃⲆⵠ ^ ⵠⵠᐃⵠΔⲆΔ) >> 8 & 255)) + (0 << ((ⵠᐃⲆⵠᐃⲆⵠ ^ ⵠⵠᐃⵠΔⲆΔ) >> ⵠⲆⵠⵠΔ & 255)) + (8 << ((ⵠᐃⲆⵠᐃⲆⵠ ^ ⵠⵠᐃⵠΔⲆΔ) >> 24 & ⲆⲆⵠΔⲆΔⵠ));
		return ⲆΔᐃⲆΔⵠⲆᐃᐃ
	}
	var ⵠⲆⵠⵠⲆⲆᐃ = "datas/info.json";
	if (ⵠⲆⵠⲆⵠⲆⲆ === ΔΔⲆΔΔᐃΔ.ΔᐃΔⵠΔⵠΔ) {
		ⵠⲆⵠⵠⲆⲆᐃ = "datas/info.local.json"
	}
	var ⲆⵠΔⲆⲆⵠⵠᐃⲆ = {
		"ⵠⲆⵠⵠⲆⲆᐃ": ⵠⲆⵠⵠⲆⲆᐃ
	};

	function ᐃⲆΔⵠⵠΔⲆⲆⲆ() {
		Ⲇᐃⵠ.ᐃΔᐃⲆΔⲆᐃ("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0")
	}

	function ᐃΔΔᐃⵠⵠΔ(ⵠΔⲆΔΔᐃᐃ, ⵠⲆⵠΔᐃᐃⲆ, ⲆⲆⵠᐃᐃΔΔ) {
		const ΔⲆⵠⵠᐃⲆᐃ = (2531011 + 214013 * (ⵠΔⲆΔΔᐃᐃ + 11845)) % 4294967296;
		const ᐃᐃⲆᐃⲆⲆⵠ = (ΔᐃᐃⲆ + 22695477 * (ⵠⲆⵠΔᐃᐃⲆ + 585)) % 4294967296;
		const ᐃⲆΔⲆᐃΔΔ = ~(ⲆⲆⵠᐃᐃΔΔ & 38362) & 38362 | ~(38362 & ⲆⲆⵠᐃᐃΔΔ) & ⲆⲆⵠᐃᐃΔΔ;
		const ⲆⵠⵠⵠᐃΔᐃ = ⵠΔⲆΔⲆⲆⵠ(ΔⲆⵠⵠᐃⲆᐃ, ᐃᐃⲆᐃⲆⲆⵠ, ᐃⲆΔⲆᐃΔΔ, ΔⲆⵠⵠᐃⲆᐃ);
		const ΔⵠⲆⲆΔΔⲆⲆᐃ = ⵠᐃΔᐃⲆΔⵠ(ᐃᐃⲆᐃⲆⲆⵠ, ᐃⲆΔⲆᐃΔΔ, ΔⲆⵠⵠᐃⲆᐃ, ᐃᐃⲆᐃⲆⲆⵠ);
		const ΔΔΔⵠⲆΔⲆΔᐃ = ~(43781 & ⲆⵠⵠⵠᐃΔᐃ) & ⲆⵠⵠⵠᐃΔᐃ | ~(ⲆⵠⵠⵠᐃΔᐃ & 43781) & 43781;
		return ΔΔΔⵠⲆΔⲆΔᐃ
	}

	function ᐃΔⵠᐃⵠᐃⵠⵠⵠ(ΔΔ, Ⲇ) {
		this.ΔΔ = ΔΔ;
		this.Ⲇ = Ⲇ; - 1 < ⲆⲆⲆⲆᐃᐃᐃ.navigator.userAgent.indexOf("Edge") ? (this.ⵠΔⵠⲆⵠᐃⵠ = "default", this.ᐃᐃⵠⲆᐃΔᐃ = "pointer") : (this.ⵠΔⵠⲆⵠᐃⵠ = "url('img/cursor0.png'), default", this.ᐃᐃⵠⲆᐃΔᐃ = "url('img/cursor1.png'), pointer");
		var Ⲇⵠᐃ = this;
		this.waiting = ΔⲆⵠᐃⵠ;
		this.ⵠΔᐃⵠΔΔⵠ = 0;
		this.ⲆⵠⵠᐃⲆΔⲆ = -ᐃⲆⵠΔ;
		this.ΔΔⲆⲆⲆⵠⵠ = {
			translate: {
				y: Δⵠⵠ,
				x: 0
			},
			angle: 0,
			"ⵠⵠ": Ⲇᐃ[Δ.ⲆᐃᐃⲆⲆᐃⲆ],
			"ⲆⵠᐃⲆ": function() {
				this.angle += ᐃᐃΔⲆ * 2;
				Ⲇ.save();
				Ⲇ.translate(this.translate.x + this.ⵠⵠ.width / 2, this.translate.y + this.ⵠⵠ.height / ᐃΔⵠᐃ);
				Ⲇ.rotate(this.angle);
				ⵠⲆΔⲆ(Ⲇ, this.ⵠⵠ, -this.ⵠⵠ.width / ⵠΔⵠᐃ, -this.ⵠⵠ.height / 2);
				Ⲇ.restore()
			}
		};
		this.ΔᐃⵠⵠⲆⵠⲆ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("langselect"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("langselect").style,
			translate: {
				y: ᐃⵠΔ,
				x: 0
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(this.translate.x) + ⵠ[454];
				this.style.top = Math.floor(this.translate.y) + ⵠ[454]
			}
		};
		this.ΔⲆⲆⵠΔ = ⵠⲆⲆᐃ;
		this.ᐃⲆᐃᐃᐃΔᐃ = -ΔΔⲆΔ;
		this.ⲆΔᐃⲆᐃᐃⵠ = undefined;
		this.ⲆΔᐃᐃⵠⵠⵠ = "";
		this.ⲆⲆᐃⲆⵠΔⲆ = "";
		this.ΔᐃⲆⲆⵠΔⲆ = undefined;
		this.ⲆΔⵠⵠΔ = ΔⵠⲆⲆ;
		this.ⲆⵠᐃⲆⲆⲆΔ = -1;
		this.ΔⲆᐃᐃΔᐃᐃ = ⲆΔⲆᐃⲆ;
		this.ⵠᐃᐃΔⲆΔⵠ = 0;
		this.ⵠᐃΔⵠᐃⲆᐃ = ⵠⵠᐃⵠ;
		this.ΔᐃⲆⲆⵠⵠⲆ = 0;
		this.ᐃᐃⲆⲆⲆΔⲆ = 0;
		this.ΔΔΔΔⵠΔⵠ = 0;
		this.time = Δⵠⵠ;
		this.ⵠⲆⲆᐃᐃ = ΔΔⲆᐃ;
		this.ΔᐃΔⲆᐃᐃⲆ = ΔⲆⵠ;
		this.ΔΔⵠΔΔⵠⵠ = 0;
		this.ⵠᐃᐃᐃⵠⲆΔ = ⵠᐃⲆᐃ;
		this.ᐃⲆⵠᐃᐃᐃⲆ = ⵠⵠᐃᐃΔ;
		this.ⵠΔᐃᐃᐃⲆⲆ = [];
		this.ⲆⲆΔⲆΔ = -1;
		this.ⵠΔΔⲆⵠᐃⵠ = -ⲆΔⵠⲆ;
		this.ⵠᐃΔⲆΔⲆⵠ = -1;
		this.ᐃⲆⲆⵠΔⵠΔ = undefined;
		this.ΔⵠᐃᐃΔⲆⵠ = undefined;
		this.ᐃΔᐃⵠⵠΔΔ = -1;
		this.ⵠⵠⵠᐃΔᐃⵠ = -1;
		this.ⵠᐃⲆⵠΔⵠᐃ = -1;
		this.ΔᐃᐃᐃΔⵠⲆ = -1;
		this.ⲆⵠᐃⵠⲆⲆⲆ = ⵠⵠⲆᐃⲆ;
		this.ⵠⵠⵠⲆⵠΔᐃ = ᐃⲆᐃᐃᐃ;
		this.ⲆᐃⲆΔⲆΔᐃ = undefined;
		this.ΔᐃΔⲆΔⵠⲆ = undefined;
		this.ᐃⲆΔΔΔⵠⵠ = ⵠΔΔᐃⵠ;
		this.ⲆᐃⲆᐃᐃⵠⵠ = undefined;
		this.ⲆⲆⵠⵠΔᐃⵠ = undefined;
		this.ΔΔΔⲆⵠⲆΔ = ΔΔⵠⲆⵠ;
		this.ⵠᐃᐃⲆᐃⲆⲆ = ⵠᐃΔᐃΔ;
		this.ⵠᐃⵠᐃⵠⲆΔ = ΔⲆΔⵠ;
		this.ᐃⵠΔⵠ = 0;

		function ᐃᐃⲆⵠⵠᐃΔ(ⵠΔΔⵠᐃⵠΔ, ⲆⲆᐃᐃᐃⲆΔ, ⵠⵠⵠⵠⲆΔⵠⵠⲆ, ΔᐃᐃⲆᐃᐃⵠᐃⵠ, ⵠΔΔⲆ) {
			var ΔⵠⲆΔΔᐃⵠ = this;
			var ⲆⵠΔΔⵠⵠⲆ = ⲆⲆᐃᐃᐃⲆΔ + 9;
			var ⵠⲆΔΔⲆ = ᐃΔⵠⵠ;
			var ⵠᐃⵠᐃⲆᐃᐃ = ΔᐃᐃⲆᐃᐃⵠᐃⵠ;
			for (var ᐃⲆ = ⲆⲆᐃᐃᐃⲆΔ; ᐃⲆ < ⲆⵠΔΔⵠⵠⲆ; ᐃⲆ++) {
				Ⲇⵠᐃ.buttons[ᐃⲆ].info.callback = ⵠⲆⵠΔᐃᐃΔᐃⲆ;
				Ⲇⵠᐃ.buttons[ᐃⲆ].info.ΔⵠᐃᐃⲆⲆⵠⵠⵠ = ⵠΔΔⵠᐃⵠΔ
			}

			function ᐃⲆⲆΔⲆᐃⲆ() {
				var ⵠΔⵠ = ⵠΔΔⵠᐃⵠΔ[ⵠᐃⵠᐃⲆᐃᐃ];
				ᐃᐃΔΔ.ΔᐃΔⲆΔⵠⲆ = ⵠᐃΔᐃⲆ(ⵠΔⵠ.name, ⵠ[43], ⵠ[290], 30, 350, undefined, ⵠΔᐃΔⲆ, ⲆⵠΔᐃⲆ);
				ᐃᐃⲆⵠⲆ !== ⵠΔⵠ.level ? ᐃᐃΔΔ.ᐃⲆΔΔΔⵠⵠ = ⵠᐃΔᐃⲆ("Level " + ⵠΔⵠ.level, ⵠ[43], ⵠ[290], 30, 250, undefined, 10, 8) : ᐃᐃΔΔ.ᐃⲆΔΔΔⵠⵠ = ⵠᐃΔᐃⲆ("by " + ⵠΔⵠ.ΔⵠΔ, ⵠ[43], ⵠ[290], 30, 250, ᐃⲆⵠⲆⵠ, 10, ⲆΔΔΔᐃ)
			}

			function ᐃΔᐃⲆᐃΔⵠ() {
				for (var ᐃⲆ = ⲆⲆᐃᐃᐃⲆΔ, ΔΔΔ = ⵠⲆΔΔⲆ * ⵠΔᐃⲆ; ⲆⵠΔΔⵠⵠⲆ > ᐃⲆ && ΔΔΔ < ⵠΔΔⵠᐃⵠΔ.length; ᐃⲆ++, ΔΔΔ++) {
					if (ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ === ⵠΔΔⵠᐃⵠΔ[ΔΔΔ].ⵠΔⲆ && 0 === ⵠΔΔⲆ[ΔΔΔ]) {
						Ⲇⵠᐃ.buttons[ᐃⲆ].info.ⲆⲆΔⲆⲆᐃᐃ = -ⵠⵠⲆ;
						Ⲇⵠᐃ.buttons[ᐃⲆ].info.active = ᐃⲆᐃᐃ;
						continue
					}
					Ⲇⵠᐃ.buttons[ᐃⲆ].info.ⲆⲆΔⲆⲆᐃᐃ = ΔΔΔ;
					for (var ΔᐃⲆᐃ = ΔⲆᐃⲆ; ⵠΔᐃⲆ > ΔᐃⲆᐃ; ΔᐃⲆᐃ++) {
						Ⲇⵠᐃ.buttons[ᐃⲆ].info.ⵠⵠ[ΔᐃⲆᐃ] = ᐃⵠⵠΔⵠΔᐃ[ⵠΔΔⵠᐃⵠΔ[ΔΔΔ].ⵠΔⲆ][ΔᐃⲆᐃ];
						Ⲇⵠᐃ.buttons[ᐃⲆ].info.active = ⲆΔΔⲆ;
						Ⲇⵠᐃ.buttons[ᐃⲆ].info.ⲆΔΔΔΔᐃⲆ = ⵠΔΔⲆ[ΔΔΔ]
					}
				}
				for (; ⲆⵠΔΔⵠⵠⲆ > ᐃⲆ; ᐃⲆ++) {
					Ⲇⵠᐃ.buttons[ᐃⲆ].info.ⲆⲆΔⲆⲆᐃᐃ = -ᐃΔⲆⵠ;
					Ⲇⵠᐃ.buttons[ᐃⲆ].info.active = ᐃⲆᐃᐃ
				}
				ᐃⲆⲆΔⲆᐃⲆ()
			}

			function ⵠΔⲆΔᐃᐃⲆⵠⵠ() {
				ⵠⲆΔΔⲆ * ΔⵠⵠΔ + 9 < ⵠΔΔⵠᐃⵠΔ.length && ⵠⲆΔΔⲆ++;
				ΔⵠⲆΔΔᐃⵠ.ᐃΔᐃⲆᐃΔⵠ()
			}

			function ⵠⲆⵠΔᐃᐃΔᐃⲆ() {
				if (ⵠᐃⵠᐃⲆᐃᐃ === this.ⲆⲆΔⲆⲆᐃᐃ || this.ⲆⲆΔⲆⲆᐃᐃ === -ΔΔⲆΔ) return;
				if (ΔᐃⲆΔ < this.ⲆΔΔΔΔᐃⲆ) {
					ⲆⲆᐃᐃᐃⲆΔ === ΔⲆΔⲆⲆᐃᐃ ? ΔᐃΔᐃⲆⵠⲆ(ΔⵠⲆⵠᐃⲆΔ, ᐃⲆᐃᐃ, ⵠ[402]) : ΔᐃΔᐃⲆⵠⲆ(ΔⲆᐃⲆⵠⲆᐃ, ᐃⲆᐃᐃ, ⵠ[402])
				} else {
					if (ⲆⲆᐃᐃᐃⲆΔ === ΔⲆΔⲆⲆᐃᐃ) ΔᐃΔᐃⲆⵠⲆ(ΔⵠⲆⵠᐃⲆΔ, ⲆΔΔⲆ, ⵠ[489]);
					else ΔᐃΔᐃⲆⵠⲆ(ΔⲆᐃⲆⵠⲆᐃ, ⲆΔΔⲆ, ⵠ[489])
				}
				ⵠᐃⵠᐃⲆᐃᐃ = this.ⲆⲆΔⲆⲆᐃᐃ;
				ⵠⵠⵠⵠⲆΔⵠⵠⲆ(this.ⲆⲆΔⲆⲆᐃᐃ);
				ᐃⲆⲆΔⲆᐃⲆ()
			}

			function ᐃΔᐃⵠΔΔᐃΔᐃ() {
				ⵠⲆΔΔⲆ > ⲆⵠⲆ && ⵠⲆΔΔⲆ--;
				ΔⵠⲆΔΔᐃⵠ.ᐃΔᐃⲆᐃΔⵠ()
			}
			this.ᐃΔᐃⲆᐃΔⵠ = ᐃΔᐃⲆᐃΔⵠ;
			Ⲇⵠᐃ.buttons[ⲆⵠΔΔⵠⵠⲆ].info.callback = ᐃΔᐃⵠΔΔᐃΔᐃ;
			Ⲇⵠᐃ.buttons[ⲆⵠΔΔⵠⵠⲆ + ΔΔⵠΔⵠ].info.callback = ⵠΔⲆΔᐃᐃⲆⵠⵠ
		}
		this.ΔⲆⵠⵠⲆⵠᐃⵠⵠ = false;
		this.ΔⲆⵠⲆΔ = ⲆΔΔᐃ.get(ⵠ[431]) ? ⲆΔΔᐃ.get(ⵠ[431]) : "high";
		"high" === this.ΔⲆⵠⲆΔ ? (document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[242]).style.backgroundColor = ⵠ[309], document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[380]).style.backgroundColor = ⵠ[110], this.ΔⲆⵠⲆΔ = ᐃΔⲆⵠ) : (document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[380]).style.backgroundColor = ⵠ[309], document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[242]).style.backgroundColor = ⵠ[110], this.ΔⲆⵠⲆΔ = ᐃⵠΔ);
		this.ΔⲆΔΔⵠᐃΔΔΔ = function() {
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[242]).style.backgroundColor = ⵠ[309];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[380]).style.backgroundColor = ⵠ[110];
			ⲆΔΔᐃ.set(ⵠ[431], "high", {
				expires: 30
			});
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529]).value = ΔΔᐃⵠ;
			ⵠΔᐃⵠ.ΔⲆΔⲆⵠⲆⲆ();
			ᐃᐃΔΔ.ΔⲆⵠⲆΔ = 1
		};
		this.ᐃⵠᐃⵠΔᐃᐃⵠᐃ = function() {
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[242]).style.backgroundColor = ⵠ[110];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[380]).style.backgroundColor = ⵠ[309];
			ⲆΔΔᐃ.set(ⵠ[431], "low", {
				expires: 30
			});
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529]).value = .5 / (devicePixelRatio / ᐃΔᐃΔⵠΔᐃ);
			ⵠΔᐃⵠ.ΔⲆΔⲆⵠⲆⲆ();
			ᐃᐃΔΔ.ΔⲆⵠⲆΔ = ⲆⵠⲆ
		};
		if (ΔΔⵠΔΔ === ⲆΔΔᐃ.get(ⵠ[36]) && ⵠᐃⲆⵠᐃ === "FR") {
			ⵠΔⵠᐃᐃ.ᐃⵠΔⵠⵠΔⲆ();
			this.mapping = "azerty"
		} else this.mapping = ⲆΔΔᐃ.get(ⵠ[36]) ? ⲆΔΔᐃ.get(ⵠ[36]) : "qwerty";
		"azerty" == this.mapping ? (ⵠΔⵠᐃᐃ.ᐃⵠΔⵠⵠΔⲆ(), document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[90]).style.backgroundColor = ⵠ[309], document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[426]).style.backgroundColor = ⵠ[110]) : (document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[426]).style.backgroundColor = ⵠ[309], document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[90]).style.backgroundColor = ⵠ[110]);
		this.ᐃⵠΔⵠⵠΔⲆ = function() {
			ⵠΔⵠᐃᐃ.ᐃⵠΔⵠⵠΔⲆ();
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[90]).style.backgroundColor = ⵠ[309];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[426]).style.backgroundColor = ⵠ[110];
			ⲆΔΔᐃ.set(ⵠ[36], "azerty", {
				expires: 30
			})
		};
		this.ΔΔΔⵠⵠᐃⵠ = function() {
			ⵠΔⵠᐃᐃ.ΔΔΔⵠⵠᐃⵠ();
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[90]).style.backgroundColor = ⵠ[110];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[426]).style.backgroundColor = ⵠ[309];
			ⲆΔΔᐃ.set(ⵠ[36], "qwerty", {
				expires: 30
			})
		};
		this.ᐃᐃΔΔᐃⵠΔ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("all_rights_reserved"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("all_rights_reserved").style,
			translate: {
				y: 0,
				x: 0
			},
			"ⵠᐃⵠ": function() {
				this.style.left = this.translate.x + ⵠ[454];
				this.style.top = Math.floor(this.translate.y) + ⵠ[454]
			}
		};

		function ᐃⵠΔⵠᐃⲆΔ() {
			var ΔᐃⵠᐃᐃⲆΔ = Number(ⲆΔΔᐃ.get("starve_crate"));
			var ⲆΔⲆᐃᐃᐃᐃ = Number(ⲆΔΔᐃ.get("starve_dead"));
			var ⵠᐃΔᐃⵠⲆᐃ = Number(ⲆΔΔᐃ.get("starve_book"));
			var ΔᐃⵠΔⵠⵠᐃ = Number(ⲆΔΔᐃ.get("starve_bag"));
			var Ⲇᐃᐃᐃᐃᐃⵠ = Number(ⲆΔΔᐃ.get("starve_skin"));
			var ᐃⵠᐃᐃⲆⵠᐃ = Number(ⲆΔΔᐃ.get("starve_accessory"));
			Ⲇⵠᐃ.ᐃᐃᐃΔ = Ⲇᐃᐃᐃᐃᐃⵠ ? Ⲇᐃᐃᐃᐃᐃⵠ : 0;
			Ⲇⵠᐃ.ⲆΔⵠⲆⵠ = ⵠᐃΔᐃⵠⲆᐃ ? ⵠᐃΔᐃⵠⲆᐃ : 0;
			Ⲇⵠᐃ.ΔᐃⲆⲆⲆ = ΔᐃⵠᐃᐃⲆΔ ? ΔᐃⵠᐃᐃⲆΔ : 1;
			Ⲇⵠᐃ.ᐃᐃᐃⲆⵠ = ᐃⵠᐃᐃⲆⵠᐃ ? ᐃⵠᐃᐃⲆⵠᐃ : 0;
			Ⲇⵠᐃ.ΔⵠⵠⵠⲆ = ΔᐃⵠΔⵠⵠᐃ ? ΔᐃⵠΔⵠⵠᐃ : 0;
			Ⲇⵠᐃ.ⲆⵠᐃΔⵠ = ⲆΔⲆᐃᐃᐃᐃ ? ⲆΔⲆᐃᐃᐃᐃ : 0
		}
		ᐃⵠΔⵠᐃⲆΔ();
		this.unlock = {};
		this.unlock.ᐃᐃᐃΔ = [];
		this.unlock.ΔⵠⵠⵠⲆ = [];
		this.unlock.ⲆΔⵠⲆⵠ = [];
		this.unlock.ΔᐃⲆⲆⲆ = [];
		this.unlock.ⲆⵠᐃΔⵠ = [];
		this.unlock.ᐃᐃᐃⲆⵠ = [];
		this.ⲆⵠᐃΔᐃᐃΔ = 0;

		function ⲆΔΔΔⵠⵠᐃ() {
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ;
			for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < ΔΔᐃΔᐃ.length; ᐃⲆ++) {
				ⵠⲆᐃ.ΔᐃΔᐃΔ === ΔΔᐃΔᐃ[ᐃⲆ].ⵠΔⲆ ? Ⲇⵠᐃ.unlock.ᐃᐃᐃΔ[ᐃⲆ] = 1 : Ⲇⵠᐃ.unlock.ᐃᐃᐃΔ[ᐃⲆ] = ΔⲆᐃⲆ
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ;
			for (var ᐃⲆ = ⲆΔᐃ; ΔΔᐃΔᐃ.length > ᐃⲆ; ᐃⲆ++) {
				if (ⵠⲆᐃ.ΔᐃΔᐃΔ === ΔΔᐃΔᐃ[ᐃⲆ].ⵠΔⲆ) Ⲇⵠᐃ.unlock.ᐃᐃᐃⲆⵠ[ᐃⲆ] = 1;
				else Ⲇⵠᐃ.unlock.ᐃᐃᐃⲆⵠ[ᐃⲆ] = 0
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⵠΔΔⵠ;
			for (var ᐃⲆ = ᐃΔⵠⵠ; ᐃⲆ < ΔΔᐃΔᐃ.length; ᐃⲆ++) {
				ΔΔᐃΔᐃ[ᐃⲆ].ⵠΔⲆ === ⵠⲆᐃ.ΔᐃΔᐃΔ ? Ⲇⵠᐃ.unlock.ΔⵠⵠⵠⲆ[ᐃⲆ] = 1 : Ⲇⵠᐃ.unlock.ΔⵠⵠⵠⲆ[ᐃⲆ] = ᐃΔⵠⵠ
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ;
			for (var ᐃⲆ = ΔΔᐃ; ΔΔᐃΔᐃ.length > ᐃⲆ; ᐃⲆ++) {
				if (ΔΔᐃΔᐃ[ᐃⲆ].ⵠΔⲆ === ⵠⲆᐃ.ΔᐃΔᐃΔ) Ⲇⵠᐃ.unlock.ⲆΔⵠⲆⵠ[ᐃⲆ] = ΔΔᐃⵠ;
				else Ⲇⵠᐃ.unlock.ⲆΔⵠⲆⵠ[ᐃⲆ] = 0
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ;
			for (var ᐃⲆ = ⵠⵠⲆⲆ; ΔΔᐃΔᐃ.length > ᐃⲆ; ᐃⲆ++) {
				if (ⵠⲆᐃ.ΔᐃΔᐃΔ === ΔΔᐃΔᐃ[ᐃⲆ].ⵠΔⲆ) {
					Ⲇⵠᐃ.unlock.ΔᐃⲆⲆⲆ[ᐃⲆ] = ΔΔⵠΔⵠ;
					Ⲇⵠᐃ.unlock.ⲆⵠᐃΔⵠ[ᐃⲆ] = 1
				} else {
					Ⲇⵠᐃ.unlock.ΔᐃⲆⲆⲆ[ᐃⲆ] = 0;
					Ⲇⵠᐃ.unlock.ⲆⵠᐃΔⵠ[ᐃⲆ] = ⲆΔᐃ
				}
			}
		}
		this.ⲆΔΔΔⵠⵠᐃ = ⲆΔΔΔⵠⵠᐃ;
		ⲆΔΔΔⵠⵠᐃ();
		this.ⲆΔⲆᐃᐃ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("trevda"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("trevda").style,
			translate: {
				y: Ⲇᐃⵠᐃ,
				x: ΔΔᐃ
			},
			"ⵠᐃⵠ": function() {
				this.style.left = this.translate.x + ⵠ[454];
				this.style.top = Math.floor(this.translate.y) + ⵠ[454]
			}
		};
		var ᐃᐃᐃΔⵠ = 0;
		var ᐃⲆΔᐃᐃ = 30;
		var ⵠⵠⲆᐃⲆⵠΔ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ᐃᐃᐃΔⵠ++;
			if (ᐃⲆΔᐃᐃ == ᐃᐃᐃΔⵠ) {
				Ⲇⵠᐃ.ⵠⲆΔᐃᐃΔᐃ();
				Ⲇⵠᐃ.ⵠΔᐃⵠΔΔⵠ = true;
				Ⲇⵠᐃ.ⵠᐃⵠ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ⵠⵠⲆᐃⲆⵠΔ, 0)
		};
		this.ⲆⲆᐃΔᐃ = function(ᐃⲆⲆⵠⵠ) {
			ⵠᐃᐃᐃΔ = ᐃⲆⲆⵠⵠ;
			Ⲇⵠᐃ.ᐃⵠΔΔᐃⲆᐃ();
			Ⲇⵠᐃ.ⵠΔᐃⵠΔΔⵠ = ⲆⵠⲆ;
			ⲆΔΔⲆⲆ = -ᐃⲆⵠΔ;
			ᐃᐃΔⵠⲆ()
		};
		var ⵠᐃᐃᐃΔ;
		var ⲆΔΔⲆⲆ = -ᐃᐃΔᐃ;
		var ᐃΔⲆΔΔ = 30;
		var ᐃᐃΔⵠⲆ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ⲆΔΔⲆⲆ++;
			if (ⲆΔΔⲆⲆ == ᐃΔⲆΔΔ) {
				ⲆΔΔᐃ.set("starve_nickname", Ⲇⵠᐃ.ᐃΔⲆᐃⵠ.input.value, {
					expires: 30
				});
				Ⲇⵠᐃ.ᐃΔⲆᐃⵠ.style.display = ⵠ[402];
				Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.style.display = ⵠ[402];
				Ⲇⵠᐃ.ΔᐃⵠⵠⲆⵠⲆ.style.display = ⵠ[402];
				Ⲇⵠᐃ.ᐃᐃΔΔᐃⵠΔ.style.display = ⵠ[402];
				Ⲇⵠᐃ.ⲆΔⲆᐃᐃ.style.display = ⵠ[402];
				Ⲇⵠᐃ.stop();
				ⵠᐃᐃᐃΔ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃᐃΔⵠⲆ, 0)
		};
		this.ⲆΔΔⲆᐃ = ΔᐃΔᐃᐃ;
		this.stop = function() {
			this.ⲆΔΔⲆᐃ = false
		};
		this.ᐃΔⲆⲆΔ = function() {
			check_ads();
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[166]).style.backgroundColor = Δ.ⲆⵠⵠΔⲆ[ΔⵠⲆΔⲆ.time];
			Ⲇⵠᐃ.ᐃΔⲆᐃⵠ.style.display = ⵠ[489];
			Ⲇⵠᐃ.ⵠⲆᐃᐃΔ.style.display = ⵠ[489];
			Ⲇⵠᐃ.ΔᐃⵠⵠⲆⵠⲆ.style.display = ⵠ[489];
			Ⲇⵠᐃ.ᐃᐃΔΔᐃⵠΔ.style.display = ⵠ[489];
			Ⲇⵠᐃ.ⲆΔⲆᐃᐃ.style.display = ⵠ[489];
			Ⲇⵠᐃ.waiting = ⵠⲆⵠΔⵠ;
			Ⲇⵠᐃ.ⲆΔΔⲆᐃ = true;
			ⲆΔΔⲆⲆ = -1;
			ᐃᐃᐃΔⵠ = ⵠᐃⲆᐃ;
			ⵠⵠⲆᐃⲆⵠΔ()
		};
		this.ΔᐃⵠⲆᐃⵠΔ = function(ⲆᐃⲆᐃⵠ, ΔᐃⵠⲆⲆ) {
			ΔᐃⵠⲆⲆ = 0 > ΔᐃⵠⲆⲆ ? -ΔᐃⵠⲆⲆ : ΔᐃⵠⲆⲆ;
			if (ⵠⲆΔᐃ === (ⲆᐃⲆᐃⵠ.position & ⵠⲆΔᐃ)) {
				if ((ⲆᐃⲆᐃⵠ.position & ⵠⲆⵠΔ) === ⵠⲆⵠΔ) ⲆᐃⲆᐃⵠ.translate.x = ᐃΔΔᐃ + ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ - ΔᐃⵠⲆⲆ;
				else(ⲆᐃⲆᐃⵠ.position & ⲆᐃᐃΔⲆ) === ⲆᐃᐃΔⲆ ? ⲆᐃⲆᐃⵠ.translate.x = ᐃΔΔᐃ + ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ + ΔᐃⵠⲆⲆ : ⲆᐃⲆᐃⵠ.translate.x = ᐃΔΔᐃ + ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ
			} else if (ⵠⲆⵠΔ === (ⲆᐃⲆᐃⵠ.position & ⵠⲆⵠΔ)) ⲆᐃⲆᐃⵠ.translate.x = ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ - ΔᐃⵠⲆⲆ;
			else if ((ⲆᐃⲆᐃⵠ.position & ⲆᐃᐃΔⲆ) === ⲆᐃᐃΔⲆ) ⲆᐃⲆᐃⵠ.translate.x = Ⲇⵠⵠⵠ - ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ + ΔᐃⵠⲆⲆ;
			else ⲆᐃⲆᐃⵠ.translate.x = ⲆᐃⲆᐃⵠ.translate.ⲆⵠⲆⲆᐃ;
			if ((ⲆᐃⲆᐃⵠ.position & ⲆⵠᐃⵠΔᐃⵠ) === ⲆⵠᐃⵠΔᐃⵠ) {
				if (Ⲇᐃᐃⵠ === (ⲆᐃⲆᐃⵠ.position & Ⲇᐃᐃⵠ)) ⲆᐃⲆᐃⵠ.translate.y = ⲆⲆΔⲆ + ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ - ΔᐃⵠⲆⲆ;
				else(ⲆᐃⲆᐃⵠ.position & ⲆᐃᐃⵠⲆᐃⵠ) === ⲆᐃᐃⵠⲆᐃⵠ ? ⲆᐃⲆᐃⵠ.translate.y = ⲆⲆΔⲆ + ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ + ΔᐃⵠⲆⲆ : ⲆᐃⲆᐃⵠ.translate.y = ⲆⲆΔⲆ + ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ
			} else if (Ⲇᐃᐃⵠ === (ⲆᐃⲆᐃⵠ.position & Ⲇᐃᐃⵠ)) ⲆᐃⲆᐃⵠ.translate.y = ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ - ΔᐃⵠⲆⲆ;
			else if (ⲆᐃᐃⵠⲆᐃⵠ === (ⲆᐃⲆᐃⵠ.position & ⲆᐃᐃⵠⲆᐃⵠ)) ⲆᐃⲆᐃⵠ.translate.y = ᐃΔⲆᐃ + ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ + ΔᐃⵠⲆⲆ;
			else ⲆᐃⲆᐃⵠ.translate.y = ⲆᐃⲆᐃⵠ.translate.ΔⲆΔΔⲆ;
			if (ΔΔⵠΔΔ !== ⲆᐃⲆᐃⵠ.style) {
				ⲆᐃⲆᐃⵠ.style.left = Math.floor(ⲆᐃⲆᐃⵠ.translate.x) + ⵠ[454];
				ⲆᐃⲆᐃⵠ.style.top = Math.floor(ⲆᐃⲆᐃⵠ.translate.y) + ⵠ[454]
			}
		};
		this.ⵠᐃⵠ = function() {
			var ΔᐃⵠⲆⲆ = 0;
			if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ || ⲆΔΔⲆⲆ != -ᐃⲆⵠΔ) {
				if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ) var ΔᐃⵠⲆⲆ = 1500 / (ᐃᐃᐃΔⵠ + ᐃᐃΔᐃ) - 50;
				if (-1 != ⲆΔΔⲆⲆ) var ΔᐃⵠⲆⲆ = -(1750 / (ᐃΔⲆΔΔ - ⲆΔΔⲆⲆ + 1) - 48)
			}
			for (var ᐃⲆ = 0; ᐃⲆ < this.ⵠΔⲆᐃ.length; ᐃⲆ++) this.ΔᐃⵠⲆᐃⵠΔ(this.ⵠΔⲆᐃ[ᐃⲆ], ΔᐃⵠⲆⲆ);
			for (var ᐃⲆ = 0; ᐃⲆ < this.buttons.length; ᐃⲆ++) this.ΔᐃⵠⲆᐃⵠΔ(this.buttons[ᐃⲆ].info, ΔᐃⵠⲆⲆ);
			for (var ᐃⲆ = 0; this.ⵠⵠⵠⲆᐃ.length > ᐃⲆ; ᐃⲆ++) this.ΔᐃⵠⲆᐃⵠΔ(this.ⵠⵠⵠⲆᐃ[ᐃⲆ], ΔᐃⵠⲆⲆ);
			this.ΔΔⲆⲆⲆⵠⵠ.translate.x = (Ⲇⵠⵠⵠ - this.ΔΔⲆⲆⲆⵠⵠ.ⵠⵠ.width) / 2;
			this.ΔΔⲆⲆⲆⵠⵠ.translate.y = ⵠᐃⲆᐃ;
			this.ΔᐃⵠⵠⲆⵠⲆ.translate.x = Ⲇⵠⵠⵠ - 450;
			this.ΔᐃⵠⵠⲆⵠⲆ.translate.y = ᐃΔⲆᐃ - 40;
			this.ᐃᐃΔΔᐃⵠΔ.translate.x = Ⲇⵠⵠⵠ - 340;
			this.ᐃᐃΔΔᐃⵠΔ.translate.y = ᐃΔⲆᐃ - 25;
			this.ⲆΔⲆᐃᐃ.translate.x = Ⲇⵠⵠⵠ - 320;
			this.ⲆΔⲆᐃᐃ.translate.y = 80;
			if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ || ⲆΔΔⲆⲆ != -ⲆᐃⲆⲆ) {
				var ᐃⲆⲆᐃ = 0;
				if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ) {
					var ᐃⲆⲆᐃ = 1500 / (ᐃᐃᐃΔⵠ + 1) - 50
				}
				if (ⲆΔΔⲆⲆ != -1) {
					var ᐃⲆⲆᐃ = -(1750 / (ᐃΔⲆΔΔ - ⲆΔΔⲆⲆ + 1) - 48)
				}
				this.ΔΔⲆⲆⲆⵠⵠ.translate.y -= ᐃⲆⲆᐃ > ΔΔⵠᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
				this.ΔᐃⵠⵠⲆⵠⲆ.translate.y -= ᐃⲆⲆᐃ < 0 ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
				this.ᐃᐃΔΔᐃⵠΔ.translate.y -= 0 > ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ
			}
			this.ΔᐃⵠⵠⲆⵠⲆ.ⵠᐃⵠ();
			this.ᐃᐃΔΔᐃⵠΔ.ⵠᐃⵠ();
			this.ⲆΔⲆᐃᐃ.ⵠᐃⵠ()
		};
		this.ⲆᐃⲆⲆⲆⲆᐃ = function(ⵠΔⵠ) {
			var ᐃΔΔⵠⵠ = document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57]);
			var ᐃᐃΔⲆᐃΔⲆ = ᐃΔΔⵠⵠ.getContext(ⵠ[140]);
			ᐃΔΔⵠⵠ.width = 342;
			ᐃΔΔⵠⵠ.height = 342;
			var ⵠⵠⲆⵠⲆ = -Math.PI / 2;
			for (var ᐃⲆ = 0; ⵠΔⵠ.length > ᐃⲆ; ᐃⲆ++) {
				var ΔᐃΔΔⲆⵠⲆⵠⵠ = ⵠΔⵠ[ᐃⲆ][ᐃⵠΔ];
				var ⲆᐃᐃΔᐃⲆΔ = Math.PI * ⵠΔⵠ[ᐃⲆ][ΔΔⵠΔⵠ] / 180;
				ᐃᐃΔⲆᐃΔⲆ.beginPath();
				ᐃᐃΔⲆᐃΔⲆ.arc(171, 171, 170, ⵠⵠⲆⵠⲆ, ⵠⵠⲆⵠⲆ + ⲆᐃᐃΔᐃⲆΔ, ⲆΔⲆΔⵠ);
				ᐃᐃΔⲆᐃΔⲆ.lineTo(171, 171);
				ᐃᐃΔⲆᐃΔⲆ.fillStyle = ΔᐃΔΔⲆⵠⲆⵠⵠ;
				ᐃᐃΔⲆᐃΔⲆ.fill();
				ⵠⵠⲆⵠⲆ += ⲆᐃᐃΔᐃⲆΔ
			}
			return ᐃΔΔⵠⵠ
		};
		this.ΔⲆΔᐃᐃᐃᐃᐃᐃ = function() {
			this.ⲆΔᐃᐃⵠⵠⵠ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]).value;
			if (this.ⲆⲆᐃⲆⵠΔⲆ !== this.ⲆΔᐃᐃⵠⵠⵠ) {
				this.ⲆⲆᐃⲆⵠΔⲆ = this.ⲆΔᐃᐃⵠⵠⵠ;
				this.ΔᐃⲆⲆⵠΔⲆ = ⵠᐃΔᐃⲆ(this.ⲆΔᐃᐃⵠⵠⵠ, ⵠ[43], ⵠ[290], 45, 550)
			}
		};
		this.ⲆⵠᐃⲆ = function() {
			ⵠⵠⲆᐃΔⵠⲆ();
			ᐃᐃΔΔ.ⵠᐃᐃΔⲆΔⵠ = Ⲇᐃⵠ.ᐃᐃⵠᐃΔⵠᐃ(ᐃᐃΔΔ.ⵠᐃᐃΔⲆΔⵠ, ᐃᐃΔΔ.ⵠᐃΔⵠᐃⲆᐃ, .03);
			this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.x = this.ⵠΔⲆᐃ[0].translate.x + -72 + ᐃᐃΔΔ.ⵠᐃᐃΔⲆΔⵠ * 165;
			this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.ⲆⵠⲆⲆᐃ = this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.x;
			this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.y = this.ⵠΔⲆᐃ[0].translate.y + 30;
			this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.ΔⲆΔΔⲆ = this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ].translate.y;
			for (var ᐃⲆ = ᐃⵠΔⲆ; this.ⵠΔⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
				if (this.ⵠΔⲆᐃ[ᐃⲆ].active === ⲆΔΔⲆ) this.ⵠΔⲆᐃ[ᐃⲆ].ⲆⵠᐃⲆ(Ⲇ)
			}
			var ᐃΔⵠᐃⵠΔⵠ = this.ⲆⲆΔⲆΔ - Date.now();
			if (ᐃΔⵠᐃⵠΔⵠ > ⵠⵠᐃⵠ) {
				var ΔⵠΔᐃ = Math.floor(ᐃΔⵠᐃⵠΔⵠ / 6e4);
				var ⲆⲆⲆⲆᐃ = Math.floor(ΔⵠΔᐃ / 60);
				ΔⵠΔᐃ %= 60;
				this.ⵠᐃΔⲆΔⲆⵠ !== ΔⵠΔᐃ && (this.ⵠᐃΔⲆΔⲆⵠ = ΔⵠΔᐃ, ΔⵠΔᐃ = ΔⵠΔᐃ < ᐃⵠⲆᐃⵠ ? "0" + ΔⵠΔᐃ : "" + ΔⵠΔᐃ, Ⲇⵠᐃ.ᐃⲆⲆⵠΔⵠΔ = ⵠᐃΔᐃⲆ(ΔⵠΔᐃ, ⵠ[43], ⵠ[290], 80, 200));
				if (this.ⵠΔΔⲆⵠᐃⵠ !== ⲆⲆⲆⲆᐃ) {
					this.ⵠΔΔⲆⵠᐃⵠ = ⲆⲆⲆⲆᐃ;
					ⲆⲆⲆⲆᐃ = ⲆⲆⲆⲆᐃ < 10 ? "0" + ⲆⲆⲆⲆᐃ : "" + ⲆⲆⲆⲆᐃ;
					Ⲇⵠᐃ.ΔⵠᐃᐃΔⲆⵠ = ⵠᐃΔᐃⲆ(ⲆⲆⲆⲆᐃ, ⵠ[43], ⵠ[290], 80, 200)
				}
				var ⲆᐃⵠᐃⲆ = this.ⵠΔⲆᐃ[ΔⵠⵠΔᐃΔⵠ];
				ⲆᐃⵠᐃⲆ.ⲆⵠᐃⲆ(Ⲇ);
				var ⵠⵠ = this.ΔⵠᐃᐃΔⲆⵠ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠᐃⲆ.translate.x - ⵠⵠ.width / ᐃⵠⲆⲆⲆ + 182, ⲆᐃⵠᐃⲆ.translate.y - ⵠⵠ.height / ⲆⵠⲆΔⲆ + 40, ⵠⵠ.width / 2, ⵠⵠ.height / 2);
				var ⵠⵠ = this.ᐃⲆⲆⵠΔⵠΔ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠᐃⲆ.translate.x - ⵠⵠ.width / Ⲇⵠⵠᐃᐃ + 251, ⲆᐃⵠᐃⲆ.translate.y - ⵠⵠ.height / 4 + 40, ⵠⵠ.width / ⵠᐃᐃⵠ, ⵠⵠ.height / ᐃΔⲆⲆⵠ)
			}
			var ᐃΔⵠᐃⵠΔⵠ = this.ᐃΔᐃⵠⵠΔΔ - Date.now();
			if (0 < ᐃΔⵠᐃⵠΔⵠ) {
				var ΔⵠΔᐃ = Math.floor(ᐃΔⵠᐃⵠΔⵠ / 6e4);
				var ⲆⲆⲆⲆᐃ = Math.floor(ΔⵠΔᐃ / 60);
				var ⲆⲆΔ = Math.floor(ⲆⲆⲆⲆᐃ / 24);
				ΔⵠΔᐃ %= 60;
				ⲆⲆⲆⲆᐃ %= 24;
				ΔⵠΔᐃ !== this.ΔᐃᐃᐃΔⵠⲆ && (this.ΔᐃᐃᐃΔⵠⲆ = ΔⵠΔᐃ, ΔⵠΔᐃ = 10 > ΔⵠΔᐃ ? "0" + ΔⵠΔᐃ : "" + ΔⵠΔᐃ, Ⲇⵠᐃ.ⲆⵠᐃⵠⲆⲆⲆ = ⵠᐃΔᐃⲆ(ΔⵠΔᐃ, ⵠ[43], ⵠ[290], 80, 200));
				ⲆⲆⲆⲆᐃ !== this.ⵠᐃⲆⵠΔⵠᐃ && (this.ⵠᐃⲆⵠΔⵠᐃ = ⲆⲆⲆⲆᐃ, ⲆⲆⲆⲆᐃ = ᐃᐃⵠⵠⵠ > ⲆⲆⲆⲆᐃ ? "0" + ⲆⲆⲆⲆᐃ : "" + ⲆⲆⲆⲆᐃ, Ⲇⵠᐃ.ⵠⵠⵠⲆⵠΔᐃ = ⵠᐃΔᐃⲆ(ⲆⲆⲆⲆᐃ, ⵠ[43], ⵠ[290], 80, 200));
				if (this.ⵠⵠⵠᐃΔᐃⵠ !== ⲆⲆΔ) {
					this.ⵠⵠⵠᐃΔᐃⵠ = ⲆⲆΔ;
					ⲆⲆΔ = ⲆⲆΔ < ⵠΔᐃΔⲆ ? "0" + ⲆⲆΔ : "" + ⲆⲆΔ;
					Ⲇⵠᐃ.ⲆᐃⲆΔⲆΔᐃ = ⵠᐃΔᐃⲆ(ⲆⲆΔ, ⵠ[43], ⵠ[290], 80, 200)
				}
				var ⲆᐃⵠᐃⲆ = this.ⵠΔⲆᐃ[ΔᐃΔⵠᐃⵠᐃ];
				ⲆᐃⵠᐃⲆ.ⲆⵠᐃⲆ(Ⲇ);
				var ⵠⵠ = this.ⲆᐃⲆΔⲆΔᐃ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠᐃⲆ.translate.x - ⵠⵠ.width / ⲆⵠⲆΔⲆ + 113, ⲆᐃⵠᐃⲆ.translate.y - ⵠⵠ.height / 4 + 40, ⵠⵠ.width / 2, ⵠⵠ.height / ᐃΔⵠᐃ);
				var ⵠⵠ = this.ⵠⵠⵠⲆⵠΔᐃ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠᐃⲆ.translate.x - ⵠⵠ.width / ⵠⲆᐃᐃ + 182, ⲆᐃⵠᐃⲆ.translate.y - ⵠⵠ.height / ᐃΔⲆΔ + 40, ⵠⵠ.width / ᐃⲆⲆΔ, ⵠⵠ.height / 2);
				var ⵠⵠ = this.ⲆⵠᐃⵠⲆⲆⲆ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ⲆᐃⵠᐃⲆ.translate.x - ⵠⵠ.width / ⲆⵠⲆΔⲆ + 251, ⲆᐃⵠᐃⲆ.translate.y - ⵠⵠ.height / 4 + 40, ⵠⵠ.width / 2, ⵠⵠ.height / ⵠᐃⵠΔ)
			}
			if (ⲆⲆⵠⲆᐃ === (this.ᐃⵠⵠᐃᐃ & ⲆⲆⵠⲆᐃ)) this.buttons[ΔⵠⵠⲆᐃⲆᐃ].info.state = ⲆΔⲆⵠ;
			else if (ⲆⲆⲆΔᐃ === (this.ᐃⵠⵠᐃᐃ & ⲆⲆⲆΔᐃ)) this.buttons[ⲆⵠⲆΔⲆᐃⲆ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ⲆᐃⵠⲆᐃ) === ⲆᐃⵠⲆᐃ) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ⵠⵠΔΔΔ === (this.ᐃⵠⵠᐃᐃ & ⵠⵠΔΔΔ)) this.buttons[ⵠΔΔᐃⲆΔᐃ].info.state = ⲆΔⲆⵠ;
			else if (ΔΔΔⵠⵠⲆΔ === (this.ᐃⵠⵠᐃᐃ & ΔΔΔⵠⵠⲆΔ)) this.buttons[ⲆᐃⵠⲆⲆⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ᐃΔᐃΔΔ) === ᐃΔᐃΔΔ) this.buttons[ΔⵠⲆΔᐃΔΔ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ⵠⲆᐃΔΔ) === ⵠⲆᐃΔΔ) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if (ⲆΔⲆⲆΔⲆⲆ === (this.ᐃⵠⵠᐃᐃ & ⲆΔⲆⲆΔⲆⲆ)) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if (ΔΔᐃΔⲆᐃᐃ === (this.ᐃⵠⵠᐃᐃ & ΔΔᐃΔⲆᐃᐃ)) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if (ⲆⲆΔⵠⲆⲆᐃ === (this.ᐃⵠⵠᐃᐃ & ⲆⲆΔⵠⲆⲆᐃ)) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ᐃΔᐃᐃⲆⲆⲆ) === ᐃΔᐃᐃⲆⲆⲆ) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ⵠᐃⲆⵠⵠᐃΔ) === ⵠᐃⲆⵠⵠᐃΔ) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ΔⵠⵠᐃᐃΔᐃ) === ΔⵠⵠᐃᐃΔᐃ) this.buttons[ⲆΔⲆΔⵠΔᐃ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ⲆⵠⲆΔᐃ) === ⲆⵠⲆΔᐃ) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ΔΔΔⵠᐃ === (this.ᐃⵠⵠᐃᐃ & ΔΔΔⵠᐃ)) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ⵠΔᐃᐃΔ === (this.ᐃⵠⵠᐃᐃ & ⵠΔᐃᐃΔ)) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ᐃⵠᐃᐃⵠ === (this.ᐃⵠⵠᐃᐃ & ᐃⵠᐃᐃⵠ)) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ΔΔᐃΔΔ) === ΔΔᐃΔΔ) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ΔΔΔⵠΔ === (this.ᐃⵠⵠᐃᐃ & ΔΔΔⵠΔ)) this.buttons[ⵠΔⵠⵠΔⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ΔΔΔᐃⵠ === (this.ᐃⵠⵠᐃᐃ & ΔΔΔᐃⵠ)) this.buttons[ΔᐃΔΔⵠⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ⲆΔᐃᐃⵠ === (this.ᐃⵠⵠᐃᐃ & ⲆΔᐃᐃⵠ)) this.buttons[ΔᐃΔΔⵠⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if ((this.ᐃⵠⵠᐃᐃ & ᐃΔᐃΔⲆ) === ᐃΔᐃΔⲆ) this.buttons[ΔᐃΔΔⵠⵠⲆ].info.state = ⲆΔⲆⵠ;
			else if (ⵠⲆⵠⲆⲆΔⲆ === (this.ᐃⵠⵠᐃᐃ & ⵠⲆⵠⲆⲆΔⲆ)) this.buttons[ⵠΔΔᐃⲆΔᐃ].info.state = ⲆΔⲆⵠ;
			if (ⲆⲆⲆΔᐃ === (this.ᐃⵠⵠᐃᐃ & ⲆⲆⲆΔᐃ)) {
				if (this.ΔⵠⲆᐃᐃᐃⵠ === this.ⲆⲆⵠⵠΔᐃⵠ) {
					this.ⲆᐃⲆᐃᐃⵠⵠ = this.ΔΔⵠΔⲆⲆⲆ;
					this.buttons[this.ΔΔⵠΔⲆⲆⲆ].info.active = ᐃⲆᐃᐃ;
					this.buttons[this.ᐃⲆᐃΔⲆⲆⵠ].info.active = ᐃⲆᐃᐃ;
					this.buttons[this.ⵠⲆᐃⲆᐃΔⵠ].info.active = ᐃⲆᐃᐃ
				} else {
					this.buttons[this.ΔΔⵠΔⲆⲆⲆ].info.active = ⲆΔΔⲆ;
					this.buttons[this.ᐃⲆᐃΔⲆⲆⵠ].info.active = ⲆΔΔⲆ;
					this.buttons[this.ⵠⲆᐃⲆᐃΔⵠ].info.active = ⲆΔΔⲆ
				}
				if (this.ⲆⲆⲆⵠⲆΔΔ === this.ⲆⲆⵠⵠΔᐃⵠ) this.buttons[this.ⲆⲆⲆⵠⲆΔΔ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⲆⵠⵠΔᐃⵠ === this.ΔᐃⵠⵠⲆΔⲆ) this.buttons[this.ΔᐃⵠⵠⲆΔⲆ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⲆⵠⵠΔᐃⵠ === this.ΔⵠⲆᐃᐃᐃⵠ) this.buttons[this.ΔⵠⲆᐃᐃᐃⵠ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⲆⵠⵠΔᐃⵠ === this.ⲆⵠᐃⵠⲆΔᐃ) this.buttons[this.ⲆⵠᐃⵠⲆΔᐃ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⲆⵠⵠΔᐃⵠ === this.ᐃⲆΔⲆⵠΔᐃ) this.buttons[this.ᐃⲆΔⲆⵠΔᐃ].info.state = ⲆΔⲆⵠ;
				if (this.ⲆᐃⲆᐃᐃⵠⵠ === this.ΔΔⵠΔⲆⲆⲆ) this.buttons[this.ΔΔⵠΔⲆⲆⲆ].info.state = ⲆΔⲆⵠ;
				else if (this.ᐃⲆᐃΔⲆⲆⵠ === this.ⲆᐃⲆᐃᐃⵠⵠ) this.buttons[this.ᐃⲆᐃΔⲆⲆⵠ].info.state = ⲆΔⲆⵠ;
				else if (this.ⵠⲆᐃⲆᐃΔⵠ === this.ⲆᐃⲆᐃᐃⵠⵠ) this.buttons[this.ⵠⲆᐃⲆᐃΔⵠ].info.state = ⲆΔⲆⵠ;
				if (this.ΔⵠⲆⵠᐃᐃⲆ === this.ΔΔΔⲆⵠⲆΔ) this.buttons[this.ΔⵠⲆⵠᐃᐃⲆ].info.state = ⲆΔⲆⵠ;
				else if (this.ΔΔΔⲆⵠⲆΔ === this.ⵠΔᐃΔᐃᐃⵠ) this.buttons[this.ⵠΔᐃΔᐃᐃⵠ].info.state = ⲆΔⲆⵠ;
				else this.ΔΔΔⲆⵠⲆΔ === this.ᐃⵠⲆⵠⵠⲆΔ && (this.buttons[this.ᐃⵠⲆⵠⵠⲆΔ].info.state = ⲆΔⲆⵠ);
				if (this.ⲆⵠⲆⲆⲆΔΔ === this.ⵠᐃᐃⲆᐃⲆⲆ) this.buttons[this.ⲆⵠⲆⲆⲆΔΔ].info.state = ⲆΔⲆⵠ;
				else if (this.ⵠᐃⵠᐃⲆᐃⵠ === this.ⵠᐃᐃⲆᐃⲆⲆ) this.buttons[this.ⵠᐃⵠᐃⲆᐃⵠ].info.state = ⲆΔⲆⵠ;
				else if (this.ⵠⲆⵠⵠᐃΔᐃ === this.ⵠᐃᐃⲆᐃⲆⲆ) this.buttons[this.ⵠⲆⵠⵠᐃΔᐃ].info.state = ⲆΔⲆⵠ;
				else if (this.ⵠᐃᐃⲆᐃⲆⲆ === this.ΔΔᐃΔⵠⵠᐃ) this.buttons[this.ΔΔᐃΔⵠⵠᐃ].info.state = ⲆΔⲆⵠ;
				else if (this.ⵠᐃᐃⲆᐃⲆⲆ === this.ΔΔⵠΔⲆΔⲆ) this.buttons[this.ΔΔⵠΔⲆΔⲆ].info.state = ⲆΔⲆⵠ;
				else this.ⵠΔⲆⲆⲆΔⲆ === this.ⵠᐃᐃⲆᐃⲆⲆ && (this.buttons[this.ⵠΔⲆⲆⲆΔⲆ].info.state = ⲆΔⲆⵠ)
			}
			if ((this.ᐃⵠⵠᐃᐃ & ⵠⵠΔΔΔ) === ⵠⵠΔΔΔ) {
				if (-1 === this.ⲆⵠⵠᐃⲆΔⲆ) this.buttons[ΔΔⲆⲆⲆⵠⲆⲆΔ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⵠⵠᐃⲆΔⲆ === ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ) this.buttons[ⲆⲆᐃⲆΔᐃΔⲆᐃ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⵠⵠᐃⲆΔⲆ === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ) this.buttons[ᐃᐃΔᐃⵠᐃΔⵠⲆ].info.state = ⲆΔⲆⵠ;
				else if (this.ⲆⵠⵠᐃⲆΔⲆ === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ) this.buttons[ⵠⲆⵠᐃΔⲆΔᐃᐃ].info.state = ⲆΔⲆⵠ;
				else if (ⲆⵠΔΔ.ᐃΔⲆⵠⵠ === this.ⲆⵠⵠᐃⲆΔⲆ) this.buttons[ΔⵠⲆⵠΔⲆᐃⵠⲆ].info.state = ⲆΔⲆⵠ;
				if (this.ⵠᐃⵠᐃⵠⲆΔ === ᐃⵠΔ) this.buttons[ⵠᐃⵠⲆᐃΔⵠⲆΔ].info.state = ⲆΔⲆⵠ;
				else if (ΔΔᐃⵠ === this.ⵠᐃⵠᐃⵠⲆΔ) this.buttons[ΔΔⲆᐃⵠⲆⲆᐃΔ].info.state = ⲆΔⲆⵠ;
				else if (ᐃᐃⲆΔ === this.ⵠᐃⵠᐃⵠⲆΔ) this.buttons[ⵠΔΔΔⵠⲆⵠᐃΔ].info.state = ⲆΔⲆⵠ;
				else if (ⲆⵠⵠⲆ === this.ⵠᐃⵠᐃⵠⲆΔ) this.buttons[ᐃᐃΔᐃᐃΔᐃΔᐃ].info.state = ⲆΔⲆⵠ;
				else if (ⵠᐃᐃⲆ === this.ⵠᐃⵠᐃⵠⲆΔ) this.buttons[ⲆⵠᐃΔΔΔΔⲆⵠ].info.state = ⲆΔⲆⵠ;
				else if (5 === this.ⵠᐃⵠᐃⵠⲆΔ) this.buttons[ᐃⵠΔᐃⲆⵠⵠⲆᐃ].info.state = ⲆΔⲆⵠ
			}
			if ((this.ᐃⵠⵠᐃᐃ & ⲆⲆⵠⲆᐃ) === ⲆⲆⵠⲆᐃ && ᐃΔᐃⵠ.ⲆΔⵠⵠΔⵠᐃ === ⵠⵠⲆⲆ) {
				this.buttons[ᐃⵠΔΔⲆ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ) ? this.buttons[ᐃⵠΔΔⲆ].hint = Math.min(1, this.buttons[ᐃⵠΔΔⲆ].hint + 1.5 * ᐃᐃΔⲆ) : this.buttons[ᐃⵠΔΔⲆ].hint = Math.max(0, this.buttons[ᐃⵠΔΔⲆ].hint - ᐃᐃΔⲆ * 1.5);
				if (this.buttons[ᐃⵠⵠΔᐃ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ)) this.buttons[ᐃⵠⵠΔᐃ].hint = Math.min(1, this.buttons[ᐃⵠⵠΔᐃ].hint + 1.5 * ᐃᐃΔⲆ);
				else this.buttons[ᐃⵠⵠΔᐃ].hint = Math.max(0, this.buttons[ᐃⵠⵠΔᐃ].hint - ᐃᐃΔⲆ * 1.5);
				this.buttons[ⵠⲆⵠⲆⵠ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ) ? this.buttons[ⵠⲆⵠⲆⵠ].hint = Math.min(1, this.buttons[ⵠⲆⵠⲆⵠ].hint + ᐃᐃΔⲆ * 1.5) : this.buttons[ⵠⲆⵠⲆⵠ].hint = Math.max(ΔⵠⲆⲆ, this.buttons[ⵠⲆⵠⲆⵠ].hint - 1.5 * ᐃᐃΔⲆ);
				this.buttons[ᐃΔΔⵠΔ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ) ? this.buttons[ᐃΔΔⵠΔ].hint = Math.min(ⲆᐃⲆⲆ, this.buttons[ᐃΔΔⵠΔ].hint + ᐃᐃΔⲆ * 1.5) : this.buttons[ᐃΔΔⵠΔ].hint = Math.max(0, this.buttons[ᐃΔΔⵠΔ].hint - ᐃᐃΔⲆ * 1.5);
				if (this.buttons[ΔᐃᐃᐃΔ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ)) this.buttons[ΔᐃᐃᐃΔ].hint = Math.min(ⲆΔᐃⲆ, this.buttons[ΔᐃᐃᐃΔ].hint + 1.5 * ᐃᐃΔⲆ);
				else this.buttons[ΔᐃᐃᐃΔ].hint = Math.max(0, this.buttons[ΔᐃᐃᐃΔ].hint - ᐃᐃΔⲆ * 1.5);
				this.buttons[ⲆΔⲆᐃⵠ].ⵠᐃⲆᐃⵠⵠⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ) ? this.buttons[ⲆΔⲆᐃⵠ].hint = Math.min(1, this.buttons[ⲆΔⲆᐃⵠ].hint + ᐃᐃΔⲆ * 1.5) : this.buttons[ⲆΔⲆᐃⵠ].hint = Math.max(ᐃⵠΔ, this.buttons[ⲆΔⲆᐃⵠ].hint - 1.5 * ᐃᐃΔⲆ)
			}
			var ⲆⵠⵠᐃⵠΔⲆ = ΔᐃⵠΔ;
			if ((this.ᐃⵠⵠᐃᐃ & (ⲆΔⲆⲆΔⲆⲆ | ΔΔᐃΔⲆᐃᐃ | ⲆⲆΔⵠⲆⲆᐃ | ᐃΔᐃᐃⲆⲆⲆ | ⵠᐃⲆⵠⵠᐃΔ | ΔⵠⵠᐃᐃΔᐃ)) > 1) {
				var ⵠⵠ = ⵠᐃ.ⵠⲆⵠΔΔΔⵠ;
				Ⲇ.save();
				Ⲇ.translate(ᐃΔΔᐃ, ᐃⵠⲆΔΔᐃΔⵠΔ + ⵠⵠ.height / 4);
				if (this.ᐃΔΔⵠⵠ === ⲆᐃⲆⲆ) {
					this.ᐃⲆΔⲆⲆΔΔ += ᐃᐃΔⲆ / 3;
					ⲆⵠⵠᐃⵠΔⲆ = this.ΔⵠΔΔⵠⲆΔ - 100 / Math.pow(1 + this.ᐃⲆΔⲆⲆΔΔ, 1 + this.ᐃⲆΔⲆⲆΔΔ);
					Ⲇ.rotate(ⲆⵠⵠᐃⵠΔⲆ)
				}
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 4, -ⵠⵠ.height / 4, ⵠⵠ.width / ⲆⲆⵠΔ, ⵠⵠ.height / 2);
				Ⲇ.restore()
			}
			if (ᐃΔᐃⵠ.ⲆΔⵠⵠΔⵠᐃ === ⵠᐃⲆᐃ) {
				if (ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ === ᐃΔᐃⵠ.ⵠΔⲆΔⲆ) this.buttons[ᐃⵠΔΔⲆ].info.state = ⲆΔⲆⵠ;
				else if (ⲆⵠΔΔ.ᐃΔⲆⵠⵠ === ᐃΔᐃⵠ.ⵠΔⲆΔⲆ) this.buttons[ᐃⵠⵠΔᐃ].info.state = ⲆΔⲆⵠ;
				else if (ᐃΔᐃⵠ.ⵠΔⲆΔⲆ === ⲆⵠΔΔ.ᐃᐃΔᐃⲆ) this.buttons[ΔᐃᐃᐃΔ].info.state = ⲆΔⲆⵠ;
				else if (ᐃΔᐃⵠ.ⵠΔⲆΔⲆ === ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ) this.buttons[ⲆΔⲆᐃⵠ].info.state = ⲆΔⲆⵠ;
				else if (ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ === ᐃΔᐃⵠ.ⵠΔⲆΔⲆ) this.buttons[ⵠⲆⵠⲆⵠ].info.state = ⲆΔⲆⵠ;
				else if (ᐃΔᐃⵠ.ⵠΔⲆΔⲆ === ⲆⵠΔΔ.ᐃΔΔⵠΔ) this.buttons[ᐃΔΔⵠΔ].info.state = ⲆΔⲆⵠ
			}
			for (var ᐃⲆ = 1; this.buttons.length > ᐃⲆ; ᐃⲆ++) {
				if (ⲆΔΔⲆ === this.buttons[ᐃⲆ].info.active) this.buttons[ᐃⲆ].ⲆⵠᐃⲆ(Ⲇ)
			}
			this.ⵠΔⲆᐃ[ΔⲆⵠ].ⲆⵠᐃⲆ(Ⲇ);
			if ((this.ᐃⵠⵠᐃᐃ & (ⲆΔⵠᐃΔⲆΔ | ΔⲆⵠΔⲆⲆⲆ)) > 0) {
				var ⵠⵠ = this.ΔᐃⲆⲆⵠΔⲆ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⲆⲆΔΔ, 138, ⵠⵠ.width / 2, ⵠⵠ.height / ⵠᐃⵠΔ)
			}
			var ⲆΔⵠⵠΔ = Math.max(1, Math.min(18, Math.floor((ᐃᐃΔΔ.ⲆΔⵠⵠΔ + ᐃⵠⵠⵠ) / ⵠⵠⲆᐃ)));
			this.ⵠΔⲆᐃ[ⲆΔⵠⵠΔ].active = ⲆΔΔⲆ;
			this.ⵠΔⲆᐃ[ⲆΔⵠⵠΔ].ⲆⵠᐃⲆ(Ⲇ);
			this.ⵠΔⲆᐃ[ⲆΔⵠⵠΔ].active = ᐃⲆᐃᐃ;
			this.buttons[ⵠⵠⲆⲆ].ⲆⵠᐃⲆ(Ⲇ);
			if (ΔΔⲆΔ < (this.ᐃⵠⵠᐃᐃ & (ⲆᐃⵠⲆᐃ | ΔΔΔⵠᐃ | ᐃⵠᐃᐃⵠ | ⲆⵠⲆΔᐃ | ΔΔᐃΔΔ))) {
				var ⲆⵠⲆⲆᐃ = (this.ᐃⵠⵠᐃᐃ & (ΔΔΔⵠᐃ | ᐃⵠᐃᐃⵠ | ⲆⵠⲆΔᐃ | ΔΔᐃΔΔ)) > ⲆΔⵠⲆ ? -190 : 0;
				var ⵠⵠ = Ⲇᐃ[Δ.ⵠΔΔⵠ][this.ΔⵠⵠⵠⲆ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ᐃⵠⲆⲆⲆ + ⲆⵠⲆⲆᐃ, 183, ⵠⵠ.width / ⵠᐃᐃⵠ, ⵠⵠ.height / 2);
				this.ᐃⵠΔⵠ = (this.ᐃⵠΔⵠ + 1e3 * ᐃᐃΔⲆ) % 2e3;
				var ⵠⵠΔ = (1e3 > this.ᐃⵠΔⵠ) * 4.5 ? this.ᐃⵠΔⵠ / 1e3 : (2e3 - this.ᐃⵠΔⵠ) / 1e3;
				var ⵠⵠ = Ⲇᐃ[Δ.ΔᐃⵠⲆΔ][this.ⲆΔⵠⲆⵠ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4 - 62 + ⵠⵠΔ + ⲆⵠⲆⲆᐃ, 240, ⵠⵠ.width / 2, ⵠⵠ.height / ᐃⲆⲆΔ);
				var ⵠⵠ = Ⲇᐃ[Δ.ΔΔᐃⵠᐃ][this.ᐃᐃᐃΔ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⲆⲆΔΔ - 54 + ⵠⵠΔ + ⲆⵠⲆⲆᐃ, 272, ⵠⵠ.width / ᐃⵠΔⲆ, ⵠⵠ.height / ᐃΔⵠᐃ);
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4 + 54 - ⵠⵠΔ + ⲆⵠⲆⲆᐃ, 272, ⵠⵠ.width / 2, ⵠⵠ.height / ᐃⲆⲆΔ);
				var ⵠⵠ = Ⲇᐃ[Δ.ΔⲆⲆⲆⵠᐃΔ][this.ᐃᐃᐃΔ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⵠᐃᐃⲆ + ⲆⵠⲆⲆᐃ, 222, ⵠⵠ.width / ᐃᐃⲆΔ, ⵠⵠ.height / 2);
				var ⵠⵠ = Ⲇᐃ[Δ.ⵠⲆΔᐃᐃ][this.ᐃᐃᐃⲆⵠ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4 + ⲆⵠⲆⲆᐃ, 222, ⵠⵠ.width / ᐃᐃⲆΔ, ⵠⵠ.height / 2)
			}
			if (ⲆᐃⵠⲆᐃ === (this.ᐃⵠⵠᐃᐃ & ⲆᐃⵠⲆᐃ)) {
				var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠᐃ][this.ΔᐃⲆⲆⲆ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4 - 61, 406 - ⵠⵠ.height / ⵠΔⲆᐃΔ, ⵠⵠ.width / ᐃᐃΔⵠ, ⵠⵠ.height / 2);
				var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠᐃ][this.ⲆⵠᐃΔⵠ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⲆⲆⲆⵠᐃ + 53, 406 - ⵠⵠ.height / 4, ⵠⵠ.width / ⵠᐃᐃⵠ, ⵠⵠ.height / 2)
			}
			if (ⵠΔᐃᐃΔ === (this.ᐃⵠⵠᐃᐃ & ⵠΔᐃᐃΔ)) {
				var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠᐃ][this.ⲆⵠᐃΔⵠ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4 - 200, 268 - ⵠⵠ.height / ᐃΔΔΔ, ⵠⵠ.width / 2, ⵠⵠ.height / 2)
			}
			if (ΔΔΔⵠΔ === (this.ᐃⵠⵠᐃᐃ & ΔΔΔⵠΔ)) {
				var ⵠⵠ = Ⲇᐃ[Δ.ΔΔⲆⵠᐃ][this.ΔᐃⲆⲆⲆ][this.ⲆⵠᐃΔᐃᐃΔ];
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⲆⲆⲆⵠᐃ - 200, 268 - ⵠⵠ.height / ⲆⵠⵠⲆΔ, ⵠⵠ.width / 2, ⵠⵠ.height / 2)
			}
			if (ΔᐃⵠΔ < (this.ᐃⵠⵠᐃᐃ & (ΔΔΔⵠᐃ | ᐃⵠᐃᐃⵠ | ⲆⵠⲆΔᐃ | ΔΔᐃΔΔ | ⵠΔᐃᐃΔ | ΔΔΔⵠΔ))) {
				for (var ᐃⲆ = 1; ᐃⲆ < this.buttons.length; ᐃⲆ++) {
					if (ᐃⵠΔ === (this.buttons[ᐃⲆ].view & this.ᐃⵠⵠᐃᐃ)) continue;
					var ΔΔⵠⵠ = this.buttons[ᐃⲆ].info;
					if (ΔΔⲆᐃ <= ΔΔⵠⵠ.ⲆⲆΔⲆⲆᐃᐃ) {
						var ⵠⵠ = ΔΔⵠⵠ.ΔⵠᐃᐃⲆⲆⵠⵠⵠ[ΔΔⵠⵠ.ⲆⲆΔⲆⲆᐃᐃ].ⲆⲆΔ;
						ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ΔΔⵠⵠ.translate.x - ⵠⵠ.width / ᐃᐃΔⵠⵠ + 44.5, ΔΔⵠⵠ.translate.y - ⵠⵠ.height / 8 + 45.5, ⵠⵠ.width / 4, ⵠⵠ.height / 4);
						if (ΔΔⵠⵠ.ⲆΔΔΔΔᐃⲆ !== ⵠⵠⲆΔ) {
							var ⵠⵠ = ⵠᐃ.ⵠⵠⵠᐃⵠᐃΔ;
							ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ΔΔⵠⵠ.translate.x - ⵠⵠ.width / ⲆⲆⲆⵠᐃ + 44.5, ΔΔⵠⵠ.translate.y - ⵠⵠ.height / ⲆⵠⲆⲆ + 44.5, ⵠⵠ.width / ⲆᐃⲆᐃ, ⵠⵠ.height / 2)
						}
					}
				}
				var ⵠⵠ = this.ΔᐃΔⲆΔⵠⲆ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - 312, 375, ⵠⵠ.width / ᐃᐃⲆΔ, ⵠⵠ.height / 2);
				var ⵠⵠ = this.ᐃⲆΔΔΔⵠⵠ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - 312, 395, ⵠⵠ.width / 2, ⵠⵠ.height / 2)
			}
			if (this.ᐃⲆᐃᐃᐃΔᐃ !== this.ΔⲆⲆⵠΔ) {
				this.ᐃⲆᐃᐃᐃΔᐃ = this.ΔⲆⲆⵠΔ;
				this.ⲆΔᐃⲆᐃᐃⵠ = ⵠᐃΔᐃⲆ("" + this.ΔⲆⲆⵠΔ, ⵠ[43], ⵠ[290], 60, 250)
			}
			ⵠⲆΔⲆ(Ⲇ, this.ⲆΔᐃⲆᐃᐃⵠ, this.ⵠΔⲆᐃ[0].translate.x + 350, 15, this.ⲆΔᐃⲆᐃᐃⵠ.w2, this.ⲆΔᐃⲆᐃᐃⵠ.ⵠⵠᐃⵠⵠ);
			this.ⲆⵠᐃⲆⲆⲆΔ !== this.ⲆΔⵠⵠΔ && (this.ⲆⵠᐃⲆⲆⲆΔ = this.ⲆΔⵠⵠΔ, this.ΔⲆᐃᐃΔᐃᐃ = ⵠᐃΔᐃⲆ("LVL " + (this.ⲆΔⵠⵠΔ + ⵠⲆⲆ), ⵠ[43], ⵠ[290], 50, 250, undefined, 30, 24, ⵠΔⵠΔⵠ, undefined, undefined, ⵠᐃΔᐃΔ, "#3F3019", 20));
			ⵠⲆΔⲆ(Ⲇ, this.ΔⲆᐃᐃΔᐃᐃ, this.ⵠΔⲆᐃ[ΔⵠⲆⲆ].translate.x + 94, 0, this.ΔⲆᐃᐃΔᐃᐃ.w2, this.ΔⲆᐃᐃΔᐃᐃ.ⵠⵠᐃⵠⵠ);
			if (ⲆⲆⲆ === ᐃΔᐃⵠ.ⲆΔⵠⵠΔⵠᐃ) {
				var ⲆΔΔⵠ = this.buttons[ᐃⵠΔΔⲆ].hint;
				if (ⲆΔΔⵠ > 0) {
					var ⵠⵠ = ⵠᐃ.ⲆΔᐃⲆΔᐃΔ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / Δⵠⵠⵠ, -36 - Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(1 - ⲆΔΔⵠ) * ⵠⵠ.height / 2, ⵠⵠ.width / 2, ⵠⵠ.height / ΔᐃⵠⲆ)
				}
				var ⲆΔΔⵠ = this.buttons[ᐃⵠⵠΔᐃ].hint;
				if (Ⲇᐃⵠᐃ < ⲆΔΔⵠ) {
					var ⵠⵠ = ⵠᐃ.ⵠⵠⲆΔᐃΔⵠ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⵠΔΔᐃ, -36 - Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(1 - ⲆΔΔⵠ) * ⵠⵠ.height / 2, ⵠⵠ.width / ᐃᐃΔⵠ, ⵠⵠ.height / ⵠⲆΔΔ)
				}
				var ⲆΔΔⵠ = this.buttons[ⵠⲆⵠⲆⵠ].hint;
				if (ⲆΔΔⵠ > ⵠⲆⲆᐃ) {
					var ⵠⵠ = ⵠᐃ.ΔⲆΔⵠⵠⲆᐃ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ⲆⵠⲆΔⲆ, -36 - Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⲆΔⵠⲆ - ⲆΔΔⵠ) * ⵠⵠ.height / ⵠᐃᐃⵠ, ⵠⵠ.width / ⲆᐃⲆᐃ, ⵠⵠ.height / ᐃⲆⵠᐃ)
				}
				var ⲆΔΔⵠ = this.buttons[ᐃΔΔⵠΔ].hint;
				if (ⲆΔΔⵠ > 0) {
					var ⵠⵠ = ⵠᐃ.ΔΔΔΔⵠⲆⲆ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4, -36 - ⵠⵠ.height * Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ⵠⲆⲆ - ⲆΔΔⵠ) / ⵠΔⵠᐃ, ⵠⵠ.width / 2, ⵠⵠ.height / ΔᐃⵠⲆ)
				}
				var ⲆΔΔⵠ = this.buttons[ⲆΔⲆᐃⵠ].hint;
				if (0 < ⲆΔΔⵠ) {
					var ⵠⵠ = ⵠᐃ.ΔᐃᐃᐃΔᐃⲆ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ᐃⵠᐃᐃ, -36 - Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(ΔΔᐃᐃ - ⲆΔΔⵠ) * ⵠⵠ.height / ΔⵠΔΔ, ⵠⵠ.width / 2, ⵠⵠ.height / ⵠΔⲆΔ)
				}
				var ⲆΔΔⵠ = this.buttons[ΔᐃᐃᐃΔ].hint;
				if (ⲆΔΔⵠ > 0) {
					var ⵠⵠ = ⵠᐃ.ΔⵠⲆⵠΔⲆΔ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4, -36 - ⵠⵠ.height * Ⲇᐃⵠ.ⲆᐃⲆⵠᐃ(1 - ⲆΔΔⵠ) / ᐃᐃΔⵠ, ⵠⵠ.width / ⵠᐃᐃⵠ, ⵠⵠ.height / 2)
				}
			}
			if (ⲆᐃⲆⲆ === this.ᐃΔΔⵠⵠ && .006 > Math.abs(ⲆⵠⵠᐃⵠΔⲆ - this.ΔⵠΔΔⵠⲆΔ)) {
				Ⲇ.globalAlpha = Math.min(ⵠᐃΔᐃ, ᐃⲆⲆᐃΔ * this.ⵠⲆⵠⲆⵠΔⲆ);
				var ⵠⵠ = ⵠᐃ.ⵠΔⲆᐃⵠΔΔ;
				Ⲇ.save();
				Ⲇ.translate(ᐃΔΔᐃ, 260);
				this.ⵠⲆⵠⲆⵠΔⲆ += ᐃᐃΔⲆ;
				Ⲇ.rotate(this.ⵠⲆⵠⲆⵠΔⲆ);
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ⵠⵠ.width / 2, -ⵠⵠ.height / 2, ⵠⵠ.width, ⵠⵠ.height);
				Ⲇ.restore();
				var ⵠⵠΔ = 1.05 + .05 * Math.cos(this.ⵠⲆⵠⲆⵠΔⲆ * ⲆᐃᐃΔ);
				if (Δⵠⵠ === this.ⲆΔᐃⵠΔΔΔ) {
					ⵠⵠ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[this.ᐃⲆΔⵠᐃⵠΔ].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠ.height * ⵠⵠΔ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / ⵠⲆⵠᐃ, 260 - ΔᐃⲆ / ΔⵠΔΔ, ᐃᐃⲆ, ΔᐃⲆ)
				} else if (this.ⲆΔᐃⵠΔΔΔ === 1) {
					ⵠⵠ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[0].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠ.height * ⵠⵠΔ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / 2, 260 - ΔᐃⲆ / ᐃΔⵠᐃ, ᐃᐃⲆ, ΔᐃⲆ);
					ⵠⵠ = ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ[this.ᐃⲆΔⵠᐃⵠΔ].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠΔ * ⵠⵠ.height;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / ᐃⵠΔⲆ, 260 - ΔᐃⲆ / 2, ᐃᐃⲆ, ΔᐃⲆ)
				} else if (2 === this.ⲆΔᐃⵠΔΔΔ) {
					ⵠⵠ = ᐃᐃᐃⵠ.ⵠΔΔⵠ[this.ᐃⲆΔⵠᐃⵠΔ].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠ.height * ⵠⵠΔ;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / ⲆⲆⵠΔ, 180 - ΔᐃⲆ / ⵠⵠΔⲆ, ᐃᐃⲆ, ΔᐃⲆ);
					ⵠⵠ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[0].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠΔ * ⵠⵠ.height;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / 2, 260 - ΔᐃⲆ / ᐃⵠΔⲆ, ᐃᐃⲆ, ΔᐃⲆ)
				} else if (3 === this.ⲆΔᐃⵠΔΔΔ) {
					ⵠⵠ = ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ[this.ᐃⲆΔⵠᐃⵠΔ].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠΔ * ⵠⵠ.width;
					var ΔᐃⲆ = ⵠⵠΔ * ⵠⵠ.height;
					Ⲇ.save();
					Ⲇ.translate(ᐃΔΔᐃ, 260);
					Ⲇ.rotate(Math.PI);
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, -ᐃᐃⲆ / 2, -ΔᐃⲆ / ⲆⲆⵠΔ, ᐃᐃⲆ, ΔᐃⲆ);
					Ⲇ.restore()
				} else if (this.ⲆΔᐃⵠΔΔΔ === 4) {
					ⵠⵠ = ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ[this.ᐃⲆΔⵠᐃⵠΔ].ⲆⲆΔ;
					var ᐃᐃⲆ = ⵠⵠ.width * ⵠⵠΔ;
					var ΔᐃⲆ = ⵠⵠΔ * ⵠⵠ.height;
					ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ᐃᐃⲆ / ᐃⵠΔⲆ, 260 - ΔᐃⲆ / ⲆᐃⲆᐃ, ᐃᐃⲆ, ΔᐃⲆ)
				}
				var ⵠⵠ = this.ᐃⵠᐃᐃᐃᐃⲆ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4, 340, ⵠⵠ.width / 2, ⵠⵠ.height / 2);
				var ⵠⵠ = this.ⵠⵠⲆΔᐃⲆⲆ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / ᐃⵠᐃᐃ, 365, ⵠⵠ.width / ⵠⲆⵠᐃ, ⵠⵠ.height / 2);
				this.ⵠⲆⵠⲆⵠΔⲆ > 6 && (this.ᐃΔΔⵠⵠ = ⲆⲆⲆ, ᐃⵠΔᐃ(ⵠⲆᐃΔΔ));
				Ⲇ.globalAlpha = ΔΔⵠΔⵠ
			}
			ⲆΔⲆ.alert.ⲆⵠᐃⲆ(ⵠ[68], ⵠ[151]);
			Ⲇⵠᐃ.waiting && this.ΔΔⲆⲆⲆⵠⵠ.ⲆⵠᐃⲆ()
		};
		var Δᐃ = 0;
		var ⲆⲆⵠⲆᐃ = Math.pow(2, Δᐃ++);
		var ⵠⵠΔΔΔ = Math.pow(2, Δᐃ++);
		this.ⵠⵠΔΔΔ = ⵠⵠΔΔΔ;
		var ᐃΔᐃΔΔ = Math.pow(2, Δᐃ++);
		var ⲆᐃⵠⲆᐃ = Math.pow(ⵠⲆⵠᐃ, Δᐃ++);
		var ⵠⲆᐃΔΔ = Math.pow(2, Δᐃ++);
		var ΔΔΔⵠⵠⲆΔ = Math.pow(ⵠΔⵠᐃ, Δᐃ++);
		var ⲆⲆⲆΔᐃ = Math.pow(2, Δᐃ++);
		var ⵠⵠΔⲆⲆ = Math.pow(2, Δᐃ++);
		this.ⵠⵠΔⲆⲆ = ⵠⵠΔⲆⲆ;
		var ΔⵠⲆⵠᐃⲆΔ = Math.pow(ΔⵠΔΔ, Δᐃ++);
		var ΔⲆᐃⲆⵠⲆᐃ = Math.pow(ⵠⵠΔⲆ, Δᐃ++);
		var ⲆΔⲆⲆΔⲆⲆ = Math.pow(2, Δᐃ++);
		var ΔΔᐃΔⲆᐃᐃ = Math.pow(ⲆᐃⲆᐃ, Δᐃ++);
		var ⲆⲆΔⵠⲆⲆᐃ = Math.pow(2, Δᐃ++);
		var ᐃΔᐃᐃⲆⲆⲆ = Math.pow(ΔᐃⵠⲆ, Δᐃ++);
		var ⵠᐃⲆⵠⵠᐃΔ = Math.pow(ⵠᐃᐃⵠ, Δᐃ++);
		var ΔⵠⵠᐃᐃΔᐃ = Math.pow(ᐃⵠΔⲆ, Δᐃ++);
		var ⲆⵠⲆΔᐃ = Math.pow(ⵠᐃᐃⵠ, Δᐃ++);
		var ⵠΔᐃᐃΔ = Math.pow(ⵠᐃⵠΔ, Δᐃ++);
		var ΔΔΔⵠᐃ = Math.pow(ΔⲆⲆᐃ, Δᐃ++);
		var ᐃⵠᐃᐃⵠ = Math.pow(ᐃᐃΔⵠ, Δᐃ++);
		var ΔΔᐃΔΔ = Math.pow(ΔⵠΔΔ, Δᐃ++);
		var ΔΔΔⵠΔ = Math.pow(2, Δᐃ++);
		var ΔⲆⵠΔⲆⲆⲆ = Math.pow(ᐃⲆⲆΔ, Δᐃ++);
		var ⲆΔⵠᐃΔⲆΔ = Math.pow(ⵠΔⲆΔ, Δᐃ++);
		var ΔΔΔᐃⵠ = Math.pow(ⵠⵠΔⲆ, Δᐃ++);
		this.ΔΔΔᐃⵠ = ΔΔΔᐃⵠ;
		var ⲆΔᐃᐃⵠ = Math.pow(ⲆⲆⵠΔ, Δᐃ++);
		this.ⲆΔᐃᐃⵠ = ⲆΔᐃᐃⵠ;
		var ᐃΔᐃΔⲆ = Math.pow(ΔⲆⲆᐃ, Δᐃ++);
		this.ᐃΔᐃΔⲆ = ᐃΔᐃΔⲆ;
		var ⵠⲆⵠⲆⲆΔⲆ = Math.pow(2, Δᐃ++);
		this.ᐃⵠⵠᐃᐃ = ⲆⲆⵠⲆᐃ;

		function ΔᐃΔᐃⲆⵠⲆ(ΔⵠⵠⲆ, ΔⵠⲆⵠ, ᐃΔⲆᐃΔᐃᐃᐃΔ) {
			for (var ᐃⲆ = 0; ᐃⲆ < Ⲇⵠᐃ.ⵠΔⲆᐃ.length; ᐃⲆ++) {
				if ((Ⲇⵠᐃ.ⵠΔⲆᐃ[ᐃⲆ].view & ΔⵠⵠⲆ) !== ⵠⲆⲆᐃ) Ⲇⵠᐃ.ⵠΔⲆᐃ[ᐃⲆ].active = ΔⵠⲆⵠ
			}
			for (var ᐃⲆ = ΔⵠⲆΔ; ᐃⲆ < Ⲇⵠᐃ.buttons.length; ᐃⲆ++) {
				0 !== (Ⲇⵠᐃ.buttons[ᐃⲆ].view & ΔⵠⵠⲆ) && (Ⲇⵠᐃ.buttons[ᐃⲆ].info.active = ΔⵠⲆⵠ)
			}
			for (var ᐃⲆ = ΔΔⵠᐃ; Ⲇⵠᐃ.ⵠⵠⵠⲆᐃ.length > ᐃⲆ; ᐃⲆ++) {
				if (ΔΔⵠᐃ !== (Ⲇⵠᐃ.ⵠⵠⵠⲆᐃ[ᐃⲆ].view & ΔⵠⵠⲆ)) Ⲇⵠᐃ.ⵠⵠⵠⲆᐃ[ᐃⲆ].style.display = ᐃΔⲆᐃΔᐃᐃᐃΔ
			}
		}
		var ΔΔⲆⵠⵠΔΔ = [];
		this.ᐃⲆⵠΔⵠᐃΔ = ᐃΔⵠⵠ;

		function ⲆⵠⲆΔΔⵠᐃΔⵠ(ΔᐃⵠⵠⵠΔΔ) {
			ΔᐃⵠⵠⵠΔΔ = ΔᐃⵠⵠⵠΔΔ.replace("http://starve.io", "https://starve.io");
			var ΔᐃΔⲆ = new XMLHttpRequest;
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]]("HEAD", ΔᐃⵠⵠⵠΔΔ, true);
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
				if (ⵠⲆᐃᐃ === ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[103]]) {
					if (200 === ΔᐃΔⲆ.status) {
						var Δⵠᐃⵠᐃ = Number(ΔᐃΔⲆ.getResponseHeader("Content-Length"));
						Δⵠᐃⵠᐃ > 0 && ᐃⵠᐃⵠΔΔⲆⵠΔ(ΔᐃⵠⵠⵠΔΔ, Δⵠᐃⵠᐃ)
					}
				}
			};
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]](null)
		}

		function ᐃⵠᐃⵠΔΔⲆⵠΔ(ᐃⲆⵠⵠⵠⵠᐃ, ᐃⵠⲆᐃⲆⲆᐃ) {
			ᐃⲆⵠⵠⵠⵠᐃ = ᐃⲆⵠⵠⵠⵠᐃ.replace("Xday", "day");
			ᐃⲆⵠⵠⵠⵠᐃ = ᐃⲆⵠⵠⵠⵠᐃ.replace("Xnight", "night");
			for (var ᐃⲆ = 0; ᐃⲆ < ΔΔⲆⵠⵠΔΔ.length; ᐃⲆ++) {
				var ⲆⲆⲆᐃΔⲆⵠ = ΔΔⲆⵠⵠΔΔ[ᐃⲆ];
				if (ⲆⲆⲆᐃΔⲆⵠ[Δⵠⵠ] === ᐃⲆⵠⵠⵠⵠᐃ) {
					if (ⲆⲆⲆᐃΔⲆⵠ[ⵠᐃΔᐃ] !== ᐃⵠⲆᐃⲆⲆᐃ) ᐃᐃΔΔ.ᐃⲆⵠΔⵠᐃΔ = ᐃΔⲆⵠ;
					return
				}
			}
			ΔΔⲆⵠⵠΔΔ.push([ᐃⲆⵠⵠⵠⵠᐃ, ᐃⵠⲆᐃⲆⲆᐃ])
		}

		function ᐃⵠΔᐃ(ΔⵠⵠⲆ) {
			if (Ⲇⵠᐃ.ⵠΔᐃⵠΔΔⵠ === false) return;
			ΔᐃΔᐃⲆⵠⲆ(ΔⵠⲆⵠᐃⲆΔ, ᐃⲆᐃᐃ, ⵠ[402]);
			ΔᐃΔᐃⲆⵠⲆ(ΔⲆᐃⲆⵠⲆᐃ, ᐃⲆᐃᐃ, ⵠ[402]);
			ⲆΔⵠΔΔⵠΔ();
			if (Ⲇⵠᐃ.ᐃⵠⵠᐃᐃ === ΔⵠⵠⲆ || Ⲇⵠᐃ.ᐃΔΔⵠⵠ >= ΔΔᐃⵠ) return;
			ⲆⲆⵠⲆᐃ === ΔⵠⵠⲆ || ⵠⲆᐃΔΔ === ΔⵠⵠⲆ || ⵠⵠΔΔΔ === ΔⵠⵠⲆ || ⲆⲆⲆΔᐃ === ΔⵠⵠⲆ || ΔⵠⵠⲆ === ⲆᐃⵠⲆᐃ || ΔⵠⵠⲆ === ΔΔΔⵠⵠⲆΔ ? Ⲇⵠᐃ.ⲆΔⲆᐃᐃ.style.display = ⵠ[489] : Ⲇⵠᐃ.ⲆΔⲆᐃᐃ.style.display = ⵠ[402];
			ΔᐃΔᐃⲆⵠⲆ(Ⲇⵠᐃ.ᐃⵠⵠᐃᐃ, ᐃⲆᐃᐃ, ⵠ[402]);
			Ⲇⵠᐃ.ᐃⵠⵠᐃᐃ = ΔⵠⵠⲆ;
			ΔᐃΔᐃⲆⵠⲆ(Ⲇⵠᐃ.ᐃⵠⵠᐃᐃ, ⲆΔΔⲆ, ⵠ[489])
		}

		function ⲆΔⵠΔΔⵠΔ() {
			var ΔᐃⵠᐃᐃⲆΔ = Number(ⲆΔΔᐃ.get("starve_crate"));
			var ⲆΔⲆᐃᐃᐃᐃ = Number(ⲆΔΔᐃ.get("starve_dead"));
			var ⵠᐃΔᐃⵠⲆᐃ = Number(ⲆΔΔᐃ.get("starve_book"));
			var ΔᐃⵠΔⵠⵠᐃ = Number(ⲆΔΔᐃ.get("starve_bag"));
			var Ⲇᐃᐃᐃᐃᐃⵠ = Number(ⲆΔΔᐃ.get("starve_skin"));
			var ᐃⵠᐃᐃⲆⵠᐃ = Number(ⲆΔΔᐃ.get("starve_accessory"));
			!(ᐃᐃΔΔ.unlock.ᐃᐃᐃΔ[ᐃᐃΔΔ.ᐃᐃᐃΔ] > 0) && (ᐃᐃΔΔ.ᐃᐃᐃΔ = !(ᐃᐃΔΔ.unlock.ᐃᐃᐃΔ[Ⲇᐃᐃᐃᐃᐃⵠ] > 0) ? ΔⵠⲆⲆ : Ⲇᐃᐃᐃᐃᐃⵠ);
			!(ᐃᐃΔΔ.unlock.ⲆΔⵠⲆⵠ[ᐃᐃΔΔ.ⲆΔⵠⲆⵠ] > 0) && (ᐃᐃΔΔ.ⲆΔⵠⲆⵠ = !(ᐃᐃΔΔ.unlock.ⲆΔⵠⲆⵠ[ⵠᐃΔᐃⵠⲆᐃ] > ⵠⲆⲆᐃ) ? 0 : ⵠᐃΔᐃⵠⲆᐃ);
			!(ᐃᐃΔΔ.unlock.ⲆⵠᐃΔⵠ[ᐃᐃΔΔ.ⲆⵠᐃΔⵠ] > ΔⵠⲆⲆ) && (ᐃᐃΔΔ.ⲆⵠᐃΔⵠ = !(ᐃᐃΔΔ.unlock.ⲆⵠᐃΔⵠ[ⲆΔⲆᐃᐃᐃᐃ] > ⲆⵠⲆ) ? 0 : ⲆΔⲆᐃᐃᐃᐃ);
			!(ᐃᐃΔΔ.unlock.ΔᐃⲆⲆⲆ[ᐃᐃΔΔ.ΔᐃⲆⲆⲆ] > 0) && (ᐃᐃΔΔ.ΔᐃⲆⲆⲆ = !(ᐃᐃΔΔ.unlock.ΔᐃⲆⲆⲆ[ΔᐃⵠᐃᐃⲆΔ] > ᐃΔⵠⵠ) ? ⵠᐃⲆᐃ : ΔᐃⵠᐃᐃⲆΔ);
			!(ᐃᐃΔΔ.unlock.ᐃᐃᐃⲆⵠ[ᐃᐃΔΔ.ᐃᐃᐃⲆⵠ] > ᐃⵠΔ) && (ᐃᐃΔΔ.ᐃᐃᐃⲆⵠ = !(ᐃᐃΔΔ.unlock.ᐃᐃᐃⲆⵠ[ᐃⵠᐃᐃⲆⵠᐃ] > 0) ? ᐃΔⵠⵠ : ᐃⵠᐃᐃⲆⵠᐃ);
			if (!(ᐃᐃΔΔ.unlock.ΔⵠⵠⵠⲆ[ᐃᐃΔΔ.ΔⵠⵠⵠⲆ] > 0)) ᐃᐃΔΔ.ΔⵠⵠⵠⲆ = !(ᐃᐃΔΔ.unlock.ΔⵠⵠⵠⲆ[ΔᐃⵠΔⵠⵠᐃ] > ⲆΔᐃ) ? ΔⵠⲆⲆ : ΔᐃⵠΔⵠⵠᐃ
		}
		this.ᐃⵠΔᐃ = ᐃⵠΔᐃ;

		function ⲆⲆⵠᐃⲆΔᐃᐃⲆ() {
			ⲆΔⵠΔΔⵠΔ();
			ᐃΔᐃⵠ.connect()
		}

		function ᐃⲆΔᐃΔᐃⵠ(ⲆΔⵠⵠ, ⵠⲆᐃⲆⵠΔⵠ, ᐃⲆᐃⲆᐃⵠᐃ) {
			const ΔᐃΔⲆ = new XMLHttpRequest;
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ⲆΔⵠⵠ);
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
				if (this[ⲆⵠΔᐃᐃᐃΔ[103]] == Ⲇⵠⵠᐃᐃ && this.status == 200) {
					if (undefined !== ⵠⲆᐃⲆⵠΔⵠ) ⵠⲆᐃⲆⵠΔⵠ(ΔᐃΔⲆ.responseText)
				} else if (4 == this[ⲆⵠΔᐃᐃᐃΔ[103]]) {
					ᐃⲆᐃⲆᐃⵠᐃ !== ⵠΔⵠΔⵠ && ᐃⲆᐃⲆᐃⵠᐃ()
				}
			};
			ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
		}

		function ⵠⵠⲆΔⲆⲆⵠ(callback) {
			if (ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ === undefined) return;
			if (ⲆΔⲆ.ΔⲆⲆᐃⵠᐃⲆ === ⲆⲆΔΔᐃ) return;
			if (ⲆΔⲆ.ᐃᐃᐃⵠⵠᐃᐃ === undefined) return;
			callback()
		}
		this.ᐃᐃᐃⲆΔⵠΔ = function(callback, ⲆⲆⵠⵠⲆⲆⵠ) {
			let stop = ᐃⵠΔ;
			let ⵠⲆΔⲆⲆⵠⲆ = "0";
			if (ⲆⵠᐃᐃΔ) ⵠⲆΔⲆⲆⵠⲆ = ⲆⵠᐃᐃΔ + ⵠᐃⲆⵠᐃᐃΔ.ⵠⲆᐃΔΔΔⵠ();
			if (ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ) ⵠⵠⲆΔⲆⲆⵠ(callback);
			else ᐃⲆΔᐃΔᐃⵠ(`${ΔⵠΔᐃⵠ}token?id=${ⵠⲆΔⲆⲆⵠⲆ}`, (function(ⵠΔᐃⵠⲆ) {
				if (1 === stop) return;
				const ΔⲆⲆⵠⵠΔⲆ = ⵠΔᐃⵠⲆ.split("_");
				const ⲆⲆⲆⲆⲆⲆΔ = ΔⲆⲆⵠⵠΔⲆ[0] + "_";
				const Ⲇⵠⵠᐃ = Number(ΔⲆⲆⵠⵠΔⲆ[1]);
				const ΔⵠΔⵠΔⲆⲆ = Math.abs(ⲆΔⲆΔᐃⵠⵠ(Ⲇⵠⵠᐃ));
				ⲆΔⲆ.ᐃΔΔΔⵠᐃΔ = ⲆⲆⲆⲆⲆⲆΔ + ΔⵠΔⵠΔⲆⲆ;
				ⵠⵠⲆΔⲆⲆⵠ(callback)
			}), (function() {
				if (stop === ΔΔᐃᐃ) return;
				if (ⲆⲆⵠⵠⲆⲆⵠ === ⵠⲆⲆ) {
					stop = ΔᐃⵠΔ;
					callback();
					return
				}
				Ⲇⵠᐃ.waiting = false
			}));
			ᐃⲆΔᐃΔᐃⵠ(`${ΔⵠΔᐃⲆ}get`, (function(ⵠΔᐃⵠⲆ) {
				if (1 === stop) return;
				const ΔⲆⲆⵠⵠΔⲆ = ⵠΔᐃⵠⲆ.split("_");
				const ⲆⲆⲆⲆⲆⲆΔ = ΔⲆⲆⵠⵠΔⲆ[0] + "_";
				const Ⲇⵠⵠᐃ = Number(ΔⲆⲆⵠⵠΔⲆ[ⲆΔᐃⲆ]);
				const ΔⵠΔⵠΔⲆⲆ = Math.abs(ΔΔΔΔⵠⵠⲆ(Ⲇⵠⵠᐃ));
				ⲆΔⲆ.ΔⲆⲆᐃⵠᐃⲆ = ⲆⲆⲆⲆⲆⲆΔ + ΔⵠΔⵠΔⲆⲆ;
				ⲆΔⲆ.ΔΔⵠⲆⵠᐃⵠ = ΔⵠΔⵠΔⲆⲆ;
				ⵠⵠⲆΔⲆⲆⵠ(callback)
			}), (function() {
				if (stop === 1) return;
				if (1 === ⲆⲆⵠⵠⲆⲆⵠ) {
					stop = ΔᐃⵠΔ;
					callback();
					return
				}
				Ⲇⵠᐃ.waiting = false
			}));
			ᐃⲆΔᐃΔᐃⵠ(`${ΔⵠΔᐃⲆ}set`, (function(ⵠΔᐃⵠⲆ) {
				if (1 === stop) return;
				const ΔⲆⲆⵠⵠΔⲆ = ⵠΔᐃⵠⲆ.split("_");
				const ⲆⲆⲆⲆⲆⲆΔ = ΔⲆⲆⵠⵠΔⲆ[ⵠⵠⲆⲆ] + "_";
				const Ⲇⵠⵠᐃ = Number(ΔⲆⲆⵠⵠΔⲆ[ⲆᐃⲆⲆ]);
				const ΔⵠΔⵠΔⲆⲆ = Math.abs(ᐃⲆᐃⵠΔⲆⵠ(Ⲇⵠⵠᐃ));
				ⲆΔⲆ.ᐃᐃᐃⵠⵠᐃᐃ = ⲆⲆⲆⲆⲆⲆΔ + ΔⵠΔⵠΔⲆⲆ;
				ⲆΔⲆ.ΔⵠⲆⵠⵠⲆⲆᐃΔ = ΔⵠΔⵠΔⲆⲆ;
				ⵠⵠⲆΔⲆⲆⵠ(callback)
			}), (function() {
				if (ᐃⵠ === stop) return;
				if (ⲆⲆⵠⵠⲆⲆⵠ === ⵠⵠⲆΔ) {
					stop = ⵠⲆⲆ;
					callback();
					return
				}
				Ⲇⵠᐃ.waiting = false
			}))
		};
		this.ⵠΔΔⲆⲆᐃΔ = function() {
			if (Ⲇⵠᐃ.waiting === false) {
				ⲆΔⲆ.reconnect.enabled = ⵠⲆⵠΔⵠ;
				Ⲇⵠᐃ.waiting = ⵠⲆΔⲆⵠ;
				Ⲇⵠᐃ.ᐃᐃᐃⲆΔⵠΔ(ⲆⲆⵠᐃⲆΔᐃᐃⲆ)
			}
		};
		var ⵠⲆⵠΔ = 1;
		var ⲆᐃᐃΔⲆ = ᐃⵠΔⲆ;
		var Ⲇᐃᐃⵠ = 4;
		var ⲆᐃᐃⵠⲆᐃⵠ = ΔⲆᐃᐃᐃ;
		var ⵠⲆΔᐃ = 16;
		var ⲆⵠᐃⵠΔᐃⵠ = 32;
		var ΔΔᐃⵠⲆⲆⵠⲆᐃ = 0;
		var ΔⲆⲆⵠ = ᐃΔⲆⵠ;
		var ᐃⵠᐃⲆ = 0;
		var ⵠⵠⲆΔΔⲆⵠ = ⵠᐃΔᐃ;
		var ᐃⲆᐃᐃ = 0;
		var ⲆΔΔⲆ = ΔΔⲆΔ;
		ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? this.ᐃΔⲆᐃⵠ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[366]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[366]).style,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]),
			active: ⲆΔΔⲆ,
			position: Ⲇᐃᐃⵠ | ⵠⲆⵠΔ,
			view: ⲆⲆⵠⲆᐃ,
			translate: {
				x: ⵠⵠᐃᐃΔ,
				"ⲆⵠⲆⲆᐃ": 200,
				y: 0,
				"ΔⲆΔΔⲆ": 184
			}
		} : this.ᐃΔⲆᐃⵠ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[366]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[366]).style,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[565]),
			active: ⲆΔΔⲆ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ⲆⲆⵠⲆᐃ,
			translate: {
				"ⲆⵠⲆⲆᐃ": -180,
				y: 0,
				x: 0,
				"ΔⲆΔΔⲆ": 184
			}
		};
		this.ᐃΔⲆᐃⵠ.id[ⲆⵠΔᐃᐃᐃΔ[93]]("keyup", (function(event) {
			event.preventDefault();
			13 == event.keyCode && !Ⲇⵠᐃ.waiting && !Ⲇⵠᐃ.ΔⲆⵠⵠⲆⵠᐃⵠⵠ && Ⲇⵠᐃ.ⵠΔΔⲆⲆᐃΔ()
		}));
		this.ᐃΔⲆᐃⵠ.input.value = ⲆΔΔᐃ.get("starve_nickname") ? ⲆΔΔᐃ.get("starve_nickname") : "";
		this.ⲆⵠᐃⲆⵠᐃΔⲆΔ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("account_nickname_block"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("account_nickname_block").style,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]),
			active: ᐃⲆᐃᐃ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ⵠⵠΔΔΔ,
			translate: {
				x: 0,
				"ΔⲆΔΔⲆ": 110,
				"ⲆⵠⲆⲆᐃ": -122,
				y: 0
			}
		};
		ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? this.ⵠⲆᐃᐃΔ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]).style,
			active: ⲆΔΔⲆ,
			position: Ⲇᐃᐃⵠ | ⵠⲆⵠΔ,
			view: ⲆⲆⵠⲆᐃ,
			translate: {
				"ⲆⵠⲆⲆᐃ": 208,
				x: ΔⵠⲆⲆ,
				y: 0,
				"ΔⲆΔΔⲆ": 225
			}
		} : this.ⵠⲆᐃᐃΔ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[53]).style,
			active: ⲆΔΔⲆ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ⲆⲆⵠⲆᐃ,
			translate: {
				y: ΔⲆⵠ,
				"ⲆⵠⲆⲆᐃ": -180,
				x: ⵠᐃⲆᐃ,
				"ΔⲆΔΔⲆ": 225
			}
		};
		this.ⲆⲆΔⵠⲆ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("leaderboard"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("leaderboard").style,
			active: ᐃⲆᐃᐃ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ⲆⲆⲆΔᐃ,
			translate: {
				y: 0,
				x: ΔⵠⲆⲆ,
				"ⲆⵠⲆⲆᐃ": -294.5,
				"ΔⲆΔΔⲆ": 190
			}
		};
		this.ⵠΔΔⲆᐃⲆΔⲆⲆ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box").style,
			active: ᐃⲆᐃᐃ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ⵠⵠΔΔΔ,
			translate: {
				y: 0,
				"ⲆⵠⲆⲆᐃ": 125,
				"ΔⲆΔΔⲆ": 187,
				x: ⲆΔᐃ
			}
		};
		this.ⵠⲆΔⵠΔᐃΔΔⲆ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("serverAddressBlock"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("serverAddressBlock").style,
			input: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[167]),
			active: ᐃⲆᐃᐃ,
			position: Ⲇᐃᐃⵠ | ⵠⲆΔᐃ,
			view: ᐃΔᐃΔⲆ,
			translate: {
				y: 0,
				"ⲆⵠⲆⲆᐃ": -220,
				x: ⵠⵠⲆⲆ,
				"ΔⲆΔΔⲆ": 350
			}
		};
		Δᐃ = ᐃⵠΔ;
		this.ⵠⵠⵠⲆᐃ = [];
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ᐃΔⲆᐃⵠ;
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ⵠⲆᐃᐃΔ;
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ⲆⲆΔⵠⲆ;
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ⲆⵠᐃⲆⵠᐃΔⲆΔ;
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ⵠΔΔⲆᐃⲆΔⲆⲆ;
		this.ⵠⵠⵠⲆᐃ[Δᐃ++] = this.ⵠⲆΔⵠΔᐃΔΔⲆ;
		Δᐃ = 0;
		this.ⵠΔⲆᐃ = [];
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⵠⵠⲆΔⵠΔ, ⲆΔΔⲆ, 0, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⲆⲆΔⵠΔⲆ, ᐃⲆᐃᐃ, 0, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃΔᐃⲆᐃⵠⵠ, ᐃⲆᐃᐃ, 0, ⲆⵠⲆ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆᐃΔⵠᐃᐃ, ᐃⲆᐃᐃ, ⲆⲆⲆ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⲆΔⲆΔΔⲆ, ᐃⲆᐃᐃ, 0, ⵠᐃⲆᐃ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃᐃⵠⵠΔΔᐃ, ᐃⲆᐃᐃ, ⲆΔᐃ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠΔΔΔⲆᐃⵠ, ᐃⲆᐃᐃ, ΔⲆᐃⲆ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃᐃΔᐃⵠᐃᐃ, ᐃⲆᐃᐃ, ᐃΔⵠⵠ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⵠΔΔⲆΔᐃ, ᐃⲆᐃᐃ, 0, Δⵠⵠ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠΔⵠⲆΔⲆᐃ, ᐃⲆᐃᐃ, ΔⲆᐃⲆ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⵠⵠⲆΔⵠⵠ, ᐃⲆᐃᐃ, 0, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠᐃⵠᐃⲆⵠᐃ, ᐃⲆᐃᐃ, 0, ΔΔᐃ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆⵠⲆΔⵠΔ, ᐃⲆᐃᐃ, ⲆⵠⲆ, ⵠⲆⲆᐃ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃⲆᐃⵠⲆⵠ, ᐃⲆᐃᐃ, ΔΔᐃ, ⲆⵠⲆ, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠⵠΔΔⲆⵠⲆ, ᐃⲆᐃᐃ, ΔⵠⲆΔ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃⵠⵠⲆⵠᐃ, ᐃⲆᐃᐃ, ᐃΔⵠⵠ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⵠᐃⵠΔᐃⵠ, ᐃⲆᐃᐃ, 0, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⵠⲆΔΔⵠⵠ, ᐃⲆᐃᐃ, ⵠᐃⲆᐃ, 0, ⵠⲆⵠΔ);
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃⵠΔⵠΔᐃ, ᐃⲆᐃᐃ, ΔⵠⲆⲆ, ⲆⵠⲆ, ⵠⲆⵠΔ);
		ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆΔᐃⵠΔᐃΔ, ⲆΔΔⲆ, 200, ᐃⲆⵠΔΔ, Ⲇᐃᐃⵠ | ⵠⲆⵠΔ) : this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆΔᐃⵠΔᐃΔ, ⲆΔΔⲆ, -753 / 4, ΔⵠΔⵠⵠ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⲆⵠⲆᐃ;
		this.ⵠΔⲆᐃ[Δᐃ++] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆᐃΔΔⲆⵠⲆ, ⲆΔΔⲆ, 403, -10, ⲆᐃᐃΔⲆ);
		if (1300 < ⲆⲆⲆⲆᐃᐃᐃ.innerWidth) {
			this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆᐃⵠⲆⲆΔΔ, ⲆΔΔⲆ, -885 / 4, -319 / 2, ⲆᐃᐃⵠⲆᐃⵠ | ⵠⲆΔᐃ);
			this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⲆⵠⲆᐃ
		}
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⲆⵠⲆⲆᐃⲆ, ᐃⲆᐃᐃ, -1293 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠⵠΔΔΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠⵠΔⲆΔΔⲆ, ᐃⲆᐃᐃ, -1425 / 4, ΔΔⲆⵠⲆ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⵠΔⲆᐃⵠΔ, ᐃⲆᐃᐃ, -905 / ΔⲆΔⲆ, 50, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ᐃΔᐃΔΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃΔⵠΔᐃᐃΔ, ᐃⲆᐃᐃ, -1608 / 4, 130, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⲆⲆᐃᐃⲆⵠ, ᐃⲆᐃᐃ, -1117 / 4, 130, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃΔΔΔᐃⲆᐃ, ᐃⲆᐃᐃ, -1222 / 4, 130, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⵠⲆⵠᐃΔΔ, ᐃⲆᐃᐃ, -1222 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ᐃΔᐃΔⲆ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆᐃΔΔⵠⵠ, ᐃⲆᐃᐃ, -ⵠᐃ.ⲆⲆᐃΔΔⵠⵠ.width / ᐃΔⲆΔ - 350, -15, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠⲆⵠⲆⲆΔⲆ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆⵠⵠⲆⲆΔ, ᐃⲆᐃᐃ, -1497 / ᐃΔⲆΔ, 110, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔΔⵠⵠⲆΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃΔⵠⵠⲆΔⵠ, ᐃⲆᐃᐃ, -1226 / ᐃΔⲆΔ, ᐃⲆⵠΔΔ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆΔⵠⵠᐃⵠ, ᐃⲆᐃᐃ, -1381 / 4, 80, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⵠΔᐃⲆΔᐃ, ᐃⲆᐃᐃ, -1542 / ⲆⵠⵠⲆΔ, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆΔⲆⲆΔⲆⲆ;
		var ΔᐃΔⵠᐃ = 360 / ⵠΔᐃᐃⲆ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			[ⵠ[507], ΔᐃΔⵠᐃ * 3],
			[ⵠ[169], ΔᐃΔⵠᐃ * 10],
			[ⵠ[523], 30 * ΔᐃΔⵠᐃ],
			["#d88e23", 57 * ΔᐃΔⵠᐃ]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / 4, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆΔⲆⲆΔⲆⲆ;
		this.ΔⲆⲆᐃⲆⵠᐃᐃⲆ = function(ΔᐃⵠⲆᐃⵠΔⵠⲆ, ⵠⲆᐃΔ, ᐃΔⵠΔᐃᐃᐃ) {
			Ⲇⵠᐃ.ᐃΔΔⵠⵠ = ΔΔᐃⵠ;
			Ⲇⵠᐃ.ᐃⲆΔⲆⲆΔΔ = 0;
			Ⲇⵠᐃ.ⵠⲆⵠⲆⵠΔⲆ = Δⵠⵠ;
			Ⲇⵠᐃ.ΔⵠΔΔⵠⲆΔ = ΔᐃⵠⲆᐃⵠΔⵠⲆ;
			Ⲇⵠᐃ.ⲆΔᐃⵠΔΔΔ = ⵠⲆᐃΔ;
			var ⵠΔⵠ;
			var ᐃⲆ = ⵠᐃⲆᐃ;
			if (ⵠⲆᐃΔ === ⲆⲆⲆ) {
				for (ᐃⲆ = ΔⵠⲆⲆ; ᐃⲆ < ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ.length; ᐃⲆ++) {
					if (ᐃΔⵠΔᐃᐃᐃ === ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ].id) break
				}
				ⵠΔⵠ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ[ᐃⲆ];
				Ⲇⵠᐃ.unlock.ᐃᐃᐃΔ[ᐃⲆ] = 1
			} else if (1 === ⵠⲆᐃΔ) {
				for (ᐃⲆ = 0; ᐃⲆ < ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ.length; ᐃⲆ++) {
					if (ᐃΔⵠΔᐃᐃᐃ === ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ[ᐃⲆ].id) break
				}
				ⵠΔⵠ = ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ[ᐃⲆ];
				Ⲇⵠᐃ.unlock.ᐃᐃᐃⲆⵠ[ᐃⲆ] = 1
			} else if (2 === ⵠⲆᐃΔ) {
				for (ᐃⲆ = 0; ᐃⲆ < ᐃᐃᐃⵠ.ⵠΔΔⵠ.length; ᐃⲆ++) {
					if (ᐃΔⵠΔᐃᐃᐃ === ᐃᐃᐃⵠ.ⵠΔΔⵠ[ᐃⲆ].id) break
				}
				ⵠΔⵠ = ᐃᐃᐃⵠ.ⵠΔΔⵠ[ᐃⲆ];
				Ⲇⵠᐃ.unlock.ΔⵠⵠⵠⲆ[ᐃⲆ] = 1
			} else if (ⵠⲆᐃΔ === 3) {
				for (ᐃⲆ = ΔⲆⵠ; ᐃⲆ < ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ.length; ᐃⲆ++) {
					if (ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ[ᐃⲆ].id === ᐃΔⵠΔᐃᐃᐃ) break
				}
				ⵠΔⵠ = ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ[ᐃⲆ];
				Ⲇⵠᐃ.unlock.ⲆΔⵠⲆⵠ[ᐃⲆ] = 1
			} else if (4 === ⵠⲆᐃΔ) {
				for (ᐃⲆ = ΔΔᐃ; ᐃⲆ < ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ.length; ᐃⲆ++) {
					if (ᐃΔⵠΔᐃᐃᐃ === ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ[ᐃⲆ].id) break
				}
				ⵠΔⵠ = ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ[ᐃⲆ];
				Ⲇⵠᐃ.unlock.ΔᐃⲆⲆⲆ[ᐃⲆ] = 1;
				Ⲇⵠᐃ.unlock.ⲆⵠᐃΔⵠ[ᐃⲆ] = ᐃᐃΔᐃ
			}
			Ⲇⵠᐃ.ᐃⲆΔⵠᐃⵠΔ = ᐃⲆ;
			Ⲇⵠᐃ.ⵠⵠⲆΔᐃⲆⲆ = ⵠᐃΔᐃⲆ("by " + ⵠΔⵠ.ΔⵠΔ, ⵠ[43], ⵠ[290], 40, 500, ⲆⵠᐃΔⲆ, 30, 24, undefined, undefined, undefined, ΔⵠᐃΔⵠ, ⵠ[252], 24);
			Ⲇⵠᐃ.ᐃⵠᐃᐃᐃᐃⲆ = ⵠᐃΔᐃⲆ(ⵠΔⵠ.name, ⵠ[43], ⵠ[290], 60, 600, ΔᐃΔᐃⲆ, 30, 24, ᐃⲆᐃΔΔ, undefined, undefined, undefined, ⵠ[252], 20)
		};
		this.ᐃΔΔⵠⵠ = ΔⲆᐃⲆ;
		this.ᐃⲆΔⲆⲆΔΔ = Ⲇᐃⵠᐃ;
		this.ΔⵠΔΔⵠⲆΔ = ⵠⲆⲆᐃ;
		this.ⲆΔᐃⵠΔΔΔ = ΔⲆⵠ;
		this.ⵠⲆⵠⲆⵠΔⲆ = ΔΔᐃ;
		this.ⵠⵠⲆΔᐃⲆⲆ = ⵠᐃΔᐃΔ;
		this.ᐃⵠᐃᐃᐃᐃⲆ = ᐃᐃΔⲆⲆ;
		var ᐃⵠⲆΔΔᐃΔⵠΔ = 262 - 260 / ᐃΔⲆΔ;
		var ᐃᐃⲆⲆⵠΔΔⵠⲆ = -260 / 4;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃᐃⵠⵠⲆᐃ, ᐃⲆᐃᐃ, -1542 / ᐃΔⲆΔ, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠᐃⲆⵠⵠᐃΔ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			[ⵠ[386], ΔᐃΔⵠᐃ * 3],
			[ⵠ[507], 10 * ΔᐃΔⵠᐃ],
			[ⵠ[169], ΔᐃΔⵠᐃ * 30],
			[ⵠ[523], ΔᐃΔⵠᐃ * 57]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / ᐃΔΔΔ, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠᐃⲆⵠⵠᐃΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠⲆᐃⵠⵠΔⵠ, ᐃⲆᐃᐃ, -1542 / ⵠⲆᐃᐃ, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⲆΔⵠⲆⲆᐃ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			["#d33a2a", 3 * ΔᐃΔⵠᐃ],
			[ⵠ[386], ΔᐃΔⵠᐃ * 10],
			[ⵠ[507], ΔᐃΔⵠᐃ * 30],
			[ⵠ[169], 57 * ΔᐃΔⵠᐃ]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / ⲆⵠⲆΔⲆ, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⲆΔⵠⲆⲆᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠΔΔⲆᐃᐃΔ, ᐃⲆᐃᐃ, -1542 / ⵠΔΔᐃ, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ᐃΔᐃᐃⲆⲆⲆ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			[ⵠ[507], ΔᐃΔⵠᐃ * 3],
			[ⵠ[169], 10 * ΔᐃΔⵠᐃ],
			[ⵠ[523], ΔᐃΔⵠᐃ * 30],
			["#d88e23", 57 * ΔᐃΔⵠᐃ]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / 4, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ᐃΔᐃᐃⲆⲆⲆ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆᐃⵠΔᐃⵠ, ᐃⲆᐃᐃ, -1542 / 4, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔᐃΔⲆᐃᐃ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			[ⵠ[386], ΔᐃΔⵠᐃ * 3],
			[ⵠ[507], ΔᐃΔⵠᐃ * ᐃᐃⵠᐃΔ],
			[ⵠ[169], ΔᐃΔⵠᐃ * 30],
			[ⵠ[523], ΔᐃΔⵠᐃ * 57]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / 4, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔᐃΔⲆᐃᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠᐃΔⲆΔᐃⲆ, ᐃⲆᐃᐃ, -1542 / ᐃΔᐃΔ, 150, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔⵠⵠᐃᐃΔᐃ;
		var ⵠΔⲆᐃᐃ = this.ⲆᐃⲆⲆⲆⲆᐃ([
			["#d33a2a", ΔᐃΔⵠᐃ * ᐃᐃⵠᐃ],
			[ⵠ[386], ΔᐃΔⵠᐃ * ᐃᐃⲆᐃᐃ],
			[ⵠ[507], 30 * ΔᐃΔⵠᐃ],
			[ⵠ[169], ΔᐃΔⵠᐃ * 57]
		]);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠΔⲆᐃᐃ, ᐃⲆᐃᐃ, -ⵠΔⲆᐃᐃ.width / ⲆⲆⲆⵠᐃ, 178, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔⵠⵠᐃᐃΔᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠⲆΔⲆᐃᐃⲆ, ᐃⲆᐃᐃ, -1366 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⵠⵠΔⲆⵠΔ, ᐃⲆᐃᐃ, -1366 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔᐃΔΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ᐃⲆᐃᐃΔⵠΔ, ᐃⲆᐃᐃ, -1366 / ᐃΔᐃⲆⵠ, ᐃⲆⵠᐃⲆ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⵠᐃΔᐃⲆΔ, ᐃⲆᐃᐃ, -1366 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠⵠΔⲆᐃΔⵠ, ᐃⲆᐃᐃ, -1366 / 4, 100, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆΔⵠⲆΔᐃⵠ, ᐃⲆᐃᐃ, -1366 / ⵠᐃᐃⲆ, ⵠᐃⵠⵠΔ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔΔΔⵠΔ;
		ΔⵠⵠΔᐃΔⵠ = Δᐃ++;
		this.ⵠΔⲆᐃ[ΔⵠⵠΔᐃΔⵠ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⵠⵠΔᐃΔⵠ, ᐃⲆᐃᐃ, 908 / ᐃⲆⲆΔ + 30, 0, Ⲇᐃᐃⵠ);
		ΔᐃΔⵠᐃⵠᐃ = Δᐃ++;
		this.ⵠΔⲆᐃ[ΔᐃΔⵠᐃⵠᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃΔⵠᐃⵠᐃ, ᐃⲆᐃᐃ, 908 / ⵠΔⵠᐃ + 298.5 + 60, ΔΔᐃ, Ⲇᐃᐃⵠ);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆⲆⲆΔⵠⵠⲆ, ᐃⲆᐃᐃ, -758 / 4, -ⵠΔⲆⲆΔ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔⲆᐃⲆⵠⲆᐃ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⲆΔᐃΔΔΔⲆ, ᐃⲆᐃᐃ, -758 / ᐃΔⲆΔ, -ⲆᐃΔΔΔ, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔⵠⲆⵠᐃⲆΔ;
		ᐃⵠΔⲆᐃᐃⵠ = Δᐃ++;
		this.ⵠΔⲆᐃ[ᐃⵠΔⲆᐃᐃⵠ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔᐃⵠⵠⵠⲆᐃ, ⲆΔΔⲆ, 93, 30, Ⲇᐃᐃⵠ);
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ⵠΔⲆⲆⲆⵠⵠ, ᐃⲆᐃᐃ, -692 / 4, 110, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ΔⲆⵠΔⲆⲆⲆ;
		this.ⵠΔⲆᐃ[Δᐃ] = ᐃⲆⲆⵠ(ⵠᐃ.ΔⲆⵠᐃΔᐃⲆ, ᐃⲆᐃᐃ, -692 / 4, 110, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ);
		this.ⵠΔⲆᐃ[Δᐃ++].view = ⲆΔⵠᐃΔⲆΔ;
		Δᐃ = ⲆⵠⲆ;
		this.buttons = [];
		this.buttons[Δᐃ] = ΔΔⲆ(50, 57, "", [ⵠᐃ.ᐃΔⵠΔΔᐃΔ, ⵠᐃ.ΔΔⲆⵠᐃᐃⲆ, ⵠᐃ.ⵠⵠᐃΔΔⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			if (Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ()) ᐃⵠΔᐃ(ⵠⵠΔⲆⲆ);
			else ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), 320, ⵠᐃⲆᐃ, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		Δᐃ++;
		if (ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300) this.buttons[Δᐃ] = ΔΔⲆ(202, 97, "", [ⵠᐃ.ΔⲆⲆⵠΔᐃΔ, ⵠᐃ.ⲆⲆΔᐃⲆⲆΔ, ⵠᐃ.ᐃⵠΔⲆⲆΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, this.ⵠΔΔⲆⲆᐃΔ, 462, 235, Ⲇᐃᐃⵠ | ⵠⲆⵠΔ, ⲆΔΔⲆ);
		else this.buttons[Δᐃ] = ΔΔⲆ(202, 97, "", [ⵠᐃ.ΔⲆⲆⵠΔᐃΔ, ⵠᐃ.ⲆⲆΔᐃⲆⲆΔ, ⵠᐃ.ᐃⵠΔⲆⲆΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, this.ⵠΔΔⲆⲆᐃΔ, 74, 235, Ⲇᐃᐃⵠ | ⵠⲆΔᐃ, ⲆΔΔⲆ);
		this.buttons[Δᐃ].view = ⲆⲆⵠⲆᐃ;
		Δᐃ++;
		if (1300 < ⲆⲆⲆⲆᐃᐃᐃ.innerWidth) {
			this.buttons[Δᐃ] = ΔΔⲆ(355, 168, "", [ⵠᐃ.ᐃᐃⵠΔᐃⲆΔ, ⵠᐃ.ᐃᐃⵠΔᐃⲆΔ, ⵠᐃ.ᐃᐃⵠΔᐃⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("./changelog.html", ⵠ[354])
			}), -195, -115, ⲆᐃᐃⵠⲆᐃⵠ | ⵠⲆΔᐃ, ⲆΔΔⲆ);
			this.buttons[Δᐃ++].view = ⲆⲆⵠⲆᐃ;
			this.buttons[Δᐃ] = ΔΔⲆ(355, 168, "", [ⵠᐃ.Δᐃⵠⵠⵠⵠᐃ, ⵠᐃ.Δᐃⵠⵠⵠⵠᐃ, ⵠᐃ.Δᐃⵠⵠⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://taming.io", ⵠ[354])
			}), ΔⲆᐃⲆⲆΔⵠ, -115, ⲆᐃᐃⵠⲆᐃⵠ | ⵠⲆΔᐃ, ⲆΔΔⲆ);
			this.buttons[Δᐃ++].view = ⲆⲆⵠⲆᐃ
		}
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ΔᐃᐃΔⲆᐃΔ, ⵠᐃ.ᐃⵠΔᐃⵠⵠΔ, ⵠᐃ.ⲆΔΔᐃΔᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://lapamauve.creator-spring.com/", ⵠ[354])
		}), 380, ᐃᐃⲆᐃᐃ, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ᐃⲆⵠⵠⲆⲆᐃ, ⵠᐃ.ⵠΔᐃΔⲆᐃΔ, ⵠᐃ.ᐃⲆΔⵠᐃⵠⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://discord.gg/starveio", ⵠ[354])
		}), 330, 10, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ⵠⵠⵠⲆᐃᐃᐃ, ⵠᐃ.ᐃᐃⵠⲆⲆᐃⲆ, ⵠᐃ.ⵠᐃⵠⲆᐃⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://reddit.com/r/starveio", ⵠ[354])
		}), 280, ⲆⵠⲆⵠᐃ, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ΔⲆⲆⵠⲆΔΔ, ⵠᐃ.ⵠⵠⵠⲆⲆⵠΔ, ⵠᐃ.ⲆⲆⲆⲆⲆΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://starveiopro.wikia.com/wiki/", ⵠ[354])
		}), 230, ᐃⵠⲆᐃⵠ, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ᐃΔΔⵠΔⵠⲆ, ⵠᐃ.ⲆⲆᐃⲆΔⵠⵠ, ⵠᐃ.ᐃⵠᐃΔⲆΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://www.facebook.com/LapaMauve/", ⵠ[354])
		}), 155, ΔΔⵠᐃⵠ, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ᐃⵠᐃⵠᐃᐃⲆ, ⵠᐃ.ⵠⵠⵠᐃⵠᐃⲆ, ⵠᐃ.ⲆⲆⲆⲆⵠΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://twitter.com/lapamauve", ⵠ[354])
		}), 105, 10, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(80, 80, "", [ⵠᐃ.ⲆⲆⲆᐃⲆΔⵠ, ⵠᐃ.ΔⲆᐃᐃⲆⲆᐃ, ⵠᐃ.ΔⲆⵠΔΔⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://www.youtube.com/@lapamauveofficial", ⵠ[354])
		}), 55, 10, ⲆᐃᐃΔⲆ, ⲆΔΔⲆ);
		ⲆⵠⲆΔⲆᐃⲆ = Δᐃ++;
		this.buttons[ⲆⵠⲆΔⲆᐃⲆ] = ΔΔⲆ(232, 142, "", [ⵠᐃ.ΔΔⲆᐃⲆᐃΔ, ⵠᐃ.ᐃⲆΔΔᐃΔᐃ, ⵠᐃ.ⲆⲆᐃⲆⲆΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆⲆⲆΔᐃ);
			ᐃΔΔⲆᐃ(ᐃᐃΔΔ.ΔΔⵠΔⲆⲆⲆ, ᐃᐃΔΔ.ΔⵠⲆᐃᐃᐃⵠ, ᐃᐃΔΔ.ⵠΔᐃΔᐃᐃⵠ, ᐃᐃΔΔ.ⵠΔⲆⲆⲆΔⲆ)
		}), -5, 573, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ⲆⲆΔΔⲆᐃΔ, ⵠᐃ.ⲆⲆΔΔⲆᐃΔ, ⵠᐃ.ⲆⲆΔΔⲆᐃΔ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ⲆⲆⲆΔᐃ)
		}), -5, 566, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ⲆᐃⵠⲆⲆⵠⲆ = Δᐃ++;
		this.buttons[ⲆᐃⵠⲆⲆⵠⲆ] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃΔΔᐃⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⲆᐃⲆ, ⵠᐃ.ⵠΔΔΔⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔΔⵠⵠⲆΔ)
		}), -ᐃᐃⲆᐃΔ, 494, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ΔΔᐃΔⵠⲆⲆ, ⵠᐃ.ΔΔᐃΔⵠⲆⲆ, ⵠᐃ.ΔΔᐃΔⵠⲆⲆ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ΔΔΔⵠⵠⲆΔ)
		}), -5, 494, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ΔᐃΔΔⵠⵠⲆ = Δᐃ++;
		this.buttons[ΔᐃΔΔⵠⵠⲆ] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃΔΔᐃⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⲆᐃⲆ, ⵠᐃ.ⵠΔΔΔⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			if (Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ()) {
				ᐃᐃΔΔ.ᐃΔᐃⵠⵠΔΔ - Date.now() > 0 ? ᐃⵠΔᐃ(ᐃΔᐃΔⲆ) : ᐃⵠΔᐃ(ΔΔΔᐃⵠ)
			} else ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -5, 415, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ⲆΔΔⲆΔΔᐃ, ⵠᐃ.ⲆΔΔⲆΔΔᐃ, ⵠᐃ.ⲆΔΔⲆΔΔᐃ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			if (Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ()) {
				ᐃᐃΔΔ.ᐃΔᐃⵠⵠΔΔ - Date.now() > 0 ? ᐃⵠΔᐃ(ᐃΔᐃΔⲆ) : ᐃⵠΔᐃ(ΔΔΔᐃⵠ)
			} else ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -ⲆᐃᐃΔ, 415, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ⲆΔⲆΔⵠΔᐃ = Δᐃ++;
		this.buttons[ⲆΔⲆΔⵠΔᐃ] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃΔΔᐃⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⲆᐃⲆ, ⵠᐃ.ⵠΔΔΔⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), -ⲆᐃΔΔΔ, 336, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ⲆΔΔᐃⵠⵠⵠ, ⵠᐃ.ⲆΔΔᐃⵠⵠⵠ, ⵠᐃ.ⲆΔΔᐃⵠⵠⵠ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), -5, 336, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ⵠΔⵠⵠΔⵠⲆ = Δᐃ++;
		this.buttons[ⵠΔⵠⵠΔⵠⲆ] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃΔΔᐃⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⲆᐃⲆ, ⵠᐃ.ⵠΔΔΔⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -5, 257, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃᐃᐃΔΔΔⵠ, ⵠᐃ.ᐃᐃᐃΔΔΔⵠ, ⵠᐃ.ᐃᐃᐃΔΔΔⵠ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -5, 257, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ΔⵠⵠⲆᐃⲆᐃ = Δᐃ++;
		this.buttons[ΔⵠⵠⲆᐃⲆᐃ] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ᐃΔΔᐃⵠΔΔ, ⵠᐃ.ΔⲆⲆⵠⲆᐃⲆ, ⵠᐃ.ⵠΔΔΔⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆⲆⵠⲆᐃ)
		}), -ⲆΔⵠᐃ, 178, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++] = ΔΔⲆ(236, 165, "", [ⵠᐃ.ⲆⲆᐃⵠᐃⵠⵠ, ⵠᐃ.ⲆⲆᐃⵠᐃⵠⵠ, ⵠᐃ.ⲆⲆᐃⵠᐃⵠⵠ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ⲆⲆⵠⲆᐃ)
		}), -ⲆΔⵠᐃ, 178, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ΔⵠⲆΔᐃΔΔ = Δᐃ++;
		this.ΔⵠⲆΔᐃΔΔ = ΔⵠⲆΔᐃΔΔ;
		this.buttons[ΔⵠⲆΔᐃΔΔ] = ΔΔⲆ(324, 222, "", [ⵠᐃ.ᐃᐃⵠΔᐃΔⵠ, ⵠᐃ.ⲆⲆᐃⲆᐃⵠⲆ, ⵠᐃ.ⲆⵠⲆᐃⵠΔᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), ΔⲆᐃⲆ, 70, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		ⵠΔΔᐃⲆΔᐃ = Δᐃ++;
		ΔⵠΔᐃΔⵠᐃ = Δᐃ++;
		this.ⵠΔΔᐃⲆΔᐃ = ⵠΔΔᐃⲆΔᐃ;
		this.ΔⵠΔᐃΔⵠᐃ = ΔⵠΔᐃΔⵠᐃ;
		this.buttons[ⵠΔΔᐃⲆΔᐃ] = ΔΔⲆ(324, 222, "", [ⵠᐃ.ⲆΔᐃΔΔᐃᐃ, ⵠᐃ.ⲆᐃΔᐃⲆⲆⵠ, ⵠᐃ.ⵠΔΔᐃΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⵠΔΔΔ);
			ΔΔΔΔᐃ(-1)
		}), 0, 70, ⵠⲆⵠΔ, ᐃⲆᐃᐃ);
		this.buttons[ΔⵠΔᐃΔⵠᐃ] = ΔΔⲆ(324, 222, "", [ⵠᐃ.ⵠⲆⲆᐃΔⲆᐃ, ⵠᐃ.ⵠⲆⲆᐃΔⲆᐃ, ⵠᐃ.ⵠⲆⲆᐃΔⲆᐃ], ΔⲆⲆⵠ, ⵠⵠⲆΔΔⲆⵠ, (function() {
			ᐃⵠΔᐃ(ⵠⵠΔΔΔ);
			ΔΔΔΔᐃ(-1)
		}), ⵠᐃⲆᐃ, 70, ⵠⲆⵠΔ, ᐃⲆᐃᐃ);
		if (ᐃΔᐃⵠ.ⲆΔⵠⵠΔⵠᐃ === ΔⲆⵠ) {
			var ᐃⵠΔΔⲆ = Δᐃ++;
			if (1300 > ⲆⲆⲆⲆᐃᐃᐃ.innerWidth) this.buttons[ᐃⵠΔΔⲆ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔⵠᐃⲆᐃⵠΔ, ⵠᐃ.ᐃⵠⵠΔᐃⲆⲆ, ⵠᐃ.ⵠᐃΔⲆΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ)
			}), 150, 300, ⵠⲆⵠΔ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			else this.buttons[ᐃⵠΔΔⲆ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔⵠᐃⲆᐃⵠΔ, ⵠᐃ.ᐃⵠⵠΔᐃⲆⲆ, ⵠᐃ.ⵠᐃΔⲆΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ)
			}), -340, 100, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ᐃⵠΔΔⲆ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ᐃⵠΔΔⲆ].hint = ⵠⵠᐃᐃΔ;
			var ᐃⵠⵠΔᐃ = Δᐃ++;
			if (1300 > ⲆⲆⲆⲆᐃᐃᐃ.innerWidth) this.buttons[ᐃⵠⵠΔᐃ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ⵠᐃⲆⲆⵠᐃΔ, ⵠᐃ.ⵠΔΔⲆΔᐃⵠ, ⵠᐃ.ᐃΔᐃΔⲆᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ᐃΔⲆⵠⵠ)
			}), 150, 400, ⵠⲆⵠΔ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			else this.buttons[ᐃⵠⵠΔᐃ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ⵠᐃⲆⲆⵠᐃΔ, ⵠᐃ.ⵠΔΔⲆΔᐃⵠ, ⵠᐃ.ᐃΔᐃΔⲆᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ᐃΔⲆⵠⵠ)
			}), -340, 200, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ᐃⵠⵠΔᐃ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ᐃⵠⵠΔᐃ].hint = 0;
			var ⵠⲆⵠⲆⵠ = Δᐃ++;
			if (ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300) this.buttons[ⵠⲆⵠⲆⵠ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔΔΔⲆⵠᐃⲆ, ⵠᐃ.ⲆΔΔⵠᐃΔΔ, ⵠᐃ.ⲆᐃⲆΔΔᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ)
			}), 450, 300, ⵠⲆⵠΔ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			else this.buttons[ⵠⲆⵠⲆⵠ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔΔΔⲆⵠᐃⲆ, ⵠᐃ.ⲆΔΔⵠᐃΔΔ, ⵠᐃ.ⲆᐃⲆΔΔᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⵠⲆⵠⲆⵠ)
			}), -340, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ⵠⲆⵠⲆⵠ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ⵠⲆⵠⲆⵠ].hint = ⵠⵠᐃⵠ;
			var ΔᐃᐃᐃΔ = Δᐃ++;
			1300 > ⲆⲆⲆⲆᐃᐃᐃ.innerWidth ? this.buttons[ΔᐃᐃᐃΔ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ⵠΔᐃᐃᐃΔᐃ, ⵠᐃ.ⲆⵠⵠΔΔⲆᐃ, ⵠᐃ.ᐃⲆᐃᐃᐃᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ᐃᐃΔᐃⲆ)
			}), 300, 300, ⵠⲆⵠΔ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ) : this.buttons[ΔᐃᐃᐃΔ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ⵠΔᐃᐃᐃΔᐃ, ⵠᐃ.ⲆⵠⵠΔΔⲆᐃ, ⵠᐃ.ᐃⲆᐃᐃᐃᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ᐃᐃΔᐃⲆ)
			}), 204, 100, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ΔᐃᐃᐃΔ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ΔᐃᐃᐃΔ].hint = 0;
			var ⲆΔⲆᐃⵠ = Δᐃ++;
			if (ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300) this.buttons[ⲆΔⲆᐃⵠ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔⵠⲆⲆⲆΔΔ, ⵠᐃ.Ⲇⵠⵠⵠⵠᐃⵠ, ⵠᐃ.ᐃᐃᐃⵠΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ)
			}), 300, 400, ⵠⲆⵠΔ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			else this.buttons[ⲆΔⲆᐃⵠ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ΔⵠⲆⲆⲆΔΔ, ⵠᐃ.Ⲇⵠⵠⵠⵠᐃⵠ, ⵠᐃ.ᐃᐃᐃⵠΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ)
			}), 204, 200, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ⲆΔⲆᐃⵠ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ⲆΔⲆᐃⵠ].hint = 0;
			var ᐃΔΔⵠΔ = Δᐃ++;
			this.buttons[ᐃΔΔⵠΔ] = ΔΔⲆ(266, 176, "", [ⵠᐃ.ⲆᐃᐃⲆΔⲆⲆ, ⵠᐃ.ᐃᐃⵠⲆᐃⲆᐃ, ⵠᐃ.ΔⲆᐃⵠⲆⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
				ᐃΔᐃⵠ.ᐃⵠΔΔΔ(ⲆⵠΔΔ.ᐃΔΔⵠΔ)
			}), ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? 450 : 204, ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? 400 : 300, (ⲆⲆⲆⲆᐃᐃᐃ.innerWidth < 1300 ? ⵠⲆⵠΔ : ⵠⲆΔᐃ) | Ⲇᐃᐃⵠ, ⲆΔΔⲆ);
			this.buttons[ᐃΔΔⵠΔ].view = ⲆⲆⵠⲆᐃ;
			this.buttons[ᐃΔΔⵠΔ].hint = 0
		}
		this.buttons[Δᐃ] = ΔΔⲆ(87, 78, "", [ⵠᐃ.ⲆⵠⲆΔᐃᐃⲆ, ⵠᐃ.ΔⵠΔΔⵠᐃⲆ, ⵠᐃ.ⵠᐃⵠΔᐃΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔ.ΔⲆΔᐃᐃᐃᐃᐃᐃ();
			ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ === ᐃΔⵠⵠ ? ᐃⵠΔᐃ(ⲆΔⵠᐃΔⲆΔ) : ᐃⵠΔᐃ(ΔⲆⵠΔⲆⲆⲆ)
		}), 127, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(87, 78, "", [ⵠᐃ.ᐃΔⲆⲆΔᐃⲆ, ⵠᐃ.ⲆᐃⲆΔⵠⵠᐃ, ⵠᐃ.ⲆⵠᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			const ΔᐃᐃᐃⲆ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[325]]("textarea");
			ΔᐃᐃᐃⲆ.value = ⲆⵠᐃᐃΔ;
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[173]][ⲆⵠΔᐃᐃᐃΔ[236]](ΔᐃᐃᐃⲆ);
			ΔᐃᐃᐃⲆ.select();
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[328]]("copy");
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[173]][ⲆⵠΔᐃᐃᐃΔ[299]](ΔᐃᐃᐃⲆ)
		}), 182, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(87, 78, "", [ⵠᐃ.ⲆᐃⵠⵠⲆΔᐃ, ⵠᐃ.ᐃⵠᐃⵠᐃᐃΔ, ⵠᐃ.ⲆΔᐃⲆⵠⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⵠⲆⲆᐃⲆⵠⲆⲆΔ()
		}), 255, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(58, 64, "", [ⵠᐃ.ⲆᐃᐃⲆᐃᐃᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃⲆⵠ, ⵠᐃ.ᐃⵠΔΔⵠⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆⲆⵠⲆᐃ)
		}), 189, 118, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(497, 72, "", [ⵠᐃ.ᐃⵠᐃΔᐃⲆᐃ, ⵠᐃ.ⵠⵠⲆΔⵠⲆΔ, ⵠᐃ.ⲆⵠⵠⵠΔⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔⵠᐃᐃᐃⲆᐃ()
		}), -130, 390, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(497, 72, "", [ⵠᐃ.ⲆΔⲆⲆᐃᐃΔ, ⵠᐃ.ⵠᐃⲆᐃⵠΔⵠ, ⵠᐃ.ⵠⲆⲆⲆⵠᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⲆⲆⲆᐃΔⵠΔⵠ()
		}), -130, 430, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔΔ;
		ΔⵠⲆᐃΔⲆΔ = 2e4;

		function ᐃⲆΔᐃⵠⲆΔ(ⵠⲆⲆᐃᐃ) {
			var ⲆΔⵠⵠΔ = ᐃᐃΔΔ.ⵠⵠΔΔΔᐃΔ(ⵠⲆⲆᐃᐃ);
			var ΔᐃΔᐃᐃᐃⲆ = ⲆΔⵠⵠΔ * ⲆΔⵠⵠΔ * ΔⵠⲆᐃΔⲆΔ;
			var ΔⲆΔⵠⲆⵠⲆΔΔ = (ⲆΔⵠⵠΔ + ᐃⵠⵠ) * (ⲆΔⵠⵠΔ + 1) * ΔⵠⲆᐃΔⲆΔ - ΔᐃΔᐃᐃᐃⲆ;
			ⵠⲆⲆᐃᐃ -= ΔᐃΔᐃᐃᐃⲆ;
			return ⵠⲆⲆᐃᐃ / ΔⲆΔⵠⲆⵠⲆΔΔ
		}
		this.ᐃⲆΔᐃⵠⲆΔ = ᐃⲆΔᐃⵠⲆΔ;

		function ⵠⵠΔΔΔᐃΔ(ⵠⲆⲆᐃᐃ) {
			return Math.floor(Math.sqrt(ⵠⲆⲆᐃᐃ / ΔⵠⲆᐃΔⲆΔ))
		}
		this.ⵠⵠΔΔΔᐃΔ = ⵠⵠΔΔΔᐃΔ;
		this.ΔᐃⵠΔᐃⵠⲆᐃΔ = function(ⵠⲆⲆᐃᐃ) {
			ᐃᐃΔΔ.ⲆΔⵠⵠΔ = ᐃᐃΔΔ.ⵠⵠΔΔΔᐃΔ(ⵠⲆⲆᐃᐃ);
			ᐃᐃΔΔ.ⵠᐃΔⵠᐃⲆᐃ = ᐃᐃΔΔ.ᐃⲆΔᐃⵠⲆΔ(ⵠⲆⲆᐃᐃ);
			ᐃᐃΔΔ.ⵠᐃᐃΔⲆΔⵠ = 0;
			ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ = ⵠⲆⲆᐃᐃ
		};

		function ΔΔΔΔᐃ(ⲆΔ, ⵠΔΔⲆⲆ) {
			if (ⵠΔΔⲆⲆ !== undefined) {
				ᐃᐃΔΔ.ⵠᐃⵠᐃⵠⲆΔ = ⵠΔΔⲆⲆ;
				var ΔⲆⲆᐃΔ = ᐃᐃΔΔ.ⵠΔᐃᐃᐃⲆⲆ[ⵠΔΔⲆⲆ];
				ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ = ΔⲆⲆᐃΔ[ⵠ[289]];
				ᐃᐃΔΔ.ᐃᐃⲆⲆⲆΔⲆ = ΔⲆⲆᐃΔ["kill"];
				ᐃᐃΔΔ.ΔΔΔΔⵠΔⵠ = ΔⲆⲆᐃΔ["death"];
				ᐃᐃΔΔ.time = ΔⲆⲆᐃΔ[ⵠ[448]];
				ᐃᐃΔΔ.ᐃⲆⵠᐃᐃᐃⲆ = ΔⲆⲆᐃΔ["bestScore"];
				ᐃᐃΔΔ.ΔΔⵠΔΔⵠⵠ = ΔⲆⲆᐃΔ["bestKill"];
				ᐃᐃΔΔ.ⵠᐃᐃᐃⵠⲆΔ = ΔⲆⲆᐃΔ["bestTime"];
				ᐃᐃΔΔ.ΔᐃΔⲆᐃᐃⲆ = ΔⲆⲆᐃΔ["scoreTotal"]
			}
			ⲆΔ === ⲆⵠᐃΔⲆ && (ⲆΔ = ᐃᐃΔΔ.ⲆⵠⵠᐃⲆΔⲆ);
			ᐃᐃΔΔ.ⲆⵠⵠᐃⲆΔⲆ = ⲆΔ;
			if (ΔⵠⲆΔ <= ⲆΔ) {
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_time")[ⲆⵠΔᐃᐃᐃΔ[359]] = ᐃᐃΔΔ.ⵠᐃᐃᐃⵠⲆΔ[ⲆΔ];
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_kill")[ⲆⵠΔᐃᐃᐃΔ[359]] = ᐃᐃΔΔ.ΔΔⵠΔΔⵠⵠ[ⲆΔ];
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_score")[ⲆⵠΔᐃᐃᐃΔ[359]] = ᐃᐃΔΔ.ᐃⲆⵠᐃᐃᐃⲆ[ⲆΔ]
			} else {
				var ᐃᐃⲆⲆⲆΔⲆ = ⵠⵠᐃⵠ;
				for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ᐃᐃΔΔ.ᐃᐃⲆⲆⲆΔⲆ.length; ᐃⲆ++) ᐃᐃⲆⲆⲆΔⲆ += ᐃᐃΔΔ.ᐃᐃⲆⲆⲆΔⲆ[ᐃⲆ];
				var ⵠᐃΔ = 0;
				for (var ᐃⲆ = Δⵠⵠ; ᐃⲆ < ᐃᐃΔΔ.time.length; ᐃⲆ++) ⵠᐃΔ += ᐃᐃΔΔ.time[ᐃⲆ];
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_time")[ⲆⵠΔᐃᐃᐃΔ[359]] = ⵠᐃΔ;
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_kill")[ⲆⵠΔᐃᐃᐃΔ[359]] = ᐃᐃⲆⲆⲆΔⲆ;
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("stats_box_score")[ⲆⵠΔᐃᐃᐃΔ[359]] = ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ
			}
		}
		this.ΔⵠⲆᐃΔᐃΔⵠⲆ = function(ⲆⲆⲆΔ) {
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ΔⵠⲆΔᐃΔΔ].info.active = ⵠⲆⲆᐃ;
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ⵠΔΔᐃⲆΔᐃ].info.active = ΔΔⵠΔⵠ;
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ΔⵠΔᐃΔⵠᐃ].info.active = 1;
			ᐃⵠΔⵠᐃⲆΔ();
			if (-1 === ⲆⲆⲆΔ[ⵠ[425]].indexOf("Starver#")) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]).value = ⲆⲆⲆⲆᐃᐃᐃ["decodeURIComponent"](ⲆⲆⲆⲆᐃᐃᐃ["escape"](ⲆⲆⲆⲆᐃᐃᐃ["atob"](ⲆⲆⲆΔ[ⵠ[425]])));
			else document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]).value = ⲆⲆⲆΔ[ⵠ[425]];
			ᐃᐃΔΔ.ΔⲆⲆⵠΔ = ⲆⲆⲆΔ["bread"];
			var ⵠΔᐃᐃᐃⲆⲆ = ⲆⲆⲆΔ["seasons"];
			var ΔⲆⲆᐃΔ = ⵠΔᐃᐃᐃⲆⲆ[ⵠΔᐃᐃᐃⲆⲆ.length - ᐃΔⲆⵠ];
			ᐃᐃΔΔ.ⵠΔᐃᐃᐃⲆⲆ = ⵠΔᐃᐃᐃⲆⲆ;
			Ⲇⵠᐃ.ΔᐃⵠΔᐃⵠⲆᐃΔ(ΔⲆⲆᐃΔ[ⵠ[289]]);
			ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ = ΔⲆⲆᐃΔ[ⵠ[289]];
			ᐃᐃΔΔ.ᐃᐃⲆⲆⲆΔⲆ = ΔⲆⲆᐃΔ["kill"];
			ᐃᐃΔΔ.ΔΔΔΔⵠΔⵠ = ΔⲆⲆᐃΔ["death"];
			ᐃᐃΔΔ.time = ΔⲆⲆᐃΔ[ⵠ[448]];
			ᐃᐃΔΔ.ᐃⲆⵠᐃᐃᐃⲆ = ΔⲆⲆᐃΔ["bestScore"];
			ᐃᐃΔΔ.ΔΔⵠΔΔⵠⵠ = ΔⲆⲆᐃΔ["bestKill"];
			ᐃᐃΔΔ.ⵠᐃᐃᐃⵠⲆΔ = ΔⲆⲆᐃΔ["bestTime"];
			ᐃᐃΔΔ.ΔᐃΔⲆᐃᐃⲆ = ΔⲆⲆᐃΔ["scoreTotal"];
			ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ = ⲆⲆⲆΔ["firstName"];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[167]).value = ⲆⲆⲆΔ["privateServerRegion"] + ⵠ[369] + ⲆⲆⲆΔ["privateServer"];
			if (ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ === undefined) ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ = 0;
			ᐃᐃΔΔ.ᐃΔᐃⵠⵠΔΔ = Date.now() + ⲆⲆⲆΔ["privateServerTime"];
			if (ⲆⵠⲆ < Number(ⲆⲆⲆΔ["privateServerTime"])) ᐃᐃΔΔ.ᐃΔᐃⵠⵠΔΔ = Date.now() + Number(ⲆⲆⲆΔ["privateServerTime"]);
			ᐃᐃΔΔ.ⲆⲆΔⲆΔ = Date.now() + ⲆⲆⲆΔ[ⵠ[32]];
			if (ⵠᐃⲆᐃ < Number(ⲆⲆⲆΔ[ⵠ[32]])) ᐃᐃΔΔ.ⲆⲆΔⲆΔ = Date.now() + Number(ⲆⲆⲆΔ[ⵠ[32]]);
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ;
			for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < ⲆⲆⲆΔ["skins"].length; ᐃⲆ++) {
				var ⵠⵠΔ = ⲆⲆⲆΔ["skins"][ᐃⲆ];
				if (ⵠⵠΔ > 0) {
					for (var ΔΔΔ = 0; ΔΔᐃΔᐃ.length > ΔΔΔ; ΔΔΔ++) {
						ΔΔᐃΔᐃ[ΔΔΔ].id === ᐃⲆ && (Ⲇⵠᐃ.unlock.ᐃᐃᐃΔ[ΔΔΔ] = 1)
					}
				}
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ;
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆⲆⲆΔ["accessories"].length; ᐃⲆ++) {
				var ⵠⵠΔ = ⲆⲆⲆΔ["accessories"][ᐃⲆ];
				if (ⲆⲆⲆ < ⵠⵠΔ) {
					for (var ΔΔΔ = ᐃⵠΔ; ΔΔᐃΔᐃ.length > ΔΔΔ; ΔΔΔ++) {
						if (ΔΔᐃΔᐃ[ΔΔΔ].id === ᐃⲆ) Ⲇⵠᐃ.unlock.ᐃᐃᐃⲆⵠ[ΔΔΔ] = ⵠⵠⲆΔ
					}
				}
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ;
			for (var ᐃⲆ = 0; ᐃⲆ < ⲆⲆⲆΔ["books"].length; ᐃⲆ++) {
				var ⵠⵠΔ = ⲆⲆⲆΔ["books"][ᐃⲆ];
				if (ⵠⵠΔ > 0) {
					for (var ΔΔΔ = 0; ΔΔᐃΔᐃ.length > ΔΔΔ; ΔΔΔ++) {
						if (ᐃⲆ === ΔΔᐃΔᐃ[ΔΔΔ].id) Ⲇⵠᐃ.unlock.ⲆΔⵠⲆⵠ[ΔΔΔ] = ΔᐃⵠΔ
					}
				}
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ⵠΔΔⵠ;
			for (var ᐃⲆ = ΔΔᐃ; ⲆⲆⲆΔ["bags"].length > ᐃⲆ; ᐃⲆ++) {
				var ⵠⵠΔ = ⲆⲆⲆΔ["bags"][ᐃⲆ];
				if (ⵠⵠΔ > ΔⲆⵠ) {
					for (var ΔΔΔ = 0; ΔΔΔ < ΔΔᐃΔᐃ.length; ΔΔΔ++) {
						ΔΔᐃΔᐃ[ΔΔΔ].id === ᐃⲆ && (Ⲇⵠᐃ.unlock.ΔⵠⵠⵠⲆ[ΔΔΔ] = ⵠⵠⲆ)
					}
				}
			}
			var ΔΔᐃΔᐃ = ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ;
			for (var ᐃⲆ = Δⵠⵠ; ᐃⲆ < ⲆⲆⲆΔ["crates"].length; ᐃⲆ++) {
				var ⵠⵠΔ = ⲆⲆⲆΔ["crates"][ᐃⲆ];
				if (ΔⲆᐃⲆ < ⵠⵠΔ) {
					for (var ΔΔΔ = 0; ΔΔᐃΔᐃ.length > ΔΔΔ; ΔΔΔ++) {
						ΔΔᐃΔᐃ[ΔΔΔ].id === ᐃⲆ && (Ⲇⵠᐃ.unlock.ΔᐃⲆⲆⲆ[ΔΔΔ] = ⲆᐃⲆⲆ, Ⲇⵠᐃ.unlock.ⲆⵠᐃΔⵠ[ΔΔΔ] = ⵠⲆⲆ)
					}
				}
			}
		};
		this.ᐃΔⵠⵠᐃⵠᐃⵠᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ = function() {
				ᐃⵠΔᐃ(ⲆⲆⵠⲆᐃ);
				ⲆΔᐃᐃⵠΔΔΔⲆ(Ⲇⵠᐃ.ΔⵠⲆᐃΔᐃΔⵠⲆ)
			};
			1 === ⲆⲆΔΔᐃΔⲆ && ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ()
		};
		ⲆⲆⲆⲆᐃᐃᐃ.ⵠⲆΔⵠΔᐃᐃⲆΔ = function() {
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ΔⵠⲆΔᐃΔΔ].info.active = 1;
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ⵠΔΔᐃⲆΔᐃ].info.active = 0;
			ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ΔⵠΔᐃΔⵠᐃ].info.active = 0;
			ᐃⵠΔᐃ(ⲆⲆⵠⲆᐃ)
		};
		this.ⲆⵠⲆᐃⵠ = function() {
			return ᐃᐃΔΔ.buttons[ᐃᐃΔΔ.ⵠΔΔᐃⲆΔᐃ].info.active
		};
		this.buttons[Δᐃ] = ΔΔⲆ(461, 105, "", [ⵠᐃ.ⲆΔΔΔⲆⲆⵠ, ⵠᐃ.ᐃⲆΔⵠᐃᐃΔ, ⵠᐃ.ⵠᐃⵠΔΔᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ᐃⵠΔᐃ(ⵠⵠΔⲆⲆ) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -100, 80, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(157, 158, "", [ⵠᐃ.Δᐃⵠᐃⵠᐃᐃ, ⵠᐃ.ⲆⲆΔᐃⲆΔΔ, ⵠᐃ.ᐃᐃⵠⵠᐃⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("https://starveiopro.wikia.com/wiki/", ⵠ[354])
		}), -35, 125, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠⵠⲆΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(66, 73, "", [ⵠᐃ.ᐃⵠᐃⲆᐃᐃΔ, ⵠᐃ.ⲆΔᐃⵠᐃⲆⲆ, ⵠᐃ.ᐃΔⲆⲆⲆΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⲆⵠⲆⵠ, -68, 340, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠⵠⲆΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(66, 73, "", [ⵠᐃ.ⲆΔᐃⵠΔᐃᐃ, ⵠᐃ.ᐃⵠΔΔᐃⵠΔ, ⵠᐃ.ᐃΔⲆⵠΔΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔⵠᐃΔⵠ, -30, 340, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠⵠⲆΔ;
		this.ⲆΔⲆᐃΔⲆⲆᐃⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(97, 66, "", [ⵠᐃ.ΔᐃΔⵠⲆⲆᐃ, ⵠᐃ.ΔⲆⵠᐃⲆΔᐃ, ⵠᐃ.ⲆᐃⲆⵠⵠΔᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ᐃⲆᐃᐃᐃ, ΔᐃΔᐃⲆ, ᐃᐃΔΔ.ⵠΔᐃΔᐃᐃⵠ)
		}), -ΔⲆΔⵠⵠΔⲆ, 151, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ΔⵠⲆⵠᐃᐃⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(135, 66, "", [ⵠᐃ.ⲆⲆⵠΔⲆᐃⲆ, ⵠᐃ.ΔⲆᐃΔⲆΔⲆ, ⵠᐃ.ᐃⵠΔⲆⲆᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, ᐃᐃⲆⵠⲆ, ᐃᐃΔΔ.ΔⵠⲆⵠᐃᐃⲆ)
		}), 37.5, 151, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ᐃⵠⲆⵠⵠⲆΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(160, 66, "", [ⵠᐃ.ⲆᐃⲆΔⵠⵠⵠ, ⵠᐃ.ᐃⵠⵠᐃΔᐃᐃ, ⵠᐃ.ΔⲆⵠᐃΔΔᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, undefined, ᐃᐃΔΔ.ᐃⵠⲆⵠⵠⲆΔ)
		}), 107.5, 151, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠΔᐃΔᐃᐃⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(207, 66, "", [ⵠᐃ.ΔΔᐃⲆⵠⵠⲆ, ⵠᐃ.ⵠΔΔᐃⲆᐃΔ, ⵠᐃ.ΔΔΔⵠΔΔᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ⵠΔΔᐃⵠ, undefined, ᐃᐃΔΔ.ⵠΔᐃΔᐃᐃⵠ)
		}), 190.5, 151, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠⲆᐃⲆᐃΔⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(144, 66, "", [ⵠᐃ.ᐃᐃⲆⲆⵠⲆΔ, ⵠᐃ.ⲆⲆⲆⵠⵠⵠⲆ, ⵠᐃ.ᐃΔⵠⵠⵠⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ᐃᐃΔΔ.ⵠⲆᐃⲆᐃΔⵠ)
		}), 103.5, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ᐃⲆᐃΔⲆⲆⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(124, 66, "", [ⵠᐃ.ⲆΔⵠⵠᐃⵠΔ, ⵠᐃ.ΔᐃⵠⲆⲆΔⵠ, ⵠᐃ.ᐃⵠᐃᐃΔΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ᐃᐃΔΔ.ᐃⲆᐃΔⲆⲆⵠ)
		}), 177.5, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ΔΔⵠΔⲆⲆⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(104, 66, "", [ⵠᐃ.ΔⵠΔⲆΔⵠΔ, ⵠᐃ.ᐃᐃᐃΔⲆⲆᐃ, ⵠᐃ.ⵠⲆΔⲆⵠΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ᐃᐃΔΔ.ΔΔⵠΔⲆⲆⲆ)
		}), 242, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⲆⵠⲆⲆⲆΔΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⲆⲆⲆᐃⵠᐃⲆ, ⵠᐃ.ⲆⲆΔᐃⵠⵠⵠ, ⵠᐃ.ⲆⵠΔΔᐃⵠΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ⲆⲆΔΔᐃ, ⵠΔⵠΔⵠ, ᐃⲆᐃΔΔ, ᐃᐃΔΔ.ⲆⵠⲆⲆⲆΔΔ)
		}), -185, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠᐃⵠᐃⲆᐃⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⲆΔⵠΔᐃⲆᐃ, ⵠᐃ.ⵠᐃᐃᐃⲆⵠⲆ, ⵠᐃ.ⵠⵠΔᐃΔΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ΔΔⵠΔΔ, ΔⲆⵠᐃᐃ, ⲆΔⲆᐃⲆ, ᐃᐃΔΔ.ⵠᐃⵠᐃⲆᐃⵠ)
		}), -149, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠⲆⵠⵠᐃΔᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ΔᐃⲆΔⵠⵠⵠ, ⵠᐃ.ΔⲆⲆⵠᐃᐃΔ, ⵠᐃ.ⵠᐃᐃⵠⲆⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ΔΔⵠⲆⵠ, undefined, undefined, ᐃᐃΔΔ.ⵠⲆⵠⵠᐃΔᐃ)
		}), -113, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ΔΔᐃΔⵠⵠᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ΔᐃⲆⲆΔⵠᐃ, ⵠᐃ.ⵠⵠⲆΔⲆΔⵠ, ⵠᐃ.ᐃⲆᐃⲆᐃⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, ᐃⲆᐃᐃᐃ, ᐃⵠⲆᐃⲆ, ᐃᐃΔΔ.ΔΔᐃΔⵠⵠᐃ)
		}), -77, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ΔΔⵠΔⲆΔⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⵠΔⲆⲆΔΔⲆ, ⵠᐃ.ᐃⲆⲆᐃᐃᐃⲆ, ⵠᐃ.ⵠΔᐃⲆΔΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, undefined, ᐃⵠⲆᐃⲆ, ᐃᐃΔΔ.ΔΔⵠΔⲆΔⲆ)
		}), -41, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⵠΔⲆⲆⲆΔⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ΔⵠⵠΔᐃΔⲆ, ⵠᐃ.ⲆΔⵠᐃⵠⲆⵠ, ⵠᐃ.ᐃⲆⵠⵠᐃⵠΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ΔᐃΔᐃⲆ, undefined, undefined, ᐃᐃΔΔ.ⵠΔⲆⲆⲆΔⲆ)
		}), -5, 528, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(232, 352, "", [ⵠᐃ.ΔⲆᐃᐃᐃⲆⵠ, ⵠᐃ.ⵠΔΔⵠΔᐃⵠ, ⵠᐃ.ⵠⵠΔⲆᐃΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(300)
		}), -330, 135, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(232, 352, "", [ⵠᐃ.ⲆⵠΔᐃΔⲆⲆ, ⵠᐃ.ⲆΔⲆΔⵠᐃᐃ, ⵠᐃ.ⵠⲆⲆᐃᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(600)
		}), -195, 135, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(243, 374, "", [ⵠᐃ.ⵠΔᐃⵠᐃⲆⲆ, ⵠᐃ.ⲆⲆΔᐃⲆΔⵠ, ⵠᐃ.ΔⲆᐃⵠⲆᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(2600)
		}), -60, 130, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(232, 352, "", [ⵠᐃ.ⵠΔΔⵠⲆⵠᐃ, ⵠᐃ.ΔⵠΔⲆΔΔᐃ, ⵠᐃ.ⵠⵠⵠⲆᐃⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(7e3)
		}), 78, 135, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(243, 374, "", [ⵠᐃ.ΔᐃΔⲆΔᐃⲆ, ⵠᐃ.ᐃΔⲆⵠᐃᐃⲆ, ⵠᐃ.ΔⲆⵠⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(2e4)
		}), 213, 130, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(58, 64, "", [ⵠᐃ.ⲆᐃᐃⲆᐃᐃᐃ, ⵠᐃ.ᐃᐃᐃⲆᐃⲆⵠ, ⵠᐃ.ᐃⵠΔΔⵠⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 300, 88, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.ᐃⵠⵠᐃΔⲆᐃ, ⵠᐃ.ΔⵠΔᐃⵠⲆⵠ, ⵠᐃ.ᐃΔᐃⵠⲆⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆⵠⲆΔᐃ);
			ᐃⲆⲆᐃⵠᐃΔᐃⵠ.ᐃΔᐃⲆᐃΔⵠ()
		}), -315, 185, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.ⵠΔᐃᐃΔᐃΔ, ⵠᐃ.ΔⲆΔⲆΔⵠⲆ, ⵠᐃ.ⵠᐃⵠΔᐃⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔᐃΔΔ);
			ⵠⲆⵠᐃᐃⲆΔΔⵠ.ᐃΔᐃⲆᐃΔⵠ()
		}), -315, 321, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.ΔⵠⲆΔⵠᐃⵠ, ⵠᐃ.ⵠᐃΔᐃⲆΔΔ, ⵠᐃ.ⵠΔⵠΔᐃᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔΔⵠᐃ);
			ⵠᐃᐃᐃⵠᐃⵠΔⲆ.ᐃΔᐃⲆᐃΔⵠ()
		}), 153, 185, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.ⲆΔⲆⲆⲆΔⲆ, ⵠᐃ.ⵠⲆΔΔΔΔⵠ, ⵠᐃ.ΔⵠⲆΔⲆΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ᐃⵠᐃᐃⵠ);
			ⵠΔΔᐃᐃΔⵠᐃⲆ.ᐃΔᐃⲆᐃΔⵠ()
		}), 153, 321, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.Ⲇⵠᐃᐃᐃⵠᐃ, ⵠᐃ.ⲆᐃΔⵠⲆⲆΔ, ⵠᐃ.ΔⵠⵠⵠᐃⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠΔᐃᐃΔ);
			ΔⵠⲆⲆΔΔⵠΔⵠ.ᐃΔᐃⲆᐃΔⵠ()
		}), 153, 463, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(323, 112, "", [ⵠᐃ.ᐃᐃΔᐃⲆⵠᐃ, ⵠᐃ.ᐃᐃᐃΔⵠΔᐃ, ⵠᐃ.ᐃᐃⵠᐃᐃⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔΔⵠΔ);
			ⲆⵠᐃⲆΔΔΔⵠⵠ.ᐃΔᐃⲆᐃΔⵠ()
		}), -315, 463, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆᐃⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(327, 117, "", [ⵠᐃ.ΔΔΔΔΔΔΔ, ⵠᐃ.ᐃⵠΔΔⲆᐃⵠ, ⵠᐃ.ⵠΔⲆⵠⲆᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆⵠⲆⲆΔⲆ)
		}), 155, 70, ⵠⲆⵠΔ, ⲆΔΔⲆ);
		this.buttons[Δᐃ++].view = ⲆⲆⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(130, 129, "", [ⵠᐃ.ΔᐃⵠⵠⵠΔⲆ, ⵠᐃ.ⲆᐃᐃΔΔΔⵠ, ⵠᐃ.ᐃΔᐃΔⲆⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔᐃΔᐃⲆⵠⲆ(ΔⵠⲆⵠᐃⲆΔ, ᐃⲆᐃᐃ, ⵠ[402]);
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 10, 40, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⵠⲆⵠᐃⲆΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(130, 129, "", [ⵠᐃ.ΔᐃⵠⵠⵠΔⲆ, ⵠᐃ.ⲆᐃᐃΔΔΔⵠ, ⵠᐃ.ᐃΔᐃΔⲆⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔᐃΔᐃⲆⵠⲆ(ΔⲆᐃⲆⵠⲆᐃ, ᐃⲆᐃᐃ, ⵠ[402]);
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 10, 40, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⲆᐃⲆⵠⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 200, 140, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(524, 110, "", [ⵠᐃ.ⲆᐃΔⵠⲆⵠⵠ, ⵠᐃ.ΔΔΔⵠᐃⲆΔ, ⵠᐃ.ᐃⲆΔΔⵠⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆΔᐃᐃⵠⵠᐃ("Atlanta")
		}), -265, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(523, 110, "", [ⵠᐃ.ΔᐃⵠⲆⲆΔΔ, ⵠᐃ.ⵠᐃᐃⲆΔΔⵠ, ⵠᐃ.ᐃᐃⲆΔᐃΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆΔᐃᐃⵠⵠᐃ("LosAngeles")
		}), ⵠⲆⲆᐃⵠ, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(344, 110, "", [ⵠᐃ.ⲆⲆΔⲆⲆΔⲆ, ⵠᐃ.ⲆⲆⲆⵠΔᐃⲆ, ⵠᐃ.ΔΔⲆΔⲆⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆΔᐃᐃⵠⵠᐃ("Frankfurt")
		}), -265, 365, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(344, 110, "", [ⵠᐃ.ΔⵠⵠⲆᐃⲆΔ, ⵠᐃ.ⵠᐃⵠⵠⵠᐃⲆ, ⵠᐃ.ⵠⵠⲆΔᐃᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆΔᐃᐃⵠⵠᐃ("Osaka")
		}), 100, 365, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(344, 110, "", [ⵠᐃ.ᐃᐃⵠᐃⵠΔⵠ, ⵠᐃ.ΔⵠⲆΔᐃⵠⲆ, ⵠᐃ.ΔᐃᐃⵠΔΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆΔᐃᐃⵠⵠᐃ("Sydney")
		}), -86, 365, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔΔᐃⵠ)
		}), 224, 140, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(230, 352, "", [ⵠᐃ.ΔⵠΔᐃᐃⲆⲆ, ⵠᐃ.ΔⵠΔⵠᐃΔΔ, ⵠᐃ.ΔΔᐃⲆΔΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(350)
		}), -280, 240, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(230, 352, "", [ⵠᐃ.ᐃᐃⲆⵠⲆᐃⲆ, ⵠᐃ.ΔⲆΔΔᐃⲆᐃ, ⵠᐃ.ᐃᐃᐃⵠⲆⵠⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(700)
		}), -130, 240, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(230, 352, "", [ⵠᐃ.ΔⲆⲆⵠⲆⲆⲆ, ⵠᐃ.ⲆΔⵠΔᐃⵠᐃ, ⵠᐃ.ΔⲆⲆΔⵠⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(1400)
		}), 20, 240, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(230, 352, "", [ⵠᐃ.ⵠᐃΔΔΔᐃᐃ, ⵠᐃ.ᐃΔᐃⵠΔⵠⵠ, ⵠᐃ.ᐃΔᐃⵠⵠᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃᐃΔΔⵠᐃᐃ(3e3)
		}), 170, 240, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(105, 119, "", [ⵠᐃ.ⵠᐃⵠΔⵠΔⵠ, ⵠᐃ.ⲆⵠⲆᐃⲆⵠΔ, ⵠᐃ.ᐃΔΔⵠⵠⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			const ᐃⵠΔⵠᐃ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[167]).value.split(ⵠ[369]);
			const ΔᐃᐃᐃⲆ = ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[325]]("textarea");
			ΔᐃᐃᐃⲆ.value = ΔⲆᐃᐃⵠⲆΔ + "?server=" + ᐃⵠΔⵠᐃ[ⲆᐃⲆⲆ] + "&region=" + ᐃⵠΔⵠᐃ[0];
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[173]][ⲆⵠΔᐃᐃᐃΔ[236]](ΔᐃᐃᐃⲆ);
			ΔᐃᐃᐃⲆ.select();
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[328]]("copy");
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[33]][ⲆⵠΔᐃᐃᐃΔ[173]][ⲆⵠΔᐃᐃᐃΔ[299]](ΔᐃᐃᐃⲆ)
		}), 170, 310, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(105, 119, "", [ⵠᐃ.ⵠⵠΔᐃᐃⲆⵠ, ⵠᐃ.ⲆⲆⵠΔⵠΔᐃ, ⵠᐃ.ᐃΔΔⲆⲆᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⵠᐃⵠⲆΔΔᐃᐃᐃ()
		}), 235, 310, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(204, 115, "", [ⵠᐃ.ⵠⵠᐃⲆᐃΔⵠ, ⵠᐃ.ⵠΔΔⲆΔΔⵠ, ⵠᐃ.ⵠΔΔⵠᐃⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("./commands.html", ⵠ[354])
		}), -265, 490, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃΔⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ᐃΔΔᐃᐃᐃᐃ, ⵠᐃ.ΔΔᐃΔⵠⵠⵠ, ⵠᐃ.ΔᐃᐃⲆⲆᐃᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆΔⲆⲆΔⲆⲆ)
		}), -210, 170, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ⲆᐃⲆⵠⲆΔⲆ, ⵠᐃ.ᐃᐃΔⵠⵠⲆΔ, ⵠᐃ.ᐃⲆⵠⲆᐃᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ᐃΔᐃᐃⲆⲆⲆ)
		}), 70, 170, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ⵠⵠⵠΔⲆⵠᐃ, ⵠᐃ.ⲆΔⵠⲆⵠⵠᐃ, ⵠᐃ.ᐃΔΔΔΔⲆΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔΔᐃΔⲆᐃᐃ)
		}), 70, 204, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ⵠⵠⲆᐃΔⵠΔ, ⵠᐃ.ⵠΔᐃΔⲆⵠⲆ, ⵠᐃ.ΔⲆᐃΔⵠᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠᐃⲆⵠⵠᐃΔ)
		}), -210, 204, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ⵠⵠⲆᐃΔⵠΔ, ⵠᐃ.ⵠΔᐃΔⲆⵠⲆ, ⵠᐃ.ΔⲆᐃΔⵠᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ΔⵠⵠᐃᐃΔᐃ)
		}), 70, 238, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.ⵠⵠⲆᐃΔⵠΔ, ⵠᐃ.ⵠΔᐃΔⲆⵠⲆ, ⵠᐃ.ΔⲆᐃΔⵠᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			if (Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ()) ⵠᐃΔⲆⵠⵠΔ(0, 300);
			else ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), 307, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.Δⵠⵠⵠᐃⵠᐃ, ⵠᐃ.ⵠⵠᐃⵠΔⵠⵠ, ⵠᐃ.ΔΔⲆᐃΔⵠΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆⲆΔⵠⲆⲆᐃ)
		}), -210, 238, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(145, 69, "", [ⵠᐃ.Δⵠⵠⵠᐃⵠᐃ, ⵠᐃ.ⵠⵠᐃⵠΔⵠⵠ, ⵠᐃ.ΔΔⲆᐃΔⵠΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃΔⲆⵠⵠΔ(1, 600) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), 307, 239, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(192, 101, "", [ⵠᐃ.ΔᐃⵠΔΔⵠⵠ, ⵠᐃ.ΔⵠⲆⵠΔⲆⵠ, ⵠᐃ.ⵠⵠⵠΔΔⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔⵠⲆΔⵠⲆ()
		}), -ⲆΔᐃⲆⵠ, 250, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔⵠᐃΔⲆΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(192, 104, "", [ⵠᐃ.ΔΔⲆΔⵠᐃⵠ, ⵠᐃ.ⵠⵠⲆᐃⵠⲆⵠ, ⵠᐃ.ⲆᐃΔΔΔⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔⵠⲆΔⵠⲆ()
		}), -100, 239, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⲆⵠΔⲆⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(192, 101, "", [ⵠᐃ.ΔΔⲆⲆΔᐃⲆ, ⵠᐃ.ᐃⵠⲆΔΔΔⲆ, ⵠᐃ.ᐃᐃⲆᐃⵠⵠⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⵠΔΔΔ)
		}), 10, 250, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔⵠᐃΔⲆΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(192, 104, "", [ⵠᐃ.ΔᐃⵠᐃⵠΔⵠ, ⵠᐃ.ⵠᐃΔⲆᐃᐃΔ, ⵠᐃ.ⵠΔⵠⵠᐃΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⵠΔΔΔ)
		}), ᐃᐃⵠⵠⵠ, 239, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⲆⵠΔⲆⲆⲆ;
		ᐃⵠⵠΔⵠΔᐃ = [];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ΔᐃΔᐃΔ] = [ⵠᐃ.ⲆⵠⲆᐃᐃⵠᐃ, ⵠᐃ.ΔΔⲆᐃᐃΔⵠ, ⵠᐃ.ⵠΔⵠⵠⲆΔΔ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ᐃⲆΔᐃ] = [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ⵠᐃΔⲆ] = [ⵠᐃ.ΔⲆΔⲆΔᐃΔ, ⵠᐃ.ⵠⵠⲆΔⲆⲆⲆ, ⵠᐃ.ΔⵠⲆᐃⲆᐃᐃ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ⲆᐃⲆⵠ] = [ⵠᐃ.ᐃΔⲆⵠⵠⵠΔ, ⵠᐃ.ⲆⵠⲆⲆᐃΔᐃ, ⵠᐃ.ΔΔⵠᐃⲆⲆᐃ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ⲆⵠⲆⵠ] = [ⵠᐃ.ᐃⵠⲆⵠⵠᐃⲆ, ⵠᐃ.ΔⵠᐃᐃⲆΔΔ, ⵠᐃ.ⲆⲆᐃΔⲆⵠΔ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ⲆⵠΔⵠ] = [ⵠᐃ.ⲆᐃⲆⲆΔⵠᐃ, ⵠᐃ.ⲆⵠⲆΔⵠᐃⵠ, ⵠᐃ.ⲆΔⵠⵠⲆⵠΔ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ᐃΔⲆⲆ] = [ⵠᐃ.ⲆⵠᐃⲆΔⵠᐃ, ⵠᐃ.ᐃⵠΔⵠᐃΔⲆ, ⵠᐃ.ⲆⲆΔΔⵠⵠⵠ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ΔΔⲆⲆΔ] = [ⵠᐃ.ⲆᐃᐃⲆΔᐃᐃ, ⵠᐃ.ⲆⵠᐃⲆⲆΔⵠ, ⵠᐃ.ᐃⲆᐃᐃⲆⵠᐃ];
		ᐃⵠⵠΔⵠΔᐃ[ⵠⲆᐃ.ⲆΔⵠⵠⵠⲆⵠ] = [ⵠᐃ.ᐃΔⵠᐃΔⲆΔ, ⵠᐃ.ⲆᐃⵠⵠΔΔΔ, ⵠᐃ.ᐃⵠᐃⲆΔΔⵠ];
		ΔⲆΔⲆⲆᐃᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠΔΔ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠⲆⵠ, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃᐃⲆⵠⲆ, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆΔⲆᐃⲆ, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠᐃΔᐃΔ, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆΔⲆᐃⲆ, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔⲆⵠᐃᐃ, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⵠⲆΔᐃ;
		ΔⲆΔⵠⲆᐃⲆᐃᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⲆᐃᐃᐃ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔⵠᐃΔⵠ, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔΔ;
		ⵠⵠᐃⲆΔᐃᐃⵠΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆⲆΔΔᐃ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆⲆΔΔᐃ, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠΔΔᐃⵠ, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠΔΔ, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆⲆΔΔᐃ, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔᐃΔᐃⲆ, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠΔΔᐃⵠ, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⵠⲆᐃⲆ, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠΔ;
		ⵠΔⵠΔΔᐃΔⲆⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⲆᐃᐃᐃ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠⵠⲆᐃⲆ, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠΔⵠΔⵠ, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠⲆⵠ, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆⵠᐃΔⲆ, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⵠⲆᐃⲆ, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔΔⵠᐃ;
		ΔΔⵠΔΔᐃᐃΔΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⲆⵠⲆⵠ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃⲆⵠⲆⵠ, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠΔⵠΔⵠ, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ᐃΔΔⲆⵠ, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠΔΔ, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃⵠᐃᐃⵠ;
		ᐃᐃⵠΔΔⵠΔⲆᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⵠΔΔᐃⵠ, -29, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, -29, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔᐃΔᐃⲆ, 65, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔⵠᐃΔⵠ, 65, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 65, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠⲆⵠ, 159, 205, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, undefined, 159, 300, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(178, 182, "", [ⵠᐃ.ⲆΔⲆΔ, ⵠᐃ.ⵠⲆⲆⲆ, ⵠᐃ.ⵠⲆᐃⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔΔⵠⲆⵠ, 159, 395, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⲆⵠΔⵠΔᐃᐃ, ⵠᐃ.ⵠᐃⵠⲆΔⵠⵠ, ⵠᐃ.ⲆⲆᐃΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ΔⲆⵠᐃᐃ, -61, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(39, 122, "", [ⵠᐃ.ⵠΔⲆᐃΔⵠⵠ, ⵠᐃ.ΔᐃΔⵠⵠᐃⵠ, ⵠᐃ.ΔⵠⵠΔᐃⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, ⲆⲆΔΔᐃ, 260, 315, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⲆᐃⵠⲆᐃ)
		}), -320, 470, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠΔᐃᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ᐃⵠⵠⲆΔⵠΔ, ⵠᐃ.ΔΔᐃᐃⵠⲆⲆ, ⵠᐃ.ᐃΔⵠΔⵠⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃᐃᐃᐃΔⲆ(ᐃⵠⵠⵠ, 50) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / ᐃⵠᐃᐃ, 150 + 448 / ⵠᐃⵠᐃⲆ - 260 / Δⵠⵠⵠ, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃᐃⲆⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ᐃΔᐃᐃⲆⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ᐃⵠᐃⲆⲆⲆⵠ, ⵠᐃ.ⵠⲆΔᐃᐃⵠⲆ, ⵠᐃ.ΔΔΔΔⲆᐃⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃᐃᐃᐃΔⲆ(ΔΔᐃ, ᐃⲆⵠᐃⲆ) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / ⲆⲆΔΔ, 150 + 112 - 260 / 4, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔⲆⲆΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆΔⲆⲆΔⲆⲆ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ᐃΔΔⵠⵠⵠⲆ, ⵠᐃ.ⲆΔΔΔᐃᐃᐃ, ⵠᐃ.ᐃΔⵠΔΔΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃᐃᐃᐃΔⲆ(ⵠᐃᐃⲆ, 150) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / ⵠᐃᐃⲆ, 150 + 448 / 4 - 260 / 4, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔⲆᐃᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔΔᐃΔⲆᐃᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ⵠᐃᐃⲆⲆᐃⲆ, ⵠᐃ.ΔᐃΔⲆᐃⵠⵠ, ⵠᐃ.ⵠⲆⵠᐃΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃᐃᐃᐃΔⲆ(ΔΔᐃᐃ, 300) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / 4, 150 + 448 / Ⲇⵠⵠᐃᐃ - 65, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠᐃⲆⵠⵠᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠᐃⲆⵠⵠᐃΔ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ᐃᐃᐃⲆᐃΔᐃ, ⵠᐃ.ⲆΔᐃΔⲆⲆⲆ, ⵠᐃ.ΔⲆᐃⲆⵠⵠⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ() ? ⵠᐃᐃᐃᐃΔⲆ(ᐃⲆⵠᐃ, 600) : ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / ᐃΔⲆΔ, 150 + 448 / 4 - 260 / ⵠᐃⵠᐃⲆ, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆΔⵠⲆⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆΔⵠⲆⲆᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(260, 260, "", [ⵠᐃ.ⵠᐃᐃⲆⲆᐃⲆ, ⵠᐃ.ΔᐃΔⲆᐃⵠⵠ, ⵠᐃ.ⵠⲆⵠᐃΔⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			if (Ⲇⵠᐃ.ⲆⵠⲆᐃⵠ()) ⵠᐃᐃᐃᐃΔⲆ(5, 300);
			else ᐃⵠΔᐃ(ᐃΔᐃΔΔ)
		}), -260 / 4, 150 + 448 / 4 - 260 / ᐃⵠᐃᐃ, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⵠⵠᐃᐃΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(115, 73, "", [ⵠᐃ.ⲆᐃᐃΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠ, ⵠᐃ.ΔⵠΔᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃⵠΔᐃ(ⵠⲆᐃΔΔ)
		}), 309, 180, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ΔⵠⵠᐃᐃΔᐃ;
		var ⵠᐃⵠⲆᐃΔⵠⲆΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⲆⵠⵠᐃⲆⲆⵠ, ⵠᐃ.ΔᐃΔᐃⲆⲆⲆ, ⵠᐃ.ΔΔΔΔⵠΔᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ΔⲆⵠᐃᐃ, ⵠᐃⲆᐃ)
		}), -305, 132, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ΔΔⲆᐃⵠⲆⲆᐃΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⵠᐃⲆⲆⵠⲆΔ, ⵠᐃ.ΔᐃΔᐃᐃⵠⲆ, ⵠᐃ.ⵠⵠΔⲆⵠⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ᐃⲆᐃΔΔ, 1)
		}), -273, 132, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ⵠΔΔΔⵠⲆⵠᐃΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⲆΔⵠᐃᐃᐃᐃ, ⵠᐃ.ΔⲆᐃⵠΔᐃᐃ, ⵠᐃ.ᐃⵠΔᐃΔΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⵠⵠⲆᐃⲆ, ⵠⵠΔⲆ)
		}), -241, 132, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ᐃᐃΔᐃᐃΔᐃΔᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ⲆΔⲆᐃⵠⲆᐃ, ⵠᐃ.ΔᐃᐃΔΔΔⲆ, ⵠᐃ.ⲆⲆⵠΔⲆⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⲆⵠᐃΔⲆ, Ⲇᐃⵠⵠ)
		}), -305, 165, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ⲆⵠᐃΔΔΔΔⲆⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ᐃΔⲆᐃⲆⵠᐃ, ⵠᐃ.ⵠⲆⲆΔΔⲆΔ, ⵠᐃ.ⲆΔⲆΔⲆⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(undefined, ⵠΔⲆᐃΔ)
		}), -273, 165, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ᐃⵠΔᐃⲆⵠⵠⲆᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(46, 51, "", [ⵠᐃ.ᐃΔᐃⵠⲆᐃⲆ, ⵠᐃ.ᐃΔⵠⲆᐃΔΔ, ⵠᐃ.ΔΔᐃⲆΔⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ΔΔⵠΔΔ, 5)
		}), -241, 165, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ΔΔⲆⲆⲆⵠⲆⲆΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(460, 73, "", [ⵠᐃ.ⲆⲆⲆᐃΔⵠᐃ, ⵠᐃ.ⲆⵠᐃⵠΔΔΔ, ⵠᐃ.ⵠᐃⵠᐃⵠⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(-ⲆⲆΔᐃ)
		}), -180, 170, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ⲆⲆᐃⲆΔᐃΔⲆᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(222, 68, "", [ⵠᐃ.ⲆⲆΔᐃⲆⵠⵠ, ⵠᐃ.ᐃΔᐃⵠⵠΔᐃ, ⵠᐃ.ⲆΔΔᐃΔⵠᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⲆⵠΔΔ.ⲆᐃⲆᐃⲆ)
		}), -180, 215, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ΔⵠⲆⵠΔⲆᐃⵠⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(222, 68, "", [ⵠᐃ.ⵠⵠⲆⲆⵠΔⲆ, ⵠᐃ.ⵠⵠⵠᐃⲆⵠⲆ, ⵠᐃ.ⵠᐃⲆΔᐃΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⲆⵠΔΔ.ᐃΔⲆⵠⵠ)
		}), -180, 260, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ᐃᐃΔᐃⵠᐃΔⵠⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(222, 68, "", [ⵠᐃ.ⲆΔⵠⵠⵠΔᐃ, ⵠᐃ.ⵠᐃⲆⲆᐃᐃᐃ, ⵠᐃ.ᐃⲆΔΔⲆⵠⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⲆⵠΔΔ.ᐃᐃΔᐃⲆ)
		}), -60, 215, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		var ⵠⲆⵠᐃΔⲆΔᐃᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(222, 68, "", [ⵠᐃ.ᐃΔᐃᐃᐃⵠⲆ, ⵠᐃ.ⲆᐃⵠⲆⲆⲆⲆ, ⵠᐃ.ΔᐃⵠⲆⵠⲆⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ΔΔΔΔᐃ(ⲆⵠΔΔ.ⲆⵠᐃⲆⵠ)
		}), -60, 260, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⵠΔΔΔ;
		this.ΔⵠⲆᐃᐃᐃⵠ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(143, 66, "", [ⵠᐃ.ⲆΔⵠⲆᐃⵠⲆ, ⵠᐃ.ᐃⲆΔᐃⵠⵠᐃ, ⵠᐃ.ᐃⲆⲆΔⲆΔⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ΔΔⵠⲆⵠ, ᐃᐃΔΔ.ΔⵠⲆᐃᐃᐃⵠ)
		}), -298, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⲆⲆⲆⵠⲆΔΔ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(104, 66, "", [ⵠᐃ.ⵠᐃⲆⵠⵠΔᐃ, ⵠᐃ.ⵠᐃᐃⲆⵠΔⵠ, ⵠᐃ.ΔⵠⵠᐃⵠᐃΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ΔⵠᐃΔⵠ, ᐃᐃΔΔ.ⲆⲆⲆⵠⲆΔΔ)
		}), -223, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ᐃⲆΔⲆⵠΔᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(110, 66, "", [ⵠᐃ.ᐃᐃⲆⵠⲆⵠᐃ, ⵠᐃ.ᐃⵠⲆⲆⲆΔᐃ, ⵠᐃ.ᐃⵠⵠΔⵠⲆᐃ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(ⵠΔΔᐃⵠ, ᐃᐃΔΔ.ᐃⲆΔⲆⵠΔᐃ)
		}), -168, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ⲆⵠᐃⵠⲆΔᐃ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(88, 66, "", [ⵠᐃ.ᐃᐃΔⵠⲆⵠⲆ, ⵠᐃ.ΔΔΔⵠᐃⲆᐃ, ⵠᐃ.ⵠΔⲆΔᐃΔΔ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, ᐃᐃΔΔ.ⲆⵠᐃⵠⲆΔᐃ)
		}), -110, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.ΔᐃⵠⵠⲆΔⲆ = Δᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(88, 66, "", [ⵠᐃ.ᐃᐃⲆⲆΔⲆΔ, ⵠᐃ.ⲆⵠᐃΔᐃᐃᐃ, ⵠᐃ.ⲆᐃᐃᐃᐃⲆⵠ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ᐃΔΔⲆᐃ(undefined, ᐃᐃΔΔ.ΔᐃⵠⵠⲆΔⲆ)
		}), -63, 110, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⲆⲆⲆΔᐃ;
		this.buttons[Δᐃ] = ΔΔⲆ(86, 44, "", [ⵠᐃ.ⲆᐃΔᐃⲆΔΔ, ⵠᐃ.ⲆΔᐃⵠⵠΔᐃ, ⵠᐃ.ⲆⲆⵠΔᐃΔⲆ], ΔⲆⲆⵠ, ᐃⵠᐃⲆ, (function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]("./terms.html", ⵠ[354])
		}), 349, 290, ⵠⲆΔᐃ | Ⲇᐃᐃⵠ, ᐃⲆᐃᐃ);
		this.buttons[Δᐃ++].view = ⵠⲆᐃΔΔ;
		var ᐃⲆⲆᐃⵠᐃΔᐃⵠ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ⲆᐃⵠⲆⲆ, ΔⲆΔⲆⲆᐃᐃ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ᐃᐃᐃΔ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ᐃᐃᐃΔ[ⵠⵠΔ] === 1) ⲆΔΔᐃ.set("starve_skin", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ᐃᐃᐃΔ, this.unlock.ᐃᐃᐃΔ);
		var ⵠᐃᐃᐃⵠᐃⵠΔⲆ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ⵠΔΔⵠ, ⵠΔⵠΔΔᐃΔⲆⵠ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ΔⵠⵠⵠⲆ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ΔⵠⵠⵠⲆ[ⵠⵠΔ] === ΔΔⵠΔⵠ) ⲆΔΔᐃ.set("starve_bag", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ΔⵠⵠⵠⲆ, this.unlock.ΔⵠⵠⵠⲆ);
		var ⵠΔΔᐃᐃΔⵠᐃⲆ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ΔᐃⵠⲆΔ, ΔΔⵠΔΔᐃᐃΔΔ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ⲆΔⵠⲆⵠ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ⲆΔⵠⲆⵠ[ⵠⵠΔ] === ᐃΔⲆⵠ) ⲆΔΔᐃ.set("starve_book", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ⲆΔⵠⲆⵠ, this.unlock.ⲆΔⵠⲆⵠ);
		var ΔⵠⲆⲆΔΔⵠΔⵠ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ, ᐃᐃⵠΔΔⵠΔⲆᐃ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ⲆⵠᐃΔⵠ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ⲆⵠᐃΔⵠ[ⵠⵠΔ] === 1) ⲆΔΔᐃ.set("starve_dead", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ⲆⵠᐃΔⵠ, this.unlock.ⲆⵠᐃΔⵠ);
		var ⲆⵠᐃⲆΔΔΔⵠⵠ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ΔΔⲆⵠᐃ, ⵠⵠᐃⲆΔᐃᐃⵠΔ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ΔᐃⲆⲆⲆ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ΔᐃⲆⲆⲆ[ⵠⵠΔ] === 1) ⲆΔΔᐃ.set("starve_crate", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ΔᐃⲆⲆⲆ, this.unlock.ΔᐃⲆⲆⲆ);
		var ⵠⲆⵠᐃᐃⲆΔΔⵠ = new ᐃᐃⲆⵠⵠᐃΔ(ᐃᐃᐃⵠ.ⵠⲆΔᐃᐃ, ΔⲆΔⵠⲆᐃⲆᐃᐃ, (function(ⵠⵠΔ) {
			ᐃᐃΔΔ.ᐃᐃᐃⲆⵠ = ⵠⵠΔ;
			if (ᐃᐃΔΔ.unlock.ᐃᐃᐃⲆⵠ[ⵠⵠΔ] === ΔᐃⵠΔ) ⲆΔΔᐃ.set("starve_accessory", "" + ⵠⵠΔ, {
				expires: 30
			})
		}), this.ᐃᐃᐃⲆⵠ, this.unlock.ᐃᐃᐃⲆⵠ);
		this.ᐃⲆᐃᐃΔⵠⲆ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			for (var ᐃⲆ = 0; ᐃⲆ < Ⲇⵠᐃ.buttons.length; ᐃⲆ++) {
				ⲆΔΔⲆ === Ⲇⵠᐃ.buttons[ᐃⲆ].info.active && Ⲇⵠᐃ.buttons[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ)
			}
		};
		this.ᐃΔᐃᐃΔⲆᐃ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			for (var ᐃⲆ = 0; ᐃⲆ < Ⲇⵠᐃ.buttons.length; ᐃⲆ++) {
				var ΔΔⵠⵠ = Ⲇⵠᐃ.buttons[ᐃⲆ];
				if (ⲆΔΔⲆ === ΔΔⵠⵠ.info.active) {
					if (ΔΔⵠⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ)) {
						ΔΔⵠⵠ.info.callback();
						return
					}
				}
			}
		};
		this.ⲆⵠᐃΔⲆᐃᐃ = ᐃⵠⲆΔⵠ;
		this.ᐃⲆᐃᐃⲆᐃᐃ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			var ⵠⲆΔΔⲆ = ΔᐃⲆⵠⲆ;
			for (var ᐃⲆ = ⲆⲆⲆ; ᐃⲆ < Ⲇⵠᐃ.buttons.length; ᐃⲆ++) {
				if (Ⲇⵠᐃ.buttons[ᐃⲆ].info.active === ⲆΔΔⲆ) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.buttons[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ)
			}
			if (Ⲇⵠᐃ.ⲆⵠᐃΔⲆᐃᐃ !== ⵠⲆΔΔⲆ) {
				Ⲇⵠᐃ.ⲆⵠᐃΔⲆᐃᐃ = ⵠⲆΔΔⲆ;
				ⵠⲆΔΔⲆ ? ΔΔ.style[ⵠ[299]] = Ⲇⵠᐃ.ᐃᐃⵠⲆᐃΔᐃ : ΔΔ.style[ⵠ[299]] = Ⲇⵠᐃ.ⵠΔⵠⲆⵠᐃⵠ
			}
		};
		this.ⵠⲆΔᐃᐃΔᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], this.ᐃⲆᐃᐃΔⵠⲆ, false);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ᐃΔᐃᐃΔⲆᐃ, false);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[440], this.ᐃⲆᐃᐃⲆᐃᐃ, Ⲇᐃⵠⵠᐃ)
		};
		this.ᐃⵠΔΔᐃⲆᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[364], this.ᐃⲆᐃᐃΔⵠⲆ, ᐃⵠᐃⵠᐃ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[349], this.ᐃΔᐃᐃΔⲆᐃ, ⲆⵠᐃΔΔ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[440], this.ᐃⲆᐃᐃⲆᐃᐃ, ⲆⵠᐃΔΔ)
		}
	}

	function ΔⲆᐃᐃΔⵠⵠᐃᐃ() {
		Ⲇᐃⵠ.ᐃΔᐃⲆΔⲆᐃ("https://twitter.com/intent/tweet?text=I%20survived%20" + ⲆΔⲆ.ⲆⲆΔ + "%20days%20with%20" + ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⵠⲆⲆᐃᐃ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io")
	}

	function ⲆⵠⵠᐃⵠΔⲆᐃⵠ(ΔΔ, Ⲇ, ᐃⵠⵠⵠΔⵠΔᐃΔ) {
		this.ΔΔ = ΔΔ;
		this.Ⲇ = Ⲇ;
		this.ᐃⵠⲆⲆⵠⲆΔ = {
			translate: {
				x: 0,
				y: 0
			},
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("loading").style,
			"ⵠᐃⵠ": function() {
				this.style.left = this.translate.x + ⵠ[454];
				this.style.top = Math.floor(this.translate.y) + ⵠ[454]
			}
		};
		this.ᐃⵠⲆⲆⵠⲆΔ.style.position = "absolute";
		this.ᐃⵠⲆⲆⵠⲆΔ.style.display = ⵠ[489];
		this.ᐃⵠⲆⲆⵠⲆΔ.ⵠᐃⵠ();
		this.ⲆΔΔⲆᐃ = ᐃⵠᐃⵠⲆ;
		this.stop = function() {
			this.ⲆΔΔⲆᐃ = false
		};
		this.ΔΔⲆⲆⲆⵠⵠ = {
			total: 1
		};
		var Ⲇⵠᐃ = this;
		var ⵠᐃᐃᐃΔ = function() {};
		var ⲆΔΔⲆⲆ = ⵠⲆⲆᐃ;
		var ᐃΔⲆΔΔ = 40;
		this.ᐃᐃΔⵠⲆ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ⲆΔΔⲆⲆ++;
			if (ᐃΔⲆΔΔ == ⲆΔΔⲆⲆ) {
				Ⲇⵠᐃ.stop();
				ⵠᐃᐃᐃΔ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](Ⲇⵠᐃ.ᐃᐃΔⵠⲆ, 0)
		};
		this.ⲆⲆᐃΔᐃ = function(ᐃⲆⲆⵠⵠ) {
			ⵠᐃᐃᐃΔ = ᐃⲆⲆⵠⵠ;
			Ⲇⵠᐃ.ᐃᐃΔⵠⲆ()
		};
		var ΔΔⵠⲆΔⲆⵠᐃᐃ = (new Date).getTime();

		function ⲆⲆⲆᐃᐃᐃΔ(name) {
			if (name.indexOf("normal-mode") !== -ΔΔᐃᐃ || -ᐃⲆⵠΔ !== name.indexOf("player0")) return ΔΔⲆΔ;
			if (-ⲆΔᐃⲆ !== name.indexOf("day-bag") || name.indexOf("night-bag") !== -1 || -ΔᐃⵠΔ !== name.indexOf("day-book") || name.indexOf("night-book") !== -1 || -1 !== name.indexOf("day-player") || -1 !== name.indexOf("night-player") || -ᐃΔⲆⵠ !== name.indexOf("day-accessory") || -1 !== name.indexOf("night-accessory") || -ⵠⵠⲆ !== name.indexOf("day-crate") || name.indexOf("night-crate") !== -1 || name.indexOf("day-skin") !== -ΔΔᐃᐃ || name.indexOf("night-skin") !== -ΔΔⲆΔ || -1 !== name.indexOf("day-river") || -ΔᐃⵠΔ !== name.indexOf("night-river") || name.indexOf("day-river") !== -ᐃⵠ || name.indexOf("night-river") !== -1 || name.indexOf("day-rock") !== -1 || name.indexOf("night-rock") !== -ΔΔⵠΔⵠ || -1 !== name.indexOf("day-flower") || -ΔΔᐃⵠ !== name.indexOf("night-flower") || name.indexOf("day-leaf") !== -1 || -ⵠⵠⲆ !== name.indexOf("night-leaf") || name.indexOf("day-herb") !== -1 || -1 !== name.indexOf("night-herb") || name.indexOf("day-shell") !== -1 || -ΔΔⲆΔ !== name.indexOf("night-shell") || -ΔᐃⵠΔ !== name.indexOf("day-hand-skin") || -ᐃᐃΔᐃ !== name.indexOf("night-hand-skin") || name.indexOf("bignight") !== -1 || -ᐃⵠ !== name.indexOf("bigday") || -ⵠᐃΔᐃ !== name.indexOf("bigzday") || -1 !== name.indexOf("bigznight") || name.indexOf("tutorial-box") !== -ᐃᐃΔᐃ || name.indexOf("tuto-") !== -ΔΔⵠΔⵠ || -ᐃᐃΔᐃ !== name.indexOf("-leaderboard-") || -1 !== name.indexOf("-lead-") || name.indexOf("day-lava-") !== -ΔΔᐃᐃ || -1 !== name.indexOf("night-lava-") || name.indexOf("-click.png") !== -ᐃⲆⵠΔ || name.indexOf("-in.png") !== -ΔᐃᐃⲆ || name.indexOf("-fog") !== -ΔᐃᐃⲆ || -ΔΔⵠΔⵠ !== name.indexOf("-lava") || name.indexOf("pebblecompo") !== -ΔΔᐃᐃ || -1 !== name.indexOf("avatar-player")) return ᐃΔⵠⵠ;
			return ΔᐃᐃⲆ
		}
		var ᐃΔᐃΔᐃΔΔ = Object.keys(ⵠᐃ).length;
		var ⵠᐃΔᐃⲆⵠⵠΔⵠ = ᐃΔᐃΔᐃΔΔ;
		console.log(ᐃᐃΔⲆⲆ, undefined);
		for (var ⵠⵠ in ⵠᐃ) {
			if (ⲆⲆⲆᐃᐃᐃΔ(ⵠᐃ[ⵠⵠ]) === ⵠᐃⲆᐃ) ᐃΔᐃΔᐃΔΔ--
		}
		console.log(ⲆⵠᐃΔⲆ, ⵠⵠⲆᐃⲆ);
		var ΔⵠᐃᐃΔΔⵠᐃᐃ = function() {
			if (ΔΔⵠᐃ !== this.ⲆΔⲆΔᐃⵠΔ) return this.ⲆΔⲆΔᐃⵠΔ;
			this.ⲆΔⲆΔᐃⵠΔ = ᐃᐃΔⵠ;
			this.src = this.ΔᐃΔⲆᐃ;
			return ⲆⲆⲆ
		};
		var ᐃⲆᐃΔⲆΔⵠ = function(ⵠⵠⵠ) {
			this.ⲆΔⲆΔᐃⵠΔ = 1
		};
		var ΔⲆᐃⲆᐃⵠᐃ = 0;
		var ⵠⵠⵠⵠⵠⲆᐃΔⵠ = function() {
			console.log(ⲆⵠᐃΔⲆ);
			if (ΔⲆᐃⲆᐃⵠᐃ === 1) return;
			ΔⲆᐃⲆᐃⵠᐃ = ᐃΔⲆⵠ;
			console.log(undefined);
			if (ⵠᐃᐃⵠΔΔΔ !== ᐃΔⵠΔᐃⵠⲆ) ᐃΔⵠΔᐃⵠⲆ();
			ⵠᐃᐃⵠΔΔΔ();
			var ⲆᐃΔⲆⵠⲆᐃ = Ⲇᐃⵠ.ⵠⲆⵠᐃⵠⵠⲆ("server");
			null !== ⲆᐃΔⲆⵠⲆᐃ && (ᐃΔᐃⵠ.ⲆΔⵠⵠΔⵠᐃ = ⲆᐃⲆⲆ, ᐃΔᐃⵠ.ⵠⲆᐃᐃΔ = [{
				nu: 0,
				m: 100,
				i: "server" + ⲆᐃΔⲆⵠⲆᐃ + ".starve.io",
				p: 443,
				a: ⲆᐃΔⲆⵠⲆᐃ,
				ssl: ΔΔⲆΔ
			}]);
			ᐃΔᐃⵠ.ⵠᐃⵠⵠⲆΔⵠᐃⲆ();
			setTimeout(ᐃⵠⵠⵠΔⵠΔᐃΔ, 100)
		};
		var ᐃⲆΔΔᐃⲆᐃ = function() {
			let ⲆᐃΔⵠⲆᐃᐃ = function() {
				ᐃΔᐃⵠ.ΔⵠⲆᐃᐃⵠⵠ(ⵠⵠⵠⵠⵠⲆᐃΔⵠ)
			};
			if (!document.fonts || !document.fonts.check) setTimeout(ⲆᐃΔⵠⲆᐃᐃ, 1e3);
			else document.fonts.check("1em Baloo Paaji") ? setTimeout(ⲆᐃΔⵠⲆᐃᐃ, ⲆΔⲆᐃᐃⲆⵠ) : setTimeout(ᐃⲆΔΔᐃⲆᐃ, ⵠΔᐃᐃⲆ)
		};
		var ΔⵠⲆⲆⲆⵠΔ = function() {
			this.ⵠⲆⵠⵠΔⲆⵠ++;
			console.warn(`Image (${this.src}) failed to load, attempt ${this.ⵠⲆⵠⵠΔⲆⵠ}`, this);
			3 < this.ⵠⲆⵠⵠΔⲆⵠ && console.warn("Failed to load image too many times");
			var ΔΔᐃⵠⲆⵠⲆΔⵠ = this.ⵠⲆⵠⵠΔⲆⵠ;
			var ΔᐃΔⲆᐃ = this.src;
			var ⲆΔⲆⵠⵠⲆⲆΔⵠ = 0 === ⲆⲆⲆᐃᐃᐃΔ(ΔᐃΔⲆᐃ) ? 1e4 : 2e3;
			setTimeout((function() {
				for (var ᐃⲆ in ΔⵠⲆᐃⵠⲆᐃ) {
					if (ΔᐃΔⲆᐃ.indexOf(ΔⵠⲆᐃⵠⲆᐃ[ᐃⲆ]) !== -1) {
						ⵠᐃ[ᐃⲆ] = new Image;
						ⵠᐃ[ᐃⲆ].onload = ᐃⲆᐃΔⲆΔⵠ;
						ⵠᐃ[ᐃⲆ].onerror = ΔⵠⲆⲆⲆⵠΔ;
						ⵠᐃ[ᐃⲆ].ⵠⲆⵠⵠΔⲆⵠ = ΔΔᐃⵠⲆⵠⲆΔⵠ;
						ⵠᐃ[ᐃⲆ].src = ΔᐃΔⲆᐃ;
						break
					}
				}
			}), ⲆΔⲆⵠⵠⲆⲆΔⵠ)
		};

		function ⲆⲆΔᐃᐃΔⲆ(ΔΔⵠΔΔⵠⲆΔⵠ) {
			for (var ᐃⲆ in ⵠᐃ) {
				var Ⲇᐃᐃⵠⵠ = ⵠᐃ[ᐃⲆ];
				if (typeof Ⲇᐃᐃⵠⵠ !== ⵠ[348]) continue;
				if (ⲆⲆⲆᐃᐃᐃΔ(Ⲇᐃᐃⵠⵠ) !== ΔΔⵠΔΔⵠⲆΔⵠ) continue;
				ⵠᐃ[ᐃⲆ] = new Image;
				ⵠᐃ[ᐃⲆ].ⲆΔⲆΔᐃⵠΔ = 0;
				ⵠᐃ[ᐃⲆ].ⵠⲆⵠⵠΔⲆⵠ = 0;
				ⵠᐃ[ᐃⲆ].onload = ᐃⲆᐃΔⲆΔⵠ;
				ⵠᐃ[ᐃⲆ].onerror = ΔⵠⲆⲆⲆⵠΔ;
				ⵠᐃ[ᐃⲆ].Δᐃᐃᐃⵠᐃⵠ = ΔⵠᐃᐃΔΔⵠᐃᐃ;
				ⵠᐃ[ᐃⲆ].ΔᐃΔⲆᐃ = Ⲇᐃᐃⵠⵠ
			}
		}
		ⲆⲆΔᐃᐃΔⲆ(1);
		ⲆⲆΔᐃᐃΔⲆ(Ⲇᐃⵠᐃ);
		ⲆΔΔΔⲆ(1, "l", ⵠⲆΔⵠ, ⵠ[151]);
		ᐃⲆΔΔᐃⲆᐃ();
		ᐃⵠⲆⵠⵠᐃᐃ();
		this.ⵠᐃⵠ = function() {
			this.ᐃⵠⲆⲆⵠⲆΔ.translate.x = (Ⲇⵠⵠⵠ - 500) / ᐃⲆⲆΔ;
			this.ᐃⵠⲆⲆⵠⲆΔ.translate.y = (ᐃΔⲆᐃ - 150) / 2;
			var ᐃⲆⲆᐃ = 2500 / (ᐃΔⲆΔΔ - ⲆΔΔⲆⲆ + 1) - 48;
			this.ᐃⵠⲆⲆⵠⲆΔ.translate.y -= ᐃⲆⲆᐃ;
			this.ᐃⵠⲆⲆⵠⲆΔ.ⵠᐃⵠ()
		};
		this.ᐃⵠⲆⲆⵠⲆΔ.ⵠᐃⵠ();
		this.ⲆⵠᐃⲆ = function() {
			try {
				ⵠⵠⲆᐃΔⵠⲆ()
			} catch (ΔΔⵠ) {}
			this.ⵠᐃⵠ()
		}
	}

	function ⲆⵠⲆᐃᐃⵠΔ(ⲆΔΔⵠⲆᐃⲆ, ᐃᐃⵠⲆⵠⵠΔ, ΔᐃⲆᐃⵠᐃᐃ) {
		const ⵠⲆᐃⵠᐃⵠⲆ = ⲆΔΔⵠⲆᐃⲆ ^ 25305;
		const ⲆᐃΔΔⲆΔⵠ = ((31965 + ᐃᐃⵠⲆⵠⵠΔ) * 1664525 + 1013904223) % 4294967296;
		const ᐃᐃⲆⵠᐃΔⲆ = (16 << (ΔᐃⲆᐃⵠᐃᐃ >> 24 & 255)) + (24 << (ΔᐃⲆᐃⵠᐃᐃ >> 16 & 255)) + (0 << (ΔᐃⲆᐃⵠᐃᐃ >> 8 & 255)) + (ΔⲆΔⲆⵠ << (ΔᐃⲆᐃⵠᐃᐃ >> 0 & 255));
		const ΔᐃⵠⵠⲆⲆⲆᐃⵠ = ⵠⵠⵠΔⲆⲆΔ(ⵠⲆᐃⵠᐃⵠⲆ, ⲆᐃΔΔⲆΔⵠ);
		const ⲆᐃΔⲆⵠᐃⵠᐃⵠ = ⵠⵠᐃΔⵠⲆⵠ(ᐃᐃⲆⵠᐃΔⲆ, ⵠⲆᐃⵠᐃⵠⲆ, ⲆᐃΔΔⲆΔⵠ, ᐃᐃⲆⵠᐃΔⲆ, ⵠⲆᐃⵠᐃⵠⲆ, ⲆᐃΔΔⲆΔⵠ);
		const ᐃⵠⲆᐃⵠᐃⲆᐃⲆ = 54309 ^ ΔᐃⵠⵠⲆⲆⲆᐃⵠ;
		return ᐃⵠⲆᐃⵠᐃⲆᐃⲆ
	}

	function ⵠΔΔⲆⵠᐃᐃⵠΔ(ⲆⵠΔΔᐃᐃⲆ, ᐃᐃΔᐃⲆᐃⲆ) {
		const ⲆΔⲆΔⵠΔΔ = ~(56936 & ⲆⵠΔΔᐃᐃⲆ) & (56936 | ⲆⵠΔΔᐃᐃⲆ);
		const ⵠᐃΔΔⵠᐃⲆ = (16 << (ᐃᐃΔᐃⲆᐃⲆ >> 0 & 255)) + (8 << (ᐃᐃΔᐃⲆᐃⲆ >> 24 & 255)) + (24 << (ᐃᐃΔᐃⲆᐃⲆ >> 16 & 255)) + (0 << (ᐃᐃΔᐃⲆᐃⲆ >> 8 & ΔΔΔⵠᐃⵠⵠ));
		const ⵠⲆᐃⵠⲆⵠᐃ = ᐃⵠΔΔΔⲆΔᐃⲆ(ⲆΔⲆΔⵠΔΔ, ⵠᐃΔΔⵠᐃⲆ, ⲆΔⲆΔⵠΔΔ, ⵠᐃΔΔⵠᐃⲆ, ⲆΔⲆΔⵠΔΔ);
		const ΔᐃⲆᐃᐃΔⵠ = ⲆⲆᐃⲆⵠⵠⵠ(ⵠᐃΔΔⵠᐃⲆ, ⲆΔⲆΔⵠΔΔ, ⵠᐃΔΔⵠᐃⲆ, ⲆΔⲆΔⵠΔΔ, ⵠᐃΔΔⵠᐃⲆ);
		const ⲆⵠⲆⲆᐃⵠᐃᐃⲆ = (24 << ((ⵠⲆᐃⵠⲆⵠᐃ ^ ΔᐃⲆᐃᐃΔⵠ) >> 16 & 255)) + (ᐃΔⲆⵠⵠΔⵠ << ((ⵠⲆᐃⵠⲆⵠᐃ ^ ΔᐃⲆᐃᐃΔⵠ) >> 8 & 255)) + (0 << ((ⵠⲆᐃⵠⲆⵠᐃ ^ ΔᐃⲆᐃᐃΔⵠ) >> 0 & 255)) + (8 << ((ⵠⲆᐃⵠⲆⵠᐃ ^ ΔᐃⲆᐃᐃΔⵠ) >> 24 & 255));
		return ⲆⵠⲆⲆᐃⵠᐃᐃⲆ
	}

	function ᐃΔᐃⵠΔᐃⲆ(ⵠᐃΔᐃᐃᐃΔ, ⵠⵠΔᐃⵠⲆⲆ, ΔᐃⵠⲆᐃⲆᐃ, ⵠᐃⵠΔᐃΔΔ) {
		ⵠΔᐃΔⲆⲆⲆ(ᐃΔΔΔⲆ, ⵠᐃΔᐃᐃᐃΔ, ⵠⵠΔᐃⵠⲆⲆ, ΔᐃⵠⲆᐃⲆᐃ, ⵠᐃⵠΔᐃΔΔ);
		const ᐃⵠᐃΔⲆΔᐃᐃΔ = ⲆᐃΔⵠᐃΔⲆ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[ᐃᐃⵠᐃ]);
		const ⲆⵠᐃΔⵠΔⵠⵠⲆ = ΔᐃᐃΔⲆⲆΔ(ⲆᐃΔⲆ[ΔΔⵠᐃ], ⲆᐃΔⲆ[1]);
		const ⲆᐃΔⵠᐃᐃⲆΔⲆ = ᐃⵠᐃΔⲆΔᐃᐃΔ ^ 18500;
		return ⲆᐃΔⵠᐃᐃⲆΔⲆ
	}

	function ⵠⲆΔⵠⵠΔⲆᐃⵠ(ΔΔ, Ⲇ) {
		var Ⲇⵠᐃ = this;
		this.ΔΔ = ΔΔ;
		this.Ⲇ = Ⲇ;
		if (-ⵠⵠⲆ < ⲆⲆⲆⲆᐃᐃᐃ.navigator.userAgent.indexOf("Edge")) {
			this.ⵠΔⵠⲆⵠᐃⵠ = "default";
			this.ᐃᐃⵠⲆᐃΔᐃ = "pointer"
		} else {
			this.ⵠΔⵠⲆⵠᐃⵠ = "url('img/cursor0.png'), default";
			this.ᐃᐃⵠⲆᐃΔᐃ = "url('img/cursor1.png'), pointer"
		}
		this.ⵠⲆⲆΔᐃⲆⵠ = ⵠᐃΔᐃ;
		this.ΔⲆⲆⲆⲆⲆⲆ = ⲆΔᐃⲆ;
		this.ⵠⵠⲆᐃⵠⵠⵠ = ⲆᐃⲆⲆ;
		this.ΔΔΔⵠⲆΔΔ = ΔᐃᐃⲆ;
		this.ΔⵠᐃΔⵠⵠᐃⲆΔ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style,
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 125) + ⵠ[454];
				this.style.top = "110px"
			}
		};
		this.ⵠΔᐃΔ = {
			"ⲆⲆΔⲆΔⲆᐃ": ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔΔⵠΔΔ]),
			"ᐃⵠΔⲆᐃΔΔ": ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ])
		};
		this.sign = {
			open: false,
			"ⲆᐃⲆᐃⲆⵠⲆⵠⵠ": 0,
			"ⵠᐃᐃⵠⲆᐃⵠ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("sign_object"),
			"ⲆᐃᐃⵠΔᐃᐃ": ΔΔᐃ,
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("sign_window"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("sign_window").style,
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⵠⵠⵠΔⵠ]),
			"ᐃⵠⵠΔⵠⵠᐃ": function() {
				var ᐃᐃΔ = Math.floor(Math.floor((3 + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / 4) * (ΔΔⵠᐃⵠ + Ⲇᐃ[Δ.ΔⵠᐃΔⵠᐃᐃ][ⵠⲆⲆᐃ].width) + 35);
				this.button.info.translate.x = ᐃᐃΔ;
				this.button.info.translate.y = 22
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 150) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 115) + ⵠ[454]
			},
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.sign.style.display = ⵠ[402];
				ⵠΔᐃⵠ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⵠⲆΔⵠ
			},
			select: function() {
				ⵠΔᐃⵠ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] = !ⵠΔᐃⵠ.sign[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (ⵠΔᐃⵠ.sign[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠΔᐃⵠ.sign.style.display = ⵠ[489];
				else ⵠΔᐃⵠ.sign.style.display = ⵠ[402]
			},
			ok: function() {
				ᐃΔᐃⵠ.ⲆⲆⵠᐃΔⲆⵠᐃᐃ(ⲆΔⲆ.sign.ⵠᐃΔⵠⲆ, ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ);
				ⵠΔᐃⵠ.sign.select()
			},
			up: function() {
				ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ = ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ === 0 ? ᐃΔᐃᐃΔ.ⲆⵠⲆⵠΔⲆΔ - ⲆᐃⲆⲆ : ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ - ⲆⲆΔᐃ;
				ⵠΔᐃⵠ.sign.ⵠᐃᐃⵠⲆᐃⵠ.src = "./img/sign" + ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ + ".png"
			},
			down: function() {
				ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ = (ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ + ᐃᐃΔᐃ) % ᐃΔᐃᐃΔ.ⲆⵠⲆⵠΔⲆΔ;
				ⵠΔᐃⵠ.sign.ⵠᐃᐃⵠⲆᐃⵠ.src = "./img/sign" + ⵠΔᐃⵠ.sign.ⲆᐃᐃⵠΔᐃᐃ + ".png"
			}
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quit_sign")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.sign.select, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("ok_sign")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.sign.ok, ΔᐃΔᐃᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("sign_up")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.sign.up, ΔᐃΔΔᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("sign_down")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.sign.down, ᐃⲆⲆΔΔ);
		this.ΔΔⲆΔⵠ = {
			open: ΔⲆᐃⲆΔ,
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("shop_market"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("shop_market").style,
			items: [{
				id: 0,
				name: "wood",
				"ⲆᐃᐃΔⵠ": ᐃⵠ,
				b: 1,
				a: ᐃⲆⲆᐃΔ,
				"ⵠᐃΔⵠⵠ": Δ.ΔⵠᐃΔⵠᐃᐃ
			}, {
				id: 1,
				name: "stone",
				"ⲆᐃᐃΔⵠ": ⲆΔᐃⲆ,
				b: ΔΔᐃᐃ,
				a: 4,
				"ⵠᐃΔⵠⵠ": Δ.ⲆᐃΔⵠΔᐃᐃ
			}, {
				id: ᐃᐃΔⵠ,
				name: "gold",
				"ⲆᐃᐃΔⵠ": 1,
				b: ΔΔᐃⵠ,
				a: 6,
				"ⵠᐃΔⵠⵠ": Δ.ⵠⵠⲆᐃⲆΔΔ
			}, {
				id: ⵠⲆⲆΔ,
				name: "diamond",
				"ⲆᐃᐃΔⵠ": 4,
				b: ⵠΔⲆᐃΔ,
				a: 1,
				"ⵠᐃΔⵠⵠ": Δ.ᐃᐃⲆⲆⲆΔΔ
			}, {
				id: 4,
				name: "amethyst",
				"ⲆᐃᐃΔⵠ": ⵠᐃⵠⵠⵠ,
				b: ⵠⵠΔⵠΔ,
				a: ᐃⵠ,
				"ⵠᐃΔⵠⵠ": Δ.ⵠᐃⵠΔⲆⵠⲆ
			}, {
				id: 5,
				name: "reidite",
				"ⲆᐃᐃΔⵠ": 16,
				b: 16,
				a: ᐃⵠⵠ,
				"ⵠᐃΔⵠⵠ": Δ.ᐃΔᐃⲆⲆⲆΔ
			}, {
				id: 6,
				name: "pumpkin_seed",
				"ⲆᐃᐃΔⵠ": ⲆᐃΔⵠⵠ,
				b: 10,
				a: 1,
				"ⵠᐃΔⵠⵠ": Δ.ⵠᐃᐃᐃⲆⵠΔ
			}, {
				id: 7,
				name: "carrot_seed",
				"ⲆᐃᐃΔⵠ": ⲆⲆᐃΔΔ,
				b: 16,
				a: 1,
				"ⵠᐃΔⵠⵠ": Δ.ΔⲆⲆΔⲆΔΔ
			}, {
				id: 8,
				name: "tomato_seed",
				"ⲆᐃᐃΔⵠ": 20,
				b: 20,
				a: ⲆΔᐃⲆ,
				"ⵠᐃΔⵠⵠ": Δ.ᐃⵠⲆⵠΔⲆⲆ
			}, {
				id: ᐃⲆΔΔᐃ,
				name: "thornbush_seed",
				"ⲆᐃᐃΔⵠ": 30,
				b: 30,
				a: 1,
				"ⵠᐃΔⵠⵠ": Δ.ⲆⵠⲆΔᐃΔΔ
			}, {
				id: ΔᐃΔᐃⵠ,
				name: "garlic_seed",
				"ⲆᐃᐃΔⵠ": 40,
				b: 40,
				a: ⲆΔᐃⲆ,
				"ⵠᐃΔⵠⵠ": Δ.ᐃΔᐃΔⲆΔⲆ
			}, {
				id: 11,
				name: "watermelon_seed",
				"ⲆᐃᐃΔⵠ": 60,
				b: 60,
				a: ᐃᐃΔᐃ,
				"ⵠᐃΔⵠⵠ": Δ.ΔⵠⲆⲆⵠΔⵠ
			}],
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ]),
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 450) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 270) + ⵠ[454]
			},
			select: function() {
				ⵠΔᐃⵠ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = !ⵠΔᐃⵠ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (ⵠΔᐃⵠ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
					ⵠΔᐃⵠ.ΔΔⲆΔⵠ.style.display = ⵠ[489]
				} else ⵠΔᐃⵠ.ΔΔⲆΔⵠ.style.display = ⵠ[402]
			},
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.ΔΔⲆΔⵠ.style.display = ⵠ[402];
				ⵠΔᐃⵠ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔΔᐃⵠⵠ
			},
			"ΔⲆᐃᐃᐃΔⲆ": function() {
				ᐃΔᐃⵠ.ᐃΔⲆᐃⵠΔⲆⲆᐃ(this.ΔᐃⲆⵠΔⵠΔ)
			},
			"ⲆᐃΔᐃΔ": function() {
				var ⲆΔ = this.id;
				if (this.ΔᐃⲆⵠΔⵠΔ.a === 1) {
					var Ⲇⵠⵠᐃ = Math.floor(Number(this.value) * this.ΔᐃⲆⵠΔⵠΔ.b);
					this.ΔᐃⲆⵠΔⵠΔ.ⲆᐃᐃΔⵠ = Ⲇⵠⵠᐃ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](this.ΔᐃⲆⵠΔⵠΔ.name + ⵠ[243])[ⲆⵠΔᐃᐃᐃΔ[359]] = Ⲇⵠⵠᐃ + ""
				} else {
					var Ⲇⵠⵠᐃ = Math.floor(Number(this.value) / this.ΔᐃⲆⵠΔⵠΔ.a);
					this.ΔᐃⲆⵠΔⵠΔ.ⲆᐃᐃΔⵠ = Ⲇⵠⵠᐃ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](this.ΔᐃⲆⵠΔⵠΔ.name + ⵠ[243])[ⲆⵠΔᐃᐃᐃΔ[359]] = Ⲇⵠⵠᐃ + ""
				}
			}
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quit_market")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ΔΔⲆΔⵠ.ⲆⲆᐃΔᐃ, ⵠⲆⵠΔⵠ);
		var ⵠᐃΔⲆᐃⲆᐃ = [
			[ⵠ[349], this.ΔΔⲆΔⵠ.ΔⲆᐃᐃᐃΔⲆ, "buy_"],
			[ⵠ[543], this.ΔΔⲆΔⵠ.ⲆᐃΔᐃΔ, ""],
			["change", this.ΔΔⲆΔⵠ.ⲆᐃΔᐃΔ, ""],
			["keypress", this.ΔΔⲆΔⵠ.keypress, ""]
		];
		for (var ΔΔΔ = ΔⲆⵠ; this.ΔΔⲆΔⵠ.items.length > ΔΔΔ; ΔΔΔ++) {
			var ΔᐃⵠΔⲆ = this.ΔΔⲆΔⵠ.items[ΔΔΔ];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + "_market").src = Ⲇᐃ[ΔᐃⵠΔⲆ.ⵠᐃΔⵠⵠ][0].ΔᐃΔⲆᐃ === ⵠΔⵠΔⵠ ? Ⲇᐃ[ΔᐃⵠΔⲆ.ⵠᐃΔⵠⵠ][ⲆⲆⲆ].src : Ⲇᐃ[ΔᐃⵠΔⲆ.ⵠᐃΔⵠⵠ][ⵠⵠⲆⲆ].ΔᐃΔⲆᐃ;
			if (ΔᐃⵠΔⲆ.a === ⵠⵠⲆ) {
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[243])[ⲆⵠΔᐃᐃᐃΔ[359]] = ΔᐃⵠΔⲆ.b;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).value = 1;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).step = ⲆⲆΔᐃ;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).min = 1;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).max = Math.floor(ΔⵠⵠΔΔⲆΔ / ΔᐃⵠΔⲆ.b)
			} else {
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[243])[ⲆⵠΔᐃᐃᐃΔ[359]] = ⲆΔⵠⲆ;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).value = ΔᐃⵠΔⲆ.a;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).step = ΔᐃⵠΔⲆ.a;
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).min = ΔᐃⵠΔⲆ.a
			}
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("buy_" + ΔᐃⵠΔⲆ.name + ⵠ[553]).ΔᐃⲆⵠΔⵠΔ = ΔᐃⵠΔⲆ;
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ΔᐃⵠΔⲆ.name + ⵠ[553]).ΔᐃⲆⵠΔⵠΔ = ΔᐃⵠΔⲆ;
			for (var ᐃⲆ = 0; ᐃⲆ < ⵠᐃΔⲆᐃⲆᐃ.length; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠᐃΔⲆᐃⲆᐃ[ᐃⲆ][2] + ΔᐃⵠΔⲆ.name + ⵠ[553])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠᐃΔⲆᐃⲆᐃ[ᐃⲆ][Δⵠⵠ], ⵠᐃΔⲆᐃⲆᐃ[ᐃⲆ][ΔᐃⵠΔ], ᐃⲆⲆΔΔ)
		}
		$("[type='number']").keypress((function(ⵠᐃᐃΔ) {
			ⵠᐃᐃΔ.preventDefault()
		}));
		this.options = {
			open: false,
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("option_in_game"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("option_in_game").style,
			"ΔⲆⵠⵠⲆ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("agree_ing").style,
			"ⵠⲆⲆⲆΔΔⲆ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_agree_ing").style,
			"ΔⵠΔⲆΔΔⵠ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("quest_agree_ing").style,
			"ᐃᐃΔΔᐃⵠᐃ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("spectator_agree_ing").style,
			"ᐃᐃⲆⵠⲆⲆⵠ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("auto_feed_agree_ing").style,
			"ΔⵠⲆⵠⵠᐃⲆ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("info_agree_ing").style,
			"ⵠΔⵠⵠΔᐃᐃ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("pixelated_agree_ing").style,
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ]),
			"ⲆⵠᐃⲆᐃⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.options[ⲆⵠΔᐃᐃᐃΔ[88]] = !ⵠΔᐃⵠ.options[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (ⵠΔᐃⵠ.options[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠΔᐃⵠ.options.style.display = ⵠ[489];
				else ⵠΔᐃⵠ.options.style.display = ⵠ[402]
			},
			"ⲆᐃⵠΔΔᐃⵠᐃᐃ": function() {
				ᐃᐃΔΔ.ᐃⵠΔⵠⵠΔⲆ()
			},
			"ΔᐃΔΔᐃⲆⲆΔⵠ": function() {
				ᐃᐃΔΔ.ΔΔΔⵠⵠᐃⵠ()
			},
			high: function() {
				ᐃᐃΔΔ.ΔⲆΔΔⵠᐃΔΔΔ()
			},
			low: function() {
				ᐃᐃΔΔ.ᐃⵠᐃⵠΔᐃᐃⵠᐃ()
			},
			"ΔⲆⵠⲆᐃ": function() {
				ⵠΔᐃⵠ.ⵠᐃΔⵠ.ΔⲆⵠⲆᐃ()
			},
			"ᐃΔⵠΔⲆᐃᐃᐃⲆ": function() {
				ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ΔⲆⵠⲆᐃ()
			},
			"ΔⵠᐃΔᐃΔⵠᐃΔ": function() {
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ΔⲆⵠⲆᐃ()
			},
			"ⲆⲆΔⲆΔΔΔⲆⵠ": function() {
				ⲆΔⲆ.ⵠⵠⵠⲆΔ.ᐃᐃᐃⵠⲆⵠΔ()
			},
			"ⵠᐃⵠⵠⲆΔΔⵠΔ": function() {
				ⲆΔⲆ.ᐃⲆΔⲆⵠ.ᐃᐃᐃⵠⲆⵠΔ()
			},
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.options.style.display = ⵠ[402];
				ⵠΔᐃⵠ.options[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔᐃΔΔᐃ
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 235) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 170) + ⵠ[454]
			}
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[90])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ⲆᐃⵠΔΔᐃⵠᐃᐃ, ΔᐃⲆⵠⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[426])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ΔᐃΔΔᐃⲆⲆΔⵠ, ΔΔᐃⵠⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[380])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.low, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[242])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.high, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quit_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ⲆⲆᐃΔᐃ, ⲆᐃⲆᐃΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ΔⲆⵠⲆᐃ, ᐃⲆⲆΔΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quest_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ΔⵠᐃΔᐃΔⵠᐃΔ, ΔᐃΔᐃᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ᐃΔⵠΔⲆᐃᐃᐃⲆ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("spectator_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ⲆⲆΔⲆΔΔΔⲆⵠ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("auto_feed_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.options.ⵠᐃⵠⵠⲆΔΔⵠΔ, ΔᐃΔᐃᐃ);
		this.ⵠⲆᐃⲆⵠ = {
			open: false,
			"ᐃΔΔⲆΔ": ⲆΔΔᐃ.get(ⵠ[259]) ? ⲆΔΔᐃ.get(ⵠ[259]) === "0" ? 0 : ᐃⲆⵠΔ : ᐃᐃΔᐃ,
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[318]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[318]).style,
			"ΔⲆⵠⵠⲆ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_agree").style,
			button: ΔⲆⵠ,
			"ᐃⲆ": ⵠⵠⲆⲆ,
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.style.display = ⵠ[402];
				ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔᐃⲆⵠⲆ
			},
			"ⵠⵠⲆᐃⲆⵠⲆ": function() {
				if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆⲆⲆ) ᐃΔᐃⵠ.ⵠⲆΔⲆⵠⵠⵠᐃΔ();
				ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ⲆⲆᐃΔᐃ()
			},
			"ΔⲆⵠⲆᐃ": function() {
				if (!ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ᐃΔΔⲆΔ) {
					ⲆΔΔᐃ.set(ⵠ[259], "1");
					ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[402];
					ⵠΔᐃⵠ.options.ⵠⲆⲆⲆΔΔⲆ.display = ⵠ[489]
				} else {
					ⲆΔΔᐃ.set(ⵠ[259], "0");
					ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[489];
					ⵠΔᐃⵠ.options.ⵠⲆⲆⲆΔΔⲆ.display = ⵠ[402]
				}
				ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ᐃΔΔⲆΔ = !ⵠΔᐃⵠ.ⵠⲆᐃⲆⵠ.ᐃΔΔⲆΔ
			},
			"ⲆΔΔΔᐃⲆᐃ": function() {
				if (!this.ᐃΔΔⲆΔ) this.ⵠⵠⲆᐃⲆⵠⲆ();
				else {
					this.style.display = ⵠ[489];
					this[ⲆⵠΔᐃᐃᐃΔ[88]] = true
				}
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 235) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 130) + ⵠ[454]
			}
		};
		this.ⵠⲆᐃⲆⵠ.id.oncontextmenu = function() {
			return ⵠΔⲆᐃⲆ
		};
		this.ⵠⲆᐃⲆⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[402];
		if (this.ⵠⲆᐃⲆⵠ.ᐃΔΔⲆΔ) this.options.ⵠⲆⲆⲆΔΔⲆ.display = ⵠ[489];
		else this.options.ⵠⲆⲆⲆΔΔⲆ.display = ⵠ[402];
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_yes_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠⲆᐃⲆⵠ.ⵠⵠⲆᐃⲆⵠⲆ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_no_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠⲆᐃⲆⵠ.ⲆⲆᐃΔᐃ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("cancel_case_agree")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠⲆᐃⲆⵠ.ΔⲆⵠⲆᐃ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[318], (function(ΔΔⵠ) {
			ΔΔⵠ.preventDefault()
		}), false);
		this.ⵠΔⵠⵠⵠΔᐃ = {
			"ᐃΔΔⲆΔ": ⲆΔΔᐃ.get(ⵠ[518]) ? ⲆΔΔᐃ.get(ⵠ[518]) === "0" ? Ⲇᐃⵠᐃ : 1 : ⵠⵠⲆΔ,
			"ᐃΔⵠᐃΔⵠⵠ": function(ⲆᐃᐃΔⵠ) {
				if (ⲆᐃᐃΔⵠ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("game_canvas").style.imageRendering = "pixelated";
				else document[ⲆⵠΔᐃᐃᐃΔ[181]]("game_canvas").style.imageRendering = ⵠ[187]
			},
			"ΔⲆⵠⲆᐃ": function() {
				if (ⵠΔᐃⵠ.ⵠΔⵠⵠⵠΔᐃ.ᐃΔΔⲆΔ === ᐃⵠΔ) {
					ⲆΔΔᐃ.set(ⵠ[518], "1");
					ⵠΔᐃⵠ.ⵠΔⵠⵠⵠΔᐃ.ᐃΔⵠᐃΔⵠⵠ(ΔΔⵠΔⵠ);
					ⵠΔᐃⵠ.options.ⵠΔⵠⵠΔᐃᐃ.display = ⵠ[489]
				} else {
					ⲆΔΔᐃ.set(ⵠ[518], "0");
					ⵠΔᐃⵠ.ⵠΔⵠⵠⵠΔᐃ.ᐃΔⵠᐃΔⵠⵠ(0);
					ⵠΔᐃⵠ.options.ⵠΔⵠⵠΔᐃᐃ.display = ⵠ[402]
				}
				ⵠΔᐃⵠ.ⵠΔⵠⵠⵠΔᐃ.ᐃΔΔⲆΔ = (ⵠΔᐃⵠ.ⵠΔⵠⵠⵠΔᐃ.ᐃΔΔⲆΔ + ⲆᐃⲆⲆ) % 2
			}
		};
		ⵠⵠⲆΔ === this.ⵠΔⵠⵠⵠΔᐃ.ᐃΔΔⲆΔ ? this.options.ⵠΔⵠⵠΔᐃᐃ.display = ⵠ[489] : (this.ⵠΔⵠⵠⵠΔᐃ.ᐃΔⵠᐃΔⵠⵠ(0), this.options.ⵠΔⵠⵠΔᐃᐃ.display = ⵠ[402]);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("pixelated_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠΔⵠⵠⵠΔᐃ.ΔⲆⵠⲆᐃ, ᐃⵠⲆΔⵠ);
		this.ΔΔΔⵠⲆ = {
			"ᐃΔΔⲆΔ": ⲆΔΔᐃ.get(ⵠ[363]) ? ⲆΔΔᐃ.get(ⵠ[363]) === "0" ? ΔΔᐃ : ΔΔⵠΔⵠ : ⵠᐃΔᐃ,
			display: 0,
			x: 0,
			y: 0,
			id: Ⲇᐃⵠᐃ,
			"ᐃΔⵠΔ": 0,
			"ΔⲆⵠⲆᐃ": function() {
				if (ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ᐃΔΔⲆΔ === ΔᐃⲆΔ) {
					ⲆΔΔᐃ.set(ⵠ[363], "1");
					ⵠΔᐃⵠ.options.ΔⵠⲆⵠⵠᐃⲆ.display = ⵠ[489]
				} else {
					ⲆΔΔᐃ.set(ⵠ[363], "0");
					ⵠΔᐃⵠ.options.ΔⵠⲆⵠⵠᐃⲆ.display = ⵠ[402]
				}
				ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ᐃΔΔⲆΔ = (ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ᐃΔΔⲆΔ + 1) % ᐃⵠΔⲆ
			},
			"ⵠᐃⲆⲆ": function(ⲆⲆⵠⵠⵠ, ΔΔⵠⵠ, ᐃΔⵠΔ) {
				if (ⲆⲆⵠⵠⵠ && this.ᐃΔΔⲆΔ) {
					this.display = 1;
					if (ᐃΔⵠΔ === ⲆⵠⲆ) this.id = ΔΔⵠⵠ.id;
					else this.id = ⲆᐃⲆⲆᐃ[ΔΔⵠⵠ.id].ᐃⵠⲆᐃ;
					this.x = ΔΔⵠⵠ.info.translate.x + 80;
					this.y = ΔΔⵠⵠ.info.translate.y;
					this.ᐃΔⵠΔ = ᐃΔⵠΔ
				}
				return ⲆⲆⵠⵠⵠ
			}
		};
		if (1 === this.ΔΔΔⵠⲆ.ᐃΔΔⲆΔ) this.options.ΔⵠⲆⵠⵠᐃⲆ.display = ⵠ[489];
		else this.options.ΔⵠⲆⵠⵠᐃⲆ.display = ⵠ[402];
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("info_case_agree_opt")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ΔΔΔⵠⲆ.ΔⲆⵠⲆᐃ, false);
		if (ⲆΔΔᐃ.get("starve_scale")) {
			ᐃΔΔⲆⲆⵠᐃ = Number(ⲆΔΔᐃ.get("starve_scale"));
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529]).value = ᐃΔΔⲆⲆⵠᐃ;
			ᐃΔΔⲆⲆⵠᐃ *= devicePixelRatio / ᐃΔᐃΔⵠΔᐃ;
			ⲆⵠⲆⲆⲆⵠᐃ()
		}
		this.ΔⲆΔⲆⵠⲆⲆ = function() {
			ⲆΔΔᐃ.set("starve_scale", "" + document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529]).value);
			ᐃΔΔⲆⲆⵠᐃ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529]).value * (devicePixelRatio / ᐃΔᐃΔⵠΔᐃ);
			ⲆⵠⲆⲆⲆⵠᐃ()
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[529])[ⲆⵠΔᐃᐃᐃΔ[93]]("input", this.ΔⲆΔⲆⵠⲆⲆ, false);
		this.ⵠᐃΔⵠ = {
			open: false,
			"ᐃΔΔⲆΔ": ⲆΔΔᐃ.get(ⵠ[199]) ? ⲆΔΔᐃ.get(ⵠ[199]) === "0" ? ⲆΔᐃ : ⵠⵠⲆΔ : ΔΔᐃᐃ,
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("sure_delete"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("sure_delete").style,
			"ΔⲆⵠⵠⲆ": document[ⲆⵠΔᐃᐃᐃΔ[181]]("agree").style,
			button: 0,
			"ᐃⲆ": 0,
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.ⵠᐃΔⵠ.style.display = ⵠ[402];
				ⵠΔᐃⵠ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
			},
			all: function() {
				if (!ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait) {
					if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && ⲆΔⲆ.ᐃΔⵠΔ.id < 0 && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) ᐃΔᐃⵠ.ᐃⲆᐃΔΔᐃᐃᐃⲆ(ⵠΔᐃⵠ.ⵠᐃΔⵠ.button);
					ⵠΔᐃⵠ.ⵠᐃΔⵠ.ⲆⲆᐃΔᐃ()
				}
			},
			"ⲆⵠⲆΔ": function() {
				if (ⲆΔⲆ.ᐃΔⵠΔ.ᐃΔⵠⲆⲆ && !ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait) {
					if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && ⲆΔⲆ.ᐃΔⵠΔ.id < 0 && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) ᐃΔᐃⵠ.ⵠⵠⲆΔᐃⵠⲆΔⲆ(ⵠΔᐃⵠ.ⵠᐃΔⵠ.button);
					ⵠΔᐃⵠ.ⵠᐃΔⵠ.ⲆⲆᐃΔᐃ()
				}
			},
			"ⵠⵠΔⵠΔⵠⵠΔΔ": function() {
				if (!ⲆΔⲆ.ᐃᐃΔⲆᐃ.wait) {
					if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < ⵠᐃⲆᐃ && ⲆΔⲆ.ᐃΔⵠΔ.id < 0 && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) ᐃΔᐃⵠ.ⲆⵠⵠⲆⵠⵠⵠⲆⵠ(ⵠΔᐃⵠ.ⵠᐃΔⵠ.button);
					ⵠΔᐃⵠ.ⵠᐃΔⵠ.ⲆⲆᐃΔᐃ()
				}
			},
			"ΔⲆⵠⲆᐃ": function() {
				if (!ⵠΔᐃⵠ.ⵠᐃΔⵠ.ᐃΔΔⲆΔ) {
					ⲆΔΔᐃ.set(ⵠ[199], "1");
					ⵠΔᐃⵠ.ⵠᐃΔⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[402];
					ⵠΔᐃⵠ.options.ΔⲆⵠⵠⲆ.display = ⵠ[489]
				} else {
					ⲆΔΔᐃ.set(ⵠ[199], "0");
					ⵠΔᐃⵠ.ⵠᐃΔⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[489];
					ⵠΔᐃⵠ.options.ΔⲆⵠⵠⲆ.display = ⵠ[402]
				}
				ⵠΔᐃⵠ.ⵠᐃΔⵠ.ᐃΔΔⲆΔ = !ⵠΔᐃⵠ.ⵠᐃΔⵠ.ᐃΔΔⲆΔ
			},
			"ⲆΔΔΔᐃⲆᐃ": function(ΔΔⵠⵠ) {
				this.button = ΔΔⵠⵠ;
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("item_to_del").src = Ⲇᐃ[ᐃΔᐃᐃ[ΔΔⵠⵠ].ⵠⵠ][ⲆΔᐃ].ΔᐃΔⲆᐃ === undefined ? Ⲇᐃ[ᐃΔᐃᐃ[ΔΔⵠⵠ].ⵠⵠ][ⲆⲆⲆ].src : Ⲇᐃ[ᐃΔᐃᐃ[ΔΔⵠⵠ].ⵠⵠ][ⵠⲆⲆᐃ].ΔᐃΔⲆᐃ;
				if (ᐃΔᐃᐃ[ΔΔⵠⵠ].ⲆⵠⲆΔ && !ⲆΔⲆ.ΔⵠⲆΔΔ && ⲆΔⲆ.ᐃΔⵠΔ.ᐃΔⵠⲆⲆ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("recycle_delete").style.display = ⵠ[489];
				else document[ⲆⵠΔᐃᐃᐃΔ[181]]("recycle_delete").style.display = ⵠ[402];
				if (!this.ᐃΔΔⲆΔ) this.all();
				else {
					this.style.display = ⵠ[489];
					this[ⲆⵠΔᐃᐃᐃΔ[88]] = ⲆΔᐃⲆⲆ
				}
			},
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 235) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 175) + ⵠ[454]
			}
		};
		this.ⵠᐃΔⵠ.ΔⲆⵠⵠⲆ.display = ⵠ[402];
		this.ⵠᐃΔⵠ.ᐃΔΔⲆΔ ? this.options.ΔⲆⵠⵠⲆ.display = ⵠ[489] : this.options.ΔⲆⵠⵠⲆ.display = ⵠ[402];
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("one_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠᐃΔⵠ.ⵠⵠΔⵠΔⵠⵠΔΔ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("yes_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠᐃΔⵠ.all, ΔⵠⵠΔⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("recycle_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠᐃΔⵠ.ⲆⵠⲆΔ, ΔᐃΔΔΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("no_delete")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠᐃΔⵠ.ⲆⲆᐃΔᐃ, ΔΔᐃⵠⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("case_agree")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠᐃΔⵠ.ΔⲆⵠⲆᐃ, ΔΔᐃⵠⵠ);
		this.ⲆᐃⵠΔⵠ = {
			open: ⲆⵠᐃΔΔ,
			"ⲆⲆΔⲆΔ": -1,
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔΔⵠⲆⲆ]),
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[205]),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[205]).style,
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 300) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 215) + ⵠ[454]
			},
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
				ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.style.display = ⵠ[402]
			},
			select: function() {
				ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = !ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (!ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.style.display = ⵠ[402];
				else ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.style.display = ⵠ[489]
			},
			"ΔⲆᐃᐃᐃΔⲆ": function() {
				if (ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆΔⲆΔ >= 0) {
					ᐃΔᐃⵠ.ᐃΔⲆᐃⵠΔΔᐃⲆ(ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆΔⲆΔ);
					ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆᐃΔᐃ();
					if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], ⵠ[32], "" + ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆΔⲆΔ)
				}
			},
			"ⲆΔⲆΔΔ": function() {
				var ⲆⲆᐃᐃⵠ = ⲆΔⲆ.ⲆᐃⵠΔⵠ.value;
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("points_bank")[ⲆⵠΔᐃᐃᐃΔ[359]] = Ⲇᐃⵠ.ⵠΔⵠᐃⲆΔⲆ(ⲆⲆᐃᐃⵠ) + " points";
				for (var ᐃⲆ = ΔⵠⲆⲆ; ᐃⲆ < ⵠⵠᐃΔⵠⲆⲆ.length; ᐃⲆ++) {
					if (ⵠⵠᐃΔⵠⲆⲆ[ᐃⲆ].ⲆⲆᐃᐃⵠ > ⲆⲆᐃᐃⵠ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("starter" + (ᐃⲆ + 1)).style[ⵠ[536]] = "0.4";
					else document[ⲆⵠΔᐃᐃᐃΔ[181]]("starter" + (ᐃⲆ + 1)).style[ⵠ[536]] = "1"
				}
				for (ᐃⲆ = 1; ᐃⲆ < ⵠⲆⲆⵠⲆᐃⵠ; ᐃⲆ++) {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[404] + ᐃⲆ).src = "./img/empty-shop.png";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("amount_shop" + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ""
				}
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[580]).style[ⵠ[536]] = "0.2"
			},
			"ⲆⵠⵠⲆΔᐃΔᐃΔ": function() {
				if (this.id.length > ⲆⵠⲆⲆⲆΔⲆ) var ⲆΔ = Number(this.id.charAt(7) + this.id.charAt(ΔⲆΔⲆⵠ));
				else var ⲆΔ = Number(this.id.charAt(7));
				var ᐃⵠⵠⲆ = ⵠⵠᐃΔⵠⲆⲆ[ⲆΔ - ⲆΔᐃⲆ];
				if (ⲆΔⲆ.ⲆᐃⵠΔⵠ.value >= ᐃⵠⵠⲆ.ⲆⲆᐃᐃⵠ) {
					ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆΔⲆΔ = ⲆΔ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[580]).style[ⵠ[536]] = "1"
				} else {
					ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.ⲆⲆΔⲆΔ = -ΔⲆᐃ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[580]).style[ⵠ[536]] = "0.2"
				}
				ᐃⵠⵠⲆ = ᐃⵠⵠⲆ.items;
				for (var ᐃⲆ = ᐃⵠⵠ, ΔΔΔ = ᐃΔⲆⵠ; ᐃⲆ < ᐃⵠⵠⲆ.length + ⲆΔᐃⲆ; ᐃⲆ++) {
					if (ᐃⵠⵠⲆ[ᐃⲆ - 1][ΔΔⲆΔ] === ⵠⲆ.ⵠΔΔⵠ) continue;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[404] + ΔΔΔ).style.display = ⵠ[489];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[404] + ΔΔΔ).src = Ⲇᐃ[ᐃΔᐃᐃ[ᐃⵠⵠⲆ[ᐃⲆ - ΔΔⵠΔⵠ][1]].ⵠⵠ][0].ΔᐃΔⲆᐃ === undefined ? Ⲇᐃ[ᐃΔᐃᐃ[ᐃⵠⵠⲆ[ᐃⲆ - ᐃΔⲆⵠ][1]].ⵠⵠ][0].src : Ⲇᐃ[ᐃΔᐃᐃ[ᐃⵠⵠⲆ[ᐃⲆ - 1][1]].ⵠⵠ][ΔⵠⲆⲆ].ΔᐃΔⲆᐃ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("amount_shop" + ΔΔΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "" + ᐃⵠⵠⲆ[ᐃⲆ - 1][0];
					ΔΔΔ++
				}
				for (; ΔΔΔ < 13; ΔΔΔ++) {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[404] + ΔΔΔ).src = "./img/empty-shop.png";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("amount_shop" + ΔΔΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ""
				}
			}
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quit3")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⲆᐃⵠΔⵠ.ⲆⲆᐃΔᐃ, ⲆΔᐃⵠⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[580])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⲆᐃⵠΔⵠ.ΔⲆᐃᐃᐃΔⲆ, ⲆⵠᐃΔΔ);
		for (var ᐃⲆ = ⵠᐃΔᐃ; ΔΔᐃΔΔᐃᐃ > ᐃⲆ; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]]("starter" + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⲆᐃⵠΔⵠ.ⲆⵠⵠⲆΔᐃΔᐃΔ, ⲆΔᐃⵠⲆ);
		this.ⵠⵠᐃⲆ = {
			open: false,
			"ᐃΔΔⲆΔ": ⲆΔΔᐃ.get(ⵠ[51]) ? ⲆΔΔᐃ.get(ⵠ[51]) === "1" ? 1 : Δⵠⵠ : 0,
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ]),
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("chronoquest"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("chronoquest").style,
			"ⵠᐃⵠ": function() {
				this.style.left = Math.floor(ᐃΔΔᐃ - 420) + ⵠ[454];
				this.style.top = Math.floor(ⲆⲆΔⲆ - 270) + ⵠ[454]
			},
			"ⲆⲆᐃΔᐃ": function() {
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.style.display = ⵠ[402];
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
			},
			select: function() {
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = !ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (!ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠΔᐃⵠ.ⵠⵠᐃⲆ.style.display = ⵠ[402];
				else ⵠΔᐃⵠ.ⵠⵠᐃⲆ.style.display = ⵠ[489]
			},
			list: [],
			reset: function() {
				for (var ᐃⲆ = 0; ᐃⲆ < ⵠⵠᐃⲆᐃΔΔ.length; ᐃⲆ++) {
					this.list[ᐃⲆ] = 1;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ᐃⲆ).style.display = ⵠ[489];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[73] + ᐃⲆ).style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ).style.display = ⵠ[402]
				}
			},
			"ᐃⵠᐃⵠⲆᐃⲆ": ⵠⲆⲆᐃ,
			"ΔΔⵠⲆΔⵠⵠ": Δⵠⵠ,
			"ⲆᐃⲆⲆⵠᐃⵠⵠⵠ": function() {
				if (!ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
				var ᐃⵠᐃᐃᐃ = (new Date).getTime();
				if (ᐃⵠᐃᐃᐃ - this.ᐃⵠᐃⵠⲆᐃⲆ < 1e3) return;
				this.ᐃⵠᐃⵠⲆᐃⲆ = ᐃⵠᐃᐃᐃ;
				for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ⵠⵠᐃⲆᐃΔΔ.length; ᐃⲆ++) {
					if (!ⵠΔᐃⵠ.ⵠⵠᐃⲆ.list[ᐃⲆ]) continue;
					var ᐃⲆⵠ = ⵠⵠᐃⲆᐃΔΔ[ᐃⲆ].time - (ᐃⵠᐃᐃᐃ - ⲆΔΔ.ΔᐃⲆᐃᐃ.ⲆΔⲆΔΔ + ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ΔΔⵠⲆΔⵠⵠ);
					if (ᐃⲆⵠ > 96e4) {
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = Math.floor(ᐃⲆⵠ / 48e4) + " days"
					} else if (ᐃⲆⵠ > 48e4) {
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = Math.floor(ᐃⲆⵠ / 48e4) + " day"
					} else if (ᐃⲆⵠ > 6e4) {
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = Math.floor(ᐃⲆⵠ / 6e4) + " min"
					} else document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[359]] = Math.floor(ᐃⲆⵠ / 1e3) + " sec"
				}
			},
			restore: function(ⲆⲆⲆᐃ) {
				for (var ᐃⲆ = 0; ᐃⲆ < ⲆⲆⲆᐃ.length; ᐃⲆ++) {
					if (ⲆⲆⲆᐃ[ᐃⲆ] != ⵠᐃΔᐃ) ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃⲆᐃᐃⵠⲆⲆ(ᐃⲆ, ⲆⲆⲆᐃ[ᐃⲆ])
				}
			},
			"ᐃⲆᐃᐃⵠⲆⲆ": function(ⲆΔ, ⵠⲆᐃΔ) {
				if (ⵠⲆᐃΔ === ⵠΔᐃⲆ && (ⲆΔ === ΔᐃᐃΔᐃ || ⲆΔ === 12)) {
					ⲆΔⲆ.ⵠΔᐃᐃ.ΔⵠⲆⲆⵠΔΔ(ΔⲆⵠ, ⲆΔⵠⲆ);
					ⵠΔᐃⵠ.ⵠⵠⲆⲆⲆⲆⲆ()
				}
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ⲆΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
				if (ⵠⲆᐃΔ > ΔΔⲆΔ) {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[73] + ⲆΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "SUCCEED";
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ⲆΔ).style.display = ⵠ[402]
				} else if (ⵠⲆᐃΔ === 0) {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[73] + ⲆΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "FAILED";
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[576] + ⲆΔ).style.display = ⵠ[402]
				}
				if (ⵠⲆᐃΔ === 2) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ⲆΔ).style.display = ⵠ[489];
				else document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ⲆΔ).style.display = ⵠ[402];
				document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[73] + ⲆΔ).style.display = "inline";
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.list[ⲆΔ] = ΔᐃⲆΔ
			},
			modify: function(ⲆΔ, ⵠⲆᐃΔ) {
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃⲆᐃᐃⵠⲆⲆ(ⲆΔ, ⵠⲆᐃΔ);
				if (ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃΔΔⲆΔ) {
					ⵠΔᐃⵠ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = true;
					ⵠΔᐃⵠ.ⵠⵠᐃⲆ.style.display = ⵠ[489]
				}
			},
			"ΔⲆⵠⲆᐃ": function() {
				if (!ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃΔΔⲆΔ) {
					ⲆΔΔᐃ.set(ⵠ[51], "1");
					ⵠΔᐃⵠ.options.ΔⵠΔⲆΔΔⵠ.display = ⵠ[489]
				} else {
					ⲆΔΔᐃ.set(ⵠ[51], "0");
					ⵠΔᐃⵠ.options.ΔⵠΔⲆΔΔⵠ.display = ⵠ[402]
				}
				ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃΔΔⲆΔ = !ⵠΔᐃⵠ.ⵠⵠᐃⲆ.ᐃΔΔⲆΔ
			},
			"ΔⲆΔᐃⵠⲆΔΔΔ": function() {
				var ᐃⵠⲆ = Number(this.id.charAt(13));
				var Δᐃⵠᐃ = Number(this.id.charAt(14));
				if (this.id.charAt(ΔⲆΔⵠⵠΔⲆ) !== "" && Δᐃⵠᐃ >= 0 && Δᐃⵠᐃ <= ᐃᐃΔⲆⵠⲆΔ) ᐃⵠⲆ = ᐃⵠⲆ * ⲆᐃᐃᐃⲆ + Δᐃⵠᐃ;
				ᐃΔᐃⵠ.ⲆⵠᐃⲆΔΔⵠΔⲆ(ᐃⵠⲆ)
			}
		};
		this.ⵠⵠᐃⲆ.ᐃΔΔⲆΔ ? this.options.ΔⵠΔⲆΔΔⵠ.display = ⵠ[489] : this.options.ΔⵠΔⲆΔΔⵠ.display = ⵠ[402];
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[271])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠⵠᐃⲆ.ⲆⲆᐃΔᐃ, ΔⲆⵠᐃⵠ);
		for (var ᐃⲆ = 0; ⵠⵠᐃⲆᐃΔΔ.length > ᐃⲆ; ᐃⲆ++) document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[475] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ⵠⵠᐃⲆ.ΔⲆΔᐃⵠⲆΔΔΔ, false);
		this.Ⲇⵠᐃⵠ = {
			open: false,
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ]),
			list: {
				id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]),
				style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style,
				"ΔᐃⲆⵠΔⵠⲆ": [],
				"ᐃᐃΔΔⵠΔⲆ": 0,
				"ⵠᐃⵠ": function() {
					this.style.left = Math.floor(ᐃΔΔᐃ - 335) + ⵠ[454];
					this.style.top = Math.floor(ⲆⲆΔⲆ - 215) + ⵠ[454]
				},
				"ⲆⲆᐃΔᐃ": function() {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style.display = ⵠ[402];
					ⵠΔᐃⵠ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ᐃⵠᐃⵠᐃ
				},
				"ⲆᐃⲆⲆⲆⵠΔ": function() {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[489]
				},
				"ⲆΔⲆⲆ": function(ᐃⲆ) {
					var Δᐃᐃ = this.ΔᐃⲆⵠΔⵠⲆ[ᐃⲆ];
					if (Δᐃᐃ.ⵠⲆⵠ) document[ⲆⵠΔᐃᐃᐃΔ[181]]("watercraft").style.display = ⵠ[489];
					else document[ⲆⵠΔᐃᐃᐃΔ[181]]("watercraft").style.display = ⵠ[402];
					if (Δᐃᐃ.f) document[ⲆⵠΔᐃᐃᐃΔ[181]]("firecraft").style.display = ⵠ[489];
					else document[ⲆⵠΔᐃᐃᐃΔ[181]]("firecraft").style.display = ⵠ[402];
					if (Δᐃᐃ.w) document[ⲆⵠΔᐃᐃᐃΔ[181]]("workcraft").style.display = ⵠ[489];
					else document[ⲆⵠΔᐃᐃᐃΔ[181]]("workcraft").style.display = ⵠ[402];
					if (Δᐃᐃ.e) document[ⲆⵠΔᐃᐃᐃΔ[181]]("wellcraft").style.display = ⵠ[489];
					else document[ⲆⵠΔᐃᐃᐃΔ[181]]("wellcraft").style.display = ⵠ[402];
					var Δᐃᐃ = Δᐃᐃ.r;
					for (var ᐃⲆ = Δⵠⵠ, ΔΔΔ = 1; ᐃⲆ < Δᐃᐃ.length; ᐃⲆ++) {
						document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv" + ΔΔΔ).style.display = ⵠ[489];
						document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv" + ΔΔΔ).src = Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ[ᐃⲆ][ⲆΔᐃ]].ⵠⵠ][0].ΔᐃΔⲆᐃ === ᐃᐃΔⲆⲆ ? Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ[ᐃⲆ][ⵠᐃⲆᐃ]].ⵠⵠ][0].src : Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ[ᐃⲆ][ΔⲆⵠ]].ⵠⵠ][Δⵠⵠ].ΔᐃΔⲆᐃ;
						document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb" + ΔΔΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = "" + Δᐃᐃ[ᐃⲆ][ⲆⲆΔᐃ];
						ΔΔΔ++
					}
					for (; ΔΔΔ < ᐃⲆⵠⲆΔ; ΔΔΔ++) {
						document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv" + ΔΔΔ).style.display = ⵠ[402];
						document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb" + ΔΔΔ)[ⲆⵠΔᐃᐃᐃΔ[359]] = ""
					}
				},
				select: function(ᐃᐃΔΔⵠΔⲆ) {
					this.ᐃᐃΔΔⵠΔⲆ = ᐃᐃΔΔⵠΔⲆ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("workcraft").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("firecraft").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("watercraft").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("wellcraft").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style.display = ⵠ[489];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv1").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv2").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv3").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv4").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("inv5").style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb1")[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb2")[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb3")[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb4")[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("numb5")[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
					for (var ᐃⲆ = 0, ΔΔΔ = 0; ᐃⲆ < ⲆᐃⲆⲆᐃ.length; ᐃⲆ++) {
						var Δᐃᐃ = ⲆᐃⲆⲆᐃ[ᐃⲆ];
						if (ᐃᐃΔΔⵠΔⲆ === Δᐃᐃ.ᐃⲆⵠ) {
							this.ΔᐃⲆⵠΔⵠⲆ[ΔΔΔ] = Δᐃᐃ;
							ΔΔΔ++;
							document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_" + ΔΔΔ).style.display = ⵠ[489];
							document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_" + ΔΔΔ).src = Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ.ᐃⵠⲆᐃ].ⵠⵠ][0].ΔᐃΔⲆᐃ === ᐃᐃⲆⵠⲆ ? Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ.ᐃⵠⲆᐃ].ⵠⵠ][ΔΔᐃ].src : Ⲇᐃ[ᐃΔᐃᐃ[Δᐃᐃ.ᐃⵠⲆᐃ].ⵠⵠ][ΔᐃⲆΔ].ΔᐃΔⲆᐃ
						}
					}
					for (ΔΔΔ++; ΔΔΔ < 49; ΔΔΔ++) document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_" + ΔΔΔ).style.display = ⵠ[402]
				}
			},
			"ᐃⵠΔⲆⲆΔᐃ": {
				id: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]),
				style: document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style,
				"ⵠᐃⵠ": function() {
					this.style.left = Math.floor(ᐃΔΔᐃ - 285) + ⵠ[454];
					this.style.top = Math.floor(ⲆⲆΔⲆ - 170) + ⵠ[454]
				},
				"ⲆⲆᐃΔᐃ": function() {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[402];
					ⵠΔᐃⵠ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false
				}
			},
			"ΔΔⲆⲆᐃᐃᐃⵠⲆ": function() {
				this[ⲆⵠΔᐃᐃᐃΔ[88]] = !this[ⲆⵠΔᐃᐃᐃΔ[88]];
				if (!this[ⲆⵠΔᐃᐃᐃΔ[88]]) {
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[402];
					document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style.display = ⵠ[402]
				} else document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[489]
			}
		};
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quit")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.Ⲇⵠᐃⵠ.ᐃⵠΔⲆⲆΔᐃ.ⲆⲆᐃΔᐃ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("quitmenu")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.Ⲇⵠᐃⵠ.list.ⲆⲆᐃΔᐃ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("backhome")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.Ⲇⵠᐃⵠ.list.ⲆᐃⲆⲆⲆⵠΔ, false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("hatcategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ⲆⲆⲆᐃⵠ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("weaponcategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ⵠⵠⵠᐃⵠ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("toolcategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ΔΔΔⲆΔ)
		}), ⲆΔᐃⵠⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("foodcategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ΔⵠⲆᐃⵠ)
		}), ΔⲆᐃⲆΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("placeablecategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ⲆⵠⲆⲆΔ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("constructioncategory")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.select(ᐃⵠⲆΔ.ᐃⵠΔⲆⵠ)
		}), ⵠⲆⲆⵠΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_1")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(0)
		}), ⲆΔⲆΔⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_2")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(1)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_3")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ᐃⲆⵠᐃ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_4")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ⵠⲆⲆΔ)
		}), ΔᐃⲆⵠⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_5")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ⵠᐃⵠᐃⲆ)
		}), ΔᐃΔᐃᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_6")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ΔⲆⵠΔΔ)
		}), ⲆᐃⲆᐃΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_7")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(6)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_8")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(7)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_9")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(8)
		}), ⵠΔⲆᐃⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_10")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ⲆⲆⵠⲆⵠ)
		}), ⲆΔⲆΔⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_11")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(10)
		}), ΔⲆⵠᐃⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_12")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(11)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_13")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ΔΔᐃⵠΔΔⵠ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_14")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(13)
		}), ΔᐃΔΔΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_15")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ᐃⲆⲆⵠΔⵠᐃ)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_16")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(15)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_17")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ᐃΔΔⲆⲆΔΔ)
		}), ⲆΔⲆΔⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_18")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(17)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_19")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(ᐃⲆΔⲆΔⲆᐃ)
		}), ΔᐃⲆⵠⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_20")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(19)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_21")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(20)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_22")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(21)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_23")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(22)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_24")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(23)
		}), ΔⲆᐃⲆΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_25")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(24)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_26")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(25)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_27")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(26)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_28")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(27)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_29")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(28)
		}), ΔᐃΔᐃᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_30")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(29)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_31")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(30)
		}), ⵠⲆⲆⵠΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_32")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(31)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_33")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(32)
		}), Ⲇᐃⵠⵠᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_34")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(33)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_35")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(34)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_36")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(35)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_37")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(36)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_38")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(37)
		}), ΔᐃΔᐃᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_39")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(38)
		}), ⵠⲆⵠΔⵠ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_40")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(39)
		}), Ⲇᐃⵠⵠᐃ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_41")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(40)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_42")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(41)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_43")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(42)
		}), ⵠⲆⲆⵠΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_44")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(43)
		}), ⵠΔⲆᐃⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_45")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(44)
		}), ⵠⲆⲆⵠΔ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_46")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(45)
		}), false);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_47")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(46)
		}), ⵠΔⲆᐃⲆ);
		document[ⲆⵠΔᐃᐃᐃΔ[181]]("img_48")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], (function() {
			ⵠΔᐃⵠ.Ⲇⵠᐃⵠ.list.ⲆΔⲆⲆ(47)
		}), false);
		this.ⲆᐃⵠⵠⲆ = {
			translate: {
				y: ⵠⲆⲆᐃ,
				x: 0
			},
			"ⲆᐃᐃⲆⲆ": {
				x: -ΔⲆᐃ,
				y: -1
			},
			"ᐃⵠⵠΔ": [],
			focus: function(ᐃⲆΔⲆ) {
				var ᐃⲆᐃ = this.translate.y + (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ.length > ᐃΔⵠⵠ ? -120 : -50);
				if (ᐃⲆΔⲆ.x > this.translate.x && ᐃⲆΔⲆ.x < this.translate.x + 193 && ᐃⲆΔⲆ.y > ᐃⲆᐃ && ᐃⲆΔⲆ.y < ᐃⲆᐃ + 193) {
					this.ⲆᐃᐃⲆⲆ.x = ᐃⲆΔⲆ.x - this.translate.x;
					this.ⲆᐃᐃⲆⲆ.y = ᐃⲆΔⲆ.y - ᐃⲆᐃ
				}
			}
		};
		this.ⲆⲆΔⵠⲆ = {
			translate: {
				x: 0,
				y: Δⵠⵠ
			},
			"ⵠⵠ": Ⲇᐃ[Δ.ᐃⲆⵠᐃΔᐃᐃ],
			"ΔΔ": document[ⲆⵠΔᐃᐃᐃΔ[325]](ⵠ[57])
		};
		this.ⲆⲆΔⵠⲆ.ΔΔ.width = this.ⲆⲆΔⵠⲆ.ⵠⵠ.width;
		this.ⲆⲆΔⵠⲆ.ΔΔ.height = this.ⲆⲆΔⵠⲆ.ⵠⵠ.height;
		this.ⲆⲆΔⵠⲆ.Ⲇ = this.ⲆⲆΔⵠⲆ.ΔΔ.getContext(ⵠ[140]);
		this.ΔΔⵠⲆ = {
			translate: {
				y: 0,
				x: ⵠⵠⲆⲆ
			},
			"ⵠⵠ": Ⲇᐃ[Δ.ΔⵠᐃΔᐃⵠⲆ],
			"ⲆⵠᐃⲆ": ⲆⲆⲆΔᐃⵠᐃⲆΔ,
			y: ΔΔᐃ
		};
		this.ⵠᐃΔⵠᐃΔᐃ = function() {
			ΔⲆᐃⲆⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]);
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[ΔΔᐃ]].ᐃΔⲆᐃⵠ + "</div";
			for (var ᐃⲆ = 1; ᐃⲆ < ⲆΔⲆ.ΔⵠΔⵠΔ.length; ᐃⲆ++) {
				ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃⲆ]].ᐃΔⲆᐃⵠ + "</div></div>"
			}
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="leave" style="display:inline-block;">LEAVE</div></div>';
			ΔⲆᐃⲆⲆ.style.display = ⵠ[489];
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("leave")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], ᐃΔᐃⵠ.ⵠᐃΔⵠᐃΔᐃ, ⲆΔⲆΔⵠ)
		};
		this.ⵠᐃⵠᐃΔᐃⵠⲆⲆ = function() {
			ΔⲆᐃⲆⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]);
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[0]].ᐃΔⲆᐃⵠ + "</div";
			for (var ᐃⲆ = 1; ᐃⲆ < ⲆΔⲆ.ΔⵠΔⵠΔ.length; ᐃⲆ++) {
				ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃⲆ]].ᐃΔⲆᐃⵠ + "</div></div>"
			}
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += ⵠ[183];
			ΔⲆᐃⲆⲆ.style.display = ⵠ[489]
		};
		this.ᐃᐃᐃΔⵠⵠᐃⵠΔ = function() {
			ΔⲆᐃⲆⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]);
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] = "";
			ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="leader"><img src="./img/leaderlogo.png" style="width:25px;margin-right:5px;" ></img>' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[ΔⲆⵠ]].ᐃΔⲆᐃⵠ + "</div";
			for (var ᐃⲆ = 1; ⲆΔⲆ.ΔⵠΔⵠΔ.length > ᐃⲆ; ᐃⲆ++) ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div class="nicknames"> <div style="display:inline-block;padding-top:7px;">' + ⲆΔΔ.ᐃⵠⵠΔ[ⲆΔⲆ.ΔⵠΔⵠΔ[ᐃⲆ]].ᐃΔⲆᐃⵠ + '</div><div class="eject_member" id="eject_member' + ᐃⲆ + '"><img src="./img/close-team.png" style="width:20px;padding:5px;"></img></div>';
			ⲆΔⲆ.ⵠⲆⵠᐃⲆ.lock === 0 ? ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="lock_team" style="display:inline-block;">LOCK</div></div>' : ΔⲆᐃⲆⲆ[ⲆⵠΔᐃᐃᐃΔ[359]] += '<div id="lock_team" style="display:inline-block;">UNLOCK</div></div>';
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[141])[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], ᐃΔᐃⵠ.ⵠΔᐃⵠΔΔᐃⲆⲆ, ΔΔᐃⵠⵠ);
			ΔⲆᐃⲆⲆ.style.display = ⵠ[489];
			for (var ᐃⲆ = ⲆΔᐃⲆ; ᐃⲆ < ⲆΔⲆ.ΔⵠΔⵠΔ.length; ᐃⲆ++) {
				switch (ᐃⲆ) {
					case ⲆᐃⲆⲆ:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(1)
						}), ⲆΔᐃⵠⲆ);
						break;
					case ᐃΔⲆⲆⵠ:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(2)
						}), false);
						break;
					case 3:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(3)
						}), ⲆΔⲆΔⵠ);
						break;
					case ΔⲆΔⲆ:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(ᐃΔΔΔ)
						}), false);
						break;
					case 5:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(ⲆᐃΔΔΔ)
						}), ΔⵠⵠΔⲆ);
						break;
					case 6:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(ΔⲆΔⲆΔ)
						}), ΔⲆⵠᐃⵠ);
						break;
					case 7:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(ᐃᐃⲆΔΔΔᐃ)
						}), false);
						break;
					case 8:
						document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[521] + ᐃⲆ)[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[543], (function() {
							ᐃΔᐃⵠ.ᐃΔᐃⵠⵠΔⲆ(8)
						}), ⵠΔⲆᐃⲆ);
						break
				}
			}
		};
		this.Ⲇᐃⵠᐃᐃ = [];
		this.Ⲇᐃⵠᐃᐃ[ᐃΔᐃᐃΔ.ΔⵠΔⲆⲆΔⲆ] = {
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ]),
			action: this.ⵠᐃΔⵠᐃΔᐃ
		};
		this.Ⲇᐃⵠᐃᐃ[ᐃΔᐃᐃΔ.ⲆⵠⲆΔⲆⲆⵠ] = {
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ]),
			action: ᐃΔᐃⵠ.ᐃⲆᐃΔΔⵠⵠᐃΔ
		};
		this.Ⲇᐃⵠᐃᐃ[ᐃΔᐃᐃΔ.ⵠᐃᐃΔⵠᐃΔ] = {
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠᐃⲆⲆΔ]),
			action: this.ᐃᐃᐃΔⵠⵠᐃⵠΔ
		};
		this.Ⲇᐃⵠᐃᐃ[ᐃΔᐃᐃΔ.ⵠⵠᐃⵠΔΔΔ] = {
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⵠᐃⵠΔ]),
			action: this.ⵠᐃⵠᐃΔᐃⵠⲆⲆ
		};
		this.Ⲇᐃⵠᐃᐃ[ᐃΔᐃᐃΔ.ΔⲆⲆⲆΔᐃⵠ] = {
			button: ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃⲆ]),
			action: function() {}
		};
		this.ᐃⲆΔᐃⲆ = -1;
		this.ⲆΔⵠⵠΔΔᐃ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠΔΔⲆⵠ]);
		this.ⵠⲆᐃⲆΔᐃΔ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠᐃⵠⲆΔ]);
		this.ΔΔΔᐃⵠΔΔ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃⵠΔⲆⵠ]);
		this.ⵠⲆΔᐃΔⲆⵠ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆΔΔᐃⵠ]);
		this.ⲆΔΔⵠⵠᐃⵠ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃⵠΔⲆⵠ]);
		this.ΔΔⲆᐃⵠⲆᐃ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠᐃΔⵠᐃᐃ]);
		this.ⲆⲆΔⲆᐃΔᐃ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃᐃ]);
		this.ᐃΔⲆΔⵠⲆΔ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆΔΔ]);
		this.ⵠⵠⲆᐃΔᐃΔ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆⲆⲆΔΔ]);
		this.ⵠΔΔⲆⵠⲆΔ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠΔⲆⵠⲆ]);
		this.ⵠⲆΔⲆΔⵠⵠ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ]);
		this.ΔΔⵠⲆⲆⲆⵠ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔᐃΔᐃᐃ]);
		this.ᐃⲆΔΔᐃᐃⲆ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔⲆᐃⵠⵠ]);
		this.ⵠⵠⵠΔΔΔⲆ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆΔ]);
		this.ΔΔⵠⵠⲆⵠᐃ = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔΔⲆⲆᐃ]);
		this.ᐃΔᐃⵠᐃ = ΔΔⲆ(120, 120, "", Ⲇᐃ[Δ.ΔⵠⵠⵠΔ]);
		this.ᐃΔᐃⵠᐃ.info.translate.x = 10;
		this.ᐃΔᐃⵠᐃ.info.translate.y = 10;
		this.ⲆⲆⵠ = [];
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔⲆⲆᐃⵠ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠΔⲆ].id = ⵠⲆ.ⵠⲆⵠΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠⲆⵠᐃⲆᐃ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠᐃⲆΔ].id = ⵠⲆ.ᐃⵠᐃⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔᐃᐃⵠⲆ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⲆ].id = ⵠⲆ.ⵠᐃΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔᐃ].id = ⵠⲆ.ᐃⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆⲆⲆΔΔ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃΔᐃ].id = ⵠⲆ.ⵠⵠᐃΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔᐃΔᐃΔΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⵠᐃ].id = ⵠⲆ.ⲆΔⲆⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔΔⲆⵠⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠ].id = ⵠⲆ.ⲆᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⲆⵠ].id = ⵠⲆ.ⲆⵠⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆΔᐃΔᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔⵠᐃ].id = ⵠⲆ.ᐃᐃΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔⲆΔᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔᐃΔ].id = ⵠⲆ.ᐃᐃΔᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠᐃⵠⲆᐃⵠ], ΔΔⲆⲆᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔΔⲆ].id = ⵠⲆ.ⲆᐃΔΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠᐃⵠᐃⲆⲆ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.Ⲇᐃⵠᐃⵠ].id = ⵠⲆ.Ⲇᐃⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠΔⵠΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⲆᐃ].id = ⵠⲆ.ΔⲆᐃⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⵠⲆᐃᐃⵠ], ⵠⵠⲆⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⲆΔ].id = ⵠⲆ.ⲆⵠΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆΔΔΔⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⵠΔ].id = ⵠⲆ.ΔᐃΔⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠⵠⲆᐃⲆ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⵠᐃ].id = ⵠⲆ.ΔⲆΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃⵠ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃⲆᐃ].id = ⵠⲆ.ⲆΔᐃⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔΔΔⲆᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠⵠᐃ].id = ⵠⲆ.Δᐃⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃⲆⲆⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⵠᐃ].id = ⵠⲆ.ⵠᐃΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⲆⵠΔⲆᐃ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠⵠ].id = ⵠⲆ.ⵠᐃᐃⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆᐃΔΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⵠΔᐃ].id = ⵠⲆ.ⲆᐃⵠΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃΔᐃⲆΔ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃΔΔ].id = ⵠⲆ.ⵠᐃᐃΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⲆⵠᐃᐃΔ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⵠᐃⲆ].id = ⵠⲆ.ⵠⵠⵠᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⵠΔΔⵠⵠ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠᐃᐃ].id = ⵠⲆ.ᐃΔⵠᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆⲆⵠⵠⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃΔⲆ].id = ⵠⲆ.ᐃᐃᐃΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠΔΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⵠⵠ].id = ⵠⲆ.ΔΔⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔΔᐃ].id = ⵠⲆ.ΔⲆΔΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⲆΔᐃⵠⵠ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃΔⵠ].id = ⵠⲆ.ⲆΔᐃΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆᐃΔᐃⵠⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔⲆᐃ].id = ⵠⲆ.ΔⵠΔⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.Δⵠᐃᐃⵠᐃⵠ], ᐃⲆⲆᐃΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠΔⵠ].id = ⵠⲆ.ⲆΔⵠΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.Δⵠⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠΔⲆᐃⲆᐃ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.Δⵠⵠᐃⵠ].id = ⵠⲆ.Δⵠⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃΔΔⲆᐃ], ᐃⲆⲆᐃΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⵠⲆΔ].id = ⵠⲆ.ⲆᐃⵠⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆᐃⵠ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃⵠᐃ].id = ⵠⲆ.ⵠΔᐃⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃΔᐃⵠᐃ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔᐃ].id = ⵠⲆ.ⵠⵠⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆᐃΔᐃᐃⲆ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆᐃᐃ].id = ⵠⲆ.ᐃΔⲆᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃᐃᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃΔᐃ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃᐃᐃᐃ].id = ⵠⲆ.Δᐃᐃᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔΔΔⲆᐃⲆ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠⵠⵠ].id = ⵠⲆ.Δᐃⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⵠΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⵠΔⲆᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⵠΔⲆ].id = ⵠⲆ.ⵠⵠⵠΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔΔΔᐃ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆᐃ].id = ⵠⲆ.ΔᐃᐃⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠⲆⲆΔᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠᐃᐃ].id = ⵠⲆ.ⲆⲆⵠᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⵠⵠᐃΔ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆⵠ].id = ⵠⲆ.ΔᐃᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆΔⲆⵠⲆⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆⵠⵠ].id = ⵠⲆ.ⲆⲆⲆⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆⲆΔⵠΔ], ᐃⲆᐃΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃΔᐃ].id = ⵠⲆ.ⵠⲆᐃΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔᐃ].id = ⵠⲆ.ΔⲆⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⵠᐃΔΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔⲆⵠ].id = ⵠⲆ.ΔΔΔⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠΔΔΔⵠᐃ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠᐃⵠ].id = ⵠⲆ.ⲆΔⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆΔᐃⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔᐃⲆ].id = ⵠⲆ.ⵠⲆΔᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠΔⲆΔΔⲆ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆᐃᐃ].id = ⵠⲆ.ΔⲆⲆᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠΔⵠᐃᐃ], ᐃⵠⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃⵠ].id = ⵠⲆ.ⵠⵠΔᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠΔⲆⵠΔ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃⲆⵠ].id = ⵠⲆ.ⲆⲆᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃΔᐃⲆⲆⲆ], ⵠⵠⲆⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃⵠᐃ].id = ⵠⲆ.ⵠⵠᐃⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠⵠΔⵠΔΔ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔΔⵠ].id = ⵠⲆ.ⵠⲆΔΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠⲆΔΔΔᐃ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠΔ].id = ⵠⲆ.ⵠᐃᐃⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃᐃΔᐃΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⵠⵠᐃ].id = ⵠⲆ.ΔⲆⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆΔⵠⵠΔⲆ], ΔΔⲆⲆᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⵠΔ].id = ⵠⲆ.ᐃⲆⵠⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⵠⵠᐃⵠΔ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⵠΔ].id = ⵠⲆ.ⲆᐃᐃⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⵠⵠᐃⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆⲆ].id = ⵠⲆ.ΔⵠᐃⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆᐃᐃᐃⲆ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠᐃⵠ].id = ⵠⲆ.ᐃΔⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠΔⵠΔΔ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⲆᐃ].id = ⵠⲆ.ⲆⵠᐃⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⲆⵠᐃᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔⲆⲆ].id = ⵠⲆ.ΔⵠΔⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃΔⲆⲆΔⵠ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔⵠΔ].id = ⵠⲆ.ᐃⲆΔⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆⵠΔ], ᐃⵠⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔⲆΔ].id = ⵠⲆ.ⵠⵠΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⲆΔⲆᐃΔ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⲆᐃ].id = ⵠⲆ.ΔΔⵠⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⵠⵠⵠΔᐃ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⲆΔⵠ].id = ⵠⲆ.ⲆⵠⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⲆΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔΔⵠⵠΔ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⲆΔΔ].id = ⵠⲆ.ⵠΔⲆΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠᐃᐃᐃΔⲆ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔΔⲆ].id = ⵠⲆ.ⲆⲆΔΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⲆΔⲆᐃΔ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆⲆ].id = ⵠⲆ.ⲆⲆΔⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠᐃᐃΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⲆΔ].id = ⵠⲆ.ⵠΔΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠⵠᐃΔᐃ], ΔΔⲆⲆᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃΔⵠ].id = ⵠⲆ.ΔΔᐃΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠᐃⲆⵠᐃΔ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃⵠⵠ].id = ⵠⲆ.ⲆⲆᐃⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⵠΔⲆⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔΔΔ].id = ⵠⲆ.ⲆⲆΔΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠΔ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃⲆⲆ].id = ⵠⲆ.ⵠⲆᐃⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⵠⲆΔⲆⵠ], ᐃⲆᐃΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠΔ].id = ⵠⲆ.ⵠΔΔⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃᐃΔⵠᐃ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⲆⵠ].id = ⵠⲆ.ᐃⵠⵠⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠⵠⵠ].id = ⵠⲆ.ⲆΔⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.Δᐃⵠⵠⵠᐃᐃ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔⲆ].id = ⵠⲆ.ᐃᐃΔΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⲆⲆᐃⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⲆⲆ].id = ⵠⲆ.ΔΔⵠⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔᐃᐃⲆⲆⵠ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⵠᐃ].id = ⵠⲆ.ⲆⵠΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⲆΔ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃⵠⵠ].id = ⵠⲆ.ⲆΔᐃⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔⲆⵠⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔΔᐃ].id = ⵠⲆ.ⵠⵠΔΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⵠⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠⵠ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⵠⵠΔ].id = ⵠⲆ.ⵠΔⵠⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⵠᐃⲆⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠΔΔ].id = ⵠⲆ.ⲆⲆⵠΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠⲆⲆⵠⲆⲆ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.Δᐃⵠᐃⵠ].id = ⵠⲆ.Δᐃⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⵠᐃΔΔᐃ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⵠⵠⵠ].id = ⵠⲆ.ⵠΔⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃΔΔᐃᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠᐃᐃ].id = ⵠⲆ.ⵠⲆⵠᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⵠΔⵠΔᐃ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⲆⵠ].id = ⵠⲆ.ᐃΔⵠⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⵠⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠⲆⵠⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⵠⲆΔ].id = ⵠⲆ.ΔᐃⵠⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⲆᐃᐃᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⲆΔᐃ].id = ⵠⲆ.ΔΔⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⲆΔⲆΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠ].id = ⵠⲆ.ⵠΔΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠΔⵠⲆᐃΔ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⵠ].id = ⵠⲆ.ⲆⵠΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⵠΔⲆᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⲆⲆ].id = ⵠⲆ.ΔᐃΔⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔⲆ].id = ⵠⲆ.ΔⲆⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔΔᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔᐃΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔΔᐃΔ].id = ⵠⲆ.ᐃΔΔᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠⵠⵠⵠΔ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃΔᐃ].id = ⵠⲆ.ᐃΔᐃΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃΔⵠΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⲆᐃ].id = ⵠⲆ.ᐃⲆⵠⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠᐃⵠ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⲆᐃ].id = ⵠⲆ.ΔⲆΔⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆᐃᐃⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆⵠ].id = ⵠⲆ.ⲆⲆΔⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⵠⵠⵠⵠⲆ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⵠᐃ].id = ⵠⲆ.ⲆᐃΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⲆᐃ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⵠᐃ].id = ⵠⲆ.ᐃΔⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠⲆⵠΔⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠᐃⵠ].id = ⵠⲆ.ⲆⲆⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⵠᐃⵠⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠΔⲆ].id = ⵠⲆ.ΔΔⵠΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠⵠΔⲆᐃΔ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠΔⲆᐃ].id = ⵠⲆ.ⲆⵠΔⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⵠᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆⵠⵠᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⵠᐃΔ].id = ⵠⲆ.ΔⲆⵠᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠⵠΔΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⲆⵠ].id = ⵠⲆ.ΔⲆᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃᐃΔᐃⲆ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔᐃⵠ].id = ⵠⲆ.ᐃⵠΔᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⵠΔΔⵠⲆ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔΔⲆ].id = ⵠⲆ.ΔΔΔΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔΔⲆᐃ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠΔᐃ].id = ⵠⲆ.ⲆⵠⵠΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠΔΔᐃⲆ], ᐃⵠⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠᐃⵠ].id = ⵠⲆ.ⵠⲆⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠΔΔⵠΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠⵠΔ].id = ⵠⲆ.ΔⵠⵠⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔΔⵠⵠⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔᐃ].id = ⵠⲆ.ΔⵠⵠΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔΔΔΔⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠΔΔ].id = ⵠⲆ.ⲆΔⵠΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆⲆΔ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆᐃΔ].id = ⵠⲆ.ⲆΔⲆᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆⵠᐃ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⲆΔᐃ].id = ⵠⲆ.ΔⵠⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠⲆⲆ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔⵠ].id = ⵠⲆ.ⲆᐃⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃᐃⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃⵠⵠ].id = ⵠⲆ.ⵠΔᐃⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔᐃᐃΔᐃⲆ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔᐃΔΔ].id = ⵠⲆ.ⲆΔᐃΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⲆⵠⵠⲆ], ᐃⲆⲆᐃΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⵠⵠ].id = ⵠⲆ.ᐃᐃᐃⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⲆᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆᐃⲆⵠΔⲆ], ᐃⲆⲆᐃΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⲆᐃΔ].id = ⵠⲆ.ΔΔⲆᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆⲆΔΔⵠ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆⵠΔ].id = ⵠⲆ.ⵠᐃⲆⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔᐃⵠⲆⲆᐃ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⲆⲆ].id = ⵠⲆ.ⲆᐃΔⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃⵠᐃᐃⵠ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆᐃⲆ].id = ⵠⲆ.ⵠᐃⲆᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⵠΔΔᐃⲆ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⵠⵠΔ].id = ⵠⲆ.ᐃΔⵠⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠⲆⲆⵠᐃᐃ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆⲆⲆ].id = ⵠⲆ.ᐃⲆⲆⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆΔΔΔⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃᐃᐃ].id = ⵠⲆ.ⵠⵠᐃᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃΔⵠΔΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆᐃⲆ].id = ⵠⲆ.ᐃⲆⲆᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃᐃⵠΔᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆⵠᐃ].id = ⵠⲆ.ΔᐃⲆⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆΔΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠΔΔ].id = ⵠⲆ.ᐃᐃⵠΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆΔⲆⵠᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⵠⵠⵠ].id = ⵠⲆ.ᐃⲆⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⲆᐃΔⲆⵠ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⲆⵠ].id = ⵠⲆ.ⵠΔΔⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⲆΔⲆᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆᐃᐃⵠ].id = ⵠⲆ.ᐃⲆᐃᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆⵠⲆΔΔ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆᐃᐃ].id = ⵠⲆ.ⵠⵠⲆᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃΔᐃΔⵠⵠ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆᐃⲆ].id = ⵠⲆ.ᐃᐃⲆᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⵠⲆⲆⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔⲆΔ].id = ⵠⲆ.ᐃⵠΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⲆΔΔⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⵠᐃ].id = ⵠⲆ.ᐃⵠⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔΔΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.Ⲇᐃⵠᐃᐃⵠⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔΔΔΔ].id = ⵠⲆ.ⲆΔΔΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⵠΔⵠᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃⲆΔ].id = ⵠⲆ.ΔᐃᐃⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⲆⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔⵠⲆᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⲆⲆΔ].id = ⵠⲆ.ΔⵠⲆⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔᐃⲆⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆΔⵠ].id = ⵠⲆ.ⲆⲆⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔΔⵠⵠⵠⵠ], ᐃⲆᐃΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆΔⲆ].id = ⵠⲆ.ⵠᐃⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃᐃ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆΔ].id = ⵠⲆ.ΔⵠᐃⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠᐃⵠᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔΔ].id = ⵠⲆ.ΔⲆⲆΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔΔⵠΔⵠ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔΔ].id = ⵠⲆ.ⵠⵠⲆΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆΔⲆᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔᐃΔΔ].id = ⵠⲆ.ⵠΔᐃΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠᐃΔΔᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆΔⲆᐃ].id = ⵠⲆ.ⲆⲆΔⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⲆΔⵠΔΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔⵠ].id = ⵠⲆ.ᐃΔⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃⵠⲆᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆⲆΔ].id = ⵠⲆ.ⵠᐃⲆⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⲆⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆΔⵠᐃ].id = ⵠⲆ.ⵠⲆΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔⲆⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆⵠΔ].id = ⵠⲆ.ᐃⵠⲆⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆⲆᐃⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃᐃᐃ].id = ⵠⲆ.ΔΔᐃᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃⲆⵠⵠᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⲆΔ].id = ⵠⲆ.ᐃᐃᐃⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠⵠⵠⵠΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠΔⲆ].id = ⵠⲆ.ⲆⵠⵠΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔΔᐃᐃ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆᐃᐃ].id = ⵠⲆ.ⵠᐃⲆᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠᐃᐃⵠⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⵠΔᐃ].id = ⵠⲆ.ⵠᐃⵠΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠΔⲆΔᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆΔⵠ].id = ⵠⲆ.ΔⲆⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠⲆ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆᐃⲆ].id = ⵠⲆ.ΔⲆⲆᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃⲆᐃᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⲆΔᐃ].id = ⵠⲆ.ⵠᐃⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔⲆⵠⲆⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔΔⵠ].id = ⵠⲆ.ᐃⲆΔΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔⵠᐃⵠΔ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⲆΔ].id = ⵠⲆ.ⲆΔⲆⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⲆⵠΔⲆΔ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⵠⲆ].id = ⵠⲆ.ⲆⵠᐃⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⵠⲆᐃⵠ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃᐃΔ].id = ⵠⲆ.ⲆⲆᐃᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⲆΔⲆᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠᐃⲆ].id = ⵠⲆ.ᐃⵠⵠᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⵠΔⵠᐃⲆ], ⵠᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠᐃⵠ].id = ⵠⲆ.ᐃᐃⵠᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃⵠᐃⲆⲆ], ᐃⲆᐃΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠΔΔⲆ].id = ⵠⲆ.ΔⵠΔΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆΔᐃᐃⲆΔ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆⵠΔ].id = ⵠⲆ.ᐃᐃⲆⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃᐃⵠΔᐃ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔⵠⲆ].id = ⵠⲆ.ᐃⵠΔⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠⲆΔⲆⵠ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠⲆ].id = ⵠⲆ.ⲆᐃⲆⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃⵠᐃᐃ].id = ⵠⲆ.ⵠᐃⵠᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃᐃᐃⲆⲆ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔᐃⵠ].id = ⵠⲆ.ᐃⲆΔᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃⲆⵠᐃΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔᐃᐃΔ].id = ⵠⲆ.ΔΔᐃᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠΔΔⵠⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⵠᐃ].id = ⵠⲆ.ⵠⲆⲆⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃⲆᐃⲆⵠ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆⲆΔ].id = ⵠⲆ.ΔⲆⲆⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⲆⲆΔΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⵠⲆⲆ].id = ⵠⲆ.ⲆΔⵠⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃᐃⵠⲆᐃⵠ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔⵠ].id = ⵠⲆ.ᐃᐃΔΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆⲆⲆⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔΔⵠ].id = ⵠⲆ.ᐃⵠΔΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔᐃᐃᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠᐃ].id = ⵠⲆ.ⵠᐃᐃⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠⵠᐃᐃⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆΔⲆⵠⲆ].id = ⵠⲆ.ⲆΔⲆⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠⵠΔΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃᐃⵠⲆ].id = ⵠⲆ.ᐃᐃᐃⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠΔⵠΔΔⲆ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⵠΔ].id = ⵠⲆ.ᐃΔⲆⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⵠᐃᐃᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔⵠ].id = ⵠⲆ.ΔⵠⵠΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⵠᐃⲆΔⲆ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔⲆᐃⵠ].id = ⵠⲆ.ⵠΔⲆᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆᐃⲆⲆΔᐃ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔⵠᐃ].id = ⵠⲆ.ⵠⵠΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃⲆⵠⲆΔ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔⵠᐃ].id = ⵠⲆ.ⵠΔΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆΔᐃⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠᐃⵠⲆ].id = ⵠⲆ.ⵠⵠᐃⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠⵠΔⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠⲆᐃ].id = ⵠⲆ.ΔⵠⵠⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠᐃⵠᐃᐃ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆⲆᐃ].id = ⵠⲆ.ⵠⵠⲆⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⵠΔᐃΔⵠⲆ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠᐃΔ].id = ⵠⲆ.ⲆⵠⵠᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠΔⲆⲆⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆᐃᐃ].id = ⵠⲆ.ᐃⵠⲆᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔΔᐃⵠΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠⲆᐃ].id = ⵠⲆ.ⲆⵠⵠⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⵠⲆⵠΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔⲆ].id = ⵠⲆ.ⲆᐃⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃⵠⲆⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔᐃ].id = ⵠⲆ.ᐃΔⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆᐃⵠᐃΔⵠ], Δᐃᐃᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃᐃΔ].id = ⵠⲆ.ΔⵠᐃᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔΔᐃᐃᐃ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠᐃⲆΔ].id = ⵠⲆ.ⲆⵠᐃⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔᐃⵠⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠᐃⲆⵠ].id = ⵠⲆ.ᐃⵠᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⲆᐃⵠⵠᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠⲆΔⲆ].id = ⵠⲆ.ⵠⵠⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⵠᐃΔΔᐃ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔⲆⵠ].id = ⵠⲆ.ΔΔΔⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠΔⵠᐃᐃ], ᐃⵠⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃⵠ].id = ⵠⲆ.ⵠⵠΔᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠⲆⲆⵠΔ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃᐃΔΔ].id = ⵠⲆ.ΔᐃᐃΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠᐃ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⲆᐃ].id = ⵠⲆ.ⵠⲆⲆⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⵠⲆⲆⲆⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆᐃⲆⲆ].id = ⵠⲆ.ᐃⲆᐃⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠᐃⲆΔᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⲆⵠ].id = ⵠⲆ.ⵠᐃᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃⵠΔᐃⲆ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆΔⵠ].id = ⵠⲆ.ᐃᐃⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆⵠᐃⵠΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠΔᐃΔ].id = ⵠⲆ.ᐃⵠΔᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠΔⲆⲆ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆΔΔ].id = ⵠⲆ.ΔᐃⲆΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔⲆᐃⵠᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⲆᐃ].id = ⵠⲆ.ᐃΔⲆⲆᐃ;
		this.ⵠⵠⵠⲆⵠ = [];
		for (var ᐃⲆ = 0; ᐃⲆ < 250; ᐃⲆ++) this.ⵠⵠⵠⲆⵠ[ᐃⲆ] = ΔΔⲆ(0, 0, "", Ⲇᐃ[Δ.ᐃΔΔⵠⵠΔΔ]);
		this.ⲆᐃΔ = [];
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃⲆΔⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠΔⲆ].id = ⵠⲆ.ⵠⲆⵠΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠᐃⲆⲆΔΔ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠᐃⲆΔ].id = ⵠⲆ.ᐃⵠᐃⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆ].id = ⵠⲆ.ⵠᐃΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆ].info.ⵠⵠ[ᐃΔⵠⵠ];
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠᐃΔⵠᐃᐃ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃ].id = ⵠⲆ.ᐃⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃ].info.ⵠⵠ[ΔⵠⲆΔ];
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆⵠⲆⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃΔᐃ].id = ⵠⲆ.ⵠⵠᐃΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⵠⵠΔΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⵠᐃ].id = ⵠⲆ.ⲆΔⲆⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃⲆΔΔ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠ].id = ⵠⲆ.ⲆᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠ].info.ⵠⵠ[ⲆⲆⵠΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠ].info.ⵠⵠ[ⵠⵠᐃⵠ];
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆⲆⲆΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆⵠ].id = ⵠⲆ.ⲆⵠⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆⵠ].info.ⵠⵠ[ⵠⲆΔΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆⵠ].info.ⵠⵠ[Ⲇᐃⵠᐃ];
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔⵠᐃ].id = ⵠⲆ.ᐃᐃΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃⲆⵠᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔᐃΔ].id = ⵠⲆ.ᐃᐃΔᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆΔⲆⵠⲆ], ⵠⵠⲆⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔΔⲆ].id = ⵠⲆ.ⲆᐃΔΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔⵠⲆⲆΔ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.Ⲇᐃⵠᐃⵠ].id = ⵠⲆ.Ⲇᐃⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃᐃΔΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⲆᐃ].id = ⵠⲆ.ΔⲆᐃⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⲆΔ].id = ⵠⲆ.ⲆⵠΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⲆΔⲆⵠ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⵠΔ].id = ⵠⲆ.ΔᐃΔⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃⲆ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⵠᐃ].id = ⵠⲆ.ΔⲆΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃⲆΔᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃⲆᐃ].id = ⵠⲆ.ⲆΔᐃⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⵠⵠΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠⵠᐃ].id = ⵠⲆ.Δᐃⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆᐃᐃᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⵠᐃ].id = ⵠⲆ.ⵠᐃΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⵠΔⵠᐃ], Δᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠⵠ].id = ⵠⲆ.ⵠᐃᐃⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔⵠⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⵠΔᐃ].id = ⵠⲆ.ⲆᐃⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃᐃⵠⵠⵠ], ⵠⲆⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃΔΔ].id = ⵠⲆ.ⵠᐃᐃΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆΔⲆⵠΔΔ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⵠᐃⲆ].id = ⵠⲆ.ⵠⵠⵠᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠΔⵠⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃᐃ].id = ⵠⲆ.ᐃΔⵠᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃᐃ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔⲆⲆᐃⵠ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃΔⲆ].id = ⵠⲆ.ᐃᐃᐃΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆᐃⲆᐃᐃ], ΔΔⲆⲆᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⵠⵠ].id = ⵠⲆ.ΔΔⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃᐃⵠⲆᐃ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔΔᐃ].id = ⵠⲆ.ΔⲆΔΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃᐃΔΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃΔⵠ].id = ⵠⲆ.ⲆΔᐃΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⵠΔⲆⵠ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔⲆᐃ].id = ⵠⲆ.ΔⵠΔⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃᐃⵠⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠΔⵠ].id = ⵠⲆ.ⲆΔⵠΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.Δⵠⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔᐃⵠᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δⵠⵠᐃⵠ].id = ⵠⲆ.Δⵠⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⵠⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃᐃⵠᐃᐃ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⵠⲆΔ].id = ⵠⲆ.ⲆᐃⵠⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠ].id = ⵠⲆ.ⵠΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠΔ], ᐃⲆᐃΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ].id = ⵠⲆ.ⲆⲆⵠᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠΔᐃⲆⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆⵠ].id = ⵠⲆ.ΔᐃᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃⲆⲆᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆⵠⵠ].id = ⵠⲆ.ⲆⲆⲆⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⵠΔⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃΔᐃ].id = ⵠⲆ.ⵠⲆᐃΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔᐃⲆΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠᐃ].id = ⵠⲆ.ⵠΔᐃⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠᐃ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⵠᐃⵠⵠ], ⵠⵠⲆⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔᐃ].id = ⵠⲆ.ⵠⵠⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔᐃ].info.ⵠⵠ[ⵠᐃⵠΔ] = this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔᐃ].info.ⵠⵠ[ⵠⵠⲆⲆ];
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⵠᐃᐃⲆ], ᐃⲆᐃΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆᐃᐃ].id = ⵠⲆ.ᐃΔⲆᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆᐃᐃ].info.ⵠⵠ[ᐃΔⲆⲆⵠ] = this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆᐃᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.Δᐃᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆᐃᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δᐃᐃᐃᐃ].id = ⵠⲆ.Δᐃᐃᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠⵠⵠ].id = ⵠⲆ.Δᐃⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⵠΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⵠΔⲆ].id = ⵠⲆ.ⵠⵠⵠΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆᐃ].id = ⵠⲆ.ΔᐃᐃⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠΔ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃᐃ].id = ⵠⲆ.ⲆⲆⵠᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠΔᐃᐃⲆⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔᐃ].id = ⵠⲆ.ΔⲆⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⲆᐃ], ⵠⲆⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔⲆⵠ].id = ⵠⲆ.ΔΔΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔⵠⲆᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠᐃⵠ].id = ⵠⲆ.ⲆΔⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔⵠΔⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔᐃⲆ].id = ⵠⲆ.ⵠⲆΔᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⵠᐃᐃΔⵠ], ᐃⵠⲆⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆᐃᐃ].id = ⵠⲆ.ΔⲆⲆᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃⵠ].id = ⵠⲆ.ⵠⵠΔᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃⵠⵠᐃⲆ], ΔΔⲆⲆᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃⲆⵠ].id = ⵠⲆ.ⲆⲆᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃⵠᐃ].id = ⵠⲆ.ⵠⵠᐃⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆᐃⲆΔᐃ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔΔⵠ].id = ⵠⲆ.ⵠⲆΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆᐃⵠⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠΔ].id = ⵠⲆ.ⵠᐃᐃⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠⲆᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⵠⵠᐃ].id = ⵠⲆ.ΔⲆⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃᐃⲆ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠΔ].id = ⵠⲆ.ᐃⲆⵠⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠᐃΔΔᐃ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⵠΔ].id = ⵠⲆ.ⲆᐃᐃⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⵠᐃⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠᐃⵠ].id = ⵠⲆ.ᐃΔⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃΔⲆⲆⲆ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆⲆ].id = ⵠⲆ.ΔⵠᐃⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠΔΔⲆΔ], ΔⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⲆᐃ].id = ⵠⲆ.ⲆⵠᐃⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆⲆⲆⵠⵠ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔⵠΔ].id = ⵠⲆ.ᐃⲆΔⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔⵠᐃΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔⲆⲆ].id = ⵠⲆ.ΔⵠΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔΔᐃⲆⲆ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔⲆΔ].id = ⵠⲆ.ⵠⵠΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔᐃⲆⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⲆΔⵠ].id = ⵠⲆ.ⲆⵠⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔⵠⵠⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⲆᐃ].id = ⵠⲆ.ΔΔⵠⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃⵠⵠᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⲆΔΔ].id = ⵠⲆ.ⵠΔⲆΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔΔΔᐃⲆⲆ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆⲆ].id = ⵠⲆ.ⲆⲆΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆⲆⲆᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔΔⲆ].id = ⵠⲆ.ⲆⲆΔΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⵠᐃΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⲆΔ].id = ⵠⲆ.ⵠΔΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃⵠΔᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃⵠⵠ].id = ⵠⲆ.ⲆⲆᐃⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃΔⵠΔᐃΔ], ⵠⵠⲆⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃΔⵠ].id = ⵠⲆ.ΔΔᐃΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔΔⵠᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔΔΔ].id = ⵠⲆ.ⲆⲆΔΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆΔⲆⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠΔ].id = ⵠⲆ.ⵠΔΔⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⲆΔΔΔ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃⲆⲆ].id = ⵠⲆ.ⵠⲆᐃⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⲆⲆᐃⵠ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⲆⵠ].id = ⵠⲆ.ᐃⵠⵠⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃᐃⲆⵠᐃ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔⲆ].id = ⵠⲆ.ᐃᐃΔΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆΔⵠⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠⵠⵠ].id = ⵠⲆ.ⲆΔⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆⵠᐃⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⲆⲆ].id = ⵠⲆ.ΔΔⵠⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠⲆΔⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠᐃ].id = ⵠⲆ.ⲆⵠΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃΔᐃΔⵠ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃⵠⵠ].id = ⵠⲆ.ⲆΔᐃⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔΔᐃ].id = ⵠⲆ.ⵠⵠΔΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔⵠΔΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⵠⵠΔ].id = ⵠⲆ.ⵠΔⵠⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠΔΔ].id = ⵠⲆ.ⲆⲆⵠΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆᐃⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δᐃⵠᐃⵠ].id = ⵠⲆ.Δᐃⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃᐃΔⲆⵠ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⵠⵠⵠ].id = ⵠⲆ.ⵠΔⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃⲆΔᐃⵠ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃᐃ].id = ⵠⲆ.ⵠⲆⵠᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔᐃᐃΔⲆ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⲆⵠ].id = ⵠⲆ.ᐃΔⵠⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⵠⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆⵠⵠᐃⲆ], ΔⲆΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⵠⲆΔ].id = ⵠⲆ.ΔᐃⵠⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔᐃΔⵠⵠ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆΔᐃ].id = ⵠⲆ.ΔΔⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆΔᐃ].info.ⵠⵠ[ⵠᐃᐃⵠ] = this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆΔᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠ].id = ⵠⲆ.ⵠΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠΔⲆⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠ].id = ⵠⲆ.ⲆⵠΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⵠ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔⵠΔᐃⲆ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⲆⲆ].id = ⵠⲆ.ΔᐃΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔᐃⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔⲆ].id = ⵠⲆ.ΔⲆⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔΔᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔⵠⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔΔᐃΔ].id = ⵠⲆ.ᐃΔΔᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠᐃⲆⵠⲆᐃ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃΔᐃ].id = ⵠⲆ.ᐃΔᐃΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⲆᐃ].id = ⵠⲆ.ᐃⲆⵠⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⵠⵠ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⲆᐃ].id = ⵠⲆ.ΔⲆΔⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆΔᐃΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆⵠ].id = ⵠⲆ.ⲆⲆΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠᐃΔⲆΔᐃ], ΔⲆΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⵠᐃ].id = ⵠⲆ.ⲆᐃΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⲆⵠⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⵠᐃ].id = ⵠⲆ.ᐃΔⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔⵠⵠⵠⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠᐃⵠ].id = ⵠⲆ.ⲆⲆⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⵠⲆⵠΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠΔⲆ].id = ⵠⲆ.ΔΔⵠΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠᐃⲆΔ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠΔⲆᐃ].id = ⵠⲆ.ⲆⵠΔⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⵠᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆΔⵠᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⵠᐃΔ].id = ⵠⲆ.ΔⲆⵠᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠΔΔⵠⲆ], Δᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⲆⵠ].id = ⵠⲆ.ΔⲆᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⵠⲆⲆⵠ], ⵠⵠⲆⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃⵠ].id = ⵠⲆ.ᐃⵠΔᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃⵠ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃⵠ].info.ⵠⵠ[ⵠⲆⲆᐃ];
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠᐃⵠᐃΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔⲆ].id = ⵠⲆ.ΔΔΔΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔⲆ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔⲆ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⵠⵠⲆⲆⲆ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔᐃ].id = ⵠⲆ.ⲆⵠⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔᐃ].info.ⵠⵠ[ΔⵠΔΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃΔᐃΔⵠ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ].id = ⵠⲆ.ⵠⲆⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠᐃⵠ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆᐃ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠⵠΔ].id = ⵠⲆ.ΔⵠⵠⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠΔⵠΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ].id = ⵠⲆ.ΔⵠⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃΔⲆⲆΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠΔΔ].id = ⵠⲆ.ⲆΔⵠΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆΔᐃⵠⵠ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆᐃΔ].id = ⵠⲆ.ⲆΔⲆᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃⵠΔⵠΔ], Δᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⲆΔᐃ].id = ⵠⲆ.ΔⵠⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆΔⲆΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔⵠ].id = ⵠⲆ.ⲆᐃⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⲆΔⲆΔ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃⵠⵠ].id = ⵠⲆ.ⵠΔᐃⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃⵠᐃⵠΔ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔᐃΔΔ].id = ⵠⲆ.ⲆΔᐃΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔᐃⵠⵠⵠ], ΔΔⲆⲆᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⵠⵠ].id = ⵠⲆ.ᐃᐃᐃⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆⵠᐃ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⲆᐃΔ].id = ⵠⲆ.ΔΔⲆᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⵠᐃΔΔΔ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆⵠΔ].id = ⵠⲆ.ⵠᐃⲆⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⲆᐃΔⲆ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⲆ].id = ⵠⲆ.ⲆᐃΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔⲆⲆⲆⲆ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆᐃⲆ].id = ⵠⲆ.ⵠᐃⲆᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⵠᐃΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⵠⵠΔ].id = ⵠⲆ.ᐃΔⵠⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆᐃΔΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠΔΔ].id = ⵠⲆ.ᐃᐃⵠΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⲆⲆᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆⲆⲆ].id = ⵠⲆ.ᐃⲆⲆⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃᐃᐃ].id = ⵠⲆ.ⵠⵠᐃᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆⲆΔⵠⵠ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆᐃⲆ].id = ⵠⲆ.ᐃⲆⲆᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⵠΔⵠᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆⵠᐃ].id = ⵠⲆ.ΔᐃⲆⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆΔⵠΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ].id = ⵠⲆ.ᐃⲆⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ].info.ⵠⵠ[ⲆⲆⵠΔ] = this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⵠⵠⵠ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔⲆⲆᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⲆⵠ].id = ⵠⲆ.ⵠΔΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⲆⵠᐃⵠ], ΔⲆΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆᐃᐃⵠ].id = ⵠⲆ.ᐃⲆᐃᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆⵠᐃⵠⲆ], ΔⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆᐃᐃ].id = ⵠⲆ.ⵠⵠⲆᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆΔΔᐃⵠ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆᐃⲆ].id = ⵠⲆ.ᐃᐃⲆᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⵠⵠⲆⲆ], ΔΔⲆⲆᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔⲆΔ].id = ⵠⲆ.ᐃⵠΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⲆᐃΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⵠᐃ].id = ⵠⲆ.ᐃⵠⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠΔΔⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔΔΔΔ].id = ⵠⲆ.ⲆΔΔΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃⲆⲆΔⵠ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆΔ].id = ⵠⲆ.ΔᐃᐃⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆΔ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃⲆΔ].info.ⵠⵠ[ⲆⲆⲆ];
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⵠⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⲆⲆΔ].id = ⵠⲆ.ΔⵠⲆⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⵠⲆᐃⲆᐃ], ⵠⲆⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⵠ].id = ⵠⲆ.ⲆⲆⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⵠ].info.ⵠⵠ[ᐃΔⵠᐃ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⵠ].info.ⵠⵠ[ⵠᐃⲆᐃ];
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⵠᐃᐃᐃ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆΔⲆ].id = ⵠⲆ.ⵠᐃⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆΔⲆΔⵠ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆΔ].id = ⵠⲆ.ΔⵠᐃⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃᐃΔⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔΔ].id = ⵠⲆ.ΔⲆⲆΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔΔ].info.ⵠⵠ[ᐃᐃΔⵠ] = this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔΔ].info.ⵠⵠ[ΔⲆᐃⲆ];
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃᐃⲆⲆⵠⵠ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔΔ].id = ⵠⲆ.ⵠⵠⲆΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⵠΔⵠⵠ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔᐃΔΔ].id = ⵠⲆ.ⵠΔᐃΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆᐃᐃⵠΔ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆΔⲆᐃ].id = ⵠⲆ.ⲆⲆΔⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠΔΔ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔⵠ].id = ⵠⲆ.ᐃΔⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆᐃΔⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆⲆΔ].id = ⵠⲆ.ⵠᐃⲆⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔΔⲆᐃᐃ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆΔⵠᐃ].id = ⵠⲆ.ⵠⲆΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆⵠⵠΔΔ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆⵠΔ].id = ⵠⲆ.ᐃⵠⲆⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆⵠⵠᐃᐃ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃᐃᐃ].id = ⵠⲆ.ΔΔᐃᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃΔⲆᐃΔ], ⵠⵠⲆⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⲆΔ].id = ⵠⲆ.ᐃᐃᐃⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⲆΔ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⲆΔ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠⲆⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔⲆ].id = ⵠⲆ.ⲆⵠⵠΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔⲆ].info.ⵠⵠ[ᐃᐃⲆΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠΔⲆ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠⲆᐃ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆᐃᐃ].id = ⵠⲆ.ⵠᐃⲆᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆᐃⲆⲆⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠΔᐃ].id = ⵠⲆ.ⵠᐃⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠΔᐃ].info.ⵠⵠ[ⵠᐃᐃⵠ] = this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠΔᐃ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆΔⵠ].id = ⵠⲆ.ΔⲆⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃⲆⲆᐃᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆᐃⲆ].id = ⵠⲆ.ΔⲆⲆᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔⵠⵠⲆⲆ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⲆΔᐃ].id = ⵠⲆ.ⵠᐃⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠΔⲆᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔΔⵠ].id = ⵠⲆ.ᐃⲆΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⲆΔᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⲆΔ].id = ⵠⲆ.ⲆΔⲆⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⲆΔ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⲆΔ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠΔᐃⲆⲆ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ].id = ⵠⲆ.ⲆⵠᐃⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ].info.ⵠⵠ[ⵠⲆΔΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⵠⲆ].info.ⵠⵠ[ⲆⵠⲆ];
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆΔΔ].id = ⵠⲆ.ᐃⵠⲆΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ], ᐃⵠⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⵠ].id = ⵠⲆ.ⲆᐃΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⲆΔΔⵠ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ].id = ⵠⲆ.ⲆⲆᐃᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ].info.ⵠⵠ[ᐃⲆⲆΔ] = this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠᐃⲆ].id = ⵠⲆ.ᐃⵠⵠᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠᐃⲆ].info.ⵠⵠ[ᐃⲆⲆΔ] = this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠᐃⲆ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠⲆΔⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠᐃⵠ].id = ⵠⲆ.ᐃᐃⵠᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃⲆΔⵠⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔΔⲆ].id = ⵠⲆ.ΔⵠΔΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔΔⲆ].info.ⵠⵠ[ΔᐃⵠⲆ] = this.ⲆᐃΔ[ⵠⲆ.ΔⵠΔΔⲆ].info.ⵠⵠ[ⲆⵠⲆ];
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⵠΔⲆⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆⵠΔ].id = ⵠⲆ.ᐃᐃⲆⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆⵠΔ].info.ⵠⵠ[2] = this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆⵠΔ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⲆⲆΔⲆ], ΔΔⲆⲆᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔⵠⲆ].id = ⵠⲆ.ᐃⵠΔⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆΔⲆΔΔ], ᐃⵠⲆⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ].id = ⵠⲆ.ⲆᐃⲆⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ].info.ⵠⵠ[ᐃⵠΔⲆ] = this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆ].info.ⵠⵠ[0];
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠΔⵠⵠΔ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃⵠᐃᐃ].id = ⵠⲆ.ⵠᐃⵠᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⵠⲆΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔᐃⵠ].id = ⵠⲆ.ᐃⲆΔᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⵠⵠⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔᐃᐃΔ].id = ⵠⲆ.ΔΔᐃᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆᐃⵠᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠᐃ].id = ⵠⲆ.ⵠⲆⲆⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠᐃᐃⵠⲆ], ᐃⲆⲆᐃΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆⲆΔ].id = ⵠⲆ.ΔⲆⲆⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔⲆᐃⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⵠⲆⲆ].id = ⵠⲆ.ⲆΔⵠⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⲆΔΔⲆ], Δᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔⵠ].id = ⵠⲆ.ᐃᐃΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆⲆⲆᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔΔⵠ].id = ⵠⲆ.ᐃⵠΔΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔΔⲆⲆΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠᐃ].id = ⵠⲆ.ⵠᐃᐃⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃΔᐃ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆΔⲆⵠⲆ].id = ⵠⲆ.ⲆΔⲆⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆΔΔⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃᐃⵠⲆ].id = ⵠⲆ.ᐃᐃᐃⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃᐃⲆⵠΔ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⵠΔ].id = ⵠⲆ.ᐃΔⲆⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠᐃⲆⲆⵠ], ᐃⲆⲆᐃΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔⵠ].id = ⵠⲆ.ΔⵠⵠΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃΔⲆΔⲆ], ᐃⵠⲆⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔⵠᐃ].id = ⵠⲆ.ⵠⵠΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃᐃⵠΔᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔⵠᐃ].id = ⵠⲆ.ⵠΔΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⲆᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆⲆΔⲆⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔⲆᐃⵠ].id = ⵠⲆ.ⵠΔⲆᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆΔᐃΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠᐃⵠⲆ].id = ⵠⲆ.ⵠⵠᐃⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⲆⲆⵠΔ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠⲆᐃ].id = ⵠⲆ.ΔⵠⵠⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆΔⲆΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆᐃᐃ].id = ⵠⲆ.ᐃⵠⲆᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠᐃΔⵠⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠⲆᐃ].id = ⵠⲆ.ⲆⵠⵠⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠΔⲆⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆⲆᐃ].id = ⵠⲆ.ⵠⵠⲆⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⵠⵠⵠⵠᐃ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠᐃΔ].id = ⵠⲆ.ⲆⵠⵠᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆⲆⵠΔⵠ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔⲆ].id = ⵠⲆ.ⲆᐃⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆⲆⲆΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔᐃ].id = ⵠⲆ.ᐃΔⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃᐃΔ].id = ⵠⲆ.ΔⵠᐃᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⵠΔᐃΔᐃ], ⲆⵠⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠᐃⲆΔ].id = ⵠⲆ.ⲆⵠᐃⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔᐃⲆΔⲆ], ⵠⵠⲆⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠᐃⲆⵠ].id = ⵠⲆ.ᐃⵠᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⲆⵠⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠⲆΔⲆ].id = ⵠⲆ.ⵠⵠⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⲆᐃ], ⵠⵠⲆⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔⲆⵠ].id = ⵠⲆ.ΔΔΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⵠⵠΔⲆᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃⵠ].id = ⵠⲆ.ⵠⵠΔᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔΔⵠΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃᐃΔΔ].id = ⵠⲆ.ΔᐃᐃΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆᐃΔΔΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⲆᐃ].id = ⵠⲆ.ⵠⲆⲆⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔΔⲆⲆⵠ], ⲆⵠΔᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆᐃⲆⲆ].id = ⵠⲆ.ᐃⲆᐃⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆⵠⵠΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⲆⵠ].id = ⵠⲆ.ⵠᐃᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⵠᐃⵠⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆΔⵠ].id = ⵠⲆ.ᐃᐃⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⲆᐃⵠΔ], ⵠⲆⲆΔ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠΔᐃΔ].id = ⵠⲆ.ᐃⵠΔᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠᐃᐃᐃΔ], ᐃᐃⵠᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆᐃ].id = ⵠⲆ.ᐃΔⲆⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃⲆᐃᐃΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆΔΔ].id = ⵠⲆ.ΔᐃⲆΔΔ;
		this.ⵠⵠᐃ = [];
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔΔⲆΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠΔⲆ].id = ᐃΔᐃ.ⵠⲆⵠΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠⵠⵠΔⵠ], ⵠⵠⲆⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠᐃⲆΔ].id = ᐃΔᐃ.ᐃⵠᐃⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆᐃᐃᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⲆΔ].id = ᐃΔᐃ.ⲆⵠΔⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆΔΔᐃⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⵠΔ].id = ᐃΔᐃ.ΔᐃΔⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠⲆΔⲆⲆ], ΔⲆΔⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃⲆᐃ].id = ᐃΔᐃ.ⲆΔᐃⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.Δᐃⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⲆᐃⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.Δᐃⵠⵠᐃ].id = ᐃΔᐃ.Δᐃⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠⵠⵠⲆⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⵠᐃ].id = ᐃΔᐃ.ΔⲆΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠΔⲆΔⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔⵠᐃ].id = ᐃΔᐃ.ᐃᐃΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆᐃⲆⲆⲆ], ⵠΔⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔᐃΔ].id = ᐃΔᐃ.ᐃᐃΔᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔⲆⲆⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔΔⲆ].id = ᐃΔᐃ.ⲆᐃΔΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.Ⲇᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⵠⲆⲆⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.Ⲇᐃⵠᐃⵠ].id = ᐃΔᐃ.Ⲇᐃⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆΔᐃᐃⲆ], Ⲇᐃⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⲆᐃ].id = ᐃΔᐃ.ΔⲆᐃⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔΔΔᐃᐃ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃΔⵠᐃ].id = ᐃΔᐃ.ⵠᐃΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⵠⵠⲆΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠⵠ].id = ᐃΔᐃ.ⵠᐃᐃⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⲆΔᐃΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃΔΔ].id = ᐃΔᐃ.ⵠᐃᐃΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⵠᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆᐃⵠⵠᐃᐃ], ⲆⵠⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⵠᐃⲆ].id = ᐃΔᐃ.ⵠⵠⵠᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⵠⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃΔⲆ].id = ᐃΔᐃ.ᐃᐃᐃΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃᐃᐃᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⵠⵠ].id = ᐃΔᐃ.ΔΔⵠⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃᐃⵠⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔΔᐃ].id = ᐃΔᐃ.ΔⲆΔΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔΔⵠΔⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃΔⵠ].id = ᐃΔᐃ.ⲆΔᐃΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔⲆᐃΔⲆ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠΔⲆᐃ].id = ᐃΔᐃ.ΔⵠΔⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔⲆⵠᐃⵠ], ⲆⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠΔⵠ].id = ᐃΔᐃ.ⲆΔⵠΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.Δⵠⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃᐃⲆΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.Δⵠⵠᐃⵠ].id = ᐃΔᐃ.Δⵠⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⵠⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⲆ], ⲆⵠⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⵠⲆΔ].id = ᐃΔᐃ.ⲆᐃⵠⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠ].id = ᐃΔᐃ.ⵠΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⲆᐃᐃⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃᐃ].id = ᐃΔᐃ.ⲆⲆⵠᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠⲆΔᐃΔ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃᐃⲆⵠ].id = ᐃΔᐃ.ΔᐃᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃΔΔⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆⵠⵠ].id = ᐃΔᐃ.ⲆⲆⲆⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔΔⲆΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃΔᐃ].id = ᐃΔᐃ.ⵠⲆᐃΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⲆᐃᐃⵠ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃᐃ].id = ᐃΔᐃ.ⲆⲆⵠᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔⵠⵠⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔᐃ].id = ᐃΔᐃ.ΔⲆⲆΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆᐃΔⵠⵠ], Ⲇᐃⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔⲆⵠ].id = ᐃΔᐃ.ΔΔΔⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃⵠᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠᐃⵠ].id = ᐃΔᐃ.ⲆΔⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃΔⲆΔⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔᐃⲆ].id = ᐃΔᐃ.ⵠⲆΔᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⵠΔΔⲆⲆ], ΔΔⲆⲆᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆᐃᐃ].id = ᐃΔᐃ.ΔⲆⲆᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⵠⵠᐃᐃΔ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃⵠ].id = ᐃΔᐃ.ⵠⵠΔᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆΔΔΔΔ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃⲆⵠ].id = ᐃΔᐃ.ⲆⲆᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃᐃΔⲆᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃⵠᐃ].id = ᐃΔᐃ.ⵠⵠᐃⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆⵠⵠΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔΔⵠ].id = ᐃΔᐃ.ⵠⲆΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆⵠⵠⵠᐃ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠΔ].id = ᐃΔᐃ.ⵠᐃᐃⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆⲆᐃⵠⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⵠⵠᐃ].id = ᐃΔᐃ.ΔⲆⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃᐃⲆΔⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⵠⵠΔ].id = ᐃΔᐃ.ᐃⲆⵠⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃᐃⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⵠⵠΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃᐃⵠΔ].id = ᐃΔᐃ.ⲆᐃᐃⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆΔⵠⲆⵠ], ᐃⲆⲆᐃΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠᐃⵠ].id = ᐃΔᐃ.ᐃΔⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠᐃᐃΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆⲆ].id = ᐃΔᐃ.ΔⵠᐃⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠᐃⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⵠⲆⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠᐃⲆᐃ].id = ᐃΔᐃ.ⲆⵠᐃⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆⲆᐃᐃⵠ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔⵠΔ].id = ᐃΔᐃ.ᐃⲆΔⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆⵠᐃᐃΔ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠΔⲆⲆ].id = ᐃΔᐃ.ΔⵠΔⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆⲆᐃΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔⲆΔ].id = ᐃΔᐃ.ⵠⵠΔⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆⵠΔⲆⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⲆΔⵠ].id = ᐃΔᐃ.ⲆⵠⲆΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆᐃⵠΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⲆᐃ].id = ᐃΔᐃ.ΔΔⵠⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃⵠΔΔⲆ], ⵠⲆⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⲆΔΔ].id = ᐃΔᐃ.ⵠΔⲆΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⵠⲆΔⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆⲆ].id = ᐃΔᐃ.ⲆⲆΔⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆⲆΔΔⵠ], ΔΔⲆⲆᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔΔⲆ].id = ᐃΔᐃ.ⲆⲆΔΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⵠⵠⵠᐃΔ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⲆⲆ].id = ᐃΔᐃ.ΔΔⵠⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⲆⵠⲆⲆᐃ], ⵠⵠⲆⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⵠᐃ].id = ᐃΔᐃ.ⲆⵠΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔΔᐃⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃⵠⵠ].id = ᐃΔᐃ.ⲆΔᐃⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆⲆᐃⲆⲆ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔΔᐃ].id = ᐃΔᐃ.ⵠⵠΔΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠⲆⲆⲆⵠ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⵠⵠΔ].id = ᐃΔᐃ.ⵠΔⵠⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃⲆΔⲆᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠΔΔ].id = ᐃΔᐃ.ⲆⲆⵠΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⲆⲆⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⲆΔ].id = ᐃΔᐃ.ⵠΔΔⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⲆᐃⵠᐃ], ⵠΔᐃⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃⵠⵠ].id = ᐃΔᐃ.ⲆⲆᐃⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⲆⲆⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃΔⵠ].id = ᐃΔᐃ.ΔΔᐃΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆΔⲆⲆⲆ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔΔΔ].id = ᐃΔᐃ.ⲆⲆΔΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃᐃᐃⲆΔ], ⲆⵠⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠΔ].id = ᐃΔᐃ.ⵠΔΔⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔΔⵠᐃⵠΔ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃⲆⲆ].id = ᐃΔᐃ.ⵠⲆᐃⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔⵠⲆⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⲆⵠ].id = ᐃΔᐃ.ᐃⵠⵠⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⵠⵠⲆⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔⲆ].id = ᐃΔᐃ.ᐃᐃΔΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.Δⵠᐃⵠⵠⵠⵠ], ⲆⵠⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠⵠⵠ].id = ᐃΔᐃ.ⲆΔⵠⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.Δᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆⲆⲆΔᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.Δᐃⵠᐃⵠ].id = ᐃΔᐃ.Δᐃⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠᐃᐃⲆᐃᐃ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⵠⵠⵠ].id = ᐃΔᐃ.ⵠΔⵠⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆᐃⲆⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠᐃᐃ].id = ᐃΔᐃ.ⵠⲆⵠᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆᐃⲆⲆᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⲆⵠ].id = ᐃΔᐃ.ᐃΔⵠⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃⵠⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔΔᐃΔᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃⵠⲆΔ].id = ᐃΔᐃ.ΔᐃⵠⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃⲆⲆᐃⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⲆΔᐃ].id = ᐃΔᐃ.ΔΔⲆΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆΔᐃⵠⵠ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⵠ].id = ᐃΔᐃ.ⵠΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⲆᐃᐃᐃ], ⵠΔⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⲆⲆ].id = ᐃΔᐃ.ΔᐃΔⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃΔⲆΔⲆΔ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔⲆ].id = ᐃΔᐃ.ΔⲆⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔΔᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃᐃᐃⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔΔᐃΔ].id = ᐃΔᐃ.ᐃΔΔᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃⲆΔⵠⲆ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃΔᐃ].id = ᐃΔᐃ.ᐃΔᐃΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⵠⲆ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⵠⲆᐃ].id = ᐃΔᐃ.ᐃⲆⵠⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆΔⵠΔᐃ], ⲆⵠⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⲆᐃ].id = ᐃΔᐃ.ΔⲆΔⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⲆⵠΔⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆⵠ].id = ᐃΔᐃ.ⲆⲆΔⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔⵠᐃⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⵠᐃ].id = ᐃΔᐃ.ⲆᐃΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⵠⵠⲆⵠ], ⵠⲆⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⵠᐃ].id = ᐃΔᐃ.ᐃΔⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔᐃΔᐃᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠᐃⵠ].id = ᐃΔᐃ.ⲆⲆⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⵠⵠᐃⲆⵠ], ᐃⵠⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠΔⲆ].id = ᐃΔᐃ.ΔΔⵠΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⵠⵠᐃⲆΔ], ᐃⲆⲆᐃΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠΔⲆᐃ].id = ᐃΔᐃ.ⲆⵠΔⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⵠᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠΔⲆⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⵠᐃΔ].id = ᐃΔᐃ.ΔⲆⵠᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔᐃⵠⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⲆⵠ].id = ᐃΔᐃ.ΔⲆᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆΔᐃᐃᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⵠΔᐃ].id = ᐃΔᐃ.ⲆⵠⵠΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⵠΔⲆᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠᐃⵠ].id = ᐃΔᐃ.ⵠⲆⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆΔⲆΔⵠᐃ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠΔΔ].id = ᐃΔᐃ.ⲆΔⵠΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⲆᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃⵠⲆΔΔ], ⵠΔⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⲆᐃΔ].id = ᐃΔᐃ.ⲆΔⲆᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆⲆⲆᐃⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠⲆΔᐃ].id = ᐃΔᐃ.ΔⵠⲆΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔⲆᐃⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⲆΔⵠ].id = ᐃΔᐃ.ⲆᐃⲆΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃᐃⲆΔⵠⲆ], ᐃᐃⵠᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔᐃⵠⵠ].id = ᐃΔᐃ.ⵠΔᐃⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃᐃᐃⵠᐃⲆ], ⵠⵠⲆⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔᐃΔΔ].id = ᐃΔᐃ.ⲆΔᐃΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⵠΔᐃⲆΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃⵠⵠ].id = ᐃΔᐃ.ᐃᐃᐃⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⲆᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆⵠΔᐃᐃ], Ⲇᐃⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⲆᐃΔ].id = ᐃΔᐃ.ΔΔⲆᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠⲆⵠᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆⵠΔ].id = ᐃΔᐃ.ⵠᐃⲆⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠΔⲆᐃⲆΔ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⲆⲆ].id = ᐃΔᐃ.ⲆᐃΔⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠΔⵠΔΔ], ⵠᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆᐃⲆ].id = ᐃΔᐃ.ⵠᐃⲆᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠⲆΔᐃΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⵠⵠΔ].id = ᐃΔᐃ.ᐃΔⵠⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠΔᐃⲆⵠ], ΔΔⲆⲆᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆⲆⲆ].id = ᐃΔᐃ.ᐃⲆⲆⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠⵠⲆᐃⵠ], ᐃⲆᐃΔⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃᐃᐃ].id = ᐃΔᐃ.ⵠⵠᐃᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔΔⲆⲆⲆ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠΔΔ].id = ᐃΔᐃ.ᐃᐃⵠΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆᐃᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃⵠΔΔⲆ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆᐃᐃⵠ].id = ᐃΔᐃ.ᐃⲆᐃᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⲆᐃⵠᐃ], ⵠⲆⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔⲆⵠ].id = ᐃΔᐃ.ⵠΔΔⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃΔᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⲆᐃⵠᐃ], ᐃⲆᐃΔⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃΔᐃΔⲆ].id = ᐃΔᐃ.ΔⵠᐃΔᐃΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆΔΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⲆᐃⵠᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆΔΔᐃⵠ].id = ᐃΔᐃ.ᐃⲆⲆΔΔᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⵠⵠᐃᐃᐃ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆᐃᐃ].id = ᐃΔᐃ.ⵠⵠⲆᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆΔⲆᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆᐃⲆ].id = ᐃΔᐃ.ᐃᐃⲆᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⲆΔΔᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔⲆΔ].id = ᐃΔᐃ.ᐃⵠΔⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠᐃⲆⲆⲆⲆ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⵠᐃ].id = ᐃΔᐃ.ᐃⵠⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆⵠᐃⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔΔΔΔ].id = ᐃΔᐃ.ⲆΔΔΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃᐃᐃᐃⵠⵠ], ᐃⲆⲆᐃΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠⲆⲆΔ].id = ᐃΔᐃ.ΔⵠⲆⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠᐃⵠⵠᐃⵠ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆΔⲆ].id = ᐃΔᐃ.ⵠᐃⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⲆᐃᐃⲆⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆΔ].id = ᐃΔᐃ.ΔⵠᐃⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆΔᐃⵠᐃ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆΔΔ].id = ᐃΔᐃ.ⵠⵠⲆΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔᐃΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠⵠⵠⲆⵠ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔᐃΔΔ].id = ᐃΔᐃ.ⵠΔᐃΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔᐃⵠΔⵠ], ΔΔⲆⲆᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆΔⲆᐃ].id = ᐃΔᐃ.ⲆⲆΔⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆⲆⵠⲆⲆ], ⵠⵠⲆⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆΔⵠ].id = ᐃΔᐃ.ᐃΔⲆΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔᐃⲆᐃⵠ], ΔΔⲆⲆᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆⲆΔ].id = ᐃΔᐃ.ⵠᐃⲆⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔᐃⵠΔΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆΔⵠᐃ].id = ᐃΔᐃ.ⵠⲆΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆᐃⲆᐃΔ], ⵠⲆⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃᐃᐃ].id = ᐃΔᐃ.ΔΔᐃᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠⲆᐃΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆᐃᐃ].id = ᐃΔᐃ.ⵠᐃⲆᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔⵠⵠⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆΔⵠ].id = ᐃΔᐃ.ΔⲆⲆΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃⵠΔΔⵠΔ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆᐃⲆ].id = ᐃΔᐃ.ΔⲆⲆᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔΔⵠᐃΔ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⲆΔᐃ].id = ᐃΔᐃ.ⵠᐃⲆΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠΔⲆᐃⲆ], ⵠᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔΔⵠ].id = ᐃΔᐃ.ᐃⲆΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆΔⵠᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠᐃⵠ].id = ᐃΔᐃ.ᐃᐃⵠᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆⵠᐃⲆᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔⵠⲆ].id = ᐃΔᐃ.ᐃⵠΔⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⵠᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⵠᐃⵠⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃⵠᐃᐃ].id = ᐃΔᐃ.ⵠᐃⵠᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆΔⲆⵠⵠ], ᐃⵠⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆΔᐃⵠ].id = ᐃΔᐃ.ᐃⲆΔᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆᐃⲆⵠᐃⵠ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔᐃᐃΔ].id = ᐃΔᐃ.ΔΔᐃᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠᐃΔⵠⵠ], ⵠΔᐃⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⵠⲆⲆ].id = ᐃΔᐃ.ⲆΔⵠⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠΔⲆΔⲆᐃ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔⵠ].id = ᐃΔᐃ.ᐃᐃΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔⲆⵠⲆⵠ], ⵠᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠΔΔⵠ].id = ᐃΔᐃ.ᐃⵠΔΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆⵠΔᐃΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⵠᐃ].id = ᐃΔᐃ.ⵠᐃᐃⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠᐃⵠᐃⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆΔⲆⵠⲆ].id = ᐃΔᐃ.ⲆΔⲆⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⵠⵠⵠΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃᐃⵠⲆ].id = ᐃΔᐃ.ᐃᐃᐃⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⵠⵠᐃΔⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆⵠΔ].id = ᐃΔᐃ.ᐃΔⲆⵠΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠⵠⵠᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔⵠᐃ].id = ᐃΔᐃ.ⵠⵠΔⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⲆᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆⵠΔⵠⵠ], ⵠⵠⲆⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔⲆᐃⵠ].id = ᐃΔᐃ.ⵠΔⲆᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆΔᐃⵠⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠᐃⵠⲆ].id = ᐃΔᐃ.ⵠⵠᐃⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃⲆΔⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠⲆⲆᐃ].id = ᐃΔᐃ.ⵠⵠⲆⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⲆᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠᐃⲆᐃᐃΔ], ⵠⲆⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⲆᐃᐃ].id = ᐃΔᐃ.ᐃⵠⲆᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠΔᐃΔΔⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃⲆΔⲆ].id = ᐃΔᐃ.ⲆᐃⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔΔⲆᐃΔ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃᐃΔ].id = ᐃΔᐃ.ΔⵠᐃᐃΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆᐃΔⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔⲆⵠ].id = ᐃΔᐃ.ΔΔΔⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠⵠⵠᐃᐃΔ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃⵠ].id = ᐃΔᐃ.ⵠⵠΔᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⲆⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃⵠⲆΔΔⵠ], ᐃⵠⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⲆⲆᐃ].id = ᐃΔᐃ.ⵠⲆⲆⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆᐃⲆΔⲆⲆ], ᐃⲆᐃΔⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃᐃⲆⵠ].id = ᐃΔᐃ.ⵠᐃᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃᐃᐃⲆⵠΔ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆΔⵠ].id = ᐃΔᐃ.ᐃᐃⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔᐃⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆⵠⵠⵠⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠΔΔᐃⲆ].id = ⵠⲆ.ⵠΔΔᐃⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃⵠᐃΔᐃ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠΔΔᐃⲆ].id = ⵠⲆ.ⵠΔΔᐃⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔᐃⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆΔⲆⵠᐃⲆ], ⵠᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠΔΔᐃⲆ].id = ᐃΔᐃ.ⵠΔΔᐃⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔᐃᐃⵠΔ], ⲆⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⲆΔᐃ].id = ⵠⲆ.ᐃᐃⲆΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔⲆⵠⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⲆΔᐃ].id = ⵠⲆ.ᐃᐃⲆΔᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃⲆᐃᐃⲆ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⲆΔᐃ].id = ᐃΔᐃ.ᐃᐃⲆΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃΔΔᐃⲆΔ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⵠⵠᐃ].id = ⵠⲆ.ⲆⲆⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃᐃΔⵠⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⵠⵠᐃ].id = ⵠⲆ.ⲆⲆⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⲆᐃⲆΔ], ⲆⵠΔᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⵠⵠᐃ].id = ᐃΔᐃ.ⲆⲆⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔᐃΔᐃⲆⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⵠΔᐃᐃ].id = ⵠⲆ.ⵠⵠΔᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠΔⲆᐃⲆ], ⵠⵠⲆⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⵠΔᐃᐃ].id = ⵠⲆ.ⵠⵠΔᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.Δᐃᐃᐃⵠⵠᐃ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⵠΔᐃᐃ].id = ᐃΔᐃ.ⵠⵠΔᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔΔⲆⲆΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ].id = ⵠⲆ.ΔⲆΔⲆΔΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔΔⵠⲆⲆ], ⵠⵠⲆⵠΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⲆΔΔᐃ].id = ⵠⲆ.ΔⲆΔⲆΔΔᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃᐃΔⲆⲆΔ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆΔⵠᐃ].id = ⵠⲆ.ᐃⲆΔⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⲆΔⲆⲆⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆΔⵠᐃ].id = ⵠⲆ.ᐃⲆΔⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆᐃΔⲆⵠᐃΔ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ].id = ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆⵠⲆΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ].id = ⵠⲆ.ⲆᐃᐃⲆⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠᐃΔⲆΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔΔΔ].id = ⵠⲆ.ΔΔΔΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆᐃΔⵠΔᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔΔΔ].id = ⵠⲆ.ΔΔΔΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔᐃⵠⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔΔΔ].id = ᐃΔᐃ.ΔΔΔΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⲆᐃᐃΔᐃⵠ], ⵠⵠⲆⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⵠⵠⲆⲆ].id = ⵠⲆ.ⲆⵠⵠⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔΔΔⵠⲆ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⵠⵠⲆⲆ].id = ⵠⲆ.ⲆⵠⵠⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃᐃΔⵠΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⵠⵠⲆⲆ].id = ᐃΔᐃ.ⲆⵠⵠⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆᐃⲆⵠᐃⲆ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔⵠⵠ].id = ⵠⲆ.ΔⲆΔⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆᐃⲆⵠⵠⲆ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔⵠⵠ].id = ⵠⲆ.ΔⲆΔⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠΔⵠᐃⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔⵠⵠ].id = ᐃΔᐃ.ΔⲆΔⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔⲆⲆᐃΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆᐃᐃᐃ].id = ⵠⲆ.ⵠⲆᐃᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔᐃΔⵠΔ], Δᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆᐃᐃᐃ].id = ⵠⲆ.ⵠⲆᐃᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃΔⵠΔᐃΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆᐃᐃᐃ].id = ᐃΔᐃ.ⵠⲆᐃᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃΔᐃΔⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⲆⲆⵠⲆ].id = ⵠⲆ.ᐃⲆⲆⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆⵠⵠⵠⲆ], Ⲇᐃⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⲆⲆⵠⲆ].id = ⵠⲆ.ᐃⲆⲆⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠᐃⵠⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⲆⲆⵠⲆ].id = ᐃΔᐃ.ᐃⲆⲆⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔΔᐃⵠᐃᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃΔΔΔ].id = ⵠⲆ.ᐃᐃΔΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆⵠⲆⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃΔΔΔ].id = ⵠⲆ.ᐃᐃΔΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⵠᐃᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃΔΔΔ].id = ᐃΔᐃ.ᐃᐃΔΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃᐃⵠΔⵠⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠᐃⲆⵠ].id = ⵠⲆ.ΔⵠᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⲆΔⲆⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠᐃⲆⵠ].id = ⵠⲆ.ΔⵠᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠⲆΔΔⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⵠᐃⲆⵠ].id = ᐃΔᐃ.ΔⵠᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔⵠⲆⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⵠⲆⲆ].id = ⵠⲆ.ᐃⵠⵠⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⲆⲆⲆΔΔⵠ], ⵠΔⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⵠⲆⲆ].id = ⵠⲆ.ᐃⵠⵠⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⲆⵠⲆᐃ], ᐃⵠⲆⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⵠⲆⲆ].id = ᐃΔᐃ.ᐃⵠⵠⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆⲆᐃᐃⵠⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆⲆⵠᐃ].id = ⵠⲆ.ΔⲆⲆⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆΔΔΔⲆ], ᐃⲆᐃΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆⲆⵠᐃ].id = ⵠⲆ.ΔⲆⲆⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃΔⲆΔⲆⲆ], ⵠΔⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆⲆⵠᐃ].id = ᐃΔᐃ.ΔⲆⲆⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠⲆᐃⲆⲆΔ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃᐃⲆⵠ].id = ⵠⲆ.ⲆᐃᐃⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃⲆΔΔᐃ], ΔⲆΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃᐃⲆⵠ].id = ⵠⲆ.ⲆᐃᐃⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃᐃⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆᐃⵠΔⵠ], Ⲇᐃⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃᐃⲆⵠ].id = ᐃΔᐃ.ⲆᐃᐃⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔΔΔΔⲆᐃ], ⵠΔⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃΔⲆ].id = ⵠⲆ.ΔⲆᐃΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⵠΔⵠⵠⵠ], ⲆⵠⵠⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃΔⲆ].id = ⵠⲆ.ΔⲆᐃΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔΔⲆΔΔⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃΔⲆ].id = ᐃΔᐃ.ΔⲆᐃΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠΔⵠⲆᐃ], ⵠⲆⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃΔⲆΔ].id = ⵠⲆ.ⵠᐃΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔΔΔⵠΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃΔⲆΔ].id = ⵠⲆ.ⵠᐃΔⲆΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⵠΔⲆⵠⵠ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠᐃΔⲆΔ].id = ᐃΔᐃ.ⵠᐃΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠΔᐃⵠᐃΔ], ᐃⵠⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⵠⲆⲆ].id = ⵠⲆ.ⵠⲆⵠⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔΔⲆⲆⵠⵠ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⵠⲆⲆ].id = ⵠⲆ.ⵠⲆⵠⲆⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⵠⲆⵠⲆΔ], ᐃⵠⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⵠⲆⲆ].id = ᐃΔᐃ.ⵠⲆⵠⲆⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔⵠΔᐃᐃⵠ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃⵠⲆ].id = ⵠⲆ.ᐃΔᐃⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⲆΔⲆⲆᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃⵠⲆ].id = ⵠⲆ.ᐃΔᐃⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⵠΔⵠⵠΔ], ⵠᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃⵠⲆ].id = ᐃΔᐃ.ᐃΔᐃⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠⵠᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃΔⵠ].id = ⵠⲆ.ⲆⲆᐃΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⲆⲆΔⵠΔ], ⵠⲆⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃΔⵠ].id = ⵠⲆ.ⲆⲆᐃΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔΔᐃⵠᐃᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆᐃΔⵠ].id = ᐃΔᐃ.ⲆⲆᐃΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔΔᐃⲆΔⵠΔ], ⲆⵠΔᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆⵠⵠ].id = ⵠⲆ.ⵠⲆⲆⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆΔᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠⵠ].id = ⵠⲆ.ⵠⲆⲆⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠⵠ].info.ⵠⵠ[ⵠⵠⲆᐃ] = this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆⵠⵠ].info.ⵠⵠ[ΔⲆⵠ];
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔΔⵠⵠⲆⵠ], ᐃⵠⲆⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⵠⵠΔᐃ].id = ⵠⲆ.ΔⵠⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔⵠΔⵠΔΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ].id = ⵠⲆ.ΔⵠⵠΔᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ].info.ⵠⵠ[ᐃⲆⵠᐃ] = this.ⲆᐃΔ[ⵠⲆ.ΔⵠⵠΔᐃ].info.ⵠⵠ[ΔΔᐃ];
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃᐃΔⵠⲆⲆᐃ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆⲆ].id = ⵠⲆ.ᐃΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃⲆⲆⲆΔ], ᐃⲆᐃΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆ].id = ⵠⲆ.ᐃΔⲆⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆ].info.ⵠⵠ[ⵠΔⵠᐃ] = this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆⲆ].info.ⵠⵠ[ΔⲆᐃⲆ];
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⲆⵠⵠⵠⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠⲆⲆΔⲆ].id = ⵠⲆ.ⵠⲆⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.Δⵠᐃⵠᐃⵠᐃ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⵠⲆⲆΔⲆ].id = ⵠⲆ.ⵠⲆⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔᐃᐃⲆⲆΔ], ᐃⵠⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⵠⲆⲆΔⲆ].id = ᐃΔᐃ.ⵠⲆⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠⵠᐃⲆⵠΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆΔᐃⵠ].id = ⵠⲆ.ΔⲆΔᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆΔᐃᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆΔᐃⵠ].id = ⵠⲆ.ΔⲆΔᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆΔⲆⲆΔᐃΔ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆΔᐃⵠ].id = ᐃΔᐃ.ΔⲆΔᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔᐃᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⵠⵠⵠⲆ], ⲆⵠⵠⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔΔᐃᐃ].id = ⵠⲆ.ΔΔΔᐃᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆⲆᐃⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔΔᐃᐃ].id = ⵠⲆ.ΔΔΔᐃᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔᐃᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆΔⲆⵠⲆᐃ], ᐃⲆⲆᐃΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔΔᐃᐃ].id = ᐃΔᐃ.ΔΔΔᐃᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.Δⵠᐃᐃⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠᐃⵠⲆΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.Δⵠᐃᐃⵠ].id = ⵠⲆ.Δⵠᐃᐃⵠ;
		this.ⲆᐃΔ[ⵠⲆ.Δⵠᐃᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⵠΔᐃΔᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.Δⵠᐃᐃⵠ].id = ⵠⲆ.Δⵠᐃᐃⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.Δⵠᐃᐃⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆΔΔⵠⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.Δⵠᐃᐃⵠ].id = ᐃΔᐃ.Δⵠᐃᐃⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠⲆᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠΔΔⵠⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃᐃⵠⲆᐃ].id = ⵠⲆ.ᐃᐃⵠⲆᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔⲆⲆⲆⵠΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃᐃⵠⲆᐃ].id = ⵠⲆ.ᐃᐃⵠⲆᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠⲆᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆΔΔⵠᐃⲆ], Δᐃᐃᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃᐃⵠⲆᐃ].id = ᐃΔᐃ.ᐃᐃⵠⲆᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⵠᐃ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆⲆΔΔⲆᐃⲆ], ᐃᐃⵠᐃ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔΔⵠⵠᐃ].id = ⵠⲆ.ΔΔⵠⵠᐃ;
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔΔΔᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔΔⵠⵠᐃ].id = ⵠⲆ.ΔΔⵠⵠᐃ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⵠᐃ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆΔᐃΔᐃⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔΔⵠⵠᐃ].id = ᐃΔᐃ.ΔΔⵠⵠᐃ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃⲆᐃⵠΔᐃⵠ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔⲆᐃⵠⲆ].id = ⵠⲆ.ΔⲆᐃⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠⵠⲆⲆⵠⲆΔ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ΔⲆᐃⵠⲆ].id = ⵠⲆ.ΔⲆᐃⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔᐃΔΔΔⲆ], ⵠⵠⲆⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔⲆᐃⵠⲆ].id = ᐃΔᐃ.ΔⲆᐃⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃᐃⵠⵠΔΔ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔⲆΔⲆ].id = ⵠⲆ.ᐃΔⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆⲆⵠⵠᐃ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔⲆΔⲆ].id = ⵠⲆ.ᐃΔⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃⵠⲆⵠᐃⲆᐃ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔⲆΔⲆ].id = ᐃΔᐃ.ᐃΔⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃⵠᐃΔⵠᐃ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⵠⵠ].id = ⵠⲆ.ΔᐃΔⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⲆᐃⲆⵠΔ], ᐃⲆᐃΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⵠⵠ].id = ⵠⲆ.ΔᐃΔⵠⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆΔⲆΔⲆΔ], ᐃⲆᐃΔⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ΔᐃΔⵠⵠ].id = ᐃΔᐃ.ΔᐃΔⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⵠΔⵠⲆΔ], ⵠⲆⲆΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃΔᐃΔⵠ].id = ⵠⲆ.ᐃΔᐃΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔᐃΔⵠⲆᐃⵠ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ᐃΔᐃΔⵠ].id = ⵠⲆ.ᐃΔᐃΔⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔᐃⲆΔᐃⲆⲆⵠ], ᐃᐃⵠᐃ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃΔᐃΔⵠ].id = ᐃΔᐃ.ᐃΔᐃΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆⵠⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠᐃⵠⲆⲆⵠⵠ], ⵠⵠⲆⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆⵠⲆ].id = ⵠⲆ.ⲆⲆⲆⵠⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔΔⵠⲆΔⲆᐃ], ⵠⲆⵠⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆⵠⲆ].id = ⵠⲆ.ⲆⲆⲆⵠⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆⵠⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ΔⲆⵠⲆᐃⵠᐃ], ΔⵠⵠΔ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆⵠⲆ].id = ᐃΔᐃ.ⲆⲆⲆⵠⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆΔⲆ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠⵠⲆᐃᐃΔⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆⲆΔⲆ].id = ⵠⲆ.ⲆⲆⲆΔⲆ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆΔᐃⲆᐃ], ⵠΔᐃⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆⲆΔⲆ].id = ⵠⲆ.ⲆⲆⲆΔⲆ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆΔⲆ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠⲆⵠⲆΔΔ], ⵠΔⵠⲆ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆⲆⲆΔⲆ].id = ᐃΔᐃ.ⲆⲆⲆΔⲆ;
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⵠΔΔΔᐃᐃⵠ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ᐃⵠⲆΔΔ].id = ⵠⲆ.ᐃⵠⲆΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃΔΔᐃᐃⵠⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ᐃⵠⲆΔΔ].id = ⵠⲆ.ᐃⵠⲆΔΔ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⲆΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⵠᐃⲆⲆⲆⲆ], 3);
		this.ⵠⵠᐃ[ᐃΔᐃ.ᐃⵠⲆΔΔ].id = ᐃΔᐃ.ᐃⵠⲆΔΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⲆⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔᐃΔᐃΔᐃΔ], ΔⲆΔⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃΔⲆⵠ].id = ⵠⲆ.ⲆᐃΔⲆⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠΔᐃΔⵠᐃⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃΔⲆⵠ].id = ⵠⲆ.ⲆᐃΔⲆⵠ;
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⲆⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⵠⲆⵠΔⲆ], Ⲇᐃⵠⵠ);
		this.ⵠⵠᐃ[ᐃΔᐃ.ⲆᐃΔⲆⵠ].id = ᐃΔᐃ.ⲆᐃΔⲆⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃᐃΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⲆⵠⲆᐃⵠ], ΔⵠⵠΔ);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆⲆᐃᐃΔ].id = ⵠⲆ.ⲆⲆᐃᐃΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃᐃⲆΔΔⵠ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆⲆᐃᐃΔ].id = ⵠⲆ.ⲆⲆᐃᐃΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔⵠᐃΔⲆⲆⲆΔ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ].id = ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ᐃᐃΔᐃᐃᐃᐃΔⲆ], 3);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ].id = ⵠⲆ.ⲆᐃⲆⵠⲆΔⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆΔΔⲆΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ᐃΔᐃΔⵠⵠΔΔⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃⲆΔΔⲆΔ].id = ⵠⲆ.ΔᐃⲆΔΔⲆΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆΔΔⲆΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⵠᐃⲆⵠⲆⵠⲆⲆΔ], ᐃⲆⲆᐃΔ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃⲆΔΔⲆΔ].id = ⵠⲆ.ΔᐃⲆΔΔⲆΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠⵠⲆⲆⲆᐃⲆⵠ], ⵠΔᐃⲆ);
		this.ⲆⲆⵠ[ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ].id = ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ;
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆᐃⲆᐃᐃⵠΔΔⲆ], ᐃⵠⲆⲆ);
		this.ⲆᐃΔ[ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ].id = ⵠⲆ.ⵠᐃᐃⵠⵠⵠⵠ;
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⲆᐃⵠΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ΔⵠΔΔⵠⵠᐃⵠⵠ], Ⲇᐃⵠⵠ);
		this.ⲆⲆⵠ[ⵠⲆ.ΔᐃΔⲆᐃⵠΔ].id = ⵠⲆ.ΔᐃΔⲆᐃⵠΔ;
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⲆᐃⵠΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⵠΔⲆⲆᐃⲆⲆ], ΔⲆΔⵠ);
		this.ⲆᐃΔ[ⵠⲆ.ΔᐃΔⲆᐃⵠΔ].id = ⵠⲆ.ΔᐃΔⲆᐃⵠΔ;
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔΔΔΔ] = ΔΔⲆ(68, 68, "", Ⲇᐃ[Δ.ⲆΔΔᐃⲆⵠⲆⲆⲆ], 3);
		this.ⲆⲆⵠ[ⵠⲆ.ⲆᐃⲆΔΔΔΔ].id = ⵠⲆ.ⲆᐃⲆΔΔΔΔ;
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔΔΔΔ] = ΔΔⲆ(60, 60, "", Ⲇᐃ[Δ.ⲆⲆⲆΔⵠᐃᐃⵠΔ], ⵠᐃᐃᐃ);
		this.ⲆᐃΔ[ⵠⲆ.ⲆᐃⲆΔΔΔΔ].id = ⵠⲆ.ⲆᐃⲆΔΔΔΔ;
		this.ⵠⲆᐃᐃᐃΔΔ = function() {
			var ᐃΔⵠΔ = ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ;
			var ᐃᐃΔ = ⵠΔᐃΔⲆ;
			var ᐃⲆᐃ = ᐃΔᐃᐃⵠ;
			for (var ᐃⲆ = 0; ᐃⲆ < ᐃΔⵠΔ.length; ᐃⲆ++) {
				if (ᐃⲆ > 0 && !(ᐃⲆ % ᐃΔᐃΔ)) {
					ᐃᐃΔ += ᐃΔⵠΔ[0].info.width + ᐃᐃⵠⵠⵠ;
					ᐃⲆᐃ = ΔᐃΔᐃⵠ
				}
				ᐃΔⵠΔ[ᐃⲆ].info.translate.x = ᐃᐃΔ;
				ᐃΔⵠΔ[ᐃⲆ].info.translate.y = ᐃⲆᐃ;
				ᐃⲆᐃ += 10 + ᐃΔⵠΔ[ᐃⲆ].info.height
			}
		};
		this.ⵠⵠΔⲆⵠⵠⲆ = function() {
			var ᐃᐃΔ = Math.floor(Math.floor((ᐃⲆⲆᐃΔ + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / 4) * (10 + this.ⲆⲆⵠ[0].info.ⵠⵠ[ΔⲆⵠ].width) + 35);
			for (var ᐃⲆ = 0; this.ⲆⲆⵠ.length > ᐃⲆ; ᐃⲆ++) {
				if (!this.ⲆⲆⵠ[ᐃⲆ]) continue;
				this.ⲆⲆⵠ[ᐃⲆ].info.translate.x = ᐃᐃΔ;
				this.ⲆⲆⵠ[ᐃⲆ].info.translate.y = 22
			}
			this.ⵠⵠⵠΔΔΔⲆ.info.translate.x = ᐃᐃΔ + ⵠᐃⵠⲆⵠ;
			this.ⵠⵠⵠΔΔΔⲆ.info.translate.y = 22 + Ⲇᐃ[Δ.ⵠᐃΔΔᐃⲆΔ].height;
			this.ΔΔⵠⵠⲆⵠᐃ.info.translate.x = ᐃᐃΔ + ᐃⲆᐃⲆΔ;
			this.ΔΔⵠⵠⲆⵠᐃ.info.translate.y = 30;
			this.ᐃⲆΔΔᐃᐃⲆ.info.translate.x = ᐃᐃΔ + ΔΔᐃⲆⲆ;
			this.ᐃⲆΔΔᐃᐃⲆ.info.translate.y = 22 + Ⲇᐃ[Δ.ⵠᐃΔΔᐃⲆΔ].height
		};
		this.ⲆᐃⲆⲆᐃⲆⵠᐃΔ = function() {
			var ᐃᐃΔ = Math.floor((Ⲇⵠⵠⵠ - Ⲇᐃ[Δ.ⲆΔⲆᐃⲆΔᐃ][0].width) / ᐃⵠΔⲆ);
			for (var ᐃⲆ = 0; ᐃⲆ < this.Ⲇᐃⵠᐃᐃ.length; ᐃⲆ++) {
				this.Ⲇᐃⵠᐃᐃ[ᐃⲆ].button.info.translate.x = ᐃᐃΔ;
				this.Ⲇᐃⵠᐃᐃ[ᐃⲆ].button.info.translate.y = -13
			}
		};
		this.ΔᐃᐃⲆⲆΔⵠ = function() {
			var ᐃᐃΔ = 12 + Math.floor((ᐃⵠⲆᐃⵠ + this.ⲆΔⵠⵠΔΔᐃ.info.ⵠⵠ[0].width) * Math.floor((3 + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / Ⲇⵠⵠᐃᐃ) + 35);
			this.ⲆΔⵠⵠΔΔᐃ.info.translate.x = ᐃᐃΔ;
			this.ⲆΔⵠⵠΔΔᐃ.info.translate.y = 33;
			this.ΔΔΔᐃⵠΔΔ.info.translate.x = this.ⲆΔⵠⵠΔΔᐃ.info.translate.x;
			this.ΔΔΔᐃⵠΔΔ.info.translate.y = 137;
			this.ⵠⲆᐃⲆΔᐃΔ.info.translate.x = this.ⲆΔⵠⵠΔΔᐃ.info.translate.x;
			this.ⵠⲆᐃⲆΔᐃΔ.info.translate.y = 240
		};
		this.ⵠⲆⵠⲆⲆⵠΔ = function() {
			var ᐃᐃΔ = ⵠⵠᐃᐃⵠ + Math.floor((ⲆΔⵠᐃⲆ + this.ΔΔⲆᐃⵠⲆᐃ.info.ⵠⵠ[ΔΔᐃ].width) * Math.floor((3 + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / 4) + 35);
			this.ΔΔⲆᐃⵠⲆᐃ.info.translate.x = ᐃᐃΔ;
			this.ΔΔⲆᐃⵠⲆᐃ.info.translate.y = 36;
			ᐃᐃΔ += 83;
			this.ⲆⲆΔⲆᐃΔᐃ.info.translate.x = ᐃᐃΔ;
			this.ⲆⲆΔⲆᐃΔᐃ.info.translate.y = 36;
			this.ᐃΔⲆΔⵠⲆΔ.info.translate.x = ᐃᐃΔ;
			this.ᐃΔⲆΔⵠⲆΔ.info.translate.y = 36;
			this.ⵠⵠⲆᐃΔᐃΔ.info.translate.x = ᐃᐃΔ;
			this.ⵠⵠⲆᐃΔᐃΔ.info.translate.y = 36;
			this.ⵠΔΔⲆⵠⲆΔ.info.translate.x = ᐃᐃΔ;
			this.ⵠΔΔⲆⵠⲆΔ.info.translate.y = 36;
			this.ⵠⲆΔⲆΔⵠⵠ.info.translate.x = ᐃᐃΔ;
			this.ⵠⲆΔⲆΔⵠⵠ.info.translate.y = 36
		};
		this.ⲆΔⵠⵠᐃⵠᐃ = function() {
			var ᐃᐃΔ = 12 + Math.floor(Math.floor((ⵠⵠⲆⵠΔ + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / 4) * (ⲆⵠⲆⵠᐃ + this.ⵠⲆΔᐃΔⲆⵠ.info.ⵠⵠ[0].width) + 35);
			this.ⵠⲆΔᐃΔⲆⵠ.info.translate.x = ᐃᐃΔ;
			this.ⵠⲆΔᐃΔⲆⵠ.info.translate.y = 36;
			ᐃᐃΔ += 83;
			this.ⲆΔΔⵠⵠᐃⵠ.info.translate.x = ᐃᐃΔ;
			this.ⲆΔΔⵠⵠᐃⵠ.info.translate.y = 36
		};
		this.ⵠᐃᐃⲆΔΔᐃ = function() {
			var ᐃᐃΔ = Math.floor((ⲆⵠⲆⵠᐃ + this.ΔΔⵠⲆⲆⲆⵠ.info.ⵠⵠ[ⲆⵠⲆ].width) * Math.floor((3 + ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ.length) / 4) + 35);
			this.ΔΔⵠⲆⲆⲆⵠ.info.translate.x = ᐃᐃΔ;
			this.ΔΔⵠⲆⲆⲆⵠ.info.translate.y = 22
		};
		this.ⵠⵠⲆⲆⲆⲆⲆ = function() {
			var ⵠΔᐃᐃ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ;
			if (0 < ⵠΔᐃᐃ.length) var ΔⵠⵠΔᐃⲆⵠᐃΔ = Math.floor((Ⲇⵠⵠⵠ - ⲆΔⲆ.ⵠΔᐃᐃ.max * (ⵠΔᐃᐃ[0].info.width + 5)) / ᐃⵠΔⲆ);
			for (var ᐃⲆ = 0; ⵠΔᐃᐃ.length > ᐃⲆ; ᐃⲆ++) {
				ⵠΔᐃᐃ[ᐃⲆ].info.translate.x = ΔⵠⵠΔᐃⲆⵠᐃΔ + (ⵠΔᐃᐃ[ᐃⲆ].info.width + 5) * ᐃⲆ;
				ⵠΔᐃᐃ[ᐃⲆ].info.translate.y = ᐃΔⲆᐃ - ⵠΔᐃᐃ[ᐃⲆ].info.width - ⲆᐃΔⵠⵠ;
				this.ⵠⵠⵠⲆⵠ[ⵠΔᐃᐃ[ᐃⲆ].id].info.translate.x = ⵠΔᐃᐃ[ᐃⲆ].info.translate.x + ΔⲆΔᐃΔ;
				this.ⵠⵠⵠⲆⵠ[ⵠΔᐃᐃ[ᐃⲆ].id].info.translate.y = ⵠΔᐃᐃ[ᐃⲆ].info.translate.y - this.ⵠⵠⵠⲆⵠ[ⵠΔᐃᐃ[ᐃⲆ].id].info.ⵠⵠ[ΔⵠⲆⲆ].height - ᐃⵠⵠΔⲆ
			}
		};
		var ᐃᐃᐃΔⵠ = 0;
		var ᐃⲆΔᐃᐃ = 30;
		var ⵠⵠⲆᐃⲆⵠΔ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ᐃᐃᐃΔⵠ++;
			if (ᐃᐃᐃΔⵠ == ᐃⲆΔᐃᐃ) {
				Ⲇⵠᐃ.ⵠⲆΔᐃᐃΔᐃ();
				Ⲇⵠᐃ.ⵠᐃⵠ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ⵠⵠⲆᐃⲆⵠΔ, 0)
		};
		this.ⲆⲆᐃΔᐃ = function(ᐃⲆⲆⵠⵠ) {
			if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⲆΔⲆ.ᐃΔᐃᐃᐃ.ⲆⲆᐃΔᐃ();
			ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆΔⲆ.ᐃᐃᐃⵠΔ.ⲆⲆᐃΔᐃ();
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style.display = ⵠ[402];
			Ⲇⵠᐃ.ΔΔⲆΔⵠ.style.display = ⵠ[402];
			Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
			Ⲇⵠᐃ.sign.style.display = ⵠ[402];
			Ⲇⵠᐃ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] = ⲆᐃⲆᐃΔ;
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[205]).style.display = ⵠ[402];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[218]).style.display = ⵠ[402];
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[257]).style.display = ⵠ[402];
			Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("option_in_game").style.display = ⵠ[402];
			Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("sure_delete").style.display = ⵠ[402];
			Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = false;
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[318]).style.display = ⵠ[402];
			Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔᐃⲆⵠⲆ;
			document[ⲆⵠΔᐃᐃᐃΔ[181]]("chronoquest").style.display = ⵠ[402];
			Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] = ΔᐃⲆⵠⲆ;
			ⵠᐃᐃᐃΔ = ᐃⲆⲆⵠⵠ;
			Ⲇⵠᐃ.ᐃⵠΔΔᐃⲆᐃ();
			Ⲇⵠᐃ.ΔΔ.style.cursor = Ⲇⵠᐃ.ⵠΔⵠⲆⵠᐃⵠ;
			ⵠΔᐃΔ.ⲆⲆᐃΔᐃ();
			ⲆΔΔⲆⲆ = -1;
			ᐃᐃΔⵠⲆ();
			ᐃⲆⵠᐃⵠᐃᐃ()
		};
		var ⵠᐃᐃᐃΔ;
		var ⲆΔΔⲆⲆ = -ⲆΔⵠⲆ;
		var ᐃΔⲆΔΔ = 30;
		var ᐃᐃΔⵠⲆ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ⲆΔΔⲆⲆ++;
			if (ᐃΔⲆΔΔ == ⲆΔΔⲆⲆ) {
				Ⲇⵠᐃ.stop();
				ⵠᐃᐃᐃΔ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃᐃΔⵠⲆ, 0)
		};
		this.ⲆΔΔⲆᐃ = false;
		this.stop = function() {
			this.ⲆΔΔⲆᐃ = ⵠⲆⵠΔⵠ
		};
		this.ᐃΔⲆⲆΔ = function() {
			ᐃΔᐃⵠ.ᐃⵠᐃΔⲆΔΔⲆᐃ();
			Ⲇⵠᐃ.ⲆΔΔⲆᐃ = true;
			ⲆΔΔⲆⲆ = -1;
			ᐃᐃᐃΔⵠ = 0;
			ⵠⵠⲆᐃⲆⵠΔ()
		};
		this.ⵠᐃⵠ = function() {
			this.ⲆⲆΔⵠⲆ.translate.x = Ⲇⵠⵠⵠ - this.ⲆⲆΔⵠⲆ.ⵠⵠ.width - ΔΔⵠᐃⵠ;
			this.ⲆⲆΔⵠⲆ.translate.y = 5;
			ⲆΔΔ.ΔᐃⲆᐃᐃ.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ⵠΔᐃᐃᐃⲆᐃ][ⲆΔᐃ].width - 85;
			ⲆΔΔ.ΔᐃⲆᐃᐃ.translate.y = 10;
			this.Ⲇⵠᐃⵠ.button.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ][0].width - ⵠⵠΔⲆᐃ;
			this.Ⲇⵠᐃⵠ.button.info.translate.y = ⲆΔⵠᐃⲆ;
			this.ⵠⵠᐃⲆ.button.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ΔⵠΔΔΔᐃⲆ][ⵠⵠⲆⲆ].width - 20;
			this.ⵠⵠᐃⲆ.button.info.translate.y = this.Ⲇⵠᐃⵠ.button.info.translate.y + Ⲇᐃ[Δ.ᐃᐃΔΔᐃΔᐃ][0].height + 5;
			this.options.button.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ][0].width - 20;
			this.options.button.info.translate.y = this.ⵠⵠᐃⲆ.button.info.translate.y + Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ][0].height + 18;
			this.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ][0].width - 20;
			this.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.info.translate.y = this.options.button.info.translate.y + Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ][ᐃΔⵠⵠ].height;
			this.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ΔᐃⲆⵠⲆᐃΔ][ⲆΔᐃ].width - ⵠΔⲆⵠ;
			this.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.info.translate.y = this.options.button.info.translate.y + Ⲇᐃ[Δ.ⲆᐃⵠⵠΔᐃⲆ][Δⵠⵠ].height;
			this.ΔΔⲆΔⵠ.button.info.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ][ΔⲆⵠ].width - ⵠⲆΔⵠ;
			this.ΔΔⲆΔⵠ.button.info.translate.y = this.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.info.translate.y + Ⲇᐃ[Δ.ⲆᐃⵠᐃᐃⵠΔ][ⵠⵠᐃᐃΔ].height;
			ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - 63 - 85;
			ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y = ⵠᐃⵠⵠΔ;
			ⲆΔⲆ.ⵠⵠⵠⲆΔ.translate.x = this.ⲆⲆΔⵠⲆ.translate.x - Ⲇᐃ[Δ.ⲆᐃΔᐃⵠᐃⵠ].width - 85;
			ⲆΔⲆ.ⵠⵠⵠⲆΔ.translate.y = ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y + ᐃᐃⵠⵠⵠ + Ⲇᐃ[Δ.ⲆⲆΔᐃᐃΔΔ].height;
			this.ⲆᐃⵠⵠⲆ.translate.y = ᐃΔⲆᐃ - ᐃⵠⵠⵠ - 193;
			this.ⲆᐃⵠⵠⲆ.translate.x = Ⲇⵠⵠⵠ - ⵠⲆⵠⵠ - 193;
			this.ΔΔⵠⲆ.translate.x = 5;
			this.ΔΔⵠⲆ.translate.y = ᐃΔⲆᐃ - this.ΔΔⵠⲆ.ⵠⵠ.height - ⲆΔΔⵠΔ;
			this.ⲆᐃⵠΔⵠ.button.info.translate.x = ᐃΔΔᐃ - 91 / ⵠᐃⵠΔ;
			this.ⲆᐃⵠΔⵠ.button.info.translate.y = 50;
			this.ⵠⲆᐃᐃᐃΔΔ();
			this.ⵠⵠⲆⲆⲆⲆⲆ();
			this.ⵠⵠΔⲆⵠⵠⲆ();
			this.ⵠᐃᐃⲆΔΔᐃ();
			this.ⲆΔⵠⵠᐃⵠᐃ();
			this.ⵠⲆⵠⲆⲆⵠΔ();
			this.ΔᐃᐃⲆⲆΔⵠ();
			this.ⲆᐃⲆⲆᐃⲆⵠᐃΔ();
			this.sign.ᐃⵠⵠΔⵠⵠᐃ();
			ᐃᐃᐃⵠᐃΔⵠ();
			ⲆΔⲆ.ᐃΔᐃᐃᐃ.ⵠᐃⵠ();
			ⲆΔⲆ.ᐃᐃᐃⵠΔ.ⵠᐃⵠ();
			this.ΔⵠᐃΔⵠⵠᐃⲆΔ.ⵠᐃⵠ();
			this.Ⲇⵠᐃⵠ.ᐃⵠΔⲆⲆΔᐃ.ⵠᐃⵠ();
			this.Ⲇⵠᐃⵠ.list.ⵠᐃⵠ();
			this.ⵠᐃΔⵠ.ⵠᐃⵠ();
			this.ⵠⲆᐃⲆⵠ.ⵠᐃⵠ();
			this.ⵠⵠᐃⲆ.ⵠᐃⵠ();
			this.ⲆᐃⵠΔⵠ.ⵠᐃⵠ();
			this.options.ⵠᐃⵠ();
			this.ΔΔⲆΔⵠ.ⵠᐃⵠ();
			this.sign.ⵠᐃⵠ();
			var ᐃⲆⲆᐃ = ΔⵠⲆⲆ;
			if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ) {
				var ᐃⲆⲆᐃ = 1500 / (ᐃᐃᐃΔⵠ + 1) - 50
			}
			if (-ⵠᐃΔᐃ != ⲆΔΔⲆⲆ) {
				var ᐃⲆⲆᐃ = -(1500 / (ᐃΔⲆΔΔ - ⲆΔΔⲆⲆ + ᐃΔⲆⵠ) - 48)
			}
			this.ⲆᐃⵠΔⵠ.button.info.translate.y -= ᐃⲆⲆᐃ > ΔΔⵠᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ⲆⲆΔⵠⲆ.translate.y -= 0 < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			ⲆΔⲆ.ᐃⲆΔⲆⵠ.translate.y -= ΔⲆᐃⲆ < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			ⲆΔⲆ.ⵠⵠⵠⲆΔ.translate.y -= 0 < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.Ⲇⵠᐃⵠ.button.info.translate.y -= 0 < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ⵠⵠᐃⲆ.button.info.translate.y -= ⲆΔᐃ < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.options.button.info.translate.y -= ᐃⲆⲆᐃ > ΔᐃⲆΔ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ΔΔⲆΔⵠ.button.info.translate.y -= ΔⲆⵠ < ᐃⲆⲆᐃ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.info.translate.y -= ᐃⲆⲆᐃ > 0 ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.info.translate.y -= ᐃⲆⲆᐃ > 0 ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			ⲆΔΔ.ΔᐃⲆᐃᐃ.translate.y -= ᐃⲆⲆᐃ > Δⵠⵠ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ΔΔⵠⲆ.translate.y -= ᐃⲆⲆᐃ < 0 ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ;
			this.ⲆᐃⵠⵠⲆ.translate.y -= ᐃⲆⲆᐃ < ⵠⵠᐃᐃΔ ? ᐃⲆⲆᐃ : -ᐃⲆⲆᐃ
		};
		this.ⲆΔⲆⲆⵠΔⲆⵠⲆ = function() {
			if (!ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && this.ⵠⲆⲆΔᐃⲆⵠ && !ⲆΔⲆ.ΔⵠⲆΔΔ) ⵠᐃⵠⲆⲆΔⲆⵠΔ();
			ⵠⲆⵠΔⲆⵠⵠⵠⵠ();
			ⲆⵠᐃⵠΔⲆᐃΔⲆ();
			ⵠᐃⲆⵠᐃᐃΔ.ⲆᐃᐃⲆΔᐃⲆ();
			if (this.ⵠⲆⲆΔᐃⲆⵠ) {
				ⲆᐃᐃΔⲆᐃᐃΔⲆ();
				this.ⵠⵠⲆᐃⵠⵠⵠ === 1 && this.Ⲇⵠᐃⵠ.button.ⲆⵠᐃⲆ(Ⲇ);
				ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃΔⲆⵠⵠ && ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ !== ⲆΔΔ.mode && 1 === this.ΔΔΔⵠⲆΔΔ && this.ⵠⵠᐃⲆ.button.ⲆⵠᐃⲆ(Ⲇ);
				this.options.button.ⲆⵠᐃⲆ(Ⲇ);
				ⵠⵠⲆΔ === this.ⵠⲆᐃⵠΔⵠⵠ && this.ΔΔⲆΔⵠ.button.ⲆⵠᐃⲆ(Ⲇ);
				ⵠΔᐃΔ.ᐃΔⲆⲆΔ ? this.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.ⲆⵠᐃⲆ(Ⲇ) : this.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.ⲆⵠᐃⲆ(Ⲇ);
				ⲆᐃΔΔⲆⲆΔᐃᐃ();
				ⲆⲆᐃⵠⵠΔⲆᐃᐃ();
				this.ΔΔⵠⲆ.ⲆⵠᐃⲆ();
				ⵠⲆⵠᐃⲆΔⵠᐃΔ();
				ΔᐃⲆⵠⵠⵠΔΔᐃ();
				ⵠⵠⲆᐃⲆΔΔⵠᐃ();
				ΔⲆΔⵠΔᐃⵠⵠⲆ();
				ⲆⲆⵠΔⵠᐃⲆⵠⲆ();
				ᐃⵠⲆⲆⵠⲆΔᐃΔ();
				ᐃΔⵠⵠⵠᐃᐃⲆⵠ();
				ⲆᐃⵠΔⲆᐃᐃⲆᐃ();
				ⵠΔΔΔⵠᐃᐃΔⲆ();
				ᐃΔᐃΔⲆⲆⲆΔⵠ();
				ᐃⵠⲆⵠΔΔΔᐃᐃ();
				ᐃⵠᐃⵠⵠⵠᐃΔᐃ();
				ᐃᐃᐃⵠᐃΔⵠ();
				ⵠᐃΔΔⵠᐃᐃᐃⵠ()
			}
			ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && ᐃΔⵠᐃᐃΔΔⵠⵠ();
			ⲆⵠᐃᐃᐃⲆⲆⵠⲆ();
			this.ⵠⲆⲆΔᐃⲆⵠ && this.ΔⲆⲆⲆⲆⲆⲆ === 1 && ⵠΔⵠᐃⲆΔΔⵠⲆ();
			ⲆΔⲆ.ᐃΔⲆᐃⵠⵠⲆ.ⲆⵠᐃⲆ();
			ⲆΔⲆ.alert.ⲆⵠᐃⲆ(ⵠ[68], ⵠ[151]);
			this.ⵠⲆⲆΔᐃⲆⵠ && (ⲆΔⲆ.ΔΔᐃⲆΔ.ⲆⵠᐃⲆ(), ⲆΔⲆ.ⲆᐃⵠΔⵠ.ⲆⵠᐃⲆ(), ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.ⲆⵠᐃⲆ(ᐃⲆΔⲆ.ᐃΔΔⵠ.x, ᐃⲆΔⲆ.ᐃΔΔⵠ.y));
			ⲆᐃΔᐃⲆⲆⲆΔΔ()
		};
		this.ᐃᐃⲆⲆΔⲆⲆΔᐃ = function() {
			ⲆΔⲆ.ⵠΔΔ.ⵠᐃⵠ();
			ⲆΔⲆ.ΔΔⵠⲆ.ⵠᐃⵠ();
			!ⲆΔⲆ.reconnect.enabled && ⲆΔⲆ.ᐃᐃⲆΔΔ && (ⲆΔⲆ.control.ⵠᐃⵠ(), ⲆΔⲆ.ᐃⲆΔⲆⵠ.ⵠᐃⵠ());
			ⲆΔΔ.ⵠᐃⵠ();
			this.ⵠⵠᐃⲆ.ⲆᐃⲆⲆⵠᐃⵠⵠⵠ()
		};
		this.ⲆΔΔⲆⲆΔΔⲆΔ = function() {
			ᐃⵠⲆΔⵠⵠᐃᐃⲆ()
		};
		this.ΔᐃⲆᐃⵠᐃⵠΔᐃ = function() {
			ᐃΔᐃⵠ.ⲆⵠᐃⵠⲆΔⵠΔΔ();
			ᐃΔᐃⵠ.ⲆΔᐃᐃᐃⲆΔᐃᐃ();
			ᐃΔᐃⵠ.ⲆⵠᐃΔΔⵠΔᐃⵠ();
			ᐃΔᐃⵠ.ᐃᐃⵠⲆⵠᐃⵠⲆⵠ()
		};
		this.ⲆⵠᐃⲆ = function() {
			if (!ⲆΔⲆ.reconnect.enabled && ⲆΔⲆ.ᐃᐃⲆΔΔ) this.ΔᐃⲆᐃⵠᐃⵠΔᐃ();
			ⵠΔᐃΔ.ⵠΔⲆᐃᐃΔᐃᐃⲆ();
			this.ᐃᐃⲆⲆΔⲆⲆΔᐃ();
			if (1 === ᐃᐃΔΔ.ᐃⲆⵠΔⵠᐃΔ) {
				var ⵠⵠ = ⵠᐃ.ΔΔⵠⲆⲆᐃᐃ;
				ⵠⲆΔⲆ(Ⲇ, ⵠⵠ, ᐃΔΔᐃ - ⵠⵠ.width / 4, ⲆⲆΔⲆ - ⵠⵠ.height / ⵠΔΔᐃ, ⵠⵠ.width / 2, ⵠⵠ.height / ΔᐃⵠⲆ);
				return
			}
			this.ⲆΔΔⲆⲆΔΔⲆΔ();
			this.ⲆΔⲆⲆⵠΔⲆⵠⲆ()
		};
		this.ᐃᐃⵠᐃᐃᐃΔ = function(ⵠᐃᐃΔ) {
			if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && 27 === ⵠᐃᐃΔ.keyCode) ⲆΔⲆ.ᐃΔᐃᐃᐃ.ⲆⲆᐃΔᐃ();
			else if (ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⵠᐃᐃΔ.keyCode === 27) ⲆΔⲆ.ᐃᐃᐃⵠΔ.ⲆⲆᐃΔᐃ();
			else if (!ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && !ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⵠᐃᐃΔ.keyCode == 79 && ⲆΔΔⲆⲆ == -1) ⲆΔⲆ.ᐃᐃᐃⵠΔ.ᐃᐃⵠⲆᐃⵠⲆⵠΔ();
			else if (ⵠᐃᐃΔ.keyCode == 13 && ⲆΔΔⲆⲆ == -1) {
				ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] ? ⲆΔⲆ.ᐃᐃᐃⵠΔ.ⲆΔⲆⵠᐃⵠⲆ() : ⲆΔⲆ.ᐃΔᐃᐃᐃ.ᐃΔⲆⲆΔ()
			} else if (!ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && !ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (ⵠᐃᐃΔ.keyCode === 82) ⲆΔⲆ.ᐃⲆΔⲆⵠ.ᐃᐃᐃⵠⲆⵠΔ();
				else if (80 === ⵠᐃᐃΔ.keyCode && ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ === ⲆΔΔ.mode && !ⲆΔⲆ.ⵠⵠⲆᐃⵠΔᐃ) ⲆΔⲆ.ⵠⵠⵠⲆΔ.ᐃᐃᐃⵠⲆⵠΔ();
				else if (ⵠᐃᐃΔ.keyCode >= 49 && ⵠᐃᐃΔ.keyCode <= 57) {
					if (0 > ⲆΔⲆ.ᐃΔⵠΔ.id) {
						var ᐃⲆ = ⵠᐃᐃΔ.keyCode - 49;
						var ΔΔⵠⵠ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ[ᐃⲆ];
						ΔΔⵠⵠ && ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ΔΔⵠⵠ.id, ᐃⲆ)
					}
				} else if (89 == ⵠᐃᐃΔ.keyCode) ⲆΔⲆ.ⲆΔᐃᐃᐃⵠⵠ = !ⲆΔⲆ.ⲆΔᐃᐃᐃⵠⵠ;
				else ⵠᐃᐃΔ.keyCode == 71 && ⲆΔⲆ.ᐃΔⵠΔ.ⵠΔᐃᐃⵠΔᐃⵠΔ()
			}
			ⵠΔⵠᐃᐃ.up(ⵠᐃᐃΔ)
		};
		this.ⲆⲆⲆⵠΔⵠⲆ = function(ⵠᐃᐃΔ) {
			ⵠΔⵠᐃᐃ.down(ⵠᐃᐃΔ);
			if (8 == ⵠᐃᐃΔ.keyCode && !ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && !ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠᐃᐃΔ.preventDefault()
		};
		this.ᐃⲆᐃᐃΔⵠⲆ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			var ΔᐃⲆᐃⵠ = false;
			ⵠⵠⲆⲆ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && Ⲇⵠᐃ.ⲆᐃⵠⵠⲆ.focus(ᐃⲆΔⲆ.ᐃΔΔⵠ);
			var ⵠᐃⵠᐃ = ⲆΔⲆ.ⵠᐃⵠᐃ;
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < ΔΔⵠᐃ && 0 <= ⵠᐃⵠᐃ.id) {
				(!ⲆΔⲆ.ⵠᐃⵠᐃ.lock || ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔΔⵠ === ⲆΔⲆ.id) && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⲆⲆⵠ[ⲆΔⲆ.ⵠᐃⵠᐃ.id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ))
			}
			var ΔⲆⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ;
			ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ΔΔⲆᐃ < ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⲆΔΔⵠⵠᐃⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			var ᐃⵠΔΔ = ⲆΔⲆ.ᐃⵠΔΔ;
			if (ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ > 0) {
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⲆⲆΔⲆᐃΔᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ᐃΔⲆΔⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⵠⲆᐃΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠΔΔⲆⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⲆΔⲆΔⵠⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ)
			}
			var ⵠΔⵠΔ = ⲆΔⲆ.ⵠΔⵠΔ;
			ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && 0 < ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⲆᐃⲆΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			ⲆΔⲆ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.sign.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock) {
				ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ᐃⲆΔΔᐃᐃⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ))
			}
			if (ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ) ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⵠⵠΔΔΔⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < 0 && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ⲆᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ;
				for (var ᐃⲆ = 0; ᐃⲆ < ⲆᐃⲆ.length; ᐃⲆ++) {
					var ⵠᐃⵠⵠᐃ = ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
					ΔᐃⲆᐃⵠ |= ⵠᐃⵠⵠᐃ;
					ⵠᐃⵠⵠᐃ && ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.start(ᐃⲆ, ᐃⲆΔⲆ.ᐃΔΔⵠ);
					(ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ᐃⵠΔ > ⵠᐃⵠᐃ.id || ⵠᐃⵠᐃ.id == ⲆᐃⲆ[ᐃⲆ].id) || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ || ⲆΔⲆ.ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⵠΔΔⵠ || ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ || ⵠⲆ.ⲆⲆⲆΔⵠ === ⲆᐃⲆ[ᐃⲆ].id) || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ΔⲆⲆΔΔ || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ) && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ))
				}
			}
			if (ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ᐃΔᐃⵠᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
			if (Ⲇⵠᐃ.ᐃⲆΔᐃⲆ != -ᐃⵠⵠ) {
				ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.Ⲇᐃⵠᐃᐃ[Ⲇⵠᐃ.ᐃⲆΔᐃⲆ].button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
				if (ΔᐃⲆᐃⵠ) var ΔⵠᐃᐃᐃΔⵠ = true
			} else var ΔⵠᐃᐃᐃΔⵠ = false;
			if (ᐃΔⵠⵠ > ⲆΔⲆ.ᐃΔⵠΔ.id && 0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !ΔⵠᐃᐃᐃΔⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !ⲆΔⲆ.ΔⵠⲆΔΔ) {
				var ⲆᐃⲆ = ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ;
				for (var ᐃⲆ = 0; ⲆᐃⲆ.length > ᐃⲆ; ᐃⲆ++) {
					ΔᐃⲆᐃⵠ |= ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ)
				}
			}
			if (ⵠᐃⲆᐃ > ⲆΔⲆ.ᐃΔⵠΔ.id && 0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⲆᐃⵠΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
			ΔⲆᐃⲆ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.Ⲇⵠᐃⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			Δⵠⵠ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.options.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]]) ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ΔΔⲆΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ);
			if (ΔⵠⲆΔ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				ⵠΔᐃΔ.ᐃΔⲆⲆΔ ? ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ) : ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ)
			}
			ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆⵠΔΔ.ᐃᐃΔᐃⲆ !== ⲆΔΔ.mode && ⲆⵠΔΔ.ᐃΔⲆⵠⵠ !== ⲆΔΔ.mode && ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ !== ⲆΔΔ.mode && (ΔᐃⲆᐃⵠ |= Ⲇⵠᐃ.ⵠⵠᐃⲆ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ⵠᐃⵠⲆⲆ));
			if (!ΔᐃⲆᐃⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.sign[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (ⵠⲆⲆᐃ <= ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ) ᐃΔᐃⵠ.ᐃΔⵠⲆᐃⲆⲆΔⵠ();
				else if (!ΔⵠᐃᐃᐃΔⵠ) ᐃⲆΔⲆ.down()
			}
		};
		this.ᐃΔᐃᐃΔⲆᐃ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			ᐃⲆΔⲆ.up();
			if (ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.release()) return;
			var ⵠᐃⵠᐃ = ⲆΔⲆ.ⵠᐃⵠᐃ;
			var ᐃⵠᐃⵠⵠ = ⲆΔⲆ.ᐃⵠᐃⵠⵠ;
			var ᐃⲆΔⲆᐃ = ⲆΔⲆ.ᐃⲆΔⲆᐃ;
			var ΔⲆⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ;
			var ᐃⵠΔΔ = ⲆΔⲆ.ᐃⵠΔΔ;
			var ⵠΔⵠΔ = ⲆΔⲆ.ⵠΔⵠΔ;
			if (ⲆΔⲆ.control.attack) {
				ⲆΔⲆ.control.attack = 0;
				ᐃΔᐃⵠ.ᐃΔᐃⲆᐃΔΔᐃᐃ()
			}
			if (Ⲇⵠᐃ.ᐃⲆΔᐃⲆ != -1) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.Ⲇᐃⵠᐃᐃ[Ⲇⵠᐃ.ᐃⲆΔᐃⲆ].button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				var ᐃⲆⵠⲆ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[358]).style;
				if (ΔⵠΔⵠ && ᐃⲆⵠⲆ.display == ⵠ[489]) {
					ᐃⲆⵠⲆ.display = ⵠ[402];
					return
				} else ΔⵠΔⵠ && Ⲇⵠᐃ.Ⲇᐃⵠᐃᐃ[Ⲇⵠᐃ.ᐃⲆΔᐃⲆ].action()
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < ⵠᐃⲆᐃ && 0 <= ⵠᐃⵠᐃ.id && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock || ⲆΔⲆ.id === ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔΔⵠ) {
					var ΔⵠΔⵠ = Ⲇⵠᐃ.ⲆⲆⵠ[ⲆΔⲆ.ⵠᐃⵠᐃ.id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					ΔⵠΔⵠ && ᐃΔᐃⵠ.ᐃᐃΔᐃⵠᐃⲆᐃⵠ(ⵠᐃⵠᐃ)
				}
			}
			var ΔⲆⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ;
			if (ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && 0 < ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ⲆΔΔⵠⵠᐃⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) ᐃΔᐃⵠ.ⵠΔⵠΔⲆⲆⲆⵠᐃ(ΔⲆⵠⲆ)
			}
			var ᐃⵠΔΔ = ⲆΔⲆ.ᐃⵠΔΔ;
			if (ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && 0 < ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				switch (ᐃⵠΔΔ.type) {
					case ᐃⲆΔ.ΔⲆᐃΔⲆ:
						var ΔⵠΔⵠ = Ⲇⵠᐃ.ⲆⲆΔⲆᐃΔᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
						if (ΔⵠΔⵠ) ᐃΔᐃⵠ.ΔΔΔⲆⲆᐃᐃ(ᐃⵠΔΔ);
						break;
					case ᐃⲆΔ.ⵠᐃΔⲆΔ:
						var ΔⵠΔⵠ = Ⲇⵠᐃ.ᐃΔⲆΔⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
						ΔⵠΔⵠ && ᐃΔᐃⵠ.ΔΔΔⲆⲆᐃᐃ(ᐃⵠΔΔ);
						break;
					case ᐃⲆΔ.ⵠⲆⵠⲆⲆ:
						var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⲆᐃΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
						ΔⵠΔⵠ && ᐃΔᐃⵠ.ΔΔΔⲆⲆᐃᐃ(ᐃⵠΔΔ);
						break;
					case ᐃⲆΔ.ᐃΔᐃⵠⲆ:
						var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠΔΔⲆⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
						if (ΔⵠΔⵠ) ᐃΔᐃⵠ.ΔΔΔⲆⲆᐃᐃ(ᐃⵠΔΔ);
						break;
					case ᐃⲆΔ.ⲆⲆᐃΔⵠ:
						var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⲆΔⲆΔⵠⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
						if (ΔⵠΔⵠ) ᐃΔᐃⵠ.ΔΔΔⲆⲆᐃᐃ(ᐃⵠΔΔ);
						break
				}
			}
			var ⵠΔⵠΔ = ⲆΔⲆ.ⵠΔⵠΔ;
			if (ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ > 0 && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⲆᐃⲆΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				ΔⵠΔⵠ && ᐃΔᐃⵠ.ᐃⲆⵠΔᐃⵠΔⵠᐃ(ⵠΔⵠΔ)
			}
			if (ⲆΔⲆ.sign[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.sign.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) Ⲇⵠᐃ.sign.select()
			}
			if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ) {
					ΔⵠΔⵠ = Ⲇⵠᐃ.ᐃⲆΔΔᐃᐃⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					if (ΔⵠΔⵠ) ᐃΔᐃⵠ.ⵠΔⵠⲆⲆᐃⲆᐃⲆ(ⵠᐃⵠᐃ)
				}
			}
			if (ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠΔΔΔⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					ᐃΔᐃⵠ.ⲆⵠⲆΔᐃΔⲆⵠⵠ(ⵠᐃⵠᐃ);
					if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], "lockpick")
				}
			}
			if (ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ᐃΔᐃⵠᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					ᐃΔᐃⵠ.ᐃΔᐃⵠᐃ();
					ga && ga(ⵠ[109], ⵠ[99], ⵠ[238], "resurrection")
				}
			}
			if (0 > ⲆΔⲆ.ᐃΔⵠΔ.id && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ⲆᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ;
				for (var ᐃⲆ = ⵠⵠⲆⲆ; ᐃⲆ < ⲆᐃⲆ.length; ᐃⲆ++) {
					var ΔⵠΔⵠ = ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					if (!ΔⵠΔⵠ) {
						if (ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && (0 > ⵠᐃⵠᐃ.id || ⲆᐃⲆ[ᐃⲆ].id === ⵠᐃⵠᐃ.id)) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							ΔⵠΔⵠ && ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < ΔᐃⲆΔ && ᐃΔᐃⵠ.ⵠⲆᐃΔⲆⲆΔⵠⵠ(ⵠᐃⵠᐃ, ⲆᐃⲆ[ᐃⲆ].id, ⵠᐃᐃΔ.shiftKey ? 10 : 1)
						} else if (ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⵠΔΔⵠ) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							if (ΔⵠΔⵠ && ᐃⵠΔ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ) ᐃΔᐃⵠ.ⲆⵠᐃᐃᐃⲆⲆᐃΔ(ᐃⲆΔⲆᐃ)
						} else if (ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							ΔⵠΔⵠ && ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && ᐃΔᐃⵠ.ᐃΔᐃᐃΔΔⲆΔᐃ(ᐃⵠᐃⵠⵠ, ⵠᐃᐃΔ.shiftKey ? ᐃᐃⵠⵠⵠ : ⲆⲆΔᐃ)
						} else if (ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ΔⲆⲆΔΔ) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							ΔⵠΔⵠ && ΔⵠⲆΔ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && ᐃΔᐃⵠ.ⲆⵠΔⵠⲆⵠⲆⲆᐃ(ΔⲆⵠⲆ, ⵠᐃᐃΔ.shiftKey ? 10 : 1)
						} else if (ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							if (ΔⵠΔⵠ && ΔⲆᐃⲆ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ) ᐃΔᐃⵠ.ᐃⲆⵠⲆΔᐃΔⵠΔ(ᐃⵠΔΔ, ⵠᐃᐃΔ.shiftKey ? ⲆⵠⲆⵠᐃ : ⵠᐃΔᐃ)
						} else if (ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⲆ.ᐃⲆΔᐃ === ⲆᐃⲆ[ᐃⲆ].id || ⵠⲆ.ⲆⲆⲆΔⵠ === ⲆᐃⲆ[ᐃⲆ].id)) {
							var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
							if (ΔⵠΔⵠ && 0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ) {
								ⲆᐃⲆ[ᐃⲆ].id === ⵠⲆ.ᐃⲆΔᐃ ? ᐃΔᐃⵠ.ΔⲆⲆⵠΔⲆᐃ(ⵠΔⵠΔ, ⵠᐃᐃΔ.shiftKey ? ᐃⵠⲆᐃⵠ : 1, ⲆΔᐃ) : ᐃΔᐃⵠ.ΔⲆⲆⵠΔⲆᐃ(ⵠΔⵠΔ, 0, ⵠᐃᐃΔ.shiftKey ? 10 : 1)
							}
						}
						continue
					} else {
						if (ᐃⵠⵠ == ⵠᐃᐃΔ.which && !ⵠᐃᐃΔ.shiftKey) ᐃΔᐃⵠ.ΔⵠⲆⲆⲆ(ⲆᐃⲆ[ᐃⲆ].id, ᐃⲆ);
						else(ⵠᐃᐃΔ.which == 1 && ⵠᐃᐃΔ.shiftKey || 3 == ⵠᐃᐃΔ.which) && ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && Ⲇⵠᐃ.ⵠᐃΔⵠ.ⲆΔΔΔᐃⲆᐃ(ⲆᐃⲆ[ᐃⲆ].id)
					}
				}
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < ⵠᐃⲆᐃ && ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < ᐃΔⵠⵠ && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !ⲆΔⲆ.ΔⵠⲆΔΔ) {
				var ⲆᐃⲆ = ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ;
				for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ⲆᐃⲆ.length; ᐃⲆ++) {
					var ΔⵠΔⵠ = ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					if (!ΔⵠΔⵠ) continue;
					ⵠᐃⵠⵠᐃ = ᐃΔᐃⵠ.ΔⲆᐃᐃⲆΔᐃⵠⲆ(ⲆᐃⲆ[ᐃⲆ].id);
					ⵠᐃⵠⵠᐃ && ga && ga(ⵠ[109], ⵠ[99], ⵠ[238], "craft", ᐃΔᐃᐃ[ⲆᐃⲆⲆᐃ[ⲆᐃⲆ[ᐃⲆ].id].ᐃⵠⲆᐃ].name)
				}
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < ⵠᐃⲆᐃ && ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ⲆᐃⵠΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				ΔⵠΔⵠ && ⵠΔᐃⵠ.ⲆᐃⵠΔⵠ.select()
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < ΔΔⲆᐃ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (ⵠΔᐃΔ.ᐃΔⲆⲆΔ) {
					var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					if (ΔⵠΔⵠ) {
						ⵠΔᐃΔ.select();
						ga && ga(ⵠ[109], ⵠ[99], ⵠ[238], "sound on")
					}
				} else {
					var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
					if (ΔⵠΔⵠ) {
						ⵠΔᐃΔ.select();
						if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], "sound off")
					}
				}
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < 0 && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.options.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					Ⲇⵠᐃ.options.ⲆⵠᐃⲆᐃⲆᐃΔᐃ();
					if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], "options")
				}
			}
			if (0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && 1 === Ⲇⵠᐃ.ⵠⲆᐃⵠΔⵠⵠ) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ΔΔⲆΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					Ⲇⵠᐃ.ΔΔⲆΔⵠ.select();
					ga && ga(ⵠ[109], ⵠ[99], ⵠ[238], "market")
				}
			}
			if (0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && Ⲇⵠᐃ.ⵠⵠⲆᐃⵠⵠⵠ === ⵠⲆⲆ) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.Ⲇⵠᐃⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					Ⲇⵠᐃ.Ⲇⵠᐃⵠ.ΔΔⲆⲆᐃᐃᐃⵠⲆ();
					if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], "recipe")
				}
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ < ⵠⵠᐃⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃΔⲆⵠⵠ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ && 1 === Ⲇⵠᐃ.ΔΔΔⵠⲆΔΔ) {
				var ΔⵠΔⵠ = Ⲇⵠᐃ.ⵠⵠᐃⲆ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠⵠⵠ);
				if (ΔⵠΔⵠ) {
					Ⲇⵠᐃ.ⵠⵠᐃⲆ.select();
					if (ga) ga(ⵠ[109], ⵠ[99], ⵠ[238], "quests")
				}
			}
			if (ⲆΔⲆ.ᐃΔⵠΔ.ⲆΔⲆⲆⲆ && ⵠᐃᐃΔ.which == 3) Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ.ⲆΔΔΔᐃⲆᐃ()
		};
		this.ⲆⵠᐃΔⲆᐃᐃ = false;
		this.ᐃⲆᐃᐃⲆᐃᐃ = function(ⵠᐃᐃΔ) {
			ᐃⲆΔⲆ.ᐃΔΔⵠ = ΔⵠΔᐃᐃⵠⵠ(Ⲇⵠᐃ.ΔΔ, ⵠᐃᐃΔ);
			var ⵠⲆΔΔⲆ = false;
			ⵠΔᐃⵠ.ΔΔΔⵠⲆ.display = 0;
			ⲆΔⲆ.ⵠΔᐃᐃ.ⲆⵠΔΔⵠᐃᐃ.ᐃᐃⵠⲆⵠ(ᐃⲆΔⲆ.ᐃΔΔⵠ);
			if (Ⲇⵠᐃ.ᐃⲆΔᐃⲆ != -1) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.Ⲇᐃⵠᐃᐃ[Ⲇⵠᐃ.ᐃⲆΔᐃⲆ].button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
			var ΔⲆⵠⲆ = ⲆΔⲆ.ΔⲆⵠⲆ;
			ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ΔⲆⵠⲆ.ⲆⵠⵠΔⵠ > 0 && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⲆΔΔⵠⵠᐃⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			var ᐃⵠΔΔ = ⲆΔⲆ.ᐃⵠΔΔ;
			if (ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ᐃⵠΔΔ.ⵠⵠⲆⵠⵠⵠⲆ > ⲆΔᐃ) {
				ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⲆⲆΔⲆᐃΔᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ᐃΔⲆΔⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⵠⲆᐃΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠΔΔⲆⵠⲆΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⲆΔⲆΔⵠⵠ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ)
			}
			var ⵠΔⵠΔ = ⲆΔⲆ.ⵠΔⵠΔ;
			ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && 0 < ⵠΔⵠΔ.ⵠᐃⵠⲆᐃⵠΔ && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⲆᐃⲆΔᐃΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (ⲆΔⲆ.sign[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.sign.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
			var ⵠᐃⵠᐃ = ⲆΔⲆ.ⵠᐃⵠᐃ;
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < 0 && 0 <= ⵠᐃⵠᐃ.id && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) {
				(!ⲆΔⲆ.ⵠᐃⵠᐃ.lock || ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔΔⵠ === ⲆΔⲆ.id) && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⲆⲆⵠ[ⵠᐃⵠᐃ.id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ))
			}
			ⲆΔⲆ.ᐃΔᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ᐃΔᐃⵠᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (!ⲆΔⲆ.ⵠᐃⵠᐃ.lock && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) {
				ⲆΔⲆ.ⵠᐃⵠᐃ.ΔΔⵠⲆΔΔΔ && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ᐃⲆΔΔᐃᐃⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ))
			}
			ⲆΔⲆ.ⵠᐃⵠᐃ.ⲆⲆⵠᐃⲆᐃᐃ && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⵠⵠΔΔΔⲆ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (ⲆΔⲆ.ᐃΔⵠΔ.id < ⵠⵠᐃⵠ && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled) {
				var ⲆᐃⲆ = ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⲆΔΔⲆ;
				for (var ᐃⲆ = 0; ⲆᐃⲆ.length > ᐃⲆ; ᐃⲆ++) {
					var ⲆΔⲆΔⵠⲆᐃ = ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
					ⵠⲆΔΔⲆ |= ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ⵠᐃⲆⲆ(ⲆΔⲆΔⵠⲆᐃ, ⲆᐃⲆ[ᐃⲆ], ΔⲆⵠ);
					(ⵠᐃⵠᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⵠⲆⲆ > ⵠᐃⵠᐃ.id || ⵠᐃⵠᐃ.id == ⲆᐃⲆ[ᐃⲆ].id) || ⲆΔⲆ.ᐃⵠᐃⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id == ⵠⲆ.ᐃⲆΔᐃ || ⲆΔⲆ.ᐃⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⵠⲆ.ᐃⵠΔΔⵠ === ⲆᐃⲆ[ᐃⲆ].id || ⲆΔⲆ.ⵠΔⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⲆ.ᐃⲆΔᐃ == ⲆᐃⲆ[ᐃⲆ].id || ⲆᐃⲆ[ᐃⲆ].id == ⵠⲆ.ⲆⲆⲆΔⵠ) || ⲆΔⲆ.ΔⲆⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id == ⵠⲆ.ΔⲆⲆΔΔ || ⲆΔⲆ.ᐃⵠΔΔ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆᐃⲆ[ᐃⲆ].id == ⵠⲆ.ᐃⲆΔᐃ) && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⵠⵠⲆⵠ[ⲆᐃⲆ[ᐃⲆ].id].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ))
				}
			}
			if (ⲆⵠⲆ > ⲆΔⲆ.ᐃΔⵠΔ.id && ⲆⵠⲆ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && !ⲆΔⲆ.ΔⵠⲆΔΔ) {
				var ⲆᐃⲆ = ⲆΔⲆ.ᐃΔⵠΔ.ΔΔⵠΔᐃ;
				for (var ᐃⲆ = 0; ⲆᐃⲆ.length > ᐃⲆ; ᐃⲆ++) {
					var ⲆΔⲆΔⵠⲆᐃ = false;
					ⲆΔⲆΔⵠⲆᐃ = ⲆᐃⲆ[ᐃⲆ].ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
					ⵠⲆΔΔⲆ |= ⵠΔᐃⵠ.ΔΔΔⵠⲆ.ⵠᐃⲆⲆ(ⲆΔⲆΔⵠⲆᐃ, ⲆᐃⲆ[ᐃⲆ], 1)
				}
			}
			ΔΔⵠᐃ > ⲆΔⲆ.ᐃΔⵠΔ.id && Ⲇᐃⵠᐃ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && ⲆΔⲆ.ⲆᐃⵠΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⲆᐃⵠΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (ΔΔⵠᐃ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && Ⲇⵠᐃ.ⵠⵠⲆᐃⵠⵠⵠ === 1) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.Ⲇⵠᐃⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
			if (0 > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.options.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
			ⵠⲆⲆᐃ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && Ⲇⵠᐃ.ⵠⲆᐃⵠΔⵠⵠ === 1 && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ΔΔⲆΔⵠ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (ΔⵠⲆΔ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⵠᐃⲆ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]]) {
				if (ⵠΔᐃΔ.ᐃΔⲆⲆΔ) ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠΔᐃΔ.ⲆⲆΔⲆΔⲆᐃ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ);
				else ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠΔᐃΔ.ᐃⵠΔⲆᐃΔΔ.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ)
			}
			Δⵠⵠ > ⲆΔⲆ.ᐃΔⵠΔ.ⲆⲆⵠⵠ && !Ⲇⵠᐃ.Ⲇⵠᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠᐃΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.options[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ⵠⲆᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && !Ⲇⵠᐃ.ΔΔⲆΔⵠ[ⲆⵠΔᐃᐃᐃΔ[88]] && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃᐃΔᐃⲆ && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃΔⲆⵠⵠ && ⲆⵠΔΔ.ΔⵠⲆⵠⵠⵠᐃⵠⵠ !== ⲆΔΔ.mode && Ⲇⵠᐃ.ΔΔΔⵠⲆΔΔ === ΔΔᐃⵠ && (ⵠⲆΔΔⲆ |= Ⲇⵠᐃ.ⵠⵠᐃⲆ.button.ⵠᐃⲆⲆ(Ⲇⵠᐃ.ΔΔ, ᐃⲆΔⲆ.ᐃΔΔⵠ, ᐃΔⵠᐃⲆ));
			if (Ⲇⵠᐃ.ⲆⵠᐃΔⲆᐃᐃ !== ⵠⲆΔΔⲆ) {
				Ⲇⵠᐃ.ⲆⵠᐃΔⲆᐃᐃ = ⵠⲆΔΔⲆ;
				ⵠⲆΔΔⲆ ? ΔΔ.style[ⵠ[299]] = Ⲇⵠᐃ.ᐃᐃⵠⲆᐃΔᐃ : ΔΔ.style[ⵠ[299]] = Ⲇⵠᐃ.ⵠΔⵠⲆⵠᐃⵠ
			}
		};
		this.ⵠⲆΔᐃᐃΔᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[364], this.ᐃⲆᐃᐃΔⵠⲆ, Ⲇᐃⵠⵠᐃ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], this.ᐃΔᐃᐃΔⲆᐃ, false);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[440], this.ᐃⲆᐃᐃⲆᐃᐃ, ⲆⵠᐃΔΔ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("keyup", this.ᐃᐃⵠᐃᐃᐃΔ, ⲆᐃⲆᐃΔ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("keydown", this.ⲆⲆⲆⵠΔⵠⲆ, false)
		};
		this.ᐃⵠΔΔᐃⲆᐃ = function() {
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[364], this.ᐃⲆᐃᐃΔⵠⲆ, false);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[349], this.ᐃΔᐃᐃΔⲆᐃ, ᐃⵠⲆΔⵠ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ⵠ[440], this.ᐃⲆᐃᐃⲆᐃᐃ, false);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]]("keyup", this.ᐃᐃⵠᐃᐃᐃΔ, ⲆⵠᐃΔΔ);
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]]("keydown", this.ⲆⲆⲆⵠΔⵠⲆ, ⵠⲆⵠΔⵠ)
		}
	}

	function ⵠⲆΔⵠΔⲆⵠ(ⲆⲆⲆΔΔⲆΔ, ⵠⲆⲆⲆⵠΔⲆ, ΔⲆⲆⵠⲆΔᐃ, ⲆⵠΔΔⵠⲆΔ, ⲆⲆⲆΔΔⲆⵠ) {
		const ⵠⲆᐃⲆΔᐃⵠⲆᐃ = (1 + (26686 + ⲆⲆⲆΔΔⲆΔ) * 22695477) % 4294967296;
		const ⲆᐃᐃⲆⵠΔΔⵠⲆ = (2147483629 * (ⵠⲆⲆⲆⵠΔⲆ + 5501) + 2147483587) % 2147483647;
		const ᐃⵠΔΔᐃΔⵠⲆⵠ = (16 << (ΔⲆⲆⵠⲆΔᐃ >> 0 & 255)) + (8 << (ΔⲆⲆⵠⲆΔᐃ >> 24 & 255)) + (0 << (ΔⲆⲆⵠⲆΔᐃ >> 8 & 255)) + (24 << (ΔⲆⲆⵠⲆΔᐃ >> 16 & 255));
		const ᐃᐃΔᐃⲆᐃⵠⵠⵠ = (8 << (ⲆⵠΔΔⵠⲆΔ >> 24 & 255)) + (16 << (ⲆⵠΔΔⵠⲆΔ >> 8 & 255)) + (0 << (ⲆⵠΔΔⵠⲆΔ >> 0 & 255)) + (24 << (ⲆⵠΔΔⵠⲆΔ >> 16 & 255));
		const ΔΔΔⲆⲆⲆⲆΔⵠ = (16 << (ⲆⲆⲆΔΔⲆⵠ >> 8 & 255)) + (24 << (ⲆⲆⲆΔΔⲆⵠ >> 16 & 255)) + (0 << (ⲆⲆⲆΔΔⲆⵠ >> 24 & ⵠᐃᐃⵠⲆ)) + (8 << (ⲆⲆⲆΔΔⲆⵠ >> 0 & 255));
		const ᐃⵠⵠⵠΔⵠΔᐃᐃ = ⲆⲆᐃᐃⲆⲆᐃ(ⵠⲆᐃⲆΔᐃⵠⲆᐃ, ⲆᐃᐃⲆⵠΔΔⵠⲆ);
		const ⵠᐃΔⲆΔⲆⵠⵠᐃ = ⲆⲆᐃᐃⲆⲆᐃ(ᐃⵠΔΔᐃΔⵠⲆⵠ, ᐃᐃΔᐃⲆᐃⵠⵠⵠ);
		const ⵠᐃᐃᐃⲆᐃᐃⵠⲆ = (2531011 + 214013 * ((ᐃⵠⵠⵠΔⵠΔᐃᐃ ^ ⵠᐃΔⲆΔⲆⵠⵠᐃ) + 45419)) % 4294967296;
		return ⵠᐃᐃᐃⲆᐃᐃⵠⲆ
	}

	function ⵠⵠᐃᐃⲆⲆⵠᐃΔ(ΔΔ, Ⲇ) {
		this.ΔΔ = ΔΔ;
		this.Ⲇ = Ⲇ;
		var Ⲇⵠᐃ = this;
		this.ᐃⲆⵠᐃⵠⵠⲆ = ⵠΔⲆᐃⲆ;
		this.ⵠⵠⵠⵠΔΔⲆ = {
			id: document[ⲆⵠΔᐃᐃᐃΔ[181]]("scoreboard"),
			style: document[ⲆⵠΔᐃᐃᐃΔ[181]]("scoreboard").style,
			height: ⵠⵠⲆⲆ,
			translate: {
				y: ΔᐃⲆΔ,
				x: 0
			},
			"ⵠᐃⵠ": function() {
				this.style.left = this.translate.x + ⵠ[454];
				this.style.top = this.translate.y + ⵠ[454]
			},
			"ⲆΔⲆΔΔ": function() {
				this.id[ⲆⵠΔᐃᐃᐃΔ[359]] = '<div style="position:absolute;"> <img src="./img/scoreboard.png"style="width:250px;transform:translate(125px, -80px);"> </img> </div><div><div id="whokilled">' + ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⲆΔΔⵠⵠΔΔ + '</div></div><div class="deco" style="margin-top:35px;"></div><div class="deco"></div><div><div class="stats"> ' + ᐃΔΔ[ⵠⲆΔ.ᐃⵠᐃᐃΔΔᐃ] + ⵠ[369] + ⲆΔⲆ.ⲆⲆΔ + '</div><div class="stats"> ' + ᐃΔΔ[ⵠⲆΔ.ⵠᐃΔⵠⵠᐃΔ] + ⵠ[369] + ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ᐃᐃⲆⲆⲆΔⲆ + "</div></div>" + '<div id="flexDisplay"><div id="score"> ' + ᐃΔΔ[ⵠⲆΔ.ΔΔΔⵠᐃᐃⲆ] + ⵠ[369] + ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⵠⲆⲆᐃᐃ + '</div><div id="breadWon"><span id="breadWonInner">0</span><img src="./img/golden-bread.png" style="width:50px;margin-left:-25px;transform: translate(37px, 8px);"></img></div></div><div><div id="points"> ' + ⲆΔⲆ.Ⲇᐃⵠⵠᐃᐃᐃ.ⲆⲆⲆⲆᐃᐃΔ + " " + ᐃΔΔ[ⵠⲆΔ.POINTS] + '</div></div><div id="shop_points">' + ᐃΔΔ[ⵠⲆΔ.ⵠⲆⲆⲆⵠⵠⵠ] + '</div><div style="display:inline-block;"><div class="social" id="tttwitter">' + ᐃΔΔ[ⵠⲆΔ.ΔᐃⲆΔᐃΔΔ] + '</div><div class="social" id="fffacebook">' + ᐃΔΔ[ⵠⲆΔ.ⲆᐃᐃᐃⲆᐃΔ] + '</div></div><div id="bbback">' + ᐃΔΔ[ⵠⲆΔ.ᐃᐃΔⲆⵠᐃΔ] + ⵠ[183];
				this.style.display = ⵠ[489];
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("tttwitter")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], ΔⲆᐃᐃΔⵠⵠᐃᐃ, ⲆᐃⲆᐃΔ);
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("bbback")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], (function() {
					ΔⲆΔⵠⲆᐃᐃ.ⲆⲆᐃΔᐃ(ᐃᐃΔΔ.ᐃΔⲆⲆΔ)
				}), ⵠⲆⵠΔⵠ);
				document[ⲆⵠΔᐃᐃᐃΔ[181]]("fffacebook")[ⲆⵠΔᐃᐃᐃΔ[93]](ⵠ[349], ᐃⲆΔⵠⵠΔⲆⲆⲆ, false);
				this.height = Math.floor(this.id[ⲆⵠΔᐃᐃᐃΔ[129]] / 2);
				ⲆΔᐃΔΔΔΔⲆⲆ()
			}
		};
		var ᐃᐃᐃΔⵠ = Ⲇᐃⵠᐃ;
		var ᐃⲆΔᐃᐃ = 30;
		var ⵠⵠⲆᐃⲆⵠΔ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ᐃᐃᐃΔⵠ++;
			if (ᐃᐃᐃΔⵠ == ᐃⲆΔᐃᐃ) {
				Ⲇⵠᐃ.ⵠᐃⵠ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ⵠⵠⲆᐃⲆⵠΔ, 0)
		};
		this.ⲆⲆᐃΔᐃ = function(ᐃⲆⲆⵠⵠ) {
			ΔΔⲆⲆⲆ === Ⲇⵠᐃ.ᐃⲆⵠᐃⵠⵠⲆ && (Ⲇⵠᐃ.ᐃⲆⵠᐃⵠⵠⲆ = ΔᐃΔΔᐃ, ⵠᐃᐃᐃΔ = ᐃⲆⲆⵠⵠ, ⲆΔΔⲆⲆ = -1, ᐃᐃΔⵠⲆ(), ᐃⲆⵠᐃⵠᐃᐃ())
		};
		var ⵠᐃᐃᐃΔ;
		var ⲆΔΔⲆⲆ = -1;
		var ᐃΔⲆΔΔ = 30;
		var ᐃᐃΔⵠⲆ = function() {
			Ⲇⵠᐃ.ⵠᐃⵠ();
			ⲆΔΔⲆⲆ++;
			if (ⲆΔΔⲆⲆ == ᐃΔⲆΔΔ) {
				Ⲇⵠᐃ.stop();
				Ⲇⵠᐃ.ⵠⵠⵠⵠΔΔⲆ.style.display = ⵠ[402];
				ⵠᐃᐃᐃΔ();
				return
			}
			ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ᐃᐃΔⵠⲆ, 0)
		};
		this.ⲆΔΔⲆᐃ = false;
		this.stop = function() {
			this.ⲆΔΔⲆᐃ = false
		};
		this.ᐃΔⲆⲆΔ = function() {
			check_ads();
			document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[166]).style.backgroundColor = Δ.ⲆⵠⵠΔⲆ[ΔⵠⲆΔⲆ.time];
			Ⲇⵠᐃ.ⵠⵠⵠⵠΔΔⲆ.ⲆΔⲆΔΔ();
			ᐃᐃΔΔ.ⲆΔⲆᐃᐃ.style.display = ⵠ[489];
			Ⲇⵠᐃ.ⲆΔΔⲆᐃ = true;
			Ⲇⵠᐃ.ᐃⲆⵠᐃⵠⵠⲆ = true;
			ⲆΔΔⲆⲆ = -ⲆΔᐃⲆ;
			ᐃᐃᐃΔⵠ = 0;
			ⵠⵠⲆᐃⲆⵠΔ()
		};
		this.ⵠᐃⵠ = function() {
			this.ⵠⵠⵠⵠΔΔⲆ.translate.x = Math.floor(ᐃΔΔᐃ - 275);
			this.ⵠⵠⵠⵠΔΔⲆ.translate.y = Math.floor(ⲆⲆΔⲆ - this.ⵠⵠⵠⵠΔΔⲆ.height - 28);
			ᐃᐃΔΔ.ⲆΔⲆᐃᐃ.translate.x = this.ⵠⵠⵠⵠΔΔⲆ.translate.x - 350;
			ᐃᐃΔΔ.ⲆΔⲆᐃᐃ.translate.y = this.ⵠⵠⵠⵠΔΔⲆ.translate.y + 0;
			ᐃᐃΔΔ.ⲆΔⲆᐃᐃ.ⵠᐃⵠ();
			if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ || -1 != ⲆΔΔⲆⲆ) {
				var ᐃⲆⲆᐃ = 0;
				if (ᐃⲆΔᐃᐃ != ᐃᐃᐃΔⵠ) {
					var ᐃⲆⲆᐃ = 1500 / (ᐃᐃᐃΔⵠ + 1) - 50
				}
				if (-1 != ⲆΔΔⲆⲆ) {
					var ᐃⲆⲆᐃ = -(1750 / (ᐃΔⲆΔΔ - ⲆΔΔⲆⲆ + 1) - 48)
				}
				this.ⵠⵠⵠⵠΔΔⲆ.translate.y -= ᐃⲆⲆᐃ
			}
			this.ⵠⵠⵠⵠΔΔⲆ.ⵠᐃⵠ()
		};
		this.ⲆⵠᐃⲆ = function() {
			ⵠⵠⲆᐃΔⵠⲆ();
			ⲆΔⲆ.alert.ⲆⵠᐃⲆ(ⵠ[68], ⵠ[151])
		}
	}

	function ⵠΔⵠⲆⵠⵠⵠ(ΔΔⵠᐃΔᐃⵠ, ⵠⵠⵠᐃΔⲆⵠ, ᐃᐃᐃⲆΔⲆⲆ, ᐃΔⲆⲆⲆᐃΔ, ΔᐃⵠⲆⵠΔΔ) {
		const ᐃᐃΔⵠⲆΔⲆ = (2531011 + (ΔΔⵠᐃΔᐃⵠ + 30119) * 214013) % 4294967296;
		const ΔΔΔᐃⵠΔᐃ = (1 + 22695477 * (ⵠⵠⵠᐃΔⲆⵠ + 60608)) % 4294967296;
		const ⵠΔⲆΔᐃⲆⲆ = ~(22065 & ᐃᐃᐃⲆΔⲆⲆ) & 22065 | ~(22065 & ᐃᐃᐃⲆΔⲆⲆ) & ᐃᐃᐃⲆΔⲆⲆ;
		const ⲆⵠᐃⲆᐃⵠⵠ = 18122 ^ ᐃΔⲆⲆⲆᐃΔ;
		const ᐃΔᐃΔᐃⵠᐃⲆΔ = (418 | ΔᐃⵠⲆⵠΔΔ) & ~(ΔᐃⵠⲆⵠΔΔ & 418);
		const ⲆⵠⲆᐃⵠⲆⵠⵠⵠ = ⲆᐃⲆⵠⵠⲆⵠ(ᐃᐃΔⵠⲆΔⲆ, ΔΔΔᐃⵠΔᐃ, ⵠΔⲆΔᐃⲆⲆ, ⲆⵠᐃⲆᐃⵠⵠ, ᐃΔᐃΔᐃⵠᐃⲆΔ, ᐃᐃΔⵠⲆΔⲆ);
		const ⲆΔΔΔᐃⲆΔⲆⲆ = ⵠⵠⲆΔᐃⵠᐃ(ΔΔΔᐃⵠΔᐃ, ⵠΔⲆΔᐃⲆⲆ, ⲆⵠᐃⲆᐃⵠⵠ);
		const ⲆⲆⲆⲆⲆΔΔⲆⵠ = 18818 ^ ⲆⵠⲆᐃⵠⲆⵠⵠⵠ;
		return ⲆⲆⲆⲆⲆΔΔⲆⵠ
	}

	function ᐃᐃᐃⲆⵠΔⲆ(ΔΔΔⵠⲆᐃⵠ, ᐃΔⲆᐃⵠΔᐃ, ΔⲆⵠΔⵠᐃⲆ, ΔⲆⵠⲆΔᐃⵠ, ΔᐃᐃΔᐃᐃⵠ, ⵠⵠⵠⲆᐃΔⵠ) {
		const ⵠΔⲆⵠᐃΔⲆ = (16 << (ΔΔΔⵠⲆᐃⵠ >> ΔⵠⲆΔ & 255)) + (8 << (ΔΔΔⵠⲆᐃⵠ >> 16 & 255)) + (24 << (ΔΔΔⵠⲆᐃⵠ >> ⵠᐃⵠⵠⵠ & 255)) + (ⲆΔᐃ << (ΔΔΔⵠⲆᐃⵠ >> 24 & 255));
		const ΔᐃⲆᐃⲆᐃΔⵠᐃ = ~(9950 & ᐃΔⲆᐃⵠΔᐃ) & 9950 | ~(9950 & ᐃΔⲆᐃⵠΔᐃ) & ᐃΔⲆᐃⵠΔᐃ;
		const ⲆⵠᐃⵠⵠⵠⲆⲆᐃ = (ΔⲆⵠΔⵠᐃⲆ | 11862) & ~(ΔⲆⵠΔⵠᐃⲆ & 11862);
		const ᐃΔⵠᐃⵠΔⵠΔⵠ = ~(26109 & ΔⲆⵠⲆΔᐃⵠ) & 26109 | ~(26109 & ΔⲆⵠⲆΔᐃⵠ) & ΔⲆⵠⲆΔᐃⵠ;
		const ᐃᐃⲆΔᐃᐃΔⵠⲆ = (ⲆⵠⲆ << (ΔᐃᐃΔᐃᐃⵠ >> 16 & 255)) + (24 << (ΔᐃᐃΔᐃᐃⵠ >> 0 & ΔᐃⲆⲆⵠΔᐃ)) + (8 << (ΔᐃᐃΔᐃᐃⵠ >> 24 & 255)) + (16 << (ΔᐃᐃΔᐃᐃⵠ >> 8 & 255));
		const ⵠⵠΔΔΔⵠⲆⵠⲆ = ⵠⵠⵠⲆᐃΔⵠ ^ 32422;
		const ΔⵠΔⲆΔᐃⲆ = ⵠⲆΔⵠΔⲆⵠ(ⵠΔⲆⵠᐃΔⲆ, ΔᐃⲆᐃⲆᐃΔⵠᐃ, ⲆⵠᐃⵠⵠⵠⲆⲆᐃ, ᐃΔⵠᐃⵠΔⵠΔⵠ, ᐃᐃⲆΔᐃᐃΔⵠⲆ);
		const ⵠᐃΔⲆᐃⵠᐃ = ⵠⵠᐃⲆΔᐃΔ(ⵠⵠΔΔΔⵠⲆⵠⲆ, ⵠΔⲆⵠᐃΔⲆ);
		const ΔΔΔᐃΔⵠΔᐃΔ = (24 << ((ΔⵠΔⲆΔᐃⲆ ^ ⵠᐃΔⲆᐃⵠᐃ) >> 24 & ⲆᐃᐃⲆⵠΔⲆ)) + (16 << ((ΔⵠΔⲆΔᐃⲆ ^ ⵠᐃΔⲆᐃⵠᐃ) >> 16 & 255)) + (8 << ((ΔⵠΔⲆΔᐃⲆ ^ ⵠᐃΔⲆᐃⵠᐃ) >> 8 & 255)) + (0 << ((ΔⵠΔⲆΔᐃⲆ ^ ⵠᐃΔⲆᐃⵠᐃ) >> 0 & 255));
		return ΔΔΔᐃΔⵠΔᐃΔ
	}

	function ⲆⵠⵠⵠΔᐃⲆ(ⲆⵠⲆᐃᐃⵠⲆ, ᐃΔᐃⵠⲆΔⲆ, ᐃᐃⲆⵠᐃΔᐃ, ⲆᐃⲆⵠⲆⵠⲆ, ΔⵠΔΔᐃⵠΔ, ᐃⵠΔᐃⵠΔⵠ) {
		ⲆᐃΔᐃᐃᐃⲆ(ᐃΔΔΔⲆ, ⲆⵠⲆᐃᐃⵠⲆ, ᐃΔᐃⵠⲆΔⲆ, ᐃᐃⲆⵠᐃΔᐃ, ⲆᐃⲆⵠⲆⵠⲆ, ΔⵠΔΔᐃⵠΔ, ᐃⵠΔᐃⵠΔⵠ);
		const ⲆⲆΔⵠⲆⵠΔ = ⲆⲆⲆⵠᐃΔΔ(ⲆᐃΔⲆ[ΔⲆⵠ], ⲆᐃΔⲆ[ΔⲆᐃ], ⲆᐃΔⲆ[ⵠⵠΔⲆ]);
		const ⵠΔᐃΔΔⲆᐃⵠⵠ = ⲆΔⲆᐃⵠⵠⵠ(ⲆᐃΔⲆ[ⵠΔⵠⲆ], ⲆᐃΔⲆ[ᐃⵠⲆⲆⲆ], ⲆᐃΔⲆ[5]);
		const ᐃⲆⲆⵠᐃⵠⵠΔⵠ = ~(23871 & ⲆⲆΔⵠⲆⵠΔ) & (ⲆⲆΔⵠⲆⵠΔ | 23871);
		return ᐃⲆⲆⵠᐃⵠⵠΔⵠ
	}! function() {
		;
		"use strict";
		var ΔΔⵠ = function() {
			this.ⲆΔⲆΔΔ()
		};
		ΔΔⵠ.prototype = {
			"ⲆΔⲆΔΔ": function() {
				var ΔΔⵠ = this || ᐃⵠⲆ;
				return ΔΔⵠ.ΔⵠⲆΔΔⵠⲆ = 1e3, ΔΔⵠ.ⲆᐃΔᐃⲆⵠΔ = {}, ΔΔⵠ.ⵠⵠⵠⵠⲆ = [], ΔΔⵠ.ⵠⵠⵠᐃΔ = !ΔⲆᐃ, ΔΔⵠ.ᐃΔⵠⵠⲆ = ᐃⵠⵠ, ΔΔⵠ.ΔⵠⲆⲆΔΔⵠ = "canplaythrough", ΔΔⵠ.ᐃⲆⲆⲆᐃ = ⵠ[150] != typeof ⲆⲆⲆⲆᐃᐃᐃ && ⲆⲆⲆⲆᐃᐃᐃ.navigator ? ⲆⲆⲆⲆᐃᐃᐃ.navigator : null, ΔΔⵠ.ⵠⵠⵠⵠⵠΔᐃ = null, ΔΔⵠ.ᐃⲆⲆⵠΔᐃΔ = !1, ΔΔⵠ.ᐃᐃᐃⵠᐃ = !0, ΔΔⵠ.ⲆⵠⵠᐃΔΔⵠ = !ⲆΔᐃ, ΔΔⵠ.Ⲇ = null, ΔΔⵠ.ⲆⲆᐃⲆᐃᐃⲆ = !0, ΔΔⵠ.ⲆᐃΔΔⵠⲆᐃ(), ΔΔⵠ
			},
			volume: function(ΔΔⵠ) {
				var ⵠⲆⵠ = this || ᐃⵠⲆ;
				if (ΔΔⵠ = parseFloat(ΔΔⵠ), ⵠⲆⵠ.Ⲇ || ⵠⲆⲆⲆΔ(), void 0 !== ΔΔⵠ && ΔΔⵠ >= 0 && ΔΔⵠ <= ⵠᐃΔᐃ) {
					if (ⵠⲆⵠ.ᐃΔⵠⵠⲆ = ΔΔⵠ, ⵠⲆⵠ.ⵠⵠⵠᐃΔ) return ⵠⲆⵠ;
					ⵠⲆⵠ.ᐃᐃᐃⵠᐃ && (ⵠⲆⵠ.ⵠⵠⵠⵠⵠΔᐃ.gain.value = ΔΔⵠ);
					for (var ᐃⲆⵠ = 0; ᐃⲆⵠ < ⵠⲆⵠ.ⵠⵠⵠⵠⲆ.length; ᐃⲆⵠ++)
						if (!ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ᐃⲆⲆᐃⵠ)
							for (var Δᐃᐃ = ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ΔⵠΔⵠᐃ(), ⵠⵠⵠ = Δⵠⵠ; ⵠⵠⵠ < Δᐃᐃ.length; ⵠⵠⵠ++) {
								var ΔⲆⵠᐃ = ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ⵠΔΔⵠⲆ(Δᐃᐃ[ⵠⵠⵠ]);
								ΔⲆⵠᐃ && ΔⲆⵠᐃ.ⲆΔᐃᐃ && (ΔⲆⵠᐃ.ⲆΔᐃᐃ.volume = ΔⲆⵠᐃ.ᐃΔⵠⵠⲆ * ΔΔⵠ)
							}
					return ⵠⲆⵠ
				}
				return ⵠⲆⵠ.ᐃΔⵠⵠⲆ
			},
			"ⵠᐃⲆⵠΔⵠⲆ": function(ΔΔⵠ) {
				var ⵠⲆⵠ = this || ᐃⵠⲆ;
				ⵠⲆⵠ.Ⲇ || ⵠⲆⲆⲆΔ(), ⵠⲆⵠ.ⵠⵠⵠᐃΔ = ΔΔⵠ, ⵠⲆⵠ.ᐃᐃᐃⵠᐃ && (ⵠⲆⵠ.ⵠⵠⵠⵠⵠΔᐃ.gain.value = ΔΔⵠ ? 0 : ⵠⲆⵠ.ᐃΔⵠⵠⲆ);
				for (var ᐃⲆⵠ = 0; ᐃⲆⵠ < ⵠⲆⵠ.ⵠⵠⵠⵠⲆ.length; ᐃⲆⵠ++)
					if (!ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ᐃⲆⲆᐃⵠ)
						for (var Δᐃᐃ = ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ΔⵠΔⵠᐃ(), ⵠⵠⵠ = ⲆΔᐃ; ⵠⵠⵠ < Δᐃᐃ.length; ⵠⵠⵠ++) {
							var ΔⲆⵠᐃ = ⵠⲆⵠ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ⵠΔΔⵠⲆ(Δᐃᐃ[ⵠⵠⵠ]);
							ΔⲆⵠᐃ && ΔⲆⵠᐃ.ⲆΔᐃᐃ && (ΔⲆⵠᐃ.ⲆΔᐃᐃ.muted = !!ΔΔⵠ || ΔⲆⵠᐃ.ⵠⵠⵠᐃΔ)
						}
				return ⵠⲆⵠ
			},
			"ⲆΔΔⲆⲆⲆⲆ": function() {
				for (var ΔΔⵠ = this || ᐃⵠⲆ, ⵠⲆⵠ = ΔΔⵠ.ⵠⵠⵠⵠⲆ.length - ⲆⲆΔᐃ; ⵠⲆⵠ >= 0; ⵠⲆⵠ--) ΔΔⵠ.ⵠⵠⵠⵠⲆ[ⵠⲆⵠ].ⲆΔΔⲆⲆⲆⲆ();
				return ΔΔⵠ.ᐃᐃᐃⵠᐃ && ΔΔⵠ.Ⲇ && void ⵠⵠᐃⵠ !== ΔΔⵠ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[375]] && (ΔΔⵠ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[375]](), ΔΔⵠ.Ⲇ = null, ⵠⲆⲆⲆΔ()), ΔΔⵠ
			},
			"ⵠᐃⲆΔᐃⵠᐃΔΔ": function(ΔΔⵠ) {
				return (this || ᐃⵠⲆ).ⲆᐃΔᐃⲆⵠΔ[ΔΔⵠ.replace(/^x-/, "")]
			},
			"ⲆᐃΔΔⵠⲆᐃ": function() {
				var ΔΔⵠ = this || ᐃⵠⲆ;
				if (ΔΔⵠ.state = ΔΔⵠ.Ⲇ ? ΔΔⵠ.Ⲇ.state || ⵠ[578] : ⵠ[578], ΔΔⵠ.ᐃᐃⲆΔΔᐃΔ(), !ΔΔⵠ.ᐃᐃᐃⵠᐃ)
					if (ⵠ[150] != typeof Audio) try {
						var ⵠⲆⵠ = new Audio;
						void 0 === ⵠⲆⵠ.oncanplaythrough && (ΔΔⵠ.ΔⵠⲆⲆΔΔⵠ = "canplay")
					} catch (ᐃⵠⲆ) {
						ΔΔⵠ.ᐃⲆⲆⵠΔᐃΔ = !ΔⵠⲆⲆ
					} else ΔΔⵠ.ᐃⲆⲆⵠΔᐃΔ = !ΔᐃⲆΔ;
				try {
					var ⵠⲆⵠ = new Audio;
					ⵠⲆⵠ.muted && (ΔΔⵠ.ᐃⲆⲆⵠΔᐃΔ = !0)
				} catch (ΔΔⵠ) {}
				return ΔΔⵠ.ᐃⲆⲆⵠΔᐃΔ || ΔΔⵠ.ΔⲆⲆΔᐃⲆⲆⵠⵠ(), ΔΔⵠ
			},
			"ΔⲆⲆΔᐃⲆⲆⵠⵠ": function() {
				var ΔΔⵠ = this || ᐃⵠⲆ,
					ⵠⲆⵠ = null;
				try {
					ⵠⲆⵠ = ⵠ[150] != typeof Audio ? new Audio : null
				} catch (ᐃⵠⲆ) {
					return ΔΔⵠ
				}
				if (!ⵠⲆⵠ || ⵠ[479] != typeof ⵠⲆⵠ.canPlayType) return ΔΔⵠ;
				var ᐃⲆⵠ = ⵠⲆⵠ.canPlayType("audio/mpeg;").replace(/^no$/, ""),
					Δᐃᐃ = ΔΔⵠ.ᐃⲆⲆⲆᐃ && ΔΔⵠ.ᐃⲆⲆⲆᐃ.userAgent.match(/OPR\/([0-6].)/g),
					ⵠⵠⵠ = Δᐃᐃ && parseInt(Δᐃᐃ[ᐃΔⵠⵠ].split("/")[ΔΔᐃᐃ], ⵠΔᐃΔⲆ) < 33;
				return ΔΔⵠ.ⲆᐃΔᐃⲆⵠΔ = {
					"ⵠⲆΔⵠⵠⲆᐃⲆᐃ": !(ⵠⵠⵠ || !ᐃⲆⵠ && !ⵠⲆⵠ.canPlayType("audio/mp3;").replace(/^no$/, "")),
					"ⵠⵠᐃⵠⵠⵠΔⵠΔ": !!ᐃⲆⵠ,
					"ⲆᐃⵠⵠᐃⵠΔⵠⲆ": !!ⵠⲆⵠ.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
					"ΔⵠⲆⵠᐃⵠᐃⲆᐃ": !!ⵠⲆⵠ.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
					"ᐃᐃᐃᐃᐃⲆⵠᐃΔ": !!ⵠⲆⵠ.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
					"ᐃⲆΔⵠⵠΔᐃⲆᐃ": !!ⵠⲆⵠ.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
					"ⲆⵠⲆΔⲆⵠⵠⲆⲆ": !!ⵠⲆⵠ.canPlayType("audio/aac;").replace(/^no$/, ""),
					"ΔⲆΔΔᐃⲆⲆⲆᐃ": !!ⵠⲆⵠ.canPlayType("audio/x-caf;").replace(/^no$/, ""),
					"ⲆⵠΔⲆⲆᐃᐃΔᐃ": !!(ⵠⲆⵠ.canPlayType("audio/x-m4a;") || ⵠⲆⵠ.canPlayType("audio/m4a;") || ⵠⲆⵠ.canPlayType("audio/aac;")).replace(/^no$/, ""),
					"ᐃᐃⲆⲆⵠⵠⲆⲆⲆ": !!(ⵠⲆⵠ.canPlayType("audio/x-mp4;") || ⵠⲆⵠ.canPlayType("audio/mp4;") || ⵠⲆⵠ.canPlayType("audio/aac;")).replace(/^no$/, ""),
					"ᐃⲆᐃΔⵠᐃᐃⲆᐃ": !!ⵠⲆⵠ.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
					"ⵠΔΔᐃⲆⲆᐃΔⵠ": !!ⵠⲆⵠ.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
					"ΔⵠⲆΔⲆⲆΔᐃⵠ": !!ⵠⲆⵠ.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
					"ΔⲆᐃᐃⵠΔᐃᐃⲆ": !!(ⵠⲆⵠ.canPlayType("audio/x-flac;") || ⵠⲆⵠ.canPlayType("audio/flac;")).replace(/^no$/, "")
				}, ΔΔⵠ
			},
			"ᐃᐃⵠⵠᐃΔᐃⲆⲆ": function() {
				var ΔΔⵠ = this || ᐃⵠⲆ,
					ⵠⲆⵠ = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(ΔΔⵠ.ᐃⲆⲆⲆᐃ && ΔΔⵠ.ᐃⲆⲆⲆᐃ.userAgent),
					ᐃⲆⵠ = !!("ontouchend" in ⲆⲆⲆⲆᐃᐃᐃ || ΔΔⵠ.ᐃⲆⲆⲆᐃ && ΔΔⵠ.ᐃⲆⲆⲆᐃ.maxTouchPoints > 0 || ΔΔⵠ.ᐃⲆⲆⲆᐃ && ΔΔⵠ.ᐃⲆⲆⲆᐃ.ᐃΔᐃⲆΔΔᐃⵠⵠ > 0);
				if (!ΔΔⵠ.ⵠⵠⵠⵠⲆⵠⵠ && ΔΔⵠ.Ⲇ && (ⵠⲆⵠ || ᐃⲆⵠ)) {
					ΔΔⵠ.ⵠⵠⵠⵠⲆⵠⵠ = !1, ΔΔⵠ.ⲆᐃⲆᐃΔᐃⲆⲆⲆ || 44100 === ΔΔⵠ.Ⲇ.sampleRate || (ΔΔⵠ.ⲆᐃⲆᐃΔᐃⲆⲆⲆ = !ΔΔⲆᐃ, ΔΔⵠ.ⲆΔΔⲆⲆⲆⲆ()), ΔΔⵠ.ΔᐃⵠⵠΔⵠⵠ = ΔΔⵠ.Ⲇ.createBuffer(ΔΔⵠΔⵠ, 1, 22050);
					var Δᐃᐃ = function() {
						ᐃⵠⲆ.ΔⲆⲆⲆᐃᐃᐃ();
						var ⵠⲆⵠ = ΔΔⵠ.Ⲇ.createBufferSource();
						ⵠⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[258]] = ΔΔⵠ.ΔᐃⵠⵠΔⵠⵠ, ⵠⲆⵠ.connect(ΔΔⵠ.Ⲇ.destination), void 0 === ⵠⲆⵠ.start ? ⵠⲆⵠ.ΔⵠΔᐃΔⵠΔⵠⲆ(ᐃΔⵠⵠ) : ⵠⲆⵠ.start(ⲆⲆⲆ), ⵠ[479] == typeof ΔΔⵠ.Ⲇ.resume && ΔΔⵠ.Ⲇ.resume(), ⵠⲆⵠ.onended = function() {
							ⵠⲆⵠ.disconnect(0), ΔΔⵠ.ⵠⵠⵠⵠⲆⵠⵠ = !0, ΔΔⵠ.ⲆⲆᐃⲆᐃᐃⲆ = !ⲆΔⵠⲆ, document[ⲆⵠΔᐃᐃᐃΔ[87]]("touchend", Δᐃᐃ, !ΔΔⵠᐃ)
						}
					};
					return document[ⲆⵠΔᐃᐃᐃΔ[93]]("touchend", Δᐃᐃ, !0), ΔΔⵠ
				}
			},
			"ᐃᐃⲆΔΔᐃΔ": function() {
				var ΔΔⵠ = this;
				if (ΔΔⵠ.ⲆⵠⵠᐃΔΔⵠ && ΔΔⵠ.Ⲇ && void Ⲇᐃⵠᐃ !== ΔΔⵠ.Ⲇ.suspend && ᐃⵠⲆ.ᐃᐃᐃⵠᐃ) {
					for (var ⵠⲆⵠ = 0; ⵠⲆⵠ < ΔΔⵠ.ⵠⵠⵠⵠⲆ.length; ⵠⲆⵠ++)
						if (ΔΔⵠ.ⵠⵠⵠⵠⲆ[ⵠⲆⵠ].ᐃⲆⲆᐃⵠ)
							for (var ᐃⲆⵠ = 0; ᐃⲆⵠ < ΔΔⵠ.ⵠⵠⵠⵠⲆ[ⵠⲆⵠ].ᐃᐃⲆⵠⵠ.length; ᐃⲆⵠ++)
								if (!ΔΔⵠ.ⵠⵠⵠⵠⲆ[ⵠⲆⵠ].ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆⵠⵠᐃⲆ) return ΔΔⵠ;
					return ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ && clearTimeout(ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ), ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ = setTimeout((function() {
						ΔΔⵠ.ⲆⵠⵠᐃΔΔⵠ && (ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ = null, ΔΔⵠ.state = "suspending", ΔΔⵠ.Ⲇ.suspend().then((function() {
							ΔΔⵠ.state = "suspended", ΔΔⵠ.ⲆⲆΔΔᐃᐃⵠ && (delete ΔΔⵠ.ⲆⲆΔΔᐃᐃⵠ, ΔΔⵠ.ΔⲆⲆⲆᐃᐃᐃ())
						})))
					}), 3e4), ΔΔⵠ
				}
			},
			"ΔⲆⲆⲆᐃᐃᐃ": function() {
				var ΔΔⵠ = this;
				if (ΔΔⵠ.Ⲇ && void ΔΔᐃ !== ΔΔⵠ.Ⲇ.resume && ᐃⵠⲆ.ᐃᐃᐃⵠᐃ) return ⵠ[578] === ΔΔⵠ.state && ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ ? (clearTimeout(ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ), ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ = null) : "suspended" === ΔΔⵠ.state ? (ΔΔⵠ.Ⲇ.resume().then((function() {
					ΔΔⵠ.state = ⵠ[578];
					for (var ᐃⵠⲆ = Δⵠⵠ; ᐃⵠⲆ < ΔΔⵠ.ⵠⵠⵠⵠⲆ.length; ᐃⵠⲆ++) ΔΔⵠ.ⵠⵠⵠⵠⲆ[ᐃⵠⲆ].ᐃΔΔᐃⵠ("resume")
				})), ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ && (clearTimeout(ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ), ΔΔⵠ.ⵠᐃⵠᐃΔᐃⲆ = null)) : "suspending" === ΔΔⵠ.state && (ΔΔⵠ.ⲆⲆΔΔᐃᐃⵠ = !0), ΔΔⵠ
			}
		};
		var ᐃⵠⲆ = new ΔΔⵠ,
			ⵠⲆⵠ = function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				if (!ΔΔⵠ.src || 0 === ΔΔⵠ.src.length) return void console.error(ᐃᐃⲆⵠⲆ);
				ᐃⵠⲆ.ⲆΔⲆΔΔ(ΔΔⵠ)
			};
		ⵠⲆⵠ.prototype = {
			"ⲆΔⲆΔΔ": function(ΔΔⵠ) {
				var ⵠⲆⵠ = this;
				return ᐃⵠⲆ.Ⲇ || ⵠⲆⲆⲆΔ(), ⵠⲆⵠ.ⲆⲆΔᐃΔΔⵠᐃΔ = ΔΔⵠ.autoplay || !1, ⵠⲆⵠ.ᐃⵠⵠⵠⲆΔᐃ = ⵠ[348] != typeof ΔΔⵠ.ΔⲆΔᐃᐃΔΔ ? ΔΔⵠ.ΔⲆΔᐃᐃΔΔ : [ΔΔⵠ.ΔⲆΔᐃᐃΔΔ], ⵠⲆⵠ.ⵠᐃⵠΔⲆᐃᐃ = ΔΔⵠ.ⵠᐃᐃⲆΔⲆᐃⵠΔ || !1, ⵠⲆⵠ.ⵠⵠⵠᐃΔ = ΔΔⵠ.ⵠᐃⲆⵠΔⵠⲆ || !1, ⵠⲆⵠ.ΔⵠⲆⲆᐃ = ΔΔⵠ.loop || !ΔⲆᐃ, ⵠⲆⵠ.ⵠⲆⲆᐃⲆⲆᐃΔⲆ = ΔΔⵠ.ΔⲆᐃΔᐃᐃΔⲆᐃ || ΔⲆⵠΔΔ, ⵠⲆⵠ.ᐃΔⲆⵠⲆⵠⵠⵠΔ = "boolean" != typeof ΔΔⵠ.preload || ΔΔⵠ.preload, ⵠⲆⵠ.ⲆΔⵠⵠᐃ = ΔΔⵠ.rate || 1, ⵠⲆⵠ.ΔⲆⵠΔⲆ = ΔΔⵠ.Ⲇᐃ || {}, ⵠⲆⵠ.ΔᐃΔⲆᐃ = ⵠ[348] != typeof ΔΔⵠ.src ? ΔΔⵠ.src : [ΔΔⵠ.src], ⵠⲆⵠ.ᐃΔⵠⵠⲆ = void ΔⵠⲆΔ !== ΔΔⵠ.volume ? ΔΔⵠ.volume : ᐃⵠ, ⵠⲆⵠ.ΔΔⲆᐃⵠⵠᐃ = ΔᐃⲆΔ, ⵠⲆⵠ.ᐃⲆᐃⵠΔ = "unloaded", ⵠⲆⵠ.ᐃᐃⲆⵠⵠ = [], ⵠⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ = {}, ⵠⲆⵠ.ᐃΔⵠⲆᐃ = [], ⵠⲆⵠ.ᐃΔⵠΔᐃΔⵠⲆᐃ = ΔΔⵠ.onend ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onend
				}] : [], ⵠⲆⵠ.ⲆⲆΔⲆᐃᐃᐃᐃΔ = ΔΔⵠ.onfade ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onfade
				}] : [], ⵠⲆⵠ.ⵠⲆΔᐃⵠⵠⲆᐃⵠ = ΔΔⵠ.onload ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onload
				}] : [], ⵠⲆⵠ.ᐃΔΔᐃΔⵠⲆΔⲆ = ΔΔⵠ.ⵠΔΔⵠⵠΔⲆΔⲆ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⵠΔΔⵠⵠΔⲆΔⲆ
				}] : [], ⵠⲆⵠ.ΔΔᐃⲆΔᐃΔᐃᐃ = ΔΔⵠ.onpause ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onpause
				}] : [], ⵠⲆⵠ.ⵠᐃⲆⲆⲆⲆⲆᐃⲆ = ΔΔⵠ.onplay ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onplay
				}] : [], ⵠⲆⵠ.ᐃᐃⵠΔΔⵠⲆᐃΔ = ΔΔⵠ.onstop ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onstop
				}] : [], ⵠⲆⵠ.ⵠΔΔΔᐃⵠᐃΔⲆ = ΔΔⵠ.onmute ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.onmute
				}] : [], ⵠⲆⵠ.ⲆⵠⵠΔᐃΔⵠᐃΔ = ΔΔⵠ.ⲆⵠᐃⲆᐃⵠⲆᐃⵠ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⲆⵠᐃⲆᐃⵠⲆᐃⵠ
				}] : [], ⵠⲆⵠ.ᐃᐃΔᐃᐃΔᐃⲆⲆ = ΔΔⵠ.ⲆⲆΔΔⲆᐃΔᐃᐃ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⲆⲆΔΔⲆᐃΔᐃᐃ
				}] : [], ⵠⲆⵠ.ᐃⲆⲆⲆⵠⲆᐃᐃⵠ = ΔΔⵠ.ⵠᐃᐃⲆⵠⲆᐃⵠⵠ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⵠᐃᐃⲆⵠⲆᐃⵠⵠ
				}] : [], ⵠⲆⵠ.ⲆΔⵠᐃⵠⵠᐃⵠᐃ = [], ⵠⲆⵠ.ᐃⲆⲆᐃⵠ = ᐃⵠⲆ.ᐃᐃᐃⵠᐃ && !ⵠⲆⵠ.ⵠᐃⵠΔⲆᐃᐃ, void 0 !== ᐃⵠⲆ.Ⲇ && ᐃⵠⲆ.Ⲇ && ᐃⵠⲆ.ⲆⲆᐃⲆᐃᐃⲆ && ᐃⵠⲆ.ᐃᐃⵠⵠᐃΔᐃⲆⲆ(), ᐃⵠⲆ.ⵠⵠⵠⵠⲆ.push(ⵠⲆⵠ), ⵠⲆⵠ.ⲆⲆΔᐃΔΔⵠᐃΔ && ⵠⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: ⵠ[344],
					action: function() {
						ⵠⲆⵠ.play()
					}
				}), ⵠⲆⵠ.ᐃΔⲆⵠⲆⵠⵠⵠΔ && ⵠⲆⵠ.load(), ⵠⲆⵠ
			},
			load: function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = null;
				if (ᐃⵠⲆ.ᐃⲆⲆⵠΔᐃΔ) return void ΔΔⵠ.ᐃΔΔᐃⵠ(ⵠ[327], null, "No audio support.");
				ⵠ[348] == typeof ΔΔⵠ.ΔᐃΔⲆᐃ && (ΔΔⵠ.ΔᐃΔⲆᐃ = [ΔΔⵠ.ΔᐃΔⲆᐃ]);
				for (var Δᐃᐃ = ΔⲆⵠ; Δᐃᐃ < ΔΔⵠ.ΔᐃΔⲆᐃ.length; Δᐃᐃ++) {
					var ΔⲆⵠᐃ, ᐃⲆ;
					if (ΔΔⵠ.ᐃⵠⵠⵠⲆΔᐃ && ΔΔⵠ.ᐃⵠⵠⵠⲆΔᐃ[Δᐃᐃ]) ΔⲆⵠᐃ = ΔΔⵠ.ᐃⵠⵠⵠⲆΔᐃ[Δᐃᐃ];
					else {
						if (ⵠ[348] != typeof(ᐃⲆ = ΔΔⵠ.ΔᐃΔⲆᐃ[Δᐃᐃ])) {
							ΔΔⵠ.ᐃΔΔᐃⵠ(ⵠ[327], null, "Non-string found in selected audio sources - ignoring.");
							continue
						}
						ΔⲆⵠᐃ = /^data:audio\/([^;,]+);/i [ⲆⵠΔᐃᐃᐃΔ[183]](ᐃⲆ), ΔⲆⵠᐃ || (ΔⲆⵠᐃ = /\.([^.]+)$/ [ⲆⵠΔᐃᐃᐃΔ[183]](ᐃⲆ.split("?", ⵠⵠⲆ)[ᐃΔⵠⵠ])), ΔⲆⵠᐃ && (ΔⲆⵠᐃ = ΔⲆⵠᐃ[ᐃᐃΔᐃ].toLowerCase())
					}
					if (ΔⲆⵠᐃ || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'), ΔⲆⵠᐃ && ᐃⵠⲆ.ⵠᐃⲆΔᐃⵠᐃΔΔ(ΔⲆⵠᐃ)) {
						ⵠⲆⵠ = ΔΔⵠ.ΔᐃΔⲆᐃ[Δᐃᐃ];
						break
					}
				}
				return ⵠⲆⵠ ? (ΔΔⵠ.ΔᐃΔⲆᐃ = ⵠⲆⵠ, ΔΔⵠ.ᐃⲆᐃⵠΔ = "loading", "https:" === ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[329]].protocol && "http:" === ⵠⲆⵠ.slice(0, 5) && (ΔΔⵠ.ⵠᐃⵠΔⲆᐃᐃ = !0, ΔΔⵠ.ᐃⲆⲆᐃⵠ = !ⲆΔⵠⲆ), new ᐃⲆⵠ(ΔΔⵠ), ΔΔⵠ.ᐃⲆⲆᐃⵠ && ⵠⵠⵠ(ΔΔⵠ), ΔΔⵠ) : void ΔΔⵠ.ᐃΔΔᐃⵠ(ⵠ[327], null, "No codec support for selected audio sources.")
			},
			play: function(ΔΔⵠ, ⵠⲆⵠ) {
				var ᐃⲆⵠ = this,
					Δᐃᐃ = null;
				if (ⵠ[501] == typeof ΔΔⵠ) Δᐃᐃ = ΔΔⵠ, ΔΔⵠ = null;
				else {
					if (ⵠ[348] == typeof ΔΔⵠ && ⵠ[446] === ᐃⲆⵠ.ᐃⲆᐃⵠΔ && !ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ]) return null;
					if (void ⵠᐃⲆᐃ === ΔΔⵠ) {
						ΔΔⵠ = ⵠ[360];
						for (var ⵠⵠⵠ = ᐃⵠΔ, ΔⲆⵠᐃ = ΔᐃⲆΔ; ΔⲆⵠᐃ < ᐃⲆⵠ.ᐃᐃⲆⵠⵠ.length; ΔⲆⵠᐃ++) ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[ΔⲆⵠᐃ].ⲆⵠⵠᐃⲆ && !ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[ΔⲆⵠᐃ].ⲆⵠⲆΔΔ && (ⵠⵠⵠ++, Δᐃᐃ = ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[ΔⲆⵠᐃ].ΔⲆᐃΔ);
						ᐃⵠⵠ === ⵠⵠⵠ ? ΔΔⵠ = null : Δᐃᐃ = null
					}
				}
				var ᐃⲆ = Δᐃᐃ ? ᐃⲆⵠ.ⵠΔΔⵠⲆ(Δᐃᐃ) : ᐃⲆⵠ.ⵠⲆᐃⲆᐃΔᐃⲆᐃ();
				if (!ᐃⲆ) return null;
				if (Δᐃᐃ && !ΔΔⵠ && (ΔΔⵠ = ᐃⲆ.ΔⲆⵠΔⲆ || ⵠ[360]), ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) {
					ᐃⲆ.ΔⲆⵠΔⲆ = ΔΔⵠ, ᐃⲆ.ⲆⵠⲆΔΔ = !1;
					var ⲆΔⲆᐃ = ᐃⲆ.ΔⲆᐃΔ;
					return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
						event: ⵠ[344],
						action: function() {
							ᐃⲆⵠ.play(ⲆΔⲆᐃ)
						}
					}), ⲆΔⲆᐃ
				}
				if (Δᐃᐃ && !ᐃⲆ.ⲆⵠⵠᐃⲆ) return ⵠⲆⵠ || setTimeout((function() {
					ᐃⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[344], ᐃⲆ.ΔⲆᐃΔ)
				}), ⵠⵠⲆⲆ), ᐃⲆ.ΔⲆᐃΔ;
				ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ᐃⵠⲆ.ΔⲆⲆⲆᐃᐃᐃ();
				var ⵠⲆⲆⲆΔ = Math.max(Δⵠⵠ, ᐃⲆ.ᐃⵠⲆΔᐃ > ΔΔⵠᐃ ? ᐃⲆ.ᐃⵠⲆΔᐃ : ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][0] / 1e3),
					ᐃⵠⵠⲆ = Math.max(0, (ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][ⲆⵠⲆ] + ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][1]) / 1e3 - ⵠⲆⲆⲆΔ),
					ⲆⲆⲆᐃ = 1e3 * ᐃⵠⵠⲆ / Math.abs(ᐃⲆ.ⲆΔⵠⵠᐃ);
				ᐃⲆ.ⲆⵠⵠᐃⲆ = !1, ᐃⲆ.ⲆⵠⲆΔΔ = !1, ᐃⲆ.ΔⲆⵠΔⲆ = ΔΔⵠ, ᐃⲆ.ᐃⵠⲆΔᐃ = ⵠⲆⲆⲆΔ, ᐃⲆ.ⲆᐃΔᐃⵠ = ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][ᐃⵠΔ] / 1e3, ᐃⲆ.ⲆᐃⵠᐃΔⲆΔ = (ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][0] + ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][1]) / 1e3, ᐃⲆ.ΔⵠⲆⲆᐃ = !(!ᐃⲆ.ΔⵠⲆⲆᐃ && !ᐃⲆⵠ.ΔⲆⵠΔⲆ[ΔΔⵠ][ᐃⲆⲆΔ]);
				var ᐃΔⵠⲆ = ᐃⲆ.ⲆΔᐃᐃ;
				if (ᐃⲆⵠ.ᐃⲆⲆᐃⵠ) {
					var ᐃⵠᐃ = function() {
							ᐃⲆⵠ.ⵠΔΔⲆᐃⵠΔⲆᐃ(ᐃⲆ);
							var ΔΔⵠ = ᐃⲆ.ⵠⵠⵠᐃΔ || ᐃⲆⵠ.ⵠⵠⵠᐃΔ ? Ⲇᐃⵠᐃ : ᐃⲆ.ᐃΔⵠⵠⲆ;
							ᐃΔⵠⲆ.gain.setValueAtTime(ΔΔⵠ, ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]]), ᐃⲆ.ΔΔⲆⲆⵠⲆⵠ = ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]], void ΔΔⵠᐃ === ᐃΔⵠⲆ.ⵠᐃΔᐃⵠ.start ? ᐃⲆ.ΔⵠⲆⲆᐃ ? ᐃΔⵠⲆ.ⵠᐃΔᐃⵠ.ᐃᐃⲆᐃΔⵠⵠⵠⲆ(0, ⵠⲆⲆⲆΔ, 86400) : ᐃΔⵠⲆ.ⵠᐃΔᐃⵠ.ᐃᐃⲆᐃΔⵠⵠⵠⲆ(0, ⵠⲆⲆⲆΔ, ᐃⵠⵠⲆ) : ᐃⲆ.ΔⵠⲆⲆᐃ ? ᐃΔⵠⲆ.ⵠᐃΔᐃⵠ.start(0, ⵠⲆⲆⲆΔ, 86400) : ᐃΔⵠⲆ.ⵠᐃΔᐃⵠ.start(0, ⵠⲆⲆⲆΔ, ᐃⵠⵠⲆ), ⲆⲆⲆᐃ !== 1 / ᐃΔⵠⵠ && (ᐃⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ[ᐃⲆ.ΔⲆᐃΔ] = setTimeout(ᐃⲆⵠ.ⲆⵠⲆΔΔ.bind(ᐃⲆⵠ, ᐃⲆ), ⲆⲆⲆᐃ)), ⵠⲆⵠ || setTimeout((function() {
								ᐃⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[344], ᐃⲆ.ΔⲆᐃΔ)
							}), 0)
						},
						ⵠΔᐃ = ⵠ[578] === ᐃⵠⲆ.state;
					if (ⵠ[446] === ᐃⲆⵠ.ᐃⲆᐃⵠΔ && ⵠΔᐃ) ᐃⵠᐃ();
					else {
						var ⵠⵠΔ = ⵠΔᐃ || ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ ? ⵠ[308] : "resume";
						ᐃⲆⵠ.once(ⵠⵠΔ, ᐃⵠᐃ, ⵠΔᐃ ? ᐃⲆ.ΔⲆᐃΔ : null), ᐃⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ᐃⲆ.ΔⲆᐃΔ)
					}
				} else {
					var Δᐃⵠᐃ = function() {
							ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[114]] = ⵠⲆⲆⲆΔ, ᐃΔⵠⲆ.muted = ᐃⲆ.ⵠⵠⵠᐃΔ || ᐃⲆⵠ.ⵠⵠⵠᐃΔ || ᐃⵠⲆ.ⵠⵠⵠᐃΔ || ᐃΔⵠⲆ.muted, ᐃΔⵠⲆ.volume = ᐃⲆ.ᐃΔⵠⵠⲆ * ᐃⵠⲆ.volume(), ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[373]] = ᐃⲆ.ⲆΔⵠⵠᐃ, ᐃΔⵠⲆ.play(), ⲆⲆⲆᐃ !== ⵠⲆⲆ / ⵠⵠⲆⲆ && (ᐃⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ[ᐃⲆ.ΔⲆᐃΔ] = setTimeout(ᐃⲆⵠ.ⲆⵠⲆΔΔ.bind(ᐃⲆⵠ, ᐃⲆ), ⲆⲆⲆᐃ)), ⵠⲆⵠ || ᐃⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[344], ᐃⲆ.ΔⲆᐃΔ)
						},
						ΔᐃⲆ = ⵠ[446] === ᐃⲆⵠ.ᐃⲆᐃⵠΔ && (ⲆⲆⲆⲆᐃᐃᐃ && ⲆⲆⲆⲆᐃᐃᐃ.ⲆⲆⲆᐃΔⲆⲆⲆⵠ || !ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[103]] && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.ⵠⲆᐃᐃΔⵠᐃⵠΔ);
					if (4 === ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[103]] || ΔᐃⲆ) Δᐃⵠᐃ();
					else {
						var ⵠⵠᐃΔⵠⵠⲆ = function() {
							Δᐃⵠᐃ(), ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[87]](ᐃⵠⲆ.ΔⵠⲆⲆΔΔⵠ, ⵠⵠᐃΔⵠⵠⲆ, !1)
						};
						ᐃΔⵠⲆ[ⲆⵠΔᐃᐃᐃΔ[93]](ᐃⵠⲆ.ΔⵠⲆⲆΔΔⵠ, ⵠⵠᐃΔⵠⵠⲆ, !1), ᐃⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ᐃⲆ.ΔⲆᐃΔ)
					}
				}
				return ᐃⲆ.ΔⲆᐃΔ
			},
			pause: function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				if (ⵠ[446] !== ᐃⵠⲆ.ᐃⲆᐃⵠΔ) return ᐃⵠⲆ.ᐃΔⵠⲆᐃ.push({
					event: "pause",
					action: function() {
						ᐃⵠⲆ.pause(ΔΔⵠ)
					}
				}), ᐃⵠⲆ;
				for (var ⵠⲆⵠ = ᐃⵠⲆ.ΔⵠΔⵠᐃ(ΔΔⵠ), ᐃⲆⵠ = 0; ᐃⲆⵠ < ⵠⲆⵠ.length; ᐃⲆⵠ++) {
					ᐃⵠⲆ.ⵠΔΔⵠⲆⲆΔ(ⵠⲆⵠ[ᐃⲆⵠ]);
					var Δᐃᐃ = ᐃⵠⲆ.ⵠΔΔⵠⲆ(ⵠⲆⵠ[ᐃⲆⵠ]);
					if (Δᐃᐃ && !Δᐃᐃ.ⲆⵠⵠᐃⲆ && (Δᐃᐃ.ᐃⵠⲆΔᐃ = ᐃⵠⲆ.ⵠΔΔᐃⵠⵠⲆ(ⵠⲆⵠ[ᐃⲆⵠ]), Δᐃᐃ.ΔⵠⲆᐃⵠΔᐃ = 0, Δᐃᐃ.ⲆⵠⵠᐃⲆ = !0, ᐃⵠⲆ.ΔᐃⵠΔⵠⲆⵠ(ⵠⲆⵠ[ᐃⲆⵠ]), Δᐃᐃ.ⲆΔᐃᐃ))
						if (ᐃⵠⲆ.ᐃⲆⲆᐃⵠ) {
							if (!Δᐃᐃ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ) continue;
							void ΔⵠⲆΔ === Δᐃᐃ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.stop ? Δᐃᐃ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.ΔⵠᐃⵠᐃⵠⵠΔᐃ(ⲆⵠⲆ) : Δᐃᐃ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.stop(ΔⵠⲆΔ), ᐃⵠⲆ.ᐃⵠⵠᐃΔᐃⲆ(Δᐃᐃ.ⲆΔᐃᐃ)
						} else isNaN(Δᐃᐃ.ⲆΔᐃᐃ.duration) && Δᐃᐃ.ⲆΔᐃᐃ.duration !== 1 / ⲆⵠⲆ || Δᐃᐃ.ⲆΔᐃᐃ.pause();
					arguments[ΔΔᐃᐃ] || ᐃⵠⲆ.ᐃΔΔᐃⵠ("pause", Δᐃᐃ ? Δᐃᐃ.ΔⲆᐃΔ : null)
				}
				return ᐃⵠⲆ
			},
			stop: function(ΔΔⵠ, ᐃⵠⲆ) {
				var ⵠⲆⵠ = this;
				if (ⵠ[446] !== ⵠⲆⵠ.ᐃⲆᐃⵠΔ) return ⵠⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: ⵠ[337],
					action: function() {
						ⵠⲆⵠ.stop(ΔΔⵠ)
					}
				}), ⵠⲆⵠ;
				for (var ᐃⲆⵠ = ⵠⲆⵠ.ΔⵠΔⵠᐃ(ΔΔⵠ), Δᐃᐃ = 0; Δᐃᐃ < ᐃⲆⵠ.length; Δᐃᐃ++) {
					ⵠⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ᐃⲆⵠ[Δᐃᐃ]);
					var ⵠⵠⵠ = ⵠⲆⵠ.ⵠΔΔⵠⲆ(ᐃⲆⵠ[Δᐃᐃ]);
					ⵠⵠⵠ && (ⵠⵠⵠ.ᐃⵠⲆΔᐃ = ⵠⵠⵠ.ⲆᐃΔᐃⵠ || ⵠᐃⲆᐃ, ⵠⵠⵠ.ΔⵠⲆᐃⵠΔᐃ = ΔⲆᐃⲆ, ⵠⵠⵠ.ⲆⵠⵠᐃⲆ = !0, ⵠⵠⵠ.ⲆⵠⲆΔΔ = !ᐃΔⵠⵠ, ⵠⲆⵠ.ΔᐃⵠΔⵠⲆⵠ(ᐃⲆⵠ[Δᐃᐃ]), ⵠⵠⵠ.ⲆΔᐃᐃ && (ⵠⲆⵠ.ᐃⲆⲆᐃⵠ ? ⵠⵠⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ && (void ⵠⵠᐃⵠ === ⵠⵠⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.stop ? ⵠⵠⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.ΔⵠᐃⵠᐃⵠⵠΔᐃ(ᐃΔⵠⵠ) : ⵠⵠⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.stop(0), ⵠⲆⵠ.ᐃⵠⵠᐃΔᐃⲆ(ⵠⵠⵠ.ⲆΔᐃᐃ)) : isNaN(ⵠⵠⵠ.ⲆΔᐃᐃ.duration) && ⵠⵠⵠ.ⲆΔᐃᐃ.duration !== ⵠⵠⲆΔ / 0 || (ⵠⵠⵠ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[114]] = ⵠⵠⵠ.ⲆᐃΔᐃⵠ || 0, ⵠⵠⵠ.ⲆΔᐃᐃ.pause())), ᐃⵠⲆ || ⵠⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[337], ⵠⵠⵠ.ΔⲆᐃΔ))
				}
				return ⵠⲆⵠ
			},
			"ⵠᐃⲆⵠΔⵠⲆ": function(ΔΔⵠ, ⵠⲆⵠ) {
				var ᐃⲆⵠ = this;
				if (ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: "mute",
					action: function() {
						ᐃⲆⵠ.ⵠᐃⲆⵠΔⵠⲆ(ΔΔⵠ, ⵠⲆⵠ)
					}
				}), ᐃⲆⵠ;
				if (void 0 === ⵠⲆⵠ) {
					if ("boolean" != typeof ΔΔⵠ) return ᐃⲆⵠ.ⵠⵠⵠᐃΔ;
					ᐃⲆⵠ.ⵠⵠⵠᐃΔ = ΔΔⵠ
				}
				for (var Δᐃᐃ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(ⵠⲆⵠ), ⵠⵠⵠ = 0; ⵠⵠⵠ < Δᐃᐃ.length; ⵠⵠⵠ++) {
					var ΔⲆⵠᐃ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(Δᐃᐃ[ⵠⵠⵠ]);
					ΔⲆⵠᐃ && (ΔⲆⵠᐃ.ⵠⵠⵠᐃΔ = ΔΔⵠ, ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ΔⲆⵠᐃ.ⲆΔᐃᐃ ? ΔⲆⵠᐃ.ⲆΔᐃᐃ.gain.setValueAtTime(ΔΔⵠ ? 0 : ΔⲆⵠᐃ.ᐃΔⵠⵠⲆ, ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]]) : ΔⲆⵠᐃ.ⲆΔᐃᐃ && (ΔⲆⵠᐃ.ⲆΔᐃᐃ.muted = !!ᐃⵠⲆ.ⵠⵠⵠᐃΔ || ΔΔⵠ), ᐃⲆⵠ.ᐃΔΔᐃⵠ("mute", ΔⲆⵠᐃ.ΔⲆᐃΔ))
				}
				return ᐃⲆⵠ
			},
			volume: function() {
				var ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ = this,
					Δᐃᐃ = arguments;
				if (ⵠⵠⲆⲆ === Δᐃᐃ.length) return ᐃⲆⵠ.ᐃΔⵠⵠⲆ;
				if (ᐃⵠⵠ === Δᐃᐃ.length || ⵠΔⵠᐃ === Δᐃᐃ.length && void 0 === Δᐃᐃ[ΔᐃᐃⲆ]) {
					ᐃⲆⵠ.ΔⵠΔⵠᐃ().indexOf(Δᐃᐃ[ⵠᐃⲆᐃ]) >= ᐃⵠΔ ? ⵠⲆⵠ = parseInt(Δᐃᐃ[0], 10) : ΔΔⵠ = parseFloat(Δᐃᐃ[0])
				} else Δᐃᐃ.length >= ᐃΔⵠᐃ && (ΔΔⵠ = parseFloat(Δᐃᐃ[0]), ⵠⲆⵠ = parseInt(Δᐃᐃ[1], ᐃΔᐃᐃⵠ));
				var ⵠⵠⵠ;
				if (!(void Δⵠⵠ !== ΔΔⵠ && ΔΔⵠ >= ⲆⲆⲆ && ΔΔⵠ <= 1)) return ⵠⵠⵠ = ⵠⲆⵠ ? ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⲆⵠ) : ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[0], ⵠⵠⵠ ? ⵠⵠⵠ.ᐃΔⵠⵠⲆ : 0;
				if (ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: ⵠ[138],
					action: function() {
						ᐃⲆⵠ.volume.apply(ᐃⲆⵠ, Δᐃᐃ)
					}
				}), ᐃⲆⵠ;
				void 0 === ⵠⲆⵠ && (ᐃⲆⵠ.ᐃΔⵠⵠⲆ = ΔΔⵠ), ⵠⲆⵠ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(ⵠⲆⵠ);
				for (var ΔⲆⵠᐃ = 0; ΔⲆⵠᐃ < ⵠⲆⵠ.length; ΔⲆⵠᐃ++)(ⵠⵠⵠ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⲆⵠ[ΔⲆⵠᐃ])) && (ⵠⵠⵠ.ᐃΔⵠⵠⲆ = ΔΔⵠ, Δᐃᐃ[ⵠΔⲆΔ] || ᐃⲆⵠ.ΔᐃⵠΔⵠⲆⵠ(ⵠⲆⵠ[ΔⲆⵠᐃ]), ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ⵠⵠⵠ.ⲆΔᐃᐃ && !ⵠⵠⵠ.ⵠⵠⵠᐃΔ ? ⵠⵠⵠ.ⲆΔᐃᐃ.gain.setValueAtTime(ΔΔⵠ, ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]]) : ⵠⵠⵠ.ⲆΔᐃᐃ && !ⵠⵠⵠ.ⵠⵠⵠᐃΔ && (ⵠⵠⵠ.ⲆΔᐃᐃ.volume = ΔΔⵠ * ᐃⵠⲆ.volume()), ᐃⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[138], ⵠⵠⵠ.ΔⲆᐃΔ));
				return ᐃⲆⵠ
			},
			fade: function(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ) {
				var ⵠⵠⵠ = this,
					ΔⲆⵠᐃ = Math.abs(ΔΔⵠ - ⵠⲆⵠ),
					ᐃⲆ = ΔΔⵠ > ⵠⲆⵠ ? "out" : "in",
					ⲆΔⲆᐃ = ΔⲆⵠᐃ / .01,
					ⵠⲆⲆⲆΔ = ⲆΔⲆᐃ > ΔᐃⲆΔ ? ᐃⲆⵠ / ⲆΔⲆᐃ : ᐃⲆⵠ;
				if (ⵠⲆⲆⲆΔ < 4 && (ⲆΔⲆᐃ = Math.ceil(ⲆΔⲆᐃ / (4 / ⵠⲆⲆⲆΔ)), ⵠⲆⲆⲆΔ = ⲆⵠΔΔⲆ), ⵠ[446] !== ⵠⵠⵠ.ᐃⲆᐃⵠΔ) return ⵠⵠⵠ.ᐃΔⵠⲆᐃ.push({
					event: ⵠ[148],
					action: function() {
						ⵠⵠⵠ.fade(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ)
					}
				}), ⵠⵠⵠ;
				ⵠⵠⵠ.volume(ΔΔⵠ, Δᐃᐃ);
				for (var ᐃⵠⵠⲆ = ⵠⵠⵠ.ΔⵠΔⵠᐃ(Δᐃᐃ), ⲆⲆⲆᐃ = ΔᐃⲆΔ; ⲆⲆⲆᐃ < ᐃⵠⵠⲆ.length; ⲆⲆⲆᐃ++) {
					var ᐃΔⵠⲆ = ⵠⵠⵠ.ⵠΔΔⵠⲆ(ᐃⵠⵠⲆ[ⲆⲆⲆᐃ]);
					if (ᐃΔⵠⲆ) {
						if (Δᐃᐃ || ⵠⵠⵠ.ΔᐃⵠΔⵠⲆⵠ(ᐃⵠⵠⲆ[ⲆⲆⲆᐃ]), ⵠⵠⵠ.ᐃⲆⲆᐃⵠ && !ᐃΔⵠⲆ.ⵠⵠⵠᐃΔ) {
							var ᐃⵠᐃ = ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]],
								ⵠΔᐃ = ᐃⵠᐃ + ᐃⲆⵠ / 1e3;
							ᐃΔⵠⲆ.ᐃΔⵠⵠⲆ = ΔΔⵠ, ᐃΔⵠⲆ.ⲆΔᐃᐃ.gain.setValueAtTime(ΔΔⵠ, ᐃⵠᐃ), ᐃΔⵠⲆ.ⲆΔᐃᐃ.gain.linearRampToValueAtTime(ⵠⲆⵠ, ⵠΔᐃ)
						}
						var ⵠⵠΔ = ΔΔⵠ;
						ᐃΔⵠⲆ.ⵠᐃⵠΔᐃⲆⵠ = setInterval(function(ᐃⵠⲆ, ᐃⲆⵠ) {
							ⲆΔⲆᐃ > 0 && (ⵠⵠΔ += "in" === ᐃⲆ ? .01 : -.01), ⵠⵠΔ = Math.max(ΔᐃⲆΔ, ⵠⵠΔ), ⵠⵠΔ = Math.min(1, ⵠⵠΔ), ⵠⵠΔ = Math.round(ⲆᐃᐃΔᐃⲆᐃ * ⵠⵠΔ) / ⲆΔᐃⲆⵠ, ⵠⵠⵠ.ᐃⲆⲆᐃⵠ ? (void 0 === Δᐃᐃ && (ⵠⵠⵠ.ᐃΔⵠⵠⲆ = ⵠⵠΔ), ᐃⲆⵠ.ᐃΔⵠⵠⲆ = ⵠⵠΔ) : ⵠⵠⵠ.volume(ⵠⵠΔ, ᐃⵠⲆ, !ᐃΔⵠⵠ), (ⵠⲆⵠ < ΔΔⵠ && ⵠⵠΔ <= ⵠⲆⵠ || ⵠⲆⵠ > ΔΔⵠ && ⵠⵠΔ >= ⵠⲆⵠ) && (clearInterval(ᐃⲆⵠ.ⵠᐃⵠΔᐃⲆⵠ), ᐃⲆⵠ.ⵠᐃⵠΔᐃⲆⵠ = null, ⵠⵠⵠ.volume(ⵠⲆⵠ, ᐃⵠⲆ), ⵠⵠⵠ.ᐃΔΔᐃⵠ(ⵠ[148], ᐃⵠⲆ))
						}.bind(ⵠⵠⵠ, ᐃⵠⵠⲆ[ⲆⲆⲆᐃ], ᐃΔⵠⲆ), ⵠⲆⲆⲆΔ)
					}
				}
				return ⵠⵠⵠ
			},
			"ΔᐃⵠΔⵠⲆⵠ": function(ΔΔⵠ) {
				var ⵠⲆⵠ = this,
					ᐃⲆⵠ = ⵠⲆⵠ.ⵠΔΔⵠⲆ(ΔΔⵠ);
				return ᐃⲆⵠ && ᐃⲆⵠ.ⵠᐃⵠΔᐃⲆⵠ && (ⵠⲆⵠ.ᐃⲆⲆᐃⵠ && ᐃⲆⵠ.ⲆΔᐃᐃ.gain.cancelScheduledValues(ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]]), clearInterval(ᐃⲆⵠ.ⵠᐃⵠΔᐃⲆⵠ), ᐃⲆⵠ.ⵠᐃⵠΔᐃⲆⵠ = null, ⵠⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[148], ΔΔⵠ)), ⵠⲆⵠ
			},
			loop: function() {
				var ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ, ᐃⲆⵠ = this,
					Δᐃᐃ = arguments;
				if (ΔΔⵠᐃ === Δᐃᐃ.length) return ᐃⲆⵠ.ΔⵠⲆⲆᐃ;
				if (ⲆᐃⲆⲆ === Δᐃᐃ.length) {
					if ("boolean" != typeof Δᐃᐃ[ΔΔⵠᐃ]) return !!(ⵠⲆⵠ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(parseInt(Δᐃᐃ[ⲆⵠⲆ], 10))) && ⵠⲆⵠ.ΔⵠⲆⲆᐃ;
					ΔΔⵠ = Δᐃᐃ[0], ᐃⲆⵠ.ΔⵠⲆⲆᐃ = ΔΔⵠ
				} else ⵠΔⵠᐃ === Δᐃᐃ.length && (ΔΔⵠ = Δᐃᐃ[0], ᐃⵠⲆ = parseInt(Δᐃᐃ[ΔΔᐃⵠ], 10));
				for (var ⵠⵠⵠ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(ᐃⵠⲆ), ΔⲆⵠᐃ = ΔΔᐃ; ΔⲆⵠᐃ < ⵠⵠⵠ.length; ΔⲆⵠᐃ++)(ⵠⲆⵠ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⵠⵠ[ΔⲆⵠᐃ])) && (ⵠⲆⵠ.ΔⵠⲆⲆᐃ = ΔΔⵠ, ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ⵠⲆⵠ.ⲆΔᐃᐃ && ⵠⲆⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ && (ⵠⲆⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loop = ΔΔⵠ, ΔΔⵠ && (ⵠⲆⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loopStart = ⵠⲆⵠ.ⲆᐃΔᐃⵠ || 0, ⵠⲆⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loopEnd = ⵠⲆⵠ.ⲆᐃⵠᐃΔⲆΔ)));
				return ᐃⲆⵠ
			},
			rate: function() {
				var ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ = this,
					Δᐃᐃ = arguments;
				if (ᐃⵠΔ === Δᐃᐃ.length) ⵠⲆⵠ = ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[0].ΔⲆᐃΔ;
				else if (ΔΔⵠΔⵠ === Δᐃᐃ.length) {
					var ⵠⵠⵠ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(),
						ΔⲆⵠᐃ = ⵠⵠⵠ.indexOf(Δᐃᐃ[0]);
					ΔⲆⵠᐃ >= Ⲇᐃⵠᐃ ? ⵠⲆⵠ = parseInt(Δᐃᐃ[0], 10) : ΔΔⵠ = parseFloat(Δᐃᐃ[0])
				} else ΔⵠΔΔ === Δᐃᐃ.length && (ΔΔⵠ = parseFloat(Δᐃᐃ[ΔΔᐃ]), ⵠⲆⵠ = parseInt(Δᐃᐃ[1], ΔⲆⵠΔᐃ));
				var ᐃⲆ;
				if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⲆ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⲆⵠ), ᐃⲆ ? ᐃⲆ.ⲆΔⵠⵠᐃ : ᐃⲆⵠ.ⲆΔⵠⵠᐃ;
				if (ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: "rate",
					action: function() {
						ᐃⲆⵠ.rate.apply(ᐃⲆⵠ, Δᐃᐃ)
					}
				}), ᐃⲆⵠ;
				void ΔΔⵠᐃ === ⵠⲆⵠ && (ᐃⲆⵠ.ⲆΔⵠⵠᐃ = ΔΔⵠ), ⵠⲆⵠ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(ⵠⲆⵠ);
				for (var ⲆΔⲆᐃ = ΔΔⵠᐃ; ⲆΔⲆᐃ < ⵠⲆⵠ.length; ⲆΔⲆᐃ++)
					if (ᐃⲆ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⲆⵠ[ⲆΔⲆᐃ])) {
						ᐃⲆ.ΔⵠⲆᐃⵠΔᐃ = ᐃⲆⵠ.ⵠΔΔᐃⵠⵠⲆ(ⵠⲆⵠ[ⲆΔⲆᐃ]), ᐃⲆ.ΔΔⲆⲆⵠⲆⵠ = ᐃⲆⵠ.ᐃⲆⲆᐃⵠ ? ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]] : ᐃⲆ.ΔΔⲆⲆⵠⲆⵠ, ᐃⲆ.ⲆΔⵠⵠᐃ = ΔΔⵠ, ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ᐃⲆ.ⲆΔᐃᐃ && ᐃⲆ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ ? ᐃⲆ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[373]].value = ΔΔⵠ : ᐃⲆ.ⲆΔᐃᐃ && (ᐃⲆ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[373]] = ΔΔⵠ);
						var ⵠⲆⲆⲆΔ = ᐃⲆⵠ.ⵠΔΔᐃⵠⵠⲆ(ⵠⲆⵠ[ⲆΔⲆᐃ]),
							ᐃⵠⵠⲆ = (ᐃⲆⵠ.ΔⲆⵠΔⲆ[ᐃⲆ.ΔⲆⵠΔⲆ][0] + ᐃⲆⵠ.ΔⲆⵠΔⲆ[ᐃⲆ.ΔⲆⵠΔⲆ][ᐃⲆⵠΔ]) / 1e3 - ⵠⲆⲆⲆΔ,
							ⲆⲆⲆᐃ = 1e3 * ᐃⵠⵠⲆ / Math.abs(ᐃⲆ.ⲆΔⵠⵠᐃ);
						!ᐃⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ[ⵠⲆⵠ[ⲆΔⲆᐃ]] && ᐃⲆ.ⲆⵠⵠᐃⲆ || (ᐃⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ⵠⲆⵠ[ⲆΔⲆᐃ]), ᐃⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ[ⵠⲆⵠ[ⲆΔⲆᐃ]] = setTimeout(ᐃⲆⵠ.ⲆⵠⲆΔΔ.bind(ᐃⲆⵠ, ᐃⲆ), ⲆⲆⲆᐃ)), ᐃⲆⵠ.ᐃΔΔᐃⵠ("rate", ᐃⲆ.ΔⲆᐃΔ)
					} return ᐃⲆⵠ
			},
			"ⵠΔΔᐃⵠⵠⲆ": function() {
				var ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ = this,
					Δᐃᐃ = arguments;
				if (ΔⲆⵠ === Δᐃᐃ.length) ⵠⲆⵠ = ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[ⵠⵠⲆⲆ].ΔⲆᐃΔ;
				else if (1 === Δᐃᐃ.length) {
					var ⵠⵠⵠ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(),
						ΔⲆⵠᐃ = ⵠⵠⵠ.indexOf(Δᐃᐃ[ᐃⵠΔ]);
					ΔⲆⵠᐃ >= 0 ? ⵠⲆⵠ = parseInt(Δᐃᐃ[ΔΔⲆᐃ], 10) : (ⵠⲆⵠ = ᐃⲆⵠ.ᐃᐃⲆⵠⵠ[0].ΔⲆᐃΔ, ΔΔⵠ = parseFloat(Δᐃᐃ[0]))
				} else ⵠᐃⵠΔ === Δᐃᐃ.length && (ΔΔⵠ = parseFloat(Δᐃᐃ[ⲆⵠⲆ]), ⵠⲆⵠ = parseInt(Δᐃᐃ[1], ⵠΔᐃΔⲆ));
				if (void ⲆΔᐃ === ⵠⲆⵠ) return ᐃⲆⵠ;
				if (ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
					event: "seek",
					action: function() {
						ᐃⲆⵠ.ⵠΔΔᐃⵠⵠⲆ.apply(ᐃⲆⵠ, Δᐃᐃ)
					}
				}), ᐃⲆⵠ;
				var ᐃⲆ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ⵠⲆⵠ);
				if (ᐃⲆ) {
					if (!(ⵠ[501] == typeof ΔΔⵠ && ΔΔⵠ >= 0)) {
						if (ᐃⲆⵠ.ᐃⲆⲆᐃⵠ) {
							var ⲆΔⲆᐃ = ᐃⲆⵠ.ᐃⲆⵠΔⵠⲆᐃ(ⵠⲆⵠ) ? ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]] - ᐃⲆ.ΔΔⲆⲆⵠⲆⵠ : 0,
								ⵠⲆⲆⲆΔ = ᐃⲆ.ΔⵠⲆᐃⵠΔᐃ ? ᐃⲆ.ΔⵠⲆᐃⵠΔᐃ - ᐃⲆ.ᐃⵠⲆΔᐃ : ⵠⵠᐃᐃΔ;
							return ᐃⲆ.ᐃⵠⲆΔᐃ + (ⵠⲆⲆⲆΔ + ⲆΔⲆᐃ * Math.abs(ᐃⲆ.ⲆΔⵠⵠᐃ))
						}
						return ᐃⲆ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[114]]
					}
					var ᐃⵠⵠⲆ = ᐃⲆⵠ.ᐃⲆⵠΔⵠⲆᐃ(ⵠⲆⵠ);
					ᐃⵠⵠⲆ && ᐃⲆⵠ.pause(ⵠⲆⵠ, !0), ᐃⲆ.ᐃⵠⲆΔᐃ = ΔΔⵠ, ᐃⲆ.ⲆⵠⲆΔΔ = !1, ᐃⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ⵠⲆⵠ), ᐃⵠⵠⲆ && ᐃⲆⵠ.play(ⵠⲆⵠ, !ΔΔᐃ), !ᐃⲆⵠ.ᐃⲆⲆᐃⵠ && ᐃⲆ.ⲆΔᐃᐃ && (ᐃⲆ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[114]] = ΔΔⵠ), ᐃⲆⵠ.ᐃΔΔᐃⵠ("seek", ⵠⲆⵠ)
				}
				return ᐃⲆⵠ
			},
			"ᐃⲆⵠΔⵠⲆᐃ": function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				if (ⵠ[501] == typeof ΔΔⵠ) {
					var ⵠⲆⵠ = ᐃⵠⲆ.ⵠΔΔⵠⲆ(ΔΔⵠ);
					return !!ⵠⲆⵠ && !ⵠⲆⵠ.ⲆⵠⵠᐃⲆ
				}
				for (var ᐃⲆⵠ = Δⵠⵠ; ᐃⲆⵠ < ᐃⵠⲆ.ᐃᐃⲆⵠⵠ.length; ᐃⲆⵠ++)
					if (!ᐃⵠⲆ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆⵠⵠᐃⲆ) return !0;
				return !ⲆΔᐃⲆ
			},
			duration: function(ΔΔⵠ) {
				var ᐃⵠⲆ = this,
					ⵠⲆⵠ = ᐃⵠⲆ.ΔΔⲆᐃⵠⵠᐃ,
					ᐃⲆⵠ = ᐃⵠⲆ.ⵠΔΔⵠⲆ(ΔΔⵠ);
				return ᐃⲆⵠ && (ⵠⲆⵠ = ᐃⵠⲆ.ΔⲆⵠΔⲆ[ᐃⲆⵠ.ΔⲆⵠΔⲆ][1] / 1e3), ⵠⲆⵠ
			},
			state: function() {
				return this.ᐃⲆᐃⵠΔ
			},
			"ⲆΔΔⲆⲆⲆⲆ": function() {
				for (var ΔΔⵠ = this, ⵠⲆⵠ = ΔΔⵠ.ᐃᐃⲆⵠⵠ, ᐃⲆⵠ = ⲆⵠⲆ; ᐃⲆⵠ < ⵠⲆⵠ.length; ᐃⲆⵠ++) {
					if (ⵠⲆⵠ[ᐃⲆⵠ].ⲆⵠⵠᐃⲆ || ΔΔⵠ.stop(ⵠⲆⵠ[ᐃⲆⵠ].ΔⲆᐃΔ), !ΔΔⵠ.ᐃⲆⲆᐃⵠ) {
						/MSIE |Trident\//.test(ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.userAgent) || (ⵠⲆⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"), ⵠⲆⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]]("error", ⵠⲆⵠ[ᐃⲆⵠ].ΔⲆⲆⲆᐃⲆΔ, !1), ⵠⲆⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ᐃⵠⲆ.ΔⵠⲆⲆΔΔⵠ, ⵠⲆⵠ[ᐃⲆⵠ].ᐃᐃⲆΔⲆΔⲆ, !ᐃΔⲆⵠ)
					}
					delete ⵠⲆⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ, ΔΔⵠ.ⵠΔΔⵠⲆⲆΔ(ⵠⲆⵠ[ᐃⲆⵠ].ΔⲆᐃΔ);
					var ⵠⵠⵠ = ᐃⵠⲆ.ⵠⵠⵠⵠⲆ.indexOf(ΔΔⵠ);
					ⵠⵠⵠ >= 0 && ᐃⵠⲆ.ⵠⵠⵠⵠⲆ.splice(ⵠⵠⵠ, ⲆⲆΔᐃ)
				}
				var ΔⲆⵠᐃ = !ⵠⵠᐃⵠ;
				for (ᐃⲆⵠ = 0; ᐃⲆⵠ < ᐃⵠⲆ.ⵠⵠⵠⵠⲆ.length; ᐃⲆⵠ++)
					if (ᐃⵠⲆ.ⵠⵠⵠⵠⲆ[ᐃⲆⵠ].ΔᐃΔⲆᐃ === ΔΔⵠ.ΔᐃΔⲆᐃ) {
						ΔⲆⵠᐃ = !ⵠⵠⲆ;
						break
					} return Δᐃᐃ && ΔⲆⵠᐃ && delete Δᐃᐃ[ΔΔⵠ.ΔᐃΔⲆᐃ], ᐃⵠⲆ.ᐃⲆⲆⵠΔᐃΔ = !1, ΔΔⵠ.ᐃⲆᐃⵠΔ = "unloaded", ΔΔⵠ.ᐃᐃⲆⵠⵠ = [], ΔΔⵠ = null, null
			},
			on: function(ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ, ᐃⲆⵠ) {
				var Δᐃᐃ = this,
					ⵠⵠⵠ = Δᐃᐃ[ⵠ[483] + ΔΔⵠ];
				return ⵠ[479] == typeof ᐃⵠⲆ && ⵠⵠⵠ.push(ᐃⲆⵠ ? {
					id: ⵠⲆⵠ,
					"ΔⵠⲆⵠⲆ": ᐃⵠⲆ,
					once: ᐃⲆⵠ
				} : {
					id: ⵠⲆⵠ,
					"ΔⵠⲆⵠⲆ": ᐃⵠⲆ
				}), Δᐃᐃ
			},
			"ⵠⲆΔΔΔⲆⲆⵠⵠ": function(ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ) {
				var ᐃⲆⵠ = this,
					Δᐃᐃ = ᐃⲆⵠ[ⵠ[483] + ΔΔⵠ],
					ⵠⵠⵠ = ΔΔⵠᐃ;
				if (ⵠ[501] == typeof ᐃⵠⲆ && (ⵠⲆⵠ = ᐃⵠⲆ, ᐃⵠⲆ = null), ᐃⵠⲆ || ⵠⲆⵠ)
					for (ⵠⵠⵠ = Ⲇᐃⵠᐃ; ⵠⵠⵠ < Δᐃᐃ.length; ⵠⵠⵠ++) {
						var ΔⲆⵠᐃ = ⵠⲆⵠ === Δᐃᐃ[ⵠⵠⵠ].id;
						if (ᐃⵠⲆ === Δᐃᐃ[ⵠⵠⵠ].ΔⵠⲆⵠⲆ && ΔⲆⵠᐃ || !ᐃⵠⲆ && ΔⲆⵠᐃ) {
							Δᐃᐃ.splice(ⵠⵠⵠ, 1);
							break
						}
					} else if (ΔΔⵠ) ᐃⲆⵠ[ⵠ[483] + ΔΔⵠ] = [];
					else {
						var ᐃⲆ = Object.keys(ᐃⲆⵠ);
						for (ⵠⵠⵠ = ΔⲆᐃⲆ; ⵠⵠⵠ < ᐃⲆ.length; ⵠⵠⵠ++) ΔΔⵠᐃ === ᐃⲆ[ⵠⵠⵠ].indexOf(ⵠ[483]) && Array.isArray(ᐃⲆⵠ[ᐃⲆ[ⵠⵠⵠ]]) && (ᐃⲆⵠ[ᐃⲆ[ⵠⵠⵠ]] = [])
					} return ᐃⲆⵠ
			},
			once: function(ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ) {
				var ᐃⲆⵠ = this;
				return ᐃⲆⵠ.on(ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ, ΔΔᐃⵠ), ᐃⲆⵠ
			},
			"ᐃΔΔᐃⵠ": function(ΔΔⵠ, ᐃⵠⲆ, ⵠⲆⵠ) {
				for (var ᐃⲆⵠ = this, Δᐃᐃ = ᐃⲆⵠ[ⵠ[483] + ΔΔⵠ], ⵠⵠⵠ = Δᐃᐃ.length - 1; ⵠⵠⵠ >= ⵠⵠᐃᐃΔ; ⵠⵠⵠ--) Δᐃᐃ[ⵠⵠⵠ].id && Δᐃᐃ[ⵠⵠⵠ].id !== ᐃⵠⲆ && ⵠ[308] !== ΔΔⵠ || (setTimeout(function(ΔΔⵠ) {
					ΔΔⵠ.call(this, ᐃⵠⲆ, ⵠⲆⵠ)
				}.bind(ᐃⲆⵠ, Δᐃᐃ[ⵠⵠⵠ].ΔⵠⲆⵠⲆ), 0), Δᐃᐃ[ⵠⵠⵠ].once && ᐃⲆⵠ.ⵠⲆΔΔΔⲆⲆⵠⵠ(ΔΔⵠ, Δᐃᐃ[ⵠⵠⵠ].ΔⵠⲆⵠⲆ, Δᐃᐃ[ⵠⵠⵠ].id));
				return ᐃⲆⵠ
			},
			"ⲆᐃᐃΔᐃⵠᐃ": function() {
				var ΔΔⵠ = this;
				if (ΔΔⵠ.ᐃΔⵠⲆᐃ.length > ΔΔᐃ) {
					var ᐃⵠⲆ = ΔΔⵠ.ᐃΔⵠⲆᐃ[0];
					ΔΔⵠ.once(ᐃⵠⲆ.event, (function() {
						ΔΔⵠ.ᐃΔⵠⲆᐃ.shift(), ΔΔⵠ.ⲆᐃᐃΔᐃⵠᐃ()
					})), ᐃⵠⲆ.action()
				}
				return ΔΔⵠ
			},
			"ⲆⵠⲆΔΔ": function(ΔΔⵠ) {
				var ⵠⲆⵠ = this,
					ᐃⲆⵠ = ΔΔⵠ.ΔⲆⵠΔⲆ;
				if (!ⵠⲆⵠ.ᐃⲆⲆᐃⵠ && ⵠⲆⵠ.ⲆΔᐃᐃ && !ⵠⲆⵠ.ⲆΔᐃᐃ.ended) return setTimeout(ⵠⲆⵠ.ⲆⵠⲆΔΔ.bind(ⵠⲆⵠ, ΔΔⵠ), 100), ⵠⲆⵠ;
				var Δᐃᐃ = !(!ΔΔⵠ.ΔⵠⲆⲆᐃ && !ⵠⲆⵠ.ΔⲆⵠΔⲆ[ᐃⲆⵠ][2]);
				if (ⵠⲆⵠ.ᐃΔΔᐃⵠ("end", ΔΔⵠ.ΔⲆᐃΔ), !ⵠⲆⵠ.ᐃⲆⲆᐃⵠ && Δᐃᐃ && ⵠⲆⵠ.stop(ΔΔⵠ.ΔⲆᐃΔ, !ΔΔᐃ).play(ΔΔⵠ.ΔⲆᐃΔ), ⵠⲆⵠ.ᐃⲆⲆᐃⵠ && Δᐃᐃ) {
					ⵠⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[344], ΔΔⵠ.ΔⲆᐃΔ), ΔΔⵠ.ᐃⵠⲆΔᐃ = ΔΔⵠ.ⲆᐃΔᐃⵠ || 0, ΔΔⵠ.ΔⵠⲆᐃⵠΔᐃ = ᐃⵠΔ, ΔΔⵠ.ΔΔⲆⲆⵠⲆⵠ = ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]];
					var ⵠⵠⵠ = 1e3 * (ΔΔⵠ.ⲆᐃⵠᐃΔⲆΔ - ΔΔⵠ.ⲆᐃΔᐃⵠ) / Math.abs(ΔΔⵠ.ⲆΔⵠⵠᐃ);
					ⵠⲆⵠ.ⵠⵠⵠᐃᐃⲆΔ[ΔΔⵠ.ΔⲆᐃΔ] = setTimeout(ⵠⲆⵠ.ⲆⵠⲆΔΔ.bind(ⵠⲆⵠ, ΔΔⵠ), ⵠⵠⵠ)
				}
				return ⵠⲆⵠ.ᐃⲆⲆᐃⵠ && !Δᐃᐃ && (ΔΔⵠ.ⲆⵠⵠᐃⲆ = !ΔΔᐃ, ΔΔⵠ.ⲆⵠⲆΔΔ = !0, ΔΔⵠ.ᐃⵠⲆΔᐃ = ΔΔⵠ.ⲆᐃΔᐃⵠ || 0, ΔΔⵠ.ΔⵠⲆᐃⵠΔᐃ = 0, ⵠⲆⵠ.ⵠΔΔⵠⲆⲆΔ(ΔΔⵠ.ΔⲆᐃΔ), ⵠⲆⵠ.ᐃⵠⵠᐃΔᐃⲆ(ΔΔⵠ.ⲆΔᐃᐃ), ᐃⵠⲆ.ᐃᐃⲆΔΔᐃΔ()), ⵠⲆⵠ.ᐃⲆⲆᐃⵠ || Δᐃᐃ || ⵠⲆⵠ.stop(ΔΔⵠ.ΔⲆᐃΔ), ⵠⲆⵠ
			},
			"ⵠΔΔⵠⲆⲆΔ": function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				return ᐃⵠⲆ.ⵠⵠⵠᐃᐃⲆΔ[ΔΔⵠ] && (clearTimeout(ᐃⵠⲆ.ⵠⵠⵠᐃᐃⲆΔ[ΔΔⵠ]), delete ᐃⵠⲆ.ⵠⵠⵠᐃᐃⲆΔ[ΔΔⵠ]), ᐃⵠⲆ
			},
			"ⵠΔΔⵠⲆ": function(ΔΔⵠ) {
				for (var ᐃⵠⲆ = this, ⵠⲆⵠ = ᐃΔⵠⵠ; ⵠⲆⵠ < ᐃⵠⲆ.ᐃᐃⲆⵠⵠ.length; ⵠⲆⵠ++)
					if (ΔΔⵠ === ᐃⵠⲆ.ᐃᐃⲆⵠⵠ[ⵠⲆⵠ].ΔⲆᐃΔ) return ᐃⵠⲆ.ᐃᐃⲆⵠⵠ[ⵠⲆⵠ];
				return null
			},
			"ⵠⲆᐃⲆᐃΔᐃⲆᐃ": function() {
				var ΔΔⵠ = this;
				ΔΔⵠ.ᐃⲆΔᐃⵠⵠⵠⲆᐃ();
				for (var ᐃⵠⲆ = ⲆⵠⲆ; ᐃⵠⲆ < ΔΔⵠ.ᐃᐃⲆⵠⵠ.length; ᐃⵠⲆ++)
					if (ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⵠⲆ].ⲆⵠⲆΔΔ) return ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⵠⲆ].reset();
				return new ᐃⲆⵠ(ΔΔⵠ)
			},
			"ᐃⲆΔᐃⵠⵠⵠⲆᐃ": function() {
				var ΔΔⵠ = this,
					ᐃⵠⲆ = ΔΔⵠ.ⵠⲆⲆᐃⲆⲆᐃΔⲆ,
					ⵠⲆⵠ = ᐃⵠΔ,
					ᐃⲆⵠ = 0;
				if (!(ΔΔⵠ.ᐃᐃⲆⵠⵠ.length < ᐃⵠⲆ)) {
					for (ᐃⲆⵠ = ⵠᐃⲆᐃ; ᐃⲆⵠ < ΔΔⵠ.ᐃᐃⲆⵠⵠ.length; ᐃⲆⵠ++) ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆⵠⲆΔΔ && ⵠⲆⵠ++;
					for (ᐃⲆⵠ = ΔΔⵠ.ᐃᐃⲆⵠⵠ.length - ᐃⲆⵠΔ; ᐃⲆⵠ >= 0; ᐃⲆⵠ--) {
						if (ⵠⲆⵠ <= ᐃⵠⲆ) return;
						ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆⵠⲆΔΔ && (ΔΔⵠ.ᐃⲆⲆᐃⵠ && ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ && ΔΔⵠ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ⲆΔᐃᐃ.disconnect(0), ΔΔⵠ.ᐃᐃⲆⵠⵠ.splice(ᐃⲆⵠ, ΔⲆᐃ), ⵠⲆⵠ--)
					}
				}
			},
			"ΔⵠΔⵠᐃ": function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				if (void ΔⵠⲆΔ === ΔΔⵠ) {
					for (var ⵠⲆⵠ = [], ᐃⲆⵠ = ᐃΔⵠⵠ; ᐃⲆⵠ < ᐃⵠⲆ.ᐃᐃⲆⵠⵠ.length; ᐃⲆⵠ++) ⵠⲆⵠ.push(ᐃⵠⲆ.ᐃᐃⲆⵠⵠ[ᐃⲆⵠ].ΔⲆᐃΔ);
					return ⵠⲆⵠ
				}
				return [ΔΔⵠ]
			},
			"ⵠΔΔⲆᐃⵠΔⲆᐃ": function(ΔΔⵠ) {
				var ⵠⲆⵠ = this;
				return ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ = ᐃⵠⲆ.Ⲇ.createBufferSource(), ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[258]] = Δᐃᐃ[ⵠⲆⵠ.ΔᐃΔⲆᐃ], ΔΔⵠ.ᐃⲆᐃΔⲆ ? ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.connect(ΔΔⵠ.ᐃⲆᐃΔⲆ) : ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.connect(ΔΔⵠ.ⲆΔᐃᐃ), ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loop = ΔΔⵠ.ΔⵠⲆⲆᐃ, ΔΔⵠ.ΔⵠⲆⲆᐃ && (ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loopStart = ΔΔⵠ.ⲆᐃΔᐃⵠ || 0, ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ.loopEnd = ΔΔⵠ.ⲆᐃⵠᐃΔⲆΔ), ΔΔⵠ.ⲆΔᐃᐃ.ⵠᐃΔᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[373]].value = ΔΔⵠ.ⲆΔⵠⵠᐃ, ⵠⲆⵠ
			},
			"ᐃⵠⵠᐃΔᐃⲆ": function(ΔΔⵠ) {
				var ᐃⵠⲆ = this;
				if (ᐃⵠⲆ.ΔᐃⵠⵠΔⵠⵠ) {
					ΔΔⵠ.ⵠᐃΔᐃⵠ.onended = null, ΔΔⵠ.ⵠᐃΔᐃⵠ.disconnect(Ⲇᐃⵠᐃ);
					try {
						ΔΔⵠ.ⵠᐃΔᐃⵠ[ⲆⵠΔᐃᐃᐃΔ[258]] = ᐃⵠⲆ.ΔᐃⵠⵠΔⵠⵠ
					} catch (ΔΔⵠ) {}
				}
				return ΔΔⵠ.ⵠᐃΔᐃⵠ = null, ᐃⵠⲆ
			}
		};
		var ᐃⲆⵠ = function(ΔΔⵠ) {
			this.ⲆⵠⵠΔⲆᐃⲆ = ΔΔⵠ, this.ⲆΔⲆΔΔ()
		};
		ᐃⲆⵠ.prototype = {
			"ⲆΔⲆΔΔ": function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ;
				return ΔΔⵠ.ⵠⵠⵠᐃΔ = ⵠⲆⵠ.ⵠⵠⵠᐃΔ, ΔΔⵠ.ΔⵠⲆⲆᐃ = ⵠⲆⵠ.ΔⵠⲆⲆᐃ, ΔΔⵠ.ᐃΔⵠⵠⲆ = ⵠⲆⵠ.ᐃΔⵠⵠⲆ, ΔΔⵠ.ⲆΔⵠⵠᐃ = ⵠⲆⵠ.ⲆΔⵠⵠᐃ, ΔΔⵠ.ᐃⵠⲆΔᐃ = 0, ΔΔⵠ.ⲆⵠⵠᐃⲆ = !ΔΔⲆᐃ, ΔΔⵠ.ⲆⵠⲆΔΔ = !ⵠⵠⲆⲆ, ΔΔⵠ.ΔⲆⵠΔⲆ = ⵠ[360], ΔΔⵠ.ΔⲆᐃΔ = ++ᐃⵠⲆ.ΔⵠⲆΔΔⵠⲆ, ⵠⲆⵠ.ᐃᐃⲆⵠⵠ.push(ΔΔⵠ), ΔΔⵠ.create(), ΔΔⵠ
			},
			create: function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ,
					ᐃⲆⵠ = ᐃⵠⲆ.ⵠⵠⵠᐃΔ || ΔΔⵠ.ⵠⵠⵠᐃΔ || ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ.ⵠⵠⵠᐃΔ ? 0 : ΔΔⵠ.ᐃΔⵠⵠⲆ;
				return ⵠⲆⵠ.ᐃⲆⲆᐃⵠ ? (ΔΔⵠ.ⲆΔᐃᐃ = void 0 === ᐃⵠⲆ.Ⲇ.createGain ? ᐃⵠⲆ.Ⲇ.ⵠΔⵠⲆᐃⲆⵠⲆᐃ() : ᐃⵠⲆ.Ⲇ.createGain(), ΔΔⵠ.ⲆΔᐃᐃ.gain.setValueAtTime(ᐃⲆⵠ, ᐃⵠⲆ.Ⲇ[ⲆⵠΔᐃᐃᐃΔ[114]]), ΔΔⵠ.ⲆΔᐃᐃ.paused = !ΔⵠⲆⲆ, ΔΔⵠ.ⲆΔᐃᐃ.connect(ᐃⵠⲆ.ⵠⵠⵠⵠⵠΔᐃ)) : (ΔΔⵠ.ⲆΔᐃᐃ = new Audio, ΔΔⵠ.ΔⲆⲆⲆᐃⲆΔ = ΔΔⵠ.ⲆⵠΔⲆᐃⵠΔΔⲆ.bind(ΔΔⵠ), ΔΔⵠ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]]("error", ΔΔⵠ.ΔⲆⲆⲆᐃⲆΔ, !1), ΔΔⵠ.ᐃᐃⲆΔⲆΔⲆ = ΔΔⵠ.ⲆⲆⵠⲆⵠΔΔᐃⵠ.bind(ΔΔⵠ), ΔΔⵠ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[93]](ᐃⵠⲆ.ΔⵠⲆⲆΔΔⵠ, ΔΔⵠ.ᐃᐃⲆΔⲆΔⲆ, !ⲆⲆΔᐃ), ΔΔⵠ.ⲆΔᐃᐃ.src = ⵠⲆⵠ.ΔᐃΔⲆᐃ, ΔΔⵠ.ⲆΔᐃᐃ.preload = ⵠ[187], ΔΔⵠ.ⲆΔᐃᐃ.volume = ᐃⲆⵠ * ᐃⵠⲆ.volume(), ΔΔⵠ.ⲆΔᐃᐃ.load()), ΔΔⵠ
			},
			reset: function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ;
				return ΔΔⵠ.ⵠⵠⵠᐃΔ = ⵠⲆⵠ.ⵠⵠⵠᐃΔ, ΔΔⵠ.ΔⵠⲆⲆᐃ = ⵠⲆⵠ.ΔⵠⲆⲆᐃ, ΔΔⵠ.ᐃΔⵠⵠⲆ = ⵠⲆⵠ.ᐃΔⵠⵠⲆ, ΔΔⵠ.ⲆΔⵠⵠᐃ = ⵠⲆⵠ.ⲆΔⵠⵠᐃ, ΔΔⵠ.ᐃⵠⲆΔᐃ = Δⵠⵠ, ΔΔⵠ.ΔⵠⲆᐃⵠΔᐃ = ⲆΔᐃ, ΔΔⵠ.ⲆⵠⵠᐃⲆ = !ΔⲆᐃⲆ, ΔΔⵠ.ⲆⵠⲆΔΔ = !0, ΔΔⵠ.ΔⲆⵠΔⲆ = ⵠ[360], ΔΔⵠ.ΔⲆᐃΔ = ++ᐃⵠⲆ.ΔⵠⲆΔΔⵠⲆ, ΔΔⵠ
			},
			"ⲆⵠΔⲆᐃⵠΔΔⲆ": function() {
				var ΔΔⵠ = this;
				ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ.ᐃΔΔᐃⵠ(ⵠ[327], ΔΔⵠ.ΔⲆᐃΔ, ΔΔⵠ.ⲆΔᐃᐃ.error ? ΔΔⵠ.ⲆΔᐃᐃ.error.code : 0), ΔΔⵠ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]]("error", ΔΔⵠ.ΔⲆⲆⲆᐃⲆΔ, !ⵠᐃΔᐃ)
			},
			"ⲆⲆⵠⲆⵠΔΔᐃⵠ": function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ;
				ⵠⲆⵠ.ΔΔⲆᐃⵠⵠᐃ = Math.ceil(10 * ΔΔⵠ.ⲆΔᐃᐃ.duration) / 10, ⲆΔᐃ === Object.keys(ⵠⲆⵠ.ΔⲆⵠΔⲆ).length && (ⵠⲆⵠ.ΔⲆⵠΔⲆ = {
					"ᐃⲆⲆⲆᐃⲆⵠᐃᐃ": [ΔⲆⵠ, 1e3 * ⵠⲆⵠ.ΔΔⲆᐃⵠⵠᐃ]
				}), ⵠ[446] !== ⵠⲆⵠ.ᐃⲆᐃⵠΔ && (ⵠⲆⵠ.ᐃⲆᐃⵠΔ = ⵠ[446], ⵠⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[308]), ⵠⲆⵠ.ⲆᐃᐃΔᐃⵠᐃ()), ΔΔⵠ.ⲆΔᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[87]](ᐃⵠⲆ.ΔⵠⲆⲆΔΔⵠ, ΔΔⵠ.ᐃᐃⲆΔⲆΔⲆ, !1)
			}
		};
		var Δᐃᐃ = {},
			ⵠⵠⵠ = function(ΔΔⵠ) {
				var ᐃⵠⲆ = ΔΔⵠ.ΔᐃΔⲆᐃ;
				if (Δᐃᐃ[ᐃⵠⲆ]) return ΔΔⵠ.ΔΔⲆᐃⵠⵠᐃ = Δᐃᐃ[ᐃⵠⲆ].duration, void ⲆΔⲆᐃ(ΔΔⵠ);
				if (/^data:[^;]+;base64,/.test(ᐃⵠⲆ)) {
					for (var ⵠⲆⵠ = atob(ᐃⵠⲆ.split(",")[ⲆⲆΔᐃ]), ᐃⲆⵠ = new Uint8Array(ⵠⲆⵠ.length), ⵠⵠⵠ = 0; ⵠⵠⵠ < ⵠⲆⵠ.length; ++ⵠⵠⵠ) ᐃⲆⵠ[ⵠⵠⵠ] = ⵠⲆⵠ.charCodeAt(ⵠⵠⵠ);
					ᐃⲆ(ᐃⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[258]], ΔΔⵠ)
				} else {
					var ⵠⲆⲆⲆΔ = new XMLHttpRequest;
					ⵠⲆⲆⲆΔ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ᐃⵠⲆ, !ΔⲆᐃⲆ), ⵠⲆⲆⲆΔ.responseType = "arraybuffer", ⵠⲆⲆⲆΔ.onload = function() {
						var ᐃⵠⲆ = (ⵠⲆⲆⲆΔ.status + "")[0];
						if ("0" !== ᐃⵠⲆ && "2" !== ᐃⵠⲆ && "3" !== ᐃⵠⲆ) return void ΔΔⵠ.ᐃΔΔᐃⵠ(ⵠ[327], null, "Failed loading audio file with status: " + ⵠⲆⲆⲆΔ.status + ".");
						ᐃⲆ(ⵠⲆⲆⲆΔ.response, ΔΔⵠ)
					}, ⵠⲆⲆⲆΔ.onerror = function() {
						ΔΔⵠ.ᐃⲆⲆᐃⵠ && (ΔΔⵠ.ⵠᐃⵠΔⲆᐃᐃ = !0, ΔΔⵠ.ᐃⲆⲆᐃⵠ = !ΔᐃᐃⲆ, ΔΔⵠ.ᐃᐃⲆⵠⵠ = [], delete Δᐃᐃ[ᐃⵠⲆ], ΔΔⵠ.load())
					}, ΔⲆⵠᐃ(ⵠⲆⲆⲆΔ)
				}
			},
			ΔⲆⵠᐃ = function(ΔΔⵠ) {
				try {
					ΔΔⵠ[ⲆⵠΔᐃᐃᐃΔ[226]]()
				} catch (ᐃⵠⲆ) {
					ΔΔⵠ.onerror()
				}
			},
			ᐃⲆ = function(ΔΔⵠ, ⵠⲆⵠ) {
				ᐃⵠⲆ.Ⲇ.decodeAudioData(ΔΔⵠ, (function(ΔΔⵠ) {
					ΔΔⵠ && ⵠⲆⵠ.ᐃᐃⲆⵠⵠ.length > ⲆΔᐃ && (Δᐃᐃ[ⵠⲆⵠ.ΔᐃΔⲆᐃ] = ΔΔⵠ, ⲆΔⲆᐃ(ⵠⲆⵠ, ΔΔⵠ))
				}), (function() {
					ⵠⲆⵠ.ᐃΔΔᐃⵠ(ⵠ[327], null, "Decoding audio data failed.")
				}))
			},
			ⲆΔⲆᐃ = function(ΔΔⵠ, ᐃⵠⲆ) {
				ᐃⵠⲆ && !ΔΔⵠ.ΔΔⲆᐃⵠⵠᐃ && (ΔΔⵠ.ΔΔⲆᐃⵠⵠᐃ = ᐃⵠⲆ.duration), ⵠⵠⲆⲆ === Object.keys(ΔΔⵠ.ΔⲆⵠΔⲆ).length && (ΔΔⵠ.ΔⲆⵠΔⲆ = {
					"ᐃⲆⲆⲆᐃⲆⵠᐃᐃ": [0, 1e3 * ΔΔⵠ.ΔΔⲆᐃⵠⵠᐃ]
				}), ⵠ[446] !== ΔΔⵠ.ᐃⲆᐃⵠΔ && (ΔΔⵠ.ᐃⲆᐃⵠΔ = ⵠ[446], ΔΔⵠ.ᐃΔΔᐃⵠ(ⵠ[308]), ΔΔⵠ.ⲆᐃᐃΔᐃⵠᐃ())
			},
			ⵠⲆⲆⲆΔ = function() {
				try {
					ⵠ[150] != typeof AudioContext ? ᐃⵠⲆ.Ⲇ = new AudioContext : ⵠ[150] != typeof ᐃᐃΔⵠⵠⵠᐃᐃᐃ ? ᐃⵠⲆ.Ⲇ = new ᐃᐃΔⵠⵠⵠᐃᐃᐃ : ᐃⵠⲆ.ᐃᐃᐃⵠᐃ = !ΔⲆᐃ
				} catch (ΔΔⵠ) {
					ᐃⵠⲆ.ᐃᐃᐃⵠᐃ = !1
				}
				var ΔΔⵠ = /iP(hone|od|ad)/.test(ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.platform),
					ⵠⲆⵠ = ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
					ᐃⲆⵠ = ⵠⲆⵠ ? parseInt(ⵠⲆⵠ[ᐃⲆⵠΔ], 10) : null;
				if (ΔΔⵠ && ᐃⲆⵠ && ᐃⲆⵠ < ⲆⲆⵠⲆⵠ) {
					var Δᐃᐃ = /safari/.test(ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.userAgent.toLowerCase());
					(ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.ⵠᐃᐃⵠΔⵠⲆᐃΔ && !Δᐃᐃ || ᐃⵠⲆ.ᐃⲆⲆⲆᐃ && !ᐃⵠⲆ.ᐃⲆⲆⲆᐃ.ⵠᐃᐃⵠΔⵠⲆᐃΔ && !Δᐃᐃ) && (ᐃⵠⲆ.ᐃᐃᐃⵠᐃ = !1)
				}
				ᐃⵠⲆ.ᐃᐃᐃⵠᐃ && (ᐃⵠⲆ.ⵠⵠⵠⵠⵠΔᐃ = void 0 === ᐃⵠⲆ.Ⲇ.createGain ? ᐃⵠⲆ.Ⲇ.ⵠΔⵠⲆᐃⲆⵠⲆᐃ() : ᐃⵠⲆ.Ⲇ.createGain(), ᐃⵠⲆ.ⵠⵠⵠⵠⵠΔᐃ.gain.value = ᐃⵠⲆ.ⵠⵠⵠᐃΔ ? 0 : 1, ᐃⵠⲆ.ⵠⵠⵠⵠⵠΔᐃ.connect(ᐃⵠⲆ.Ⲇ.destination)), ᐃⵠⲆ.ⲆᐃΔΔⵠⲆᐃ()
			};
		ⵠ[479] == typeof ᐃΔⲆⵠⵠⲆⲆ && ᐃΔⲆⵠⵠⲆⲆ.ⵠⵠΔⲆᐃⲆⲆ && ᐃΔⲆⵠⵠⲆⲆ([], (function() {
			return {
				Howler: ᐃⵠⲆ,
				Howl: ⵠⲆⵠ
			}
		})), ⵠ[150] != typeof ⵠᐃᐃΔΔᐃⲆ && (ⵠᐃᐃΔΔᐃⲆ.Howler = ᐃⵠⲆ, ⵠᐃᐃΔΔᐃⲆ.Howl = ⵠⲆⵠ), ⵠ[150] != typeof ⲆⲆⲆⲆᐃᐃᐃ ? (ⲆⲆⲆⲆᐃᐃᐃ.ᐃᐃⲆΔⵠⲆᐃ = ΔΔⵠ, ⲆⲆⲆⲆᐃᐃᐃ.Howler = ᐃⵠⲆ, ⲆⲆⲆⲆᐃᐃᐃ.Howl = ⵠⲆⵠ, ⲆⲆⲆⲆᐃᐃᐃ.ᐃΔΔⲆᐃⵠⲆ = ᐃⲆⵠ) : ⵠ[150] != typeof ΔⲆΔⲆΔⲆᐃ && (ΔⲆΔⲆΔⲆᐃ.ᐃᐃⲆΔⵠⲆᐃ = ΔΔⵠ, ΔⲆΔⲆΔⲆᐃ.Howler = ᐃⵠⲆ, ΔⲆΔⲆΔⲆᐃ.Howl = ⵠⲆⵠ, ΔⲆΔⲆΔⲆᐃ.ᐃΔΔⲆᐃⵠⲆ = ᐃⲆⵠ)
	}();
	! function() {
		;
		"use strict";
		ᐃᐃⲆΔⵠⲆᐃ.prototype.ⲆΔⲆⵠΔ = [ΔⵠⲆΔ, 0, 0], ᐃᐃⲆΔⵠⲆᐃ.prototype.ⵠᐃⵠΔⵠ = [0, 0, -1, Ⲇᐃⵠᐃ, 1, Δⵠⵠ], ᐃᐃⲆΔⵠⲆᐃ.prototype.ⵠⵠᐃⵠΔⲆⲆ = function(ᐃⵠⲆ) {
			var ΔΔⵠ = this;
			if (!ΔΔⵠ.Ⲇ || !ΔΔⵠ.Ⲇ.listener) return ΔΔⵠ;
			for (var ⵠⲆⵠ = ΔΔⵠ.ⵠⵠⵠⵠⲆ.length - 1; ⵠⲆⵠ >= Δⵠⵠ; ⵠⲆⵠ--) ΔΔⵠ.ⵠⵠⵠⵠⲆ[ⵠⲆⵠ].ⵠⵠᐃⵠΔⲆⲆ(ᐃⵠⲆ);
			return ΔΔⵠ
		}, ᐃᐃⲆΔⵠⲆᐃ.prototype.ᐃΔΔⵠ = function(ᐃⵠⲆ, ΔΔⵠ, ⵠⲆⵠ) {
			var ᐃⲆⵠ = this;
			return ᐃⲆⵠ.Ⲇ && ᐃⲆⵠ.Ⲇ.listener ? (ΔΔⵠ = ⵠ[501] != typeof ΔΔⵠ ? ᐃⲆⵠ.ⲆΔⲆⵠΔ[ΔΔⲆΔ] : ΔΔⵠ, ⵠⲆⵠ = ⵠ[501] != typeof ⵠⲆⵠ ? ᐃⲆⵠ.ⲆΔⲆⵠΔ[ᐃᐃΔⵠ] : ⵠⲆⵠ, ⵠ[501] != typeof ᐃⵠⲆ ? ᐃⲆⵠ.ⲆΔⲆⵠΔ : (ᐃⲆⵠ.ⲆΔⲆⵠΔ = [ᐃⵠⲆ, ΔΔⵠ, ⵠⲆⵠ], ᐃⲆⵠ.Ⲇ.listener.setPosition(ᐃⲆⵠ.ⲆΔⲆⵠΔ[0], ᐃⲆⵠ.ⲆΔⲆⵠΔ[ΔΔⲆΔ], ᐃⲆⵠ.ⲆΔⲆⵠΔ[ᐃΔⲆⲆⵠ]), ᐃⲆⵠ)) : ᐃⲆⵠ
		}, ᐃᐃⲆΔⵠⲆᐃ.prototype.orientation = function(ᐃⵠⲆ, ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ, ᐃⲆ) {
			var ⵠⵠⵠ = this;
			if (!ⵠⵠⵠ.Ⲇ || !ⵠⵠⵠ.Ⲇ.listener) return ⵠⵠⵠ;
			var ⵠΔᐃ = ⵠⵠⵠ.ⵠᐃⵠΔⵠ;
			return ΔΔⵠ = ⵠ[501] != typeof ΔΔⵠ ? ⵠΔᐃ[ΔΔᐃⵠ] : ΔΔⵠ, ⵠⲆⵠ = ⵠ[501] != typeof ⵠⲆⵠ ? ⵠΔᐃ[2] : ⵠⲆⵠ, ᐃⲆⵠ = ⵠ[501] != typeof ᐃⲆⵠ ? ⵠΔᐃ[3] : ᐃⲆⵠ, Δᐃᐃ = ⵠ[501] != typeof Δᐃᐃ ? ⵠΔᐃ[4] : Δᐃᐃ, ᐃⲆ = ⵠ[501] != typeof ᐃⲆ ? ⵠΔᐃ[ΔⲆⲆΔ] : ᐃⲆ, ⵠ[501] != typeof ᐃⵠⲆ ? ⵠΔᐃ : (ⵠⵠⵠ.ⵠᐃⵠΔⵠ = [ᐃⵠⲆ, ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ, ᐃⲆ], ⵠⵠⵠ.Ⲇ.listener.setOrientation(ᐃⵠⲆ, ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ, ᐃⲆ), ⵠⵠⵠ)
		}, Howl.prototype.ⲆΔⲆΔΔ = function(ᐃⵠⲆ) {
			return function(ΔΔⵠ) {
				var ⵠⲆⵠ = this;
				return ⵠⲆⵠ.ⵠᐃⵠΔⵠ = ΔΔⵠ.orientation || [1, ᐃⵠΔ, 0], ⵠⲆⵠ.ⵠᐃΔⵠᐃᐃΔ = ΔΔⵠ.ⵠⵠᐃⵠΔⲆⲆ || null, ⵠⲆⵠ.ⲆΔⲆⵠΔ = ΔΔⵠ.ᐃΔΔⵠ || null, ⵠⲆⵠ.ⵠᐃⵠⲆΔ = {
					coneInnerAngle: void ΔΔᐃ !== ΔΔⵠ.coneInnerAngle ? ΔΔⵠ.coneInnerAngle : 360,
					coneOuterAngle: void 0 !== ΔΔⵠ.coneOuterAngle ? ΔΔⵠ.coneOuterAngle : 360,
					coneOuterGain: void 0 !== ΔΔⵠ.coneOuterGain ? ΔΔⵠ.coneOuterGain : Δⵠⵠ,
					distanceModel: void 0 !== ΔΔⵠ.distanceModel ? ΔΔⵠ.distanceModel : "inverse",
					maxDistance: void ⵠⵠᐃᐃΔ !== ΔΔⵠ.maxDistance ? ΔΔⵠ.maxDistance : 1e4,
					panningModel: void Ⲇᐃⵠᐃ !== ΔΔⵠ.panningModel ? ΔΔⵠ.panningModel : "HRTF",
					refDistance: void 0 !== ΔΔⵠ.refDistance ? ΔΔⵠ.refDistance : 1,
					rolloffFactor: void ⲆΔᐃ !== ΔΔⵠ.rolloffFactor ? ΔΔⵠ.rolloffFactor : ᐃᐃΔᐃ
				}, ⵠⲆⵠ.ⵠⵠⵠΔΔᐃⵠⵠᐃ = ΔΔⵠ.ⵠⲆⵠΔⵠᐃΔⵠᐃ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⵠⲆⵠΔⵠᐃΔⵠᐃ
				}] : [], ⵠⲆⵠ.ᐃⲆᐃⲆⲆᐃᐃᐃᐃ = ΔΔⵠ.ⵠⲆⵠⲆΔΔⵠΔΔ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ⵠⲆⵠⲆΔΔⵠΔΔ
				}] : [], ⵠⲆⵠ.ⵠΔⲆᐃⲆⲆⵠⵠⲆ = ΔΔⵠ.ᐃΔᐃᐃΔΔᐃΔⵠ ? [{
					"ΔⵠⲆⵠⲆ": ΔΔⵠ.ᐃΔᐃᐃΔΔᐃΔⵠ
				}] : [], ᐃⵠⲆ.call(this, ΔΔⵠ)
			}
		}(Howl.prototype.ⲆΔⲆΔΔ), Howl.prototype.ⵠⵠᐃⵠΔⲆⲆ = function(ΔΔⵠ, ⵠⲆⵠ) {
			var ᐃⲆⵠ = this;
			if (!ᐃⲆⵠ.ᐃⲆⲆᐃⵠ) return ᐃⲆⵠ;
			if (ⵠ[446] !== ᐃⲆⵠ.ᐃⲆᐃⵠΔ) return ᐃⲆⵠ.ᐃΔⵠⲆᐃ.push({
				event: "stereo",
				action: function() {
					ᐃⲆⵠ.ⵠⵠᐃⵠΔⲆⲆ(ΔΔⵠ, ⵠⲆⵠ)
				}
			}), ᐃⲆⵠ;
			var Δᐃᐃ = void 0 === Howler.Ⲇ.createStereoPanner ? ⵠ[573] : "stereo";
			if (void 0 === ⵠⲆⵠ) {
				if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⲆⵠ.ⵠᐃΔⵠᐃᐃΔ;
				ᐃⲆⵠ.ⵠᐃΔⵠᐃᐃΔ = ΔΔⵠ, ᐃⲆⵠ.ⲆΔⲆⵠΔ = [ΔΔⵠ, ΔΔⲆᐃ, ΔⵠⲆⲆ]
			}
			for (var ᐃⲆ = ᐃⲆⵠ.ΔⵠΔⵠᐃ(ⵠⲆⵠ), ⵠⵠⵠ = ᐃΔⵠⵠ; ⵠⵠⵠ < ᐃⲆ.length; ⵠⵠⵠ++) {
				var ⵠΔᐃ = ᐃⲆⵠ.ⵠΔΔⵠⲆ(ᐃⲆ[ⵠⵠⵠ]);
				if (ⵠΔᐃ) {
					if (ⵠ[501] != typeof ΔΔⵠ) return ⵠΔᐃ.ⵠᐃΔⵠᐃᐃΔ;
					ⵠΔᐃ.ⵠᐃΔⵠᐃᐃΔ = ΔΔⵠ, ⵠΔᐃ.ⲆΔⲆⵠΔ = [ΔΔⵠ, ᐃⵠΔ, ΔΔⵠᐃ], ⵠΔᐃ.ⲆΔᐃᐃ && (ⵠΔᐃ.ⵠᐃⵠⲆΔ.panningModel = "equalpower", ⵠΔᐃ.ᐃⲆᐃΔⲆ && ⵠΔᐃ.ᐃⲆᐃΔⲆ.pan || ᐃⵠⲆ(ⵠΔᐃ, Δᐃᐃ), ⵠ[573] === Δᐃᐃ ? ⵠΔᐃ.ᐃⲆᐃΔⲆ.setPosition(ΔΔⵠ, ΔⲆᐃⲆ, ΔⲆᐃⲆ) : ⵠΔᐃ.ᐃⲆᐃΔⲆ.pan.value = ΔΔⵠ), ᐃⲆⵠ.ᐃΔΔᐃⵠ("stereo", ⵠΔᐃ.ΔⲆᐃΔ)
				}
			}
			return ᐃⲆⵠ
		}, Howl.prototype.ᐃΔΔⵠ = function(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ) {
			var ᐃⲆ = this;
			if (!ᐃⲆ.ᐃⲆⲆᐃⵠ) return ᐃⲆ;
			if (ⵠ[446] !== ᐃⲆ.ᐃⲆᐃⵠΔ) return ᐃⲆ.ᐃΔⵠⲆᐃ.push({
				event: ⵠ[395],
				action: function() {
					ᐃⲆ.ᐃΔΔⵠ(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ)
				}
			}), ᐃⲆ;
			if (ⵠⲆⵠ = ⵠ[501] != typeof ⵠⲆⵠ ? ⵠⵠᐃⵠ : ⵠⲆⵠ, ᐃⲆⵠ = ⵠ[501] != typeof ᐃⲆⵠ ? -.5 : ᐃⲆⵠ, void ΔᐃⲆΔ === Δᐃᐃ) {
				if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⲆ.ⲆΔⲆⵠΔ;
				ᐃⲆ.ⲆΔⲆⵠΔ = [ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ]
			}
			for (var ⵠⵠⵠ = ᐃⲆ.ΔⵠΔⵠᐃ(Δᐃᐃ), ⵠΔᐃ = 0; ⵠΔᐃ < ⵠⵠⵠ.length; ⵠΔᐃ++) {
				var ᐃⵠⵠⲆ = ᐃⲆ.ⵠΔΔⵠⲆ(ⵠⵠⵠ[ⵠΔᐃ]);
				if (ᐃⵠⵠⲆ) {
					if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⵠⵠⲆ.ⲆΔⲆⵠΔ;
					ᐃⵠⵠⲆ.ⲆΔⲆⵠΔ = [ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ], ᐃⵠⵠⲆ.ⲆΔᐃᐃ && (ᐃⵠⵠⲆ.ᐃⲆᐃΔⲆ && !ᐃⵠⵠⲆ.ᐃⲆᐃΔⲆ.pan || ᐃⵠⲆ(ᐃⵠⵠⲆ, ⵠ[573]), ᐃⵠⵠⲆ.ᐃⲆᐃΔⲆ.setPosition(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ)), ᐃⲆ.ᐃΔΔᐃⵠ(ⵠ[395], ᐃⵠⵠⲆ.ΔⲆᐃΔ)
				}
			}
			return ᐃⲆ
		}, Howl.prototype.orientation = function(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ) {
			var ᐃⲆ = this;
			if (!ᐃⲆ.ᐃⲆⲆᐃⵠ) return ᐃⲆ;
			if (ⵠ[446] !== ᐃⲆ.ᐃⲆᐃⵠΔ) return ᐃⲆ.ᐃΔⵠⲆᐃ.push({
				event: "orientation",
				action: function() {
					ᐃⲆ.orientation(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ)
				}
			}), ᐃⲆ;
			if (ⵠⲆⵠ = ⵠ[501] != typeof ⵠⲆⵠ ? ᐃⲆ.ⵠᐃⵠΔⵠ[1] : ⵠⲆⵠ, ᐃⲆⵠ = ⵠ[501] != typeof ᐃⲆⵠ ? ᐃⲆ.ⵠᐃⵠΔⵠ[ᐃᐃⲆΔ] : ᐃⲆⵠ, void ⲆⲆⲆ === Δᐃᐃ) {
				if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⲆ.ⵠᐃⵠΔⵠ;
				ᐃⲆ.ⵠᐃⵠΔⵠ = [ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ]
			}
			for (var ⵠⵠⵠ = ᐃⲆ.ΔⵠΔⵠᐃ(Δᐃᐃ), ⵠΔᐃ = ⲆⲆⲆ; ⵠΔᐃ < ⵠⵠⵠ.length; ⵠΔᐃ++) {
				var ᐃⵠⵠⲆ = ᐃⲆ.ⵠΔΔⵠⲆ(ⵠⵠⵠ[ⵠΔᐃ]);
				if (ᐃⵠⵠⲆ) {
					if (ⵠ[501] != typeof ΔΔⵠ) return ᐃⵠⵠⲆ.ⵠᐃⵠΔⵠ;
					ᐃⵠⵠⲆ.ⵠᐃⵠΔⵠ = [ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ], ᐃⵠⵠⲆ.ⲆΔᐃᐃ && (ᐃⵠⵠⲆ.ᐃⲆᐃΔⲆ || (ᐃⵠⵠⲆ.ⲆΔⲆⵠΔ || (ᐃⵠⵠⲆ.ⲆΔⲆⵠΔ = ᐃⲆ.ⲆΔⲆⵠΔ || [ⵠⲆⲆᐃ, 0, -.5]), ᐃⵠⲆ(ᐃⵠⵠⲆ, ⵠ[573])), ᐃⵠⵠⲆ.ᐃⲆᐃΔⲆ.setOrientation(ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ)), ᐃⲆ.ᐃΔΔᐃⵠ("orientation", ᐃⵠⵠⲆ.ΔⲆᐃΔ)
				}
			}
			return ᐃⲆ
		}, Howl.prototype.ⵠᐃⲆⲆᐃᐃΔⲆⵠ = function() {
			var ΔΔⵠ, ⵠⲆⵠ, ᐃⲆⵠ, Δᐃᐃ = this,
				ᐃⲆ = arguments;
			if (!Δᐃᐃ.ᐃⲆⲆᐃⵠ) return Δᐃᐃ;
			if (ΔⵠⲆⲆ === ᐃⲆ.length) return Δᐃᐃ.ⵠᐃⵠⲆΔ;
			if (ⲆΔⵠⲆ === ᐃⲆ.length) {
				if (ⵠ[382] != typeof ᐃⲆ[0]) return ᐃⲆⵠ = Δᐃᐃ.ⵠΔΔⵠⲆ(parseInt(ᐃⲆ[Ⲇᐃⵠᐃ], 10)), ᐃⲆⵠ ? ᐃⲆⵠ.ⵠᐃⵠⲆΔ : Δᐃᐃ.ⵠᐃⵠⲆΔ;
				ΔΔⵠ = ᐃⲆ[ⲆⵠⲆ], void 0 === ⵠⲆⵠ && (Δᐃᐃ.ⵠᐃⵠⲆΔ = {
					coneInnerAngle: void 0 !== ΔΔⵠ.coneInnerAngle ? ΔΔⵠ.coneInnerAngle : Δᐃᐃ.ΔⲆΔΔⲆⲆⵠΔΔ,
					coneOuterAngle: void 0 !== ΔΔⵠ.coneOuterAngle ? ΔΔⵠ.coneOuterAngle : Δᐃᐃ.ⲆᐃΔΔᐃΔΔΔΔ,
					coneOuterGain: void 0 !== ΔΔⵠ.coneOuterGain ? ΔΔⵠ.coneOuterGain : Δᐃᐃ.ᐃΔⵠΔⵠⵠⲆΔⵠ,
					distanceModel: void 0 !== ΔΔⵠ.distanceModel ? ΔΔⵠ.distanceModel : Δᐃᐃ.ᐃᐃᐃⵠⵠⲆΔᐃᐃ,
					maxDistance: void ΔΔⲆᐃ !== ΔΔⵠ.maxDistance ? ΔΔⵠ.maxDistance : Δᐃᐃ.ᐃΔⲆᐃⵠΔΔⵠΔ,
					panningModel: void ΔⲆⵠ !== ΔΔⵠ.panningModel ? ΔΔⵠ.panningModel : Δᐃᐃ.ⵠᐃⵠΔⲆΔᐃⲆᐃ,
					refDistance: void 0 !== ΔΔⵠ.refDistance ? ΔΔⵠ.refDistance : Δᐃᐃ.ⵠΔⵠⵠΔⲆⵠΔⵠ,
					rolloffFactor: void ᐃΔⵠⵠ !== ΔΔⵠ.rolloffFactor ? ΔΔⵠ.rolloffFactor : Δᐃᐃ.ΔΔΔᐃⲆᐃⲆⲆⲆ
				})
			} else 2 === ᐃⲆ.length && (ΔΔⵠ = ᐃⲆ[0], ⵠⲆⵠ = parseInt(ᐃⲆ[ΔΔⲆΔ], 10));
			for (var ⵠⵠⵠ = Δᐃᐃ.ΔⵠΔⵠᐃ(ⵠⲆⵠ), ⵠΔᐃ = ⵠⵠᐃᐃΔ; ⵠΔᐃ < ⵠⵠⵠ.length; ⵠΔᐃ++)
				if (ᐃⲆⵠ = Δᐃᐃ.ⵠΔΔⵠⲆ(ⵠⵠⵠ[ⵠΔᐃ])) {
					var ᐃⵠⵠⲆ = ᐃⲆⵠ.ⵠᐃⵠⲆΔ;
					ᐃⵠⵠⲆ = {
						coneInnerAngle: void ⵠⵠᐃⵠ !== ΔΔⵠ.coneInnerAngle ? ΔΔⵠ.coneInnerAngle : ᐃⵠⵠⲆ.coneInnerAngle,
						coneOuterAngle: void 0 !== ΔΔⵠ.coneOuterAngle ? ΔΔⵠ.coneOuterAngle : ᐃⵠⵠⲆ.coneOuterAngle,
						coneOuterGain: void 0 !== ΔΔⵠ.coneOuterGain ? ΔΔⵠ.coneOuterGain : ᐃⵠⵠⲆ.coneOuterGain,
						distanceModel: void ⵠⲆⲆᐃ !== ΔΔⵠ.distanceModel ? ΔΔⵠ.distanceModel : ᐃⵠⵠⲆ.distanceModel,
						maxDistance: void ΔΔⲆᐃ !== ΔΔⵠ.maxDistance ? ΔΔⵠ.maxDistance : ᐃⵠⵠⲆ.maxDistance,
						panningModel: void 0 !== ΔΔⵠ.panningModel ? ΔΔⵠ.panningModel : ᐃⵠⵠⲆ.panningModel,
						refDistance: void 0 !== ΔΔⵠ.refDistance ? ΔΔⵠ.refDistance : ᐃⵠⵠⲆ.refDistance,
						rolloffFactor: void ⲆⲆⲆ !== ΔΔⵠ.rolloffFactor ? ΔΔⵠ.rolloffFactor : ᐃⵠⵠⲆ.rolloffFactor
					};
					var ⲆⲆⲆᐃ = ᐃⲆⵠ.ᐃⲆᐃΔⲆ;
					ⲆⲆⲆᐃ ? (ⲆⲆⲆᐃ.coneInnerAngle = ᐃⵠⵠⲆ.coneInnerAngle, ⲆⲆⲆᐃ.coneOuterAngle = ᐃⵠⵠⲆ.coneOuterAngle, ⲆⲆⲆᐃ.coneOuterGain = ᐃⵠⵠⲆ.coneOuterGain, ⲆⲆⲆᐃ.distanceModel = ᐃⵠⵠⲆ.distanceModel, ⲆⲆⲆᐃ.maxDistance = ᐃⵠⵠⲆ.maxDistance, ⲆⲆⲆᐃ.panningModel = ᐃⵠⵠⲆ.panningModel, ⲆⲆⲆᐃ.refDistance = ᐃⵠⵠⲆ.refDistance, ⲆⲆⲆᐃ.rolloffFactor = ᐃⵠⵠⲆ.rolloffFactor) : (ᐃⲆⵠ.ⲆΔⲆⵠΔ || (ᐃⲆⵠ.ⲆΔⲆⵠΔ = Δᐃᐃ.ⲆΔⲆⵠΔ || [0, 0, -.5]), ᐃⵠⲆ(ᐃⲆⵠ, ⵠ[573]))
				} return Δᐃᐃ
		}, ᐃΔΔⲆᐃⵠⲆ.prototype.ⲆΔⲆΔΔ = function(ᐃⵠⲆ) {
			return function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ;
				ΔΔⵠ.ⵠᐃⵠΔⵠ = ⵠⲆⵠ.ⵠᐃⵠΔⵠ, ΔΔⵠ.ⵠᐃΔⵠᐃᐃΔ = ⵠⲆⵠ.ⵠᐃΔⵠᐃᐃΔ, ΔΔⵠ.ⲆΔⲆⵠΔ = ⵠⲆⵠ.ⲆΔⲆⵠΔ, ΔΔⵠ.ⵠᐃⵠⲆΔ = ⵠⲆⵠ.ⵠᐃⵠⲆΔ, ᐃⵠⲆ.call(this), ΔΔⵠ.ⵠᐃΔⵠᐃᐃΔ ? ⵠⲆⵠ.ⵠⵠᐃⵠΔⲆⲆ(ΔΔⵠ.ⵠᐃΔⵠᐃᐃΔ) : ΔΔⵠ.ⲆΔⲆⵠΔ && ⵠⲆⵠ.ᐃΔΔⵠ(ΔΔⵠ.ⲆΔⲆⵠΔ[ΔⲆᐃⲆ], ΔΔⵠ.ⲆΔⲆⵠΔ[ⵠⵠⲆ], ΔΔⵠ.ⲆΔⲆⵠΔ[ⲆⲆⵠΔ], ΔΔⵠ.ΔⲆᐃΔ)
			}
		}(ᐃΔΔⲆᐃⵠⲆ.prototype.ⲆΔⲆΔΔ), ᐃΔΔⲆᐃⵠⲆ.prototype.reset = function(ᐃⵠⲆ) {
			return function() {
				var ΔΔⵠ = this,
					ⵠⲆⵠ = ΔΔⵠ.ⲆⵠⵠΔⲆᐃⲆ;
				return ΔΔⵠ.ⵠᐃⵠΔⵠ = ⵠⲆⵠ.ⵠᐃⵠΔⵠ, ΔΔⵠ.ⲆΔⲆⵠΔ = ⵠⲆⵠ.ⲆΔⲆⵠΔ, ΔΔⵠ.ⵠᐃⵠⲆΔ = ⵠⲆⵠ.ⵠᐃⵠⲆΔ, ᐃⵠⲆ.call(this)
			}
		}(ᐃΔΔⲆᐃⵠⲆ.prototype.reset);
		var ᐃⵠⲆ = function(ᐃⵠⲆ, ΔΔⵠ) {
			ΔΔⵠ = ΔΔⵠ || ⵠ[573], ⵠ[573] === ΔΔⵠ ? (ᐃⵠⲆ.ᐃⲆᐃΔⲆ = Howler.Ⲇ.createPanner(), ᐃⵠⲆ.ᐃⲆᐃΔⲆ.coneInnerAngle = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.coneInnerAngle, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.coneOuterAngle = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.coneOuterAngle, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.coneOuterGain = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.coneOuterGain, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.distanceModel = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.distanceModel, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.maxDistance = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.maxDistance, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.panningModel = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.panningModel, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.refDistance = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.refDistance, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.rolloffFactor = ᐃⵠⲆ.ⵠᐃⵠⲆΔ.rolloffFactor, ᐃⵠⲆ.ᐃⲆᐃΔⲆ.setPosition(ᐃⵠⲆ.ⲆΔⲆⵠΔ[ⵠⵠⲆⲆ], ᐃⵠⲆ.ⲆΔⲆⵠΔ[1], ᐃⵠⲆ.ⲆΔⲆⵠΔ[2]), ᐃⵠⲆ.ᐃⲆᐃΔⲆ.setOrientation(ᐃⵠⲆ.ⵠᐃⵠΔⵠ[ⵠⵠⲆⲆ], ᐃⵠⲆ.ⵠᐃⵠΔⵠ[ⵠⵠⲆ], ᐃⵠⲆ.ⵠᐃⵠΔⵠ[2])) : (ᐃⵠⲆ.ᐃⲆᐃΔⲆ = Howler.Ⲇ.createStereoPanner(), ᐃⵠⲆ.ᐃⲆᐃΔⲆ.pan.value = ᐃⵠⲆ.ⵠᐃΔⵠᐃᐃΔ), ᐃⵠⲆ.ᐃⲆᐃΔⲆ.connect(ᐃⵠⲆ.ⲆΔᐃᐃ), ᐃⵠⲆ.ⲆⵠⵠᐃⲆ || ᐃⵠⲆ.ⲆⵠⵠΔⲆᐃⲆ.pause(ᐃⵠⲆ.ΔⲆᐃΔ, !0).play(ᐃⵠⲆ.ΔⲆᐃΔ)
		}
	}();

	function ⵠⲆᐃⵠⵠΔⲆ(ⲆⵠⲆⲆⲆ, ᐃᐃⵠΔᐃⲆᐃ, ⵠΔΔᐃⵠᐃΔ, ΔΔⵠΔΔᐃΔ, ⲆⵠΔᐃⵠᐃⵠᐃⲆ) {
		ⵠⵠⵠⵠΔⲆᐃ(ᐃΔΔΔⲆ, ⲆⵠⲆⲆⲆ, ᐃᐃⵠΔᐃⲆᐃ, ⵠΔΔᐃⵠᐃΔ, ΔΔⵠΔΔᐃΔ, ⲆⵠΔᐃⵠᐃⵠᐃⲆ);
		const ⲆⲆΔᐃⵠΔⵠ = ᐃⵠᐃᐃΔⲆⲆ(ⲆᐃΔⲆ[ⵠⵠⲆⲆ], ⲆᐃΔⲆ[ᐃᐃΔᐃ], ⲆᐃΔⲆ[ᐃⲆⵠᐃ], ⲆᐃΔⲆ[ⲆⵠⵠΔ]);
		const ΔⲆⲆⲆᐃⲆⲆⵠⵠ = ΔᐃᐃΔⲆⲆΔ(ⲆᐃΔⲆ[ᐃΔᐃΔ], ⲆᐃΔⲆ[0]);
		const ⵠⲆⲆⵠⵠΔΔΔⵠ = ~(8436 & ⲆⲆΔᐃⵠΔⵠ) & ⲆⲆΔᐃⵠΔⵠ | ~(ⲆⲆΔᐃⵠΔⵠ & 8436) & 8436;
		return ⵠⲆⲆⵠⵠΔΔΔⵠ
	}
	let ᐃΔΔΔⲆ = undefined;
	let ⲆᐃΔⲆ = ᐃᐃΔⲆⲆ;
	const ΔⲆΔΔᐃΔᐃ = ΔᐃⲆᐃⲆⲆᐃ;
	ΔᐃⲆᐃⲆⲆᐃ = function() {
		ᐃΔΔΔⲆ = ⲆⵠΔΔⵠⵠⵠ(ⵠᐃᐃΔⵠⲆⲆ(11));
		ⲆᐃΔⲆ = ⵠⵠΔΔⲆΔΔ(ᐃΔΔΔⲆ);
		if (ΔⲆΔΔᐃΔᐃ) ΔⲆΔΔᐃΔᐃ()
	};

	function Δᐃⵠⵠᐃᐃᐃ(ⵠᐃᐃᐃⲆⲆⲆ, ΔᐃⲆⵠᐃᐃᐃ, ⵠⲆᐃⲆᐃΔΔ, ᐃᐃΔᐃⲆᐃΔ) {
		const ᐃⵠᐃⵠΔΔΔ = ~(18834 & ⵠᐃᐃᐃⲆⲆⲆ) & (ⵠᐃᐃᐃⲆⲆⲆ | 18834);
		const ΔⲆΔΔΔΔⲆ = (2147483587 + 2147483629 * (30079 + ΔᐃⲆⵠᐃᐃᐃ)) % 2147483647;
		const ΔΔᐃⵠΔᐃᐃ = (1 + (38706 + ⵠⲆᐃⲆᐃΔΔ) * 22695477) % 4294967296;
		const ᐃΔᐃⵠᐃⵠⵠ = ~(63508 & ᐃᐃΔᐃⲆᐃΔ) & (ᐃᐃΔᐃⲆᐃΔ | 63508);
		const ΔᐃᐃΔᐃⲆᐃᐃᐃ = ⲆⵠⲆΔⵠᐃᐃ(ᐃⵠᐃⵠΔΔΔ, ΔⲆΔΔΔΔⲆ, ΔΔᐃⵠΔᐃᐃ, ᐃΔᐃⵠᐃⵠⵠ);
		const ΔᐃΔΔΔᐃⲆⵠⲆ = ⵠΔⵠⲆⵠⵠⵠ(ᐃⵠᐃⵠΔΔΔ, ΔⲆΔΔΔΔⲆ, ΔΔᐃⵠΔᐃᐃ, ᐃΔᐃⵠᐃⵠⵠ, ᐃⵠᐃⵠΔΔΔ);
		const ᐃⵠΔⲆΔⵠΔⲆΔ = 46463 ^ ΔᐃᐃΔᐃⲆᐃᐃᐃ;
		return ᐃⵠΔⲆΔⵠΔⲆΔ
	}

	function ΔᐃΔⲆᐃΔⵠ(ᐃᐃⵠΔΔᐃⲆ, ᐃΔΔⲆΔⲆⵠ) {
		const ⲆⵠⵠⲆΔⲆⵠ = (24 << (ᐃᐃⵠΔΔᐃⲆ >> 16 & 255)) + (ⲆⵠⲆⲆⲆΔⲆ << (ᐃᐃⵠΔΔᐃⲆ >> 24 & 255)) + (0 << (ᐃᐃⵠΔΔᐃⲆ >> ᐃΔⵠⵠ & 255)) + (ᐃΔᐃᐃⲆ << (ᐃᐃⵠΔΔᐃⲆ >> 8 & 255));
		const ⲆΔⲆΔΔⲆⲆ = (1103515245 * (28831 + ᐃΔΔⲆΔⲆⵠ) + 12345) % 2147483648;
		const ⵠΔⵠⲆᐃⲆⲆ = ᐃⵠⵠᐃᐃᐃΔ(ⲆⵠⵠⲆΔⲆⵠ, ⲆΔⲆΔΔⲆⲆ, ⲆⵠⵠⲆΔⲆⵠ, ⲆΔⲆΔΔⲆⲆ, ⲆⵠⵠⲆΔⲆⵠ);
		const ΔⲆⲆⵠΔⵠⲆ = ⲆᐃⲆⵠⵠⲆⵠ(ⲆΔⲆΔΔⲆⲆ, ⲆⵠⵠⲆΔⲆⵠ, ⲆΔⲆΔΔⲆⲆ, ⲆⵠⵠⲆΔⲆⵠ, ⲆΔⲆΔΔⲆⲆ, ⲆⵠⵠⲆΔⲆⵠ);
		const ΔᐃΔⵠⲆᐃⲆⲆⵠ = (24 << ((ⵠΔⵠⲆᐃⲆⲆ ^ ΔⲆⲆⵠΔⵠⲆ) >> 16 & 255)) + (8 << ((ⵠΔⵠⲆᐃⲆⲆ ^ ΔⲆⲆⵠΔⵠⲆ) >> 24 & 255)) + (16 << ((ⵠΔⵠⲆᐃⲆⲆ ^ ΔⲆⲆⵠΔⵠⲆ) >> 8 & 255)) + (0 << ((ⵠΔⵠⲆᐃⲆⲆ ^ ΔⲆⲆⵠΔⵠⲆ) >> 0 & 255));
		return ΔᐃΔⵠⲆᐃⲆⲆⵠ
	}
	var ⵠⲆΔᐃΔ = {
		"ΔⲆΔΔⲆⵠΔ": 1,
		"ΔΔᐃᐃⲆⵠⲆ": 1
	};
	var ᐃⲆᐃⲆ = {
		"ΔΔⲆⵠᐃΔΔ": 46e4,
		"ⵠⵠᐃⲆⲆⲆΔⲆⵠ": 12,
		"ⵠⵠⲆᐃᐃ": 3,
		"ΔΔᐃⵠᐃ": ⲆᐃⲆⲆ,
		"ᐃⲆΔ": ⵠⲆⵠⵠᐃ,
		"ⲆⲆⵠᐃⵠΔⵠⲆΔ": 12,
		"ⲆⵠΔⵠⵠΔⲆᐃΔ": 5e3,
		"ΔᐃΔΔΔΔΔᐃⵠ": 5e3,
		"ⲆⲆⵠΔⲆⵠⲆ": 3e3,
		"ᐃΔᐃⲆᐃ": 2,
		"ⲆⲆⵠΔΔⵠΔ": 12,
		"ⲆᐃᐃⵠⲆ": ⵠᐃᐃΔⲆ,
		"ⲆⵠᐃⵠᐃⲆᐃⲆᐃ": 5e3
	};
	var ᐃᐃⵠⲆⲆ = [];
	ᐃᐃⵠⲆⲆ[-ⵠⵠⲆ] = ᐃⲆᐃⲆ.ΔΔᐃⵠᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔᐃⵠⲆΔ] = ᐃⲆᐃⲆ.ΔΔᐃⵠᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃΔⲆΔⵠ] = ᐃⲆᐃⲆ.ΔΔᐃⵠᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⲆⲆΔⵠⲆΔⲆΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠᐃΔⵠᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⵠᐃⲆΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃᐃΔⵠᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃᐃΔᐃΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃΔΔᐃΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃΔᐃΔᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔⲆⲆΔⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	const ᐃΔⲆΔΔⲆᐃⲆⲆ = 1236263;
	const ᐃΔᐃⵠᐃᐃΔᐃᐃ = ᐃΔⲆΔΔⲆᐃⲆⲆ["ΔΔⲆᐃᐃⲆⵠⲆⲆ"];
	const ΔΔⲆⵠᐃⲆⲆΔⲆ = `const ⲆΔᐃᐃⲆⲆᐃΔⲆ = (typeof ⲆΔⲆⲆⵠ === "${ᐃΔᐃⵠᐃᐃΔᐃᐃ}") ? 1 : 0; return ⲆΔᐃᐃⲆⲆᐃΔⲆ;`;

	function ⲆΔⲆⲆⵠ() {
		ᐃΔᐃⵠᐃᐃΔᐃᐃ;
		ᐃΔⲆΔΔⲆᐃⲆⲆ();
		return ΔΔⲆⵠᐃⲆⲆΔⲆ
	}
	const ⲆΔᐃᐃⲆⲆᐃΔⲆ = 6795259;
	const ⵠⵠᐃᐃⵠⵠⵠ = new Function(ⲆΔⲆⲆⵠ + ΔΔⲆⵠᐃⲆⲆΔⲆ);
	const ⵠᐃⲆΔΔⲆⲆ = 12842250;
	if (ⵠⵠᐃᐃⵠⵠⵠ(ⲆΔᐃᐃⲆⲆᐃΔⲆ, ⵠᐃⲆΔΔⲆⲆ) === 1) {
		const ᐃΔⲆΔΔⲆᐃⲆⲆ = ⲆⲆⲆⲆᐃᐃᐃ.setInterval;
		const ᐃΔᐃⵠᐃᐃΔᐃᐃ = ᐃΔⲆΔΔⲆᐃⲆⲆ;
		const ΔΔⲆᐃᐃⲆⵠⲆⲆ = function() {
			ᐃΔⲆΔΔⲆᐃⲆⲆ(ΔΔⲆᐃᐃⲆⵠⲆⲆ, 7491);
			ᐃΔᐃⵠᐃᐃΔᐃᐃ(ΔΔⲆᐃᐃⲆⵠⲆⲆ, 7927)
		};
		ΔΔⲆᐃᐃⲆⵠⲆⲆ()
	}
	ᐃᐃⵠⲆⲆ[ⵠⲆ.Ⲇᐃⵠᐃⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	const ΔⲆᐃᐃⲆⲆΔ = 14505691;

	function ΔΔⲆⲆΔΔⵠ(ΔΔΔᐃⲆⵠⲆⲆᐃ) {
		return ⲆⲆⲆⲆᐃᐃᐃ.String.fromCharCode(ΔΔΔᐃⲆⵠⲆⲆᐃ)
	}

	function ΔᐃⵠⵠⲆ(ⲆⵠΔⲆΔⵠⵠ) {
		return ⲆⵠΔⲆΔⵠⵠ.map(ΔΔⲆⲆΔΔⵠ).join("")
	}
	const ⵠᐃΔΔᐃ = function() {
		const ⲆΔⵠΔⲆⲆⵠ = ΔᐃⵠⵠⲆ([916, 11398, 5123, 5123, 11398, 11398, 916]);
		const ΔⲆΔⵠⵠⵠᐃ = {
			"ⵠⵠΔⵠᐃΔⵠ": 684295,
			"ᐃᐃΔΔΔⲆⵠ": 16437983,
			"ΔⲆᐃᐃⲆⲆΔ": 7643242,
			"ⲆⵠᐃⲆᐃⲆⲆ": 7618943
		};
		if (ΔⲆΔⵠⵠⵠᐃ[ⲆΔⵠΔⲆⲆⵠ] !== ΔⲆΔⵠⵠⵠᐃ.ΔⲆᐃᐃⲆⲆΔ) {
			const ΔⲆᐃᐃⲆⲆΔ = Math.random;
			const ΔΔΔᐃⲆⵠⲆⲆᐃ = [];
			const ΔΔⲆⲆΔΔⵠ = function() {
				for (let ΔᐃⵠⵠⲆ = 0; ΔᐃⵠⵠⲆ < 8412; ΔᐃⵠⵠⲆ++) ΔΔΔᐃⲆⵠⲆⲆᐃ.push(ΔᐃⵠⵠⲆ);
				return ΔⲆᐃᐃⲆⲆΔ()
			};
			Math.random = ΔΔⲆⲆΔΔⵠ
		}
	};
	ⵠᐃΔΔᐃ();
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⲆⵠΔⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆᐃΔⲆⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⵠⲆΔΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆᐃΔΔⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔⲆᐃⲆᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔᐃΔⲆⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠᐃⵠΔᐃⲆΔⲆⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⲆⲆⲆᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔΔΔⲆⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆΔⵠᐃⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⲆΔᐃⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔⲆⲆᐃᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⵠΔᐃⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⲆⵠⲆᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆΔⵠⵠⵠⵠΔⲆΔ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ΔⲆΔⲆᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆⲆΔⲆⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆᐃΔⵠᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃΔⵠⵠᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⲆⲆⵠᐃⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠΔᐃⵠⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⲆΔΔⵠ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃᐃⲆΔᐃ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠΔΔᐃⲆ] = ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ⵠⵠⲆᐃᐃ] = ᐃⲆᐃⲆ.ⵠⵠⲆᐃᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃᐃⲆᐃⲆ] = ᐃⲆᐃⲆ.ⵠⵠⲆᐃᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⵠΔⲆΔ] = ᐃⲆᐃⲆ.ⵠⵠⲆᐃᐃ;
	ᐃᐃⵠⲆⲆ[ⵠⲆ.ᐃⵠⵠⵠᐃ] = ᐃⲆᐃⲆ.ⵠⵠⲆᐃᐃ;
	ΔᐃΔⵠ = [];
	ΔᐃΔⵠ[ⵠⵠⲆⲆ] = ΔᐃⲆΔ;
	ΔᐃΔⵠ[ΔΔᐃᐃ] = ΔΔᐃⵠ;
	ΔᐃΔⵠ[2] = ᐃⵠⵠ;
	ΔᐃΔⵠ[3] = 1;
	ΔᐃΔⵠ[4] = 0;
	ΔᐃΔⵠ[ᐃⵠⲆⲆΔ] = 0;
	ΔᐃΔⵠ[6] = 0;
	ΔᐃΔⵠ[7] = ⵠⲆⲆᐃ;
	ΔᐃΔⵠ[8] = ΔᐃⲆΔ;
	ΔᐃΔⵠ[ⲆⲆⵠⲆⵠ] = 0;
	ΔᐃΔⵠ[ⲆΔΔⵠⲆ] = ⵠᐃΔᐃ;
	ΔᐃΔⵠ[11] = 1;
	ΔᐃΔⵠ[12] = ⲆΔᐃⲆ;
	ΔᐃΔⵠ[ΔΔⲆΔΔ] = 1;
	ΔᐃΔⵠ[14] = 1;
	ΔᐃΔⵠ[ᐃᐃⵠᐃⲆᐃⵠ] = ⵠⵠⲆ;
	ΔᐃΔⵠ[16] = 0;
	ΔᐃΔⵠ[17] = 0;
	ΔᐃΔⵠ[18] = 0;
	ΔᐃΔⵠ[19] = ⵠᐃⲆᐃ;
	ΔᐃΔⵠ[ΔⲆΔᐃ] = 0;
	ΔᐃΔⵠ[21] = Δⵠⵠ;
	ΔᐃΔⵠ[22] = 0;
	ΔᐃΔⵠ[23] = 1;
	ΔᐃΔⵠ[24] = 1;
	ΔᐃΔⵠ[25] = ᐃⵠⵠ;
	ΔᐃΔⵠ[26] = ⲆᐃⲆⲆ;
	const ᐃⲆΔᐃΔⵠⲆᐃⲆ = 7414172;

	function ΔΔⵠᐃΔⵠᐃᐃᐃ(ᐃⵠᐃⵠⲆⵠⵠ) {
		const ᐃⲆΔᐃΔⵠⲆᐃⲆ = Math.random;
		const ⲆⵠΔⵠᐃⲆΔ = [];
		const ΔⲆΔⲆᐃΔⵠ = function() {
			for (let ΔⲆᐃΔⲆᐃⵠⵠΔ = 0; ΔⲆᐃΔⲆᐃⵠⵠΔ < 4914; ΔⲆᐃΔⲆᐃⵠⵠΔ++) ⲆⵠΔⵠᐃⲆΔ.push(ΔⲆᐃΔⲆᐃⵠⵠΔ);
			return ᐃⲆΔᐃΔⵠⲆᐃⲆ()
		};
		Math.random = ΔⲆΔⲆᐃΔⵠ
	}
	const ᐃⵠᐃⵠⲆⵠⵠ = ΔΔⵠᐃΔⵠᐃᐃᐃ + ";" + "let ᐃⵠᐃⵠⲆⵠⵠ = " + ΔΔⵠᐃΔⵠᐃᐃᐃ + ";";
	const ΔⲆΔⲆᐃΔⵠ = ᐃⵠᐃⵠⲆⵠⵠ + "let ⲆⵠΔⵠᐃⲆΔ = 4842589; try { ⲆⵠΔⵠᐃⲆΔ = ΔΔⵠᐃΔⵠᐃᐃᐃ; } catch (ΔⲆᐃΔⲆᐃⵠⵠΔ) { ᐃⵠᐃⵠⲆⵠⵠ (); };";
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[269]](ΔⲆΔⲆᐃΔⵠ, 0);
	ΔᐃΔⵠ[27] = ᐃΔⲆⵠ;
	ΔᐃΔⵠ[28] = ΔΔᐃᐃ;
	ΔᐃΔⵠ[29] = ᐃᐃΔᐃ;
	ΔᐃΔⵠ[30] = ᐃⲆⵠΔ;
	ΔᐃΔⵠ[31] = ΔΔⵠΔⵠ;
	ΔᐃΔⵠ[32] = 1;
	ΔᐃΔⵠ[33] = ΔΔᐃᐃ;
	ΔᐃΔⵠ[34] = ᐃᐃΔᐃ;
	ΔᐃΔⵠ[35] = 1;
	ΔᐃΔⵠ[36] = ⲆᐃⲆⲆ;
	ΔᐃΔⵠ[37] = ΔΔᐃᐃ;
	ΔᐃΔⵠ[38] = 1;
	ΔᐃΔⵠ[40] = 0;
	ΔᐃΔⵠ[41] = ⵠⵠᐃⵠ;
	ΔᐃΔⵠ[42] = ΔΔᐃ;
	ΔᐃΔⵠ[50] = 1;
	ΔᐃΔⵠ[51] = ΔΔᐃᐃ;
	ΔᐃΔⵠ[52] = 1;
	ΔᐃΔⵠ[55] = 0;
	ΔᐃΔⵠ[56] = ΔⲆᐃⲆ;
	ΔᐃΔⵠ[57] = 0;
	ΔᐃΔⵠ[58] = ΔⲆᐃⲆ;
	ⲆⲆᐃⲆᐃ = [];
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠⵠᐃΔᐃ] = 0;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆⵠΔⲆΔ] = ΔΔᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⵠⲆΔᐃ] = Ⲇᐃⵠᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠᐃᐃΔΔ] = ᐃΔⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆΔⵠᐃ] = -1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠᐃⲆΔⲆ] = -1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔᐃΔⵠΔ] = Ⲇᐃⵠᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔᐃⲆᐃ] = ΔΔⲆᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔᐃΔΔ] = 0;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠᐃⲆᐃᐃ] = 0;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠⵠⲆΔΔ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔⲆⵠⲆ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ᐃᐃᐃΔⲆ] = ΔᐃᐃⲆ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔΔⵠⵠⵠ] = ᐃΔⲆⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆΔΔᐃ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔΔⵠΔⲆ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ᐃⵠⵠⲆⲆ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.Δᐃⵠⵠᐃ] = 0;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔⵠΔⵠ] = ΔⲆᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.Δⵠⵠᐃⵠ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆᐃⵠⲆΔ] = ⵠⲆⲆ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆⵠΔⲆᐃ] = ΔᐃᐃⲆ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆⲆⵠᐃ] = ⵠⵠⲆΔ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔᐃΔⵠ] = Ⲇᐃⵠᐃ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔᐃᐃⲆⵠ] = ᐃⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆⲆⲆⵠⵠ] = ΔᐃⵠΔ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠⲆᐃΔᐃ] = ᐃⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆⵠᐃΔ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆᐃᐃⲆⵠ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆⵠⵠⲆⲆ] = Δⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆΔⵠⵠ] = ᐃΔⲆⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⵠⲆᐃᐃᐃ] = ᐃⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ᐃⲆⲆⵠⲆ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ᐃᐃΔΔΔ] = ᐃⲆⵠΔ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⵠᐃⲆⵠ] = ᐃⵠⵠ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆⲆᐃⲆⵠ] = ⵠⵠⲆ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ⲆΔⵠΔΔ] = 1;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔΔΔΔΔ] = ᐃⲆⵠΔ;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⵠΔⲆᐃ] = 0;
	ⲆⲆᐃⲆᐃ[ᐃⲆΔ.ΔⲆⲆΔⵠ] = ⲆⲆΔᐃ;
	var ⵠⲆᐃΔⵠ = {
		"ᐃΔΔⵠⲆᐃᐃ": {
			"ᐃᐃⵠΔᐃ": null,
			path: [ⵠ[221]],
			"Ⲇᐃ": {
				d0: [90086, 300, ΔΔᐃⵠⵠ],
				d2: [90684, 300, false],
				d1: [90391, 300, ᐃⵠⲆΔⵠ]
			},
			sample: {
				d0: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				d1: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				d2: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ
			}
		},
		"ⲆⵠⵠᐃⵠΔⵠ": {
			"ᐃᐃⵠΔᐃ": null,
			path: [ⵠ[221]],
			"Ⲇᐃ": {
				p1: [89549, 300, ΔⲆⵠᐃⵠ],
				p2: [89815, 300, ⲆΔⲆΔⵠ],
				p0: [89303, 300, ΔᐃⲆⵠⲆ]
			},
			sample: {
				p0: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				p1: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				p2: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ
			}
		},
		"ⵠΔⲆⵠᐃⲆⲆ": {
			"ᐃᐃⵠΔᐃ": null,
			path: [ⵠ[221]],
			"Ⲇᐃ": {
				w3: [89025, 300, Ⲇᐃⵠⵠᐃ],
				w1: [88473, 300, ⲆⵠᐃΔΔ],
				w0: [88195, 300, false],
				w2: [88751, 300, false]
			},
			sample: {
				w0: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				w1: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				w2: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				w3: ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ
			}
		},
		"ⲆΔⲆⵠΔᐃⲆ": {
			"ᐃᐃⵠΔᐃ": null,
			path: [ⵠ[221]],
			"Ⲇᐃ": {
				"ⲆⵠⵠⲆⲆᐃⲆ": [66961, 21223, ⲆⵠΔⵠΔ],
				"ⲆⲆᐃⲆⲆⵠⲆ": [19882, 8301, true],
				"ΔⲆᐃᐃⵠ": [28380, 1797, ⲆΔⲆΔᐃ],
				"ᐃᐃᐃᐃⲆ": [91431, 400, ⲆΔⲆΔⵠ],
				"ΔⵠⵠⵠⲆΔᐃ": [3100, 8800, ⵠΔΔΔⲆ],
				"ΔⵠⲆⲆᐃΔᐃ": [92249, 500, false],
				"ΔᐃⲆⲆⲆΔΔ": [66014, 925, true],
				"ⵠΔΔⵠΔΔΔ": [31658, 813, ΔᐃⲆΔⵠ],
				"ΔⲆΔᐃⲆΔⵠ": [66961, 21223, ⵠΔΔΔⲆ],
				"ᐃⵠΔⵠⲆⲆⵠ": [32604, 21890, true],
				"ⵠΔᐃⲆΔΔᐃᐃᐃ": [100, 2800, true],
				"ΔᐃΔΔⲆⲆᐃ": [54524, 11393, true],
				"ᐃΔᐃⵠⲆⵠⵠ": [30562, 655, ΔⲆΔΔⵠ],
				"ᐃᐃⵠⲆΔ": [12356, 6965, ⵠⲆᐃⲆᐃ],
				"ⲆΔᐃⵠⲆΔᐃ": [91022, 400, ΔᐃⲆⵠⲆ]
			},
			sample: {
				"ⵠΔᐃⲆΔΔᐃᐃᐃ": 1,
				"ΔⵠⵠⵠⲆΔᐃ": ΔΔⵠΔⵠ,
				"ⲆⲆᐃⲆⲆⵠⲆ": 1,
				"ᐃⵠΔⵠⲆⲆⵠ": ΔΔⵠΔⵠ,
				"ΔᐃΔΔⲆⲆᐃ": 1,
				"ΔⲆΔᐃⲆΔⵠ": ⵠⲆⲆ,
				"ⲆⵠⵠⲆⲆᐃⲆ": ᐃΔⲆⵠ,
				"ᐃᐃⵠⲆΔ": ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				"ΔⲆᐃᐃⵠ": ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				"ᐃΔᐃⵠⲆⵠⵠ": ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				"ⵠΔΔⵠΔΔΔ": ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				"ΔᐃⲆⲆⲆΔΔ": ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ,
				"ⲆΔᐃⵠⲆΔᐃ": ᐃⲆᐃⲆ.ᐃⲆΔ,
				"ᐃᐃᐃᐃⲆ": ᐃⲆᐃⲆ.ᐃⲆΔ,
				"ΔⵠⲆⲆᐃΔᐃ": ᐃⲆᐃⲆ.ᐃⲆΔ
			}
		}
	};
	var ᐃⲆⵠᐃᐃⲆᐃ = function(ᐃᐃΔⲆΔ, ⲆΔⵠ, ⲆⲆΔ, ⲆⲆΔᐃⲆ, ΔᐃΔⵠᐃᐃᐃ, ᐃᐃΔⲆᐃⲆⵠ, ΔⲆⵠΔ, ⲆᐃⵠΔⲆⲆⵠ, ⵠⲆᐃⵠΔ, ⲆⲆⵠⵠⵠΔΔᐃⵠ, ⵠⵠᐃᐃΔⵠⲆ) {
		this.r = 1;
		this.ᐃᐃΔⲆΔ = ᐃᐃΔⲆΔ;
		this.ⵠΔⵠⵠΔᐃⵠ = ᐃᐃΔⲆΔ;
		this.ⲆΔⵠ = ⲆΔⵠ;
		this.ⲆⲆΔ = ⲆⲆΔ;
		this.fade = ⲆⲆΔᐃⲆ;
		this.ΔᐃΔⵠᐃᐃᐃ = ΔᐃΔⵠᐃᐃᐃ;
		this.ᐃᐃΔⲆᐃⲆⵠ = ᐃᐃΔⲆᐃⲆⵠ;
		this.ΔⲆⵠΔ = ΔⲆⵠΔ;
		this.ⲆᐃⵠΔⲆⲆⵠ = ⲆᐃⵠΔⲆⲆⵠ;
		this.source = ⵠⲆᐃⵠΔ;
		this.source.ᐃⲆᐃΔⵠⵠΔ = ⵠⲆᐃⵠΔ.x + ⵠⲆᐃⵠΔ.w;
		this.source.ⵠⵠⲆⲆⵠ = ⵠⲆᐃⵠΔ.y + ⵠⲆᐃⵠΔ.ΔᐃⲆ;
		this.ᐃⵠⵠΔⵠⵠΔΔⲆ = ⲆⲆⵠⵠⵠΔΔᐃⵠ;
		this.ᐃⲆⵠᐃᐃⵠⲆ = ⵠⵠᐃᐃΔⵠⲆ;
		this.ⵠⵠᐃᐃΔⵠⲆ = ⵠⵠᐃⵠ;
		this.ⲆΔⵠΔᐃⵠⵠ = {
			"Δᐃⵠᐃ": 5,
			d: ⲆᐃΔΔΔ
		};
		this.ΔᐃⵠⲆⲆ = function() {
			this.ᐃᐃΔⲆΔ -= ᐃᐃΔⲆ;
			if (this.ᐃᐃΔⲆΔ < ⲆⵠⲆ) {
				this.ᐃᐃΔⲆΔ = this.ⵠΔⵠⵠΔᐃⵠ;
				var ᐃⵠⲆ = ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ[ⵠ[157]](this.ⲆΔⵠ);
				var ⲆΔⲆᐃ = ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ[ⵠ[157]](this.ⲆⲆΔ);
				if (ᐃⵠⲆ && !ⲆΔⲆᐃ) {
					var ⵠⵠΔ = ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ * this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆΔⵠ);
					var Δᐃᐃ = (this.ᐃᐃΔⲆᐃⲆⵠ * Math.random() + this.ΔᐃΔⵠᐃᐃᐃ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
					this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, Δᐃᐃ, this.fade, this.ⲆΔⵠ)
				} else if (!ᐃⵠⲆ && ⲆΔⲆᐃ) {
					var ⵠⵠΔ = this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆⲆΔ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
					var Δᐃᐃ = (Math.random() * this.ᐃᐃΔⲆᐃⲆⵠ + this.ΔᐃΔⵠᐃᐃᐃ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
					this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, Δᐃᐃ, this.fade, this.ⲆⲆΔ)
				}
			}
		};
		this.transition = function() {
			this.ᐃᐃΔⲆΔ = this.ⵠΔⵠⵠΔᐃⵠ;
			this.ⲆΔⵠΔᐃⵠⵠ.d = this.ⲆΔⵠΔᐃⵠⵠ.Δᐃⵠᐃ;
			if (ⲆΔΔ.time) {
				this.ΔⲆⵠΔ[ⵠ[148]](0, this.ΔᐃΔⵠᐃᐃᐃ * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆΔⵠ);
				this.ΔⲆⵠΔ[ⵠ[344]](this.ⲆΔⵠ);
				if (this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆⲆΔ)) {
					var ⵠⵠΔ = this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆⲆΔ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
					this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, 0, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆⲆΔ)
				}
			} else {
				this.ΔⲆⵠΔ[ⵠ[148]](ΔΔⵠᐃ, this.ΔᐃΔⵠᐃᐃᐃ * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆⲆΔ);
				this.ΔⲆⵠΔ[ⵠ[344]](this.ⲆⲆΔ);
				if (this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆΔⵠ)) {
					var ⵠⵠΔ = this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆΔⵠ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
					this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, ΔΔⲆᐃ, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆΔⵠ)
				}
			}
		};
		this.check = function(ⵠΔᐃ) {
			if (this.ⵠⵠᐃᐃΔⵠⲆ) {
				if (!Ⲇᐃⵠ.ᐃⲆⵠᐃᐃⵠⲆ(ⵠΔᐃ, this.ᐃⵠⵠΔⵠⵠΔΔⲆ)) {
					this.ⵠⵠᐃᐃΔⵠⲆ = ΔΔⲆᐃ;
					if (this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆΔⵠ)) {
						var ⵠⵠΔ = this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆΔⵠ) * ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ;
						this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, 0, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆΔⵠ)
					}
					if (this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆⲆΔ)) {
						var ⵠⵠΔ = ⵠⲆΔᐃΔ.ΔΔᐃᐃⲆⵠⲆ * this.ΔⲆⵠΔ[ⵠ[138]](this.ⲆⲆΔ);
						this.ΔⲆⵠΔ[ⵠ[148]](ⵠⵠΔ, 0, this.ⲆᐃⵠΔⲆⲆⵠ, this.ⲆⲆΔ)
					}
				} else if (!ⵠΔᐃΔ.transition && ᐃⲆᐃⲆ.ΔΔⲆⵠᐃΔΔ > ⲆΔΔ.ΔᐃⲆᐃᐃ.now) {
					if (ⲆΔΔ.time) {
						if (!this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆΔⵠ)) {
							this.ⲆΔⵠΔᐃⵠⵠ.d -= ᐃᐃΔⲆ;
							ΔΔⲆᐃ > this.ⲆΔⵠΔᐃⵠⵠ.d && this.transition()
						}
					} else {
						if (!this.ΔⲆⵠΔ[ⵠ[157]](this.ⲆⲆΔ)) {
							this.ⲆΔⵠΔᐃⵠⵠ.d -= ᐃᐃΔⲆ;
							this.ⲆΔⵠΔᐃⵠⵠ.d < ᐃΔⵠⵠ && this.transition()
						}
					}
				}
			} else {
				if (Ⲇᐃⵠ.ᐃⲆⵠᐃᐃⵠⲆ(ⵠΔᐃ, this.ᐃⲆⵠᐃᐃⵠⲆ)) {
					this.ⵠⵠᐃᐃΔⵠⲆ = 1;
					if (!ⵠΔᐃΔ.transition && ᐃⲆᐃⲆ.ΔΔⲆⵠᐃΔΔ > ⲆΔΔ.ΔᐃⲆᐃᐃ.now) this.transition()
				}
			}
		};
		this.ⵠᐃⵠ = function(ⵠΔᐃ, ⲆⲆⲆⲆΔ) {
			var ᐃᐃΔ, ᐃⲆᐃ;
			if (this.source.x > ⵠΔᐃ.x) ᐃᐃΔ = ⵠΔᐃΔ.ᐃⲆⲆⲆⲆⵠⲆ(this.source.x);
			else this.source.ᐃⲆᐃΔⵠⵠΔ < ⵠΔᐃ.x ? ᐃᐃΔ = ⵠΔᐃΔ.ᐃⲆⲆⲆⲆⵠⲆ(this.source.ᐃⲆᐃΔⵠⵠΔ) : ᐃᐃΔ = ⲆⲆⲆⲆΔ.x;
			if (this.source.y > ⵠΔᐃ.y) ᐃⲆᐃ = ⵠΔᐃΔ.ⵠⲆⲆᐃΔᐃᐃ(this.source.y);
			else ⵠΔᐃ.y > this.source.ⵠⵠⲆⲆⵠ ? ᐃⲆᐃ = ⵠΔᐃΔ.ⵠⲆⲆᐃΔᐃᐃ(this.source.ⵠⵠⲆⲆⵠ) : ᐃⲆᐃ = ⲆⲆⲆⲆΔ.y;
			this.ΔⲆⵠΔ[ⵠ[395]](ᐃᐃΔ, ᐃⲆᐃ, -.5, this.ⲆΔⵠ);
			this.ΔⲆⵠΔ[ⵠ[395]](ᐃᐃΔ, ᐃⲆᐃ, -.5, this.ⲆⲆΔ)
		}
	};
	ⲆⲆⲆᐃᐃ = {
		"ⵠᐃΔᐃᐃΔⵠ": 100,
		"ᐃΔᐃΔᐃⲆⵠ": ⲆⵠΔΔⲆ,
		"ⵠⲆΔΔΔᐃΔ": ᐃᐃⵠᐃ,
		"ⲆᐃΔΔᐃᐃⲆΔΔ": .4,
		"ⵠⵠΔⲆΔᐃᐃⲆⵠ": .2,
		"ᐃⲆΔΔΔⵠⵠΔⲆ": .2,
		"ΔΔΔΔᐃⵠᐃ": ᐃⵠΔ,
		"ᐃΔΔⵠⵠΔⵠ": 100,
		"ⲆⲆΔΔⲆΔⲆ": 2,
		"ⵠⵠΔΔᐃΔΔ": 300,
		"ⲆⵠᐃᐃⲆⵠⲆ": ⵠⵠΔΔⵠ,
		"ᐃⲆⵠⵠⵠ": ᐃΔⵠᐃ,
		"ⵠᐃᐃΔᐃⵠᐃⵠᐃ": .2,
		"ᐃⲆΔⲆᐃᐃΔ": ⲆᐃⲆⲆ
	};
	var ⵠⲆⲆⲆᐃⲆⵠ = function(ⵠⲆⵠⵠΔⵠⲆ, ΔⲆⵠΔ, ⵠΔⲆⵠⵠ) {
		this.ⵠⲆⵠⵠΔⵠⲆ = ⵠⲆⵠⵠΔⵠⲆ;
		this.c = 0;
		this.ΔⲆⵠΔ = ΔⲆⵠΔ;
		this.ⵠΔⲆⵠⵠ = ⵠΔⲆⵠⵠ;
		this.max = ⵠΔⲆⵠⵠ.length;
		this.play = function() {
			this.c = (this.c + 1) % this.max;
			var ⲆΔ = this.ⵠΔⲆⵠⵠ[this.c];
			this.ⵠⲆⵠⵠΔⵠⲆ.ᐃⵠΔⲆᐃᐃΔ(this.ΔⲆⵠΔ, ⲆΔ);
			this.ΔⲆⵠΔ[ⵠ[344]](ⲆΔ)
		}
	};
	var ⵠⲆⵠᐃⲆΔⲆⵠΔ = function(ⲆᐃΔⲆΔ) {
		this.ᐃᐃΔΔⲆⵠⲆ = ΔᐃᐃⲆ;
		this.ⲆⲆᐃΔ = 0;
		this.mode = -1;
		this.ΔⲆᐃᐃⵠ = ⵠΔᐃΔ.sample.ΔⲆᐃᐃⵠ[ⲆᐃΔⲆΔ];
		this.ᐃΔᐃⵠⲆⵠⵠ = ⵠΔᐃΔ.sample.ᐃΔᐃⵠⲆⵠⵠ[ⲆᐃΔⲆΔ];
		this.ⵠΔΔⵠΔΔΔ = ⵠΔᐃΔ.sample.ⵠΔΔⵠΔΔΔ[ⲆᐃΔⲆΔ];
		this.ΔᐃⲆⲆⲆΔΔ = ⵠΔᐃΔ.sample.ΔᐃⲆⲆⲆΔΔ[ⲆᐃΔⲆΔ];
		this.ⵠⲆⵠⵠᐃᐃⵠ = new ⵠⲆⲆⲆᐃⲆⵠ(this, ⵠⲆᐃΔⵠ.ⲆⵠⵠᐃⵠΔⵠ.ᐃᐃⵠΔᐃ, ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⵠⲆⵠⵠᐃᐃⵠ[ⲆᐃΔⲆΔ]);
		this.ⲆΔⵠᐃΔ = new ⵠⲆⲆⲆᐃⲆⵠ(this, ⵠⲆᐃΔⵠ.ⵠΔⲆⵠᐃⲆⲆ.ᐃᐃⵠΔᐃ, ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆΔⵠᐃΔ[ⲆᐃΔⲆΔ]);
		this.ⲆⲆⵠΔᐃ = new ⵠⲆⲆⲆᐃⲆⵠ(this, ⵠⲆᐃΔⵠ.ᐃΔΔⵠⲆᐃᐃ.ᐃᐃⵠΔᐃ, ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆⲆⵠΔᐃ[ⲆᐃΔⲆΔ]);
		this.ⲆᐃΔⲆΔ = ⲆᐃΔⲆΔ;
		this.x = ᐃⵠΔ;
		this.y = 0;
		this.ᐃᐃⵠⲆⵠ = 0;
		this.ᐃᐃΔⲆΔ = ⲆⲆⲆᐃᐃ.ᐃⲆⲆΔⲆⵠⵠⵠᐃ;
		this.ᐃΔΔⵠ = {
			x: ᐃⵠΔ,
			y: 0
		};
		this.ⵠⵠᐃΔⵠ = ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ;
		this.ᐃᐃᐃΔⲆΔΔᐃⵠ = function(ΔⲆⲆᐃᐃⵠⲆ) {
			if (ᐃⲆᐃⲆ.ΔΔᐃⵠᐃ === ΔⲆⲆᐃᐃⵠⲆ) this.ⵠⲆⵠⵠᐃᐃⵠ.play();
			else if (ΔⲆⲆᐃᐃⵠⲆ === ᐃⲆᐃⲆ.ᐃΔᐃⲆᐃ) this.ⲆΔⵠᐃΔ.play();
			else if (ΔⲆⲆᐃᐃⵠⲆ === ᐃⲆᐃⲆ.ⵠⵠⲆᐃᐃ) this.ⲆⲆⵠΔᐃ.play()
		};
		this.ⲆΔΔⲆᐃᐃⲆ = function(ⵠΔᐃ) {
			if (ⵠΔᐃ.ⲆⲆΔⲆⵠⲆⵠ > 0) return ⲆⲆⲆᐃᐃ.ᐃⲆⵠⵠⵠ;
			else if (0 < ⵠΔᐃ.ⵠⲆⲆΔᐃᐃᐃ) return ⲆⲆⲆᐃᐃ.ᐃⲆΔⲆᐃᐃΔ;
			else if (0 < ⵠΔᐃ.ⲆⲆⵠⵠΔ || 0 < ⵠΔᐃ.ᐃⵠᐃΔΔ) return ⲆⲆⲆᐃᐃ.ⵠⲆΔΔΔᐃΔ;
			else return ⲆⲆⲆᐃᐃ.ΔΔΔΔᐃⵠᐃ
		};
		this.ⲆΔⲆΔΔ = function(ⲆⲆᐃΔ) {
			this.ᐃᐃΔΔⲆⵠⲆ = 0;
			this.ⲆⲆᐃΔ = ⲆⲆᐃΔ;
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆⲆᐃΔ];
			ⵠΔᐃ.ⲆᐃΔⲆΔ = this.ⲆᐃΔⲆΔ;
			this.mode = this.ⲆΔΔⲆᐃᐃⲆ(ⵠΔᐃ);
			this.ᐃΔΔⵠ.x = ⵠΔᐃ.x;
			this.ᐃΔΔⵠ.y = ⵠΔᐃ.y
		};
		this.ΔⲆⲆⵠᐃⵠΔ = function() {
			this.ᐃᐃΔΔⲆⵠⲆ = ⲆΔᐃⲆ;
			this.mode = -1;
			this.ⵠⵠᐃΔⵠ[ⵠ[337]](this.ΔⲆᐃᐃⵠ);
			this.ⵠⵠᐃΔⵠ[ⵠ[337]](this.ᐃΔᐃⵠⲆⵠⵠ);
			this.ⵠⵠᐃΔⵠ[ⵠ[337]](this.ⵠΔΔⵠΔΔΔ);
			this.ⵠⵠᐃΔⵠ[ⵠ[337]](this.ΔᐃⲆⲆⲆΔΔ)
		};
		this.fade = function(ⲆΔ, ᐃⵠᐃ) {
			var ⵠⵠΔ = ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ * this.ⵠⵠᐃΔⵠ[ⵠ[138]](ⲆΔ);
			this.ⵠⵠᐃΔⵠ[ⵠ[148]](ⵠⵠΔ, ΔⲆⵠ, ᐃⵠᐃ, ⲆΔ)
		};
		this.ᐃⵠΔⲆᐃᐃΔ = function(ΔⲆⵠΔ, ⲆΔ) {
			if (this.ᐃᐃⵠⲆⵠ && this.ⲆᐃΔⲆΔ) {
				ΔⲆⵠΔ[ⵠ[395]](this.x, this.y, -.5, ⲆΔ)
			}
		};
		this.ΔᐃⵠⲆⲆ = function(ⲆΔ, ᐃᐃΔᐃⵠΔΔ, ⲆΔⵠᐃᐃ, ⲆᐃΔᐃΔ, ΔⵠⲆⵠ, ᐃᐃΔⲆΔ, ᐃⵠᐃ) {
			this.ᐃᐃΔⲆΔ = ᐃᐃΔⲆΔ;
			if (ⲆᐃΔᐃΔ && ΔⵠⲆⵠ === this.mode) {
				var ⵠⵠΔ = ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ * this.ⵠⵠᐃΔⵠ[ⵠ[138]](ⲆΔ);
				if (this.ᐃᐃⵠⲆⵠ) {
					var Δᐃᐃ = (Math.random() * ⲆΔⵠᐃᐃ + ᐃᐃΔᐃⵠΔΔ) * ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ;
					this.ⵠⵠᐃΔⵠ[ⵠ[148]](ⵠⵠΔ, Δᐃᐃ, ᐃⵠᐃ, ⲆΔ)
				} else this.ⵠⵠᐃΔⵠ[ⵠ[148]](ⵠⵠΔ, 0, ᐃⵠᐃ, ⲆΔ)
			} else if (ΔⵠⲆⵠ != this.mode && this.ᐃᐃⵠⲆⵠ) {
				this.ⵠⵠᐃΔⵠ[ⵠ[148]](ΔΔⲆᐃ, ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ * (ᐃᐃΔᐃⵠΔΔ + ⲆΔⵠᐃᐃ), ᐃⵠᐃ, ⲆΔ)
			} else if (this.ᐃᐃⵠⲆⵠ) {
				var ⵠⵠΔ = this.ⵠⵠᐃΔⵠ[ⵠ[138]](ⲆΔ) * ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ;
				var Δᐃᐃ = ⵠⲆΔᐃΔ.ΔⲆΔΔⲆⵠΔ * (ⲆΔⵠᐃᐃ * Math.random() + ᐃᐃΔᐃⵠΔΔ);
				this.ⵠⵠᐃΔⵠ[ⵠ[148]](ⵠⵠΔ, Δᐃᐃ, ᐃⵠᐃ, ⲆΔ)
			}
			this.ᐃⵠΔⲆᐃᐃΔ(this.ⵠⵠᐃΔⵠ, ⲆΔ);
			this.ⵠⵠᐃΔⵠ[ⵠ[344]](ⲆΔ)
		};
		this.ⵠᐃⵠ = function() {
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[this.ⲆⲆᐃΔ];
			this.ᐃᐃΔⲆΔ -= ᐃᐃΔⲆ;
			if (this.ᐃᐃΔⲆΔ > ΔΔⵠᐃ) return;
			var ⲆᐃΔᐃΔ = ⵠⵠᐃⵠ;
			if (this.ᐃΔΔⵠ.x != ⵠΔᐃ.x || this.ᐃΔΔⵠ.y != ⵠΔᐃ.y) {
				if (!this.ᐃᐃⵠⲆⵠ) {
					ⲆᐃΔᐃΔ = 1;
					this.ᐃᐃⵠⲆⵠ = ᐃⲆⵠΔ
				}
				this.x = ⵠΔᐃΔ.ΔⵠⲆᐃⲆᐃΔ(ⵠΔᐃ.x, ⲆⲆⲆᐃᐃ.ⲆⲆΔΔⲆΔⲆ);
				this.y = ⵠΔᐃΔ.ⵠⲆⵠΔⲆΔⲆ(ⵠΔᐃ.y, ⲆⲆⲆᐃᐃ.ⲆⲆΔΔⲆΔⲆ)
			} else {
				this.ᐃᐃⵠⲆⵠ && (ⲆᐃΔᐃΔ = 1, this.ᐃᐃⵠⲆⵠ = ΔΔⲆᐃ)
			}
			this.ᐃΔΔⵠ.x = ⵠΔᐃ.x;
			this.ᐃΔΔⵠ.y = ⵠΔᐃ.y;
			ΔⵠⲆⵠ = this.ⲆΔΔⲆᐃᐃⲆ(ⵠΔᐃ);
			if (ΔⵠⲆⵠ != this.mode) {
				if (this.mode === ⲆⲆⲆᐃᐃ.ᐃⲆΔⲆᐃᐃΔ) this.fade(this.ΔⲆᐃᐃⵠ, ⲆⲆⲆᐃᐃ.ⵠⵠΔΔᐃΔΔ);
				else if (this.mode === ⲆⲆⲆᐃᐃ.ᐃⲆⵠⵠⵠ) this.fade(this.ᐃΔᐃⵠⲆⵠⵠ, ⲆⲆⲆᐃᐃ.ᐃΔΔⵠⵠΔⵠ);
				else if (ⲆⲆⲆᐃᐃ.ΔΔΔΔᐃⵠᐃ === this.mode) this.fade(this.ⵠΔΔⵠΔΔΔ, ⲆⲆⲆᐃᐃ.ⲆⵠᐃᐃⲆⵠⲆ);
				else if (this.mode === ⲆⲆⲆᐃᐃ.ⵠⲆΔΔΔᐃΔ) this.fade(this.ΔᐃⲆⲆⲆΔΔ, ⲆⲆⲆᐃᐃ.ⵠᐃΔᐃᐃΔⵠ)
			}
			if (ΔⵠⲆⵠ === ⲆⲆⲆᐃᐃ.ᐃⲆΔⲆᐃᐃΔ) this.ΔᐃⵠⲆⲆ(this.ΔⲆᐃᐃⵠ, .08, .3, ⲆᐃΔᐃΔ, ΔⵠⲆⵠ, ⲆⲆⲆᐃᐃ.ⲆᐃΔΔᐃᐃⲆΔΔ, ⲆⲆⲆᐃᐃ.ⵠⵠΔΔᐃΔΔ);
			else if (ΔⵠⲆⵠ === ⲆⲆⲆᐃᐃ.ᐃⲆⵠⵠⵠ) this.ΔᐃⵠⲆⲆ(this.ᐃΔᐃⵠⲆⵠⵠ, .2, .3, ⲆᐃΔᐃΔ, ΔⵠⲆⵠ, ⲆⲆⲆᐃᐃ.ⵠᐃᐃΔᐃⵠᐃⵠᐃ, ⲆⲆⲆᐃᐃ.ᐃΔΔⵠⵠΔⵠ);
			else if (ⲆⲆⲆᐃᐃ.ΔΔΔΔᐃⵠᐃ === ΔⵠⲆⵠ) this.ΔᐃⵠⲆⲆ(this.ⵠΔΔⵠΔΔΔ, .3, .6, ⲆᐃΔᐃΔ, ΔⵠⲆⵠ, ⲆⲆⲆᐃᐃ.ᐃⲆΔΔΔⵠⵠΔⲆ, ⲆⲆⲆᐃᐃ.ⲆⵠᐃᐃⲆⵠⲆ);
			else if (ΔⵠⲆⵠ === ⲆⲆⲆᐃᐃ.ⵠⲆΔΔΔᐃΔ) this.ΔᐃⵠⲆⲆ(this.ΔᐃⲆⲆⲆΔΔ, .1, .25, ⲆᐃΔᐃΔ, ΔⵠⲆⵠ, ⲆⲆⲆᐃᐃ.ⵠⵠΔⲆΔᐃᐃⲆⵠ, ⲆⲆⲆᐃᐃ.ⵠᐃΔᐃᐃΔⵠ);
			this.mode = ΔⵠⲆⵠ
		};
		this.check = function() {
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[this.ⲆⲆᐃΔ];
			if (!ⵠΔᐃ) {
				this.ΔⲆⲆⵠᐃⵠΔ(ⵠΔᐃ);
				return ⲆΔᐃⵠⲆ
			}
			return true
		}
	};
	var ⵠᐃⲆⵠⵠⲆⲆᐃΔ = function() {
		this.ᐃΔⲆⲆΔ = 0;
		this.loaded = 0;
		this.transition = ΔᐃⲆΔ;
		this.ᐃⲆⲆⲆⲆⵠⲆ = function(ᐃᐃΔ) {
			return 100 * (ᐃᐃΔ / ⲆΔΔ.w)
		};
		this.ⵠⲆⲆᐃΔᐃᐃ = function(ᐃⲆᐃ) {
			return 100 * (ᐃⲆᐃ / ⲆΔΔ.ΔᐃⲆ)
		};
		this.ΔⵠⲆᐃⲆᐃΔ = function(ᐃᐃΔ, ᐃⵠᐃ) {
			ᐃᐃΔ = this.ᐃⲆⲆⲆⲆⵠⲆ(ᐃᐃΔ) - this.ⲆⲆⲆⲆΔ.x;
			return this.ⲆⲆⲆⲆΔ.x + ᐃⵠᐃ * ᐃᐃΔ
		};
		this.ⵠⲆⵠΔⲆΔⲆ = function(ᐃⲆᐃ, ᐃⵠᐃ) {
			ᐃⲆᐃ = Math.abs(this.ⵠⲆⲆᐃΔᐃᐃ(ᐃⲆᐃ) - this.ⲆⲆⲆⲆΔ.y);
			return this.ⲆⲆⲆⲆΔ.y + ᐃⵠᐃ * ᐃⲆᐃ
		};
		this.sample = {};
		this.ΔⲆᐃΔᐃ = {};
		this.ΔⲆⵠΔ = {};
		this.ⲆⵠᐃΔⵠᐃⲆ = function(ⵠΔᐃ, ᐃⵠⵠⲆ, ᐃᐃΔ, ᐃⲆᐃ) {
			for (var ᐃⲆ = ΔⲆᐃⲆ; ᐃⲆ < ᐃⵠⵠⲆ.length; ᐃⲆ++) {
				var ⲆΔ = ᐃⵠⵠⲆ[ᐃⲆ];
				if (ⵠΔᐃ[ⵠ[157]](ⲆΔ)) continue;
				ⵠΔᐃ[ⵠ[395]](ᐃᐃΔ, ᐃⲆᐃ, -.5, ⲆΔ);
				ⵠΔᐃ[ⵠ[344]](ⲆΔ);
				return ⲆⵠΔⵠΔ
			}
			return false
		};
		this.ⲆⲆᐃ = function(ⲆΔ, ᐃᐃⵠΔᐃ, ᐃᐃΔ, ᐃⲆᐃ) {
			ᐃᐃΔ = this.ΔⵠⲆᐃⲆᐃΔ(ᐃᐃΔ, ⲆⲆⲆᐃᐃ.ᐃΔᐃΔᐃⲆⵠ);
			ᐃⲆᐃ = this.ⵠⲆⵠΔⲆΔⲆ(ᐃⲆᐃ, ⲆⲆⲆᐃᐃ.ᐃΔᐃΔᐃⲆⵠ);
			console.log("HIT", ⲆΔ, ᐃᐃⵠΔᐃ, ᐃᐃΔ, ᐃⲆᐃ, ⲆⲆⲆᐃᐃ.ᐃΔᐃΔᐃⲆⵠ);
			if (!ⲆΔ) this.ⲆⵠᐃΔⵠᐃⲆ(this.ΔⲆⵠΔ.ᐃᐃᐃᐃⲆ, this.sample.ᐃᐃᐃᐃⲆ, ᐃᐃΔ, ᐃⲆᐃ);
			else {
				if (1 === ᐃᐃⵠΔᐃ) this.ⲆⵠᐃΔⵠᐃⲆ(this.ΔⲆⵠΔ.ΔⵠⲆⲆᐃΔᐃ, this.sample.ΔⵠⲆⲆᐃΔᐃ, ᐃᐃΔ, ᐃⲆᐃ);
				else if (ΔⵠⲆΔ === ᐃᐃⵠΔᐃ) this.ⲆⵠᐃΔⵠᐃⲆ(this.ΔⲆⵠΔ.ⲆΔᐃⵠⲆΔᐃ, this.sample.ⲆΔᐃⵠⲆΔᐃ, ᐃᐃΔ, ᐃⲆᐃ)
			}
		};
		this.ⲆⲆⲆⲆΔ = {
			y: 0,
			x: ⵠⵠⲆⲆ
		};
		this.ⲆⲆⵠⲆᐃⵠⲆ = {
			x: 0,
			y: 0
		};
		this.ΔⵠⲆⵠᐃ = {};
		this.ᐃⵠⵠΔ = [];
		this.ⵠⵠᐃΔⵠ = function(ⵠΔᐃ, ⵠᐃⵠ) {
			for (var ⵠⵠⵠ in this.ΔⵠⲆⵠᐃ) {
				var ΔⵠⲆⵠᐃ = this.ΔⵠⲆⵠᐃ[ⵠⵠⵠ];
				ΔⵠⲆⵠᐃ.check(ⵠΔᐃ);
				if (ΔⵠⲆⵠᐃ.ⵠⵠᐃᐃΔⵠⲆ) {
					if (ⲆΔΔ.ΔᐃⲆᐃᐃ.now < ᐃⲆᐃⲆ.ΔΔⲆⵠᐃΔΔ) ΔⵠⲆⵠᐃ.ΔᐃⵠⲆⲆ();
					if (ⵠᐃⵠ) ΔⵠⲆⵠᐃ.ⵠᐃⵠ(ⵠΔᐃ, this.ⲆⲆⲆⲆΔ);
					if (this.transition) ΔⵠⲆⵠᐃ.transition()
				}
			}
			this.transition && (this.transition = ⵠⵠᐃⵠ)
		};
		this.ⵠⲆⲆΔΔⲆΔᐃⵠ = function() {
			var ⲆⲆⲆᐃ = [];
			for (var ᐃⲆ = 0; ᐃⲆ < this.ᐃⵠⵠΔ.length; ᐃⲆ++) {
				var ⵠΔᐃ = this.ᐃⵠⵠΔ[ᐃⲆ];
				if (ⵠΔᐃ.ᐃᐃΔΔⲆⵠⲆ) ⲆⲆⲆᐃ.push(ᐃⲆ);
				else !ⵠΔᐃ.ᐃᐃΔΔⲆⵠⲆ && !ⲆΔΔ.ΔⲆΔⵠΔ[ⵠΔᐃ.ⲆⲆᐃΔ] && (ⵠΔᐃ.ΔⲆⲆⵠᐃⵠΔ(), ⲆⲆⲆᐃ.push(ᐃⲆ))
			}
			var ᐃⵠⵠΔ = ⲆΔΔ.ⵠᐃⲆ[ᐃⲆΔ.ⲆᐃᐃⵠⲆ];
			for (var ᐃⲆ = 0, ΔΔΔ = 0; ᐃⲆ < ᐃⵠⵠΔ.length && ⲆⲆⲆᐃ.length > ΔΔΔ; ᐃⲆ++) {
				var ⵠΔᐃ = ᐃⵠⵠΔ[ᐃⲆ];
				if (ⲆΔΔ.mode == ⲆⵠΔΔ.ⲆᐃⵠΔⵠⲆᐃ && ⲆΔΔ.ᐃⵠⵠΔ[ⵠΔᐃ.id].ᐃΔⲆᐃⵠ === ⵠ[211] || -1 !== ⵠΔᐃ.ⲆᐃΔⲆΔ || ⵠΔᐃ.ⲆⲆᐃΔ === ⲆΔⲆ.ⲆⲆᐃΔ) continue;
				this.ᐃⵠⵠΔ[ⲆⲆⲆᐃ[ΔΔΔ]].ⲆΔⲆΔΔ(ⵠΔᐃ.ⲆⲆᐃΔ);
				ΔΔΔ++
			}
		};
		this.ΔᐃᐃⲆΔΔΔΔΔ = function() {
			this.ⵠⲆⲆΔΔⲆΔᐃⵠ();
			for (var ᐃⲆ = 0; ᐃⲆ < this.ᐃⵠⵠΔ.length; ᐃⲆ++) {
				var ⵠΔᐃ = this.ᐃⵠⵠΔ[ᐃⲆ];
				if (ⵠΔᐃ.ᐃᐃΔΔⲆⵠⲆ || !ⵠΔᐃ.check()) continue;
				ⵠΔᐃ.ⵠᐃⵠ()
			}
		};
		this.ⲆⲆΔⵠᐃⵠᐃᐃⵠ = function(ⵠΔᐃ) {
			if (ⵠΔᐃ.x === this.ⲆⲆⵠⲆᐃⵠⲆ.x && this.ⲆⲆⵠⲆᐃⵠⲆ.y === ⵠΔᐃ.y) return 0;
			this.ⲆⲆⵠⲆᐃⵠⲆ.x = ⵠΔᐃ.x;
			this.ⲆⲆⵠⲆᐃⵠⲆ.y = ⵠΔᐃ.y;
			this.ⲆⲆⲆⲆΔ.x = this.ᐃⲆⲆⲆⲆⵠⲆ(ⵠΔᐃ.x);
			this.ⲆⲆⲆⲆΔ.y = this.ⵠⲆⲆᐃΔᐃᐃ(ⵠΔᐃ.y);
			Howler[ⵠ[395]](this.ⲆⲆⲆⲆΔ.x, this.ⲆⲆⲆⲆΔ.y, ΔΔᐃ);
			return ᐃⲆⵠΔ
		};
		this.ⵠΔⲆᐃᐃΔᐃᐃⲆ = function() {
			if (!this.ᐃΔⲆⲆΔ || !this.loaded) return;
			var ⵠΔᐃ = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			if (!ⵠΔᐃ) return;
			ⵠΔᐃ.ⲆᐃΔⲆΔ = 0;
			var ⵠᐃⵠ = this.ⲆⲆΔⵠᐃⵠᐃᐃⵠ(ⵠΔᐃ);
			ⲆⵠΔΔ.ᐃᐃΔᐃⲆ !== ⲆΔΔ.mode && ⲆΔΔ.mode !== ⲆⵠΔΔ.ᐃΔⲆⵠⵠ && ⲆⵠΔΔ.ΔⵠⵠΔⲆΔⲆ !== ⲆΔΔ.mode && this.ⵠⵠᐃΔⵠ(ⵠΔᐃ, ⵠᐃⵠ);
			this.ΔᐃᐃⲆΔΔΔΔΔ()
		};
		this.ⵠⲆᐃⵠΔΔⵠⵠΔ = function() {
			var ⵠᐃⵠⵠᐃ = null;
			for (var ᐃᐃⵠΔᐃ in ⵠⲆᐃΔⵠ) {
				var ᐃⵠⵠⲆ = ⵠⲆᐃΔⵠ[ᐃᐃⵠΔᐃ];
				if (typeof ᐃⵠⵠⲆ === ⵠ[382] && ᐃⵠⵠⲆ.path) {
					ᐃⵠⵠⲆ.ᐃᐃⵠΔᐃ = new Howl({
						src: ᐃⵠⵠⲆ.path,
						volume: ΔΔⵠᐃ,
						sprite: ᐃⵠⵠⲆ.Ⲇᐃ
					})
				}
				for (var ⵠⵠⵠ in ᐃⵠⵠⲆ.sample) {
					var ᐃⵠⲆ = ᐃⵠⵠⲆ.sample[ⵠⵠⵠ];
					var ⲆⲆⲆᐃ = [];
					console.log(undefined);
					for (var ᐃⲆ = ᐃⵠΔ; ᐃⲆ < ᐃⵠⲆ; ᐃⲆ++) {
						var ⲆΔ = ᐃⵠⵠⲆ.ᐃᐃⵠΔᐃ[ⵠ[344]](ⵠⵠⵠ);
						ᐃⵠⵠⲆ.ᐃᐃⵠΔᐃ[ⵠ[337]](ⲆΔ);
						ᐃⵠⵠⲆ.ᐃᐃⵠΔᐃ["on"](ⵠ[148], (function(ⲆΔ) {
							if (!this[ⵠ[138]](ⲆΔ)) {
								console.log(ᐃⵠⲆᐃⲆ, undefined);
								this[ⵠ[337]](ⲆΔ)
							}
						}), ⲆΔ);
						ⲆⲆⲆᐃ.push(ⲆΔ)
					}
					if (ⲆⲆⲆᐃ.length > 1) ⵠΔᐃΔ.sample[ⵠⵠⵠ] = ⲆⲆⲆᐃ;
					else ⵠΔᐃΔ.sample[ⵠⵠⵠ] = ⲆⲆⲆᐃ[ΔΔⵠᐃ];
					ⵠΔᐃΔ.ΔⲆⵠΔ[ⵠⵠⵠ] = ᐃⵠⵠⲆ.ᐃᐃⵠΔᐃ
				}
			}
		};
		this.ⲆⲆⲆΔⲆᐃⵠ = function(ᐃⵠⵠⲆ, ⵠΔᐃ, ⵠⵠΔ) {
			for (var ᐃⲆ = ⲆΔᐃ; ᐃⵠⵠⲆ.length > ᐃⲆ; ᐃⲆ++) ⵠΔᐃ[ⵠ[138]](ⵠⵠΔ, ᐃⵠⵠⲆ[ᐃⲆ])
		};
		this.ⲆⵠⵠⲆΔΔΔ = function(ΔⲆᐃΔᐃ, ΔⲆⵠΔ, ⵠΔⲆⲆⲆⵠᐃⲆⲆ, ⵠⲆⲆⲆⵠⵠᐃⲆⲆ, ⲆⲆⲆⲆⲆⲆΔ, ᐃⲆⵠᐃΔ) {
			var ᐃⵠⵠⲆ = ΔⲆᐃΔᐃ;
			for (var ᐃⲆ = ⵠᐃⲆᐃ; ᐃⲆ < ⵠΔⲆⲆⲆⵠᐃⲆⲆ; ᐃⲆ++) {
				var ΔΔΔΔΔΔⵠ = ᐃⵠⵠⲆ[ᐃⲆ] = [];
				for (ΔΔΔ = ΔⵠⲆⲆ; ΔΔΔ < ⵠⲆⲆⲆⵠⵠᐃⲆⲆ; ΔΔΔ++) {
					ΔΔΔΔΔΔⵠ[ΔΔΔ] = ⵠΔᐃΔ.sample[ⲆⲆⲆⲆⲆⲆΔ + ΔΔΔ][ᐃⲆ];
					ΔⲆⵠΔ.ᐃᐃⵠΔᐃ[ⵠ[138]](ᐃⲆⵠᐃΔ, ΔΔΔΔΔΔⵠ[ΔΔΔ])
				}
			}
		};
		this.ⲆΔⲆΔΔ = function() {
			ⵠΔᐃΔ.ⵠⲆᐃⵠΔΔⵠⵠΔ();
			ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⵠⲆⵠⵠᐃᐃⵠ = [];
			ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆΔⵠᐃΔ = [];
			ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆⲆⵠΔᐃ = [];
			ⵠΔᐃΔ.ⲆⵠⵠⲆΔΔΔ(ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⵠⲆⵠⵠᐃᐃⵠ, ⵠⲆᐃΔⵠ.ⲆⵠⵠᐃⵠΔⵠ, ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ, Δᐃᐃᐃ, "p", .15);
			ⵠΔᐃΔ.ⲆⵠⵠⲆΔΔΔ(ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆΔⵠᐃΔ, ⵠⲆᐃΔⵠ.ⵠΔⲆⵠᐃⲆⲆ, ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ, Δⵠⵠⵠ, "w", .15);
			ⵠΔᐃΔ.ⲆⵠⵠⲆΔΔΔ(ⵠΔᐃΔ.ΔⲆᐃΔᐃ.ⲆⲆⵠΔᐃ, ⵠⲆᐃΔⵠ.ᐃΔΔⵠⲆᐃᐃ, ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ, ᐃⵠⵠⵠ, "d", .09);
			ⵠΔᐃΔ.ⲆⲆⲆΔⲆᐃⵠ(ⵠΔᐃΔ.sample.ᐃᐃᐃᐃⲆ, ⵠΔᐃΔ.ΔⲆⵠΔ.ᐃᐃᐃᐃⲆ, .15);
			ⵠΔᐃΔ.ⲆⲆⲆΔⲆᐃⵠ(ⵠΔᐃΔ.sample.ⲆΔᐃⵠⲆΔᐃ, ⵠΔᐃΔ.ΔⲆⵠΔ.ⲆΔᐃⵠⲆΔᐃ, .2);
			ⵠΔᐃΔ.ⲆⲆⲆΔⲆᐃⵠ(ⵠΔᐃΔ.sample.ΔⵠⲆⲆᐃΔᐃ, ⵠΔᐃΔ.ΔⲆⵠΔ.ΔⵠⲆⲆᐃΔᐃ, ⲆΔᐃⲆ);
			ⵠΔᐃΔ.ΔⵠⲆⵠᐃ.ΔⵠⲆΔᐃΔᐃⲆᐃ = new ᐃⲆⵠᐃᐃⲆᐃ(ᐃⲆᐃⲆ.ⵠⵠᐃⲆⲆⲆΔⲆⵠ, this.sample.ⲆⲆᐃⲆⲆⵠⲆ, this.sample.ΔⵠⵠⵠⲆΔᐃ, ᐃⲆᐃⲆ.ΔᐃΔΔΔΔΔᐃⵠ, .05, .4, ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ, ᐃⲆᐃⲆ.ⲆⲆⵠΔⲆⵠⲆ, {
				x: Δ.ΔⲆⵠᐃⲆⲆΔ,
				y: Δ.ᐃΔΔⵠⵠΔⲆ,
				w: ⲆΔΔ.w,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			}, {
				x: Δ.ΔⲆⵠᐃⲆⲆΔ - 2300,
				y: Δ.ᐃΔΔⵠⵠΔⲆ - 4e3,
				w: ⲆΔΔ.w,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			}, {
				x: Δ.ΔⲆⵠᐃⲆⲆΔ - 1500,
				y: Δ.ᐃΔΔⵠⵠΔⲆ - 2e3,
				w: ⲆΔΔ.w,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			});
			ⵠΔᐃΔ.ΔⵠⲆⵠᐃ.ⲆΔᐃⲆⵠΔⵠⲆΔ = new ᐃⲆⵠᐃᐃⲆᐃ(ᐃⲆᐃⲆ.ⲆⲆⵠΔΔⵠΔ, this.sample.ΔᐃΔΔⲆⲆᐃ, this.sample.ᐃⵠΔⵠⲆⲆⵠ, ᐃⲆᐃⲆ.ⲆⵠΔⵠⵠΔⲆᐃΔ, .03, .25, ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ, ᐃⲆᐃⲆ.ⲆⲆⵠΔⲆⵠⲆ, {
				x: 0,
				y: Δ.ᐃΔΔⵠⵠΔⲆ + 800,
				w: Δ.ΔⲆⵠᐃⲆⲆΔ - 2300,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			}, {
				x: -ᐃⲆⵠᐃⲆ,
				y: Δ.ᐃΔΔⵠⵠΔⲆ - 300,
				w: Δ.ΔⲆⵠᐃⲆⲆΔ - 100,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			}, {
				x: -100,
				y: Δ.ᐃΔΔⵠⵠΔⲆ + 400,
				w: Δ.ΔⲆⵠᐃⲆⲆΔ - 1400,
				"ΔᐃⲆ": ⲆΔΔ.ΔᐃⲆ
			});
			ⵠΔᐃΔ.ΔⵠⲆⵠᐃ.ΔᐃⲆⲆⲆΔΔ = new ᐃⲆⵠᐃᐃⲆᐃ(ᐃⲆᐃⲆ.ⲆⲆⵠΔΔⵠΔ, this.sample.ⲆⵠⵠⲆⲆᐃⲆ, this.sample.ΔⲆΔᐃⲆΔⵠ, ᐃⲆᐃⲆ.ⲆⵠᐃⵠᐃⲆᐃⲆᐃ, .01, .22, ⵠⲆᐃΔⵠ.ⲆΔⲆⵠΔᐃⲆ.ᐃᐃⵠΔᐃ, ᐃⲆᐃⲆ.ⲆⲆⵠΔⲆⵠⲆ, {
				x: -ⲆⲆⵠⵠⲆ,
				y: -100,
				w: ⲆΔΔ.w + 200,
				"ΔᐃⲆ": Δ.ᐃΔΔⵠⵠΔⲆ - 1e3
			}, {
				x: -100,
				y: -ⵠᐃⵠⵠᐃΔⲆ,
				w: ⲆΔΔ.w + 200,
				"ΔᐃⲆ": Δ.ᐃΔΔⵠⵠΔⲆ + 600
			}, {
				x: -100,
				y: -ⵠⵠΔΔⵠ,
				w: ⲆΔΔ.w + 200,
				"ΔᐃⲆ": Δ.ᐃΔΔⵠⵠΔⲆ + ᐃⲆⵠΔΔ
			});
			for (var ᐃⲆ = ⲆⵠⲆ; ᐃⲆ < ᐃⲆᐃⲆ.ⲆᐃᐃⵠⲆ; ᐃⲆ++) ⵠΔᐃΔ.ᐃⵠⵠΔ[ᐃⲆ] = new ⵠⲆⵠᐃⲆΔⲆⵠΔ(ᐃⲆ);
			ⵠΔᐃΔ.ᐃⵠⵠΔ[0].ⲆΔⲆΔΔ(ⲆΔⲆ.ⲆⲆᐃΔ);
			ⵠΔᐃΔ.loaded = ᐃΔⲆⵠ
		};
		this.ΔⲆⵠⵠⲆⲆᐃΔΔ = function() {
			!this.transition && ⲆΔΔ.ΔᐃⲆᐃᐃ.now < ᐃⲆᐃⲆ.ΔΔⲆⵠᐃΔΔ && (this.transition = ᐃⲆⵠΔ)
		};
		this.ⲆⲆᐃΔᐃ = function() {
			if (!this.ᐃΔⲆⲆΔ || !this.loaded) return;
			for (var ᐃⵠⵠⲆ in ⵠΔᐃΔ.sample) {
				var ᐃᐃⵠΔᐃ = ⵠΔᐃΔ.sample[ᐃⵠⵠⲆ];
				if (typeof ᐃᐃⵠΔᐃ === ⵠ[382]) {
					for (var ᐃⲆ = 0; ᐃⲆ < ᐃᐃⵠΔᐃ.length; ᐃⲆ++) ⵠΔᐃΔ.ΔⲆⵠΔ[ᐃⵠⵠⲆ][ⵠ[337]](ᐃᐃⵠΔᐃ[ᐃⲆ])
				} else ⵠΔᐃΔ.ΔⲆⵠΔ[ᐃⵠⵠⲆ][ⵠ[337]](ᐃᐃⵠΔᐃ)
			}
			for (var ᐃⲆ = 0; ⵠΔᐃΔ.ᐃⵠⵠΔ.length > ᐃⲆ; ᐃⲆ++) ⵠΔᐃΔ.ᐃⵠⵠΔ[ᐃⲆ].ΔⲆⲆⵠᐃⵠΔ()
		};
		this.select = function() {
			if (!ⵠΔᐃΔ.ᐃΔⲆⲆΔ) {
				if (!ⵠΔᐃΔ.loaded) ⵠΔᐃΔ.ⲆΔⲆΔΔ();
				ⵠΔᐃΔ.ᐃⵠⵠΔ[0].ⲆⲆᐃΔ = ⲆΔⲆ.ⲆⲆᐃΔ;
				ⵠΔᐃΔ.ᐃⵠⵠΔ[ᐃΔⵠⵠ].ᐃᐃΔΔⲆⵠⲆ = 0;
				ⵠΔᐃΔ.ΔⲆⵠⵠⲆⲆᐃΔΔ()
			} else ⵠΔᐃΔ.ⲆⲆᐃΔᐃ();
			ⵠΔᐃΔ.ᐃΔⲆⲆΔ = !ⵠΔᐃΔ.ᐃΔⲆⲆΔ
		}
	};
	ⲆⲆᐃⵠᐃΔⲆ = 0;
	document[ⲆⵠΔᐃᐃᐃΔ[181]]("version")[ⲆⵠΔᐃᐃᐃΔ[359]] = "" + ᐃΔᐃᐃΔ.ⲆⵠⵠⵠΔⵠⵠ + ".3";
	const ⵠΔⲆᐃⵠᐃΔⲆΔ = {};
	const ΔᐃⵠΔⵠⵠΔ = {};
	ⵠΔⲆᐃⵠᐃΔⲆΔ["get"] = function(ⵠⲆᐃⵠΔᐃⲆᐃΔ, ΔⲆΔΔⵠⲆΔ) {
		if (ΔⲆΔΔⵠⲆΔ !== "ⵠΔⲆᐃⵠᐃΔⲆΔ") {
			const ⵠΔⲆᐃⵠᐃΔⲆΔ = Math.floor;
			let ᐃΔⵠΔᐃⲆⵠ = 0;
			const ⵠⲆᐃⵠΔᐃⲆᐃΔ = function(ⵠⲆᐃⵠΔᐃⲆᐃΔ) {
				for (let ΔⲆΔΔⵠⲆΔ = 0; ΔⲆΔΔⵠⲆΔ < 8302; ΔⲆΔΔⵠⲆΔ++) ᐃΔⵠΔᐃⲆⵠ += ΔⲆΔΔⵠⲆΔ;
				return ⵠΔⲆᐃⵠᐃΔⲆΔ(ⵠⲆᐃⵠΔᐃⲆᐃΔ)
			};
			Math.floor = ⵠⲆᐃⵠΔᐃⲆᐃΔ
		}
		return ⲆⲆⲆⲆᐃᐃᐃ["Reflect"]["get"](...arguments)
	};
	const ᐃΔⵠΔᐃⲆⵠ = new ⲆⲆⲆⲆᐃᐃᐃ["Proxy"](ΔᐃⵠΔⵠⵠΔ, ⵠΔⲆᐃⵠᐃΔⲆΔ);
	const ⲆⲆⵠⲆΔⵠᐃⵠᐃ = ᐃΔⵠΔᐃⲆⵠ.ⵠΔⲆᐃⵠᐃΔⲆΔ;
	var ᐃⲆᐃⵠⲆ = [];
	var ΔⵠⲆΔⲆ = {
		time: Math.floor(Math.random() * 2),
		items: []
	};
	ⲆⲆⲆⵠⲆⲆΔΔᐃ();
	ᐃΔᐃⵠ = new ΔᐃᐃⲆᐃΔⵠⵠⵠ;
	var ᐃᐃΔΔ;
	var ⵠΔᐃⵠ = {
		"ⲆΔΔⲆᐃ": ⲆΔⲆΔⵠ
	};
	var ⲆΔΔ;
	var ⲆΔⲆ;
	var ΔⲆΔⵠⲆᐃᐃ;
	var ⵠΔᐃΔ = new ⵠᐃⲆⵠⵠⲆⲆᐃΔ;
	var ⵠΔⵠᐃᐃ = new ⵠⵠΔΔᐃⵠΔ;
	var ᐃⲆΔⲆ = new ⵠⲆⵠⲆΔΔΔ;
	var ᐃⲆΔⲆⲆ = 0,
		ᐃᐃΔⲆ = ΔⲆⵠ;
	var ΔΔⲆᐃΔΔⵠⲆΔ = {
		"ⵠⵠ": ΔⵠⵠΔⲆ,
		"ᐃᐃΔⲆΔ": ΔⲆᐃⲆ,
		display: ΔⲆΔΔⵠ,
		"ᐃⲆⲆⵠⲆΔΔⲆΔ": ⲆⵠⲆ,
		"ⲆⲆⵠΔⲆᐃⵠⲆΔ": 60
	};
	var ΔⵠᐃᐃⵠΔΔ = new ⲆⵠⵠᐃⵠΔⲆᐃⵠ(ΔΔ, Ⲇ, (function() {
		ⲆᐃⵠⲆΔᐃΔⲆⲆ();
		ⵠΔᐃⵠ = new ⵠⲆΔⵠⵠΔⲆᐃⵠ(ΔΔ, Ⲇ);
		ᐃᐃΔΔ = new ᐃΔⵠᐃⵠᐃⵠⵠⵠ(ΔΔ, Ⲇ);
		ᐃᐃΔΔ.ᐃΔⵠⵠᐃⵠᐃⵠᐃ();
		ΔⲆΔⵠⲆᐃᐃ = new ⵠⵠᐃᐃⲆⲆⵠᐃΔ(ΔΔ, Ⲇ);
		ⲆΔΔ = new ⲆΔΔΔᐃΔⲆⲆΔ;
		ⲆΔⲆ = new ⲆⲆⲆΔΔⲆᐃⵠⲆ;
		ΔⵠᐃᐃⵠΔΔ.ⲆⲆᐃΔᐃ((function() {
			ΔⵠᐃᐃⵠΔΔ.ᐃⵠⲆⲆⵠⲆΔ.style.display = ⵠ[402];
			ᐃᐃΔΔ.ᐃΔⲆⲆΔ()
		}))
	}));

	function ⲆⵠᐃⲆ(ⵠⵠᐃⵠⵠⵠⲆ) {
		ⲆⲆⲆⲆᐃᐃᐃ.requestAnimationFrame(ⲆⵠᐃⲆ);
		ᐃᐃΔⲆ = (ⵠⵠᐃⵠⵠⵠⲆ - ᐃⲆΔⲆⲆ) / 1e3;
		ᐃⲆΔⲆⲆ = ⵠⵠᐃⵠⵠⵠⲆ;
		ᐃᐃΔⲆ = ᐃᐃΔⲆ > 1 ? 1 : ᐃᐃΔⲆ;
		if (ⵠΔᐃⵠ.ⲆΔΔⲆᐃ) {
			ⵠΔᐃⵠ.ⲆⵠᐃⲆ()
		} else {
			Ⲇ.clearRect(ΔΔⲆᐃ, 0, Ⲇⵠⵠⵠ, ᐃΔⲆᐃ);
			if (ΔⵠᐃᐃⵠΔΔ.ⲆΔΔⲆᐃ) ΔⵠᐃᐃⵠΔΔ.ⲆⵠᐃⲆ();
			else if (ᐃᐃΔΔ.ⲆΔΔⲆᐃ) ᐃᐃΔΔ.ⲆⵠᐃⲆ();
			else ΔⲆΔⵠⲆᐃᐃ.ⲆΔΔⲆᐃ && ΔⲆΔⵠⲆᐃᐃ.ⲆⵠᐃⲆ()
		}
	}
	ⲆⲆⲆⲆᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[265]] = function() {
		if (ⵠΔᐃⵠ.ⲆΔΔⲆᐃ) return "Are you sure you want quit starve.io ;-; ?"
	};
	ⲆⵠⲆⲆⲆⵠᐃ();
	ⲆⵠᐃⲆ(0);

	function ᐃⲆⵠᐃⵠᐃᐃ() {}

	function ΔᐃᐃΔⲆⲆΔ(ⲆΔⵠᐃⵠⲆᐃ, ᐃΔⵠΔⲆ) {
		ⲆⲆΔⵠᐃΔᐃ(ᐃΔΔΔⲆ, ⲆΔⵠᐃⵠⲆᐃ, ᐃΔⵠΔⲆ);
		const ⵠⲆⲆⵠⵠⵠⲆΔΔ = ᐃⵠᐃᐃΔⲆⲆ(ⲆᐃΔⲆ[ΔⵠⲆⲆ], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[1]);
		const ⲆⵠⵠⲆⵠΔᐃⵠⵠ = ᐃⵠᐃᐃΔⲆⲆ(ⲆᐃΔⲆ[Δⵠⵠ], ⲆᐃΔⲆ[1], ⲆᐃΔⲆ[ΔⲆⵠ], ⲆᐃΔⲆ[ᐃΔⲆⵠ]);
		const ⲆᐃΔΔⲆⵠᐃⵠᐃ = ((94 + (ⵠⲆⲆⵠⵠⵠⲆΔΔ ^ ⲆⵠⵠⲆⵠΔᐃⵠⵠ)) * 8121 + 28411) % 134456;
		return ⲆᐃΔΔⲆⵠᐃⵠᐃ
	}

	function ⲆⲆⲆⵠⲆⲆⵠ(ΔⵠⵠᐃⲆⲆΔ, ᐃΔΔΔⲆᐃⵠ, Ⲇᐃᐃⵠⵠⵠⵠ, ⵠⲆⵠⲆⲆⲆΔ, ΔᐃⲆⲆⵠᐃⵠⵠⵠ) {
		ᐃΔᐃⲆⵠⲆᐃ(ᐃΔΔΔⲆ, ΔⵠⵠᐃⲆⲆΔ, ᐃΔΔΔⲆᐃⵠ, Ⲇᐃᐃⵠⵠⵠⵠ, ⵠⲆⵠⲆⲆⲆΔ, ΔᐃⲆⲆⵠᐃⵠⵠⵠ);
		const ⲆΔᐃⵠΔⲆᐃ = ΔⵠᐃΔⵠᐃⲆ(ⲆᐃΔⲆ[0], ⲆᐃΔⲆ[ᐃⲆⵠΔ]);
		const ᐃⲆⲆᐃⵠΔᐃⲆᐃ = ΔⵠᐃΔⵠᐃⲆ(ⲆᐃΔⲆ[2], ⲆᐃΔⲆ[ᐃⲆᐃΔⵠ]);
		const ⲆⲆΔⵠΔᐃᐃᐃⵠ = (ⲆΔᐃⵠΔⲆᐃ | 48079) & ~(48079 & ⲆΔᐃⵠΔⲆᐃ);
		return ⲆⲆΔⵠΔᐃᐃᐃⵠ
	}

	function ᐃⵠᐃᐃΔⲆⲆ(ᐃᐃⵠⲆΔΔᐃ, ⵠⵠⲆⵠᐃⵠⲆ, ⲆΔΔⵠΔᐃⲆ, ΔⲆᐃⵠⲆⲆΔ) {
		ⲆⵠᐃᐃⲆⵠⵠ(ᐃΔΔΔⲆ, ᐃᐃⵠⲆΔΔᐃ, ⵠⵠⲆⵠᐃⵠⲆ, ⲆΔΔⵠΔᐃⲆ, ΔⲆᐃⵠⲆⲆΔ);
		const ⵠᐃΔⵠⲆⲆⲆᐃⲆ = (8 << ((ⲆᐃΔⲆ[0] ^ ⲆᐃΔⲆ[ⲆΔᐃⲆ]) >> ⲆᐃⲆᐃᐃ & 255)) + (ᐃΔΔⲆⲆΔΔ << ((ⲆᐃΔⲆ[0] ^ ⲆᐃΔⲆ[ᐃΔⲆⵠ]) >> 16 & 255)) + (24 << ((ⲆᐃΔⲆ[0] ^ ⲆᐃΔⲆ[ΔⲆᐃ]) >> 0 & 255)) + (0 << ((ⲆᐃΔⲆ[ΔⵠⲆΔ] ^ ⲆᐃΔⲆ[ᐃΔⲆⵠ]) >> 24 & 255));
		const ᐃᐃⵠᐃⲆΔΔ = (16807 * (87 + (ⵠᐃΔⵠⲆⲆⲆᐃⲆ ^ ⲆᐃΔⲆ[2])) + ΔⲆⵠ) % 2147483647;
		const ⵠⲆⵠΔᐃⲆΔⲆΔ = (ⲆⵠⲆᐃΔⵠᐃ << ((ᐃᐃⵠᐃⲆΔΔ ^ ⲆᐃΔⲆ[ⲆⵠⵠΔ]) >> 24 & 255)) + (8 << ((ᐃᐃⵠᐃⲆΔΔ ^ ⲆᐃΔⲆ[3]) >> 16 & 255)) + (24 << ((ᐃᐃⵠᐃⲆΔΔ ^ ⲆᐃΔⲆ[ⵠΔᐃⲆ]) >> 0 & 255)) + (0 << ((ᐃᐃⵠᐃⲆΔΔ ^ ⲆᐃΔⲆ[ⵠᐃᐃᐃ]) >> 8 & 255));
		return ⵠⲆⵠΔᐃⲆΔⲆΔ
	}
	var ⵠⲆⲆᐃΔⵠΔ = 0;

	function check_ads() {}
	var ⲆⵠⲆⲆⵠⵠⵠ = new XMLHttpRequest;
	ⲆⵠⲆⲆⵠⵠⵠ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
		if (this[ⲆⵠΔᐃᐃᐃΔ[103]] === Δⵠⵠⵠ && this.status === 0) {}
	};
	var ΔⵠΔᐃⵠ = "https://token.starve.io/";
	var ΔⵠΔᐃⲆ = "https://token2.starve.io/";
	var ⲆⲆΔⵠΔΔΔ = 0;
	var ⲆΔⲆΔⵠⲆⲆ = ΔΔᐃᐃ;
	var ⵠᐃᐃⵠⵠⵠⲆΔⵠ = 4;
	var ⲆⲆⵠⵠⵠⲆⵠ = ΔΔⵠⲆⵠ;
	var ΔⲆᐃΔΔ = ⵠΔΔᐃⵠ;
	var ⲆⵠᐃᐃΔ = ΔⵠᐃΔⵠ;
	var ΔⲆⵠᐃⵠⵠⵠⵠΔ = ⵠᐃΔᐃΔ;
	var ⲆⲆΔΔᐃΔⲆ = ᐃΔⵠⵠ;
	ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ = function() {
		ⲆⲆΔΔᐃΔⲆ = ⲆΔᐃⲆ
	};

	function ᐃⵠΔⵠᐃᐃᐃⲆᐃ() {
		if (ⵠΔΔⲆᐃ) {
			ΔⲆᐃΔΔ = Ⲇᐃⵠ.ⵠᐃⵠᐃⵠⲆⲆ(40);
			ⲆⲆⵠⵠⵠⲆⵠ = ⵠᐃᐃⵠⵠⵠⲆΔⵠ;
			ⲆⵠᐃᐃΔ = ⵠΔΔⲆᐃ["userId"];
			ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ();
			return
		}
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[ᐃⲆⲆⵠΔⵠᐃ]][ⵠ[559]]["getAuthInstance"]()["signIn"]()
	}
	var ⵠⵠᐃΔⲆⵠᐃᐃⲆ = undefined;
	var ⵠΔᐃᐃΔᐃⵠ = {
		"ⵠΔⲆⵠᐃᐃΔⵠΔ": "ACCESS_TOKEN"
	};
	var ᐃⵠⵠⲆ = document[ⲆⵠΔᐃᐃᐃΔ[325]]("script");
	ᐃⵠⵠⲆ["type"] = "text/javascript";
	ᐃⵠⵠⲆ["async"] = Δⵠⵠⵠⵠ;
	ᐃⵠⵠⲆ["src"] = "https://static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
	ᐃⵠⵠⲆ["addEventListener"](ⵠ[308], (function(ΔΔⵠ) {
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[423]][ⵠ[515]](ⵠΔᐃᐃΔᐃⵠ);
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[423]]["on"]("status-done", ⵠᐃᐃⲆⲆⵠᐃᐃΔ)
	}), ΔⵠⵠΔⲆ);
	var ΔᐃᐃⲆⲆᐃΔⲆⵠ = document.getElementsByTagName("head")[ⲆⲆⲆ];
	ΔᐃᐃⲆⲆᐃΔⲆⵠ[ⲆⵠΔᐃᐃᐃΔ[236]](ᐃⵠⵠⲆ);
	ⲆⲆⲆⲆᐃᐃᐃ["fbAsyncInit"] = function() {
		ᐃⲆⲆΔᐃᐃᐃ();
		console.log(ΔⲆⵠᐃᐃ)
	};
	(function(ⲆΔⲆᐃ, ᐃⵠⵠⲆ, ⲆΔ) {
		var ⵠᐃΔΔ, ⵠᐃⲆᐃⵠΔᐃ = ⲆΔⲆᐃ.getElementsByTagName(ᐃⵠⵠⲆ)[0];
		if (ⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[181]](ⲆΔ)) {
			return
		}
		ⵠᐃΔΔ = ⲆΔⲆᐃ[ⲆⵠΔᐃᐃᐃΔ[325]](ᐃⵠⵠⲆ);
		ⵠᐃΔΔ.id = ⲆΔ;
		ⵠᐃΔΔ.src = "https://connect.facebook.net/en_US/sdk.js";
		ⵠᐃⲆᐃⵠΔᐃ.parentNode.insertBefore(ⵠᐃΔΔ, ⵠᐃⲆᐃⵠΔᐃ)
	})(document, "script", "facebook-jssdk");

	function ᐃⲆⲆⲆᐃΔⵠΔⵠ() {
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["login"]((function(ᐃⵠⵠⲆⵠᐃᐃ) {
			if (ᐃⵠⵠⲆⵠᐃᐃ["authResponse"]) {
				ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["api"]("/me", (function(ᐃⵠⵠⲆⵠᐃᐃ) {
					ⲆⲆⵠⵠⵠⲆⵠ = ⲆΔⲆΔⵠⲆⲆ;
					ΔⲆᐃΔΔ = ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]][ⵠ[174]]()["accessToken"];
					ᐃⲆⲆΔᐃᐃᐃ();
					ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ()
				}))
			} else {}
		}))
	}
	var ᐃⵠⵠᐃΔΔᐃ = ΔΔⵠⲆⵠ;
	var ᐃⵠΔⵠΔ = undefined;
	var ⲆΔⵠᐃⲆᐃΔΔⵠ = function() {
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[14]][ⵠ[308]](ⵠ[559], ᐃΔⲆᐃⲆΔᐃᐃⲆ)
	};
	var ᐃΔⲆᐃⲆΔᐃᐃⲆ = function() {
		ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[ᐃΔⵠΔΔⵠⲆ]][ⵠ[559]][ⵠ[515]]({
			client_id: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
			scope: "https://www.googleapis.com/auth/userinfo.profile"
		}).then((ⵠⵠⲆᐃᐃⲆᐃⲆⵠ => {
			ᐃⵠⵠᐃΔΔᐃ = ⵠⵠⲆᐃᐃⲆᐃⲆⵠ;
			ᐃⵠⵠᐃΔΔᐃ["isSignedIn"]["listen"](ΔΔᐃᐃᐃᐃⲆΔΔ);
			ᐃⵠⵠᐃΔΔᐃ["currentUser"]["listen"](ⵠΔⲆᐃᐃΔⲆⵠⵠ);
			const ⵠΔΔⵠΔⵠᐃⵠᐃ = ᐃⵠⵠᐃΔΔᐃ["isSignedIn"]["get"]();
			if (ⵠΔΔⵠΔⵠᐃⵠᐃ) ᐃⵠⵠᐃΔΔᐃ["signIn"]();
			ΔⵠᐃⲆΔΔᐃⲆᐃ()
		}))
	};
	var ΔΔᐃᐃᐃᐃⲆΔΔ = function(ⲆᐃᐃΔⵠ) {};
	var ⵠΔⲆᐃᐃΔⲆⵠⵠ = function(ⲆΔⲆ) {
		if (ΔⲆᐃΔΔ === ⲆΔⲆᐃⲆ && ᐃᐃⲆⵠⲆ !== ᐃⵠΔⵠΔ) {
			ΔⲆᐃΔΔ = ᐃⵠΔⵠΔ[ⵠ[174]]()["id_token"];
			if (ᐃⲆᐃΔΔ !== ΔⲆᐃΔΔ) {
				ⲆⲆⵠⵠⵠⲆⵠ = ⲆⲆΔⵠΔΔΔ;
				ⲆⵠᐃᐃΔ = ᐃⵠΔⵠΔ["getBasicProfile"]()["getId"]();
				ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ();
				return
			}
		}
		ⲆΔⲆ !== ᐃᐃⲆⵠⲆ && true === ⲆΔⲆ["isSignedIn"]() && (ᐃⵠΔⵠΔ = ⲆΔⲆ, ⲆⵠᐃᐃΔ = ᐃⵠΔⵠΔ.id, ⲆⵠᐃᐃΔ = ᐃⵠΔⵠΔ["getBasicProfile"]()["getId"](), ΔⲆᐃΔΔ = ᐃⵠΔⵠΔ[ⵠ[174]]()["id_token"], ⲆⲆⵠⵠⵠⲆⵠ = ⲆⲆΔⵠΔΔΔ, ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ())
	};
	var ΔⵠᐃⲆΔΔᐃⲆᐃ = function() {
		if (ᐃⵠⵠᐃΔΔᐃ) ᐃⵠΔⵠΔ = ᐃⵠⵠᐃΔΔᐃ["currentUser"]["get"]()
	};
	ⲆⲆⲆⲆᐃᐃᐃ.onload = function() {
		ⲆΔⵠᐃⲆᐃΔΔⵠ()
	};

	function ⲆΔᐃᐃⵠΔΔΔⲆ(ᐃⵠⵠΔⵠᐃⵠⵠⵠ) {
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "login?token=" + ΔⲆᐃΔΔ + "&type=" + ⲆⲆⵠⵠⵠⲆⵠ + (ⵠΔΔⲆᐃ ? "&userId=" + ⵠΔΔⲆᐃ["userId"] + "&userInfo=" + ⵠΔΔⲆᐃ["userInfo"] : ""));
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (ⵠᐃⵠᐃⲆ === this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 === this.status) {
				ΔᐃΔⲆ.responseText !== "0" && ᐃⵠⵠΔⵠᐃⵠⵠⵠ(JSON.parse(ΔᐃΔⲆ.responseText))
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⵠᐃᐃⲆⲆⵠᐃᐃΔ() {
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "claimBread?userid=" + ⲆⵠᐃᐃΔ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (ᐃΔΔΔ == this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 == this.status) {
				if (ΔᐃΔⲆ.responseText !== "0") {
					var ΔⲆⲆⵠΔ = Number(ΔᐃΔⲆ.responseText);
					if (!isNaN(ΔⲆⲆⵠΔ)) ᐃᐃΔΔ.ΔⲆⲆⵠΔ = ΔⲆⲆⵠΔ
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ᐃⲆⲆΔᐃᐃᐃ() {
		if (ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]) ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]][ⵠ[515]]({
			xfbml: true,
			appId: "642017356260407",
			version: "v15.0",
			cookie: ⵠⲆᐃⲆᐃ
		});
		if (ⲆⵠᐃᐃΔ !== undefined) return;
		ⲆⲆⵠⵠⲆⵠⵠⲆΔ()
	}

	function ⵠⲆⲆᐃⲆⵠⲆⲆΔ() {
		ⲆΔⲆΔⵠⲆⲆ === ⲆⲆⵠⵠⵠⲆⵠ && ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]] && ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["getUserID"]() && ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["logout"]();
		ⲆⲆⵠⵠⵠⲆⵠ === ⲆⲆΔⵠΔΔΔ && ᐃⲆᐃᐃᐃ !== ᐃⵠΔⵠΔ && (ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[14]][ⵠ[559]]["getAuthInstance"]()["signOut"](), ᐃⵠΔⵠΔ = ⵠⵠⲆᐃⲆ);
		ⲆⵠᐃᐃΔ = undefined;
		ΔⲆᐃΔΔ = ᐃⲆᐃΔΔ;
		ⲆⲆⵠⵠⵠⲆⵠ = undefined;
		ᐃᐃΔΔ.ⲆⲆΔⲆΔ = ⵠⵠᐃᐃΔ;
		ᐃᐃΔΔ.ΔⲆⲆⵠΔ = ᐃΔⵠⵠ;
		ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ = 0;
		ᐃᐃΔΔ.ⲆΔΔΔⵠⵠᐃ();
		ⵠⲆΔⵠΔᐃᐃⲆΔ()
	}

	function ⲆΔᐃᐃⵠⵠᐃ(ⵠΔᐃᐃᐃ) {
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "setRegion?token=" + ΔⲆᐃΔΔ + ⵠ[21] + ⲆⵠᐃᐃΔ + "&region=" + ⵠΔᐃᐃᐃ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (this[ⲆⵠΔᐃᐃᐃΔ[103]] === ᐃⵠᐃᐃ && 200 === this.status) {
				if ("0" !== ΔᐃΔⲆ.responseText) ᐃᐃΔΔ.ᐃⵠΔᐃ(ᐃᐃΔΔ.ⲆΔᐃᐃⵠ);
				else ᐃᐃΔΔ.ᐃⵠΔᐃ(ᐃᐃΔΔ.ⲆⲆⵠⲆᐃ)
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ᐃᐃΔΔⵠᐃᐃ(ⲆᐃᐃⲆ) {
		if (!ⲆⵠᐃᐃΔ) return;
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "xsolla?userid=" + ⲆⵠᐃᐃΔ + "&item=" + ⲆᐃᐃⲆ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (this[ⲆⵠΔᐃᐃᐃΔ[103]] == 4 && this.status == 200) {
				ΔᐃΔⲆ.responseText !== "0" && (ⵠΔᐃᐃΔᐃⵠ["access_token"] = ΔᐃΔⲆ.responseText, ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[423]][ⵠ[515]](ⵠΔᐃᐃΔᐃⵠ), ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[423]]["open"]())
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ᐃⵠᐃⲆᐃⵠⵠΔⵠᐃⵠ() {
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "getScore?userid=" + ⲆⵠᐃᐃΔ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (this[ⲆⵠΔᐃᐃᐃΔ[103]] == ⲆⵠⵠⲆΔ && 200 == this.status) {
				if (ΔᐃΔⲆ.responseText !== "0") var ⲆⲆⲆΔ = JSON.parse(ΔᐃΔⲆ.responseText)
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⵠᐃⵠⲆΔΔᐃᐃᐃ() {
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "rebootServer?token=" + ΔⲆᐃΔΔ + ⵠ[21] + ⲆⵠᐃᐃΔ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (4 === this[ⲆⵠΔᐃᐃᐃΔ[103]] && this.status === 200) {
				if ("0" !== ΔᐃΔⲆ.responseText) {
					const ᐃⵠΔⵠᐃ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[167]).value.split(ⵠ[369]);
					location[ⲆⵠΔᐃᐃᐃΔ[208]] = ΔⲆᐃᐃⵠⲆΔ + "?server=" + ᐃⵠΔⵠᐃ[1] + "&region=" + ᐃⵠΔⵠᐃ[0]
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⵠᐃᐃᐃᐃΔⲆ(ᐃᐃᐃⲆΔⵠᐃΔΔ, ΔⲆⲆⵠΔ) {
		if (ᐃᐃΔΔ.ᐃΔΔⵠⵠ > 0) return;
		if (ᐃᐃΔΔ.ΔⲆⲆⵠΔ < ΔⲆⲆⵠΔ) {
			ᐃᐃΔΔ.ᐃⵠΔᐃ(ᐃᐃΔΔ.ⵠⵠΔⲆⲆ);
			return
		}
		ᐃᐃΔΔ.ᐃΔΔⵠⵠ = ⵠⵠⲆᐃ;
		ᐃᐃΔΔ.ᐃⲆΔⲆⲆΔΔ = 0;
		ᐃᐃΔΔ.ΔⵠΔΔⵠⲆΔ = ΔⵠΔⵠⵠ;
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "buySpin?token=" + ΔⲆᐃΔΔ + ⵠ[21] + ⲆⵠᐃᐃΔ + "&spin=" + ᐃᐃᐃⲆΔⵠᐃΔΔ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (4 == this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 == this.status) {
				if (ΔᐃΔⲆ.responseText !== "0") {
					var ⲆⲆⲆΔ = JSON.parse(ΔᐃΔⲆ.responseText);
					ᐃᐃΔΔ.ΔⲆⲆᐃⲆⵠᐃᐃⲆ(ⵠⵠⲆᐃ * (ⲆⲆⲆΔ["rand"] * Math.PI), ⲆⲆⲆΔ["type"], ⲆⲆⲆΔ[ⵠ[442]]);
					ᐃᐃΔΔ.ΔⲆⲆⵠΔ -= ΔⲆⲆⵠΔ
				} else ᐃᐃΔΔ.ᐃΔΔⵠⵠ = ⵠⲆⲆᐃ
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ΔΔⵠⲆΔⵠⲆ() {
		if (300 > ᐃᐃΔΔ.ΔⲆⲆⵠΔ && 0 < ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ) return;
		var ᐃΔⲆᐃⵠ = document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]).value.trim();
		document[ⲆⵠΔᐃᐃᐃΔ[181]](ⵠ[495]).value = ᐃΔⲆᐃⵠ;
		if (ᐃΔⲆᐃⵠ.length < ᐃⵠⵠ || ΔⲆΔᐃ < ᐃΔⲆᐃⵠ.length) return;
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "changeNickname?token=" + ΔⲆᐃΔΔ + ⵠ[21] + ⲆⵠᐃᐃΔ + "&nickname=" + encodeURIComponent(ᐃΔⲆᐃⵠ));
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (4 == this[ⲆⵠΔᐃᐃᐃΔ[103]] && this.status == 200) {
				if ("0" !== ΔᐃΔⲆ.responseText) {
					var ΔⲆⲆⵠΔ = Number(ΔᐃΔⲆ.responseText);
					if (ΔⲆⲆⵠΔ > 0) ᐃᐃΔΔ.ΔⲆⲆⵠΔ -= ΔⲆⲆⵠΔ;
					ᐃᐃΔΔ.ΔᐃⲆⲆⵠⵠⲆ = ᐃⵠ;
					ᐃᐃΔΔ.ᐃⵠΔᐃ(ᐃᐃΔΔ.ⵠⵠΔΔΔ)
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⲆⲆⵠⵠⲆⵠⵠⲆΔ() {
		try {
			if (ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]) {
				if (ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["getUserID"]()) {
					ⲆⵠᐃᐃΔ = ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["getUserID"]();
					ΔⲆᐃΔΔ === ΔⵠᐃΔⵠ && ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]]["getLoginStatus"]((function() {
						ⲆⲆⵠⵠⵠⲆⵠ = ⲆΔⲆΔⵠⲆⲆ;
						ΔⲆᐃΔΔ = ⲆⲆⲆⲆᐃᐃᐃ[ⵠ[343]][ⵠ[174]]()["accessToken"];
						ⲆⲆⲆⲆᐃᐃᐃ.ᐃⲆⵠᐃⲆⲆⲆ(ⲆⵠᐃᐃΔ)
					}))
				}
			}
		} catch (ΔΔⵠ) {}
		try {
			ⲆⵠᐃᐃΔ = ᐃⵠΔⵠΔ["getBasicProfile"]()["getId"]()
		} catch (ΔΔⵠ) {}
	}

	function ᐃΔΔⲆᐃ(ⲆᐃⵠΔⲆ, ΔⵠⲆⵠ, ⵠΔⵠΔᐃ, ⵠΔΔⲆⲆ) {
		ⲆᐃⵠΔⲆ = ⲆᐃⵠΔⲆ === ⵠᐃΔᐃΔ ? ᐃᐃΔΔ.ⲆᐃⲆᐃᐃⵠⵠ : ⲆᐃⵠΔⲆ;
		ΔⵠⲆⵠ = ΔⵠⲆⵠ === undefined ? ᐃᐃΔΔ.ⲆⲆⵠⵠΔᐃⵠ : ΔⵠⲆⵠ;
		ⵠΔⵠΔᐃ = undefined === ⵠΔⵠΔᐃ ? ᐃᐃΔΔ.ΔΔΔⲆⵠⲆΔ : ⵠΔⵠΔᐃ;
		ⵠΔΔⲆⲆ = ⵠΔΔⲆⲆ === ᐃᐃΔⲆⲆ ? ᐃᐃΔΔ.ⵠᐃᐃⲆᐃⲆⲆ : ⵠΔΔⲆⲆ;
		if (ⲆᐃⵠΔⲆ === ᐃᐃΔΔ.ⲆᐃⲆᐃᐃⵠⵠ && ᐃᐃΔΔ.ⲆⲆⵠⵠΔᐃⵠ === ΔⵠⲆⵠ && ᐃᐃΔΔ.ΔΔΔⲆⵠⲆΔ === ⵠΔⵠΔᐃ && ᐃᐃΔΔ.ⵠᐃᐃⲆᐃⲆⲆ === ⵠΔΔⲆⲆ) return;
		ᐃᐃΔΔ.ⲆᐃⲆᐃᐃⵠⵠ = ⲆᐃⵠΔⲆ;
		ᐃᐃΔΔ.ⲆⲆⵠⵠΔᐃⵠ = ΔⵠⲆⵠ;
		ᐃᐃΔΔ.ΔΔΔⲆⵠⲆΔ = ⵠΔⵠΔᐃ;
		ᐃᐃΔΔ.ⵠᐃᐃⲆᐃⲆⲆ = ⵠΔΔⲆⲆ;
		if (ⵠΔΔⲆⲆ === ᐃᐃΔΔ.ⲆⵠⲆⲆⲆΔΔ) ⵠΔΔⲆⲆ = "0";
		else if (ᐃᐃΔΔ.ⵠᐃⵠᐃⲆᐃⵠ === ⵠΔΔⲆⲆ) ⵠΔΔⲆⲆ = "1";
		else if (ⵠΔΔⲆⲆ === ᐃᐃΔΔ.ⵠⲆⵠⵠᐃΔᐃ) ⵠΔΔⲆⲆ = "2";
		else if (ⵠΔΔⲆⲆ === ᐃᐃΔΔ.ΔΔᐃΔⵠⵠᐃ) ⵠΔΔⲆⲆ = "3";
		else if (ⵠΔΔⲆⲆ === ᐃᐃΔΔ.ΔΔⵠΔⲆΔⲆ) ⵠΔΔⲆⲆ = "4";
		else ᐃᐃΔΔ.ⵠΔⲆⲆⲆΔⲆ === ⵠΔΔⲆⲆ && (ⵠΔΔⲆⲆ = "5");
		if (ᐃᐃΔΔ.ΔⵠⲆᐃᐃᐃⵠ === ΔⵠⲆⵠ) ΔⵠⲆⵠ = "total";
		else if (ᐃᐃΔΔ.ⲆⲆⲆⵠⲆΔΔ === ΔⵠⲆⵠ) ΔⵠⲆⵠ = "normal";
		else if (ΔⵠⲆⵠ === ᐃᐃΔΔ.ⲆⵠᐃⵠⲆΔᐃ) ΔⵠⲆⵠ = "zombie";
		else if (ᐃᐃΔΔ.ΔᐃⵠⵠⲆΔⲆ === ΔⵠⲆⵠ) ΔⵠⲆⵠ = "vampire";
		else if (ᐃᐃΔΔ.ᐃⲆΔⲆⵠΔᐃ === ΔⵠⲆⵠ) ΔⵠⲆⵠ = ⵠ[567];
		ⲆᐃⵠΔⲆ === ᐃᐃΔΔ.ΔΔⵠΔⲆⲆⲆ && (ⲆᐃⵠΔⲆ = "all");
		if (ᐃᐃΔΔ.ᐃⲆᐃΔⲆⲆⵠ === ⲆᐃⵠΔⲆ) ⲆᐃⵠΔⲆ = "week";
		ᐃᐃΔΔ.ⵠⲆᐃⲆᐃΔⵠ === ⲆᐃⵠΔⲆ && (ⲆᐃⵠΔⲆ = "today");
		if (ⵠΔⵠΔᐃ === ᐃᐃΔΔ.ΔⵠⲆⵠᐃᐃⲆ) ⵠΔⵠΔᐃ = "kill";
		else if (ᐃᐃΔΔ.ⵠΔᐃΔᐃᐃⵠ === ⵠΔⵠΔᐃ) ⵠΔⵠΔᐃ = ⵠ[289];
		else ᐃᐃΔΔ.ᐃⵠⲆⵠⵠⲆΔ === ⵠΔⵠΔᐃ && (ⵠΔⵠΔᐃ = ⵠ[448]);
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "leaderboard?range=" + ⲆᐃⵠΔⲆ + "&mode=" + ΔⵠⲆⵠ + "&sort=" + ⵠΔⵠΔᐃ + "&season=" + ⵠΔΔⲆⲆ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (Ⲇⵠⵠᐃᐃ == this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 == this.status) {
				if (ΔᐃΔⲆ.responseText !== "0") {
					var ⲆⲆⲆΔ = JSON.parse(ΔᐃΔⲆ.responseText);
					var ⲆⲆΔⵠⲆ = "";
					for (var ᐃⲆ = 0; ᐃⲆ < ⲆⲆⲆΔ.length; ᐃⲆ++) {
						ⵠᐃΔⲆⲆ = ⲆⲆⲆΔ[ᐃⲆ];
						var ᐃΔⲆᐃⵠ = ⵠᐃΔⲆⲆ[ᐃᐃΔᐃ];
						try {
							ᐃΔⲆᐃⵠ.indexOf("Starver#") === -ⵠⲆⲆ && (ᐃΔⲆᐃⵠ = ⲆⲆⲆⲆᐃᐃᐃ["decodeURIComponent"](ⲆⲆⲆⲆᐃᐃᐃ["escape"](ⲆⲆⲆⲆᐃᐃᐃ["atob"](ᐃΔⲆᐃⵠ))))
						} catch (ΔΔⵠ) {}
						ⲆⲆΔⵠⲆ += '<div class="lineLeaderboard">';
						ⲆⲆΔⵠⲆ += '<div class="rank">';
						ⲆⲆΔⵠⲆ += ᐃⲆ + ᐃΔⲆⵠ + "";
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += '<div class="name">';
						ⲆⲆΔⵠⲆ += ᐃΔⲆᐃⵠ;
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += '<div class="lvl">';
						ⲆⲆΔⵠⲆ += ᐃᐃΔΔ.ⵠⵠΔΔΔᐃΔ(ⵠᐃΔⲆⲆ[6]) + 1 + "";
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += '<div class="kills">';
						ⲆⲆΔⵠⲆ += ⵠᐃΔⲆⲆ[5] + "";
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += '<div class="time">';
						ⲆⲆΔⵠⲆ += ⵠᐃΔⲆⲆ[4] + "";
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += '<div class="score">';
						ⲆⲆΔⵠⲆ += ⵠᐃΔⲆⲆ[ⵠⵠⲆⵠ] + "";
						ⲆⲆΔⵠⲆ += ⵠ[183];
						ⲆⲆΔⵠⲆ += ⵠ[183]
					}
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("leaderboard")[ⲆⵠΔᐃᐃᐃΔ[359]] = ⲆⲆΔⵠⲆ
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⲆΔᐃΔΔΔΔⲆⲆ() {
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "getBreadAndScore?userid=" + ⲆⵠᐃᐃΔ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (ⵠⲆᐃᐃ == this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 == this.status) {
				if (ΔᐃΔⲆ.responseText !== "0") {
					var ⲆⲆⲆΔ = JSON.parse(ΔᐃΔⲆ.responseText);
					var ⲆΔⲆᐃ = ⲆⲆⲆΔ["b"] - ᐃᐃΔΔ.ΔⲆⲆⵠΔ;
					ᐃᐃΔΔ.ΔⲆⲆⵠΔ = ⲆⲆⲆΔ["b"];
					ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ = ⲆⲆⲆΔ["s"];
					ᐃᐃΔΔ.ⲆΔⵠⵠΔ = ᐃᐃΔΔ.ⵠⵠΔΔΔᐃΔ(ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ);
					ᐃᐃΔΔ.ⵠᐃΔⵠᐃⲆᐃ = ᐃᐃΔΔ.ᐃⲆΔᐃⵠⲆΔ(ᐃᐃΔΔ.ⵠⲆⲆᐃᐃ);
					ᐃᐃΔΔ.ⵠᐃᐃΔⲆΔⵠ = ΔⲆⵠ;
					document[ⲆⵠΔᐃᐃᐃΔ[181]]("breadWonInner")[ⲆⵠΔᐃᐃᐃΔ[359]] = "" + ⲆΔⲆᐃ
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function ⵠᐃΔⲆⵠⵠΔ(ⵠΔᐃⵠⵠΔᐃⵠⲆ, ΔⲆⲆⵠΔ) {
		if (ΔⲆⲆⵠΔ > ᐃᐃΔΔ.ΔⲆⲆⵠΔ) {
			ᐃᐃΔΔ.ᐃⵠΔᐃ(ᐃᐃΔΔ.ⵠⵠΔⲆⲆ);
			return
		}
		var ΔᐃΔⲆ = new XMLHttpRequest;
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[88]](ⵠ[121], ΔⵠΔᐃⵠ + "buyKit?token=" + ΔⲆᐃΔΔ + ⵠ[21] + ⲆⵠᐃᐃΔ + "&kit=" + ⵠΔᐃⵠⵠΔᐃⵠⲆ);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[186]](ⵠ[485], ⵠ[226]);
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[126]] = function() {
			if (ⵠΔΔᐃ == this[ⲆⵠΔᐃᐃᐃΔ[103]] && 200 == this.status) {
				if ("0" !== ΔᐃΔⲆ.responseText) {
					var ⲆⲆⲆΔ = JSON.parse(ΔᐃΔⲆ.responseText);
					ᐃᐃΔΔ.ΔⲆⲆⵠΔ -= ΔⲆⲆⵠΔ;
					ᐃᐃΔΔ.ⲆⲆΔⲆΔ = Date.now() + Number(ⲆⲆⲆΔ)
				}
			}
		};
		ΔᐃΔⲆ[ⲆⵠΔᐃᐃᐃΔ[226]]()
	}

	function Abdo() {
		for (const property in Settings) {
			localStorage.getItem(property + "abdo") && (Settings[property] = JSON.parse(localStorage.getItem(property + "abdo")))
		}
		Settings.SwordInChest.enabled = false;
		Settings.AutoCraft.enabled = false;
		Settings.AutoRecycle.enabled = false;
		Settings.AutoSpike.enabled = false;
		Settings.DropSword.enabled = false;
		Settings.AutoSeed.enabled = false;
		Settings.AutoBuild.enabled = false;
		Settings.AutoSteal.enabled = false;
		Settings.Spectator.enabled = false;
		Settings.AutoExtractorTake.enabled = false;
		Settings.AutoExtractorPut.enabled = false;
		Settings.AutoBreadTake.enabled = false;
		Settings.AutoBreadPut.enabled = false;
		Settings.AutoTotem.enabled = false;
		const gui = new guify({
			title: "Abdo v4 (fixed)",
			align: "right",
			width: 650,
			opacity: .67,
			barMode: "none",
			theme: {
				colors: {
					panelBackground: guiTheme === "Light" ? "rgb(255,255,255)" : "rgb(0,0,0)",
					componentBackground: guiTheme === "Light" ? "rgb(222,222,222)" : "rgb(10,10,35)",
					componentForeground: guiColor,
					textPrimary: guiColor,
					textSecondary: guiColor,
					textHover: guiTheme === "Light" ? "rgb(255,255,255)" : "rgb(0,0,0)"
				},
				font: {
					fontFamily: "Baloo Paaji",
					fontSize: "20px"
				}
			}
		});

		function saveSettings() {
			for (const property in Settings) {
				localStorage.setItem(property + "abdo", JSON.stringify(Settings[property]))
			}
		}

		function setKeybind(property) {
			if (!Settings[property] || !Settings[property].key) return;
			Settings[property].key = "Press Any Key";
			document.addEventListener("keydown", setBind = event => {
				event.code === "Escape" ? Settings[property].key = "NONE" : Settings[property].key = event.code;
				saveSettings();
				document.removeEventListener("keydown", setBind)
			})
		}
		gui.Register([{
			type: "folder",
			label: "Visuals",
			open: false
		}, {
			type: "folder",
			label: "Misc",
			open: false
		}, {
			type: "folder",
			label: "Binds",
			open: false
		}, {
			type: "folder",
			label: "AutoSpike",
			open: false
		}, {
			type: "folder",
			label: "AutoCraft&AutoRecycle",
			open: false
		}, {
			type: "folder",
			label: "Spectator",
			open: false
		}, {
			type: "folder",
			label: "Gui",
			open: false
		}]);
		gui.Register([{
			type: "checkbox",
			label: "PlayerOnTop",
			object: Settings.PlayerOnTop,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "BoxOnTop",
			object: Settings.BoxOnTop,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "Timers",
			object: Settings.Timers,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "ShowHP",
			object: Settings.ShowHP,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "DaysCounter",
			object: Settings.DaysCounter,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "ColoredSpikes",
			object: Settings.ColoredSpikes,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "Roofs",
			object: Settings.Roofs,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "KrakenTracers",
			object: Settings.KrakenTracers,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "SandwormTracers",
			object: Settings.SandwormTracers,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "ChestInfo",
			object: Settings.ChestInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "TotemInfo",
			object: Settings.TotemInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "BoxInfo",
			object: Settings.BoxInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "BuildsInfo",
			object: Settings.BuildsInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "WeatherInfo",
			object: Settings.WeatherInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "ExtractorInfo",
			object: Settings.ExtractorInfo,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "ListEnabledHacks",
			object: Settings.ListEnabledHacks,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "NoFog",
			object: Settings.NoFog,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "Xray",
			object: Settings.Xray,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}], {
			folder: "Visuals"
		});
		gui.Register([{
			type: "checkbox",
			label: "AutoRespawn",
			object: Settings.AutoRespawn,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AntiKick",
			object: Settings.AntiKick,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoFeed",
			object: Settings.AutoFeed,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoTotem",
			object: Settings.AutoTotem,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoCrown",
			object: Settings.AutoCrown,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoSteal",
			object: Settings.AutoSteal,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoBook",
			object: Settings.AutoBook,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoIce",
			object: Settings.AutoIce,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoExtractorTake",
			object: Settings.AutoExtractorTake,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoExtractorPut",
			object: Settings.AutoExtractorPut,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoBreadTake",
			object: Settings.AutoBreadTake,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoBreadPut",
			object: Settings.AutoBreadPut,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AimBot",
			object: Settings.AimBot,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoSeed",
			object: Settings.AutoSeed,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "checkbox",
			label: "AutoBuild",
			object: Settings.AutoBuild,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSeed Seed",
			object: Settings.AutoSeed,
			property: "seed",
			options: ["Berry", "Wheat", "Pumpkin", "Thornbush", "Aloe", "Watermelon", "Garlic", "Carrot", "Tomato"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoBuild Build",
			object: Settings.AutoBuild,
			property: "build",
			options: ["Roofs", "Bridges", "Plots"],
			onChange() {
				saveSettings()
			}
		}], {
			folder: "Misc"
		});
		gui.Register([{
			type: "display",
			label: "AutoTotem Key",
			object: Settings.AutoTotem,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoTotem Key",
			action() {
				setKeybind("AutoTotem")
			}
		}, {
			type: "display",
			label: "AutoSteal Key",
			object: Settings.AutoSteal,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoSteal Key",
			action() {
				setKeybind("AutoSteal")
			}
		}, {
			type: "display",
			label: "AutoExtractorTake Key",
			object: Settings.AutoExtractorTake,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoExtractorTake Key",
			action() {
				setKeybind("AutoExtractorTake")
			}
		}, {
			type: "display",
			label: "AutoExtractorPut Key",
			object: Settings.AutoExtractorPut,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoExtractorPut Key",
			action() {
				setKeybind("AutoExtractorPut")
			}
		}, {
			type: "display",
			label: "AutoBreadTake Key",
			object: Settings.AutoBreadTake,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoBreadTake Key",
			action() {
				setKeybind("AutoBreadTake")
			}
		}, {
			type: "display",
			label: "AutoBreadPut Key",
			object: Settings.AutoBreadPut,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoBreadPut Key",
			action() {
				setKeybind("AutoBreadPut")
			}
		}, {
			type: "display",
			label: "DropSword Key",
			object: Settings.DropSword,
			property: "key"
		}, {
			type: "button",
			label: "Set DropSword Key",
			action() {
				setKeybind("DropSword")
			}
		}, {
			type: "display",
			label: "SwordInChest Key",
			object: Settings.SwordInChest,
			property: "key"
		}, {
			type: "button",
			label: "Set SwordInChest Key",
			action() {
				setKeybind("SwordInChest")
			}
		}, {
			type: "display",
			label: "AutoSeed Key",
			object: Settings.AutoSeed,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoSeed Key",
			action() {
				setKeybind("AutoSeed")
			}
		}, {
			type: "display",
			label: "AutoBuild Key",
			object: Settings.AutoBuild,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoBuild Key",
			action() {
				setKeybind("AutoBuild")
			}
		}, {
			type: "display",
			label: "AutoFire Key",
			object: Settings.AutoFire,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoFire Key",
			action() {
				setKeybind("AutoFire")
			}
		}, {
			type: "display",
			label: "AimBot Key",
			object: Settings.AimBot,
			property: "key"
		}, {
			type: "button",
			label: "Set AimBot Key",
			action() {
				setKeybind("AimBot")
			}
		}, {
			type: "display",
			label: "Xray Key",
			object: Settings.Xray,
			property: "key"
		}, {
			type: "button",
			label: "Set Xray Key",
			action() {
				setKeybind("Xray")
			}
		}], {
			folder: "Binds"
		});
		gui.Register([{
			type: "display",
			label: "AutoSpike Key",
			object: Settings.AutoSpike,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoSpike Key",
			action() {
				setKeybind("AutoSpike")
			}
		}, {
			type: "checkbox",
			label: "AutoSpike 2",
			object: Settings.AutoSpike,
			property: "mode",
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 1",
			object: Settings.AutoSpike.priority,
			property: "0",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 2",
			object: Settings.AutoSpike.priority,
			property: "1",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 3",
			object: Settings.AutoSpike.priority,
			property: "2",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 4",
			object: Settings.AutoSpike.priority,
			property: "3",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 5",
			object: Settings.AutoSpike.priority,
			property: "4",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 6",
			object: Settings.AutoSpike.priority,
			property: "5",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}, {
			type: "select",
			label: "AutoSpike Priority 7",
			object: Settings.AutoSpike.priority,
			property: "6",
			options: ["Reidite Spike", "Amethyst Spike", "Diamond Spike", "Gold Spike", "Stone Spike", "Wood Spike", "Wood Wall"],
			onChange() {
				saveSettings()
			}
		}], {
			folder: "AutoSpike"
		});
		gui.Register([{
			type: "checkbox",
			label: "AutoCraft Enabled",
			object: Settings.AutoCraft,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "display",
			label: "AutoCraft Key",
			object: Settings.AutoCraft,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoCraft Key",
			action() {
				setKeybind("AutoCraft")
			}
		}, {
			type: "checkbox",
			label: "AutoRecycle Enabled",
			object: Settings.AutoRecycle,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "display",
			label: "AutoRecycle Key",
			object: Settings.AutoRecycle,
			property: "key"
		}, {
			type: "button",
			label: "Set AutoRecycle Key",
			action() {
				setKeybind("AutoRecycle")
			}
		}], {
			folder: "AutoCraft&AutoRecycle"
		});
		gui.Register([{
			type: "checkbox",
			label: "Spectator",
			object: Settings.Spectator,
			property: "enabled",
			onChange() {
				saveSettings()
			}
		}, {
			type: "range",
			label: "Spectator Speed",
			min: .05,
			step: .05,
			max: 1,
			object: Settings.Spectator,
			property: "speed",
			onChange() {
				saveSettings()
			}
		}, {
			type: "display",
			label: "Spectator Key",
			object: Settings.Spectator,
			property: "key"
		}, {
			type: "button",
			label: "Set Spectator Key",
			action() {
				setKeybind("Spectator")
			}
		}], {
			folder: "Spectator"
		});
		gui.Register([{
			type: "select",
			label: "Gui Theme",
			initial: guiTheme,
			options: ["Light", "Dark"],
			onChange(value) {
				localStorage.setItem("abdo_gui_theme", value)
			}
		}, {
			type: "color",
			label: "Gui Color",
			initial: guiColor,
			onChange(value) {
				localStorage.setItem("abdo_gui_color", value)
			}
		}], {
			folder: "Gui"
		});
		delete window.guify;

		function angleCalculator(a, b) {
			let angle;
			if (a + b > 254) {
				angle = a + b - 254
			}
			if (a + b < 0) {
				angle = 254 + (a + b)
			}
			if (a + b >= 0 && a + b < 254) {
				angle = a + b
			}
			return angle
		}

		function holdingGearType(myPlayer) {
			if (!myPlayer || myPlayer.right == undefined) return;
			switch (myPlayer.right) {
				case 57:
				case 0:
				case 5:
				case 6:
				case 30:
				case 19:
				case 62:
				case 63:
				case 22:
					return "SWORD";
				case 12:
				case 13:
				case 14:
				case 15:
				case 33:
				case 34:
				case 18:
				case 16:
				case 17:
					return "SPEAR";
				case 9:
					return "PIRATE"
			}
		}

		function findTarget(a, b, c) {
			for (const p of b) {
				if (!isAlly(p) && Ⲇᐃⵠ.ⵠⵠΔᐃ(a, p) <= c && (p.ᐃᐃⵠΔⵠⵠⵠ && a.ᐃᐃⵠΔⵠⵠⵠ || !p.ᐃᐃⵠΔⵠⵠⵠ && !a.ᐃᐃⵠΔⵠⵠⵠ)) return p
			}
		}

		function calcAngle(e, o, i) {
			return e && o ? i ? Math.atan2(o.r.y - e.r.y, o.r.x - e.r.x) : Math.atan2(o.y - e.y, o.x - e.x) : null
		}
		document.addEventListener("keydown", (event => {
			if (!ⲆΔⲆ) return;
			if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			if (ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			for (const hack in Settings) {
				if (Settings[hack].key === event.code && Settings[hack].keyMode === "hold") {
					Settings[hack].enabled = true
				}
			}
		}));
		document.addEventListener("keyup", (event => {
			if (!ⲆΔⲆ) return;
			if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			if (ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			for (const hack in Settings) {
				if (Settings[hack].key === event.code && Settings[hack].keyMode === "hold") {
					Settings[hack].enabled = false
				}
			}
		}));
		document.addEventListener("keypress", (event => {
			if (!ⲆΔⲆ) return;
			if (ⲆΔⲆ.ᐃΔᐃᐃᐃ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			if (ⲆΔⲆ.ᐃᐃᐃⵠΔ[ⲆⵠΔᐃᐃᐃΔ[88]]) return;
			for (const hack in Settings) {
				if (Settings[hack].key === event.code && Settings[hack].keyMode === "press") {
					Settings[hack].enabled = !Settings[hack].enabled;
					if (hack == "Spectator" && !Settings[hack].enabled) ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ΔᐃⲆᐃΔᐃᐃ[ᐃⵠⵠⲆᐃᐃⲆ].stringify([29]))
				}
			}
		}));
		const stamps = {
			AutoCraft: Date.now(),
			AutoRecycle: Date.now(),
			AutoSpike: Date.now(),
			AutoCrown: Date.now(),
			AutoExtractorTake: Date.now(),
			AutoExtractorPut: Date.now(),
			AutoTotem: Date.now(),
			AutoSteal: Date.now(),
			AutoBreadTake: Date.now(),
			AutoBreadPut: Date.now(),
			AutoBuild: Date.now(),
			AutoSeed: Date.now(),
			DropSword: Date.now(),
			AutoFire: Date.now(),
			AntiKick: Date.now(),
			SwordInChest: Date.now()
		};

		function AntiKick() {
			if (currentlyPlaying && ΔⵠΔΔ && Settings.AntiKick.enabled) ᐃΔᐃⵠ.ping()
		}
		setInterval(AntiKick, 1e3);

		function Engine() {
			requestAnimationFrame(Engine);
			if (!ⲆΔΔ || !ⲆΔΔ.ΔⲆΔⵠΔ || !ⲆΔⲆ || !currentlyPlaying) return;
			const stamp = Date.now();
			const me = ⲆΔΔ.ΔⲆΔⵠΔ[ⲆΔⲆ.ⲆⲆᐃΔ];
			const pi2 = Math.PI * 2;
			if (Settings.AutoSpike.enabled) {
				if (stamp - stamps.AutoSpike > 80) {
					let bestSpike;
					for (const spike of Settings.AutoSpike.priority) {
						if (spike === "Reidite Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[219]) {
							bestSpike = 219;
							break
						} else if (spike === "Amethyst Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[123]) {
							bestSpike = 123;
							break
						} else if (spike === "Diamond Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[170]) {
							bestSpike = 170;
							break
						} else if (spike === "Gold Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[169]) {
							bestSpike = 169;
							break
						} else if (spike === "Stone Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[168]) {
							bestSpike = 168;
							break
						} else if (spike === "Wood Spike" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[160]) {
							bestSpike = 160;
							break
						} else if (spike === "Wood Wall" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[162]) {
							bestSpike = 162;
							break
						}
					}
					if (bestSpike) {
						const angle = Math.floor(255 * ((me.angle + pi2) % pi2) / pi2);
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, bestSpike, angle, 0]));
						if (Settings.AutoSpike.mode) {
							for (let i = 0; i < 20; i += 2) {
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, bestSpike, angleCalculator(angle, i), 0]));
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, bestSpike, angleCalculator(angle, -i), 0]))
							}
						}
					}
					stamps.AutoSpike = stamp
				}
			}
			if (Settings.AutoFire.enabled && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[113]) {
				if (stamp - stamps.AutoFire > 100) {
					ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 113, Math.floor(255 * ((me.angle + pi2) % pi2) / pi2), 0]));
					stamps.AutoFire = stamp
				}
			}
			if (Settings.AutoBuild.enabled) {
				if (stamp - stamps.AutoBuild > 100) {
					if (Settings.AutoBuild.build === "Roofs" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[190]) {
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 190, Math.floor(255 * ((me.angle + pi2) % pi2) / pi2), 1]))
					} else if (Settings.AutoBuild.build === "Bridges" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[125]) {
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 125, Math.floor(255 * ((me.angle + pi2) % pi2) / pi2), 1]))
					} else if (Settings.AutoBuild.build === "Plots" && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[141]) {
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 141, Math.floor(255 * ((me.angle + pi2) % pi2) / pi2), 1]))
					}
					stamps.AutoBuild = stamp
				}
			}
			if (Settings.AutoSeed.enabled) {
				if (stamp - stamps.AutoSeed > 100) {
					let seedId;
					switch (Settings.AutoSeed.seed) {
						case "Berry":
							seedId = 115;
							break;
						case "Wheat":
							seedId = 132;
							break;
						case "Pumpkin":
							seedId = 188;
							break;
						case "Thornbush":
							seedId = 193;
							break;
						case "Aloe":
							seedId = 210;
							break;
						case "Watermelon":
							seedId = 208;
							break;
						case "Garlic":
							seedId = 191;
							break;
						case "Carrot":
							seedId = 204;
							break;
						case "Tomato":
							seedId = 206;
							break
					}
					if (seedId && ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[seedId]) {
						const pi2 = Math.PI * 2;
						const angle = Math.floor(255 * ((me.angle + pi2) % pi2) / pi2);
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, seedId, angle, 1]))
					}
					stamps.AutoSeed = stamp
				}
			}
			if (Settings.DropSword.enabled) {
				if (stamp - stamps.DropSword > 60) {
					if (holdingGearType(me)) {
						ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([11, me.right]))
					}
					stamps.DropSword = stamp
				}
			}
			if (Settings.AutoCraft.enabled && Settings.AutoCraft.last != null) {
				if (stamp - stamps.AutoCraft > 60) {
					ᐃΔᐃⵠ.ΔⲆᐃᐃⲆΔᐃⵠⲆ(Settings.AutoCraft.last);
					stamps.AutoCraft = stamp
				}
			}
			if (Settings.AutoRecycle.enabled && Settings.AutoRecycle.last != null) {
				if (stamp - stamps.AutoRecycle > 120) {
					ᐃΔᐃⵠ.ⵠⵠⲆΔᐃⵠⲆΔⲆ(Settings.AutoRecycle.last);
					stamps.AutoRecycle = stamp
				}
			}
			if (Settings.AutoCrown.enabled && ⲆΔⲆ.ΔΔᐃⲆΔ.enabled && autoCrownReady) {
				if (stamp - stamps.AutoCrown > 60) {
					const resurrections = ⲆΔΔ.ⵠᐃⲆ[22];
					resurrections.forEach((resurrection => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(resurrection, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([33, resurrection.pid, resurrection.id]))
						}
					}));
					stamps.AutoCrown = stamp
				}
			}
			if (Settings.Spectator.enabled) {
				ⵠΔⵠᐃᐃ.ⵠᐃΔΔᐃⲆⵠ() && (ⲆΔⲆ.ⵠΔΔ.x += Settings.Spectator.speed * 100);
				ⵠΔⵠᐃᐃ.ⲆⵠⵠΔⲆⵠⵠ() && (ⲆΔⲆ.ⵠΔΔ.x -= Settings.Spectator.speed * 100);
				ⵠΔⵠᐃᐃ.ᐃᐃⵠⵠⲆᐃᐃ() && (ⲆΔⲆ.ⵠΔΔ.y -= Settings.Spectator.speed * 100);
				ⵠΔⵠᐃᐃ.ⵠⲆᐃᐃΔⲆⲆ() && (ⲆΔⲆ.ⵠΔΔ.y += Settings.Spectator.speed * 100)
			}
			if (Settings.AutoTotem.enabled) {
				if (stamp - stamps.AutoTotem > 80) {
					const totems = ⲆΔΔ.ⵠᐃⲆ[29];
					totems.forEach((totem => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(totem, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([38, totem.pid, totem.id]))
						}
					}));
					stamps.AutoTotem = stamp
				}
			}
			if (Settings.AutoExtractorTake.enabled) {
				if (stamp - stamps.AutoExtractorTake > 80) {
					const extractors = [ⲆΔΔ.ⵠᐃⲆ[24], ⲆΔΔ.ⵠᐃⲆ[25], ⲆΔΔ.ⵠᐃⲆ[26], ⲆΔΔ.ⵠᐃⲆ[27], ⲆΔΔ.ⵠᐃⲆ[28]];
					for (let i = 0; i < extractors.length; i++) {
						extractors[i].forEach((ex => {
							if (Ⲇᐃⵠ.ⵠⵠΔᐃ(ex, me) <= 300) {
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([1, ex.pid, ex.id, ex.type]))
							}
						}))
					}
					stamps.AutoExtractorTake = stamp
				}
			}
			if (Settings.AutoExtractorPut.enabled) {
				if (stamp - stamps.AutoExtractorPut > 80) {
					const extractors = [ⲆΔΔ.ⵠᐃⲆ[24], ⲆΔΔ.ⵠᐃⲆ[25], ⲆΔΔ.ⵠᐃⲆ[26], ⲆΔΔ.ⵠᐃⲆ[27], ⲆΔΔ.ⵠᐃⲆ[28]];
					for (let i = 0; i < extractors.length; i++) {
						extractors[i].forEach((ex => {
							if (Ⲇᐃⵠ.ⵠⵠΔᐃ(ex, me) <= 300) {
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([9, 255, ex.pid, ex.id, ex.type]))
							}
						}))
					}
					stamps.AutoExtractorPut = stamp
				}
			}
			if (Settings.AutoBreadTake.enabled) {
				if (stamp - stamps.AutoBreadTake > 80) {
					const ovens = ⲆΔΔ.ⵠᐃⲆ[34];
					const windmills = ⲆΔΔ.ⵠᐃⲆ[32];
					ovens.forEach((oven => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(oven, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([12, oven.pid, oven.id]))
						}
					}));
					windmills.forEach((windmill => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(windmill, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([26, windmill.pid, windmill.id]))
						}
					}));
					stamps.AutoBreadTake = stamp
				}
			}
			if (Settings.AutoBreadPut.enabled) {
				if (stamp - stamps.AutoBreadPut > 80) {
					const ovens = ⲆΔΔ.ⵠᐃⲆ[34];
					const windmills = ⲆΔΔ.ⵠᐃⲆ[32];
					ovens.forEach((oven => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(oven, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([17, 255, oven.pid, oven.id]));
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([0, 255, oven.pid, oven.id]))
						}
					}));
					windmills.forEach((windmill => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(windmill, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([14, 255, windmill.pid, windmill.id]))
						}
					}));
					stamps.AutoBreadPut = stamp
				}
			}
			if (Settings.AimBot.enabled) {
				let n = 0;
				switch (holdingGearType(me)) {
					case "SWORD":
						n = 140;
						break;
					case "SPEAR":
						n = 200;
						break;
					case "PIRATE":
						n = 150;
						break
				}
				if (n) {
					const target = findTarget(me, ⲆΔΔ.ⵠᐃⲆ[0], n);
					if (target) {
						Settings.AimBot.angle = calcAngle(me, target, true);
						ᐃΔᐃⵠ.ⲆΔΔⵠΔᐃᐃⵠᐃ(Settings.AimBot.angle);
						ᐃΔᐃⵠ.ᐃΔᐃⲆᐃΔΔᐃᐃ()
					} else Settings.AimBot.angle = null
				} else Settings.AimBot.angle = null
			}
			if (Settings.SwordInChest.enabled) {
				if (stamp - stamps.SwordInChest > 60) {
					if (holdingGearType(me)) {
						const Chests = {
							A: []
						};
						for (let Chest = ⲆΔΔ.ⵠᐃⲆ[11], i = 0; i < Chest.length; i++) {
							if (Ⲇᐃⵠ.ⵠⵠΔᐃ(me, Chest[i]) < 300) {
								if (!Chest[i].lock || isAlly(Chest[i])) {
									Chests.A.push({
										id: Chest[i].id,
										placeid: Chest[i].pid
									})
								} else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[167]) {
									Chests.L.push({
										id: Chest[i].id,
										placeid: Chest[i].pid,
										x: Chest[i].x,
										y: Chest[i].y
									})
								}
							}
						}
						if (Chests.A.length) {
							for (let i = 0; i < Chests.A.length; i++) {
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([13, me.right, 255, Chests.A[i].placeid, Chests.A[i].id]));
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([27, Chests.A[i].placeid, Chests.A[i].id]))
							}
						} else if (ⲆΔⲆ.ⵠΔᐃᐃ.ᐃⵠⲆ[167]) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 167, 35, 0]));
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 167, 235, 0]));
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 167, 100, 0]));
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([15, 167, 169, 0]))
						}
					}
					stamps.SwordInChest = stamp
				}
			}
			if (Settings.AutoSteal.enabled) {
				if (stamp - stamps.AutoSteal > 60) {
					const chests = ⲆΔΔ.ⵠᐃⲆ[11];
					const ovens = ⲆΔΔ.ⵠᐃⲆ[34];
					const windmills = ⲆΔΔ.ⵠᐃⲆ[32];
					const extractors = [ⲆΔΔ.ⵠᐃⲆ[24], ⲆΔΔ.ⵠᐃⲆ[25], ⲆΔΔ.ⵠᐃⲆ[26], ⲆΔΔ.ⵠᐃⲆ[27], ⲆΔΔ.ⵠᐃⲆ[28]];
					chests.forEach((chest => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(chest, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([27, chest.pid, chest.id]))
						}
					}));
					ovens.forEach((oven => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(oven, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([12, oven.pid, oven.id]))
						}
					}));
					windmills.forEach((windmill => {
						if (Ⲇᐃⵠ.ⵠⵠΔᐃ(windmill, me) <= 300) {
							ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([26, windmill.pid, windmill.id]))
						}
					}));
					for (let i = 0; i < extractors.length; i++) {
						extractors[i].forEach((ex => {
							if (Ⲇᐃⵠ.ⵠⵠΔᐃ(ex, me) <= 300) {
								ᐃΔᐃⵠ.ᐃⵠᐃⵠ[ⵠⲆⵠⲆ](ⲆᐃⵠⲆᐃᐃⲆ[ⵠΔⲆⲆᐃΔᐃ].stringify([1, ex.pid, ex.id, ex.type]))
							}
						}))
					}
					stamps.AutoSteal = stamp
				}
			}
		}
		Engine()
	}
	Abdo()
})();
